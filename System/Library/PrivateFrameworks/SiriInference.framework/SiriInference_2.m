void sub_1C012EF50(void *a1)
{
  void *v1;
  id v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t i;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  void *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD v58[4];

  objc_opt_self();
  if (OUTLINED_FUNCTION_14_26())
  {
    v2 = OUTLINED_FUNCTION_34_15();
    v4 = objc_msgSend(v1, sel_contacts);
    if (v4)
      goto LABEL_9;

  }
  objc_opt_self();
  if (OUTLINED_FUNCTION_14_26())
  {
    OUTLINED_FUNCTION_34_15();
    v4 = OUTLINED_FUNCTION_22_16();
    if (!v4)
    {

      goto LABEL_7;
    }
LABEL_9:
    v5 = v4;
    sub_1C0132288();
    v6 = sub_1C0304138();

    v39 = v6;
    goto LABEL_10;
  }
LABEL_7:
  objc_opt_self();
  if (OUTLINED_FUNCTION_14_26())
  {
    OUTLINED_FUNCTION_34_15();
    v4 = OUTLINED_FUNCTION_22_16();
    if (v4)
      goto LABEL_9;

  }
  v39 = MEMORY[0x1E0DEE9D8];
  v46 = MEMORY[0x1E0DEE9D8];
  v21 = sub_1C01321B4(a1);
  if (!v21)
  {
LABEL_10:
    if (v39 >> 62)
    {
LABEL_55:
      OUTLINED_FUNCTION_9_2();
      v7 = sub_1C03047F8();
      if (v7)
        goto LABEL_12;
    }
    else
    {
      v7 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
      OUTLINED_FUNCTION_9_2();
      if (v7)
      {
LABEL_12:
        if (v7 < 1)
        {
          __break(1u);
          goto LABEL_58;
        }
        v8 = 0;
        v9 = MEMORY[0x1E0DEE9D8];
        v38 = v7;
        do
        {
          if ((v39 & 0xC000000000000001) != 0)
            v10 = (id)MEMORY[0x1C3B975EC](v8, v39);
          else
            v10 = *(id *)(v39 + 8 * v8 + 32);
          sub_1C0130CEC(v10, &v47);
          v11 = v47;
          v12 = v48;
          v13 = v49;
          v14 = v50;
          v15 = v51;
          v16 = v52;
          v41 = v54;
          v43 = v53;
          v40 = v55;
          sub_1C01323F0((uint64_t)&v47, (uint64_t)&v56, &qword_1EF5BC358);
          if (v57)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              OUTLINED_FUNCTION_39_8();
              v9 = v19;
            }
            v17 = *(_QWORD *)(v9 + 16);
            if (v17 >= *(_QWORD *)(v9 + 24) >> 1)
            {
              OUTLINED_FUNCTION_39_8();
              v9 = v20;
            }
            *(_QWORD *)(v9 + 16) = v17 + 1;
            v18 = v9 + 80 * v17;
            *(_QWORD *)(v18 + 32) = v11;
            *(_QWORD *)(v18 + 40) = v12;
            *(_OWORD *)(v18 + 48) = v13;
            *(_QWORD *)(v18 + 64) = v14;
            *(_QWORD *)(v18 + 72) = v15;
            *(_QWORD *)(v18 + 80) = v16;
            *(_QWORD *)(v18 + 88) = v43;
            *(_QWORD *)(v18 + 96) = v41;
            *(_QWORD *)(v18 + 104) = v40;
            v7 = v38;
          }
          ++v8;
        }
        while (v7 != v8);
      }
    }
    OUTLINED_FUNCTION_2();
    swift_bridgeObjectRelease();
    return;
  }
  v22 = v21;
  v23 = 0;
  v24 = *(_QWORD *)(v21 + 64);
  v42 = v21 + 64;
  v25 = 1 << *(_BYTE *)(v21 + 32);
  v26 = -1;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  v27 = v26 & v24;
  v44 = (unint64_t)(v25 + 63) >> 6;
  if ((v26 & v24) == 0)
    goto LABEL_31;
LABEL_30:
  v28 = __clz(__rbit64(v27));
  v27 &= v27 - 1;
  for (i = v28 | (v23 << 6); ; i = __clz(__rbit64(v31)) + (v23 << 6))
  {
    v33 = *(_QWORD *)(v22 + 56);
    v34 = (uint64_t *)(*(_QWORD *)(v22 + 48) + 16 * i);
    v35 = v34[1];
    v56 = *v34;
    v36 = v56;
    v57 = v35;
    sub_1C003E8FC(v33 + 32 * i, (uint64_t)v58);
    v47 = v36;
    v48 = v35;
    sub_1C006ED00(v58, &v49);
    OUTLINED_FUNCTION_19_19();
    sub_1C0132288();
    OUTLINED_FUNCTION_9_2();
    if ((swift_dynamicCast() & 1) != 0)
    {
      OUTLINED_FUNCTION_14();
      v37 = v45;
      MEMORY[0x1C3B97010]();
      if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1C030415C();
      sub_1C0304180();
      sub_1C0304150();

    }
    else
    {
      OUTLINED_FUNCTION_19_19();
      OUTLINED_FUNCTION_14();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED727C58);
      if ((swift_dynamicCast() & 1) != 0)
        sub_1C004F550((unint64_t)v45);
    }
    sub_1C0044B78((uint64_t)&v47, &qword_1ED727D50);
    if (v27)
      goto LABEL_30;
LABEL_31:
    v30 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    if (v30 >= v44)
      goto LABEL_53;
    v31 = *(_QWORD *)(v42 + 8 * v30);
    ++v23;
    if (!v31)
    {
      v23 = v30 + 1;
      if (v30 + 1 >= v44)
        goto LABEL_53;
      v31 = *(_QWORD *)(v42 + 8 * v23);
      if (!v31)
      {
        v23 = v30 + 2;
        if (v30 + 2 >= v44)
          goto LABEL_53;
        v31 = *(_QWORD *)(v42 + 8 * v23);
        if (!v31)
          break;
      }
    }
LABEL_44:
    v27 = (v31 - 1) & v31;
  }
  v32 = v30 + 3;
  if (v32 >= v44)
  {
LABEL_53:
    swift_release();
    v39 = v46;
    goto LABEL_10;
  }
  v31 = *(_QWORD *)(v42 + 8 * v32);
  if (v31)
  {
    v23 = v32;
    goto LABEL_44;
  }
  while (1)
  {
    v23 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v23 >= v44)
      goto LABEL_53;
    v31 = *(_QWORD *)(v42 + 8 * v23);
    ++v32;
    if (v31)
      goto LABEL_44;
  }
LABEL_58:
  __break(1u);
}

void sub_1C012F488(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  _QWORD v71[3];
  void (*v72)(char *, uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;

  v76 = a2;
  v72 = (void (*)(char *, uint64_t))a3;
  v82 = OUTLINED_FUNCTION_46_10();
  v71[2] = *(_QWORD *)(v82 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_27();
  v80 = v5;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v71 - v7;
  v74 = sub_1C0303814();
  v9 = *(_QWORD *)(v74 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v10);
  v73 = (char *)v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_37();
  v14 = v13;
  v15 = OUTLINED_FUNCTION_8_0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_27();
  v79 = v17;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_181();
  v77 = v19;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_181();
  v75 = v21;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_181();
  v83 = v23;
  OUTLINED_FUNCTION_42();
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)v71 - v26;
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)v71 - v28;
  sub_1C03037A8();
  v30 = (char *)(a1 + *(int *)(type metadata accessor for RunTimeDataRecord() + 28));
  sub_1C00859F0((unint64_t *)&qword_1ED728350, MEMORY[0x1E0CB08B0]);
  v78 = v31;
  v32 = sub_1C0303E68();
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  v81 = v33;
  if ((v32 & 1) != 0)
  {
    v34 = v29;
    v35 = v30;
  }
  else
  {
    v34 = v29;
    v35 = v27;
  }
  v33((uint64_t)v34, (uint64_t)v35, v15);
  v84 = *(void (**)(char *, uint64_t))(v16 + 8);
  v84(v27, v15);
  sub_1C03037C0();
  v37 = v73;
  v36 = v74;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v73, *MEMORY[0x1E0D9A808], v74);
  sub_1C025F884();
  v38 = *(void (**)(char *, uint64_t))(v9 + 8);
  v38(v37, v36);
  v38(v14, v36);
  v39 = v83;
  sub_1C0301C54();
  if (qword_1ED727970 != -1)
    swift_once();
  v40 = sub_1C0303B98();
  __swift_project_value_buffer(v40, (uint64_t)&unk_1ED7295C8);
  v41 = v75;
  v42 = v81;
  v81(v75, (uint64_t)v29, v15);
  v43 = v77;
  v42(v77, v39, v15);
  v44 = sub_1C0303B80();
  v45 = sub_1C03042E8();
  v46 = (void (*)(uint64_t, uint64_t))v45;
  if (os_log_type_enabled(v44, v45))
  {
    v47 = OUTLINED_FUNCTION_4_0();
    LODWORD(v73) = (_DWORD)v46;
    v48 = v47;
    v74 = OUTLINED_FUNCTION_4_0();
    v86 = v74;
    *(_DWORD *)v48 = 136315394;
    v71[0] = v48 + 4;
    sub_1C00859F0((unint64_t *)&qword_1ED728060, MEMORY[0x1E0CB08F0]);
    v71[1] = v49;
    v50 = sub_1C03049E4();
    v85 = OUTLINED_FUNCTION_53_0(v50, v51);
    sub_1C03044B0();
    OUTLINED_FUNCTION_14();
    v52 = v41;
    v53 = (void (*)(uint64_t, uint64_t))v84;
    v84((char *)v52, v15);
    *(_WORD *)(v48 + 12) = 2080;
    v75 = v48 + 14;
    v54 = sub_1C03049E4();
    v85 = OUTLINED_FUNCTION_53_0(v54, v55);
    sub_1C03044B0();
    OUTLINED_FUNCTION_14();
    v53(v43, v15);
    _os_log_impl(&dword_1C0039000, v44, (os_log_type_t)v73, "finding interaction between %s and %s", (uint8_t *)v48, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_35_17(v41);
  v46(v43, v15);

  v56 = v82;
  v57 = v76;
  v58 = *(_QWORD *)(v76 + 16);
  if (v58)
  {
    OUTLINED_FUNCTION_21_1();
    v60 = v57 + v59;
    v77 = *(_QWORD *)(v61 + 72);
    OUTLINED_FUNCTION_65();
    v62 = v79;
    while (1)
    {
      OUTLINED_FUNCTION_50_7(v60);
      v63 = v29;
      v64 = sub_1C0303E5C();
      v65 = (uint64_t)v8;
      v66 = (uint64_t)v8;
      v67 = v80;
      OUTLINED_FUNCTION_50_7(v66);
      v81(v62, v83, v15);
      if ((v64 & 1) != 0)
      {
        OUTLINED_FUNCTION_26_15();
        OUTLINED_FUNCTION_37_9(v67);
      }
      else
      {
        v68 = sub_1C0301C78();
        OUTLINED_FUNCTION_26_15();
        OUTLINED_FUNCTION_37_9(v67);
        if ((v68 & 1) != 0)
        {
          v70 = v72;
          sub_1C01322C4(v65, (uint64_t)v72);
          v69 = 0;
          v56 = v82;
          v39 = v83;
          v29 = v63;
          goto LABEL_17;
        }
      }
      v8 = (char *)v65;
      OUTLINED_FUNCTION_37_9(v65);
      v60 += v77;
      --v58;
      v56 = v82;
      v29 = v63;
      if (!v58)
      {
        v69 = 1;
        v70 = v72;
        v39 = v83;
        goto LABEL_17;
      }
    }
  }
  OUTLINED_FUNCTION_65();
  v69 = 1;
  v70 = v72;
LABEL_17:
  __swift_storeEnumTagSinglePayload((uint64_t)v70, v69, 1, v56);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_35_17(v39);
  v70(v29, v15);
  OUTLINED_FUNCTION_1();
}

void sub_1C012FA2C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v26[0] = a2;
  v4 = OUTLINED_FUNCTION_46_10();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_19_2();
  v8 = v6 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v26 - v10;
  v12 = OUTLINED_FUNCTION_8_0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_19_2();
  v16 = v14 - v15;
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_49_9();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_37();
  v28 = v4;
  v29 = v19;
  sub_1C0301C54();
  v30 = v2;
  sub_1C0301C54();
  v20 = *(_QWORD *)(a1 + 16);
  v26[1] = a1;
  if (v20)
  {
    v21 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v27 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1C0065628(v21, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
      sub_1C00859F0((unint64_t *)&qword_1ED728350, MEMORY[0x1E0CB08B0]);
      v22 = sub_1C0303E5C();
      sub_1C0065628((uint64_t)v11, v8, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v16, v30, v12);
      if ((v22 & 1) != 0)
      {
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
        OUTLINED_FUNCTION_38_13();
      }
      else
      {
        v23 = sub_1C0301C78();
        OUTLINED_FUNCTION_36(v16);
        OUTLINED_FUNCTION_38_13();
        if ((v23 & 1) != 0)
        {
          v25 = v26[0];
          sub_1C01322C4((uint64_t)v11, v26[0]);
          __swift_storeEnumTagSinglePayload(v25, 0, 1, v28);
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
      }
      sub_1C003DD84((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
      v24 = v28;
      v21 += v27;
      if (!--v20)
        goto LABEL_9;
    }
  }
  swift_bridgeObjectRetain();
  v24 = v28;
LABEL_9:
  __swift_storeEnumTagSinglePayload(v26[0], 1, 1, v24);
  swift_bridgeObjectRelease();
LABEL_11:
  OUTLINED_FUNCTION_36(v30);
  OUTLINED_FUNCTION_36(v29);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C012FC98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  unint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_log_type_t type;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  os_log_t log;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[2];

  v1 = MEMORY[0x1E0DEE9E0];
  v52[0] = MEMORY[0x1E0DEE9E0];
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = *(_QWORD *)(type metadata accessor for RunTimeDataRecord() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    OUTLINED_FUNCTION_44();
    do
    {
      sub_1C0130198(v52, v5);
      v5 += v6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    v1 = v52[0];
  }
  v7 = *(int *)(OUTLINED_FUNCTION_46_10() + 36);
  v8 = *(_QWORD *)(v45 + v7);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    OUTLINED_FUNCTION_44();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = v8;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
LABEL_35:
      sub_1C01F5B58();
    v12 = 0;
    v13 = 0;
    v43 = v7;
    *(_QWORD *)(v45 + v7) = v11;
    v47 = v8;
    v48 = v9;
    v42 = v1;
    while (1)
    {
      v14 = (_QWORD *)(v8 + v12);
      v15 = *(_QWORD *)(v8 + v12 + 56);
      if (v15 && *(_QWORD *)(v1 + 16))
      {
        v51 = v12;
        v16 = v14[5];
        log = (os_log_t)v14[4];
        v50 = v14[6];
        v18 = v14[8];
        v17 = v14[9];
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_65();
        sub_1C00EE078(v18, v17);
        OUTLINED_FUNCTION_65();
        v19 = sub_1C00B3C3C(v50, v15);
        if ((v20 & 1) != 0)
        {
          v46 = v18;
          v21 = (uint64_t *)(*(_QWORD *)(v1 + 56) + 16 * v19);
          v22 = *v21;
          v23 = v21[1];
          OUTLINED_FUNCTION_45_0();
          OUTLINED_FUNCTION_29();
          if ((os_log_t)v22 == log && v23 == v16)
          {
            OUTLINED_FUNCTION_29();
            OUTLINED_FUNCTION_29_0();
            sub_1C0066AFC(v46, v17);
          }
          else
          {
            v44 = v22;
            if ((OUTLINED_FUNCTION_176() & 1) == 0)
            {
              if (qword_1ED727970 != -1)
                swift_once();
              v25 = sub_1C0303B98();
              __swift_project_value_buffer(v25, (uint64_t)&unk_1ED7295C8);
              OUTLINED_FUNCTION_45_0();
              v26 = v16;
              swift_bridgeObjectRetain();
              OUTLINED_FUNCTION_65();
              sub_1C00EE078(v46, v17);
              OUTLINED_FUNCTION_45_0();
              v27 = sub_1C0303B80();
              v28 = sub_1C03042E8();
              if (os_log_type_enabled(v27, v28))
              {
                type = v28;
                v29 = OUTLINED_FUNCTION_4_0();
                v52[0] = OUTLINED_FUNCTION_4_0();
                *(_DWORD *)v29 = 136315394;
                swift_bridgeObjectRetain();
                *(_QWORD *)(v29 + 4) = sub_1C003E6D8((uint64_t)log, v26, v52);
                OUTLINED_FUNCTION_29();
                OUTLINED_FUNCTION_2();
                OUTLINED_FUNCTION_4_37();
                OUTLINED_FUNCTION_7_32(v30, v31);
                OUTLINED_FUNCTION_29();
                OUTLINED_FUNCTION_31();
                OUTLINED_FUNCTION_4_37();
                OUTLINED_FUNCTION_7_32(v32, v33);
                *(_WORD *)(v29 + 12) = 2080;
                OUTLINED_FUNCTION_44();
                *(_QWORD *)(v29 + 14) = sub_1C003E6D8(v22, v23, v52);
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_1C0039000, v27, type, "replacing interaction contact ID: %s -> %s", (uint8_t *)v29, 0x16u);
                swift_arrayDestroy();
                OUTLINED_FUNCTION_5();
              }
              OUTLINED_FUNCTION_29();
              OUTLINED_FUNCTION_31();
              OUTLINED_FUNCTION_4_37();
              OUTLINED_FUNCTION_7_32(v34, v35);
              OUTLINED_FUNCTION_29();
              OUTLINED_FUNCTION_31();
              OUTLINED_FUNCTION_4_37();
              OUTLINED_FUNCTION_7_32(v36, v37);

              OUTLINED_FUNCTION_2();
              v7 = v43;
              v8 = *(_QWORD *)(v45 + v43);
              v1 = v42;
              v9 = v48;
              v12 = v51;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1C01F5B58();
                v8 = v39;
              }
              if ((v13 & 0x8000000000000000) != 0)
              {
                __break(1u);
LABEL_34:
                __break(1u);
                goto LABEL_35;
              }
              if (v13 >= *(_QWORD *)(v8 + 16))
                goto LABEL_34;
              v38 = v8 + v51;
              *(_QWORD *)(v38 + 32) = v44;
              *(_QWORD *)(v38 + 40) = v23;
              swift_bridgeObjectRelease();
              *(_QWORD *)(v45 + v43) = v8;
              v8 = v47;
              goto LABEL_21;
            }
            OUTLINED_FUNCTION_29();
            OUTLINED_FUNCTION_29_0();
            OUTLINED_FUNCTION_7_32(v46, v17);
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          OUTLINED_FUNCTION_29_0();
          OUTLINED_FUNCTION_2();
          OUTLINED_FUNCTION_7_32(v18, v17);
        }
        v8 = v47;
        v9 = v48;
        v12 = v51;
      }
LABEL_21:
      ++v13;
      v12 += 80;
      if (v9 == v13)
      {
        OUTLINED_FUNCTION_14();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0130198(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t matched;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t *v43;
  _QWORD *v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;

  matched = type metadata accessor for ContactMatchRuntimeData(0);
  v60 = *(_QWORD *)(matched - 8);
  MEMORY[0x1E0C80A78](matched);
  v7 = (uint64_t *)((char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for ContactResolverRunTimeData(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v53 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = *(_QWORD *)(a2 + *(int *)(type metadata accessor for RunTimeDataRecord() + 24));
  v51 = *(_QWORD *)(result + 16);
  if (v51)
  {
    v52 = result + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v12 = swift_bridgeObjectRetain();
    v13 = 0;
    v63 = a1;
    v55 = v7;
    v56 = v2;
    v49 = v12;
    v50 = v9;
    while (v13 < *(_QWORD *)(v12 + 16))
    {
      v14 = *(_QWORD *)(v9 + 72);
      v15 = v53;
      v54 = v13;
      sub_1C0065628(v52 + v14 * v13, v53, type metadata accessor for ContactResolverRunTimeData);
      v16 = *(_QWORD *)(v15 + 296);
      swift_bridgeObjectRetain();
      sub_1C003DD84(v15, type metadata accessor for ContactResolverRunTimeData);
      v59 = *(_QWORD *)(v16 + 16);
      if (v59)
      {
        v17 = 0;
        v18 = *(unsigned __int8 *)(v60 + 80);
        v57 = v16;
        v58 = v16 + ((v18 + 32) & ~v18);
        while (v17 < *(_QWORD *)(v16 + 16))
        {
          v19 = *(_QWORD *)(v60 + 72);
          v61 = v17;
          sub_1C0065628(v58 + v19 * v17, (uint64_t)v7, type metadata accessor for ContactMatchRuntimeData);
          v20 = v7[1];
          v64 = *v7;
          v21 = *(_QWORD *)((char *)v7 + *(int *)(type metadata accessor for Contact() + 80));
          v22 = *(_QWORD *)(v21 + 16);
          if (v22)
          {
            v66 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            swift_bridgeObjectRetain();
            sub_1C00B1764();
            v23 = v66;
            v24 = (uint64_t *)(v21 + 96);
            do
            {
              v26 = *(v24 - 1);
              v25 = *v24;
              v66 = v23;
              v28 = v23[2];
              v27 = v23[3];
              swift_bridgeObjectRetain();
              if (v28 >= v27 >> 1)
              {
                sub_1C00B1764();
                v23 = v66;
              }
              v23[2] = v28 + 1;
              v29 = &v23[2 * v28];
              v29[4] = v26;
              v29[5] = v25;
              v24 += 10;
              --v22;
            }
            while (v22);
            swift_bridgeObjectRelease();
            a1 = v63;
          }
          else
          {
            v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          }
          v62 = v23;
          v30 = v23[2];
          if (v30)
          {
            v31 = v62 + 5;
            while (1)
            {
              v65 = v30;
              v33 = *(v31 - 1);
              v32 = *v31;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_isUniquelyReferenced_nonNull_native();
              v66 = (_QWORD *)*a1;
              v34 = v66;
              *a1 = 0x8000000000000000;
              v35 = sub_1C00B3C3C(v33, v32);
              if (__OFADD__(v34[2], (v36 & 1) == 0))
                break;
              v37 = v35;
              v38 = v36;
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8E08);
              if ((sub_1C03047BC() & 1) != 0)
              {
                v39 = sub_1C00B3C3C(v33, v32);
                if ((v38 & 1) != (v40 & 1))
                  goto LABEL_33;
                v37 = v39;
              }
              v41 = v66;
              if ((v38 & 1) != 0)
              {
                v42 = (_QWORD *)(v66[7] + 16 * v37);
                swift_bridgeObjectRelease();
                *v42 = v64;
                v42[1] = v20;
              }
              else
              {
                v66[(v37 >> 6) + 8] |= 1 << v37;
                v43 = (uint64_t *)(v41[6] + 16 * v37);
                *v43 = v33;
                v43[1] = v32;
                v44 = (_QWORD *)(v41[7] + 16 * v37);
                *v44 = v64;
                v44[1] = v20;
                v45 = v41[2];
                v46 = __OFADD__(v45, 1);
                v47 = v45 + 1;
                if (v46)
                  goto LABEL_30;
                v41[2] = v47;
                swift_bridgeObjectRetain();
              }
              v31 += 2;
              a1 = v63;
              *v63 = v41;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v30 = v65 - 1;
              if (v65 == 1)
                goto LABEL_25;
            }
            __break(1u);
LABEL_30:
            __break(1u);
            break;
          }
LABEL_25:
          v17 = v61 + 1;
          swift_bridgeObjectRelease();
          v7 = v55;
          sub_1C003DD84((uint64_t)v55, type metadata accessor for ContactMatchRuntimeData);
          v16 = v57;
          if (v17 == v59)
            goto LABEL_26;
        }
        __break(1u);
        break;
      }
LABEL_26:
      swift_bridgeObjectRelease();
      v13 = v54 + 1;
      v9 = v50;
      v12 = v49;
      if (v54 + 1 == v51)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_33:
    result = sub_1C0304A68();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C01305DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7461447472617473 && a2 == 0xE900000000000065;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
        if (v8 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6574616E6F447369 && a2 == 0xEF69726953794264;
          if (v9 || (sub_1C0304A08() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x656C706F6570 && a2 == 0xE600000000000000)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v11 = sub_1C0304A08();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_1C013086C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0130898 + 4 * byte_1C030D350[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_1C0130898()
{
  return 0x696669746E656469;
}

uint64_t sub_1C01308B4()
{
  return 0x7461447472617473;
}

uint64_t sub_1C01308D0()
{
  return 0x6E6F697461727564;
}

uint64_t sub_1C01308E8()
{
  return 0x6574616E6F447369;
}

uint64_t sub_1C013090C()
{
  return 0x656C706F6570;
}

void sub_1C0130920(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC420);
  OUTLINED_FUNCTION_42_1();
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0132FEC();
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_28_16();
  if (!v1)
  {
    OUTLINED_FUNCTION_28_16();
    type metadata accessor for StitchableInteraction();
    sub_1C0301CFC();
    sub_1C00859F0(&qword_1ED725900, MEMORY[0x1E0CB0890]);
    OUTLINED_FUNCTION_169();
    sub_1C0304978();
    sub_1C030496C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC430);
    sub_1C0133028();
    OUTLINED_FUNCTION_169();
  }
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_52_7();
}

uint64_t sub_1C0130AE0()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1C030484C();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_1C0130B34(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6156656C646E6168;
  else
    return 25705;
}

uint64_t sub_1C0130B68()
{
  unsigned __int8 *v0;

  return sub_1C013086C(*v0);
}

uint64_t sub_1C0130B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C01305DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0130B94()
{
  sub_1C0132FEC();
  return sub_1C0304BAC();
}

uint64_t sub_1C0130BBC()
{
  sub_1C0132FEC();
  return sub_1C0304BB8();
}

void sub_1C0130BE4(_QWORD *a1)
{
  sub_1C0130920(a1);
}

void sub_1C0130BF8(char *a1, char *a2)
{
  sub_1C025E050(*a1, *a2);
}

void sub_1C0130C04()
{
  sub_1C00CE914();
}

uint64_t sub_1C0130C0C()
{
  return sub_1C00C22C4();
}

void sub_1C0130C14()
{
  sub_1C02EAD74();
}

uint64_t sub_1C0130C1C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0130AE0();
  *a1 = result;
  return result;
}

uint64_t sub_1C0130C48@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1C0130B34(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0130C70()
{
  char *v0;

  return sub_1C0130B34(*v0);
}

uint64_t sub_1C0130C78@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0130B30();
  *a1 = result;
  return result;
}

uint64_t sub_1C0130C9C()
{
  sub_1C0132FB0();
  return sub_1C0304BAC();
}

uint64_t sub_1C0130CC4()
{
  sub_1C0132FB0();
  return sub_1C0304BB8();
}

void sub_1C0130CEC(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727C70);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_19_2();
  v9 = v7 - v8;
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_49_9();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v46 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v46 - v15;
  v17 = sub_1C022A2E0(a1);
  if (v18)
  {
    v19 = v17;
    v20 = v18;
  }
  else
  {
    v17 = sub_1C022A2EC(a1);
    v20 = v21;
    if (!v21)
    {

      goto LABEL_12;
    }
    v19 = v17;
  }
  v22 = OUTLINED_FUNCTION_21_16(v17, sel_personHandle);
  if (!v22)
  {

    OUTLINED_FUNCTION_29();
    v20 = 0;
LABEL_12:
    OUTLINED_FUNCTION_23_15();
    v24 = 0;
    goto LABEL_13;
  }
  sub_1C01E6A78(v22);
  v24 = v23;
  if (!v23)
  {

    OUTLINED_FUNCTION_29();
    v20 = 0;
    OUTLINED_FUNCTION_23_15();
LABEL_13:
    v35 = 0;
    v36 = 0;
    goto LABEL_24;
  }
  v49 = v19;
  v25 = sub_1C020004C();
  v47 = v26;
  v48 = v25;
  v27 = swift_bridgeObjectRelease();
  v28 = OUTLINED_FUNCTION_21_16(v27, sel_nameComponents);
  if (v28)
  {
    v29 = v28;
    sub_1C0301A20();

    sub_1C0301A5C();
    v30 = (uint64_t)v14;
    v31 = 0;
  }
  else
  {
    sub_1C0301A5C();
    v30 = (uint64_t)v14;
    v31 = 1;
  }
  OUTLINED_FUNCTION_40_2(v30, v31);
  sub_1C01323F0((uint64_t)v14, (uint64_t)v16, &qword_1ED727C70);
  sub_1C0301A5C();
  v3 = 0;
  v14 = 0;
  if (!OUTLINED_FUNCTION_44_10((uint64_t)v16))
  {
    v3 = sub_1C0301990();
    v14 = v37;
  }
  sub_1C0044B78((uint64_t)v16, &qword_1ED727C70);
  v39 = OUTLINED_FUNCTION_21_16(v38, sel_nameComponents);
  if (v39)
  {
    v40 = v39;
    sub_1C0301A20();

    v41 = 0;
  }
  else
  {
    v41 = 1;
  }
  OUTLINED_FUNCTION_40_2(v9, v41);
  sub_1C01323F0(v9, v2, &qword_1ED727C70);
  if (OUTLINED_FUNCTION_44_10(v2))
  {
    v16 = 0;
    v24 = 0;
  }
  else
  {
    v16 = (char *)sub_1C03019A8();
    v24 = v42;
  }
  sub_1C0044B78(v2, &qword_1ED727C70);
  v44 = OUTLINED_FUNCTION_21_16(v43, sel_displayName);
  v35 = sub_1C0303EB0();
  v36 = v45;

  v33 = v48;
  v32 = v49;
  v34 = v47;
LABEL_24:
  *a2 = v32;
  a2[1] = v20;
  a2[2] = v33;
  a2[3] = v34;
  a2[4] = v3;
  a2[5] = (uint64_t)v14;
  a2[6] = (uint64_t)v16;
  a2[7] = v24;
  a2[8] = v35;
  a2[9] = v36;
  OUTLINED_FUNCTION_1();
}

void sub_1C0130FB0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v5;
  uint64_t v6;

  if ((*a1 != *a2 || a1[1] != a2[1]) && (OUTLINED_FUNCTION_176() & 1) == 0)
  {
    v5 = a1[3];
    v6 = a2[3];
    if (v5)
    {
      if (v6)
      {
        if (a1[2] != a2[2] || v5 != v6)
          OUTLINED_FUNCTION_176();
      }
    }
  }
  OUTLINED_FUNCTION_37_0();
}

void sub_1C0131048()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  sub_1C0303E20();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 24))
  {
    sub_1C0304B1C();
    OUTLINED_FUNCTION_65();
    sub_1C0303E20();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C0304B1C();
    OUTLINED_FUNCTION_37_0();
  }
}

void sub_1C01310D4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC410);
  OUTLINED_FUNCTION_42_1();
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0132FB0();
  OUTLINED_FUNCTION_18_1();
  sub_1C0304960();
  if (!v1)
    sub_1C0304924();
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_52_7();
}

uint64_t sub_1C01311B0()
{
  sub_1C0304B04();
  sub_1C0131048();
  return sub_1C0304B40();
}

void sub_1C01311EC(_QWORD *a1)
{
  sub_1C01310D4(a1);
}

uint64_t type metadata accessor for StitchableInteraction()
{
  uint64_t result;

  result = qword_1EF5BC3C0;
  if (!qword_1EF5BC3C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0131244()
{
  sub_1C0304B04();
  sub_1C0131048();
  return sub_1C0304B40();
}

void sub_1C013127C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  char v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  BOOL v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  unint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  unint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;

  v2 = v1;
  v139 = type metadata accessor for StitchableInteraction();
  v4 = *(_QWORD *)(v139 - 8);
  v5 = MEMORY[0x1E0C80A78](v139);
  v129 = (uint64_t)&v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v140 = (uint64_t)&v122 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v136 = (uint64_t)&v122 - v10;
  MEMORY[0x1E0C80A78](v9);
  v135 = (uint64_t)&v122 - v11;
  v12 = a1[1];
  v13 = sub_1C03049CC();
  if (v13 >= v12)
  {
    if ((v12 & 0x8000000000000000) == 0)
    {
      if (v12)
        sub_1C0131BC0(0, v12, 1, a1);
      return;
    }
    goto LABEL_142;
  }
  v14 = v13;
  v138 = a1;
  sub_1C027E08C(v12 / 2);
  v125 = v15;
  v126 = v12;
  v131 = v16;
  v132 = v4;
  if (v12 <= 0)
  {
LABEL_106:
    v18 = (char *)MEMORY[0x1E0DEE9D8];
    v65 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_107:
    v115 = v18;
    if (v65 < 2)
    {
LABEL_118:
      swift_bridgeObjectRelease();
      if (v126 >= -1)
        goto LABEL_119;
      goto LABEL_146;
    }
    v116 = *v138;
    while (1)
    {
      v117 = v65 - 2;
      if (v65 < 2)
        break;
      if (!v116)
        goto LABEL_150;
      v118 = *(_QWORD *)&v115[16 * v117 + 32];
      v119 = *(_QWORD *)&v115[16 * v65 + 24];
      sub_1C0131DDC(v116 + *(_QWORD *)(v132 + 72) * v118, v116 + *(_QWORD *)(v132 + 72) * *(_QWORD *)&v115[16 * v65 + 16], v116 + *(_QWORD *)(v132 + 72) * v119, v131);
      if (v2)
        goto LABEL_104;
      if (v119 < v118)
        goto LABEL_137;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v115 = sub_1C020FAB8();
      if (v117 >= *((_QWORD *)v115 + 2))
        goto LABEL_138;
      v120 = &v115[16 * v117 + 32];
      *(_QWORD *)v120 = v118;
      *((_QWORD *)v120 + 1) = v119;
      v121 = *((_QWORD *)v115 + 2);
      if (v65 > v121)
        goto LABEL_139;
      memmove(&v115[16 * v65 + 16], &v115[16 * v65 + 32], 16 * (v121 - v65));
      *((_QWORD *)v115 + 2) = v121 - 1;
      v65 = v121 - 1;
      if (v121 <= 2)
        goto LABEL_118;
    }
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    return;
  }
  v124 = v14;
  v17 = 0;
  v18 = (char *)MEMORY[0x1E0DEE9D8];
  v19 = v12;
  while (1)
  {
    v20 = v17;
    v21 = v17 + 1;
    if (v17 + 1 >= v19)
    {
      v28 = v17 + 1;
    }
    else
    {
      v22 = *v138;
      v23 = *(_QWORD *)(v4 + 72);
      v24 = *v138 + v23 * v21;
      v133 = v19;
      v25 = v135;
      sub_1C0065628(v24, v135, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
      v26 = v136;
      sub_1C0065628(v22 + v23 * v20, v136, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
      LODWORD(v134) = sub_1C0301C78();
      sub_1C003DD84(v26, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
      v27 = v25;
      v19 = v133;
      sub_1C003DD84(v27, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
      v28 = v20 + 2;
      v128 = v22;
      v137 = v23;
      if (v20 + 2 >= v19)
      {
        v4 = v132;
      }
      else
      {
        v130 = v20;
        v127 = v2;
        v29 = v23 * v21;
        v30 = v22;
        v31 = v23 * v28;
        while (1)
        {
          v32 = v28;
          v33 = v135;
          sub_1C0065628(v30 + v31, v135, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
          v34 = v136;
          sub_1C0065628(v30 + v29, v136, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
          v35 = sub_1C0301C78();
          sub_1C003DD84(v34, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
          sub_1C003DD84(v33, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
          if (((v134 ^ v35) & 1) != 0)
            break;
          v28 = v32 + 1;
          v30 += v137;
          if (v32 + 1 >= v133)
          {
            v4 = v132;
            v19 = v133;
            v28 = v133;
            goto LABEL_13;
          }
        }
        v4 = v132;
        v19 = v133;
        v28 = v32;
LABEL_13:
        v2 = v127;
        v20 = v130;
      }
      if ((v134 & 1) != 0)
      {
        v36 = v137;
        if (v28 < v20)
          goto LABEL_143;
        if (v20 < v28)
        {
          v127 = v2;
          v37 = 0;
          v38 = v20;
          v39 = v137 * (v28 - 1);
          v40 = v28 * v137;
          v41 = v28;
          v42 = v38;
          v130 = v38;
          v43 = v38 * v137;
          v44 = v138;
          do
          {
            v28 = v41;
            if (v42 != v41 + v37 - 1)
            {
              v45 = v128;
              if (!v128)
                goto LABEL_149;
              v46 = v128 + v43;
              v134 = v128 + v39;
              sub_1C01322C4(v128 + v43, v129);
              if (v43 < v39 || v46 >= v45 + v40)
              {
                swift_arrayInitWithTakeFrontToBack();
                v36 = v137;
              }
              else
              {
                v36 = v137;
                if (v43 != v39)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_1C01322C4(v129, v134);
              v44 = v138;
            }
            ++v42;
            --v37;
            v41 = v28;
            v39 -= v36;
            v40 -= v36;
            v43 += v36;
          }
          while (v42 < v28 + v37);
          v2 = v127;
          v4 = v132;
          v19 = v133;
          v20 = v130;
          goto LABEL_32;
        }
      }
    }
    v44 = v138;
LABEL_32:
    if (v28 < v19)
    {
      if (__OFSUB__(v28, v20))
        goto LABEL_141;
      if (v28 - v20 < v124)
      {
        if (__OFADD__(v20, v124))
          goto LABEL_144;
        if (v20 + v124 >= v19)
          v48 = v19;
        else
          v48 = v20 + v124;
        if (v48 < v20)
          goto LABEL_145;
        if (v28 != v48)
        {
          v130 = v20;
          v123 = v18;
          v127 = v2;
          v128 = v48;
          v49 = *(_QWORD *)(v4 + 72);
          v50 = v49 * (v28 - 1);
          v133 = v49;
          v51 = v28 * v49;
          do
          {
            v52 = 0;
            v53 = v130;
            v137 = v28;
            v134 = v51;
            while (1)
            {
              v54 = *v44;
              v55 = v51 + v52 + *v44;
              v56 = v135;
              sub_1C0065628(v55, v135, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
              v57 = v50;
              v58 = v50 + v52 + v54;
              v59 = v136;
              sub_1C0065628(v58, v136, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
              LOBYTE(v54) = sub_1C0301C78();
              sub_1C003DD84(v59, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
              sub_1C003DD84(v56, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
              if ((v54 & 1) == 0)
                break;
              v60 = *v44;
              if (!*v44)
                goto LABEL_147;
              v51 = v134;
              v50 = v57;
              v61 = v60 + v57 + v52;
              sub_1C01322C4(v60 + v134 + v52, v140);
              v62 = v137;
              swift_arrayInitWithTakeFrontToBack();
              sub_1C01322C4(v140, v61);
              v52 -= v133;
              ++v53;
              v44 = v138;
              if (v62 == v53)
                goto LABEL_48;
            }
            v62 = v137;
            v50 = v57;
            v51 = v134;
LABEL_48:
            v28 = v62 + 1;
            v50 += v133;
            v51 += v133;
          }
          while (v28 != v128);
          v28 = v128;
          v2 = v127;
          v18 = v123;
          v20 = v130;
        }
      }
    }
    if (v28 < v20)
      goto LABEL_140;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v18 = sub_1C00500C8(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
    v64 = *((_QWORD *)v18 + 2);
    v63 = *((_QWORD *)v18 + 3);
    v65 = v64 + 1;
    if (v64 >= v63 >> 1)
      v18 = sub_1C00500C8((char *)(v63 > 1), v64 + 1, 1, v18);
    v66 = v2;
    *((_QWORD *)v18 + 2) = v65;
    v67 = v18 + 32;
    v68 = &v18[16 * v64 + 32];
    *(_QWORD *)v68 = v20;
    *((_QWORD *)v68 + 1) = v28;
    v137 = v28;
    if (v64)
      break;
    v65 = 1;
LABEL_98:
    v19 = v138[1];
    v17 = v137;
    v2 = v66;
    v4 = v132;
    if (v137 >= v19)
      goto LABEL_107;
  }
  while (1)
  {
    v69 = v65 - 1;
    if (v65 >= 4)
    {
      v74 = &v67[16 * v65];
      v75 = *((_QWORD *)v74 - 8);
      v76 = *((_QWORD *)v74 - 7);
      v80 = __OFSUB__(v76, v75);
      v77 = v76 - v75;
      if (v80)
        goto LABEL_125;
      v79 = *((_QWORD *)v74 - 6);
      v78 = *((_QWORD *)v74 - 5);
      v80 = __OFSUB__(v78, v79);
      v72 = v78 - v79;
      v73 = v80;
      if (v80)
        goto LABEL_126;
      v81 = v65 - 2;
      v82 = &v67[16 * v65 - 32];
      v84 = *(_QWORD *)v82;
      v83 = *((_QWORD *)v82 + 1);
      v80 = __OFSUB__(v83, v84);
      v85 = v83 - v84;
      if (v80)
        goto LABEL_127;
      v80 = __OFADD__(v72, v85);
      v86 = v72 + v85;
      if (v80)
        goto LABEL_129;
      if (v86 >= v77)
      {
        v104 = &v67[16 * v69];
        v106 = *(_QWORD *)v104;
        v105 = *((_QWORD *)v104 + 1);
        v80 = __OFSUB__(v105, v106);
        v107 = v105 - v106;
        if (v80)
          goto LABEL_135;
        v97 = v72 < v107;
        goto LABEL_87;
      }
    }
    else
    {
      if (v65 != 3)
      {
        v98 = *((_QWORD *)v18 + 4);
        v99 = *((_QWORD *)v18 + 5);
        v80 = __OFSUB__(v99, v98);
        v91 = v99 - v98;
        v92 = v80;
        goto LABEL_81;
      }
      v71 = *((_QWORD *)v18 + 4);
      v70 = *((_QWORD *)v18 + 5);
      v80 = __OFSUB__(v70, v71);
      v72 = v70 - v71;
      v73 = v80;
    }
    if ((v73 & 1) != 0)
      goto LABEL_128;
    v81 = v65 - 2;
    v87 = &v67[16 * v65 - 32];
    v89 = *(_QWORD *)v87;
    v88 = *((_QWORD *)v87 + 1);
    v90 = __OFSUB__(v88, v89);
    v91 = v88 - v89;
    v92 = v90;
    if (v90)
      goto LABEL_130;
    v93 = &v67[16 * v69];
    v95 = *(_QWORD *)v93;
    v94 = *((_QWORD *)v93 + 1);
    v80 = __OFSUB__(v94, v95);
    v96 = v94 - v95;
    if (v80)
      goto LABEL_132;
    if (__OFADD__(v91, v96))
      goto LABEL_134;
    if (v91 + v96 >= v72)
    {
      v97 = v72 < v96;
LABEL_87:
      if (v97)
        v69 = v81;
      goto LABEL_89;
    }
LABEL_81:
    if ((v92 & 1) != 0)
      goto LABEL_131;
    v100 = &v67[16 * v69];
    v102 = *(_QWORD *)v100;
    v101 = *((_QWORD *)v100 + 1);
    v80 = __OFSUB__(v101, v102);
    v103 = v101 - v102;
    if (v80)
      goto LABEL_133;
    if (v103 < v91)
      goto LABEL_98;
LABEL_89:
    v108 = v18;
    v109 = v69 - 1;
    if (v69 - 1 >= v65)
    {
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
      goto LABEL_136;
    }
    if (!*v138)
      goto LABEL_148;
    v110 = &v67[16 * v109];
    v111 = *(_QWORD *)v110;
    v112 = &v67[16 * v69];
    v113 = *((_QWORD *)v112 + 1);
    sub_1C0131DDC(*v138 + *(_QWORD *)(v132 + 72) * *(_QWORD *)v110, *v138 + *(_QWORD *)(v132 + 72) * *(_QWORD *)v112, *v138 + *(_QWORD *)(v132 + 72) * v113, v131);
    if (v66)
      break;
    if (v113 < v111)
      goto LABEL_122;
    if (v69 > *((_QWORD *)v108 + 2))
      goto LABEL_123;
    *(_QWORD *)v110 = v111;
    *(_QWORD *)&v67[16 * v109 + 8] = v113;
    v114 = *((_QWORD *)v108 + 2);
    if (v69 >= v114)
      goto LABEL_124;
    v18 = v108;
    v65 = v114 - 1;
    memmove(&v67[16 * v69], v112 + 16, 16 * (v114 - 1 - v69));
    *((_QWORD *)v108 + 2) = v114 - 1;
    if (v114 <= 2)
      goto LABEL_98;
  }
  v2 = v66;
LABEL_104:
  swift_bridgeObjectRelease();
  if (v126 < -1)
  {
    __break(1u);
    goto LABEL_106;
  }
LABEL_119:
  *(_QWORD *)(v125 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_1C0131BC0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v24 = a1;
  v27 = type metadata accessor for StitchableInteraction();
  v7 = MEMORY[0x1E0C80A78](v27);
  v28 = (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v22 - v10;
  MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v22 - v13;
  v26 = a3;
  v23 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v30 = v15 * (v26 - 1);
    v25 = v15;
    v29 = v15 * v26;
    while (2)
    {
      v16 = 0;
      v17 = v24;
      do
      {
        v18 = *a4;
        sub_1C0065628(v29 + v16 + *a4, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
        sub_1C0065628(v30 + v16 + v18, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
        LOBYTE(v18) = sub_1C0301C78();
        sub_1C003DD84((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
        sub_1C003DD84((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
        if ((v18 & 1) == 0)
          break;
        v19 = *a4;
        if (!*a4)
        {
          __break(1u);
          return;
        }
        v20 = a4;
        v21 = v19 + v30 + v16;
        sub_1C01322C4(v19 + v29 + v16, v28);
        swift_arrayInitWithTakeFrontToBack();
        sub_1C01322C4(v28, v21);
        v16 -= v25;
        ++v17;
        a4 = v20;
      }
      while (v26 != v17);
      v30 += v25;
      v29 += v25;
      if (++v26 != v23)
        continue;
      break;
    }
  }
}

void sub_1C0131DDC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int64_t v14;
  int64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v26;
  BOOL v28;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  int64_t v42;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v51 = type metadata accessor for StitchableInteraction();
  v8 = MEMORY[0x1E0C80A78](v51);
  v50 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v44 - v11;
  v13 = *(_QWORD *)(v10 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v14 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_75;
  v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_76;
  v18 = v14 / v13;
  v19 = v16 / v13;
  v45 = *(_QWORD *)(v10 + 72);
  if (v14 / v13 >= v16 / v13)
  {
    sub_1C00AE034(a2, v16 / v13);
    v20 = a4 + v19 * v13;
    if (v19 * v13 >= 1 && a1 < a2)
    {
      v47 = a4;
      v48 = -v13;
      v46 = a1;
      do
      {
        v30 = a3;
        v31 = v48;
        a3 += v48;
        v49 = v20 + v48;
        v32 = v20;
        sub_1C0065628(v20 + v48, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
        v33 = a2 + v31;
        v34 = a2 + v31;
        v35 = (uint64_t)v12;
        v36 = v50;
        sub_1C0065628(v34, v50, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
        v37 = sub_1C0301C78();
        v38 = v36;
        v12 = (char *)v35;
        sub_1C003DD84(v38, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
        sub_1C003DD84(v35, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
        if ((v37 & 1) != 0)
        {
          if (v30 < a2 || a3 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v30 != a2)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          a2 = v33;
          a4 = v47;
          v20 = v32;
        }
        else
        {
          if (v30 < v32 || a3 >= v32)
          {
            v20 = v49;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            v20 = v49;
            if (v30 != v32)
              swift_arrayInitWithTakeBackToFront();
          }
          a4 = v47;
        }
      }
      while (v20 > a4 && a2 > v46);
      v13 = v45;
    }
  }
  else
  {
    sub_1C00AE034(a1, v14 / v13);
    v20 = a4 + v18 * v13;
    v49 = a3;
    if (v18 * v13 >= 1 && a2 < a3)
    {
      v22 = v50;
      do
      {
        sub_1C0065628(a2, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
        sub_1C0065628(a4, v22, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
        v23 = sub_1C0301C78();
        sub_1C003DD84(v22, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
        sub_1C003DD84((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
        if ((v23 & 1) != 0)
        {
          v24 = a2 + v13;
          if (a1 < a2 || a1 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (a1 != a2)
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v26 = a4 + v13;
          if (a1 < a4 || a1 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (a1 != a4)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v24 = a2;
          a4 = v26;
          v13 = v45;
        }
        a1 += v13;
        v28 = a4 >= v20 || v24 >= v49;
        a2 = v24;
      }
      while (!v28);
    }
  }
  v42 = v20 - a4;
  if (v13 != -1 || v42 != 0x8000000000000000)
  {
    sub_1C00AE034(a4, v42 / v13);
    return;
  }
LABEL_77:
  __break(1u);
}

uint64_t sub_1C01321B4(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_parametersByName);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C0303D90();

  return v3;
}

uint64_t sub_1C013221C(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_identifier);

  if (!v2)
    return 0;
  v3 = sub_1C0303EB0();

  return v3;
}

unint64_t sub_1C0132288()
{
  unint64_t result;

  result = qword_1ED727C68;
  if (!qword_1ED727C68)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED727C68);
  }
  return result;
}

uint64_t sub_1C01322C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StitchableInteraction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0132308()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C013232C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_8_0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C013239C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_8_0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1C012E864(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

void sub_1C01323F0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_54(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_9();
}

_QWORD *assignWithCopy for TrialEnrollment(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for TrialEnrollment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for ComparableContactNameValues()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C0132514(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 40);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0132568(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 == 1)
  {
    v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  else
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v6;
    v8 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v8;
    v9 = *(_QWORD *)(a2 + 64);
    v10 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C0132608(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 32);
  v5 = (__int128 *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40) == 1)
  {
    if (v6 == 1)
    {
      v7 = *v5;
      v8 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v8;
      *v4 = v7;
    }
    else
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_1C0132778(a1 + 32);
    v10 = *(_OWORD *)(a2 + 48);
    v9 = *(_OWORD *)(a2 + 64);
    *v4 = *v5;
    *(_OWORD *)(a1 + 48) = v10;
    *(_OWORD *)(a1 + 64) = v9;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_1C0132778(uint64_t a1)
{
  destroy for TrialEnrollment();
  return a1;
}

_QWORD *sub_1C01327A4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  if (a1[5] != 1)
  {
    v6 = a2[5];
    if (v6 != 1)
    {
      a1[4] = a2[4];
      a1[5] = v6;
      swift_bridgeObjectRelease();
      v8 = a2[7];
      a1[6] = a2[6];
      a1[7] = v8;
      swift_bridgeObjectRelease();
      v9 = a2[9];
      a1[8] = a2[8];
      a1[9] = v9;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C0132778((uint64_t)(a1 + 4));
  }
  v7 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 3) = v7;
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  return a1;
}

void type metadata accessor for StitchablePerson()
{
  OUTLINED_FUNCTION_17_2();
}

_QWORD *sub_1C0132864(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1C0301CFC();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = a3[8];
    *(_QWORD *)((char *)v4 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *((_BYTE *)v4 + v14) = *((_BYTE *)a2 + v14);
    *(_QWORD *)((char *)v4 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C013294C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1C0301CFC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1C01329B0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C0301CFC();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1C0132A6C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C0301CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1C0132B44(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C0301CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  return a1;
}

_QWORD *sub_1C0132BD0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C0301CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0132C7C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0132C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_37_0();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_8_0();
    __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 24), a2, v6);
  }
}

uint64_t sub_1C0132CF0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0132CFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_37_0();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_8_0();
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 24), a2, a2, v7);
  }
}

uint64_t sub_1C0132D5C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C0301CFC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for PresentedChoices()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C0132E20(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_9();
}

_QWORD *assignWithCopy for PresentedChoices(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for PresentedChoices(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PresentedChoices(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PresentedChoices(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for StitchableInteractionSet()
{
  OUTLINED_FUNCTION_17_2();
}

unint64_t sub_1C0132F74()
{
  unint64_t result;

  result = qword_1EF5BC408;
  if (!qword_1EF5BC408)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030D484, &unk_1E7995330);
    atomic_store(result, (unint64_t *)&qword_1EF5BC408);
  }
  return result;
}

unint64_t sub_1C0132FB0()
{
  unint64_t result;

  result = qword_1EF5BC418;
  if (!qword_1EF5BC418)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030D6D8, &type metadata for StitchablePerson.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BC418);
  }
  return result;
}

unint64_t sub_1C0132FEC()
{
  unint64_t result;

  result = qword_1EF5BC428;
  if (!qword_1EF5BC428)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030D688, &type metadata for StitchableInteraction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BC428);
  }
  return result;
}

unint64_t sub_1C0133028()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EF5BC438;
  if (!qword_1EF5BC438)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF5BC430);
    v2 = sub_1C013308C();
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF5BC438);
  }
  return result;
}

unint64_t sub_1C013308C()
{
  unint64_t result;

  result = qword_1EF5BC440;
  if (!qword_1EF5BC440)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030D4AC, &unk_1E7995330);
    atomic_store(result, (unint64_t *)&qword_1EF5BC440);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StitchableInteraction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1C0133114 + 4 * byte_1C030D35B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1C0133148 + 4 * byte_1C030D356[v4]))();
}

uint64_t sub_1C0133148(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0133150(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0133158);
  return result;
}

uint64_t sub_1C0133164(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C013316CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1C0133170(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0133178(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StitchableInteraction.CodingKeys()
{
  return &type metadata for StitchableInteraction.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for StitchablePerson.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C01331E0 + 4 * byte_1C030D365[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0133214 + 4 * byte_1C030D360[v4]))();
}

uint64_t sub_1C0133214(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C013321C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0133224);
  return result;
}

uint64_t sub_1C0133230(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0133238);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C013323C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0133244(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StitchablePerson.CodingKeys()
{
  return &type metadata for StitchablePerson.CodingKeys;
}

unint64_t sub_1C0133264()
{
  unint64_t result;

  result = qword_1EF5BC448;
  if (!qword_1EF5BC448)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030D5A8, &type metadata for StitchablePerson.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BC448);
  }
  return result;
}

unint64_t sub_1C01332A4()
{
  unint64_t result;

  result = qword_1EF5BC450;
  if (!qword_1EF5BC450)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030D660, &type metadata for StitchableInteraction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BC450);
  }
  return result;
}

unint64_t sub_1C01332E4()
{
  unint64_t result;

  result = qword_1EF5BC458;
  if (!qword_1EF5BC458)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030D5D0, &type metadata for StitchableInteraction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BC458);
  }
  return result;
}

unint64_t sub_1C0133324()
{
  unint64_t result;

  result = qword_1EF5BC460;
  if (!qword_1EF5BC460)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030D5F8, &type metadata for StitchableInteraction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BC460);
  }
  return result;
}

unint64_t sub_1C0133364()
{
  unint64_t result;

  result = qword_1EF5BC468;
  if (!qword_1EF5BC468)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030D4E0, &type metadata for StitchablePerson.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BC468);
  }
  return result;
}

unint64_t sub_1C01333A4()
{
  unint64_t result;

  result = qword_1EF5BC470;
  if (!qword_1EF5BC470)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030D508, &type metadata for StitchablePerson.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BC470);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_7_32(uint64_t a1, uint64_t a2)
{
  return sub_1C0066AFC(a1, a2);
}

uint64_t OUTLINED_FUNCTION_14_26()
{
  return swift_dynamicCastObjCClass();
}

uint64_t OUTLINED_FUNCTION_19_19()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C003E8FC(v0, v1);
}

id OUTLINED_FUNCTION_21_16(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

id OUTLINED_FUNCTION_22_16()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 1014));
}

id OUTLINED_FUNCTION_34_15()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_35_17(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 104))(a1, v1);
}

void OUTLINED_FUNCTION_37_9(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1C003DD84(a1, v1);
}

void OUTLINED_FUNCTION_41_7()
{
  sub_1C0050078();
}

uint64_t OUTLINED_FUNCTION_46_10()
{
  return type metadata accessor for StitchableInteraction();
}

unint64_t DateTime.Date.DefinedDate.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 7;
  if (result < 7)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t DateTime.Date.DefinedDate.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1C0133494()
{
  unint64_t result;

  result = qword_1EF5BC478;
  if (!qword_1EF5BC478)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.DefinedDate, &type metadata for DateTime.Date.DefinedDate);
    atomic_store(result, (unint64_t *)&qword_1EF5BC478);
  }
  return result;
}

unint64_t sub_1C01334D0@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return DateTime.Date.DefinedDate.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C01334D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DateTime.Date.DefinedDate.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C01334FC()
{
  sub_1C0133670();
  return sub_1C03040FC();
}

uint64_t sub_1C0133558()
{
  sub_1C0133670();
  return sub_1C03040D8();
}

uint64_t _s11DefinedDateOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1C01335F0 + 4 * byte_1C030D72D[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1C0133624 + 4 * byte_1C030D728[v4]))();
}

uint64_t sub_1C0133624(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C013362C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0133634);
  return result;
}

uint64_t sub_1C0133640(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0133648);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1C013364C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0133654(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DateTime.Date.DefinedDate()
{
  return &type metadata for DateTime.Date.DefinedDate;
}

unint64_t sub_1C0133670()
{
  unint64_t result;

  result = qword_1EF5BC480[0];
  if (!qword_1EF5BC480[0])
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.DefinedDate, &type metadata for DateTime.Date.DefinedDate);
    atomic_store(result, qword_1EF5BC480);
  }
  return result;
}

uint64_t sub_1C01336AC()
{
  return sub_1C0133728();
}

uint64_t sub_1C01336C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C01336E4()
{
  sub_1C01336C0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Values(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Values);
}

uint64_t sub_1C013370C()
{
  return sub_1C0133728();
}

uint64_t sub_1C0133728()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C0133764()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t sub_1C0133780()
{
  sub_1C0133764();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RankedAppsDatabase(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RankedAppsDatabase);
}

void sub_1C01337AC(uint64_t a1, uint64_t a2)
{
  int v3;
  unint64_t v4;
  int v5;
  int v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  sqlite3_stmt **v17;
  uint64_t v18;

  v3 = a1;
  v4 = HIDWORD(a1);
  if (a1 < 0 == (int)a1 < 0)
  {
    v16 = HIDWORD(a1) - a1;
    if (__OFSUB__(HIDWORD(a1), (_DWORD)a1))
      goto LABEL_31;
    v9 = v16;
    if (v16)
      goto LABEL_13;
    goto LABEL_22;
  }
  if ((int)a1 >= 0)
    v5 = a1;
  else
    v5 = -(int)a1;
  if (a1 >= 0)
    v6 = HIDWORD(a1);
  else
    v6 = -HIDWORD(a1);
  v7 = __CFADD__(v5, v6);
  v8 = (v5 + v6);
  if (!v7)
  {
    if ((int)a1 < 0)
      v9 = v8;
    else
      v9 = -v8;
    if (v9)
    {
LABEL_13:
      v18 = MEMORY[0x1E0DEE9D8];
      sub_1C00B1764();
      if ((v9 & 0x8000000000000000) == 0)
      {
        v17 = (sqlite3_stmt **)(a2 + 16);
        swift_beginAccess();
        v10 = v3;
        while (v9)
        {
          if (!sqlite3_column_name(*v17, v10))
            goto LABEL_32;
          v11 = sub_1C0303FDC();
          v13 = v12;
          v14 = *(_QWORD *)(v18 + 16);
          if (v14 >= *(_QWORD *)(v18 + 24) >> 1)
            sub_1C00B1764();
          *(_QWORD *)(v18 + 16) = v14 + 1;
          v15 = v18 + 16 * v14;
          *(_QWORD *)(v15 + 32) = v11;
          *(_QWORD *)(v15 + 40) = v13;
          if ((int)v4 < v3)
            goto LABEL_27;
          if (v10 >= (int)v4)
            goto LABEL_28;
          ++v10;
          if (!--v9)
            goto LABEL_22;
        }
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
      }
      __break(1u);
      goto LABEL_30;
    }
LABEL_22:
    swift_release();
    return;
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
}

uint64_t getEnumTagSinglePayload for Cursor(uint64_t a1, int a2)
{
  int v2;

  if (a2)
  {
    if (a2 == 1 || !*(_BYTE *)(a1 + 16))
    {
      if (*(_QWORD *)a1)
        v2 = -1;
      else
        v2 = 0;
    }
    else
    {
      v2 = *(_DWORD *)a1 + 1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Cursor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Cursor()
{
  return &type metadata for Cursor;
}

unint64_t sub_1C01339E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF5BC588;
  if (!qword_1EF5BC588)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF5BC590);
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0DEC1E8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF5BC588);
  }
  return result;
}

uint64_t sub_1C0133A3C()
{
  sub_1C0055938(0);
  return swift_retain();
}

uint64_t sub_1C0133A58@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  sub_1C0133A3C();
  result = swift_release();
  *a1 = v3;
  return result;
}

void sub_1C0133A88()
{
  OUTLINED_FUNCTION_20_11();
  OUTLINED_FUNCTION_9();
}

uint64_t OUTLINED_FUNCTION_20_11()
{
  return 0;
}

uint64_t sub_1C0133AAC()
{
  return sub_1C0133ACC();
}

uint64_t sub_1C0133ACC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0133D14();
  v1 = v0;
  swift_release();
  return v1;
}

uint64_t sub_1C0133B00()
{
  return sub_1C0133B24();
}

uint64_t sub_1C0133B28()
{
  return sub_1C03040A8();
}

void sub_1C0133B48()
{
  sub_1C007073C();
  OUTLINED_FUNCTION_47_11();
}

void sub_1C0133B80(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_1C0133B48();
  *a1 = v2;
}

const char *sub_1C0133BA8()
{
  uint64_t v0;
  const char *result;

  OUTLINED_FUNCTION_11_30();
  result = sqlite3_sql(*(sqlite3_stmt **)(v0 + 16));
  if (result)
    return (const char *)sub_1C0303FDC();
  __break(1u);
  return result;
}

const char *sub_1C0133BD8()
{
  return sub_1C0133BA8();
}

void sub_1C0133BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_16_0();
  *(_QWORD *)(v4 + 16) = 0;
  v5 = (_QWORD *)OUTLINED_FUNCTION_16_0();
  v5[2] = v4;
  v5[3] = a1;
  v5[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727628);
  v6 = OUTLINED_FUNCTION_16_0();
  *(_QWORD *)(v6 + 16) = sub_1C008F7F4;
  *(_QWORD *)(v6 + 24) = v5;
  OUTLINED_FUNCTION_37_0();
}

void sub_1C0133C6C(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;

  sub_1C0133BF8(*v1, v1[1]);
  *a1 = v3;
}

uint64_t sub_1C0133C94()
{
  return OUTLINED_FUNCTION_20_11();
}

uint64_t sub_1C0133C9C()
{
  _QWORD *v0;

  return sub_1C0133AFC(*v0, v0[1]);
}

uint64_t sub_1C0133CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return sub_1C0133B20(a1, a2, a3, *v3, v3[1]);
}

void sub_1C0133CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_1C00C43F4(&qword_1EF5BC598, a2, (uint64_t (*)(uint64_t))type metadata accessor for Statement, (uint64_t)&unk_1C030D9D8);
  *(_QWORD *)(a1 + 8) = v3;
}

void sub_1C0133CE8(uint64_t a1, uint64_t a2)
{
  sub_1C00C43F4(&qword_1EF5BC598, a2, (uint64_t (*)(uint64_t))type metadata accessor for Statement, (uint64_t)&unk_1C030D9D8);
}

void sub_1C0133D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  unint64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;

  swift_retain();
  sub_1C0055938(0);
  sub_1C007073C();
  v1 = v0;
  v2 = 0;
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v4 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
  while (v1)
  {
    if (!v2)
    {
      v5 = v3[3];
      if ((uint64_t)((v5 >> 1) + 0x4000000000000000) < 0)
        goto LABEL_24;
      v6 = v5 & 0xFFFFFFFFFFFFFFFELL;
      if (v6 <= 1)
        v7 = 1;
      else
        v7 = v6;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC5A0);
      v8 = (_QWORD *)swift_allocObject();
      v9 = (uint64_t)(_swift_stdlib_malloc_size(v8) - 32) / 8;
      v8[2] = v7;
      v8[3] = 2 * v9;
      v10 = (unint64_t)(v8 + 4);
      v11 = v3[3];
      v12 = v11 >> 1;
      if (v3[2])
      {
        if (v8 != v3 || v10 >= (unint64_t)&v3[v12 + 4])
          memmove(v8 + 4, v3 + 4, 8 * v12);
        v3[2] = 0;
      }
      v4 = (_QWORD *)(v10 + 8 * v12);
      v2 = (v9 & 0x7FFFFFFFFFFFFFFFLL) - (v11 >> 1);
      swift_release();
      v3 = v8;
    }
    v14 = __OFSUB__(v2--, 1);
    if (v14)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *v4++ = v1;
    sub_1C007073C();
    v1 = v15;
  }
  swift_release();
  v16 = v3[3];
  if (v16 < 2)
    return;
  v17 = v16 >> 1;
  v14 = __OFSUB__(v17, v2);
  v18 = v17 - v2;
  if (!v14)
  {
    v3[2] = v18;
    return;
  }
LABEL_25:
  __break(1u);
}

void sub_1C0133E98(sqlite3_stmt *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _BYTE v23[40];
  _BYTE v24[40];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0;
  v5 = (uint64_t *)(v4 + 16);
  swift_retain();
  swift_beginAccess();
  v6 = *v5;
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (*v5 < a2)
  {
    v8 = 0;
    v9 = MEMORY[0x1E0DEE9D8] + 32;
    while (1)
    {
      *v5 = v6 + 1;
      sub_1C0056A0C(v6, a1, (uint64_t)v23);
      sub_1C008F8B8((uint64_t)v23, (uint64_t)v24, &qword_1ED727520);
      if (!v8)
      {
        v10 = v7[3];
        if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_26;
        v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
        if (v11 <= 1)
          v12 = 1;
        else
          v12 = v11;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
        v13 = (_QWORD *)swift_allocObject();
        v14 = (uint64_t)(_swift_stdlib_malloc_size(v13) - 32) / 40;
        v13[2] = v12;
        v13[3] = 2 * v14;
        v15 = (unint64_t)(v13 + 4);
        v16 = v7[3];
        v17 = v16 >> 1;
        if (v7[2])
        {
          if (v13 != v7 || v15 >= (unint64_t)&v7[5 * v17 + 4])
            memmove(v13 + 4, v7 + 4, 40 * v17);
          v7[2] = 0;
        }
        v9 = v15 + 40 * v17;
        v8 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - (v16 >> 1);
        swift_release();
        v7 = v13;
      }
      v19 = __OFSUB__(v8--, 1);
      if (v19)
        break;
      sub_1C008F8B8((uint64_t)v24, v9, &qword_1ED727520);
      v9 += 40;
      v6 = *v5;
      if (*v5 >= a2)
        goto LABEL_21;
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v8 = 0;
LABEL_21:
  swift_release_n();
  v20 = v7[3];
  if (v20 >= 2)
  {
    v21 = v20 >> 1;
    v19 = __OFSUB__(v21, v8);
    v22 = v21 - v8;
    if (v19)
    {
LABEL_27:
      __break(1u);
      return;
    }
    v7[2] = v22;
  }
}

void sub_1C0134084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  size_t v29;
  int64_t v30;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  BOOL v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;

  OUTLINED_FUNCTION_18_0();
  v1 = v0;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726F08);
  MEMORY[0x1E0C80A78](v49);
  OUTLINED_FUNCTION_19_2();
  v46 = v2 - v3;
  v5 = MEMORY[0x1E0C80A78](v4);
  v47 = (_QWORD *)((char *)v41 - v6);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v41 - v7;
  v48 = v9;
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v1 + 16);
  OUTLINED_FUNCTION_21();
  v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v45 = v11;
  v41[0] = v1;
  if (v11)
  {
    v42 = (v10 + 32) & ~v10;
    v13 = MEMORY[0x1E0DEE9D8] + v42;
    v14 = 0;
    v15 = 0;
    v16 = *(_QWORD *)(type metadata accessor for ContactMatchRuntimeData(0) - 8);
    v17 = v1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v43 = *(_QWORD *)(v16 + 72);
    v44 = v8;
    v41[1] = v10 | 7;
    v18 = v12;
    while (1)
    {
      v19 = v49;
      v20 = v46 + *(int *)(v49 + 48);
      sub_1C00655B4(v17, v20, type metadata accessor for ContactMatchRuntimeData);
      v21 = *(int *)(v19 + 48);
      v22 = (uint64_t)v47;
      v23 = (uint64_t)v47 + v21;
      *v47 = v14;
      sub_1C004553C(v20, v23, type metadata accessor for ContactMatchRuntimeData);
      sub_1C008F8B8(v22, (uint64_t)v8, &qword_1ED726F08);
      if (v15)
      {
        v12 = v18;
      }
      else
      {
        v24 = v18[3];
        if ((uint64_t)((v24 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_34;
        v25 = v24 & 0xFFFFFFFFFFFFFFFELL;
        if (v25 <= 1)
          v26 = 1;
        else
          v26 = v25;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8F10);
        v27 = *(_QWORD *)(v48 + 72);
        v28 = v42;
        v12 = (_QWORD *)swift_allocObject();
        v29 = _swift_stdlib_malloc_size(v12);
        if (!v27)
          goto LABEL_35;
        v30 = v29 - v28;
        if (v29 - v28 == 0x8000000000000000 && v27 == -1)
          goto LABEL_36;
        v32 = v30 / v27;
        v12[2] = v26;
        v12[3] = 2 * (v30 / v27);
        v33 = (char *)v12 + v28;
        v34 = v18[3];
        v35 = (v34 >> 1) * v27;
        if (v18[2])
        {
          if (v12 < v18 || v33 >= (char *)v18 + v42 + v35)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v12 != v18)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v18[2] = 0;
        }
        v13 = (uint64_t)&v33[v35];
        v15 = (v32 & 0x7FFFFFFFFFFFFFFFLL) - (v34 >> 1);
        swift_release();
      }
      v37 = __OFSUB__(v15--, 1);
      if (v37)
        break;
      ++v14;
      v8 = v44;
      sub_1C008F8B8((uint64_t)v44, v13, &qword_1ED726F08);
      v13 += *(_QWORD *)(v48 + 72);
      v17 += v43;
      v18 = v12;
      if (v45 == v14)
        goto LABEL_29;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v15 = 0;
LABEL_29:
  swift_bridgeObjectRelease();
  v38 = v12[3];
  if (v38 < 2)
  {
LABEL_32:
    OUTLINED_FUNCTION_1();
    return;
  }
  v39 = v38 >> 1;
  v37 = __OFSUB__(v39, v15);
  v40 = v39 - v15;
  if (!v37)
  {
    v12[2] = v40;
    goto LABEL_32;
  }
LABEL_37:
  __break(1u);
}

uint64_t sub_1C0134358(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  uint64_t v16;
  _BYTE v17[40];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v10;
  v11[3] = a4;
  v11[4] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727628);
  result = swift_allocObject();
  v13 = result;
  v14 = 0;
  *(_QWORD *)(result + 16) = sub_1C01362A8;
  *(_QWORD *)(result + 24) = v11;
  if (!a2 || !a3)
  {
LABEL_11:
    *a1 = v13;
    return v14;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    sub_1C008F7F4((uint64_t)v15);
    if (v16 == 1)
    {
      v14 = 0;
LABEL_9:
      sub_1C003E978((uint64_t)v15, &qword_1ED727910);
    }
    else
    {
      v14 = 0;
      while (1)
      {
        sub_1C008F8B8((uint64_t)v15, (uint64_t)v17, &qword_1ED727520);
        sub_1C008F8B8((uint64_t)v17, a2, &qword_1ED727520);
        if (a3 - 1 == v14)
          break;
        a2 += 40;
        sub_1C008F7F4((uint64_t)v15);
        ++v14;
        if (v16 == 1)
          goto LABEL_9;
      }
      v14 = a3;
    }
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

void sub_1C01344AC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t i;

  sub_1C0055938(0);
  if (!a2 || !a3)
  {
LABEL_8:
    *a1 = v3;
    return;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    sub_1C007073C();
    for (i = 0; v7; ++i)
    {
      *(_QWORD *)(a2 + 8 * i) = v7;
      if (a3 - 1 == i)
        break;
      sub_1C007073C();
    }
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_1C0134568()
{
  return swift_deallocObject();
}

uint64_t sub_1C0134578()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C013459C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_18_0();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = type metadata accessor for SiriRemembersV1API.Aggregation();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_19_2();
  v14 = v12 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v28 - v16;
  v33 = v3;
  v32 = v3 + 64;
  OUTLINED_FUNCTION_8_27();
  if (!v7)
  {
    v19 = 0;
LABEL_34:
    v27 = v32;
    *v9 = v33;
    v9[1] = v27;
    v9[2] = ~v18;
    v9[3] = v19;
    v9[4] = v1;
    OUTLINED_FUNCTION_1();
    return;
  }
  if (!v5)
  {
    v19 = 0;
    goto LABEL_34;
  }
  if (v5 < 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v29 = v18;
  v30 = v9;
  v19 = 0;
  OUTLINED_FUNCTION_42_10();
  v31 = v20;
  v28 = v20 - 1;
  if (!v1)
    goto LABEL_6;
LABEL_5:
  v21 = __clz(__rbit64(v1));
  v1 &= v1 - 1;
  v22 = v21 | (v19 << 6);
  while (1)
  {
    ++v0;
    v26 = *(_QWORD *)(v11 + 72);
    sub_1C00655B4(*(_QWORD *)(v33 + 56) + v26 * v22, v14, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
    sub_1C004553C(v14, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
    sub_1C004553C((uint64_t)v17, v7, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
    if (v0 == v5)
      goto LABEL_33;
    v7 += v26;
    if (v1)
      goto LABEL_5;
LABEL_6:
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v23 >= v31)
      goto LABEL_29;
    v24 = *(_QWORD *)(v32 + 8 * v23);
    if (!v24)
      break;
LABEL_15:
    v1 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v23 << 6);
    v19 = v23;
  }
  v19 += 2;
  if (v23 + 1 >= v31)
  {
    v1 = 0;
    v19 = v23;
    goto LABEL_33;
  }
  v24 = *(_QWORD *)(v32 + 8 * v19);
  if (v24)
    goto LABEL_11;
  v25 = v23 + 2;
  if (v23 + 2 >= v31)
    goto LABEL_29;
  v24 = *(_QWORD *)(v32 + 8 * v25);
  if (v24)
    goto LABEL_14;
  v19 = v23 + 3;
  if (v23 + 3 >= v31)
  {
    v1 = 0;
    v19 = v23 + 2;
    goto LABEL_33;
  }
  v24 = *(_QWORD *)(v32 + 8 * v19);
  if (v24)
  {
LABEL_11:
    v23 = v19;
    goto LABEL_15;
  }
  v25 = v23 + 4;
  if (v23 + 4 >= v31)
  {
LABEL_29:
    v1 = 0;
LABEL_33:
    v18 = v29;
    v9 = v30;
    goto LABEL_34;
  }
  v24 = *(_QWORD *)(v32 + 8 * v25);
  if (v24)
  {
LABEL_14:
    v23 = v25;
    goto LABEL_15;
  }
  while (1)
  {
    v23 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v23 >= v31)
    {
      v1 = 0;
      v19 = v28;
      goto LABEL_33;
    }
    v24 = *(_QWORD *)(v32 + 8 * v23);
    ++v25;
    if (v24)
      goto LABEL_15;
  }
LABEL_37:
  __break(1u);
}

void sub_1C013481C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_9_30();
  v5 = v4 + 56;
  OUTLINED_FUNCTION_8_27();
  if (!v7)
  {
    OUTLINED_FUNCTION_19_20();
LABEL_35:
    OUTLINED_FUNCTION_4_38();
    OUTLINED_FUNCTION_2_0();
    return;
  }
  if (!v6)
    goto LABEL_35;
  if (v6 < 0)
  {
LABEL_37:
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_1_43();
    if (!v1)
      goto LABEL_6;
LABEL_5:
    OUTLINED_FUNCTION_5_32();
    while (1)
    {
      OUTLINED_FUNCTION_29_15();
      if (v12)
      {
        swift_bridgeObjectRetain();
        goto LABEL_35;
      }
      v0 += 16;
      swift_bridgeObjectRetain();
      if (v1)
        goto LABEL_5;
LABEL_6:
      v8 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
        goto LABEL_37;
      }
      if (v8 >= v2)
        goto LABEL_35;
      if (!*(_QWORD *)(v5 + 8 * v8))
      {
        OUTLINED_FUNCTION_17_17();
        if (v9 == v10)
        {
          OUTLINED_FUNCTION_24_13();
          goto LABEL_35;
        }
        if (!*(_QWORD *)(v5 + 8 * v3))
        {
          OUTLINED_FUNCTION_22_17();
          if (v9 == v10)
            goto LABEL_35;
          if (!*(_QWORD *)(v5 + 8 * v11))
          {
            OUTLINED_FUNCTION_16_18();
            if (v9 == v10)
            {
              OUTLINED_FUNCTION_26_16();
              goto LABEL_35;
            }
            if (!*(_QWORD *)(v5 + 8 * v3))
            {
              OUTLINED_FUNCTION_21_17();
              if (v9 == v10)
                goto LABEL_35;
              if (!*(_QWORD *)(v5 + 8 * v13))
                break;
            }
          }
        }
      }
LABEL_16:
      OUTLINED_FUNCTION_3_47();
    }
    while (!__OFADD__(v13, 1))
    {
      if (v13 + 1 >= v2)
      {
        OUTLINED_FUNCTION_25_11();
        goto LABEL_35;
      }
      OUTLINED_FUNCTION_18_19();
      if (v14)
        goto LABEL_16;
    }
  }
  __break(1u);
}

void sub_1C0134960()
{
  sub_1C01355BC();
}

void sub_1C0134974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_9_30();
  OUTLINED_FUNCTION_0_49();
  if (!v6)
  {
    OUTLINED_FUNCTION_19_20();
LABEL_35:
    OUTLINED_FUNCTION_4_38();
    OUTLINED_FUNCTION_2_0();
    return;
  }
  if (!v5)
    goto LABEL_35;
  if (v5 < 0)
  {
LABEL_37:
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_1_43();
    if (!v2)
      goto LABEL_6;
LABEL_5:
    OUTLINED_FUNCTION_5_32();
    while (1)
    {
      OUTLINED_FUNCTION_29_15();
      if (v11)
      {
        swift_bridgeObjectRetain();
        goto LABEL_35;
      }
      v0 += 16;
      swift_bridgeObjectRetain();
      if (v2)
        goto LABEL_5;
LABEL_6:
      v7 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
        goto LABEL_37;
      }
      if (v7 >= v3)
        goto LABEL_35;
      if (!*(_QWORD *)(v1 + 8 * v7))
      {
        OUTLINED_FUNCTION_17_17();
        if (v8 == v9)
        {
          OUTLINED_FUNCTION_24_13();
          goto LABEL_35;
        }
        if (!*(_QWORD *)(v1 + 8 * v4))
        {
          OUTLINED_FUNCTION_22_17();
          if (v8 == v9)
            goto LABEL_35;
          if (!*(_QWORD *)(v1 + 8 * v10))
          {
            OUTLINED_FUNCTION_16_18();
            if (v8 == v9)
            {
              OUTLINED_FUNCTION_26_16();
              goto LABEL_35;
            }
            if (!*(_QWORD *)(v1 + 8 * v4))
            {
              OUTLINED_FUNCTION_21_17();
              if (v8 == v9)
                goto LABEL_35;
              if (!*(_QWORD *)(v1 + 8 * v12))
                break;
            }
          }
        }
      }
LABEL_16:
      OUTLINED_FUNCTION_3_47();
    }
    while (!__OFADD__(v12, 1))
    {
      if (v12 + 1 >= v3)
      {
        OUTLINED_FUNCTION_25_11();
        goto LABEL_35;
      }
      OUTLINED_FUNCTION_18_19();
      if (v13)
        goto LABEL_16;
    }
  }
  __break(1u);
}

void sub_1C0134A98()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_9_30();
  OUTLINED_FUNCTION_0_49();
  if (!v8)
  {
    OUTLINED_FUNCTION_19_20();
LABEL_35:
    OUTLINED_FUNCTION_4_38();
    OUTLINED_FUNCTION_2_0();
    return;
  }
  v9 = v7;
  if (!v7)
    goto LABEL_35;
  if (v7 < 0)
  {
LABEL_37:
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_1_43();
    if (!v4)
      goto LABEL_6;
LABEL_5:
    OUTLINED_FUNCTION_5_32();
    while (1)
    {
      ++v3;
      *v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 8 * v10);
      if (v3 == v9)
      {
        swift_retain();
        goto LABEL_35;
      }
      ++v1;
      swift_retain();
      if (v4)
        goto LABEL_5;
LABEL_6:
      v11 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
        goto LABEL_37;
      }
      if (v11 >= v5)
        goto LABEL_35;
      if (!*(_QWORD *)(v2 + 8 * v11))
      {
        OUTLINED_FUNCTION_17_17();
        if (v12 == v13)
        {
          OUTLINED_FUNCTION_24_13();
          goto LABEL_35;
        }
        if (!*(_QWORD *)(v2 + 8 * v6))
        {
          OUTLINED_FUNCTION_22_17();
          if (v12 == v13)
            goto LABEL_35;
          if (!*(_QWORD *)(v2 + 8 * v14))
          {
            OUTLINED_FUNCTION_16_18();
            if (v12 == v13)
            {
              OUTLINED_FUNCTION_26_16();
              goto LABEL_35;
            }
            if (!*(_QWORD *)(v2 + 8 * v6))
            {
              OUTLINED_FUNCTION_21_17();
              if (v12 == v13)
                goto LABEL_35;
              if (!*(_QWORD *)(v2 + 8 * v15))
                break;
            }
          }
        }
      }
LABEL_16:
      OUTLINED_FUNCTION_3_47();
    }
    while (!__OFADD__(v15, 1))
    {
      if (v15 + 1 >= v5)
      {
        OUTLINED_FUNCTION_25_11();
        goto LABEL_35;
      }
      OUTLINED_FUNCTION_18_19();
      if (v16)
        goto LABEL_16;
    }
  }
  __break(1u);
}

void sub_1C0134BCC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  OUTLINED_FUNCTION_10_36();
  if (!v4)
  {
    v1 = 0;
LABEL_30:
    OUTLINED_FUNCTION_7_33(v0, v1, v2, v3);
    return;
  }
  if (!v1)
    goto LABEL_30;
  if (v1 < 0)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  OUTLINED_FUNCTION_13_21();
  while (v9)
  {
    v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v11 = v10 | (v8 << 6);
LABEL_17:
    ++v6;
    *v5++ = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v11);
    if (v6 == v1)
      goto LABEL_30;
  }
  v12 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v12 >= v7)
    goto LABEL_29;
  v13 = *(_QWORD *)(v3 + 8 * v12);
  if (v13)
  {
LABEL_16:
    v16 = __clz(__rbit64(v13));
    v9 = (v13 - 1) & v13;
    v11 = v16 + (v12 << 6);
    v8 = v12;
    goto LABEL_17;
  }
  v14 = v8 + 2;
  if (v12 + 1 >= v7)
    goto LABEL_29;
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
LABEL_12:
    v12 = v14;
    goto LABEL_16;
  }
  v15 = v12 + 2;
  if (v12 + 2 >= v7)
    goto LABEL_29;
  v13 = *(_QWORD *)(v3 + 8 * v15);
  if (v13)
    goto LABEL_15;
  v14 = v12 + 3;
  if (v12 + 3 >= v7)
    goto LABEL_29;
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
    goto LABEL_12;
  v15 = v12 + 4;
  if (v12 + 4 >= v7)
  {
LABEL_29:
    v1 = v6;
    goto LABEL_30;
  }
  v13 = *(_QWORD *)(v3 + 8 * v15);
  if (v13)
  {
LABEL_15:
    v12 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    v12 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v12 >= v7)
      goto LABEL_29;
    v13 = *(_QWORD *)(v3 + 8 * v12);
    ++v15;
    if (v13)
      goto LABEL_16;
  }
LABEL_33:
  __break(1u);
}

void sub_1C0134D30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_9_30();
  OUTLINED_FUNCTION_0_49();
  if (!v7)
  {
    OUTLINED_FUNCTION_19_20();
LABEL_35:
    OUTLINED_FUNCTION_4_38();
    OUTLINED_FUNCTION_2_0();
    return;
  }
  v8 = v6;
  if (!v6)
    goto LABEL_35;
  if (v6 < 0)
  {
LABEL_37:
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_1_43();
    if (!v3)
      goto LABEL_6;
LABEL_5:
    OUTLINED_FUNCTION_5_32();
    while (1)
    {
      v13 = OUTLINED_FUNCTION_41_8();
      v16 = *(_QWORD *)(v15 + 8 * v14);
      *v0 = v17;
      v0[1] = v13;
      v0[2] = v16;
      if (v2 == v8)
      {
        swift_bridgeObjectRetain();
        goto LABEL_35;
      }
      v0 += 3;
      swift_bridgeObjectRetain();
      if (v3)
        goto LABEL_5;
LABEL_6:
      v9 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
        __break(1u);
        goto LABEL_37;
      }
      if (v9 >= v4)
        goto LABEL_35;
      if (!*(_QWORD *)(v1 + 8 * v9))
      {
        OUTLINED_FUNCTION_17_17();
        if (v10 == v11)
        {
          OUTLINED_FUNCTION_24_13();
          goto LABEL_35;
        }
        if (!*(_QWORD *)(v1 + 8 * v5))
        {
          OUTLINED_FUNCTION_22_17();
          if (v10 == v11)
            goto LABEL_35;
          if (!*(_QWORD *)(v1 + 8 * v12))
          {
            OUTLINED_FUNCTION_16_18();
            if (v10 == v11)
            {
              OUTLINED_FUNCTION_26_16();
              goto LABEL_35;
            }
            if (!*(_QWORD *)(v1 + 8 * v5))
            {
              OUTLINED_FUNCTION_21_17();
              if (v10 == v11)
                goto LABEL_35;
              if (!*(_QWORD *)(v1 + 8 * v18))
                break;
            }
          }
        }
      }
LABEL_16:
      OUTLINED_FUNCTION_3_47();
    }
    while (!__OFADD__(v18, 1))
    {
      if (v18 + 1 >= v4)
      {
        OUTLINED_FUNCTION_25_11();
        goto LABEL_35;
      }
      OUTLINED_FUNCTION_18_19();
      if (v19)
        goto LABEL_16;
    }
  }
  __break(1u);
}

void sub_1C0134E64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_18_0();
  v3 = v2;
  v5 = v4;
  v6 = *(_QWORD *)(v2 + 16);
  if (v0)
  {
    if (v1)
    {
      if (v1 < 0)
      {
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      if (!v6)
      {
LABEL_19:
        v7 = 0;
        goto LABEL_16;
      }
      v7 = v6 - 1;
      v8 = (_QWORD *)(v2 + 24 * (v6 - 1));
      v9 = v8[4];
      v10 = v8[5];
      v11 = v8[6];
      *v0 = v9;
      v0[1] = v10;
      v0[2] = v11;
      if (v1 != 1 && v6 != 1)
      {
        v12 = 0;
        v13 = v1 - 2;
        v14 = (uint64_t *)(v2 + 24 * v6);
        v15 = v0 + 5;
        while (v6 + v12 - 1 <= *(_QWORD *)(v3 + 16))
        {
          v16 = *(v14 - 1);
          v17 = *v14;
          *(v15 - 2) = *(v14 - 2);
          *(v15 - 1) = v16;
          *v15 = v17;
          if (!(v13 + v12))
          {
            OUTLINED_FUNCTION_21();
            v7 = v6 + v12 - 2;
            goto LABEL_15;
          }
          swift_bridgeObjectRetain();
          --v12;
          v14 -= 3;
          v15 += 3;
          if (v6 + v12 == 1)
          {
            v7 = 0;
            goto LABEL_15;
          }
        }
        __break(1u);
        goto LABEL_18;
      }
LABEL_15:
      OUTLINED_FUNCTION_21();
    }
    else
    {
      v7 = *(_QWORD *)(v2 + 16);
    }
  }
  else
  {
    v7 = *(_QWORD *)(v2 + 16);
  }
LABEL_16:
  *v5 = v3;
  v5[1] = v7;
  OUTLINED_FUNCTION_1();
}

void sub_1C0134F78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  OUTLINED_FUNCTION_14_27();
  v11 = v10 & v9;
  if (!v6)
  {
    v3 = 0;
LABEL_34:
    *v5 = v0;
    v5[1] = v1;
    v5[2] = ~v8;
    v5[3] = v3;
    v5[4] = v11;
    return;
  }
  v12 = v7;
  if (!v7)
  {
    v3 = 0;
    goto LABEL_34;
  }
  if (v7 < 0)
    goto LABEL_36;
  v13 = v6;
  v29 = v8;
  v30 = v5;
  OUTLINED_FUNCTION_32_11();
  v28 = v14;
  if (!v11)
    goto LABEL_6;
LABEL_5:
  OUTLINED_FUNCTION_40_10();
  v16 = v15 | (v3 << 6);
  while (1)
  {
    ++v2;
    v20 = *(_QWORD *)(v0 + 56) + 40 * v16;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 16);
    v24 = *(_DWORD *)(v20 + 24);
    v25 = *(_QWORD *)(v20 + 32);
    *(_QWORD *)v13 = v21;
    *(_QWORD *)(v13 + 8) = v22;
    *(_QWORD *)(v13 + 16) = v23;
    *(_DWORD *)(v13 + 24) = v24;
    *(_QWORD *)(v13 + 32) = v25;
    if (v2 == v12)
    {
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_21();
LABEL_33:
      v8 = v29;
      v5 = v30;
      goto LABEL_34;
    }
    v13 += 40;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_21();
    if (v11)
      goto LABEL_5;
LABEL_6:
    v17 = v3 + 1;
    if (__OFADD__(v3, 1))
      break;
    if (v17 >= v4)
      goto LABEL_29;
    if (!*(_QWORD *)(v1 + 8 * v17))
    {
      v3 += 2;
      if (v17 + 1 >= v4)
      {
        v11 = 0;
        v3 = v17;
        goto LABEL_33;
      }
      if (!*(_QWORD *)(v1 + 8 * v3))
      {
        if (v17 + 2 >= v4)
          goto LABEL_29;
        if (!*(_QWORD *)(v1 + 8 * (v17 + 2)))
        {
          v3 = v17 + 3;
          if (v17 + 3 >= v4)
          {
            v11 = 0;
            v3 = v17 + 2;
            goto LABEL_33;
          }
          if (*(_QWORD *)(v1 + 8 * v3))
            goto LABEL_14;
          v26 = v17 + 4;
          if (v17 + 4 >= v4)
          {
LABEL_29:
            v11 = 0;
            goto LABEL_33;
          }
          if (!*(_QWORD *)(v1 + 8 * v26))
          {
            do
            {
              v27 = v26 + 1;
              if (__OFADD__(v26, 1))
                goto LABEL_37;
              if (v27 >= v4)
              {
                v11 = 0;
                v3 = v28;
                goto LABEL_33;
              }
              ++v26;
            }
            while (!*(_QWORD *)(v1 + 8 * v27));
          }
        }
      }
    }
LABEL_14:
    OUTLINED_FUNCTION_44_11();
    v16 = v19 + (v18 << 6);
    v3 = v18;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1C013514C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  OUTLINED_FUNCTION_10_36();
  if (!v4)
  {
    v1 = 0;
LABEL_30:
    OUTLINED_FUNCTION_7_33(v0, v1, v2, v3);
    return;
  }
  if (!v1)
    goto LABEL_30;
  if (v1 < 0)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  OUTLINED_FUNCTION_13_21();
  while (v9)
  {
    v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v11 = v10 | (v8 << 6);
LABEL_17:
    ++v6;
    *v5++ = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v11);
    if (v6 == v1)
      goto LABEL_30;
  }
  v12 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v12 >= v7)
    goto LABEL_29;
  v13 = *(_QWORD *)(v3 + 8 * v12);
  if (v13)
  {
LABEL_16:
    v16 = __clz(__rbit64(v13));
    v9 = (v13 - 1) & v13;
    v11 = v16 + (v12 << 6);
    v8 = v12;
    goto LABEL_17;
  }
  v14 = v8 + 2;
  if (v12 + 1 >= v7)
    goto LABEL_29;
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
LABEL_12:
    v12 = v14;
    goto LABEL_16;
  }
  v15 = v12 + 2;
  if (v12 + 2 >= v7)
    goto LABEL_29;
  v13 = *(_QWORD *)(v3 + 8 * v15);
  if (v13)
    goto LABEL_15;
  v14 = v12 + 3;
  if (v12 + 3 >= v7)
    goto LABEL_29;
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
    goto LABEL_12;
  v15 = v12 + 4;
  if (v12 + 4 >= v7)
  {
LABEL_29:
    v1 = v6;
    goto LABEL_30;
  }
  v13 = *(_QWORD *)(v3 + 8 * v15);
  if (v13)
  {
LABEL_15:
    v12 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    v12 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v12 >= v7)
      goto LABEL_29;
    v13 = *(_QWORD *)(v3 + 8 * v12);
    ++v15;
    if (v13)
      goto LABEL_16;
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_1C01352B0(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;

  v4 = a4;
  v7 = (_QWORD *)result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1C03045C4();
    type metadata accessor for DateTimeConstraint();
    sub_1C00C43F4((unint64_t *)&qword_1EF5B9808, 255, (uint64_t (*)(uint64_t))type metadata accessor for DateTimeConstraint, (uint64_t)&unk_1C031D374);
    result = sub_1C0304270();
    v4 = v30;
    v8 = v31;
    v9 = v32;
    v10 = v33;
    v11 = v34;
  }
  else
  {
    v10 = 0;
    v12 = -1 << *(_BYTE *)(a4 + 32);
    v8 = a4 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(a4 + 56);
  }
  if (!a2)
  {
    v15 = 0;
LABEL_46:
    *v7 = v4;
    v7[1] = v8;
    v7[2] = v9;
    v7[3] = v10;
    v7[4] = v11;
    return v15;
  }
  if (!a3)
  {
    v15 = 0;
    goto LABEL_46;
  }
  if (a3 < 0)
    goto LABEL_48;
  v15 = 0;
  v28 = (unint64_t)(v9 + 64) >> 6;
  v27 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_1C0304624())
        goto LABEL_45;
      type metadata accessor for DateTimeConstraint();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v18 = v29;
      result = swift_unknownObjectRelease();
      if (!v29)
        goto LABEL_45;
      goto LABEL_27;
    }
    if (!v11)
      break;
    v16 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v17 = v16 | (v10 << 6);
LABEL_26:
    v18 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    result = swift_retain();
    if (!v18)
      goto LABEL_45;
LABEL_27:
    ++v15;
    *a2++ = v18;
    if (v15 == a3)
    {
      v15 = a3;
LABEL_45:
      v9 = v27;
      goto LABEL_46;
    }
  }
  v19 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v19 >= v28)
    {
      v11 = 0;
      goto LABEL_45;
    }
    if (!*(_QWORD *)(v8 + 8 * v19))
    {
      v20 = v10 + 2;
      if (v10 + 2 >= v28)
      {
        v11 = 0;
        ++v10;
        goto LABEL_45;
      }
      if (!*(_QWORD *)(v8 + 8 * v20))
      {
        if (v10 + 3 >= v28)
          goto LABEL_42;
        if (!*(_QWORD *)(v8 + 8 * (v10 + 3)))
        {
          v20 = v10 + 4;
          if (v10 + 4 >= v28)
          {
            v11 = 0;
            v10 += 3;
            goto LABEL_45;
          }
          if (!*(_QWORD *)(v8 + 8 * v20))
          {
            if (v10 + 5 >= v28)
            {
LABEL_42:
              v11 = 0;
              v10 = v20;
              goto LABEL_45;
            }
            if (!*(_QWORD *)(v8 + 8 * (v10 + 5)))
            {
              v25 = v10 + 6;
              while (v25 < v28)
              {
                if (*(_QWORD *)(v8 + 8 * v25++))
                  goto LABEL_25;
              }
              v11 = 0;
              v10 = v28 - 1;
              goto LABEL_45;
            }
          }
        }
      }
    }
LABEL_25:
    OUTLINED_FUNCTION_37_10();
    v11 = v22 & v21;
    v17 = v24 + (v23 << 6);
    v10 = v23;
    goto LABEL_26;
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

void sub_1C01355A8()
{
  sub_1C01355BC();
}

void sub_1C01355BC()
{
  uint64_t (*v0)(_QWORD);
  uint64_t (*v1)(_QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  int64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  int64_t v40;
  uint64_t *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  OUTLINED_FUNCTION_18_0();
  v1 = v0;
  v3 = v2;
  v48 = v4;
  v6 = v5;
  v8 = v7;
  v41 = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(v9);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v1(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v46 = (char *)&v40 - v15;
  v47 = v3;
  v17 = v3 + 56;
  v16 = *(_QWORD *)(v3 + 56);
  v18 = -1 << *(_BYTE *)(v3 + 32);
  v42 = v8;
  v43 = v18;
  v19 = -v18;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!v6)
  {
    v22 = 0;
LABEL_37:
    v38 = v42;
    v39 = ~v43;
    *v42 = v47;
    v38[1] = v17;
    v38[2] = v39;
    v38[3] = v22;
    v38[4] = v21;
    OUTLINED_FUNCTION_1();
    return;
  }
  if (!v48)
  {
    v22 = 0;
    goto LABEL_37;
  }
  if (v48 < 0)
    goto LABEL_39;
  v22 = 0;
  v23 = 0;
  v44 = v3 + 56;
  v45 = (unint64_t)(63 - v43) >> 6;
  v40 = v45 - 1;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    v32 = *(_QWORD *)(v14 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v12, *(_QWORD *)(v47 + 48) + v32 * v25, v13);
    OUTLINED_FUNCTION_40_2((uint64_t)v12, 0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
    {
      v17 = v44;
LABEL_36:
      sub_1C003E978((uint64_t)v12, v41);
      goto LABEL_37;
    }
    v33 = v22;
    v49 = v23 + 1;
    v34 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v35 = v46;
    v34(v46, v12, v13);
    v34(v6, v35, v13);
    v23 = v49;
    if (v49 == v48)
    {
      v17 = v44;
      v22 = v33;
      goto LABEL_37;
    }
    v6 += v32;
    v22 = v33;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    v17 = v44;
    if (v26 >= v45)
      goto LABEL_35;
    if (*(_QWORD *)(v44 + 8 * v26))
      goto LABEL_19;
    v27 = v22 + 2;
    ++v22;
    if (v26 + 1 >= v45)
      goto LABEL_35;
    if (*(_QWORD *)(v44 + 8 * v27))
      goto LABEL_19;
    v22 = v26 + 1;
    if (v26 + 2 >= v45)
      goto LABEL_35;
    if (*(_QWORD *)(v44 + 8 * (v26 + 2)))
      goto LABEL_19;
    v22 = v26 + 2;
    if (v26 + 3 >= v45)
      goto LABEL_35;
    if (*(_QWORD *)(v44 + 8 * (v26 + 3)))
      goto LABEL_19;
    v36 = v26 + 4;
    v22 = v26 + 3;
    if (v26 + 4 >= v45)
    {
LABEL_35:
      OUTLINED_FUNCTION_40_2((uint64_t)v12, 1);
      v21 = 0;
      goto LABEL_36;
    }
    if (!*(_QWORD *)(v44 + 8 * v36))
    {
      do
      {
        v37 = v36 + 1;
        if (__OFADD__(v36, 1))
          goto LABEL_40;
        if (v37 >= v45)
        {
          v22 = v40;
          goto LABEL_35;
        }
        ++v36;
      }
      while (!*(_QWORD *)(v44 + 8 * v37));
    }
LABEL_19:
    OUTLINED_FUNCTION_37_10();
    v21 = v29 & v28;
    v25 = v31 + (v30 << 6);
    v22 = v30;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

void sub_1C01358CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_9_30();
  OUTLINED_FUNCTION_0_49();
  if (!v7)
  {
    OUTLINED_FUNCTION_19_20();
LABEL_35:
    OUTLINED_FUNCTION_4_38();
    OUTLINED_FUNCTION_2_0();
    return;
  }
  v8 = v6;
  if (!v6)
    goto LABEL_35;
  if (v6 < 0)
  {
LABEL_37:
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_1_43();
    if (!v3)
      goto LABEL_6;
LABEL_5:
    OUTLINED_FUNCTION_5_32();
    while (1)
    {
      v13 = OUTLINED_FUNCTION_41_8();
      v16 = *(_QWORD *)(v15 + 8 * v14);
      *v0 = v17;
      v0[1] = v13;
      v0[2] = v16;
      if (v2 == v8)
      {
        swift_bridgeObjectRetain();
        goto LABEL_35;
      }
      v0 += 3;
      swift_bridgeObjectRetain();
      if (v3)
        goto LABEL_5;
LABEL_6:
      v9 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
        __break(1u);
        goto LABEL_37;
      }
      if (v9 >= v4)
        goto LABEL_35;
      if (!*(_QWORD *)(v1 + 8 * v9))
      {
        OUTLINED_FUNCTION_17_17();
        if (v10 == v11)
        {
          OUTLINED_FUNCTION_24_13();
          goto LABEL_35;
        }
        if (!*(_QWORD *)(v1 + 8 * v5))
        {
          OUTLINED_FUNCTION_22_17();
          if (v10 == v11)
            goto LABEL_35;
          if (!*(_QWORD *)(v1 + 8 * v12))
          {
            OUTLINED_FUNCTION_16_18();
            if (v10 == v11)
            {
              OUTLINED_FUNCTION_26_16();
              goto LABEL_35;
            }
            if (!*(_QWORD *)(v1 + 8 * v5))
            {
              OUTLINED_FUNCTION_21_17();
              if (v10 == v11)
                goto LABEL_35;
              if (!*(_QWORD *)(v1 + 8 * v18))
                break;
            }
          }
        }
      }
LABEL_16:
      OUTLINED_FUNCTION_3_47();
    }
    while (!__OFADD__(v18, 1))
    {
      if (v18 + 1 >= v4)
      {
        OUTLINED_FUNCTION_25_11();
        goto LABEL_35;
      }
      OUTLINED_FUNCTION_18_19();
      if (v19)
        goto LABEL_16;
    }
  }
  __break(1u);
}

void sub_1C0135A00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _BYTE __dst[136];

  OUTLINED_FUNCTION_14_27();
  v11 = v10 & v9;
  if (!v6)
  {
    v3 = 0;
LABEL_34:
    *v5 = v0;
    v5[1] = v1;
    v5[2] = ~v8;
    v5[3] = v3;
    v5[4] = v11;
    return;
  }
  v12 = v7;
  if (!v7)
  {
    v3 = 0;
    goto LABEL_34;
  }
  if (v7 < 0)
    goto LABEL_36;
  v13 = v6;
  v27 = v8;
  v28 = v5;
  OUTLINED_FUNCTION_32_11();
  v26 = v14;
  if (!v11)
    goto LABEL_6;
LABEL_5:
  v15 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  v16 = v15 | (v3 << 6);
  while (1)
  {
    ++v2;
    v22 = (const void *)(*(_QWORD *)(v0 + 48) + (v16 << 7));
    memcpy(__dst, v22, 0x80uLL);
    v23 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8 * v16);
    memmove(v13, v22, 0x80uLL);
    v13[16] = v23;
    if (v2 == v12)
    {
      sub_1C00C7588((uint64_t)__dst);
LABEL_33:
      v8 = v27;
      v5 = v28;
      goto LABEL_34;
    }
    v13 += 17;
    sub_1C00C7588((uint64_t)__dst);
    if (v11)
      goto LABEL_5;
LABEL_6:
    v17 = v3 + 1;
    if (__OFADD__(v3, 1))
      break;
    if (v17 >= v4)
      goto LABEL_29;
    if (!*(_QWORD *)(v1 + 8 * v17))
    {
      v3 += 2;
      if (v17 + 1 >= v4)
      {
        v11 = 0;
        v3 = v17;
        goto LABEL_33;
      }
      if (!*(_QWORD *)(v1 + 8 * v3))
      {
        if (v17 + 2 >= v4)
          goto LABEL_29;
        if (!*(_QWORD *)(v1 + 8 * (v17 + 2)))
        {
          v3 = v17 + 3;
          if (v17 + 3 >= v4)
          {
            v11 = 0;
            v3 = v17 + 2;
            goto LABEL_33;
          }
          if (*(_QWORD *)(v1 + 8 * v3))
            goto LABEL_14;
          v24 = v17 + 4;
          if (v17 + 4 >= v4)
          {
LABEL_29:
            v11 = 0;
            goto LABEL_33;
          }
          if (!*(_QWORD *)(v1 + 8 * v24))
          {
            do
            {
              v25 = v24 + 1;
              if (__OFADD__(v24, 1))
                goto LABEL_37;
              if (v25 >= v4)
              {
                v11 = 0;
                v3 = v26;
                goto LABEL_33;
              }
              ++v24;
            }
            while (!*(_QWORD *)(v1 + 8 * v25));
          }
        }
      }
    }
LABEL_14:
    OUTLINED_FUNCTION_37_10();
    v11 = v19 & v18;
    v16 = v21 + (v20 << 6);
    v3 = v20;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1C0135BF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_18_0();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B90D0);
  v42 = *(_QWORD *)(v9 - 8);
  v43 = v9;
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_19_2();
  v12 = (_QWORD *)(v10 - v11);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v35 - v14;
  v44 = v2;
  v16 = *(_QWORD *)(v2 + 64);
  v40 = v2 + 64;
  v17 = -1 << *(_BYTE *)(v2 + 32);
  if (-v17 < 64)
    v18 = ~(-1 << -(char)v17);
  else
    v18 = -1;
  v19 = v18 & v16;
  if (!v6)
  {
    v20 = 0;
LABEL_37:
    v34 = v40;
    *v8 = v44;
    v8[1] = v34;
    v8[2] = ~v17;
    v8[3] = v20;
    v8[4] = v19;
    OUTLINED_FUNCTION_1();
    return;
  }
  if (!v4)
  {
    v20 = 0;
    goto LABEL_37;
  }
  if (v4 < 0)
    goto LABEL_39;
  v37 = v17;
  v38 = v8;
  v20 = 0;
  OUTLINED_FUNCTION_42_10();
  v39 = v21;
  v36 = v21 - 1;
  v41 = v4;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  OUTLINED_FUNCTION_40_10();
  v23 = v22 | (v20 << 6);
  while (1)
  {
    ++v0;
    v27 = *(_QWORD *)(v44 + 56);
    v28 = (uint64_t *)(*(_QWORD *)(v44 + 48) + 16 * v23);
    v29 = *v28;
    v30 = v28[1];
    v31 = type metadata accessor for SiriRemembersV1API.Aggregation();
    sub_1C00655B4(v27 + *(_QWORD *)(*(_QWORD *)(v31 - 8) + 72) * v23, (uint64_t)v12 + *(int *)(v43 + 48), (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
    *v12 = v29;
    v12[1] = v30;
    sub_1C008F8B8((uint64_t)v12, (uint64_t)v15, &qword_1EF5B90D0);
    sub_1C008F8B8((uint64_t)v15, v6, &qword_1EF5B90D0);
    if (v0 == v41)
    {
      swift_bridgeObjectRetain();
LABEL_36:
      v17 = v37;
      v8 = v38;
      goto LABEL_37;
    }
    v6 += *(_QWORD *)(v42 + 72);
    swift_bridgeObjectRetain();
    if (v19)
      goto LABEL_8;
LABEL_9:
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v24 >= v39)
      goto LABEL_32;
    if (!*(_QWORD *)(v40 + 8 * v24))
    {
      v20 += 2;
      if (v24 + 1 >= v39)
      {
        v19 = 0;
        v20 = v24;
        goto LABEL_36;
      }
      if (!*(_QWORD *)(v40 + 8 * v20))
      {
        if (v24 + 2 >= v39)
          goto LABEL_32;
        if (!*(_QWORD *)(v40 + 8 * (v24 + 2)))
        {
          v20 = v24 + 3;
          if (v24 + 3 >= v39)
          {
            v19 = 0;
            v20 = v24 + 2;
            goto LABEL_36;
          }
          if (*(_QWORD *)(v40 + 8 * v20))
            goto LABEL_17;
          v32 = v24 + 4;
          if (v24 + 4 >= v39)
          {
LABEL_32:
            v19 = 0;
            goto LABEL_36;
          }
          if (!*(_QWORD *)(v40 + 8 * v32))
          {
            do
            {
              v33 = v32 + 1;
              if (__OFADD__(v32, 1))
                goto LABEL_40;
              if (v33 >= v39)
              {
                v19 = 0;
                v20 = v36;
                goto LABEL_36;
              }
              ++v32;
            }
            while (!*(_QWORD *)(v40 + 8 * v33));
          }
        }
      }
    }
LABEL_17:
    OUTLINED_FUNCTION_44_11();
    v23 = v26 + (v25 << 6);
    v20 = v25;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

void sub_1C0135EB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_9_30();
  OUTLINED_FUNCTION_0_49();
  if (!v6)
  {
    OUTLINED_FUNCTION_19_20();
LABEL_35:
    OUTLINED_FUNCTION_4_38();
    OUTLINED_FUNCTION_2_0();
    return;
  }
  if (!v5)
    goto LABEL_35;
  if (v5 < 0)
  {
LABEL_37:
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_1_43();
    if (!v2)
      goto LABEL_6;
LABEL_5:
    OUTLINED_FUNCTION_5_32();
    while (1)
    {
      OUTLINED_FUNCTION_34_16();
      if (v11)
      {
        swift_unknownObjectRetain();
        goto LABEL_35;
      }
      v0 += 8;
      swift_unknownObjectRetain();
      if (v2)
        goto LABEL_5;
LABEL_6:
      v7 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
        goto LABEL_37;
      }
      if (v7 >= v3)
        goto LABEL_35;
      if (!*(_QWORD *)(v1 + 8 * v7))
      {
        OUTLINED_FUNCTION_17_17();
        if (v8 == v9)
        {
          OUTLINED_FUNCTION_24_13();
          goto LABEL_35;
        }
        if (!*(_QWORD *)(v1 + 8 * v4))
        {
          OUTLINED_FUNCTION_22_17();
          if (v8 == v9)
            goto LABEL_35;
          if (!*(_QWORD *)(v1 + 8 * v10))
          {
            OUTLINED_FUNCTION_16_18();
            if (v8 == v9)
            {
              OUTLINED_FUNCTION_26_16();
              goto LABEL_35;
            }
            if (!*(_QWORD *)(v1 + 8 * v4))
            {
              OUTLINED_FUNCTION_21_17();
              if (v8 == v9)
                goto LABEL_35;
              if (!*(_QWORD *)(v1 + 8 * v12))
                break;
            }
          }
        }
      }
LABEL_16:
      OUTLINED_FUNCTION_3_47();
    }
    while (!__OFADD__(v12, 1))
    {
      if (v12 + 1 >= v3)
      {
        OUTLINED_FUNCTION_25_11();
        goto LABEL_35;
      }
      OUTLINED_FUNCTION_18_19();
      if (v13)
        goto LABEL_16;
    }
  }
  __break(1u);
}

void sub_1C0135FE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  OUTLINED_FUNCTION_10_36();
  if (!v4)
  {
    v1 = 0;
LABEL_30:
    OUTLINED_FUNCTION_7_33(v0, v1, v2, v3);
    return;
  }
  if (!v1)
    goto LABEL_30;
  if (v1 < 0)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  OUTLINED_FUNCTION_13_21();
  while (v9)
  {
    v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v11 = v10 | (v8 << 6);
LABEL_17:
    ++v6;
    *v5++ = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v11);
    if (v6 == v1)
      goto LABEL_30;
  }
  v12 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v12 >= v7)
    goto LABEL_29;
  v13 = *(_QWORD *)(v3 + 8 * v12);
  if (v13)
  {
LABEL_16:
    v16 = __clz(__rbit64(v13));
    v9 = (v13 - 1) & v13;
    v11 = v16 + (v12 << 6);
    v8 = v12;
    goto LABEL_17;
  }
  v14 = v8 + 2;
  if (v12 + 1 >= v7)
    goto LABEL_29;
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
LABEL_12:
    v12 = v14;
    goto LABEL_16;
  }
  v15 = v12 + 2;
  if (v12 + 2 >= v7)
    goto LABEL_29;
  v13 = *(_QWORD *)(v3 + 8 * v15);
  if (v13)
    goto LABEL_15;
  v14 = v12 + 3;
  if (v12 + 3 >= v7)
    goto LABEL_29;
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
    goto LABEL_12;
  v15 = v12 + 4;
  if (v12 + 4 >= v7)
  {
LABEL_29:
    v1 = v6;
    goto LABEL_30;
  }
  v13 = *(_QWORD *)(v3 + 8 * v15);
  if (v13)
  {
LABEL_15:
    v12 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    v12 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v12 >= v7)
      goto LABEL_29;
    v13 = *(_QWORD *)(v3 + 8 * v12);
    ++v15;
    if (v13)
      goto LABEL_16;
  }
LABEL_33:
  __break(1u);
}

void sub_1C0136144()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  OUTLINED_FUNCTION_10_36();
  if (!v4)
  {
    v1 = 0;
LABEL_30:
    OUTLINED_FUNCTION_7_33(v0, v1, v2, v3);
    return;
  }
  if (!v1)
    goto LABEL_30;
  if (v1 < 0)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  OUTLINED_FUNCTION_13_21();
  while (v9)
  {
    v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v11 = v10 | (v8 << 6);
LABEL_17:
    ++v6;
    *v5++ = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v11);
    if (v6 == v1)
      goto LABEL_30;
  }
  v12 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v12 >= v7)
    goto LABEL_29;
  v13 = *(_QWORD *)(v3 + 8 * v12);
  if (v13)
  {
LABEL_16:
    v16 = __clz(__rbit64(v13));
    v9 = (v13 - 1) & v13;
    v11 = v16 + (v12 << 6);
    v8 = v12;
    goto LABEL_17;
  }
  v14 = v8 + 2;
  if (v12 + 1 >= v7)
    goto LABEL_29;
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
LABEL_12:
    v12 = v14;
    goto LABEL_16;
  }
  v15 = v12 + 2;
  if (v12 + 2 >= v7)
    goto LABEL_29;
  v13 = *(_QWORD *)(v3 + 8 * v15);
  if (v13)
    goto LABEL_15;
  v14 = v12 + 3;
  if (v12 + 3 >= v7)
    goto LABEL_29;
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
    goto LABEL_12;
  v15 = v12 + 4;
  if (v12 + 4 >= v7)
  {
LABEL_29:
    v1 = v6;
    goto LABEL_30;
  }
  v13 = *(_QWORD *)(v3 + 8 * v15);
  if (v13)
  {
LABEL_15:
    v12 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    v12 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v12 >= v7)
      goto LABEL_29;
    v13 = *(_QWORD *)(v3 + 8 * v12);
    ++v15;
    if (v13)
      goto LABEL_16;
  }
LABEL_33:
  __break(1u);
}

uint64_t OUTLINED_FUNCTION_4_38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *v0 = v1;
  v0[1] = v3;
  v0[2] = ~v4;
  v0[3] = v6;
  v0[4] = v5;
  return v2;
}

uint64_t OUTLINED_FUNCTION_7_33@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = a3;
  a1[1] = a4;
  a1[2] = ~v4;
  a1[3] = v5;
  a1[4] = v6;
  return a2;
}

uint64_t OUTLINED_FUNCTION_11_30()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_29_15()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v0);
  result = v3[1];
  *v2 = *v3;
  v2[1] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_30_11()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_34_16()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t result;

  result = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v0);
  *v2 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_41_8()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v0 + 8);
}

uint64_t OUTLINED_FUNCTION_48_10(uint64_t a1)
{
  return sub_1C0055268(a1, 0);
}

uint64_t sub_1C0136534(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, unsigned __int8 *a5)
{
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t inited;
  char v88;
  uint64_t v89;
  char v90;
  char v91;
  char *v92;
  char v93;
  char v94;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint8_t *v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  char v111;
  char v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  unsigned __int8 v119;
  uint64_t v120;

  v8 = *(_BYTE *)a2;
  v9 = *(_BYTE *)(a2 + 1);
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(_BYTE *)(a2 + 16);
  v12 = *(_BYTE *)(a2 + 17);
  v13 = *(_BYTE *)(a2 + 18);
  v14 = *a5;
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
  {
    v113 = *(_BYTE *)(a2 + 18);
    v103 = *(_BYTE *)(a2 + 17);
    if (sub_1C03047F8())
      sub_1C011F678(MEMORY[0x1E0DEE9D8]);
    else
      v15 = MEMORY[0x1E0DEE9E8];
    v12 = v103;
    v13 = v113;
  }
  else
  {
    v15 = MEMORY[0x1E0DEE9E8];
  }
  v120 = v15;
  if (*(_BYTE *)(a1 + 57) == 7)
  {
    v112 = v13;
    v110 = v12;
    LOBYTE(v114) = 38;
    sub_1C01369E4(a1, a2, a3, a4, 0, (char *)&v114, 1);
    if (v16)
    {
      OUTLINED_FUNCTION_2_45(v16, v17, v18, v19, v20, v21, v22, v23, v104, v105, v106, v107, v108);
      OUTLINED_FUNCTION_6_33();
    }
    v24 = *(char *)(a1 + 89);
    if (v24 != 7)
    {
      v25 = *(_QWORD *)(a1 + 96);
      v26 = *(unsigned __int8 *)(a1 + 104);
      v114 = qword_1C030DAE8[v24];
      v115 = v25;
      v116 = v26;
      v117 = 2;
      LOBYTE(v118) = v14;
      OUTLINED_FUNCTION_41_5();
      OUTLINED_FUNCTION_7_14();
      v29 = OUTLINED_FUNCTION_0_50(6, (uint64_t)&v114, v27, v28, (char *)&v118);
      OUTLINED_FUNCTION_2_45(v29, v30, v31, v32, v33, v34, v35, v36, v104, v105, v106, v107, v108);
      OUTLINED_FUNCTION_6_33();
    }
    if (*(_BYTE *)(a1 + 72) != 12)
    {
      OUTLINED_FUNCTION_3_48();
      OUTLINED_FUNCTION_7_14();
      v39 = OUTLINED_FUNCTION_0_50(9, (uint64_t)&v114, v37, v38, (char *)&v118);
      OUTLINED_FUNCTION_2_45(v39, v40, v41, v42, v43, v44, v45, v46, v104, v105, v106, v107, v108);
      OUTLINED_FUNCTION_6_33();
    }
    if ((*(_BYTE *)(a1 + 40) & 1) == 0)
    {
      OUTLINED_FUNCTION_3_48();
      OUTLINED_FUNCTION_7_14();
      v49 = OUTLINED_FUNCTION_0_50(9, (uint64_t)&v114, v47, v48, (char *)&v118);
      OUTLINED_FUNCTION_2_45(v49, v50, v51, v52, v53, v54, v55, v56, v104, v105, v106, v107, v108);
      OUTLINED_FUNCTION_6_33();
    }
    if ((*(_BYTE *)(a1 + 24) & 1) == 0)
    {
      OUTLINED_FUNCTION_3_48();
      OUTLINED_FUNCTION_7_14();
      v59 = OUTLINED_FUNCTION_0_50(5, (uint64_t)&v114, v57, v58, (char *)&v118);
      OUTLINED_FUNCTION_2_45(v59, v60, v61, v62, v63, v64, v65, v66, v104, v105, v106, v107, v108);
      OUTLINED_FUNCTION_6_33();
    }
    v111 = v11;
    if ((*(_BYTE *)(a1 + 56) & 1) == 0)
    {
      OUTLINED_FUNCTION_3_48();
      OUTLINED_FUNCTION_7_14();
      v69 = OUTLINED_FUNCTION_0_50(11, (uint64_t)&v114, v67, v68, (char *)&v118);
      OUTLINED_FUNCTION_2_45(v69, v70, v71, v72, v73, v74, v75, v76, v104, v105, v106, v107, v108);
      OUTLINED_FUNCTION_6_33();
    }
    v77 = *(_QWORD *)(a1 + 112);
    if (v77 && (v78 = *(unsigned __int8 *)(v77 + 56), v78 != 38))
    {
      v109 = v10;
      if (qword_1EF5B7F10 != -1)
        swift_once();
      v96 = sub_1C0303B98();
      __swift_project_value_buffer(v96, (uint64_t)qword_1EF5FC6C8);
      v97 = sub_1C0303B80();
      v98 = sub_1C03042E8();
      if (os_log_type_enabled(v97, v98))
      {
        v99 = (uint8_t *)OUTLINED_FUNCTION_4_0();
        v114 = OUTLINED_FUNCTION_4_0();
        *(_DWORD *)v99 = 136315138;
        LOBYTE(v118) = v78;
        v100 = sub_1C0303EF8();
        v118 = sub_1C003E6D8(v100, v101, &v114);
        sub_1C03044B0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C0039000, v97, v98, "generating constraints for %s", v99, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_5();
      }

      LOBYTE(v118) = v78;
      LOBYTE(v114) = v8;
      BYTE1(v114) = v9;
      v115 = v109;
      LOBYTE(v116) = v111;
      BYTE1(v116) = v110;
      BYTE2(v116) = v112;
      v119 = v14;
      sub_1C0136B54((unsigned __int8 *)&v118, a1, (char *)&v114, a3, a4, &v119);
      sub_1C007901C(v102);
    }
    else
    {
      LOBYTE(v114) = v14;
      v79 = sub_1C0136F70(a1);
      if (v79)
      {
        OUTLINED_FUNCTION_2_45(v79, v80, v81, v82, v83, v84, v85, v86, v104, v105, v106, v107, v108);
        OUTLINED_FUNCTION_6_33();
      }
    }
    return v120;
  }
  else
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727640);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C030A730;
    v115 = 0;
    v116 = 0;
    v117 = 0;
    LOBYTE(v118) = 40;
    OUTLINED_FUNCTION_41_5();
    OUTLINED_FUNCTION_7_14();
    OUTLINED_FUNCTION_11_31();
    *(_QWORD *)(inited + 32) = sub_1C0078A30(v88, v89, v90, v91, v92, v93, 1, v94);
    sub_1C0304150();
    return sub_1C01AAEB8(inited);
  }
}

void sub_1C01369E4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, char *a6, char a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  char v28;
  _QWORD v29[3];
  char v30;

  v13 = sub_1C0301EC4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a1 + 64);
  if (v17)
  {
    v26 = a4;
    v27 = a5;
    v18 = *a6;
    v20 = *(_QWORD *)(v17 + 16);
    v19 = *(_QWORD *)(v17 + 24);
    v21 = *(unsigned __int8 *)(v17 + 48);
    if (v21 == 12)
    {
      v22 = a3 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_calendar;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v22, v13);
      swift_bridgeObjectRetain();
      sub_1C02BBB50((uint64_t)v16, (char *)v29);
      if (LOBYTE(v29[0]) == 12)
        v21 = 2;
      else
        v21 = LOBYTE(v29[0]);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v23 = *(_QWORD *)(a1 + 112);
    if (v23)
      v24 = (unint64_t)*(unsigned __int8 *)(v23 + 57) << 8;
    else
      v24 = 5120;
    v29[0] = v20;
    v29[1] = v19;
    v29[2] = v24 | v21;
    v30 = 3;
    v28 = v18;
    OUTLINED_FUNCTION_41_5();
    OUTLINED_FUNCTION_7_14();
    sub_1C0078A30(10, (uint64_t)v29, v26, v27, &v28, 1, a7 & 1, 0);
  }
  OUTLINED_FUNCTION_1();
}

void sub_1C0136B54(unsigned __int8 *a1, uint64_t a2, char *a3, uint64_t a4, unsigned int a5, unsigned __int8 *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  char v15;
  char v16;
  int v17;
  char v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  int v43;
  char v44;
  char v45;
  int v46;
  int v47;
  int v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[2];
  char v54;
  char v55;
  char v56;
  _QWORD v57[2];

  v49 = a5;
  v51 = a4;
  v10 = sub_1C0301DB0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v15 = *a3;
  v16 = a3[1];
  v50 = *((_QWORD *)a3 + 1);
  v17 = a3[16];
  v18 = a3[17];
  v19 = a3[18];
  v47 = *a6;
  v52 = a2;
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
  {
    v46 = v19;
    v42 = v18;
    v48 = v17;
    v43 = v14;
    v44 = v16;
    v45 = v15;
    if (sub_1C03047F8())
      sub_1C011F678(MEMORY[0x1E0DEE9D8]);
    else
      v20 = MEMORY[0x1E0DEE9E8];
    v15 = v45;
    v16 = v44;
    v14 = v43;
    LOBYTE(v17) = v48;
    v18 = v42;
    LOBYTE(v19) = v46;
  }
  else
  {
    v20 = MEMORY[0x1E0DEE9E8];
  }
  v57[1] = v20;
  if (v14 != 10)
  {
    LOBYTE(v53[0]) = v14;
    v21 = v51;
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v23 = v15;
    v24 = v16;
    v48 = v14;
    v25 = v17;
    v22(v13, v51 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_language, v10);
    LOBYTE(v57[0]) = *(_BYTE *)(v21 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_hemisphere);
    v26 = sub_1C0074454((unsigned __int8 *)v53, (uint64_t)v13, (unsigned __int8 *)v57, v50);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    LOBYTE(v14) = v48;
    if (v26)
    {
      LOBYTE(v53[0]) = v23;
      BYTE1(v53[0]) = v24;
      v53[1] = v50;
      v54 = v25;
      v55 = v18;
      v56 = v19;
      LOBYTE(v57[0]) = v48;
      v27 = sub_1C0078334(v26, v53, v51, v49, v57);
      sub_1C007901C(v27);
      swift_release();
      LOBYTE(v14) = v48;
    }
  }
  v28 = *(_QWORD *)(v52 + 112);
  if (!v28 || (v29 = *(unsigned __int8 *)(v28 + 57), v29 == 20))
  {
LABEL_12:
    LOBYTE(v53[0]) = v14;
    sub_1C01AC13C();
    if (!v31)
      goto LABEL_15;
    goto LABEL_13;
  }
  if (v29 != 6)
  {
    if (v29 != 7)
    {
      if (v29 == 3)
      {
        LOBYTE(v53[0]) = v14;
        sub_1C01ABD2C();
        sub_1C007901C(v30);
        goto LABEL_15;
      }
      LOBYTE(v53[0]) = v14;
      LOBYTE(v57[0]) = v29;
      v39 = sub_1C02AAEBC((unsigned __int8 *)v57);
      if (!v39)
        goto LABEL_15;
      LOBYTE(v53[0]) = v47;
      v40 = sub_1C0283AA4(v39, (uint64_t)v53, v49);
      if (v40)
      {
        v41 = v40;
        swift_retain();
        sub_1C022DCFC(v53, v41);
        swift_release();
        swift_release();
      }
LABEL_14:
      swift_release();
      goto LABEL_15;
    }
    goto LABEL_12;
  }
  v32 = v14;
  if (qword_1EF5B7F10 != -1)
    swift_once();
  v33 = sub_1C0303B98();
  __swift_project_value_buffer(v33, (uint64_t)qword_1EF5FC6C8);
  v34 = sub_1C0303B80();
  v35 = sub_1C03042E8();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v53[0] = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v36 = 136315138;
    LOBYTE(v57[0]) = v32;
    v37 = sub_1C0303EF8();
    v57[0] = sub_1C003E6D8(v37, v38, v53);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v34, v35, "qualifier is .restOf, definedDateTimeRange is %s", v36, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }

  LOBYTE(v53[0]) = v32;
  sub_1C01AC020();
  if (v31)
  {
LABEL_13:
    sub_1C022DCFC(v53, v31);
    goto LABEL_14;
  }
LABEL_15:
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C0136F70(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v4;
  char *v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;

  v1 = *(_QWORD *)(a1 + 112);
  if (!v1)
    return 0;
  v2 = *(unsigned __int8 *)(v1 + 57);
  if (v2 == 19)
    goto LABEL_11;
  if (v2 != 17)
    return 0;
  if (*(_QWORD *)(a1 + 64)
    || *(_BYTE *)(a1 + 40) != 1
    || *(_BYTE *)(a1 + 72) != 12
    || (*(_BYTE *)(a1 + 24) & 1) == 0
    || *(_BYTE *)(a1 + 89) != 7)
  {
    OUTLINED_FUNCTION_4_39();
    OUTLINED_FUNCTION_7_14();
    OUTLINED_FUNCTION_9_31();
    OUTLINED_FUNCTION_11_31();
    return sub_1C0078A30(v6, v4, v7, v8, v5, v9, 1, v10);
  }
LABEL_11:
  OUTLINED_FUNCTION_41_5();
  OUTLINED_FUNCTION_7_14();
  OUTLINED_FUNCTION_9_31();
  v6 = 13;
  v7 = 2;
  v8 = 4;
  v9 = 1;
  v10 = 0;
  return sub_1C0078A30(v6, v4, v7, v8, v5, v9, 1, v10);
}

uint64_t initializeWithCopy for DateConstraintGenerator(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for DateConstraintGenerator(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DateConstraintGenerator(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DateConstraintGenerator()
{
  return &type metadata for DateConstraintGenerator;
}

uint64_t OUTLINED_FUNCTION_0_50(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  char v5;

  return sub_1C0078A30(a1, a2, v5, 0, a5, 1, 1, 0);
}

void OUTLINED_FUNCTION_2_45(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  sub_1C022DCFC((uint64_t *)va, a1);
}

uint64_t OUTLINED_FUNCTION_3_48()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 112) = v0;
  return type metadata accessor for DateTimeConstraint();
}

uint64_t OUTLINED_FUNCTION_4_39()
{
  return type metadata accessor for DateTimeConstraint();
}

uint64_t OUTLINED_FUNCTION_6_33()
{
  return swift_release();
}

uint64_t *sub_1C01371E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  id v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C0301DB0();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(type metadata accessor for SiriVocabularySearcher(0) + 20);
    v10 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v10;
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    *(uint64_t *)((char *)a1 + v11) = *(uint64_t *)((char *)a2 + v11);
    v14 = *(int *)(type metadata accessor for StringTokenizer() + 20);
    v15 = &v12[v14];
    v16 = &v13[v14];
    v17 = v10;
    swift_retain();
    v8((uint64_t *)v15, (uint64_t *)v16, v7);
  }
  return a1;
}

uint64_t type metadata accessor for SiriVocabularySearcher(uint64_t a1)
{
  return sub_1C003CD30(a1, qword_1ED725F98);
}

uint64_t sub_1C01372DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_1C0301DB0();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v8(a1, v4);

  v5 = a1 + *(int *)(a2 + 20);
  swift_release();
  v6 = v5 + *(int *)(type metadata accessor for StringTokenizer() + 20);
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
}

uint64_t sub_1C0137370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v6 = sub_1C0301DB0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(type metadata accessor for SiriVocabularySearcher(0) + 20);
  v9 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  v10 = *(int *)(a3 + 20);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  v13 = *(int *)(type metadata accessor for StringTokenizer() + 20);
  v14 = v11 + v13;
  v15 = v12 + v13;
  v16 = v9;
  swift_retain();
  v7(v14, v15, v6);
  return a1;
}

uint64_t sub_1C013742C(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, char *, uint64_t);
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  v6 = sub_1C0301DB0();
  v7 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = *(int *)(type metadata accessor for SiriVocabularySearcher(0) + 20);
  v9 = *(void **)&a2[v8];
  v10 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  v11 = v9;

  v12 = *(int *)(a3 + 20);
  v13 = a1 + v12;
  v14 = &a2[v12];
  *(_QWORD *)(a1 + v12) = *(_QWORD *)v14;
  swift_retain();
  swift_release();
  v15 = type metadata accessor for StringTokenizer();
  v7(v13 + *(int *)(v15 + 20), &v14[*(int *)(v15 + 20)], v6);
  return a1;
}

uint64_t sub_1C01374E8(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, char *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v6 = sub_1C0301DB0();
  v7 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SiriVocabularySearcher(0);
  *(_QWORD *)(a1 + *(int *)(v8 + 20)) = *(_QWORD *)&a2[*(int *)(v8 + 20)];
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = &a2[v9];
  *(_QWORD *)(a1 + v9) = *(_QWORD *)v11;
  v12 = type metadata accessor for StringTokenizer();
  v7(v10 + *(int *)(v12 + 20), &v11[*(int *)(v12 + 20)], v6);
  return a1;
}

uint64_t sub_1C0137588(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, char *, uint64_t);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v6 = sub_1C0301DB0();
  v7 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = *(int *)(type metadata accessor for SiriVocabularySearcher(0) + 20);
  v9 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)&a2[v8];

  v10 = *(int *)(a3 + 20);
  v11 = a1 + v10;
  v12 = &a2[v10];
  *(_QWORD *)(a1 + v10) = *(_QWORD *)v12;
  swift_release();
  v13 = type metadata accessor for StringTokenizer();
  v7(v11 + *(int *)(v13 + 20), &v12[*(int *)(v13 + 20)], v6);
  return a1;
}

uint64_t sub_1C0137638()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0137644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for SiriVocabularySearcher(0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_38_9();
    v8 = a1 + *(int *)(a3 + 20);
  }
  return OUTLINED_FUNCTION_46(v8, a2, v7);
}

uint64_t sub_1C01376A0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C01376AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = OUTLINED_FUNCTION_38_14();
  v5 = type metadata accessor for SiriVocabularySearcher(v4);
  if (*(_DWORD *)(*(_QWORD *)(v5 - 8) + 84) == v3)
  {
    v6 = v5;
    v7 = v1;
  }
  else
  {
    v6 = OUTLINED_FUNCTION_38_9();
    v7 = v1 + *(int *)(v2 + 20);
  }
  return OUTLINED_FUNCTION_49_3(v7, v0, v0, v6);
}

uint64_t type metadata accessor for ThirdPartyContactMatcher(uint64_t a1)
{
  return sub_1C003CD30(a1, qword_1ED726A28);
}

uint64_t sub_1C0137714()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for SiriVocabularySearcher(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for StringTokenizer();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1C0137798(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C0301DB0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    v10 = v9;
  }
  return a1;
}

uint64_t sub_1C0137824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  return a1;
}

uint64_t initializeWithTake for ContactGroupResolverConfig(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1C01378E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  return a1;
}

uint64_t sub_1C013794C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0137958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_1C0301DB0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return OUTLINED_FUNCTION_46(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_1C01379C8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C01379D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t result;

  OUTLINED_FUNCTION_38_14();
  result = sub_1C0301DB0();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == v3)
    return OUTLINED_FUNCTION_49_3(v1, v0, v0, result);
  *(_QWORD *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
  return result;
}

uint64_t sub_1C0137A30()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C0301DB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0137AA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC5D8);
  v3 = MEMORY[0x1E0C80A78](v65);
  v56 = (uint64_t *)((char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = MEMORY[0x1E0C80A78](v3);
  v55 = (char *)&v49 - v6;
  MEMORY[0x1E0C80A78](v5);
  v54 = (char *)&v49 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (!v11)
    return v12;
  v49 = v1;
  v66 = MEMORY[0x1E0DEE9D8];
  sub_1C00B1738();
  result = sub_1C013ACDC(a1);
  if ((result & 0x8000000000000000) == 0 && result < 1 << *(_BYTE *)(a1 + 32))
  {
    v15 = a1 + 64;
    v50 = a1 + 64;
    v51 = a1;
    while ((*(_QWORD *)(v15 + 8 * ((unint64_t)result >> 6)) & (1 << result)) != 0)
    {
      if ((_DWORD)v14 != *(_DWORD *)(a1 + 36))
        goto LABEL_20;
      v59 = 1 << result;
      v60 = (unint64_t)result >> 6;
      v57 = v11;
      v58 = v14;
      v16 = v54;
      v62 = &v54[*(int *)(v65 + 48)];
      v17 = *(_QWORD *)(a1 + 56);
      v18 = *(_QWORD *)(a1 + 48) + 48 * result;
      v19 = *(_BYTE *)v18;
      v21 = *(_QWORD *)(v18 + 8);
      v20 = *(_QWORD *)(v18 + 16);
      v22 = *(_QWORD *)(v18 + 24);
      v23 = *(_QWORD *)(v18 + 32);
      v24 = *(_QWORD *)(v18 + 40);
      v25 = result;
      v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
      v64 = v25;
      v26 = v17 + *(_QWORD *)(*(_QWORD *)(v63 - 8) + 72) * v25;
      v27 = (uint64_t)v62;
      sub_1C00607B8(v26, (uint64_t)v62, (uint64_t *)&unk_1ED726D98);
      *v16 = v19;
      *((_QWORD *)v16 + 1) = v21;
      *((_QWORD *)v16 + 2) = v20;
      *((_QWORD *)v16 + 3) = v22;
      *((_QWORD *)v16 + 4) = v23;
      *((_QWORD *)v16 + 5) = v24;
      v28 = v55;
      *v55 = v19;
      *((_QWORD *)v28 + 1) = v21;
      *((_QWORD *)v28 + 2) = v20;
      *((_QWORD *)v28 + 3) = v22;
      *((_QWORD *)v28 + 4) = v23;
      v29 = v65;
      v30 = (uint64_t)&v28[*(int *)(v65 + 48)];
      *((_QWORD *)v28 + 5) = v24;
      sub_1C00607B8(v27, v30, (uint64_t *)&unk_1ED726D98);
      v31 = v56;
      sub_1C005A744((uint64_t)v28, (uint64_t)v56, &qword_1EF5BC5D8);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v32 = (uint64_t)v16;
      v33 = MEMORY[0x1E0DEE9D8];
      sub_1C0044B78(v32, &qword_1EF5BC5D8);
      v34 = v31[2];
      v35 = v31[3];
      v36 = v31[4];
      v61 = v31[1];
      v62 = (char *)v35;
      v37 = v31[5];
      v38 = (char *)v31 + *(int *)(v29 + 48);
      *(_QWORD *)v10 = 0;
      *((_QWORD *)v10 + 1) = 0xE000000000000000;
      v10[16] = 2;
      *((_QWORD *)v10 + 3) = 0;
      *((_QWORD *)v10 + 4) = 0xE000000000000000;
      *((_QWORD *)v10 + 7) = 0;
      *((_QWORD *)v10 + 8) = 0xE000000000000000;
      *((_QWORD *)v10 + 9) = 0;
      *((_QWORD *)v10 + 10) = 0xE000000000000000;
      *((_QWORD *)v10 + 11) = 0;
      *((_QWORD *)v10 + 12) = 0xE000000000000000;
      *((_QWORD *)v10 + 13) = 0;
      *((_QWORD *)v10 + 14) = 0xE000000000000000;
      *((_QWORD *)v10 + 15) = 0;
      *((_QWORD *)v10 + 16) = 0xE000000000000000;
      *((_QWORD *)v10 + 17) = 0;
      *((_QWORD *)v10 + 18) = 0xE000000000000000;
      *((_QWORD *)v10 + 19) = 0;
      *((_QWORD *)v10 + 20) = 0xE000000000000000;
      *((_QWORD *)v10 + 21) = 0;
      *((_QWORD *)v10 + 22) = 0xE000000000000000;
      *((_QWORD *)v10 + 23) = 0;
      *((_QWORD *)v10 + 24) = 0xE000000000000000;
      *((_QWORD *)v10 + 25) = 0;
      *((_QWORD *)v10 + 26) = 0xE000000000000000;
      *((_QWORD *)v10 + 27) = v33;
      v39 = (int *)type metadata accessor for Contact();
      v40 = (uint64_t)&v10[v39[19]];
      v41 = sub_1C0301954();
      __swift_storeEnumTagSinglePayload(v40, 1, 1, v41);
      *(_QWORD *)&v10[v39[20]] = v33;
      v10[v39[21]] = 0;
      v42 = &v10[v39[22]];
      v10[v39[23]] = 2;
      v43 = &v10[v39[24]];
      *(_QWORD *)v43 = 0;
      *((_QWORD *)v43 + 1) = 0xE000000000000000;
      v44 = (uint64_t)&v10[*(int *)(v53 + 36)];
      sub_1C00638BC((uint64_t)&v38[*(int *)(v63 + 36)], v44, type metadata accessor for ContactResolver.SignalSet);
      v45 = v61;
      *((_QWORD *)v10 + 5) = v62;
      *((_QWORD *)v10 + 6) = v36;
      *(_QWORD *)v42 = v45;
      *((_QWORD *)v42 + 1) = v34;
      *(_BYTE *)(v44 + 339) = 1;
      *(_QWORD *)(v44 + 344) = v37;
      v46 = type metadata accessor for ContactResolver.SignalSet(0);
      *(_BYTE *)(v44 + *(int *)(v46 + 168) + 9) = 1;
      v47 = v44 + *(int *)(v46 + 172);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v47 + 16) = v45;
      *(_QWORD *)(v47 + 24) = v34;
      sub_1C0044B78((uint64_t)v31, &qword_1EF5BC5D8);
      v12 = v66;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C00B1738();
        v12 = v66;
      }
      v48 = *(_QWORD *)(v12 + 16);
      v15 = v50;
      if (v48 >= *(_QWORD *)(v12 + 24) >> 1)
      {
        sub_1C00B1738();
        v12 = v66;
      }
      *(_QWORD *)(v12 + 16) = v48 + 1;
      sub_1C005A744((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v48, &qword_1ED726DB0);
      a1 = v51;
      result = v64;
      if (v64 >= -(-1 << *(_BYTE *)(v51 + 32)))
        goto LABEL_21;
      if ((*(_QWORD *)(v15 + 8 * v60) & v59) == 0)
        goto LABEL_22;
      if ((_DWORD)v58 != *(_DWORD *)(v51 + 36))
        goto LABEL_23;
      result = sub_1C03045A0();
      v11 = v57 - 1;
      if (v57 == 1)
        return v12;
      if ((result & 0x8000000000000000) == 0)
      {
        v14 = *(unsigned int *)(a1 + 36);
        if (result < 1 << *(_BYTE *)(a1 + 32))
          continue;
      }
      goto LABEL_24;
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
  }
LABEL_24:
  __break(1u);
  return result;
}

void sub_1C0137F88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  _BYTE *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  uint64_t v46;
  os_log_type_t v47;
  _BOOL4 v48;
  uint8_t *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  __int128 v59;
  const void *v60;
  uint64_t v61;
  uint8_t *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char isUniquelyReferenced_nonNull_native;
  char *v71;
  char *v72;
  uint8_t *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  os_log_type_t v99;
  BOOL v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  os_log_type_t v114;
  uint8_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t **v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  BOOL v139;
  uint64_t v140;
  uint64_t **v141;
  uint64_t *v142;
  char v144;
  uint64_t v145;
  char v147;
  unint64_t v148;
  uint8_t *v149;
  uint8_t *v150;
  uint8_t *v151;
  uint64_t v152;
  _QWORD *v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  BOOL v167;
  uint64_t v168;
  char *v169;
  _QWORD *v170;
  char v172;
  uint64_t v173;
  char v175;
  unint64_t v176;
  uint8_t *v177;
  char v178;
  uint64_t v179;
  uint8_t *v180;
  uint8_t *v181;
  uint8_t *v182;
  uint8_t *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  id v190;
  _QWORD *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  _QWORD *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t *v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  __int128 v213;
  uint64_t *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t *v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  _QWORD *v226;
  uint8_t *v227;
  uint64_t v228;
  _QWORD v229[2];
  _QWORD v230[33];
  uint64_t v231[33];
  _QWORD *v232;
  uint64_t v233;

  v197 = a2;
  v192 = a1;
  v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v210 = *(_QWORD *)(v193 - 8);
  MEMORY[0x1E0C80A78](v193);
  OUTLINED_FUNCTION_27();
  v199 = v2;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_181();
  v219 = v4;
  OUTLINED_FUNCTION_42();
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v189 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (uint64_t *)((char *)&v189 - v10);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_181();
  v198 = (_QWORD *)v12;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_181();
  v208 = v14;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_181();
  v220 = v16;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_181();
  v222 = v18;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_181();
  v224 = v20;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_181();
  v209 = (uint64_t *)v22;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v23);
  v206 = (uint64_t)&v189 - v24;
  v225 = type metadata accessor for Contact();
  v205 = *(_QWORD *)(v225 - 8);
  MEMORY[0x1E0C80A78](v225);
  OUTLINED_FUNCTION_27();
  v196 = v25;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v26);
  v195 = (uint64_t)&v189 - v27;
  OUTLINED_FUNCTION_38_9();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_6_0();
  v223 = v30 - v29;
  v31 = type metadata accessor for Signpost();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_6_0();
  v35 = (_QWORD *)(v34 - v33);
  if (qword_1ED728440 != -1)
    goto LABEL_160;
  while (1)
  {
    v36 = (void *)qword_1ED729668;
    v37 = (char *)v35 + *(int *)(v31 + 20);
    *(_QWORD *)v37 = "ContactResolver.3PMatcher";
    *((_QWORD *)v37 + 1) = 25;
    v190 = v37;
    v37[16] = 2;
    v38 = v36;
    sub_1C0303B68();
    v189 = *(int *)(v31 + 24);
    *(_QWORD *)((char *)v35 + v189) = v38;
    v39 = v38;
    sub_1C03043E4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
    v40 = OUTLINED_FUNCTION_7_3();
    *(_OWORD *)(v40 + 16) = xmmword_1C0305B60;
    v41 = sub_1C03046E4();
    v43 = v42;
    *(_QWORD *)(v40 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v40 + 64) = sub_1C00A6A70();
    *(_QWORD *)(v40 + 32) = v41;
    *(_QWORD *)(v40 + 40) = v43;
    v187 = v40;
    LOBYTE(v186) = 2;
    v185 = 22;
    v191 = v35;
    sub_1C0303B50();
    OUTLINED_FUNCTION_17_0();

    if (qword_1ED727970 != -1)
      swift_once();
    v44 = OUTLINED_FUNCTION_9_0();
    v45 = __swift_project_value_buffer(v44, (uint64_t)&unk_1ED7295C8);
    v46 = v197;
    OUTLINED_FUNCTION_9_2();
    v217 = (uint64_t)v45;
    sub_1C0303B80();
    v47 = OUTLINED_FUNCTION_9_1();
    v48 = os_log_type_enabled(v45, v47);
    v226 = v11;
    if (v48)
    {
      v49 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      v231[0] = OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v49 = 136315138;
      v227 = v49 + 4;
      swift_bridgeObjectRetain();
      v50 = sub_1C030424C();
      v52 = v51;
      swift_bridgeObjectRelease();
      v230[0] = sub_1C003E6D8(v50, v52, v231);
      sub_1C03044B0();
      OUTLINED_FUNCTION_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_13_0(&dword_1C0039000, v45, v47, "finding 3p contact matches in %s", v49);
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_2();
    v53 = v209;
    v35 = (_QWORD *)v223;
    v233 = MEMORY[0x1E0DEE9E8];
    v232 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v54 = v192;
    v55 = *(char **)(v192 + 16);
    v221 = v8;
    v211 = v55;
    if (v55)
    {
      v56 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98) - 8);
      OUTLINED_FUNCTION_153();
      v202 = v54 + v57;
      v201 = v194 + *(int *)(type metadata accessor for ThirdPartyContactMatcher(0) + 20);
      v200 = *(_QWORD *)(v56 + 72);
      v214 = &v228;
      swift_bridgeObjectRetain();
      v58 = 0;
      v31 = 0;
      *(_QWORD *)&v59 = 136315138;
      v213 = v59;
      v212 = MEMORY[0x1E0DEE9B8] + 8;
      do
      {
        v207 = v58;
        v60 = (const void *)(v202 + v200 * (_QWORD)v58);
        memcpy(v231, v60, sizeof(v231));
        sub_1C00638BC(v201, (uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
        memcpy(v230, v231, sizeof(v230));
        sub_1C003F648(v231);
        v61 = sub_1C004EDE0();
        v62 = *(uint8_t **)(v61 + 16);
        if (v62)
        {
          v204 = v60;
          swift_bridgeObjectRetain();
          v203 = v61;
          v63 = (uint64_t *)(v61 + 40);
          v8 = (char *)MEMORY[0x1E0DEE9D8];
          do
          {
            v227 = v62;
            v64 = *v63;
            v229[0] = *(v63 - 1);
            v229[1] = v64;
            OUTLINED_FUNCTION_9_2();
            sub_1C00E5A34(v229);
            if (*v35)
            {
              swift_retain();
              OUTLINED_FUNCTION_22();
              sub_1C03024AC();
              v65 = OUTLINED_FUNCTION_18();
              v218 = &v189;
              MEMORY[0x1E0C80A78](v65);
              v35 = (_QWORD *)v223;
              v187 = v223;
              sub_1C00E4994();
              v67 = v66;
              swift_release();
              OUTLINED_FUNCTION_28();
              swift_release();
              OUTLINED_FUNCTION_18();
              v11 = v226;
            }
            else
            {
              v67 = sub_1C004F310();
              OUTLINED_FUNCTION_28();
              OUTLINED_FUNCTION_18();
            }
            v68 = *(_QWORD *)(v67 + 16);
            v69 = *((_QWORD *)v8 + 2);
            if (__OFADD__(v69, v68))
            {
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
              goto LABEL_159;
            }
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v71 = v8;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0 || v69 + v68 > *((_QWORD *)v8 + 3) >> 1)
            {
              sub_1C00500A0();
              v71 = v72;
            }
            v73 = v227;
            if (*(_QWORD *)(v67 + 16))
            {
              v74 = *((_QWORD *)v71 + 2);
              if ((*((_QWORD *)v71 + 3) >> 1) - v74 < v68)
                goto LABEL_155;
              v75 = (unint64_t)&v71[16 * v74 + 32];
              if (v67 + 32 < v75 + 16 * v68 && v75 < v67 + 32 + 16 * v68)
              {
                LODWORD(v187) = 0;
                v186 = 1092;
                LOBYTE(v185) = 2;
                sub_1C0304828();
                __break(1u);
                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_14();
                __break(1u);
                return;
              }
              v8 = v71;
              swift_arrayInitWithCopy();
              if (v68)
              {
                v77 = *((_QWORD *)v8 + 2);
                v78 = __OFADD__(v77, v68);
                v79 = v77 + v68;
                if (v78)
                  goto LABEL_156;
                *((_QWORD *)v8 + 2) = v79;
              }
            }
            else
            {
              v8 = v71;
              if (v68)
                goto LABEL_154;
            }
            v63 += 2;
            OUTLINED_FUNCTION_14();
            v62 = v73 - 1;
          }
          while (v62);
          OUTLINED_FUNCTION_14();
          v46 = v197;
          v60 = v204;
          v80 = (uint64_t)v8;
        }
        else
        {
          v80 = MEMORY[0x1E0DEE9D8];
        }
        OUTLINED_FUNCTION_14();
        sub_1C0040644(v231);
        sub_1C003DD84((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
        swift_bridgeObjectRetain();
        sub_1C022E670();
        v82 = v81;
        swift_bridgeObjectRelease();
        v83 = v207;
        if ((v82 & 1) != 0)
        {
          v84 = v194;
          sub_1C01393A0(v80, v46);
          v86 = v85;
          v87 = OUTLINED_FUNCTION_17_0();
          MEMORY[0x1E0C80A78](v87);
          v187 = (uint64_t)v60;
          v188 = v84;
          sub_1C00E4DFC((uint64_t)sub_1C013ABC8, (uint64_t)&v185, v86, v88, v89, v90, v91, v92, v189, v190, (uint64_t)v191, v192, v193, v194, v195, v196, v197, (uint64_t)v198, v199,
            v200);
          OUTLINED_FUNCTION_28();
        }
        else
        {
          OUTLINED_FUNCTION_17_0();
        }
        v58 = v83 + 1;
        sub_1C004F764();
      }
      while (v58 != v211);
      v93 = v192;
      OUTLINED_FUNCTION_17_0();
      v35 = v232;
      v231[0] = MEMORY[0x1E0DEE9E0];
      v94 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98) - 8);
      v95 = v93 + ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80));
      v96 = *(_QWORD *)(v94 + 72);
      swift_bridgeObjectRetain();
      v8 = v221;
      do
      {
        sub_1C013A6BC(v231, v95, v46);
        v95 += v96;
        --v211;
      }
      while (v211);
      swift_bridgeObjectRelease();
      v97 = v231[0];
      v53 = v209;
    }
    else
    {
      v35 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v97 = MEMORY[0x1E0DEE9E0];
    }
    v212 = sub_1C0137AA4(v97);
    OUTLINED_FUNCTION_14();
    OUTLINED_FUNCTION_9_2();
    v98 = (void *)OUTLINED_FUNCTION_49_10();
    v99 = sub_1C03042E8();
    v100 = OUTLINED_FUNCTION_47_12(v99);
    v204 = v35;
    if (v100)
    {
      LODWORD(v227) = v97;
      v101 = (uint64_t *)OUTLINED_FUNCTION_4_0();
      v223 = OUTLINED_FUNCTION_4_0();
      v231[0] = v223;
      *(_DWORD *)v101 = 136315138;
      v102 = v35[2];
      if (v102)
      {
        v218 = v101;
        OUTLINED_FUNCTION_19_21();
        OUTLINED_FUNCTION_153();
        v104 = (uint64_t)v35 + v103;
        v106 = *(_QWORD *)(v105 + 72);
        v107 = v195;
        do
        {
          v108 = v206;
          sub_1C00607B8(v104, v206, &qword_1ED726DB0);
          sub_1C00638BC(v108, v107, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
          sub_1C0044B78(v108, &qword_1ED726DB0);
          v109 = v230[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_20_12();
            v109 = v230[0];
          }
          if (*(_QWORD *)(v109 + 16) >= *(_QWORD *)(v109 + 24) >> 1)
            OUTLINED_FUNCTION_26_17();
          OUTLINED_FUNCTION_18_20();
          v107 = v110;
          sub_1C0045588(v110, v111);
          v104 += v106;
          --v102;
        }
        while (v102);
      }
      OUTLINED_FUNCTION_37_11();
    }

    OUTLINED_FUNCTION_2();
    v112 = v212;
    OUTLINED_FUNCTION_9_2();
    v113 = (void *)OUTLINED_FUNCTION_49_10();
    v114 = sub_1C03042E8();
    if (OUTLINED_FUNCTION_47_12(v114))
    {
      LODWORD(v223) = v97;
      v116 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      v218 = (uint64_t *)OUTLINED_FUNCTION_4_0();
      v231[0] = (uint64_t)v218;
      v227 = v116;
      *(_DWORD *)v116 = 136315138;
      v117 = *(_QWORD *)(v112 + 16);
      if (v117)
      {
        OUTLINED_FUNCTION_19_21();
        OUTLINED_FUNCTION_153();
        v119 = v112 + v118;
        v121 = *(_QWORD *)(v120 + 72);
        v122 = v230[0];
        v123 = v196;
        do
        {
          v124 = v206;
          sub_1C00607B8(v119, v206, &qword_1ED726DB0);
          sub_1C00638BC(v124, v123, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
          sub_1C0044B78(v124, &qword_1ED726DB0);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_20_12();
            v122 = v230[0];
          }
          if (*(_QWORD *)(v122 + 16) >= *(_QWORD *)(v122 + 24) >> 1)
          {
            OUTLINED_FUNCTION_26_17();
            v122 = v230[0];
          }
          OUTLINED_FUNCTION_18_20();
          v123 = v125;
          sub_1C0045588(v125, v126);
          v119 += v121;
          --v117;
        }
        while (v117);
      }
      OUTLINED_FUNCTION_37_11();
    }

    OUTLINED_FUNCTION_2();
    v31 = v222;
    v211 = (char *)v35[2];
    if (v211)
    {
      v127 = 0;
      OUTLINED_FUNCTION_153();
      v214 = v128;
      v207 = (char *)v128 + (_QWORD)v35;
      v227 = (uint8_t *)MEMORY[0x1E0DEE9D8];
      while (1)
      {
        if (v127 >= v35[2])
          goto LABEL_157;
        v223 = *(_QWORD *)(v210 + 72);
        OUTLINED_FUNCTION_10_37((uint64_t)&v207[v223 * v127], (uint64_t)v53);
        v129 = *((_QWORD *)v227 + 2);
        if (!v129)
        {
LABEL_96:
          OUTLINED_FUNCTION_10_37((uint64_t)v53, v208);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_30_12();
            v227 = v150;
          }
          v11 = v226;
          v148 = *((_QWORD *)v227 + 2);
          if (v148 >= *((_QWORD *)v227 + 3) >> 1)
          {
            OUTLINED_FUNCTION_25_12();
            v227 = v151;
          }
          v149 = v227;
          *((_QWORD *)v227 + 2) = v148 + 1;
          sub_1C005A744(v208, (uint64_t)v214 + (_QWORD)v149 + v148 * v223, &qword_1ED726DB0);
          v31 = v222;
          goto LABEL_103;
        }
        *(_QWORD *)&v213 = v127;
        v130 = *v53;
        v131 = v53[1];
        v132 = v53[5];
        v216 = v53[6];
        v217 = v132;
        OUTLINED_FUNCTION_56_7();
        v134 = (uint64_t **)((char *)v53 + v133);
        v135 = v134[1];
        v218 = *v134;
        v136 = (uint64_t)v214 + (_QWORD)v227;
        v137 = HIBYTE(v131) & 0xF;
        if ((v131 & 0x2000000000000000) == 0)
          v137 = v130 & 0xFFFFFFFFFFFFLL;
        v215 = v137;
        swift_bridgeObjectRetain();
        while (1)
        {
          v138 = (_QWORD *)v224;
          OUTLINED_FUNCTION_10_37(v136, v224);
          v139 = *v138 == v130 && v138[1] == v131;
          if (v139 || (OUTLINED_FUNCTION_176() & 1) != 0)
          {
            OUTLINED_FUNCTION_7_34((uint64_t)v138);
          }
          else
          {
            OUTLINED_FUNCTION_7_34((uint64_t)v138);
            if (v215)
            {
LABEL_92:
              OUTLINED_FUNCTION_4_40();
              OUTLINED_FUNCTION_7_34((uint64_t)v138);
LABEL_93:
              OUTLINED_FUNCTION_4_40();
              OUTLINED_FUNCTION_61((uint64_t)v138);
              goto LABEL_94;
            }
          }
          OUTLINED_FUNCTION_56_7();
          v141 = (uint64_t **)(v31 + v140);
          v142 = v141[1];
          if (!v142)
          {
            if (v135)
              goto LABEL_92;
            OUTLINED_FUNCTION_2();
LABEL_84:
            OUTLINED_FUNCTION_4_40();
            v145 = v220;
            OUTLINED_FUNCTION_7_34((uint64_t)v138);
            goto LABEL_85;
          }
          if (!v135)
            goto LABEL_92;
          if (*v141 == v218 && v142 == v135)
            goto LABEL_84;
          v144 = OUTLINED_FUNCTION_176();
          OUTLINED_FUNCTION_4_40();
          v145 = v220;
          OUTLINED_FUNCTION_7_34((uint64_t)v138);
          if ((v144 & 1) == 0)
            goto LABEL_93;
LABEL_85:
          if (*(_QWORD *)(v145 + 40) == v217 && *(_QWORD *)(v145 + 48) == v216)
            break;
          v147 = OUTLINED_FUNCTION_176();
          OUTLINED_FUNCTION_4_40();
          OUTLINED_FUNCTION_61(v224);
          if ((v147 & 1) != 0)
            goto LABEL_102;
LABEL_94:
          v31 = v222;
          v136 += v223;
          if (!--v129)
          {
            OUTLINED_FUNCTION_54_6();
            v8 = v221;
            v53 = v209;
            v35 = v204;
            v127 = v213;
            goto LABEL_96;
          }
        }
        OUTLINED_FUNCTION_4_40();
        OUTLINED_FUNCTION_61(v224);
LABEL_102:
        OUTLINED_FUNCTION_54_6();
        v8 = v221;
        v31 = v222;
        v11 = v226;
        v35 = v204;
        v127 = v213;
LABEL_103:
        ++v127;
        v53 = v209;
        OUTLINED_FUNCTION_61((uint64_t)v209);
        if ((char *)v127 == v211)
        {
          OUTLINED_FUNCTION_8_1();
          goto LABEL_106;
        }
      }
    }
    OUTLINED_FUNCTION_8_1();
    v227 = (uint8_t *)MEMORY[0x1E0DEE9D8];
LABEL_106:
    v153 = v198;
    v152 = v199;
    v214 = *(uint64_t **)(v212 + 16);
    if (!v214)
      break;
    v154 = 0;
    OUTLINED_FUNCTION_153();
    v216 = v156;
    *(_QWORD *)&v213 = v155 + v156;
    v211 = (char *)(v153 + 43);
    while (1)
    {
      if (v154 >= *(_QWORD *)(v155 + 16))
        goto LABEL_158;
      v224 = *(_QWORD *)(v210 + 72);
      OUTLINED_FUNCTION_9_32(v213 + v224 * v154, (uint64_t)v153);
      v223 = *((_QWORD *)v227 + 2);
      if (v223)
        break;
LABEL_141:
      OUTLINED_FUNCTION_9_32((uint64_t)v153, v152);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_30_12();
        v227 = v181;
      }
      v176 = *((_QWORD *)v227 + 2);
      v31 = v176 + 1;
      if (v176 >= *((_QWORD *)v227 + 3) >> 1)
      {
        OUTLINED_FUNCTION_25_12();
        v227 = v182;
      }
      v177 = v227;
      *((_QWORD *)v227 + 2) = v31;
      sub_1C005A744(v152, (uint64_t)&v177[v216 + v176 * v224], &qword_1ED726DB0);
LABEL_151:
      ++v154;
      OUTLINED_FUNCTION_5_33((uint64_t)v153);
      v155 = v212;
      if ((uint64_t *)v154 == v214)
        goto LABEL_152;
    }
    v215 = v154;
    v157 = v153;
    v158 = *v153;
    v159 = v153[1];
    v220 = v157[5];
    OUTLINED_FUNCTION_56_7();
    v163 = (uint64_t *)(v162 + v161);
    v35 = (_QWORD *)v163[1];
    v222 = *v163;
    v164 = HIBYTE(v159) & 0xF;
    if ((v159 & 0x2000000000000000) == 0)
      v164 = v158 & 0xFFFFFFFFFFFFLL;
    v217 = v164;
    v218 = v160;
    swift_bridgeObjectRetain();
    v165 = 0;
    v166 = v216;
    while (1)
    {
      OUTLINED_FUNCTION_9_32((uint64_t)&v227[v166], (uint64_t)v11);
      v167 = *v11 == v158 && v11[1] == v159;
      if (v167 || (OUTLINED_FUNCTION_176() & 1) != 0)
      {
        OUTLINED_FUNCTION_8_28((uint64_t)v11);
      }
      else
      {
        OUTLINED_FUNCTION_8_28((uint64_t)v11);
        if (v217)
        {
LABEL_137:
          OUTLINED_FUNCTION_3_49();
          OUTLINED_FUNCTION_8_28((uint64_t)v11);
LABEL_138:
          OUTLINED_FUNCTION_3_49();
          OUTLINED_FUNCTION_5_33((uint64_t)v11);
          goto LABEL_139;
        }
      }
      OUTLINED_FUNCTION_56_7();
      v169 = &v8[v168];
      v170 = (_QWORD *)*((_QWORD *)v169 + 1);
      if (!v170)
      {
        if (v35)
          goto LABEL_137;
        OUTLINED_FUNCTION_2();
LABEL_129:
        OUTLINED_FUNCTION_3_49();
        v173 = v219;
        OUTLINED_FUNCTION_8_28((uint64_t)v11);
        goto LABEL_130;
      }
      if (!v35)
        goto LABEL_137;
      if (*(_QWORD *)v169 == v222 && v170 == v35)
        goto LABEL_129;
      v172 = OUTLINED_FUNCTION_176();
      OUTLINED_FUNCTION_3_49();
      v173 = v219;
      OUTLINED_FUNCTION_8_28((uint64_t)v11);
      if ((v172 & 1) == 0)
        goto LABEL_138;
LABEL_130:
      if (*(_QWORD *)(v173 + 40) == v220 && *(_QWORD *)(v173 + 48) == (_QWORD)v218)
        break;
      v175 = OUTLINED_FUNCTION_176();
      OUTLINED_FUNCTION_3_49();
      OUTLINED_FUNCTION_5_33((uint64_t)v226);
      if ((v175 & 1) != 0)
        goto LABEL_147;
LABEL_139:
      ++v165;
      v166 += v224;
      v8 = v221;
      v11 = v226;
      if (v223 == v165)
      {
        OUTLINED_FUNCTION_54_6();
        v153 = v198;
        v152 = v199;
        v154 = v215;
        goto LABEL_141;
      }
    }
    OUTLINED_FUNCTION_3_49();
    OUTLINED_FUNCTION_5_33((uint64_t)v226);
LABEL_147:
    v31 = (uint64_t)v227;
    swift_bridgeObjectRelease();
    v178 = swift_isUniquelyReferenced_nonNull_native();
    v8 = v221;
    if ((v178 & 1) == 0)
    {
      sub_1C01F5AF8();
      v227 = v183;
    }
    v153 = v198;
    v152 = v199;
    v11 = v226;
    if (v165 < *((_QWORD *)v227 + 2))
    {
      v179 = v193;
      v180 = &v227[v166];
      v180[*(int *)(v193 + 36) + 339] = 1;
      *(_QWORD *)&v180[*(int *)(v179 + 36) + 344] = *(_QWORD *)&v211[*(int *)(v179 + 36)];
      v154 = v215;
      goto LABEL_151;
    }
LABEL_159:
    __break(1u);
LABEL_160:
    swift_once();
  }
LABEL_152:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C03043D8();
  v184 = (uint64_t)v191;
  sub_1C0303B5C();
  sub_1C003DD84(v184, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  OUTLINED_FUNCTION_1();
}

void sub_1C01393A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t inited;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;

  v3 = type metadata accessor for Signpost();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_6_0();
  v7 = v6 - v5;
  if (qword_1ED728440 != -1)
    swift_once();
  v8 = (void *)qword_1ED729668;
  v9 = v7 + *(int *)(v3 + 20);
  *(_QWORD *)v9 = "ContactResolver.3PMatcher.Search";
  *(_QWORD *)(v9 + 8) = 32;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = v8;
  sub_1C0303B68();
  *(_QWORD *)(v7 + *(int *)(v3 + 24)) = v10;
  v11 = v10;
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v12 = OUTLINED_FUNCTION_7_3();
  *(_OWORD *)(v12 + 16) = xmmword_1C0305B60;
  v13 = sub_1C03046E4();
  v15 = v14;
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v12 + 32) = v13;
  *(_QWORD *)(v12 + 40) = v15;
  sub_1C0303B50();
  OUTLINED_FUNCTION_29_0();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727640);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C030A730;
  *(_QWORD *)(inited + 32) = (id)CKVCustomTypeToNumber();
  v65 = inited;
  sub_1C0304150();
  sub_1C01AB034(inited);
  if (*(_QWORD *)(a2 + 16))
    v17 = a2;
  else
    v17 = 0;
  v61 = v17;
  v18 = sub_1C0212B30();
  v19 = *(_QWORD *)(a1 + 16);
  v20 = v64;
  v62 = v7;
  if ((v18 & 1) != 0)
  {
    if (v19)
    {
      v67 = MEMORY[0x1E0DEE9D8];
      OUTLINED_FUNCTION_32_12();
      v21 = v67;
      v22 = a1 + 40;
      do
      {
        v65 = 37;
        v66 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        sub_1C0303FD0();
        sub_1C0303FD0();
        OUTLINED_FUNCTION_29_0();
        v67 = v21;
        v23 = *(_QWORD *)(v21 + 16);
        v12 = v23 + 1;
        if (v23 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          sub_1C00B1764();
          v21 = v67;
        }
        v22 += 16;
        *(_QWORD *)(v21 + 16) = v12;
        v24 = v21 + 16 * v23;
        *(_QWORD *)(v24 + 32) = 37;
        *(_QWORD *)(v24 + 40) = 0xE100000000000000;
        --v19;
      }
      while (v19);
      v20 = v64;
    }
    if (qword_1ED727970 != -1)
      swift_once();
    v33 = OUTLINED_FUNCTION_9_0();
    v34 = __swift_project_value_buffer(v33, (uint64_t)&unk_1ED7295C8);
    OUTLINED_FUNCTION_9_2();
    sub_1C0303B80();
    v35 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_42_3(v35))
    {
      v36 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      v37 = OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v36 = 136315138;
      v65 = v37;
      v38 = OUTLINED_FUNCTION_22();
      v39 = MEMORY[0x1C3B97040](v38, MEMORY[0x1E0DEA968]);
      v41 = v40;
      OUTLINED_FUNCTION_18();
      v42 = sub_1C003E6D8(v39, v41, &v65);
      OUTLINED_FUNCTION_51(v42);
      sub_1C03044B0();
      OUTLINED_FUNCTION_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_13_0(&dword_1C0039000, v34, (os_log_type_t)v12, "cjk search for %s", v36);
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_2();
    v51 = *(void **)&v20[*(int *)(type metadata accessor for SiriVocabularySearcher(0) + 20)];
    v52 = (void *)sub_1C0304120();
    OUTLINED_FUNCTION_28();
    v53 = v61;
    if (v61)
    {
      v53 = sub_1C0304234();
      v54 = (void *)v53;
    }
    else
    {
      v54 = 0;
    }
    OUTLINED_FUNCTION_5_1(v53, (unint64_t *)&qword_1ED727C50);
    sub_1C013AC40();
    OUTLINED_FUNCTION_39_9();
    OUTLINED_FUNCTION_50_8();
    v57 = OUTLINED_FUNCTION_48_11(v51, sel_searchCustomVocabularyWithWildcardPatterns_appIds_vocabularyTypes_);
    v58 = v62;
  }
  else
  {
    v25 = MEMORY[0x1E0DEE9D8];
    if (v19)
    {
      v67 = MEMORY[0x1E0DEE9D8];
      OUTLINED_FUNCTION_32_12();
      v25 = v67;
      v26 = (unint64_t *)(a1 + 40);
      do
      {
        v27 = *v26;
        v65 = *(v26 - 1);
        v66 = v27;
        OUTLINED_FUNCTION_9_2();
        sub_1C0303FD0();
        v28 = sub_1C006FCF8(34, 0xE100000000000000, v65, v27);
        v30 = v29;
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_14();
        v67 = v25;
        v31 = *(_QWORD *)(v25 + 16);
        if (v31 >= *(_QWORD *)(v25 + 24) >> 1)
        {
          sub_1C00B1764();
          v25 = v67;
        }
        v26 += 2;
        *(_QWORD *)(v25 + 16) = v31 + 1;
        v32 = v25 + 16 * v31;
        *(_QWORD *)(v32 + 32) = v28;
        *(_QWORD *)(v32 + 40) = v30;
        --v19;
      }
      while (v19);
    }
    v65 = v25;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
    sub_1C0104C2C((unint64_t *)&qword_1ED7283B0, (uint64_t *)&unk_1ED7283A0, MEMORY[0x1E0DEAF20]);
    v43 = sub_1C0303E50();
    v45 = v44;
    OUTLINED_FUNCTION_29_0();
    if (qword_1ED727970 != -1)
      swift_once();
    v46 = OUTLINED_FUNCTION_9_0();
    v47 = __swift_project_value_buffer(v46, (uint64_t)&unk_1ED7295C8);
    OUTLINED_FUNCTION_9_2();
    sub_1C0303B80();
    v48 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_42_3(v48))
    {
      v49 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      v65 = OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v49 = 136315138;
      swift_bridgeObjectRetain();
      v50 = sub_1C003E6D8(v43, v45, &v65);
      OUTLINED_FUNCTION_51(v50);
      sub_1C03044B0();
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_13_0(&dword_1C0039000, v47, (os_log_type_t)v25, "prefix search for %s", v49);
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_2();
    v55 = *(void **)&v64[*(int *)(type metadata accessor for SiriVocabularySearcher(0) + 20)];
    v52 = (void *)sub_1C0303E8C();
    swift_bridgeObjectRelease();
    v56 = v61;
    if (v61)
    {
      v56 = sub_1C0304234();
      v54 = (void *)v56;
    }
    else
    {
      v54 = 0;
    }
    v58 = v62;
    OUTLINED_FUNCTION_5_1(v56, (unint64_t *)&qword_1ED727C50);
    sub_1C013AC40();
    OUTLINED_FUNCTION_39_9();
    OUTLINED_FUNCTION_50_8();
    v57 = OUTLINED_FUNCTION_48_11(v55, sel_searchCustomVocabulary_appIds_vocabularyTypes_);
  }
  v59 = v57;

  OUTLINED_FUNCTION_5_1(v60, &qword_1EF5BC5D0);
  sub_1C0304138();

  sub_1C03043D8();
  sub_1C0303B5C();
  sub_1C003DD84(v58, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  OUTLINED_FUNCTION_1();
}

void sub_1C0139B48(id *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __objc2_prop_list **p_base_props;
  id v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  void *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v59;
  BOOL v60;
  char *v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  char *v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  char *v126;
  id v127;
  void *v128;
  uint64_t v129;
  uint8_t *v130;
  _QWORD v131[33];
  uint64_t v132[34];

  v126 = a2;
  v123 = a4;
  v7 = type metadata accessor for StringTokenizer();
  v8 = MEMORY[0x1E0C80A78](v7);
  v130 = (uint8_t *)&v116 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v116 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v116 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)*a1;
  p_base_props = &ContactRankerInput.base_props;
  v17 = objc_msgSend(*a1, sel_vocabularyItem);
  objc_opt_self();
  v18 = swift_dynamicCastObjCClass();
  v124 = v4;
  if (!v18)
  {
    swift_unknownObjectRelease();
    if (qword_1ED727970 == -1)
    {
LABEL_46:
      v75 = sub_1C0303B98();
      __swift_project_value_buffer(v75, (uint64_t)&unk_1ED7295C8);
      v76 = (id)v15;
      v77 = sub_1C0303B80();
      v78 = sub_1C03042F4();
      if (os_log_type_enabled(v77, v78))
      {
        v79 = (uint8_t *)swift_slowAlloc();
        v80 = swift_slowAlloc();
        v122 = v12;
        v81 = v80;
        v132[0] = v80;
        *(_DWORD *)v79 = 136315138;
        v130 = v79 + 4;
        v131[0] = objc_msgSend(v76, (SEL)p_base_props[387]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5BC5A8);
        v82 = sub_1C0303EF8();
        v131[0] = sub_1C003E6D8(v82, v83, v132);
        sub_1C03044B0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C0039000, v77, v78, "wanted CKVCustomTerm, got %s", v79, 0xCu);
        swift_arrayDestroy();
        v12 = v122;
        MEMORY[0x1C3B98378](v81, -1, -1);
        MEMORY[0x1C3B98378](v79, -1, -1);

      }
      else
      {

      }
      __swift_storeEnumTagSinglePayload(v123, 1, 1, v12);
      return;
    }
LABEL_95:
    swift_once();
    goto LABEL_46;
  }
  v120 = v17;
  v14[16] = 2;
  v127 = (id)v15;
  *((_QWORD *)v14 + 3) = 0;
  *((_QWORD *)v14 + 4) = 0xE000000000000000;
  *((_QWORD *)v14 + 7) = 0;
  *((_QWORD *)v14 + 8) = 0xE000000000000000;
  *((_QWORD *)v14 + 9) = 0;
  *((_QWORD *)v14 + 10) = 0xE000000000000000;
  *((_QWORD *)v14 + 11) = 0;
  *((_QWORD *)v14 + 12) = 0xE000000000000000;
  *((_QWORD *)v14 + 13) = 0;
  *((_QWORD *)v14 + 14) = 0xE000000000000000;
  *((_QWORD *)v14 + 15) = 0;
  *((_QWORD *)v14 + 16) = 0xE000000000000000;
  *((_QWORD *)v14 + 17) = 0;
  *((_QWORD *)v14 + 18) = 0xE000000000000000;
  *((_QWORD *)v14 + 19) = 0;
  *((_QWORD *)v14 + 20) = 0xE000000000000000;
  *((_QWORD *)v14 + 21) = 0;
  *((_QWORD *)v14 + 22) = 0xE000000000000000;
  *((_QWORD *)v14 + 23) = 0;
  *((_QWORD *)v14 + 24) = 0xE000000000000000;
  *((_QWORD *)v14 + 25) = 0;
  *((_QWORD *)v14 + 26) = 0xE000000000000000;
  v19 = (uint64_t *)v14;
  v20 = MEMORY[0x1E0DEE9D8];
  v19[27] = MEMORY[0x1E0DEE9D8];
  v129 = a3;
  v21 = (void *)v18;
  v22 = (int *)type metadata accessor for Contact();
  v23 = (uint64_t)v19 + v22[19];
  v24 = sub_1C0301954();
  __swift_storeEnumTagSinglePayload(v23, 1, 1, v24);
  *(uint64_t *)((char *)v19 + v22[20]) = v20;
  *((_BYTE *)v19 + v22[21]) = 0;
  *((_BYTE *)v19 + v22[23]) = 2;
  v25 = (uint64_t *)((char *)v19 + v22[24]);
  *v25 = 0;
  v25[1] = 0xE000000000000000;
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
  v27 = &v126[*(int *)(v26 + 36)];
  v122 = v12;
  v28 = (uint64_t)v19 + *(int *)(v12 + 36);
  sub_1C00638BC((uint64_t)v27, v28, type metadata accessor for ContactResolver.SignalSet);
  v29 = sub_1C013ABE0(v21);
  if (v30)
    v31 = v29;
  else
    v31 = 0;
  if (v30)
    v32 = v30;
  else
    v32 = 0xE000000000000000;
  v121 = (char *)v19 + v22[22];
  *v19 = v31;
  v19[1] = v32;
  v128 = v21;
  v33 = objc_msgSend(v21, sel_term);
  v34 = sub_1C0303EB0();
  v36 = v35;

  v19[5] = v34;
  v19[6] = v36;
  v125 = v19;
  v37 = v127;
  v38 = objc_msgSend(v127, sel_originAppId);
  v39 = sub_1C0303EB0();
  v41 = v40;

  v42 = v121;
  *(_QWORD *)v121 = v39;
  *((_QWORD *)v42 + 1) = v41;
  v43 = type metadata accessor for ContactResolver.SignalSet(0);
  *(_BYTE *)(v28 + *(int *)(v43 + 168) + 9) = 1;
  v44 = objc_msgSend(v37, sel_originAppId);
  v45 = sub_1C0303EB0();
  v47 = v46;

  v117 = v43;
  v48 = v28 + *(int *)(v43 + 172);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v48 + 16) = v45;
  *(_QWORD *)(v48 + 24) = v47;
  v121 = (char *)v28;
  *(_BYTE *)(v28 + 338) = 1;
  memcpy(v132, v126, 0x108uLL);
  v119 = v129 + *(int *)(type metadata accessor for ThirdPartyContactMatcher(0) + 20);
  sub_1C00638BC(v119, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
  memcpy(v131, v132, sizeof(v131));
  sub_1C003F648(v132);
  v49 = sub_1C004EDE0();
  p_base_props = *(__objc2_prop_list ***)(v49 + 16);
  v118 = v49;
  if (p_base_props)
  {
    v50 = (uint64_t *)(v49 + 40);
    while (1)
    {
      v51 = *(v50 - 1);
      v52 = *v50;
      swift_bridgeObjectRetain();
      v53 = StringTokenizer.tokenize(_:useMorphun:removeEmojis:)(v51, v52, 1, 1);
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v53 + 16);
      v54 = *(_QWORD *)(v20 + 16);
      v12 = v54 + v15;
      if (__OFADD__(v54, v15))
        break;
      if (!swift_isUniquelyReferenced_nonNull_native() || v12 > *(_QWORD *)(v20 + 24) >> 1)
      {
        sub_1C00500A0();
        v20 = v55;
      }
      if (*(_QWORD *)(v53 + 16))
      {
        v56 = *(_QWORD *)(v20 + 16);
        if ((*(_QWORD *)(v20 + 24) >> 1) - v56 < v15)
          goto LABEL_91;
        v57 = v20 + 16 * v56 + 32;
        if (v53 + 32 < v57 + 16 * v15 && v57 < v53 + 32 + 16 * v15)
        {
LABEL_96:
          sub_1C0304828();
          __break(1u);
          return;
        }
        swift_arrayInitWithCopy();
        if (v15)
        {
          v59 = *(_QWORD *)(v20 + 16);
          v60 = __OFADD__(v59, v15);
          v61 = (char *)(v59 + v15);
          if (v60)
            goto LABEL_93;
          *(_QWORD *)(v20 + 16) = v61;
        }
      }
      else if (v15)
      {
        goto LABEL_88;
      }
      v50 += 2;
      swift_bridgeObjectRelease();
      p_base_props = (__objc2_prop_list **)((char *)p_base_props - 1);
      if (!p_base_props)
        goto LABEL_26;
    }
    __break(1u);
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
LABEL_26:
  swift_bridgeObjectRelease();
  v118 = sub_1C01AACEC(v20);
  sub_1C0040644(v132);
  sub_1C003DD84((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
  sub_1C00638BC(v119, (uint64_t)v130, (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
  v62 = sub_1C0203A74();
  p_base_props = *(__objc2_prop_list ***)(v62 + 16);
  v119 = v62;
  if (p_base_props)
  {
    v63 = (uint64_t *)(v62 + 40);
    v64 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v65 = *(v63 - 1);
      v66 = *v63;
      swift_bridgeObjectRetain();
      v67 = StringTokenizer.tokenize(_:useMorphun:removeEmojis:)(v65, v66, 1, 1);
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(v67 + 16);
      v68 = *(_QWORD *)(v64 + 16);
      v15 = v68 + v12;
      if (__OFADD__(v68, v12))
        break;
      if (!swift_isUniquelyReferenced_nonNull_native() || v15 > *(_QWORD *)(v64 + 24) >> 1)
      {
        sub_1C00500A0();
        v64 = v69;
      }
      if (*(_QWORD *)(v67 + 16))
      {
        v70 = *(_QWORD *)(v64 + 16);
        if ((*(_QWORD *)(v64 + 24) >> 1) - v70 < v12)
          goto LABEL_92;
        v71 = v64 + 16 * v70 + 32;
        if (v67 + 32 < v71 + 16 * v12 && v71 < v67 + 32 + 16 * v12)
          goto LABEL_96;
        swift_arrayInitWithCopy();
        if (v12)
        {
          v73 = *(_QWORD *)(v64 + 16);
          v60 = __OFADD__(v73, v12);
          v74 = v73 + v12;
          if (v60)
            goto LABEL_94;
          *(_QWORD *)(v64 + 16) = v74;
        }
      }
      else if (v12)
      {
        goto LABEL_90;
      }
      v63 += 2;
      swift_bridgeObjectRelease();
      p_base_props = (__objc2_prop_list **)((char *)p_base_props - 1);
      if (!p_base_props)
        goto LABEL_49;
    }
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  v64 = MEMORY[0x1E0DEE9D8];
LABEL_49:
  swift_bridgeObjectRelease();
  v84 = sub_1C01AACEC(v64);
  sub_1C003DD84((uint64_t)v130, (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
  v85 = v118;
  v86 = sub_1C01F22D0(v84, v118);
  v87 = v121;
  v121[333] = v86 & 1;
  v88 = sub_1C01F22D0(v85, v84);
  swift_bridgeObjectRelease();
  v87[334] = v88 & 1;
  if ((sub_1C0212B30() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v89 = v87[*(int *)(v117 + 180)];
    v90 = v122;
    v91 = (uint64_t)v125;
    v92 = v126;
    if (v89 == 1)
    {
LABEL_51:
      swift_unknownObjectRelease();
LABEL_77:
      __swift_storeEnumTagSinglePayload(v123, 1, 1, v90);
      sub_1C0044B78(v91, &qword_1ED726DB0);
      return;
    }
  }
  else
  {
    v90 = v122;
    v91 = (uint64_t)v125;
    v92 = v126;
    if ((v86 & v88 & 1) != 0)
      goto LABEL_53;
    if ((v121[*(int *)(v117 + 180)] & 1) != 0 || v121[*(int *)(v117 + 148)] == 1)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_77;
    }
    if ((v86 & 1) != 0)
    {
LABEL_53:
      swift_bridgeObjectRelease();
    }
    else
    {
      v131[0] = v85;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727930);
      sub_1C0104C2C((unint64_t *)&unk_1EF5BC5B8, &qword_1ED727930, MEMORY[0x1E0DEB3D0]);
      sub_1C004F408();
      sub_1C03040B4();
      swift_bridgeObjectRelease();
      v115 = sub_1C0303F94();
      swift_bridgeObjectRelease();
      if (v115 <= 2)
        goto LABEL_51;
    }
  }
  v130 = (uint8_t *)*((_QWORD *)v92 + 30);
  v93 = *((_QWORD *)v130 + 2);
  if (!v93)
  {
    swift_unknownObjectRelease();
    goto LABEL_83;
  }
  v94 = (uint64_t)v130;
  swift_bridgeObjectRetain_n();
  v95 = (uint64_t *)(v94 + 72);
  while (1)
  {
    v96 = *(v95 - 4);
    v97 = *(v95 - 3);
    v99 = *(v95 - 2);
    v98 = *(v95 - 1);
    v100 = *v95;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v101 = sub_1C013ABE0(v128);
    if (!v102)
    {
      swift_bridgeObjectRelease();
      goto LABEL_70;
    }
    if (v99 == v101 && v102 == v98)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v104 = sub_1C0304A08();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v104 & 1) == 0)
        goto LABEL_70;
    }
    v105 = objc_msgSend(v127, sel_originAppId);
    v106 = sub_1C0303EB0();
    v108 = v107;

    if (v96 == v106 && v97 == v108)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_81;
    }
    v110 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v110 & 1) != 0)
      break;
LABEL_70:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v95 += 6;
    if (!--v93)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_82;
    }
  }
  swift_unknownObjectRelease();
LABEL_81:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v111 = v121;
  v121[339] = 1;
  *((_QWORD *)v111 + 43) = v100;
LABEL_82:
  v91 = (uint64_t)v125;
  v90 = v122;
LABEL_83:
  v112 = v91;
  v113 = v91;
  v114 = v123;
  sub_1C00607B8(v112, v123, &qword_1ED726DB0);
  __swift_storeEnumTagSinglePayload(v114, 0, 1, v90);
  sub_1C0044B78(v113, &qword_1ED726DB0);
}

uint64_t sub_1C013A6BC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  BOOL v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v34;
  _QWORD *v35;
  _QWORD *v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  char v41;
  unint64_t v42;
  char v43;
  _QWORD *v44;
  _OWORD *v45;
  __int128 v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  _QWORD v50[2];
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;

  v67 = a3;
  v59 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
  v52 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v60 = (uint64_t)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1C0302B90();
  v55 = *(_QWORD *)(v56 - 8);
  result = MEMORY[0x1E0C80A78](v56);
  v54 = (char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = a2;
  v9 = *(_QWORD *)(a2 + 240);
  v62 = *(_QWORD *)(v9 + 16);
  if (!v62)
    return result;
  v50[1] = v3;
  v61 = v9 + 32;
  v58 = v67 + 56;
  v51 = *MEMORY[0x1E0DA0F10];
  swift_bridgeObjectRetain();
  v10 = 0;
  v57 = v9;
  while (v10 < *(_QWORD *)(v9 + 16))
  {
    v11 = v61 + 48 * v10;
    v13 = *(_QWORD *)(v11 + 8);
    v12 = *(_QWORD *)(v11 + 16);
    v14 = *(_QWORD *)(v11 + 24);
    v15 = *(_QWORD *)(v11 + 32);
    v16 = *(_QWORD *)(v11 + 40);
    LOBYTE(v64) = *(_BYTE *)v11;
    *((_QWORD *)&v64 + 1) = v13;
    *(_QWORD *)&v65 = v12;
    *((_QWORD *)&v65 + 1) = v14;
    *(_QWORD *)&v66 = v15;
    *((_QWORD *)&v66 + 1) = v16;
    if (*(_QWORD *)(v67 + 16))
    {
      v17 = v67;
      sub_1C0304B04();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1C0303E20();
      v18 = sub_1C0304B40();
      v19 = -1 << *(_BYTE *)(v17 + 32);
      v20 = v18 & ~v19;
      if (((*(_QWORD *)(v58 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
      {
        v21 = *(_QWORD *)(v67 + 48);
        v22 = (_QWORD *)(v21 + 16 * v20);
        v23 = *v22 == v13 && v22[1] == v12;
        if (v23 || (sub_1C0304A08() & 1) != 0)
        {
LABEL_11:
          swift_bridgeObjectRelease();
LABEL_29:
          sub_1C00607B8(v53, v60, (uint64_t *)&unk_1ED726D98);
          v35 = v59;
          swift_isUniquelyReferenced_nonNull_native();
          v63 = (_QWORD *)*v35;
          v36 = v63;
          *v35 = 0x8000000000000000;
          v37 = sub_1C00B40D8((unsigned __int8 *)&v64);
          if (__OFADD__(v36[2], (v38 & 1) == 0))
            goto LABEL_45;
          v39 = v37;
          v40 = v38;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5BC5E0);
          v41 = sub_1C03047BC();
          v9 = v57;
          if ((v41 & 1) != 0)
          {
            v42 = sub_1C00B40D8((unsigned __int8 *)&v64);
            if ((v40 & 1) != (v43 & 1))
              goto LABEL_47;
            v39 = v42;
          }
          v44 = v63;
          if ((v40 & 1) != 0)
          {
            sub_1C013AC94(v60, v63[7] + *(_QWORD *)(v52 + 72) * v39);
          }
          else
          {
            v63[(v39 >> 6) + 8] |= 1 << v39;
            v45 = (_OWORD *)(v44[6] + 48 * v39);
            v46 = v65;
            *v45 = v64;
            v45[1] = v46;
            v45[2] = v66;
            sub_1C005A744(v60, v44[7] + *(_QWORD *)(v52 + 72) * v39, (uint64_t *)&unk_1ED726D98);
            v47 = v44[2];
            v48 = __OFADD__(v47, 1);
            v49 = v47 + 1;
            if (v48)
              goto LABEL_46;
            v44[2] = v49;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          *v59 = v44;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_40:
          swift_bridgeObjectRelease();
          goto LABEL_41;
        }
        v24 = ~v19;
        while (1)
        {
          v20 = (v20 + 1) & v24;
          if (((*(_QWORD *)(v58 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
            break;
          v25 = (_QWORD *)(v21 + 16 * v20);
          v26 = *v25 == v13 && v25[1] == v12;
          if (v26 || (sub_1C0304A08() & 1) != 0)
            goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v67 + 16))
      {
        swift_bridgeObjectRelease();
        goto LABEL_40;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v27 = v55;
    v28 = v54;
    v29 = v56;
    (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v54, v51, v56);
    v30 = sub_1C0302B84();
    v32 = v31;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
    if (v13 == v30 && v12 == v32)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v34 = sub_1C0304A08();
      swift_bridgeObjectRelease();
      if ((v34 & 1) == 0)
        goto LABEL_29;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v9 = v57;
LABEL_41:
    if (++v10 == v62)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  result = sub_1C0304A68();
  __break(1u);
  return result;
}

void sub_1C013ABC8(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1C0139B48(a1, *(char **)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1C013ABE0(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_vocabularyId);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C0303EB0();

  return v3;
}

unint64_t sub_1C013AC40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF5BC5C8;
  if (!qword_1EF5BC5C8)
  {
    v1 = sub_1C00447B0(255, (unint64_t *)&qword_1ED727C50);
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF5BC5C8);
  }
  return result;
}

uint64_t sub_1C013AC94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C013ACDC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void OUTLINED_FUNCTION_3_49()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1C0044B78(v1, v0);
}

void OUTLINED_FUNCTION_4_40()
{
  uint64_t v0;
  uint64_t *v1;

  sub_1C0044B78(v0, v1);
}

void OUTLINED_FUNCTION_5_33(uint64_t a1)
{
  uint64_t *v1;

  sub_1C0044B78(a1, v1);
}

void OUTLINED_FUNCTION_7_34(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  sub_1C00607B8(a1, v1, v2);
}

void OUTLINED_FUNCTION_8_28(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  sub_1C00607B8(a1, v2, v1);
}

void OUTLINED_FUNCTION_9_32(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1C00607B8(a1, a2, v2);
}

void OUTLINED_FUNCTION_10_37(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1C00607B8(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_15_20(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 376) = a1;
  return sub_1C03044B0();
}

void OUTLINED_FUNCTION_18_20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = v1;
}

void OUTLINED_FUNCTION_19_21()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 376) = v1;
  sub_1C00B17F8();
}

void OUTLINED_FUNCTION_20_12()
{
  sub_1C00B17F8();
}

void OUTLINED_FUNCTION_25_12()
{
  sub_1C004FE34();
}

void OUTLINED_FUNCTION_30_12()
{
  sub_1C004FE34();
}

void OUTLINED_FUNCTION_32_12()
{
  sub_1C00B1764();
}

void OUTLINED_FUNCTION_37_11()
{
  JUMPOUT(0x1C3B97040);
}

void OUTLINED_FUNCTION_40_11()
{
  JUMPOUT(0x1C3B96EC0);
}

void OUTLINED_FUNCTION_41_9()
{
  JUMPOUT(0x1C3B96EC0);
}

uint64_t OUTLINED_FUNCTION_46_11()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  return sub_1C003E6D8(v1, v2, (uint64_t *)(v0 + 640));
}

BOOL OUTLINED_FUNCTION_47_12(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

id OUTLINED_FUNCTION_48_11(id a1, SEL a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return objc_msgSend(a1, a2, v2, v3, v4);
}

uint64_t sub_1C013AEC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + OBJC_IVAR____TtC13SiriInference26AppResolutionRulesProvider_seasAppUsageEnabledLocales) = &unk_1E7989310;
  sub_1C008D9EC(a1, v3 + OBJC_IVAR____TtC13SiriInference26AppResolutionRulesProvider_commsAppResolutionFeature);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC13SiriInference26AppResolutionRulesProvider_trialConfigProviderPhone) = a2;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC13SiriInference26AppResolutionRulesProvider_trialConfigProviderMessages) = a3;
  return v3;
}

__n128 *sub_1C013AF2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 *v9;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v12;
  os_log_type_t v13;
  _WORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  os_log_type_t v33;
  _WORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  __n128 *v41;
  __int128 v42;
  __int128 v43;
  _UNKNOWN **v44;

  v2 = v0;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC13SiriInference26AppResolutionRulesProvider_trialConfigProviderMessages);
  if ((sub_1C01A06E0() & 1) != 0)
  {
    if (qword_1EF5B7F18 != -1)
      swift_once();
    v4 = OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7(v4, (uint64_t)qword_1EF5FC6E0);
    v5 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_13_2(v5))
    {
      v6 = (_WORD *)OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_10_4(v6);
      OUTLINED_FUNCTION_45_1(&dword_1C0039000, v7, v8, "#AppResolutionRulesProvider#getMessagesAppResolutionRules: always1p rule is enabled");
      OUTLINED_FUNCTION_5();
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8EC8);
    v9 = (__n128 *)OUTLINED_FUNCTION_16_0();
    v3 = (void *)OUTLINED_FUNCTION_22_18(v9, (__n128)xmmword_1C0305B60);
    v10 = OUTLINED_FUNCTION_16_0();
    v11 = &protocol witness table for Always1pRule;
    goto LABEL_7;
  }
  if ((sub_1C0262834() & 1) != 0)
  {
    if (qword_1EF5B7F18 != -1)
      swift_once();
    v12 = OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7(v12, (uint64_t)qword_1EF5FC6E0);
    v13 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_13_2(v13))
    {
      v14 = (_WORD *)OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_10_4(v14);
      OUTLINED_FUNCTION_45_1(&dword_1C0039000, v15, v16, "#AppResolutionRulesProvider#getMessagesAppResolutionRules: app selection CoreML rule is enabled");
      OUTLINED_FUNCTION_5();
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8EC8);
    v9 = (__n128 *)OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_23_16(v9, (__n128)xmmword_1C0305B60);
    v10 = OUTLINED_FUNCTION_19_22();
    if (!v1)
    {
      v11 = &off_1E7997E60;
LABEL_7:
      v9[3].n128_u64[1] = (unint64_t)v3;
      v9[4].n128_u64[0] = (unint64_t)v11;
      v9[2].n128_u64[0] = v10;
      return v9;
    }
LABEL_16:
    OUTLINED_FUNCTION_13_22();
    return v9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8EC8);
  v9 = (__n128 *)OUTLINED_FUNCTION_16_0();
  v17 = OUTLINED_FUNCTION_21_18(v9, (__n128)xmmword_1C03084B0);
  v42 = 0u;
  v43 = 0u;
  v44 = 0;
  OUTLINED_FUNCTION_16_0();
  v18 = sub_1C010DB94((uint64_t)&v42);
  if (v1)
    goto LABEL_16;
  v9[3].n128_u64[1] = v17;
  v9[4].n128_u64[0] = (unint64_t)&off_1E7993F98;
  v20 = (void *)OUTLINED_FUNCTION_18_21(v18);
  v21 = OUTLINED_FUNCTION_16_0();
  v9[6].n128_u64[0] = (unint64_t)v20;
  v9[6].n128_u64[1] = (unint64_t)&protocol witness table for SeasContactInSingleAppRule;
  v9[4].n128_u64[1] = v21;
  if (qword_1EF5B7F18 != -1)
    swift_once();
  v22 = OUTLINED_FUNCTION_9_0();
  v23 = OUTLINED_FUNCTION_7(v22, (uint64_t)qword_1EF5FC6E0);
  v24 = sub_1C03042E8();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)OUTLINED_FUNCTION_6();
    *(_WORD *)v25 = 0;
    _os_log_impl(&dword_1C0039000, v23, v24, "#AppResolutionRulesProvider#getMessagesAppResolutionRules: SeAS is enabled by default", v25, 2u);
    OUTLINED_FUNCTION_5();
  }

  v26 = *(_QWORD **)(v2 + OBJC_IVAR____TtC13SiriInference26AppResolutionRulesProvider_seasAppUsageEnabledLocales);
  v27 = v2 + OBJC_IVAR____TtC13SiriInference26AppResolutionRulesProvider_commsAppResolutionFeature;
  v28 = (uint64_t *)(v27 + *(int *)(type metadata accessor for CommsAppResolutionFeature() + 32));
  v29 = v28[1];
  if (v29)
  {
    v30 = *v28;
    v31 = v28[1];
  }
  else
  {
    v30 = 0;
    v31 = 0xE000000000000000;
  }
  v32 = sub_1C01F1964(v30, v31, v26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if ((v32 & 1) != 0)
  {
    sub_1C0303B80();
    v33 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_37_1(v33))
    {
      v34 = (_WORD *)OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_15_21(v34);
      OUTLINED_FUNCTION_0_4(&dword_1C0039000, v35, v36, "#AppResolutionRulesProvider#getMessagesAppResolutionRules: SeAS appUsageRule is enabled");
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_20_13();
    OUTLINED_FUNCTION_16_0();
    v37 = OUTLINED_FUNCTION_14_28();
    v38 = OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_12_22(v38);
    if (v39)
    {
      OUTLINED_FUNCTION_11_32();
      v9 = v41;
    }
    *((_QWORD *)&v43 + 1) = v37;
    v44 = &protocol witness table for SeasAppUsageRule;
    *(_QWORD *)&v42 = v29;
    OUTLINED_FUNCTION_17_18();
    sub_1C004CD5C(&v42, v40);
  }
  return v9;
}

uint64_t sub_1C013B2EC@<X0>(uint64_t *a1@<X8>)
{
  id v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t result;

  v2 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 112);
  type metadata accessor for TrialManager();
  v3 = (_QWORD *)OUTLINED_FUNCTION_16_19();
  v4 = sub_1C008CF1C((uint64_t)v2, 0xD000000000000032, 0x80000001C032D730, v3);
  v5 = type metadata accessor for PhoneAppSelectionModelManager();
  OUTLINED_FUNCTION_16_19();
  result = sub_1C0104E40((uint64_t)v4, 0xD000000000000019, 0x80000001C032EE10);
  a1[3] = v5;
  a1[4] = (uint64_t)&off_1E79936D0;
  *a1 = result;
  return result;
}

uint64_t sub_1C013B3B8()
{
  uint64_t v0;

  sub_1C008DDF4(v0 + OBJC_IVAR____TtC13SiriInference26AppResolutionRulesProvider_commsAppResolutionFeature);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C013B40C()
{
  return type metadata accessor for AppResolutionRulesProvider();
}

uint64_t sub_1C013B414()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for CommsAppResolutionFeature();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void OUTLINED_FUNCTION_11_32()
{
  sub_1C004FB00();
}

uint64_t OUTLINED_FUNCTION_12_22(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 16) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_13_22()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_14_28()
{
  return type metadata accessor for SeasAppUsageRule();
}

_WORD *OUTLINED_FUNCTION_15_21(_WORD *result)
{
  *result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_19()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_17_18()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = v1;
}

uint64_t OUTLINED_FUNCTION_18_21(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return type metadata accessor for SeasContactInSingleAppRule();
}

uint64_t OUTLINED_FUNCTION_19_22()
{
  return sub_1C0173930();
}

uint64_t OUTLINED_FUNCTION_20_13()
{
  return type metadata accessor for AppUsageProvider();
}

uint64_t OUTLINED_FUNCTION_21_18(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return type metadata accessor for SeasAppMatcherRule();
}

uint64_t OUTLINED_FUNCTION_22_18(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return type metadata accessor for Always1pRule();
}

uint64_t OUTLINED_FUNCTION_23_16(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return type metadata accessor for ModelBasedAppResolverRule();
}

void static MetricsService.log(metric:)(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;

  v1 = *(_QWORD *)a1;
  v2 = *(_OWORD *)(a1 + 8);
  sub_1C013B584(&v1);
}

void sub_1C013B584(uint64_t *a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v2 = *a1;
  v1 = a1[1];
  v3 = a1[2];
  sub_1C0301660();
  swift_allocObject();
  sub_1C0301654();
  v15 = v2;
  v16 = v1;
  v17 = v3;
  sub_1C013BA30();
  v4 = sub_1C0301648();
  v6 = v5;
  sub_1C00C83C0(v4, v5);
  if (qword_1ED728430 != -1)
    swift_once();
  v7 = sub_1C0303B98();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED729650);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v8 = sub_1C0303B80();
  v9 = sub_1C03042E8();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v14 = v11;
    *(_DWORD *)v10 = 136446210;
    v15 = 0xD000000000000019;
    v16 = 0x80000001C032C0E0;
    swift_bridgeObjectRetain();
    sub_1C0303FD0();
    swift_bridgeObjectRelease();
    v15 = sub_1C003E6D8(0xD000000000000019, 0x80000001C032C0E0, &v14);
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v8, v9, "sending metric %{public}s to Core Analytics", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v11, -1, -1);
    MEMORY[0x1C3B98378](v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v12 = (void *)sub_1C009130C(1, (void (*)())sub_1C013BA6C, 0);
  v13 = (void *)sub_1C0301BE8();
  sub_1C0040600(v4, v6);
  objc_msgSend(v12, sel_logCoreAnalyticsMetricWithMetricsData_, v13);
  sub_1C0040600(v4, v6);
  swift_unknownObjectRelease();
  swift_release();

}

ValueMetadata *type metadata accessor for MetricsService()
{
  return &type metadata for MetricsService;
}

unint64_t sub_1C013BA30()
{
  unint64_t result;

  result = qword_1EF5BC6F8;
  if (!qword_1EF5BC6F8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for CoreAnalyticsMetric, &type metadata for CoreAnalyticsMetric);
    atomic_store(result, (unint64_t *)&qword_1EF5BC6F8);
  }
  return result;
}

void sub_1C013BA6C(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  NSObject *oslog;
  uint64_t v11;

  if (qword_1ED728430 != -1)
    swift_once();
  v2 = sub_1C0303B98();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED729650);
  v3 = a1;
  v4 = a1;
  oslog = sub_1C0303B80();
  v5 = sub_1C03042F4();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v11 = v7;
    *(_DWORD *)v6 = 136446210;
    swift_getErrorValue();
    v8 = sub_1C0304A8C();
    sub_1C003E6D8(v8, v9, &v11);
    sub_1C03044B0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C0039000, oslog, v5, "Error in XPC connection: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v7, -1, -1);
    MEMORY[0x1C3B98378](v6, -1, -1);

  }
  else
  {

  }
}

void sub_1C013BC44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t matched;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD v22[2];
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  matched = type metadata accessor for ContactMatchRuntimeData(0);
  v25 = *(_QWORD *)(matched - 8);
  v6 = MEMORY[0x1E0C80A78](matched);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v22 - v9;
  v27 = MEMORY[0x1E0DEE9D8];
  v24 = *(_QWORD *)(a1 + 16);
  if (v24)
  {
    v22[1] = v2;
    v23 = v8;
    v11 = 0;
    v26 = a2;
    while (v11 < *(_QWORD *)(a1 + 16))
    {
      v12 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      v13 = *(_QWORD *)(v25 + 72);
      sub_1C00638E8(a1 + v12 + v13 * v11, (uint64_t)v10, type metadata accessor for ContactMatchRuntimeData);
      v14 = *(_QWORD *)(a2 + 16);
      if (v14)
      {
        v15 = a1;
        v16 = *(_QWORD *)(type metadata accessor for Contact() - 8);
        v17 = a2 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
        v18 = *(_QWORD *)(v16 + 72);
        swift_bridgeObjectRetain();
        while (1)
        {
          static Contact.== infix(_:_:)();
          if ((v19 & 1) != 0)
            break;
          v17 += v18;
          if (!--v14)
          {
            swift_bridgeObjectRelease();
            a1 = v15;
            v8 = v23;
            goto LABEL_9;
          }
        }
        a2 = v26;
        swift_bridgeObjectRelease();
        sub_1C003DD84((uint64_t)v10, type metadata accessor for ContactMatchRuntimeData);
        a1 = v15;
        v8 = v23;
      }
      else
      {
LABEL_9:
        sub_1C004555C((uint64_t)v10, (uint64_t)v8, type metadata accessor for ContactMatchRuntimeData);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1C00B1B9C();
        v20 = v27;
        v21 = *(_QWORD *)(v27 + 16);
        if (v21 >= *(_QWORD *)(v27 + 24) >> 1)
        {
          sub_1C00B1B9C();
          v20 = v27;
        }
        *(_QWORD *)(v20 + 16) = v21 + 1;
        sub_1C004555C((uint64_t)v8, v20 + v12 + v21 * v13, type metadata accessor for ContactMatchRuntimeData);
        a2 = v26;
      }
      if (++v11 == v24)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C013BE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  char *i;
  unint64_t v12;
  uint64_t v14;
  _BYTE v15[264];
  _QWORD v16[34];
  uint64_t v17;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1C00B18E4();
    v10 = v17;
    for (i = (char *)(a1 + 32); ; i += 264)
    {
      --v9;
      memcpy(v16, i, 0x108uLL);
      memcpy(v15, i, sizeof(v15));
      sub_1C003F648(v16);
      sub_1C013DB1C(v15, a2, (uint64_t)v8);
      if (v3)
      {
        sub_1C0040644(v16);
        swift_bridgeObjectRelease();
        swift_release();
        return v10;
      }
      v3 = 0;
      sub_1C0040644(v16);
      v17 = v10;
      v12 = *(_QWORD *)(v10 + 16);
      if (v12 >= *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_1C00B18E4();
        v10 = v17;
      }
      *(_QWORD *)(v10 + 16) = v12 + 1;
      sub_1C005A718((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v12, &qword_1ED7261A8);
      if (!v9)
        break;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v10;
}

uint64_t sub_1C013C04C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v14[2];
  uint64_t v15;

  v3 = type metadata accessor for Contact();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v14[1] = v1;
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1C00B17F8();
    v8 = v15;
    v9 = *(_QWORD *)(type metadata accessor for ContactMatchRuntimeData(0) - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_1C00638E8(v10, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
      v15 = v8;
      v12 = *(_QWORD *)(v8 + 16);
      if (v12 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_1C00B17F8();
        v8 = v15;
      }
      *(_QWORD *)(v8 + 16) = v12 + 1;
      sub_1C004555C((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v12, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_1C013C1A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726F30);
  v3 = *(_QWORD *)(v26 - 8);
  v4 = MEMORY[0x1E0C80A78](v26);
  v6 = (uint64_t *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v4);
  v25 = (uint64_t *)((char *)&v23 - v7);
  v8 = type metadata accessor for ContactResolverRunTimeData(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = MEMORY[0x1E0DEE9D8];
  if (v12)
  {
    v23 = v1;
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1EAC();
    v14 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
    v24 = *(_QWORD *)(v3 + 72);
    do
    {
      v15 = v25;
      v16 = v26;
      v17 = *(int *)(v26 + 48);
      v18 = (uint64_t)v25 + v17;
      v19 = *v14;
      *v25 = *v14;
      sub_1C00638E8((uint64_t)v14 + v17, (uint64_t)v15 + v17, type metadata accessor for ContactResolverRunTimeData);
      v20 = (uint64_t)v6 + *(int *)(v16 + 48);
      *v6 = v19;
      sub_1C004555C(v18, v20, type metadata accessor for ContactResolverRunTimeData);
      sub_1C00638E8(v20, (uint64_t)v11, type metadata accessor for ContactResolverRunTimeData);
      sub_1C0044B78((uint64_t)v6, &qword_1ED726F30);
      v13 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C00B1EAC();
        v13 = v27;
      }
      v21 = *(_QWORD *)(v13 + 16);
      if (v21 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_1C00B1EAC();
        v13 = v27;
      }
      v14 = (uint64_t *)((char *)v14 + v24);
      *(_QWORD *)(v13 + 16) = v21 + 1;
      sub_1C004555C((uint64_t)v11, v13+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v21, type metadata accessor for ContactResolverRunTimeData);
      --v12;
    }
    while (v12);
  }
  return v13;
}

uint64_t sub_1C013C3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v7;
  uint64_t v8;
  char *v9;
  int *matched;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD v31[2];
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;

  v7 = (int *)type metadata accessor for ContactResolver.SignalSet(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  matched = (int *)type metadata accessor for ContactMatchRuntimeData(0);
  v36 = *((_QWORD *)matched - 1);
  MEMORY[0x1E0C80A78](matched);
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v31[0] = a4;
    v31[1] = v4;
    v37 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1B9C();
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v33 = *(_QWORD *)(v15 + 72);
    v34 = v14;
    v35 = v9;
    v32 = v9 + 8;
    do
    {
      sub_1C00638E8(v16, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
      v17 = *(int *)(v34 + 36);
      sub_1C00638E8(v16 + v17, (uint64_t)&v12[matched[5]], type metadata accessor for ContactResolver.SignalSet);
      v18 = 0.0;
      if (*(_BYTE *)(v16 + v17 + 361) == 1)
        v18 = (double)*(uint64_t *)(v16 + v17 + 368) * -0.001 + 1.01;
      v19 = *(unsigned __int8 *)(v16 + v17 + v7[33] + 9);
      v20 = (uint64_t)v35;
      sub_1C00638E8(v16 + v17, (uint64_t)v35, type metadata accessor for ContactResolver.SignalSet);
      if (v19 == 1)
      {
        v21 = v20;
        v22 = v32[v7[33]];
        sub_1C003DD84(v21, type metadata accessor for ContactResolver.SignalSet);
        if (v22)
          v18 = v18 + 1.0;
      }
      else
      {
        sub_1C003DD84(v20, type metadata accessor for ContactResolver.SignalSet);
      }
      v23 = v18 + 0.5;
      if (!*(_BYTE *)(v16 + v17 + v7[44]))
        v23 = v18;
      if (*(_BYTE *)(v16 + v17 + v7[36]))
        v24 = v23 + 1.0;
      else
        v24 = v23;
      sub_1C013F82C();
      v25 = MEMORY[0x1E0DEE9D8];
      v26 = sub_1C0303DB4();
      v27 = &v12[matched[6]];
      *v27 = 0;
      *((_QWORD *)v27 + 1) = 0;
      *((_QWORD *)v27 + 2) = v25;
      *(_QWORD *)&v12[matched[7]] = v26;
      *(double *)&v12[matched[8]] = v24;
      v12[matched[9]] = 1;
      v28 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C00B1B9C();
        v28 = v37;
      }
      v29 = *(_QWORD *)(v28 + 16);
      if (v29 >= *(_QWORD *)(v28 + 24) >> 1)
      {
        sub_1C00B1B9C();
        v28 = v37;
      }
      *(_QWORD *)(v28 + 16) = v29 + 1;
      sub_1C004555C((uint64_t)v12, v28+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v29, type metadata accessor for ContactMatchRuntimeData);
      v16 += v33;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v28;
}

void ContactResolver.__allocating_init()()
{
  swift_allocObject();
  ContactResolver.init()();
  OUTLINED_FUNCTION_9();
}

#error "1C013C7F0: call analysis failed (funcsize=40)"

#error "1C013C8AC: call analysis failed (funcsize=40)"

#error "1C013C968: call analysis failed (funcsize=40)"

uint64_t sub_1C013C9A4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = a3 + 24;
  swift_beginAccess();
  a1(v4);
  return swift_endAccess();
}

void sub_1C013C9FC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = a3 + 24;
  OUTLINED_FUNCTION_55_1();
  a1(v4);
  swift_endAccess();
  OUTLINED_FUNCTION_40();
}

void sub_1C013CA44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_6_0();
  sub_1C0045DFC(v0, v3 - v2, &qword_1ED7261A8);
  v4 = (char *)sub_1C013CAC8 + 4 * byte_1C030DBE0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1C013CAC8()
{
  uint64_t v0;

  sub_1C0044B78(v0, &qword_1ED7261A8);
  return 1;
}

uint64_t sub_1C013CAFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v5 = v3 - 1;
    v6 = type metadata accessor for RunTimeDataRecord();
    OUTLINED_FUNCTION_74_5();
    sub_1C00638E8(a1 + ((v7 + 32) & ~v7) + *(_QWORD *)(v8 + 72) * v5, a2, v9);
    v10 = a2;
    v11 = 0;
    v12 = 1;
    v13 = v6;
  }
  else
  {
    type metadata accessor for RunTimeDataRecord();
    v10 = OUTLINED_FUNCTION_90();
  }
  return __swift_storeEnumTagSinglePayload(v10, v11, v12, v13);
}

uint64_t sub_1C013CB84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(a1 + 16 * v1 + 16);
  OUTLINED_FUNCTION_47();
  return v2;
}

uint64_t sub_1C013CBC4(uint64_t result, uint64_t a2)
{
  if (result == a2)
    return 0;
  if (result >= a2)
  {
    __break(1u);
    return result;
  }
  return a2 - 1;
}

uint64_t sub_1C013CBF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(a1 + 24 * v1 + 8);
  OUTLINED_FUNCTION_47();
  return v2;
}

void sub_1C013CC48(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED726F30) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C020FB6C();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1C013E8B8((int64_t)v6);
  *a1 = v3;
}

char *static ContactResolver.name.getter()
{
  OUTLINED_FUNCTION_55_1();
  return off_1EF5BC700;
}

void static ContactResolver.name.setter(char *a1, uint64_t a2, char a3)
{
  OUTLINED_FUNCTION_55_1();
  off_1EF5BC700 = a1;
  unk_1EF5BC708 = a2;
  byte_1EF5BC710 = a3;
  OUTLINED_FUNCTION_40();
}

uint64_t (*static ContactResolver.name.modify())()
{
  OUTLINED_FUNCTION_55_1();
  return j__swift_endAccess;
}

void sub_1C013CD90()
{
  uint64_t v0;

  type metadata accessor for ContactResolver();
  v0 = swift_allocObject();
  ContactResolver.init()();
  qword_1EF5BC718 = v0;
}

uint64_t static ContactResolver.shared.getter()
{
  if (qword_1EF5B7EF8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1C013CE0C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_14_4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_1_1();
  sub_1C0301DA4();
  static ContactResolver.refreshSharedCache()();
  return OUTLINED_FUNCTION_51_9(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
}

uint64_t static ContactResolver.refreshSharedCacheAsync()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_9_33();
}

uint64_t sub_1C013CE78()
{
  uint64_t v0;

  static ContactResolver.refreshSharedCache()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C013CEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1C0044B78(a1, &qword_1ED727A20);
  sub_1C00638E8(a2, a1, (uint64_t (*)(_QWORD))type metadata accessor for ContactResolverCache);
  v4 = type metadata accessor for ContactResolverCache();
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v4);
}

BOOL sub_1C013CEFC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char *v3;
  double v4;
  uint64_t v5;
  void *v6;
  void *v7;
  double v8;
  uint64_t v9;
  uint64_t v11;

  v0 = type metadata accessor for ContactResolverCache();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0045A5C();
  v3 = &v2[*(int *)(v0 + 28)];
  v4 = 1.0;
  if ((*v3 & 1) == 0)
  {
    v4 = 0.0;
    if (v3[4] != 1)
    {
      if (*(_QWORD *)&v2[*(int *)(v0 + 76)])
      {
        v5 = sub_1C0150F18();
        sub_1C00A9B48(0xD000000000000017, 0x80000001C032F0A0, v5);
        v7 = v6;
        swift_bridgeObjectRelease();
        if (v7)
        {
          objc_msgSend(v7, sel_doubleValue);
          v4 = v8;

        }
      }
    }
  }
  sub_1C003DD84((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for ContactResolverCache);
  return sub_1C0060964(v9, v4);
}

void sub_1C013D008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  int v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint8_t *v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  NSObject *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint8_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  OUTLINED_FUNCTION_40_0();
  a19 = v25;
  a20 = v26;
  v100 = v21;
  v97 = v27;
  v98 = (uint8_t *)v20;
  v29 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261B8);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v30);
  v31 = OUTLINED_FUNCTION_43_10();
  v99 = type metadata accessor for ContactResolverRunTimeData(v31);
  v94 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  OUTLINED_FUNCTION_16_3();
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v90 - v33;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_19_2();
  v39 = v37 - v38;
  MEMORY[0x1E0C80A78](v40);
  OUTLINED_FUNCTION_72_3();
  MEMORY[0x1E0C80A78](v41);
  v43 = (uint8_t *)&v90 - v42;
  v44 = v100;
  sub_1C0041BA4(v29, v97, v45, v46, v47, v48, v49, v50, (uint64_t)v90, v91, v92, v93, v94, v95, v96, v97, (uint64_t)v98, v99, v100,
    v101);
  if (!v44)
  {
    v97 = v36;
    v98 = v43;
    v95 = v22;
    v96 = v23;
    v92 = 0;
    v93 = v39;
    v100 = v35;
    v52 = *(_QWORD *)(v51 + 16);
    if (v52)
    {
      a10 = MEMORY[0x1E0DEE9D8];
      v53 = v51;
      sub_1C00B18E4();
      OUTLINED_FUNCTION_21_1();
      v91 = v53;
      v55 = v53 + v54;
      v94 = *(_QWORD *)(v56 + 72);
      v57 = (uint64_t)v98;
      do
      {
        sub_1C00638E8(v55, (uint64_t)v34, type metadata accessor for ContactResolverRunTimeData);
        v58 = v99;
        sub_1C0045DFC((uint64_t)&v34[*(int *)(v99 + 56)], v24, &qword_1ED7261B8);
        v59 = v95;
        sub_1C00638E8((uint64_t)v34, v95, type metadata accessor for ContactResolverRunTimeData);
        if (__swift_getEnumTagSinglePayload(v24, 1, v100) == 1)
        {
          sub_1C0045DFC(v59 + *(int *)(v58 + 40), v57, &qword_1ED7261A8);
          sub_1C0044B78(v24, &qword_1ED7261B8);
        }
        else
        {
          sub_1C005A718(v24, v57, &qword_1ED7261A8);
        }
        sub_1C003DD84(v59, type metadata accessor for ContactResolverRunTimeData);
        sub_1C003DD84((uint64_t)v34, type metadata accessor for ContactResolverRunTimeData);
        v60 = a10;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C00B18E4();
          v60 = a10;
        }
        v62 = *(_QWORD *)(v60 + 16);
        v61 = *(_QWORD *)(v60 + 24);
        if (v62 >= v61 >> 1)
        {
          OUTLINED_FUNCTION_61_2(v61);
          sub_1C00B18E4();
          v60 = a10;
        }
        *(_QWORD *)(v60 + 16) = v62 + 1;
        OUTLINED_FUNCTION_21_1();
        v65 = v60 + v63 + *(_QWORD *)(v64 + 72) * v62;
        v57 = (uint64_t)v98;
        sub_1C005A718((uint64_t)v98, v65, &qword_1ED7261A8);
        v55 += v94;
        --v52;
      }
      while (v52);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v60 = MEMORY[0x1E0DEE9D8];
    }
    v66 = v93;
    if (qword_1ED727970 != -1)
      swift_once();
    v67 = OUTLINED_FUNCTION_9_0();
    v68 = __swift_project_value_buffer(v67, (uint64_t)&unk_1ED7295C8);
    OUTLINED_FUNCTION_47_13();
    v69 = sub_1C0303B80();
    v70 = sub_1C03042E8();
    if (os_log_type_enabled(v69, (os_log_type_t)v70))
    {
      LODWORD(v95) = v70;
      v71 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      v94 = OUTLINED_FUNCTION_4_0();
      a10 = v94;
      v98 = v71;
      *(_DWORD *)v71 = 136446210;
      if (*(_QWORD *)(v60 + 16))
      {
        v90 = v69;
        v91 = v68;
        v101 = MEMORY[0x1E0DEE9D8];
        sub_1C00B1910();
        OUTLINED_FUNCTION_21_1();
        v99 = *(_QWORD *)(v73 + 72);
        v74 = v96;
        sub_1C0045DFC(v60 + v72, v96, &qword_1ED7261A8);
        sub_1C0045DFC(v74, v66, &qword_1ED7261A8);
        v75 = (char *)&loc_1C013D3DC + 4 * byte_1C030DBE4[swift_getEnumCaseMultiPayload()];
        __asm { BR              X9 }
      }
      v76 = v98;
      v77 = MEMORY[0x1C3B97040](MEMORY[0x1E0DEE9D8], &type metadata for RecommendationType);
      v79 = v78;
      swift_bridgeObjectRelease();
      v80 = sub_1C003E6D8(v77, v79, &a10);
      OUTLINED_FUNCTION_95_3(v80);
      sub_1C03044B0();
      OUTLINED_FUNCTION_42_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_13_0(&dword_1C0039000, v69, (os_log_type_t)v95, "user-facing recommendation types: %{public}s", v76);
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_47_13();
    v81 = sub_1C0303B80();
    v82 = sub_1C03042E8();
    if (os_log_type_enabled(v81, v82))
    {
      v84 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      a10 = OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v84 = 136315138;
      v85 = swift_bridgeObjectRetain();
      v86 = MEMORY[0x1C3B97040](v85, v100);
      v88 = v87;
      OUTLINED_FUNCTION_17_0();
      v89 = sub_1C003E6D8(v86, v88, &a10);
      OUTLINED_FUNCTION_95_3(v89);
      sub_1C03044B0();
      OUTLINED_FUNCTION_42_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_13_0(&dword_1C0039000, v81, v82, "user-facing recommendations: %s", v84);
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_42_2();
  }
  OUTLINED_FUNCTION_28_0();
}

uint64_t sub_1C013D658(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_9_33();
}

#error "1C013D690: call analysis failed (funcsize=17)"

void sub_1C013D6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  OUTLINED_FUNCTION_40_0();
  a19 = v23;
  a20 = v24;
  v26 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7277E0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_43_10();
  v28 = type metadata accessor for RunTimeDataRecord();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_6_0();
  v32 = v31 - v30;
  v33 = type metadata accessor for Signpost();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_1_3();
  if (*(_QWORD *)(v26 + 16))
  {
    v66 = v26;
    v67 = v28;
    v65 = v32;
    if (qword_1ED728440 != -1)
      swift_once();
    v35 = (void *)qword_1ED729668;
    v36 = v21 + *(int *)(v33 + 20);
    *(_QWORD *)v36 = "ContactResolver.ContactResolution.makeCorrection";
    *(_QWORD *)(v36 + 8) = 48;
    *(_BYTE *)(v36 + 16) = 2;
    v37 = v35;
    sub_1C0303B68();
    *(_QWORD *)(v21 + *(int *)(v33 + 24)) = v37;
    v38 = v37;
    sub_1C03043E4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
    v39 = OUTLINED_FUNCTION_7_3();
    *(_OWORD *)(v39 + 16) = xmmword_1C0305B60;
    v40 = OUTLINED_FUNCTION_23_0();
    v42 = v41;
    *(_QWORD *)(v39 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v39 + 64) = sub_1C00A6A70();
    *(_QWORD *)(v39 + 32) = v40;
    *(_QWORD *)(v39 + 40) = v42;
    OUTLINED_FUNCTION_35_18();
    sub_1C0303B50();
    OUTLINED_FUNCTION_70_3();

    if (qword_1ED728460 != -1)
      swift_once();
    objc_msgSend((id)qword_1ED728388, sel_waitUntilAllOperationsAreFinished);
    sub_1C00D1ABC(&a10);
    if (!v20)
    {
      swift_retain();
      sub_1C024404C();
      sub_1C013CAFC(v43, v22);
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v22, 1, v67) != 1)
      {
        sub_1C004555C(v22, v65, (uint64_t (*)(_QWORD))type metadata accessor for RunTimeDataRecord);
        v62 = *(_QWORD *)(v65 + *(int *)(v67 + 24));
        OUTLINED_FUNCTION_47_13();
        sub_1C013BE8C(v66, v62);
        OUTLINED_FUNCTION_84_1();
        sub_1C003DD84(v65, (uint64_t (*)(_QWORD))type metadata accessor for RunTimeDataRecord);
        OUTLINED_FUNCTION_17_0();
        sub_1C03043D8();
        OUTLINED_FUNCTION_62_4();
        v63 = sub_1C0303B5C();
        OUTLINED_FUNCTION_82_4(v63, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
        goto LABEL_12;
      }
      sub_1C0044B78(v22, &qword_1ED7277E0);
      type metadata accessor for InferenceError();
      swift_allocObject();
      OUTLINED_FUNCTION_63_0();
      OUTLINED_FUNCTION_90_3();
      v51 = sub_1C026A508(v44, v45, v46, v47, v48, v49, v50, 263, v64, 1);
      sub_1C006831C((unint64_t *)&qword_1ED727E90, (uint64_t (*)(uint64_t))type metadata accessor for InferenceError, (uint64_t)&protocol conformance descriptor for InferenceError);
      OUTLINED_FUNCTION_80_2();
      swift_allocError();
      *v52 = v51;
      swift_willThrow();
      OUTLINED_FUNCTION_84_1();
    }
    type metadata accessor for InferenceError();
    swift_initStackObject();
    OUTLINED_FUNCTION_63_0();
    OUTLINED_FUNCTION_90_3();
    sub_1C026A508(v53, v54, v55, v56, v57, v58, v59, 284, v64, 1);
    if (qword_1ED728430 != -1)
      swift_once();
    v60 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v60, (uint64_t)qword_1ED729650);
    sub_1C026A800();
    swift_release();
    swift_willThrow();
    sub_1C03043D8();
    OUTLINED_FUNCTION_62_4();
    v61 = sub_1C0303B5C();
    OUTLINED_FUNCTION_82_4(v61, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  }
LABEL_12:
  OUTLINED_FUNCTION_28_0();
}

void sub_1C013DB1C(const void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t matched;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[33];
  uint64_t v43;
  _BYTE v44[264];
  unsigned __int8 v45[264];
  _QWORD v46[33];
  _BYTE v47[264];
  _BYTE v48[264];
  _QWORD v49[36];

  v40 = type metadata accessor for ContactResolverRunTimeData(0);
  v7 = *(_QWORD *)(v40 - 8);
  v8 = MEMORY[0x1E0C80A78](v40);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v35 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v37 = (uint64_t)&v35 - v15;
  MEMORY[0x1E0C80A78](v14);
  v39 = (uint64_t)&v35 - v16;
  memcpy(v49, a1, 0x108uLL);
  v17 = a2;
  v18 = *(_QWORD *)(a2 + 16);
  if (v18)
  {
    v36 = v10;
    v41 = a3;
    v49[35] = v3;
    v19 = v17 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v20 = v17;
    memcpy(v48, a1, sizeof(v48));
    nullsub_1(v48);
    v21 = *(_QWORD *)(v7 + 72);
    v38 = v20;
    swift_bridgeObjectRetain();
    do
    {
      sub_1C00638E8(v19, (uint64_t)v13, type metadata accessor for ContactResolverRunTimeData);
      v22 = *((_QWORD *)v13 + 37);
      if (*(_QWORD *)(v22 + 16))
      {
        matched = type metadata accessor for ContactMatchRuntimeData(0);
        v24 = *(unsigned __int8 *)(*(_QWORD *)(matched - 8) + 80);
        v25 = v22 + *(int *)(matched + 20) + ((v24 + 32) & ~v24) + 8;
        memcpy(v46, (const void *)v25, sizeof(v46));
        memmove(v47, (const void *)v25, 0x108uLL);
        nullsub_1(v47);
        sub_1C005A718((uint64_t)v47, (uint64_t)v45, &qword_1EF5BC860);
        memcpy(v44, v49, sizeof(v44));
        sub_1C003F648(v46);
        sub_1C003F648(v46);
        static ContactQuery.== infix(_:_:)((uint64_t)v45, (uint64_t)v44);
        LOBYTE(v25) = v26;
        memcpy(v42, v45, sizeof(v42));
        sub_1C0040644(v42);
        sub_1C0040644(v46);
        if ((v25 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v27 = v37;
          sub_1C004555C((uint64_t)v13, v37, type metadata accessor for ContactResolverRunTimeData);
          v28 = v39;
          sub_1C004555C(v27, v39, type metadata accessor for ContactResolverRunTimeData);
          v29 = v40;
          sub_1C01FC590();
          v31 = v30;
          v32 = swift_bridgeObjectRetain();
          sub_1C013BC44(v32, v31);
          v45[0] = 3;
          v33 = (uint64_t)v36;
          sub_1C00FDDCC(v34, v45, 0x6F74636572726F63, 0xE900000000000072, (uint64_t)v36);
          swift_bridgeObjectRelease();
          sub_1C003DD84(v28, type metadata accessor for ContactResolverRunTimeData);
          sub_1C0045DFC(v33 + *(int *)(v29 + 40), v41, &qword_1ED7261A8);
          sub_1C003DD84(v33, type metadata accessor for ContactResolverRunTimeData);
          return;
        }
      }
      else
      {
        sub_1C013F878(v47);
        sub_1C005A718((uint64_t)v47, (uint64_t)v42, &qword_1EF5BC860);
        sub_1C005A718((uint64_t)v48, (uint64_t)&v43, &qword_1EF5BC860);
        sub_1C003F648(v49);
        sub_1C013F880((uint64_t)v42);
      }
      sub_1C003DD84((uint64_t)v13, type metadata accessor for ContactResolverRunTimeData);
      v19 += v21;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C013DEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_9_33();
}

#error "1C013DEDC: call analysis failed (funcsize=16)"

uint64_t sub_1C013DEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_9_33();
}

uint64_t sub_1C013DF10()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C004ABF4();
  return OUTLINED_FUNCTION_11_33(v1, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C013DF54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v3 = *(_QWORD *)(a1 + 296);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 < 2)
  {
    if (v4 == 1)
    {
      v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ContactMatchRuntimeData(0) - 8) + 80);
      sub_1C00638E8(v3 + ((v8 + 32) & ~v8), (uint64_t)a2, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    v5 = OUTLINED_FUNCTION_47();
    v6 = sub_1C013C04C(v5);
    swift_bridgeObjectRelease();
    *a2 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
    return swift_storeEnumTagMultiPayload();
  }
}

uint64_t ContactResolver.deinit()
{
  uint64_t v0;

  sub_1C0044B78(v0 + OBJC_IVAR____TtC13SiriInference15ContactResolver_cacheOverride, &qword_1ED727A20);
  return v0;
}

char *sub_1C013E074()
{
  return static ContactResolver.name.getter();
}

id sub_1C013E088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v8;
  void *v9;
  id v10;

  if (!a2)
  {
    v8 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v9 = 0;
    goto LABEL_6;
  }
  v8 = (void *)sub_1C0303E8C();
  swift_bridgeObjectRelease();
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v9 = (void *)sub_1C0303E8C();
  swift_bridgeObjectRelease();
LABEL_6:
  v10 = objc_msgSend(v5, sel_initWithJsonStr_interactionId_dataVersion_, v8, v9, a5);

  return v10;
}

id sub_1C013E12C(uint64_t a1, uint64_t a2)
{
  return sub_1C00616B4(a1, a2, (SEL *)&selRef_initWithSuiteName_);
}

void sub_1C013E138(uint64_t a1)
{
  uint64_t v2;

  sub_1C006831C(&qword_1EF5BC748, (uint64_t (*)(uint64_t))type metadata accessor for ContactResolver, (uint64_t)&protocol conformance descriptor for ContactResolver);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C013E174()
{
  sub_1C006831C(&qword_1EF5BC750, (uint64_t (*)(uint64_t))type metadata accessor for Contact, (uint64_t)&protocol conformance descriptor for Contact);
}

void sub_1C013E1A0()
{
  sub_1C006831C(&qword_1EF5BC758, (uint64_t (*)(uint64_t))type metadata accessor for Contact, (uint64_t)&protocol conformance descriptor for Contact);
}

void sub_1C013E1CC()
{
  sub_1C006831C(&qword_1EF5BC760, (uint64_t (*)(uint64_t))type metadata accessor for ContactResolver.RequestContext, (uint64_t)&protocol conformance descriptor for ContactResolver.RequestContext);
}

void sub_1C013E1F8()
{
  sub_1C006831C(&qword_1EF5BC768, (uint64_t (*)(uint64_t))type metadata accessor for ContactResolver.RequestContext, (uint64_t)&protocol conformance descriptor for ContactResolver.RequestContext);
}

unint64_t sub_1C013E228()
{
  unint64_t result;

  result = qword_1EF5BC770;
  if (!qword_1EF5BC770)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Empty, &type metadata for Empty);
    atomic_store(result, (unint64_t *)&qword_1EF5BC770);
  }
  return result;
}

unint64_t sub_1C013E268()
{
  unint64_t result;

  result = qword_1EF5BC778;
  if (!qword_1EF5BC778)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Empty, &type metadata for Empty);
    atomic_store(result, (unint64_t *)&qword_1EF5BC778);
  }
  return result;
}

void sub_1C013E2A4()
{
  sub_1C006831C(&qword_1EF5BC780, type metadata accessor for ContactResolver.SignalSet, (uint64_t)&protocol conformance descriptor for ContactResolver.SignalSet);
}

void sub_1C013E2D0()
{
  sub_1C006831C(&qword_1EF5BC788, type metadata accessor for ContactResolver.SignalSet, (uint64_t)&protocol conformance descriptor for ContactResolver.SignalSet);
}

void sub_1C013E2FC()
{
  sub_1C006831C(&qword_1EF5BC790, (uint64_t (*)(uint64_t))type metadata accessor for ContactResolver.Spec, (uint64_t)&protocol conformance descriptor for ContactResolver.Spec);
}

void sub_1C013E328()
{
  sub_1C006831C(&qword_1EF5BC798, (uint64_t (*)(uint64_t))type metadata accessor for ContactResolver.Spec, (uint64_t)&protocol conformance descriptor for ContactResolver.Spec);
}

uint64_t sub_1C013E354()
{
  return type metadata accessor for ContactResolver();
}

void sub_1C013E35C()
{
  unint64_t v0;

  sub_1C013E53C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for ContactResolver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContactResolver.warmup()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ContactResolver.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of ContactResolver.makeRecommendations(queries:config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of ContactResolver.makeRecommendationsAsync(queries:config:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_66_2();
  v1 = (_QWORD *)OUTLINED_FUNCTION_5_6();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_25_13(v1, (uint64_t)sub_1C013FB8C);
  return OUTLINED_FUNCTION_12_23(v2, v3, v4);
}

uint64_t dispatch thunk of ContactResolver.makeCorrections(queries:config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of ContactResolver.makeCorrectionsAsync(queries:config:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_66_2();
  v1 = (_QWORD *)OUTLINED_FUNCTION_5_6();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_25_13(v1, (uint64_t)sub_1C013FB8C);
  return OUTLINED_FUNCTION_12_23(v2, v3, v4);
}

uint64_t dispatch thunk of ContactResolver.findMatchesAsync(queries:config:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_66_2();
  v1 = (_QWORD *)OUTLINED_FUNCTION_5_6();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_25_13(v1, (uint64_t)sub_1C013E4EC);
  return OUTLINED_FUNCTION_12_23(v2, v3, v4);
}

uint64_t sub_1C013E4EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

void sub_1C013E53C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED7284C0)
  {
    type metadata accessor for ContactResolverCache();
    v0 = sub_1C030448C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED7284C0);
  }
}

uint64_t sub_1C013E590()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C013E5B4()
{
  uint64_t v0;

  return sub_1C013C9A4(*(void (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

void sub_1C013E5DC()
{
  uint64_t v0;

  sub_1C013C9FC(*(void (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1C013E600()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = (int *)OUTLINED_FUNCTION_33_11();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = OUTLINED_FUNCTION_69_4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v25 = *(_QWORD *)(v6 + 64);
  sub_1C0301CFC();
  OUTLINED_FUNCTION_74_5();
  v26 = v9;
  v27 = v8;
  v24 = v10;
  swift_bridgeObjectRelease();
  v11 = v0 + v3;
  swift_release();
  swift_release();
  v12 = sub_1C030367C();
  OUTLINED_FUNCTION_49(v12);
  OUTLINED_FUNCTION_85_2(v1[8]);
  OUTLINED_FUNCTION_85_2(v1[9]);
  OUTLINED_FUNCTION_85_2(v1[10]);
  OUTLINED_FUNCTION_71_3(v1[11]);
  OUTLINED_FUNCTION_71_3(v1[12]);
  swift_bridgeObjectRelease();
  v13 = v0 + v3 + v1[14];
  v14 = type metadata accessor for MLContactRecommender();
  if (!__swift_getEnumTagSinglePayload(v13, 1, v14))
  {
    swift_release();
    v15 = OUTLINED_FUNCTION_14_4();
    OUTLINED_FUNCTION_49(v15);
  }
  v16 = v7;
  v17 = v4 + v7;
  v18 = v11 + v1[15];
  swift_release();
  v19 = v18 + *(int *)(type metadata accessor for StringTokenizer() + 20);
  OUTLINED_FUNCTION_14_4();
  OUTLINED_FUNCTION_79_3(v19);
  if (*(_QWORD *)(v11 + v1[16]))
  {
    swift_release();
    swift_release();
  }
  OUTLINED_FUNCTION_36_14();
  OUTLINED_FUNCTION_79_3(v11 + v1[18]);
  OUTLINED_FUNCTION_36_14();
  OUTLINED_FUNCTION_36_14();
  OUTLINED_FUNCTION_36_14();
  OUTLINED_FUNCTION_36_14();
  OUTLINED_FUNCTION_36_14();
  OUTLINED_FUNCTION_71_3(v1[24]);
  v20 = v11 + v1[25];
  if (*(_QWORD *)(v20 + 24))
    __swift_destroy_boxed_opaque_existential_0Tm(v20);
  v21 = (v3 + v17) & ~v16;
  swift_bridgeObjectRelease();
  v22 = v11 + v1[30];
  if (*(_QWORD *)(v22 + 24))
    __swift_destroy_boxed_opaque_existential_0Tm(v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_79_3(v0 + v21 + *(int *)(v5 + 32));
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v21 + *(int *)(v5 + 64)))
    swift_release();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_91_3();
  (*(void (**)(unint64_t, uint64_t))(v26 + 8))(v0 + ((v21 + v25 + v24) & ~v24), v27);
  return swift_deallocObject();
}

void sub_1C013E8B8(int64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t *v29;
  uint64_t *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  char v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t **v109;
  char *v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;

  v2 = v1;
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726F30);
  v4 = *(_QWORD *)(v129 - 8);
  v5 = MEMORY[0x1E0C80A78](v129);
  v125 = (uint64_t)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v135 = (uint64_t)&v119 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v132 = (uint64_t *)((char *)&v119 - v10);
  MEMORY[0x1E0C80A78](v9);
  v131 = (uint64_t *)((char *)&v119 - v11);
  v12 = *(_QWORD *)(a1 + 8);
  v13 = sub_1C03049CC();
  if (v13 >= v12)
  {
    if (v12 < 0)
      goto LABEL_142;
    if (v12)
      sub_1C013F23C(0, v12, 1, (uint64_t *)a1);
    return;
  }
  v122 = v13;
  sub_1C027E098(v12 / 2);
  v120 = v14;
  v121 = v12;
  v127 = v15;
  v128 = v4;
  if (v12 <= 0)
    goto LABEL_105;
  v16 = 0;
  v17 = (char *)MEMORY[0x1E0DEE9D8];
  v134 = (uint64_t *)a1;
  while (1)
  {
    v18 = v16;
    v19 = v16 + 1;
    v124 = v17;
    v126 = v16;
    if (v16 + 1 >= v12)
    {
      v24 = v16 + 1;
    }
    else
    {
      v20 = *(_QWORD *)a1;
      v21 = *(_QWORD *)(v4 + 72);
      v22 = v131;
      sub_1C0045DFC(v20 + v21 * v19, (uint64_t)v131, &qword_1ED726F30);
      v23 = v132;
      sub_1C0045DFC(v20 + v21 * v18, (uint64_t)v132, &qword_1ED726F30);
      v136 = *v22;
      v133 = *v23;
      sub_1C0044B78((uint64_t)v23, &qword_1ED726F30);
      sub_1C0044B78((uint64_t)v22, &qword_1ED726F30);
      v24 = v18 + 2;
      v123 = v20;
      v137 = v21;
      if (v18 + 2 < v12)
      {
        v119 = v2;
        v130 = v21 * v19;
        v25 = v20;
        v26 = v18 + 2;
        v27 = v21 * (v18 + 2);
        while (1)
        {
          v28 = v136 < v133;
          v29 = v131;
          sub_1C0045DFC(v25 + v27, (uint64_t)v131, &qword_1ED726F30);
          v30 = v132;
          sub_1C0045DFC(v25 + v130, (uint64_t)v132, &qword_1ED726F30);
          v31 = *v29 >= *v30;
          sub_1C0044B78((uint64_t)v30, &qword_1ED726F30);
          sub_1C0044B78((uint64_t)v29, &qword_1ED726F30);
          if (v28 == v31)
            break;
          v25 += v137;
          if (++v26 >= v12)
          {
            v24 = v12;
            v4 = v128;
            goto LABEL_12;
          }
        }
        v4 = v128;
        v24 = v26;
LABEL_12:
        v2 = v119;
        v18 = v126;
      }
      if (v136 >= v133)
        goto LABEL_30;
      if (v24 < v18)
        goto LABEL_143;
      if (v18 >= v24)
      {
LABEL_30:
        a1 = (int64_t)v134;
      }
      else
      {
        v133 = v12;
        v32 = 0;
        v33 = v137;
        v34 = v137 * (v24 - 1);
        v35 = v18;
        v36 = v24 * v137;
        v37 = v35;
        v38 = v35 * v137;
        do
        {
          if (v37 != v24 + v32 - 1)
          {
            v39 = v2;
            v40 = v123;
            if (!v123)
              goto LABEL_149;
            v41 = v123 + v38;
            v136 = v123 + v34;
            sub_1C005A718(v123 + v38, v125, &qword_1ED726F30);
            if (v38 < v34 || v41 >= v40 + v36)
            {
              v43 = v136;
              swift_arrayInitWithTakeFrontToBack();
              v2 = v39;
              v44 = v43;
            }
            else
            {
              v2 = v39;
              v44 = v136;
              if (v38 != v34)
                swift_arrayInitWithTakeBackToFront();
            }
            sub_1C005A718(v125, v44, &qword_1ED726F30);
            v33 = v137;
          }
          ++v37;
          --v32;
          v34 -= v33;
          v36 -= v33;
          v38 += v33;
        }
        while (v37 < v24 + v32);
        v4 = v128;
        v12 = v133;
        a1 = (int64_t)v134;
        v18 = v126;
      }
    }
    if (v24 < v12)
    {
      if (__OFSUB__(v24, v18))
        goto LABEL_141;
      if (v24 - v18 < v122)
      {
        if (__OFADD__(v18, v122))
          goto LABEL_144;
        if (v18 + v122 >= v12)
          v45 = v12;
        else
          v45 = v18 + v122;
        if (v45 < v18)
        {
LABEL_145:
          __break(1u);
          goto LABEL_146;
        }
        if (v24 != v45)
        {
          v119 = v2;
          v46 = *(_QWORD *)(v4 + 72);
          v137 = v46 * (v24 - 1);
          v130 = v46;
          v47 = v24 * v46;
          v123 = v45;
          do
          {
            v48 = 0;
            v49 = v126;
            v133 = v24;
            while (1)
            {
              v50 = v134;
              v51 = *v134;
              v52 = v47;
              v53 = v47 + v48 + *v134;
              v54 = v131;
              sub_1C0045DFC(v53, (uint64_t)v131, &qword_1ED726F30);
              v55 = v132;
              sub_1C0045DFC(v137 + v48 + v51, (uint64_t)v132, &qword_1ED726F30);
              v136 = *v54;
              v56 = *v55;
              sub_1C0044B78((uint64_t)v55, &qword_1ED726F30);
              sub_1C0044B78((uint64_t)v54, &qword_1ED726F30);
              if (v136 >= v56)
                break;
              v57 = *v50;
              if (!*v50)
                goto LABEL_147;
              v47 = v52;
              v58 = v57 + v137 + v48;
              sub_1C005A718(v57 + v52 + v48, v135, &qword_1ED726F30);
              swift_arrayInitWithTakeFrontToBack();
              sub_1C005A718(v135, v58, &qword_1ED726F30);
              v48 -= v130;
              ++v49;
              v59 = v133;
              if (v133 == v49)
                goto LABEL_47;
            }
            v59 = v133;
            v47 = v52;
LABEL_47:
            v24 = v59 + 1;
            v137 += v130;
            v47 += v130;
          }
          while (v24 != v123);
          v24 = v123;
          v2 = v119;
          a1 = (int64_t)v134;
          v18 = v126;
        }
      }
    }
    if (v24 < v18)
      goto LABEL_140;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v133 = v24;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      v17 = v124;
    else
      v17 = sub_1C00500C8(0, *((_QWORD *)v124 + 2) + 1, 1, v124);
    v62 = *((_QWORD *)v17 + 2);
    v61 = *((_QWORD *)v17 + 3);
    v63 = v62 + 1;
    if (v62 >= v61 >> 1)
      v17 = sub_1C00500C8((char *)(v61 > 1), v62 + 1, 1, v17);
    *((_QWORD *)v17 + 2) = v63;
    v64 = v17 + 32;
    v65 = &v17[16 * v62 + 32];
    v66 = v133;
    *(_QWORD *)v65 = v126;
    *((_QWORD *)v65 + 1) = v66;
    if (v62)
      break;
    v63 = 1;
LABEL_97:
    v12 = *(_QWORD *)(a1 + 8);
    v16 = v133;
    v4 = v128;
    if (v133 >= v12)
      goto LABEL_106;
  }
  while (1)
  {
    v67 = v63 - 1;
    if (v63 >= 4)
    {
      v72 = &v64[16 * v63];
      v73 = *((_QWORD *)v72 - 8);
      v74 = *((_QWORD *)v72 - 7);
      v78 = __OFSUB__(v74, v73);
      v75 = v74 - v73;
      if (v78)
        goto LABEL_125;
      v77 = *((_QWORD *)v72 - 6);
      v76 = *((_QWORD *)v72 - 5);
      v78 = __OFSUB__(v76, v77);
      v70 = v76 - v77;
      v71 = v78;
      if (v78)
        goto LABEL_126;
      v79 = v63 - 2;
      v80 = &v64[16 * v63 - 32];
      v82 = *(_QWORD *)v80;
      v81 = *((_QWORD *)v80 + 1);
      v78 = __OFSUB__(v81, v82);
      v83 = v81 - v82;
      if (v78)
        goto LABEL_127;
      v78 = __OFADD__(v70, v83);
      v84 = v70 + v83;
      if (v78)
        goto LABEL_129;
      if (v84 >= v75)
      {
        v102 = &v64[16 * v67];
        v104 = *(_QWORD *)v102;
        v103 = *((_QWORD *)v102 + 1);
        v78 = __OFSUB__(v103, v104);
        v105 = v103 - v104;
        if (v78)
          goto LABEL_135;
        v95 = v70 < v105;
        goto LABEL_86;
      }
    }
    else
    {
      if (v63 != 3)
      {
        v96 = *((_QWORD *)v17 + 4);
        v97 = *((_QWORD *)v17 + 5);
        v78 = __OFSUB__(v97, v96);
        v89 = v97 - v96;
        v90 = v78;
        goto LABEL_80;
      }
      v69 = *((_QWORD *)v17 + 4);
      v68 = *((_QWORD *)v17 + 5);
      v78 = __OFSUB__(v68, v69);
      v70 = v68 - v69;
      v71 = v78;
    }
    if ((v71 & 1) != 0)
      goto LABEL_128;
    v79 = v63 - 2;
    v85 = &v64[16 * v63 - 32];
    v87 = *(_QWORD *)v85;
    v86 = *((_QWORD *)v85 + 1);
    v88 = __OFSUB__(v86, v87);
    v89 = v86 - v87;
    v90 = v88;
    if (v88)
      goto LABEL_130;
    v91 = &v64[16 * v67];
    v93 = *(_QWORD *)v91;
    v92 = *((_QWORD *)v91 + 1);
    v78 = __OFSUB__(v92, v93);
    v94 = v92 - v93;
    if (v78)
      goto LABEL_132;
    if (__OFADD__(v89, v94))
      goto LABEL_134;
    if (v89 + v94 >= v70)
    {
      v95 = v70 < v94;
LABEL_86:
      if (v95)
        v67 = v79;
      goto LABEL_88;
    }
LABEL_80:
    if ((v90 & 1) != 0)
      goto LABEL_131;
    v98 = &v64[16 * v67];
    v100 = *(_QWORD *)v98;
    v99 = *((_QWORD *)v98 + 1);
    v78 = __OFSUB__(v99, v100);
    v101 = v99 - v100;
    if (v78)
      goto LABEL_133;
    if (v101 < v89)
      goto LABEL_97;
LABEL_88:
    v106 = v67 - 1;
    if (v67 - 1 >= v63)
    {
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
      goto LABEL_136;
    }
    v107 = *(_QWORD *)a1;
    if (!*(_QWORD *)a1)
      goto LABEL_148;
    v108 = v17;
    v109 = (uint64_t **)&v64[16 * v106];
    a1 = (int64_t)*v109;
    v110 = &v64[16 * v67];
    v111 = *((_QWORD *)v110 + 1);
    sub_1C013F470(v107 + *(_QWORD *)(v128 + 72) * (_QWORD)*v109, v107 + *(_QWORD *)(v128 + 72) * *(_QWORD *)v110, v107 + *(_QWORD *)(v128 + 72) * v111, v127);
    if (v2)
      break;
    if (v111 < a1)
      goto LABEL_122;
    if (v67 > *((_QWORD *)v108 + 2))
      goto LABEL_123;
    *v109 = (uint64_t *)a1;
    *(_QWORD *)&v64[16 * v106 + 8] = v111;
    v112 = *((_QWORD *)v108 + 2);
    if (v67 >= v112)
      goto LABEL_124;
    v63 = v112 - 1;
    memmove(&v64[16 * v67], v110 + 16, 16 * (v112 - 1 - v67));
    v17 = v108;
    *((_QWORD *)v108 + 2) = v112 - 1;
    a1 = (int64_t)v134;
    if (v112 <= 2)
      goto LABEL_97;
  }
LABEL_103:
  swift_bridgeObjectRelease();
  if (v121 >= -1)
    goto LABEL_118;
  __break(1u);
LABEL_105:
  v17 = (char *)MEMORY[0x1E0DEE9D8];
  v63 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_106:
  if (v63 >= 2)
  {
    v113 = *(_QWORD *)a1;
    while (1)
    {
      a1 = v63 - 2;
      if (v63 < 2)
        break;
      if (!v113)
        goto LABEL_150;
      v114 = v17;
      v115 = *(_QWORD *)&v17[16 * a1 + 32];
      v116 = *(_QWORD *)&v17[16 * v63 + 24];
      sub_1C013F470(v113 + *(_QWORD *)(v128 + 72) * v115, v113 + *(_QWORD *)(v128 + 72) * *(_QWORD *)&v17[16 * v63 + 16], v113 + *(_QWORD *)(v128 + 72) * v116, v127);
      if (v2)
        goto LABEL_103;
      if (v116 < v115)
        goto LABEL_137;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v114 = sub_1C020FAB8();
      if ((unint64_t)a1 >= *((_QWORD *)v114 + 2))
        goto LABEL_138;
      v117 = &v114[16 * a1 + 32];
      *(_QWORD *)v117 = v115;
      *((_QWORD *)v117 + 1) = v116;
      v118 = *((_QWORD *)v114 + 2);
      if (v63 > v118)
        goto LABEL_139;
      memmove(&v114[16 * v63 + 16], &v114[16 * v63 + 32], 16 * (v118 - v63));
      v17 = v114;
      *((_QWORD *)v114 + 2) = v118 - 1;
      v63 = v118 - 1;
      if (v118 <= 2)
        goto LABEL_117;
    }
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
    goto LABEL_145;
  }
LABEL_117:
  swift_bridgeObjectRelease();
  if (v121 >= -1)
  {
LABEL_118:
    *(_QWORD *)(v120 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
}

void sub_1C013F23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;

  v35 = a1;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726F30);
  v7 = MEMORY[0x1E0C80A78](v36);
  v42 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v38 = (uint64_t *)((char *)&v33 - v10);
  MEMORY[0x1E0C80A78](v9);
  v37 = (uint64_t *)((char *)&v33 - v12);
  v41 = a3;
  v34 = a2;
  if (a3 != a2)
  {
    v13 = *(_QWORD *)(v11 + 72);
    v14 = v13 * (v41 - 1);
    v39 = v13;
    v15 = v13 * v41;
    v16 = &qword_1ED726F30;
    v44 = a4;
    while (2)
    {
      v17 = 0;
      v18 = v35;
      v40 = v15;
      do
      {
        v19 = *v44;
        v20 = v15 + v17 + *v44;
        v21 = v37;
        sub_1C0045DFC(v20, (uint64_t)v37, v16);
        v22 = v14 + v17 + v19;
        v23 = v14;
        v24 = v38;
        sub_1C0045DFC(v22, (uint64_t)v38, v16);
        v43 = *v21;
        v25 = v16;
        v26 = *v24;
        v27 = (uint64_t)v24;
        v14 = v23;
        sub_1C0044B78(v27, v25);
        v28 = (uint64_t)v21;
        v15 = v40;
        sub_1C0044B78(v28, v25);
        v29 = v43 < v26;
        v16 = v25;
        if (!v29)
          break;
        v30 = *v44;
        if (!*v44)
        {
          __break(1u);
          return;
        }
        v31 = v30 + v23 + v17;
        sub_1C005A718(v30 + v15 + v17, v42, v25);
        swift_arrayInitWithTakeFrontToBack();
        v32 = v31;
        v16 = v25;
        sub_1C005A718(v42, v32, v25);
        v17 -= v39;
        ++v18;
      }
      while (v41 != v18);
      v14 = v23 + v39;
      v15 += v39;
      if (++v41 != v34)
        continue;
      break;
    }
  }
}

void sub_1C013F470(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v32;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  BOOL v41;
  int64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;

  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726F30);
  v9 = MEMORY[0x1E0C80A78](v52);
  v54 = (uint64_t *)((char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v53 = (uint64_t *)((char *)&v44 - v11);
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v14 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_77;
  v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_78;
  v18 = v14 / v13;
  v19 = v16 / v13;
  if (v14 / v13 >= v16 / v13)
  {
    sub_1C00AE040(a2, v16 / v13);
    v21 = a4 + v19 * v13;
    if (v19 * v13 < 1 || a1 >= a2)
      goto LABEL_71;
    v45 = v4;
    v46 = v13;
    v48 = a4;
    v49 = -v13;
    v47 = a1;
    while (1)
    {
      v24 = a3;
      v25 = v49;
      a3 += v49;
      v51 = v21 + v49;
      v26 = v53;
      sub_1C0045DFC(v21 + v49, (uint64_t)v53, &qword_1ED726F30);
      v50 = a2 + v25;
      v27 = v54;
      sub_1C0045DFC(a2 + v25, (uint64_t)v54, &qword_1ED726F30);
      v28 = *v26;
      v29 = *v27;
      sub_1C0044B78((uint64_t)v27, &qword_1ED726F30);
      sub_1C0044B78((uint64_t)v26, &qword_1ED726F30);
      if (v28 >= v29)
      {
        if (v24 >= v21 && a3 < v21)
        {
          v32 = v47;
          a4 = v48;
          if (v24 == v21)
          {
            v21 = v51;
            goto LABEL_43;
          }
          v21 = v51;
LABEL_40:
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_43;
        }
        v21 = v51;
      }
      else
      {
        if (v24 >= a2 && a3 < a2)
        {
          v32 = v47;
          a4 = v48;
          if (v24 == a2)
          {
            a2 = v50;
            goto LABEL_43;
          }
          a2 = v50;
          goto LABEL_40;
        }
        a2 = v50;
      }
      swift_arrayInitWithTakeFrontToBack();
      v32 = v47;
      a4 = v48;
LABEL_43:
      v13 = v46;
      if (v21 <= a4 || a2 <= v32)
        goto LABEL_71;
    }
  }
  sub_1C00AE040(a1, v14 / v13);
  v20 = v18 * v13;
  v21 = a4 + v18 * v13;
  v51 = a3;
  if (v20 >= 1 && a2 < a3)
  {
    v45 = v4;
    v50 = v21;
    v34 = v53;
    v35 = v54;
    do
    {
      sub_1C0045DFC(a2, (uint64_t)v34, &qword_1ED726F30);
      sub_1C0045DFC(a4, (uint64_t)v35, &qword_1ED726F30);
      v36 = *v34;
      v37 = *v35;
      sub_1C0044B78((uint64_t)v35, &qword_1ED726F30);
      sub_1C0044B78((uint64_t)v34, &qword_1ED726F30);
      if (v36 >= v37)
      {
        if (a1 < a4 || a1 >= a4 + v13)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v38 = a2;
        a4 += v13;
      }
      else
      {
        v38 = a2 + v13;
        if (a1 < a2 || a1 >= v38)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      v21 = v50;
      a1 += v13;
      v41 = a4 >= v50 || v38 >= v51;
      a2 = v38;
    }
    while (!v41);
  }
LABEL_71:
  v42 = v21 - a4;
  if (v13 != -1 || v42 != 0x8000000000000000)
  {
    sub_1C00AE040(a4, v42 / v13);
    return;
  }
LABEL_79:
  __break(1u);
}

unint64_t sub_1C013F82C()
{
  unint64_t result;

  result = qword_1EF5BC858;
  if (!qword_1EF5BC858)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0317FC0, &type metadata for ContactRankerFeature);
    atomic_store(result, (unint64_t *)&qword_1EF5BC858);
  }
  return result;
}

uint64_t sub_1C013F868(uint64_t a1)
{
  uint64_t v1;

  return sub_1C013CEA4(a1, *(_QWORD *)(v1 + 16));
}

void sub_1C013F878(void *a1)
{
  bzero(a1, 0x108uLL);
}

uint64_t sub_1C013F880(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = *(_QWORD *)(a1 + 264);
  v3 = *(_QWORD *)(a1 + 272);
  v4 = *(_QWORD *)(a1 + 280);
  v5 = *(_QWORD *)(a1 + 288);
  v6 = *(_QWORD *)(a1 + 296);
  v7 = *(_QWORD *)(a1 + 304);
  v8 = *(_QWORD *)(a1 + 312);
  v9 = *(_QWORD *)(a1 + 320);
  v19 = *(_OWORD *)(a1 + 344);
  v20 = *(_OWORD *)(a1 + 328);
  v17 = *(_OWORD *)(a1 + 376);
  v18 = *(_OWORD *)(a1 + 360);
  v15 = *(_OWORD *)(a1 + 408);
  v16 = *(_OWORD *)(a1 + 392);
  v13 = *(_OWORD *)(a1 + 440);
  v14 = *(_OWORD *)(a1 + 424);
  v12 = *(_OWORD *)(a1 + 456);
  v11 = *(_OWORD *)(a1 + 472);
  sub_1C013FA04(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208));
  sub_1C013FA04(v2, v3, v4, v5, v6, v7, v8, v9, v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11);
  return a1;
}

uint64_t sub_1C013FA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0040774(a22, a23, a24);
    sub_1C00407A4(a25, a26, a27);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C013FB38()
{
  uint64_t v0;

  return sub_1C0043064(*(void (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t OUTLINED_FUNCTION_0_51()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_3_50()
{
  return swift_isEscapingClosureAtFileLocation();
}

uint64_t OUTLINED_FUNCTION_7_35()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_9_33()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_11_33(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_12_23(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_13_23()
{
  return swift_release();
}

void OUTLINED_FUNCTION_14_29()
{
  NSObject *v0;
  void *v1;

  dispatch_sync(v0, v1);
}

_QWORD *OUTLINED_FUNCTION_18_22(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result[2] = v3;
  result[3] = v1;
  result[4] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_25_13@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_42_11()
{
  return sub_1C0303B5C();
}

uint64_t OUTLINED_FUNCTION_43_10()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_45_8()
{
  return sub_1C0303B5C();
}

uint64_t OUTLINED_FUNCTION_47_13()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_56_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 88));
}

BOOL OUTLINED_FUNCTION_61_2@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_69_4()
{
  return type metadata accessor for ContactResolverConfig(0);
}

uint64_t OUTLINED_FUNCTION_70_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_81_3()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_84_1()
{
  return swift_release_n();
}

SiriInference::StreetType::Value_optional __swiftcall StreetType.Value.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  unint64_t v4;
  char v5;
  SiriInference::StreetType::Value_optional result;

  v2 = v1;
  v3 = sub_1C0304A38();
  swift_bridgeObjectRelease();
  v4 = v3 - 128;
  if (v3 >= 0x80)
  {
    v5 = -94;
    LOBYTE(v3) = 0x80;
    switch(v4)
    {
      case 0uLL:
        goto LABEL_2;
      case 1uLL:
        LOBYTE(v3) = -127;
        goto LABEL_2;
      case 2uLL:
        LOBYTE(v3) = -126;
        goto LABEL_2;
      case 3uLL:
        LOBYTE(v3) = -125;
        goto LABEL_2;
      case 4uLL:
        LOBYTE(v3) = -124;
        goto LABEL_2;
      case 5uLL:
        LOBYTE(v3) = -123;
        goto LABEL_2;
      case 6uLL:
        LOBYTE(v3) = -122;
        goto LABEL_2;
      case 7uLL:
        LOBYTE(v3) = -121;
        goto LABEL_2;
      case 8uLL:
        LOBYTE(v3) = -120;
        goto LABEL_2;
      case 9uLL:
        LOBYTE(v3) = -119;
        goto LABEL_2;
      case 0xAuLL:
        LOBYTE(v3) = -118;
        goto LABEL_2;
      case 0xBuLL:
        LOBYTE(v3) = -117;
        goto LABEL_2;
      case 0xCuLL:
        LOBYTE(v3) = -116;
        goto LABEL_2;
      case 0xDuLL:
        LOBYTE(v3) = -115;
        goto LABEL_2;
      case 0xEuLL:
        LOBYTE(v3) = -114;
        goto LABEL_2;
      case 0xFuLL:
        LOBYTE(v3) = -113;
        goto LABEL_2;
      case 0x10uLL:
        LOBYTE(v3) = -112;
        goto LABEL_2;
      case 0x11uLL:
        LOBYTE(v3) = -111;
        goto LABEL_2;
      case 0x12uLL:
        LOBYTE(v3) = -110;
        goto LABEL_2;
      case 0x13uLL:
        LOBYTE(v3) = -109;
        goto LABEL_2;
      case 0x14uLL:
        LOBYTE(v3) = -108;
        goto LABEL_2;
      case 0x15uLL:
        LOBYTE(v3) = -107;
        goto LABEL_2;
      case 0x16uLL:
        LOBYTE(v3) = -106;
        goto LABEL_2;
      case 0x17uLL:
        LOBYTE(v3) = -105;
        goto LABEL_2;
      case 0x18uLL:
        LOBYTE(v3) = -104;
        goto LABEL_2;
      case 0x19uLL:
        LOBYTE(v3) = -103;
        goto LABEL_2;
      case 0x1AuLL:
        LOBYTE(v3) = -102;
        goto LABEL_2;
      case 0x1BuLL:
        LOBYTE(v3) = -101;
        goto LABEL_2;
      case 0x1CuLL:
        LOBYTE(v3) = -100;
        goto LABEL_2;
      case 0x1DuLL:
        LOBYTE(v3) = -99;
        goto LABEL_2;
      case 0x1EuLL:
        LOBYTE(v3) = -98;
        goto LABEL_2;
      case 0x1FuLL:
        LOBYTE(v3) = -97;
        goto LABEL_2;
      case 0x20uLL:
        LOBYTE(v3) = -96;
        goto LABEL_2;
      case 0x21uLL:
        LOBYTE(v3) = -95;
        goto LABEL_2;
      case 0x22uLL:
        break;
      case 0x23uLL:
        v5 = -93;
        break;
      case 0x24uLL:
        v5 = -92;
        break;
      case 0x25uLL:
        v5 = -91;
        break;
      case 0x26uLL:
        v5 = -90;
        break;
      case 0x27uLL:
        v5 = -89;
        break;
      case 0x28uLL:
        v5 = -88;
        break;
      case 0x29uLL:
        v5 = -87;
        break;
      case 0x2AuLL:
        v5 = -86;
        break;
      case 0x2BuLL:
        v5 = -85;
        break;
      case 0x2CuLL:
        v5 = -84;
        break;
      case 0x2DuLL:
        v5 = -83;
        break;
      case 0x2EuLL:
        v5 = -82;
        break;
      case 0x2FuLL:
        v5 = -81;
        break;
      case 0x30uLL:
        v5 = -80;
        break;
      case 0x31uLL:
        v5 = -79;
        break;
      case 0x32uLL:
        v5 = -78;
        break;
      case 0x33uLL:
        v5 = -77;
        break;
      default:
        v5 = -76;
        break;
    }
  }
  else
  {
LABEL_2:
    v5 = v3;
  }
  *v2 = v5;
  OUTLINED_FUNCTION_37_0();
  return result;
}

void *static StreetType.Value.allCases.getter()
{
  return &unk_1E798A450;
}

uint64_t StreetType.Value.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C013FF68 + 4 * word_1C030DCC8[*v0]))(0x79656C6C61, 0xE500000000000000);
}

uint64_t sub_1C013FF68()
{
  return 0x78656E6E61;
}

uint64_t sub_1C013FF78()
{
  return 0x6164696E657661;
}

uint64_t sub_1C013FF90()
{
  return 0x65756E657661;
}

uint64_t sub_1C013FFA4()
{
  return 0x6F6F796162;
}

uint64_t sub_1C014077C()
{
  return 0x65676173736170;
}

uint64_t sub_1C0140790()
{
  return 1701734768;
}

uint64_t sub_1C01407A0()
{
  return 0x73656E6970;
}

uint64_t sub_1C01407AC()
{
  return 0x6563616C70;
}

uint64_t sub_1C01407B8()
{
  return 0x6E69616C70;
}

uint64_t sub_1C01407C4()
{
  return 0x736E69616C70;
}

uint64_t sub_1C01407D4()
{
  return 0x617A616C70;
}

void sub_1C01407F4()
{
  JUMPOUT(0x1C0140800);
}

void sub_1C0140808()
{
  JUMPOUT(0x1C0140814);
}

uint64_t sub_1C014081C()
{
  return 0x7374726F70;
}

uint64_t sub_1C0140828()
{
  return 0x65697269617270;
}

uint64_t sub_1C014083C()
{
  return 0x6C6169646172;
}

void sub_1C0140870()
{
  JUMPOUT(0x1C014087CLL);
}

uint64_t sub_1C0140884()
{
  return 1953719666;
}

uint64_t sub_1C0140894()
{
  return 0x6567646972;
}

uint64_t sub_1C01408A0()
{
  return 0x736567646972;
}

uint64_t sub_1C01408C0()
{
  return 1684107122;
}

uint64_t sub_1C01408D0()
{
  return 0x7364616F72;
}

uint64_t sub_1C01408DC()
{
  return 0x6574756F72;
}

uint64_t sub_1C01408E8()
{
  return 6649202;
}

uint64_t sub_1C01408F8()
{
  return 0x6C616F6873;
}

void sub_1C0140904()
{
  JUMPOUT(0x1C0140910);
}

void sub_1C0140928()
{
  JUMPOUT(0x1C0140934);
}

uint64_t sub_1C014093C()
{
  return 0x796177796B73;
}

uint64_t sub_1C0140950()
{
  return 0x676E69727073;
}

uint64_t sub_1C0140964()
{
  return 0x73676E69727073;
}

uint64_t sub_1C0140978()
{
  return 0x657261757173;
}

uint64_t sub_1C014098C()
{
  return 0x73657261757173;
}

uint64_t sub_1C01409A0()
{
  return 0x6E6F6974617473;
}

uint64_t sub_1C01409B8()
{
  return 0x756E657661727473;
}

uint64_t sub_1C01409D8()
{
  return 0x6D6165727473;
}

uint64_t sub_1C01409EC()
{
  return 0x73746565727473;
}

uint64_t sub_1C0140A00()
{
  return 0x746565727473;
}

uint64_t sub_1C0140A14()
{
  return 0x74696D6D7573;
}

uint64_t sub_1C0140A28()
{
  return 0x65636172726574;
}

void sub_1C0140A3C()
{
  OUTLINED_FUNCTION_5_34();
}

uint64_t sub_1C0140A50()
{
  return 0x6563617274;
}

uint64_t sub_1C0140A98()
{
  return 0x6C656E6E7574;
}

uint64_t sub_1C0140AAC()
{
  return 0x656B69706E727574;
}

void sub_1C0140AE0()
{
  JUMPOUT(0x1C0140AECLL);
}

void sub_1C0140B04()
{
  JUMPOUT(0x1C0140B14);
}

uint64_t sub_1C0140B1C()
{
  return 0x79656C6C6176;
}

uint64_t sub_1C0140B30()
{
  return 0x7377656976;
}

uint64_t sub_1C0140B3C()
{
  return 2003134838;
}

uint64_t sub_1C0140B4C()
{
  return 0x736567616C6C6976;
}

void sub_1C0140B64()
{
  JUMPOUT(0x1C0140B74);
}

uint64_t sub_1C0140B7C()
{
  return 0x656C6C6976;
}

uint64_t sub_1C0140B90()
{
  return 0x6174736976;
}

uint64_t sub_1C0140BA0()
{
  return 7954807;
}

uint64_t sub_1C0140BC0()
{
  return 1819043191;
}

uint64_t sub_1C0140BD0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C025F4E4(*a1, *a2);
}

void sub_1C0140BDC()
{
  unsigned __int8 *v0;

  sub_1C00CE920(*v0);
}

uint64_t sub_1C0140BE4(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1C00C2DA0(a1, *v1);
}

void sub_1C0140BEC(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EA9D8(a1, *v1);
}

SiriInference::StreetType::Value_optional sub_1C0140BF4(Swift::String *a1)
{
  return StreetType.Value.init(rawValue:)(*a1);
}

uint64_t sub_1C0140C00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = StreetType.Value.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1C0140C24(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E798A450;
}

uint64_t sub_1C0140C34()
{
  sub_1C0141AC8();
  return sub_1C03040F0();
}

uint64_t sub_1C0140C90()
{
  sub_1C0141AC8();
  return sub_1C03040CC();
}

SiriInference::StreetType::Suffix_optional __swiftcall StreetType.Suffix.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  SiriInference::StreetType::Suffix_optional result;

  v2 = v1;
  v3 = sub_1C030484C();
  swift_bridgeObjectRelease();
  v4 = 8;
  if (v3 < 8)
    v4 = v3;
  *v2 = v4;
  OUTLINED_FUNCTION_37_0();
  return result;
}

uint64_t StreetType.Suffix.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0140D60 + 4 * byte_1C030DE30[*v0]))(0x7361456874756F53, 0xE900000000000074);
}

uint64_t sub_1C0140D60()
{
  return 0x7365576874726F4ELL;
}

uint64_t sub_1C0140DBC()
{
  return 1953718597;
}

uint64_t sub_1C0140DCC()
{
  return 0x7361456874726F4ELL;
}

void sub_1C0140DE0()
{
  sub_1C025F36C();
}

void sub_1C0140DEC()
{
  unsigned __int8 *v0;

  sub_1C00CE92C(*v0);
}

void sub_1C0140DF4()
{
  sub_1C00C2CE8();
}

void sub_1C0140DFC(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EA9E4(a1, *v1);
}

SiriInference::StreetType::Suffix_optional sub_1C0140E04(Swift::String *a1)
{
  return StreetType.Suffix.init(rawValue:)(*a1);
}

uint64_t sub_1C0140E10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = StreetType.Suffix.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0140E34()
{
  sub_1C0141A8C();
  return sub_1C03040F0();
}

uint64_t sub_1C0140E90()
{
  sub_1C0141A8C();
  return sub_1C03040CC();
}

void StreetType.value.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void StreetType.suffix.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

SiriInference::StreetType __swiftcall StreetType.init(value:suffix:)(SiriInference::StreetType::Value value, SiriInference::StreetType::Suffix_optional suffix)
{
  _BYTE *v2;
  char v3;
  SiriInference::StreetType result;

  v3 = *(_BYTE *)suffix.value;
  *v2 = *(_BYTE *)value;
  v2[1] = v3;
  result.value = value;
  return result;
}

void static StreetType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_1C025F4E4(*a1, *a2) & 1) != 0 && v2 != 8 && v3 != 8)
    sub_1C025F36C();
}

uint64_t sub_1C0140F6C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x786966667573 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C0141048(char a1)
{
  if ((a1 & 1) != 0)
    return 0x786966667573;
  else
    return 0x65756C6176;
}

uint64_t sub_1C0141078()
{
  char *v0;

  return sub_1C0141048(*v0);
}

uint64_t sub_1C0141080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0140F6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C01410A4()
{
  sub_1C0141390();
  return sub_1C0304BAC();
}

uint64_t sub_1C01410CC()
{
  sub_1C0141390();
  return sub_1C0304BB8();
}

void StreetType.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;
  char v13;
  char v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC870);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0141390();
  sub_1C0304BA0();
  v14 = v8;
  v13 = 0;
  sub_1C01413CC();
  sub_1C030499C();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    sub_1C0141408();
    sub_1C0304954();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  OUTLINED_FUNCTION_28_0();
}

void StreetType.init(from:)(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  char v7;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC890);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0141390();
  sub_1C0304B88();
  if (!v2)
  {
    sub_1C0141444();
    OUTLINED_FUNCTION_3_51();
    sub_1C03048E8();
    sub_1C0141480();
    OUTLINED_FUNCTION_3_51();
    sub_1C03048A0();
    OUTLINED_FUNCTION_3_27();
    *a2 = v7;
    a2[1] = v6;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  OUTLINED_FUNCTION_28_0();
}

void sub_1C0141364(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  StreetType.init(from:)(a1, a2);
}

void sub_1C0141378(_QWORD *a1)
{
  StreetType.encode(to:)(a1);
}

unint64_t sub_1C0141390()
{
  unint64_t result;

  result = qword_1EF5BC878;
  if (!qword_1EF5BC878)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030E4CC, &type metadata for StreetType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BC878);
  }
  return result;
}

unint64_t sub_1C01413CC()
{
  unint64_t result;

  result = qword_1EF5BC880;
  if (!qword_1EF5BC880)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetType.Value, &type metadata for StreetType.Value);
    atomic_store(result, (unint64_t *)&qword_1EF5BC880);
  }
  return result;
}

unint64_t sub_1C0141408()
{
  unint64_t result;

  result = qword_1EF5BC888;
  if (!qword_1EF5BC888)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetType.Suffix, &type metadata for StreetType.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5BC888);
  }
  return result;
}

unint64_t sub_1C0141444()
{
  unint64_t result;

  result = qword_1EF5BC898;
  if (!qword_1EF5BC898)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetType.Value, &type metadata for StreetType.Value);
    atomic_store(result, (unint64_t *)&qword_1EF5BC898);
  }
  return result;
}

unint64_t sub_1C0141480()
{
  unint64_t result;

  result = qword_1EF5BC8A0;
  if (!qword_1EF5BC8A0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetType.Suffix, &type metadata for StreetType.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5BC8A0);
  }
  return result;
}

unint64_t sub_1C01414C0()
{
  unint64_t result;

  result = qword_1EF5BC8A8;
  if (!qword_1EF5BC8A8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetType.Value, &type metadata for StreetType.Value);
    atomic_store(result, (unint64_t *)&qword_1EF5BC8A8);
  }
  return result;
}

unint64_t sub_1C0141500()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF5BC8B0;
  if (!qword_1EF5BC8B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF5BC8B8);
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF5BC8B0);
  }
  return result;
}

unint64_t sub_1C0141548()
{
  unint64_t result;

  result = qword_1EF5BC8C0;
  if (!qword_1EF5BC8C0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetType.Suffix, &type metadata for StreetType.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5BC8C0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StreetType(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 65288 <= 0xFFFEFFFF)
      v2 = 2;
    else
      v2 = 4;
    if (a2 + 65288 < 0xFF0000)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (v4)
        goto LABEL_15;
    }
    else
    {
      if (v3 == 2)
      {
        v4 = a1[1];
        if (!a1[1])
          goto LABEL_17;
LABEL_15:
        v5 = (*a1 | (v4 << 16)) - 65289;
        return (v5 + 1);
      }
      v4 = *((unsigned __int8 *)a1 + 2);
      if (*((_BYTE *)a1 + 2))
        goto LABEL_15;
    }
  }
LABEL_17:
  if (*((unsigned __int8 *)a1 + 1) <= 8u)
    v6 = 8;
  else
    v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 - 9;
  if (*((unsigned __int8 *)a1 + 1) < 8u)
    v5 = -1;
  else
    v5 = v7;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StreetType(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65288 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65288 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1C014166C + 4 * byte_1C030DE3D[v4]))();
  *a1 = a2 - 248;
  return ((uint64_t (*)(void))((char *)sub_1C01416A0 + 4 * byte_1C030DE38[v4]))();
}

uint64_t sub_1C01416A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1C01416A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1C01416B0);
  return result;
}

uint64_t sub_1C01416BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1C01416C4);
  *(_BYTE *)(result + 1) = a2 + 8;
  return result;
}

uint64_t sub_1C01416C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1C01416D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

void type metadata accessor for StreetType()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t getEnumTagSinglePayload for StreetType.Value(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0x4D)
  {
    if (a2 + 179 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 179) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 180;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB4;
  v5 = v6 - 180;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StreetType.Value(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 179 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 179) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x4D)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x4C)
    return ((uint64_t (*)(void))((char *)&loc_1C01417BC + 4 * byte_1C030DE47[v4]))();
  *a1 = a2 - 77;
  return ((uint64_t (*)(void))((char *)sub_1C01417F0 + 4 * byte_1C030DE42[v4]))();
}

uint64_t sub_1C01417F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C01417F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0141800);
  return result;
}

uint64_t sub_1C014180C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0141814);
  *(_BYTE *)result = a2 - 77;
  return result;
}

uint64_t sub_1C0141818(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0141820(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for StreetType.Value()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t storeEnumTagSinglePayload for StreetType.Suffix(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1C0141884 + 4 * byte_1C030DE51[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1C01418B8 + 4 * byte_1C030DE4C[v4]))();
}

uint64_t sub_1C01418B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C01418C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C01418C8);
  return result;
}

uint64_t sub_1C01418D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C01418DCLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1C01418E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C01418E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for StreetType.Suffix()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t storeEnumTagSinglePayload for StreetType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C014194C + 4 * byte_1C030DE5B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0141980 + 4 * byte_1C030DE56[v4]))();
}

uint64_t sub_1C0141980(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0141988(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0141990);
  return result;
}

uint64_t sub_1C014199C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C01419A4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C01419A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C01419B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StreetType.CodingKeys()
{
  return &type metadata for StreetType.CodingKeys;
}

unint64_t sub_1C01419D0()
{
  unint64_t result;

  result = qword_1EF5BC8C8;
  if (!qword_1EF5BC8C8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030E4A4, &type metadata for StreetType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BC8C8);
  }
  return result;
}

unint64_t sub_1C0141A10()
{
  unint64_t result;

  result = qword_1EF5BC8D0;
  if (!qword_1EF5BC8D0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030E414, &type metadata for StreetType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BC8D0);
  }
  return result;
}

unint64_t sub_1C0141A50()
{
  unint64_t result;

  result = qword_1EF5BC8D8;
  if (!qword_1EF5BC8D8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030E43C, &type metadata for StreetType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BC8D8);
  }
  return result;
}

unint64_t sub_1C0141A8C()
{
  unint64_t result;

  result = qword_1EF5BC8E0;
  if (!qword_1EF5BC8E0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetType.Suffix, &type metadata for StreetType.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5BC8E0);
  }
  return result;
}

unint64_t sub_1C0141AC8()
{
  unint64_t result;

  result = qword_1EF5BC8E8;
  if (!qword_1EF5BC8E8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetType.Value, &type metadata for StreetType.Value);
    atomic_store(result, (unint64_t *)&qword_1EF5BC8E8);
  }
  return result;
}

uint64_t sub_1C0141B24()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16))
  {
    if (*(_BYTE *)(v0 + 16) == 1)
      sub_1C0304B10();
    return sub_1C0304B10();
  }
  else
  {
    sub_1C0304B10();
    return sub_1C0303E20();
  }
}

uint64_t sub_1C0141BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        v8 = OUTLINED_FUNCTION_3_52();
        sub_1C0074588(v8, v9, 1);
        sub_1C0074588(v5, v6, 1);
        v10 = ((v5 ^ v2) & 1) == 0;
        return v10 & 1;
      }
    }
    else if (v7 == 2 && (v6 | v5) == 0)
    {
      v14 = OUTLINED_FUNCTION_3_52();
      sub_1C0074588(v14, v15, 2);
      sub_1C0074588(0, 0, 2);
      v10 = 1;
      return v10 & 1;
    }
LABEL_11:
    sub_1C0074574(v5, v6, v7);
    v12 = OUTLINED_FUNCTION_3_52();
    sub_1C0074588(v12, v13, v4);
    sub_1C0074588(v5, v6, v7);
    v10 = 0;
    return v10 & 1;
  }
  if (*(_BYTE *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  if (v2 == v5 && v3 == v6)
  {
    v10 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_3_52();
    v10 = sub_1C0304A08();
  }
  sub_1C0074574(v5, v6, 0);
  sub_1C0074574(v2, v3, 0);
  sub_1C0074588(v2, v3, 0);
  sub_1C0074588(v5, v6, 0);
  return v10 & 1;
}

void sub_1C0141D0C()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1C0304B04();
  if (v1)
  {
    if (v1 == 1)
      OUTLINED_FUNCTION_2_46();
    sub_1C0304B10();
  }
  else
  {
    OUTLINED_FUNCTION_4_41();
    OUTLINED_FUNCTION_0_52();
  }
  sub_1C0304B40();
  OUTLINED_FUNCTION_1_44();
}

void sub_1C0141D80()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1C0304B04();
  if (v1)
  {
    if (v1 == 1)
      OUTLINED_FUNCTION_2_46();
    sub_1C0304B10();
  }
  else
  {
    OUTLINED_FUNCTION_4_41();
    OUTLINED_FUNCTION_0_52();
  }
  sub_1C0304B40();
  OUTLINED_FUNCTION_1_44();
}

uint64_t _s3KeyOwxx(uint64_t a1)
{
  return sub_1C0074588(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s3KeyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C0074574(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s3KeyOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C0074574(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1C0074588(v6, v7, v8);
  return a1;
}

uint64_t _s3KeyOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1C0074588(v4, v5, v6);
  return a1;
}

uint64_t _s3KeyOwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s3KeyOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C0141F64(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1C0141F7C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *_s3KeyOMa()
{
  return &_s3KeyON;
}

unint64_t sub_1C0141FA8()
{
  unint64_t result;

  result = qword_1EF5BC8F0;
  if (!qword_1EF5BC8F0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030E520, &_s3KeyON);
    atomic_store(result, (unint64_t *)&qword_1EF5BC8F0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_52()
{
  return sub_1C0303E20();
}

uint64_t OUTLINED_FUNCTION_2_46()
{
  return sub_1C0304B10();
}

uint64_t OUTLINED_FUNCTION_3_52()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_4_41()
{
  return sub_1C0304B10();
}

uint64_t storeEnumTagSinglePayload for StreamIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0142078 + 4 * byte_1C030E595[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C01420AC + 4 * byte_1C030E590[v4]))();
}

uint64_t sub_1C01420AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C01420B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C01420BCLL);
  return result;
}

uint64_t sub_1C01420C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C01420D0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C01420D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C01420DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StreamIdentifier()
{
  return &type metadata for StreamIdentifier;
}

unint64_t sub_1C01420FC()
{
  unint64_t result;

  result = qword_1EF5BC8F8;
  if (!qword_1EF5BC8F8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030E614, &type metadata for StreamIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EF5BC8F8);
  }
  return result;
}

uint64_t dispatch thunk of DisambiguationEntityResolutionProviding.useCase.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DisambiguationEntityResolutionProviding.learnedSelection(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of DisambiguationEntityResolutionProviding.beginLearning(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of DisambiguationEntityResolutionProviding.finishLearning(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

void sub_1C0142158(uint64_t a1)
{
  OUTLINED_FUNCTION_5_1(a1, &qword_1ED7283E8);
  OUTLINED_FUNCTION_5_35();
  qword_1ED729668 = sub_1C0304480();
  OUTLINED_FUNCTION_9();
}

void sub_1C01421BC(uint64_t a1)
{
  OUTLINED_FUNCTION_5_1(a1, &qword_1ED7283E8);
  OUTLINED_FUNCTION_5_35();
  OUTLINED_FUNCTION_2_47();
  qword_1ED729648 = sub_1C0304480();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C0142204()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_9_0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t *sub_1C0142290(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C0303B74();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_OWORD *)v10 = *(_OWORD *)v11;
    v10[16] = v11[16];
    v12 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v12;
    v13 = v12;
  }
  return a1;
}

uint64_t sub_1C0142334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  v6 = sub_1C0303B74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v11 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v11;
  v12 = v11;
  return a1;
}

uint64_t sub_1C01423AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;

  v6 = sub_1C0303B74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v10 = *(int *)(a3 + 24);
  v11 = *(void **)(a2 + v10);
  v12 = *(void **)(a1 + v10);
  *(_QWORD *)(a1 + v10) = v11;
  v13 = v11;

  return a1;
}

uint64_t sub_1C0142438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1C0303B74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_1C01424AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v6 = sub_1C0303B74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v11 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);

  return a1;
}

uint64_t sub_1C0142528()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0142534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_1C0303B74();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_1C01425AC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C01425B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1C0303B74();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
    OUTLINED_FUNCTION_37_0();
  }
}

uint64_t sub_1C0142624()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C0303B74();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1C01426A4(uint64_t a1)
{
  sub_1C01428B8(a1, qword_1EF5FC698);
}

void sub_1C01426C0(uint64_t a1)
{
  OUTLINED_FUNCTION_3_53(a1, qword_1ED7295A0);
}

void sub_1C01426D8()
{
  uint64_t v0;
  id v1;

  v0 = OUTLINED_FUNCTION_9_0();
  __swift_allocate_value_buffer(v0, qword_1ED729650);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED729650);
  if (qword_1ED728440 != -1)
    swift_once();
  v1 = (id)qword_1ED729668;
  sub_1C0303BA4();
  OUTLINED_FUNCTION_9();
}

void sub_1C0142750(uint64_t a1)
{
  OUTLINED_FUNCTION_3_53(a1, qword_1ED7295E8);
}

void sub_1C0142768()
{
  uint64_t v0;
  uint64_t *v1;

  OUTLINED_FUNCTION_2_47();
  sub_1C01428B8(v0, v1);
}

void sub_1C0142780(uint64_t a1)
{
  OUTLINED_FUNCTION_0_53(a1, qword_1EF5FC6B0);
}

void sub_1C01427A0(uint64_t a1)
{
  OUTLINED_FUNCTION_0_53(a1, qword_1EF5FC6C8);
}

void sub_1C01427C0(uint64_t a1)
{
  sub_1C01428B8(a1, qword_1EF5FC6E0);
}

void sub_1C01427E8(uint64_t a1)
{
  sub_1C01428B8(a1, qword_1EF5FC6F8);
}

void sub_1C0142814(uint64_t a1)
{
  sub_1C01428B8(a1, qword_1ED729610);
}

void sub_1C0142840(uint64_t a1)
{
  OUTLINED_FUNCTION_0_53(a1, qword_1ED729560);
}

void sub_1C0142860(uint64_t a1)
{
  sub_1C01428B8(a1, qword_1ED729440);
}

void sub_1C0142880(uint64_t a1)
{
  OUTLINED_FUNCTION_0_53(a1, qword_1EF5FC710);
}

void sub_1C01428A0(uint64_t a1)
{
  sub_1C01428B8(a1, qword_1EF5FC728);
}

void sub_1C01428B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_9_0();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  sub_1C0303B8C();
  OUTLINED_FUNCTION_37_0();
}

void OUTLINED_FUNCTION_0_53(uint64_t a1, uint64_t *a2)
{
  sub_1C01428B8(a1, a2);
}

void OUTLINED_FUNCTION_3_53(uint64_t a1, uint64_t *a2)
{
  sub_1C01428B8(a1, a2);
}

unint64_t OUTLINED_FUNCTION_5_35()
{
  return 0xD000000000000018;
}

_UNKNOWN **sub_1C0142968()
{
  return &off_1E799BE48;
}

_UNKNOWN **sub_1C0142974()
{
  return &off_1E799BE18;
}

uint64_t storeEnumTagSinglePayload for UCGTrialFactors(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C01429CC + 4 * byte_1C030E6D5[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1C0142A00 + 4 * byte_1C030E6D0[v4]))();
}

uint64_t sub_1C0142A00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1C0142A08(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1C0142A10);
  return result;
}

uint64_t sub_1C0142A1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1C0142A24);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0142A28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1C0142A30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UCGTrialFactors()
{
  return &type metadata for UCGTrialFactors;
}

BOOL sub_1C0142A4C(int a1, unsigned int a2)
{
  return ((a1 ^ a2 | ((a1 ^ a2) >> 8)) & 1) == 0;
}

uint64_t sub_1C0142A60(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000029 && a2 == 0x80000001C032F350 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001C032F380)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1C0142B48(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000021;
  else
    return 0xD000000000000029;
}

uint64_t sub_1C0142B84(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC990);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0142EDC();
  sub_1C0304BA0();
  v10 = 0;
  OUTLINED_FUNCTION_4_42();
  if (!v1)
  {
    v9 = 1;
    OUTLINED_FUNCTION_4_42();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1C0142C8C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  char v5;
  int v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC980);
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0142EDC();
  sub_1C0304B88();
  if (v1)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v4 = OUTLINED_FUNCTION_1_45();
  v5 = OUTLINED_FUNCTION_1_45();
  OUTLINED_FUNCTION_3_54();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  if ((v5 & 1) != 0)
    v7 = 256;
  else
    v7 = 0;
  return v7 & 0xFFFFFFFE | v4 & 1;
}

unint64_t sub_1C0142DB4()
{
  char *v0;

  return sub_1C0142B48(*v0);
}

uint64_t sub_1C0142DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0142A60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0142DE0()
{
  sub_1C0142EDC();
  return sub_1C0304BAC();
}

uint64_t sub_1C0142E08()
{
  sub_1C0142EDC();
  return sub_1C0304BB8();
}

uint64_t sub_1C0142E30@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1C0142C8C(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_1C0142E64(_QWORD *a1)
{
  return sub_1C0142B84(a1);
}

BOOL sub_1C0142E90(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  int v4;

  if (a1[1])
    v2 = 256;
  else
    v2 = 0;
  v3 = v2 | *a1;
  if (a2[1])
    v4 = 256;
  else
    v4 = 0;
  return sub_1C0142A4C(v3, v4 | *a2);
}

unint64_t sub_1C0142EC0()
{
  return sub_1C004B4F8();
}

unint64_t sub_1C0142EDC()
{
  unint64_t result;

  result = qword_1EF5BC988;
  if (!qword_1EF5BC988)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030E85C, &type metadata for UCGTrialFactors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BC988);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for UCGTrialFactors.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0142F64 + 4 * byte_1C030E6DF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0142F98 + 4 * byte_1C030E6DA[v4]))();
}

uint64_t sub_1C0142F98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0142FA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0142FA8);
  return result;
}

uint64_t sub_1C0142FB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0142FBCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0142FC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0142FC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UCGTrialFactors.CodingKeys()
{
  return &type metadata for UCGTrialFactors.CodingKeys;
}

unint64_t sub_1C0142FE8()
{
  unint64_t result;

  result = qword_1EF5BC998;
  if (!qword_1EF5BC998)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030E834, &type metadata for UCGTrialFactors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BC998);
  }
  return result;
}

unint64_t sub_1C0143028()
{
  unint64_t result;

  result = qword_1EF5BC9A0;
  if (!qword_1EF5BC9A0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030E7A4, &type metadata for UCGTrialFactors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BC9A0);
  }
  return result;
}

unint64_t sub_1C0143068()
{
  unint64_t result;

  result = qword_1EF5BC9A8;
  if (!qword_1EF5BC9A8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030E7CC, &type metadata for UCGTrialFactors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BC9A8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_54()
{
  return sub_1C0303E8C();
}

uint64_t OUTLINED_FUNCTION_1_45()
{
  return sub_1C03048B8();
}

uint64_t OUTLINED_FUNCTION_2_48()
{
  return sub_1C0303FD0();
}

uint64_t OUTLINED_FUNCTION_3_54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_42()
{
  return sub_1C030496C();
}

uint64_t sub_1C0143104(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 0xC)
    return 12;
  else
    return a1 - 1;
}

uint64_t sub_1C0143118(unint64_t a1)
{
  if (a1 >= 8)
    return 7;
  else
    return (0x605040302010007uLL >> (8 * a1));
}

uint64_t sub_1C0143140(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B88D0);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_6_0();
  v5 = v4 - v3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B88D8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_6_0();
  v9 = v8 - v7;
  v10 = sub_1C0301DC8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_6_0();
  v14 = v13 - v12;
  v15 = sub_1C0301EC4();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_6_0();
  v19 = v18 - v17;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v14, *MEMORY[0x1E0CB0EF8], v10);
  sub_1C0301DD4();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v14, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v9, v19, v15);
  __swift_storeEnumTagSinglePayload(v9, 0, 1, v15);
  v20 = sub_1C0301F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v5, a2, v20);
  __swift_storeEnumTagSinglePayload(v5, 0, 1, v20);
  sub_1C0301918();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v19, v15);
}

uint64_t type metadata accessor for GregorianEasterHoliday()
{
  return objc_opt_self();
}

uint64_t sub_1C0143494(uint64_t a1, uint64_t a2)
{
  return sub_1C0143140(a1, a2);
}

ValueMetadata *type metadata accessor for SportsDirichletScore()
{
  return &type metadata for SportsDirichletScore;
}

int64_t sub_1C01434B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int64_t result;
  int64_t v7;
  int v8;
  int v9;
  char v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v23;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1C00B1F5C();
  v4 = a2;
  v5 = v23;
  result = sub_1C00824B4(a1);
  v7 = result;
  v9 = v8;
  v11 = v10 & 1;
  while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
      goto LABEL_20;
    if (*(_DWORD *)(a1 + 36) != v9)
      goto LABEL_21;
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v7);
    v13 = v12[1];
    if (!*(_QWORD *)(v4 + 16))
    {
      swift_bridgeObjectRetain();
LABEL_11:
      v17 = &qword_1EF5BCA60;
      if (qword_1EF5B7F40 != -1)
      {
        swift_once();
        v17 = &qword_1EF5BCA60;
      }
      goto LABEL_13;
    }
    v14 = *v12;
    swift_bridgeObjectRetain();
    v15 = sub_1C00B3C3C(v14, v13);
    v4 = a2;
    if ((v16 & 1) == 0)
      goto LABEL_11;
    v17 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 8 * v15);
LABEL_13:
    v18 = *v17;
    swift_bridgeObjectRelease();
    v19 = *(_QWORD *)(v23 + 16);
    if (v19 >= *(_QWORD *)(v23 + 24) >> 1)
    {
      sub_1C00B1F5C();
      v4 = a2;
    }
    *(_QWORD *)(v23 + 16) = v19 + 1;
    *(_QWORD *)(v23 + 8 * v19 + 32) = v18;
    result = sub_1C0082610(v7, v9, v11 & 1, a1);
    v7 = result;
    v9 = v20;
    v11 = v21 & 1;
    if (!--v2)
    {
      sub_1C00A6E5C(result, v20, v21 & 1);
      swift_bridgeObjectRelease();
      return v5;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1C01436D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1764();
    v2 = v11;
    v4 = (uint64_t *)(a1 + 64);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
        sub_1C00B1764();
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C01437A4(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v17 = MEMORY[0x1E0DEE9D8];
  sub_1C00B1D54();
  v4 = v17;
  sub_1C00C8890(a1, &v16);
  swift_bridgeObjectRetain();
  v5 = sub_1C01F2168();
  if (v6)
  {
    do
    {
      v7 = a2(v5);
      v9 = v8;
      v11 = v10;
      swift_bridgeObjectRelease();
      v17 = v4;
      v12 = *(_QWORD *)(v4 + 16);
      if (v12 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        sub_1C00B1D54();
        v4 = v17;
      }
      *(_QWORD *)(v4 + 16) = v12 + 1;
      v13 = (_QWORD *)(v4 + 24 * v12);
      v13[4] = v7;
      v13[5] = v9;
      v13[6] = v11;
      v5 = sub_1C01F2168();
    }
    while (v14);
  }
  sub_1C00B7078();
  return v4;
}

uint64_t sub_1C01438D8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  char *v3;
  double v4;
  uint64_t result;
  uint64_t v6;

  v0 = type metadata accessor for SiriRemembersV1API.Aggregation();
  v1 = (int *)MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v3[v1[7]] = 0;
  *(_QWORD *)&v3[v1[8]] = 0;
  *(_QWORD *)&v3[v1[9]] = 0;
  *(_QWORD *)&v3[v1[10]] = 0;
  *(_QWORD *)&v3[v1[11]] = 0;
  *(_QWORD *)&v3[v1[12]] = 0;
  *(_QWORD *)&v3[v1[13]] = 0;
  *(_QWORD *)&v3[v1[14]] = 0;
  *v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  *((_QWORD *)v3 + 2) = 0xE000000000000000;
  sub_1C0301CA8();
  v4 = sub_1C01439B0(604800.0);
  result = sub_1C0144550((uint64_t)v3);
  qword_1EF5BCA60 = *(_QWORD *)&v4;
  return result;
}

double sub_1C01439B0(double a1)
{
  uint64_t inited;
  int *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B9068);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C03080B0;
  v3 = (int *)type metadata accessor for SiriRemembersV1API.Aggregation();
  *(double *)(inited + 32) = OUTLINED_FUNCTION_1_46(v3[7]) - -60.0 / a1 * (-60.0 / a1) * 0.5;
  v4 = OUTLINED_FUNCTION_1_46(v3[8]);
  *(double *)(inited + 40) = OUTLINED_FUNCTION_0_55(v4, -360.0);
  v5 = OUTLINED_FUNCTION_1_46(v3[9]);
  *(double *)(inited + 48) = OUTLINED_FUNCTION_0_55(v5, -2100.0);
  v6 = OUTLINED_FUNCTION_1_46(v3[10]);
  *(double *)(inited + 56) = OUTLINED_FUNCTION_0_55(v6, -12600.0);
  v7 = OUTLINED_FUNCTION_1_46(v3[11]);
  *(double *)(inited + 64) = OUTLINED_FUNCTION_0_55(v7, -54000.0);
  v8 = OUTLINED_FUNCTION_1_46(v3[12]);
  *(double *)(inited + 72) = OUTLINED_FUNCTION_0_55(v8, -345600.0);
  v9 = OUTLINED_FUNCTION_1_46(v3[13]);
  *(double *)(inited + 80) = OUTLINED_FUNCTION_0_55(v9, -1512000.0);
  v10 = sub_1C0144218(inited);
  swift_setDeallocating();
  return v10;
}

void sub_1C0143AE8(uint64_t a1, int a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  _BYTE v34[4];
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  const char *v46;
  _BYTE *v47;
  uint64_t v48;

  v6 = type metadata accessor for SiriRemembersV1API.Aggregation();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v47 = &v34[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x1E0C80A78](v8);
  v39 = &v34[-v11];
  MEMORY[0x1E0C80A78](v10);
  v13 = &v34[-v12];
  v38 = *(_QWORD *)(a1 + 16);
  if (v38)
  {
    v35 = a2;
    v36 = a1;
    v37 = a1 + 32;
    swift_bridgeObjectRetain();
    v14 = 0;
    v15 = MEMORY[0x1E0DEE9E0];
    v16 = MEMORY[0x1E0DEE9D8];
    v46 = "verb";
    do
    {
      v45 = v14;
      v17 = (_QWORD *)(v37 + (v14 << 6));
      v18 = v17[2];
      v41 = v17[3];
      v19 = v17[4];
      v21 = v17[6];
      v20 = v17[7];
      v48 = v16;
      v22 = *(_QWORD *)(v20 + 16);
      v43 = v18;
      v23 = v16;
      swift_bridgeObjectRetain();
      v44 = v19;
      swift_bridgeObjectRetain_n();
      v42 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      if (v22)
      {
        v40 = v15;
        if (*(_QWORD *)(v20 + 16))
        {
          sub_1C014450C(v20 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), (uint64_t)v13);
          __asm { BR              X9 }
        }
        __break(1u);
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(v23 + 16))
        goto LABEL_16;
      v24 = v45 + 1;
      v25 = v39;
      sub_1C014450C(v23 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), (uint64_t)v39);
      swift_release();
      v26 = sub_1C01439B0(a3);
      sub_1C0144550((uint64_t)v25);
      swift_isUniquelyReferenced_nonNull_native();
      v48 = v15;
      sub_1C00B5844(v41, v44, v26);
      v15 = v48;
      v14 = v24;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_2();
      swift_bridgeObjectRelease();
      v16 = MEMORY[0x1E0DEE9D8];
    }
    while (v24 != v38);
    v27 = v36;
    OUTLINED_FUNCTION_33();
    if ((v35 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      v28 = sub_1C01436D0(v27);
      swift_bridgeObjectRelease();
      v29 = sub_1C01AACEC(v28);
      sub_1C0143FF0(v15, v29);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_33();
    }
  }
  else
  {
    if (qword_1EF5B7F20 != -1)
LABEL_17:
      swift_once();
    v30 = sub_1C0303B98();
    __swift_project_value_buffer(v30, (uint64_t)qword_1EF5FC6F8);
    v31 = sub_1C0303B80();
    v32 = sub_1C03042E8();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_1C0039000, v31, v32, "providerFeatures(). resultEntities.isEmpty returning nil.", v33, 2u);
      MEMORY[0x1C3B98378](v33, -1, -1);
    }

  }
  OUTLINED_FUNCTION_111();
}

void sub_1C0143FF0(uint64_t a1, uint64_t a2)
{
  int64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  double v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  long double v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  swift_bridgeObjectRetain();
  v4 = sub_1C01434B8(a2, a1);
  v5 = sub_1C014429C(v4);
  swift_bridgeObjectRelease();
  v6 = sub_1C0144218(v5);
  v7 = *(_QWORD *)(v5 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v9 = v6;
    v24 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_6_34();
    v10 = 0;
    v11 = v24;
    v12 = *(_QWORD *)(v24 + 16);
    do
    {
      v13 = *(double *)(v5 + 8 * v10 + 32);
      v14 = *(_QWORD *)(v24 + 24);
      if (v12 >= v14 >> 1)
      {
        OUTLINED_FUNCTION_3_55(v14);
        OUTLINED_FUNCTION_7_36();
      }
      ++v10;
      *(_QWORD *)(v24 + 16) = v12 + 1;
      *(double *)(v24 + 8 * v12++ + 32) = v13 - v9;
    }
    while (v7 != v10);
    OUTLINED_FUNCTION_2();
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
  }
  v15 = *(_QWORD *)(v11 + 16);
  if (v15)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_6_34();
    v16 = 0;
    v17 = v8;
    v18 = *(_QWORD *)(v8 + 16);
    do
    {
      v19 = exp(*(long double *)(v11 + 8 * v16 + 32));
      v20 = *(_QWORD *)(v17 + 24);
      if (v18 >= v20 >> 1)
      {
        OUTLINED_FUNCTION_3_55(v20);
        OUTLINED_FUNCTION_7_36();
      }
      ++v16;
      *(_QWORD *)(v17 + 16) = v18 + 1;
      *(long double *)(v17 + 8 * v18++ + 32) = v19;
    }
    while (v15 != v16);
    v21 = OUTLINED_FUNCTION_2();
  }
  else
  {
    v21 = swift_bridgeObjectRelease();
  }
  MEMORY[0x1E0C80A78](v21);
  v22 = swift_bridgeObjectRetain();
  v23 = sub_1C01437A4(v22, (uint64_t (*)(uint64_t))sub_1C01445D0);
  OUTLINED_FUNCTION_33();
  sub_1C02CA95C(v23);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_111();
}

double sub_1C0144218(uint64_t a1)
{
  uint64_t v1;
  double *v2;
  double v3;
  double v4;
  double v5;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return -INFINITY;
  v2 = (double *)(a1 + 32);
  v3 = -INFINITY;
  do
  {
    if (*v2 >= v3)
      v4 = *v2;
    else
      v4 = v3;
    if (*v2 < v3)
      v3 = *v2;
    if (v3 != -INFINITY)
    {
      v5 = OUTLINED_FUNCTION_4_43(v3);
      v4 = v4 + log1p(v5);
    }
    ++v2;
    v3 = v4;
    --v1;
  }
  while (v1);
  return v4;
}

uint64_t sub_1C014429C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  double *v5;
  double v6;
  double v7;
  double v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  long double v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  unint64_t v20;
  double v21;
  long double v22;
  uint64_t v24;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_6_34();
    v4 = v24;
    v5 = (double *)(a1 + 32);
    while (1)
    {
      v6 = *v5;
      if (*v5 > 0.0)
        break;
      v7 = 0.0;
      if (v6 != -INFINITY)
        goto LABEL_6;
LABEL_7:
      v9 = *(_QWORD *)(v24 + 16);
      v10 = v9 + 1;
      if (v9 >= *(_QWORD *)(v24 + 24) >> 1)
        OUTLINED_FUNCTION_7_36();
      *(_QWORD *)(v24 + 16) = v10;
      *(double *)(v24 + 8 * v9 + 32) = v7;
      ++v5;
      if (!--v1)
        goto LABEL_13;
    }
    v7 = *v5;
    v6 = 0.0;
LABEL_6:
    v8 = OUTLINED_FUNCTION_4_43(v6);
    v7 = v7 + log1p(v8);
    goto LABEL_7;
  }
  v10 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  if (v10)
  {
    v4 = MEMORY[0x1E0DEE9D8];
LABEL_13:
    v11 = 0;
    v12 = -INFINITY;
    do
    {
      v13 = v4 + 8 * v11;
      v14 = *(double *)(v13 + 32);
      if (v14 >= v12)
        v15 = v12;
      else
        v15 = *(double *)(v13 + 32);
      if (v14 >= v12)
        v12 = *(double *)(v13 + 32);
      if (v15 != -INFINITY)
      {
        v16 = OUTLINED_FUNCTION_4_43(v15);
        v12 = v12 + log1p(v16);
      }
      ++v11;
    }
    while (v10 != v11);
    OUTLINED_FUNCTION_6_34();
    v17 = v2;
    v18 = 0;
    v19 = exp(v12) + 1.0;
    v20 = *(_QWORD *)(v17 + 16);
    do
    {
      v21 = OUTLINED_FUNCTION_4_43(*(double *)(v4 + 8 * v18 + 32));
      v22 = log(v21 - sqrt(v21 * (1.0 - v21) / v19));
      if (v20 >= *(_QWORD *)(v17 + 24) >> 1)
        OUTLINED_FUNCTION_7_36();
      ++v18;
      *(_QWORD *)(v17 + 16) = v20 + 1;
      *(long double *)(v17 + 8 * v20++ + 32) = v22;
    }
    while (v10 != v18);
  }
  else
  {
    v17 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v17;
}

unint64_t sub_1C01444AC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(*(_QWORD *)a4 + 16) > result)
  {
    swift_bridgeObjectRetain();
    return a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C014450C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SiriRemembersV1API.Aggregation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0144550(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SiriRemembersV1API.Aggregation();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C014458C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SiriRemembersV1API.Aggregation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C01445D0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C01444AC(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

double OUTLINED_FUNCTION_0_55(double a1, double a2)
{
  double v2;
  double v3;

  return a1 - a2 / v2 * (a2 / v2) * v3;
}

double OUTLINED_FUNCTION_1_46@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return log((double)*(uint64_t *)(v1 + a1));
}

BOOL OUTLINED_FUNCTION_3_55@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

double OUTLINED_FUNCTION_4_43(double a1)
{
  double v1;

  return exp(a1 - v1);
}

void OUTLINED_FUNCTION_6_34()
{
  sub_1C00B1F5C();
}

void OUTLINED_FUNCTION_7_36()
{
  sub_1C00B1F5C();
}

double DateTime.Date.Holiday.__allocating_init(with:name:calendarSystem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v10;
  char v11;
  double result;

  OUTLINED_FUNCTION_15_22();
  v10 = swift_allocObject();
  v11 = *a5;
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = a3;
  *(_QWORD *)(v10 + 40) = a4;
  *(_BYTE *)(v10 + 48) = v11;
  *(_QWORD *)&result = 117703170;
  *(_DWORD *)(v10 + 49) = 117703170;
  *(_BYTE *)(v10 + 53) = 2;
  return result;
}

void DateTime.Date.Holiday.id.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_9();
}

void DateTime.Date.Holiday.name.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_9();
}

void DateTime.Date.Holiday.calendarSystem.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_8_20(a1);
}

void DateTime.Date.Holiday.frequency.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_8_20(a1);
}

void DateTime.Date.Holiday.observanceType.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_8_20(a1);
}

void DateTime.Date.Holiday.dateType.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_8_20(a1);
}

void DateTime.Date.Holiday.associatedReligion.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_8_20(a1);
}

void DateTime.Date.Holiday.emotion.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_8_20(a1);
}

uint64_t DateTime.Date.Holiday.init(with:name:calendarSystem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v5;
  char v6;

  v6 = *a5;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = a4;
  *(_BYTE *)(v5 + 48) = v6;
  *(_DWORD *)(v5 + 49) = 117703170;
  *(_BYTE *)(v5 + 53) = 2;
  return v5;
}

BOOL static DateTime.Date.Holiday.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  _BOOL8 result;
  BOOL v7;
  char v8;
  int v9;
  int v10;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;

  v4 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
  if (v4 || (v5 = sub_1C0304A08(), result = 0, (v5 & 1) != 0))
  {
    v7 = *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40);
    if (v7 || (v8 = sub_1C0304A08(), result = 0, (v8 & 1) != 0))
    {
      v9 = *(unsigned __int8 *)(a1 + 48);
      v10 = *(unsigned __int8 *)(a2 + 48);
      if (v9 == 12)
      {
        if (v10 != 12)
          return 0;
      }
      else if (v10 == 12 || v9 != v10)
      {
        return 0;
      }
      v12 = *(unsigned __int8 *)(a1 + 49);
      v13 = *(unsigned __int8 *)(a2 + 49);
      if (v12 == 2)
      {
        if (v13 != 2)
          return 0;
      }
      else
      {
        result = 0;
        if (v13 == 2 || ((v13 ^ v12) & 1) != 0)
          return result;
      }
      v14 = *(unsigned __int8 *)(a1 + 50);
      v15 = *(unsigned __int8 *)(a2 + 50);
      if (v14 == 2)
      {
        if (v15 != 2)
          return 0;
      }
      else
      {
        result = 0;
        if (v15 == 2 || ((v15 ^ v14) & 1) != 0)
          return result;
      }
      v16 = *(unsigned __int8 *)(a1 + 52);
      v17 = *(unsigned __int8 *)(a2 + 52);
      if (v16 == 7)
      {
        if (v17 != 7)
          return 0;
      }
      else if (v17 == 7 || v16 != v17)
      {
        return 0;
      }
      v18 = *(unsigned __int8 *)(a1 + 53);
      v19 = *(unsigned __int8 *)(a2 + 53);
      result = v19 == 2 && v18 == 2;
      if (v18 != 2 && v19 != 2)
        return ((v19 ^ v18) & 1) == 0;
    }
  }
  return result;
}

uint64_t sub_1C014488C()
{
  _BYTE *v0;

  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_16_20();
  OUTLINED_FUNCTION_18();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_16_20();
  OUTLINED_FUNCTION_18();
  if (v0[48] == 12)
  {
    OUTLINED_FUNCTION_28_5();
  }
  else
  {
    OUTLINED_FUNCTION_27_6();
    OUTLINED_FUNCTION_37_3();
  }
  if (v0[49] == 2)
  {
    OUTLINED_FUNCTION_28_5();
  }
  else
  {
    OUTLINED_FUNCTION_27_6();
    OUTLINED_FUNCTION_37_3();
  }
  if (v0[50] == 2)
  {
    OUTLINED_FUNCTION_28_5();
  }
  else
  {
    OUTLINED_FUNCTION_27_6();
    OUTLINED_FUNCTION_37_3();
  }
  if (v0[51] == 4)
  {
    OUTLINED_FUNCTION_28_5();
  }
  else
  {
    OUTLINED_FUNCTION_27_6();
    OUTLINED_FUNCTION_37_3();
  }
  if (v0[52] == 7)
  {
    OUTLINED_FUNCTION_28_5();
  }
  else
  {
    OUTLINED_FUNCTION_27_6();
    OUTLINED_FUNCTION_37_3();
  }
  if (v0[53] == 2)
    return OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_27_6();
  return sub_1C0304B10();
}

uint64_t sub_1C0144994()
{
  _BYTE *v0;
  uint64_t v1;
  char v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727E60);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C03084B0;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_4_5();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = 4023401;
  *(_QWORD *)(v1 + 40) = 0xE300000000000000;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_4_5();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = 0x3D656D616ELL;
  *(_QWORD *)(v1 + 56) = 0xE500000000000000;
  if (v0[48] != 12)
  {
    OUTLINED_FUNCTION_12_24();
    sub_1C0303FD0();
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_3_56();
    if (v2)
    {
      OUTLINED_FUNCTION_2_13();
      v1 = v6;
    }
    OUTLINED_FUNCTION_9_10();
  }
  if (v0[49] != 2)
  {
    OUTLINED_FUNCTION_10_1();
    sub_1C0303FD0();
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_3_56();
    if (v2)
    {
      OUTLINED_FUNCTION_2_13();
      v1 = v7;
    }
    OUTLINED_FUNCTION_9_10();
  }
  if (v0[50] != 2)
  {
    OUTLINED_FUNCTION_12_24();
    sub_1C0303FD0();
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_3_56();
    if (v2)
    {
      OUTLINED_FUNCTION_2_13();
      v1 = v8;
    }
    OUTLINED_FUNCTION_9_10();
  }
  if (v0[51] != 4)
  {
    OUTLINED_FUNCTION_10_1();
    sub_1C0303FD0();
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_3_56();
    if (v2)
    {
      OUTLINED_FUNCTION_2_13();
      v1 = v9;
    }
    OUTLINED_FUNCTION_9_10();
  }
  if (v0[52] != 7)
  {
    OUTLINED_FUNCTION_10_1();
    sub_1C03046CC();
    sub_1C0303FD0();
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_3_56();
    if (v2)
    {
      OUTLINED_FUNCTION_2_13();
      v1 = v10;
    }
    OUTLINED_FUNCTION_9_10();
  }
  if (v0[53] != 2)
  {
    OUTLINED_FUNCTION_10_1();
    sub_1C0303FD0();
    OUTLINED_FUNCTION_44_5();
    v3 = *(_QWORD *)(v1 + 16);
    if (v3 >= *(_QWORD *)(v1 + 24) >> 1)
    {
      OUTLINED_FUNCTION_2_13();
      v1 = v11;
    }
    *(_QWORD *)(v1 + 16) = v3 + 1;
    v4 = v1 + 16 * v3;
    *(_QWORD *)(v4 + 32) = 0x3D656D616ELL;
    *(_QWORD *)(v4 + 40) = 0xE500000000000000;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
  sub_1C004B224();
  sub_1C0303E50();
  swift_bridgeObjectRelease();
  sub_1C0303FD0();
  OUTLINED_FUNCTION_18();
  sub_1C0303FD0();
  return 0x5B796164696C6F48;
}

uint64_t sub_1C0144D84(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1701667182 && a2 == 0xE400000000000000;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7261646E656C6163 && a2 == 0xEE006D6574737953;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x636E657571657266 && a2 == 0xE900000000000079;
        if (v8 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6E6176726573626FLL && a2 == 0xEE00657079546563;
          if (v9 || (sub_1C0304A08() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x6570795465746164 && a2 == 0xE800000000000000;
            if (v10 || (sub_1C0304A08() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0xD000000000000012 && a2 == 0x80000001C032F470 || (sub_1C0304A08() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0x6E6F69746F6D65 && a2 == 0xE700000000000000)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              v12 = sub_1C0304A08();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 7;
              else
                return 8;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C01450D8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0145100 + 4 * byte_1C030E930[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1C0145100()
{
  return 1701667182;
}

uint64_t sub_1C0145110()
{
  return 0x7261646E656C6163;
}

uint64_t sub_1C0145134()
{
  return 0x636E657571657266;
}

uint64_t sub_1C0145150()
{
  return 0x6E6176726573626FLL;
}

uint64_t sub_1C0145174()
{
  return 0x6570795465746164;
}

unint64_t sub_1C014518C()
{
  return 0xD000000000000012;
}

uint64_t sub_1C01451A8()
{
  return 0x6E6F69746F6D65;
}

uint64_t sub_1C01451C0()
{
  unsigned __int8 *v0;

  return sub_1C01450D8(*v0);
}

uint64_t sub_1C01451C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0144D84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C01451EC()
{
  sub_1C01458D0();
  return sub_1C0304BAC();
}

uint64_t sub_1C0145214()
{
  sub_1C01458D0();
  return sub_1C0304BB8();
}

uint64_t DateTime.Date.Holiday.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DateTime.Date.Holiday.__deallocating_deinit()
{
  DateTime.Date.Holiday.deinit();
  OUTLINED_FUNCTION_15_22();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0145278(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCA68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01458D0();
  sub_1C0304BA0();
  v10[15] = 0;
  OUTLINED_FUNCTION_28_16();
  if (!v2)
  {
    v10[14] = 1;
    OUTLINED_FUNCTION_28_16();
    v10[13] = v3[48];
    v10[12] = 2;
    sub_1C014590C();
    OUTLINED_FUNCTION_2_49();
    v10[11] = v3[49];
    v10[10] = 3;
    sub_1C0145948();
    OUTLINED_FUNCTION_2_49();
    v10[9] = v3[50];
    v10[8] = 4;
    sub_1C0145984();
    OUTLINED_FUNCTION_2_49();
    v10[7] = v3[51];
    v10[6] = 5;
    sub_1C01459C0();
    OUTLINED_FUNCTION_2_49();
    v10[5] = v3[52];
    v10[4] = 6;
    sub_1C01459FC();
    OUTLINED_FUNCTION_2_49();
    v10[3] = v3[53];
    v10[2] = 7;
    sub_1C0145A38();
    OUTLINED_FUNCTION_2_49();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C01454AC()
{
  sub_1C0304B04();
  sub_1C014488C();
  return sub_1C0304B40();
}

uint64_t DateTime.Date.Holiday.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_15_22();
  v2 = swift_allocObject();
  DateTime.Date.Holiday.init(from:)(a1);
  return v2;
}

uint64_t DateTime.Date.Holiday.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCAA8);
  MEMORY[0x1E0C80A78](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01458D0();
  sub_1C0304B88();
  if (v2)
  {
    type metadata accessor for DateTime.Date.Holiday();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v1 + 16) = OUTLINED_FUNCTION_13_24();
    *(_QWORD *)(v1 + 24) = v5;
    *(_QWORD *)(v1 + 32) = OUTLINED_FUNCTION_13_24();
    *(_QWORD *)(v1 + 40) = v6;
    sub_1C0145A94();
    sub_1C03048A0();
    *(_BYTE *)(v1 + 48) = v13;
    sub_1C0145AD0();
    OUTLINED_FUNCTION_1_47();
    *(_BYTE *)(v1 + 49) = v12;
    sub_1C0145B0C();
    OUTLINED_FUNCTION_1_47();
    *(_BYTE *)(v1 + 50) = v11;
    sub_1C0145B48();
    OUTLINED_FUNCTION_1_47();
    *(_BYTE *)(v1 + 51) = v10;
    sub_1C0145B84();
    OUTLINED_FUNCTION_1_47();
    *(_BYTE *)(v1 + 52) = v9;
    sub_1C0145BC0();
    OUTLINED_FUNCTION_1_47();
    OUTLINED_FUNCTION_3_27();
    *(_BYTE *)(v1 + 53) = v8;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return v1;
}

BOOL sub_1C01457D0(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.Date.Holiday.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C01457F0()
{
  return sub_1C01454AC();
}

uint64_t sub_1C0145810()
{
  return sub_1C014488C();
}

uint64_t sub_1C0145830()
{
  sub_1C0304B04();
  sub_1C014488C();
  return sub_1C0304B40();
}

uint64_t sub_1C014586C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = DateTime.Date.Holiday.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1C0145894(_QWORD *a1)
{
  return sub_1C0145278(a1);
}

void sub_1C01458B4()
{
  sub_1C0144994();
  OUTLINED_FUNCTION_9();
}

unint64_t sub_1C01458D0()
{
  unint64_t result;

  result = qword_1EF5BCA70;
  if (!qword_1EF5BCA70)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030EB64, &_s14descr1E79965E9V7HolidayC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5BCA70);
  }
  return result;
}

unint64_t sub_1C014590C()
{
  unint64_t result;

  result = qword_1EF5BCA78;
  if (!qword_1EF5BCA78)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.CalendarSystem, &type metadata for DateTime.Date.CalendarSystem);
    atomic_store(result, (unint64_t *)&qword_1EF5BCA78);
  }
  return result;
}

unint64_t sub_1C0145948()
{
  unint64_t result;

  result = qword_1EF5BCA80;
  if (!qword_1EF5BCA80)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.Holiday.Frequency, &type metadata for DateTime.Date.Holiday.Frequency);
    atomic_store(result, (unint64_t *)&qword_1EF5BCA80);
  }
  return result;
}

unint64_t sub_1C0145984()
{
  unint64_t result;

  result = qword_1EF5BCA88;
  if (!qword_1EF5BCA88)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.Holiday.ObservanceType, &type metadata for DateTime.Date.Holiday.ObservanceType);
    atomic_store(result, (unint64_t *)&qword_1EF5BCA88);
  }
  return result;
}

unint64_t sub_1C01459C0()
{
  unint64_t result;

  result = qword_1EF5BCA90;
  if (!qword_1EF5BCA90)
  {
    result = MEMORY[0x1C3B9827C]("\r,h'|", &type metadata for DateTime.Date.Holiday.HolidayDateType);
    atomic_store(result, (unint64_t *)&qword_1EF5BCA90);
  }
  return result;
}

unint64_t sub_1C01459FC()
{
  unint64_t result;

  result = qword_1EF5BCA98;
  if (!qword_1EF5BCA98)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.Holiday.Religion, &type metadata for DateTime.Date.Holiday.Religion);
    atomic_store(result, (unint64_t *)&qword_1EF5BCA98);
  }
  return result;
}

unint64_t sub_1C0145A38()
{
  unint64_t result;

  result = qword_1EF5BCAA0;
  if (!qword_1EF5BCAA0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.Holiday.Emotion, &type metadata for DateTime.Date.Holiday.Emotion);
    atomic_store(result, (unint64_t *)&qword_1EF5BCAA0);
  }
  return result;
}

uint64_t type metadata accessor for DateTime.Date.Holiday()
{
  return objc_opt_self();
}

unint64_t sub_1C0145A94()
{
  unint64_t result;

  result = qword_1EF5BCAB0;
  if (!qword_1EF5BCAB0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.CalendarSystem, &type metadata for DateTime.Date.CalendarSystem);
    atomic_store(result, (unint64_t *)&qword_1EF5BCAB0);
  }
  return result;
}

unint64_t sub_1C0145AD0()
{
  unint64_t result;

  result = qword_1EF5BCAB8;
  if (!qword_1EF5BCAB8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.Holiday.Frequency, &type metadata for DateTime.Date.Holiday.Frequency);
    atomic_store(result, (unint64_t *)&qword_1EF5BCAB8);
  }
  return result;
}

unint64_t sub_1C0145B0C()
{
  unint64_t result;

  result = qword_1EF5BCAC0;
  if (!qword_1EF5BCAC0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.Holiday.ObservanceType, &type metadata for DateTime.Date.Holiday.ObservanceType);
    atomic_store(result, (unint64_t *)&qword_1EF5BCAC0);
  }
  return result;
}

unint64_t sub_1C0145B48()
{
  unint64_t result;

  result = qword_1EF5BCAC8;
  if (!qword_1EF5BCAC8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.Holiday.HolidayDateType, &type metadata for DateTime.Date.Holiday.HolidayDateType);
    atomic_store(result, (unint64_t *)&qword_1EF5BCAC8);
  }
  return result;
}

unint64_t sub_1C0145B84()
{
  unint64_t result;

  result = qword_1EF5BCAD0;
  if (!qword_1EF5BCAD0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.Holiday.Religion, &type metadata for DateTime.Date.Holiday.Religion);
    atomic_store(result, (unint64_t *)&qword_1EF5BCAD0);
  }
  return result;
}

unint64_t sub_1C0145BC0()
{
  unint64_t result;

  result = qword_1EF5BCAD8;
  if (!qword_1EF5BCAD8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.Holiday.Emotion, &type metadata for DateTime.Date.Holiday.Emotion);
    atomic_store(result, (unint64_t *)&qword_1EF5BCAD8);
  }
  return result;
}

unint64_t sub_1C0145C00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF5BCAE0;
  if (!qword_1EF5BCAE0)
  {
    v1 = type metadata accessor for DateTime.Date.Holiday();
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.Holiday, v1);
    atomic_store(result, (unint64_t *)&qword_1EF5BCAE0);
  }
  return result;
}

uint64_t method lookup function for DateTime.Date.Holiday()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DateTime.Date.Holiday.__allocating_init(with:name:calendarSystem:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of DateTime.Date.Holiday.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DateTime.Date.Holiday.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DateTime.Date.Holiday.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DateTime.Date.Holiday.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DateTime.Date.Holiday.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t _s14descr1E79965E9V7HolidayC10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1C0145CF4 + 4 * byte_1C030E93D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1C0145D28 + 4 * byte_1C030E938[v4]))();
}

uint64_t sub_1C0145D28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0145D30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0145D38);
  return result;
}

uint64_t sub_1C0145D44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0145D4CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1C0145D50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0145D58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr1E79965E9V7HolidayC10CodingKeysOMa()
{
  return &_s14descr1E79965E9V7HolidayC10CodingKeysON;
}

unint64_t sub_1C0145D78()
{
  unint64_t result;

  result = qword_1EF5BCBF0;
  if (!qword_1EF5BCBF0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030EB3C, &_s14descr1E79965E9V7HolidayC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5BCBF0);
  }
  return result;
}

unint64_t sub_1C0145DB8()
{
  unint64_t result;

  result = qword_1EF5BCBF8;
  if (!qword_1EF5BCBF8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030EAAC, &_s14descr1E79965E9V7HolidayC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5BCBF8);
  }
  return result;
}

unint64_t sub_1C0145DF8()
{
  unint64_t result;

  result = qword_1EF5BCC00;
  if (!qword_1EF5BCC00)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030EAD4, &_s14descr1E79965E9V7HolidayC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5BCC00);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_47()
{
  return sub_1C03048A0();
}

uint64_t OUTLINED_FUNCTION_2_49()
{
  return sub_1C0304954();
}

uint64_t OUTLINED_FUNCTION_12_24()
{
  return sub_1C03046CC();
}

uint64_t OUTLINED_FUNCTION_13_24()
{
  return sub_1C03048AC();
}

uint64_t OUTLINED_FUNCTION_15_22()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_16_20()
{
  return sub_1C0303E20();
}

void sub_1C0145EB0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t (*v194)(uint64_t);
  uint64_t v195;
  _BYTE *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int *v202;
  uint64_t v203;
  int *v204;
  char v205;
  char v206;
  _BYTE *v207;
  uint64_t v208;
  uint64_t (*v209)(uint64_t);
  uint64_t v210;
  uint64_t v211;
  _QWORD *v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  int v217;
  int v218;
  int v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  int *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  _BYTE *v235;
  _QWORD *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;

  v5 = (_BYTE *)(a1 + 280);
  v238 = type metadata accessor for ContactResolver.HandleSignalSet(0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_21_0();
  v226 = type metadata accessor for PrivatizedHandleSignalSet(0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_27();
  v235 = v8;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v9);
  v233 = (uint64_t)&v216 - v10;
  v232 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DA8);
  v216 = *(_QWORD *)(v232 - 8);
  MEMORY[0x1E0C80A78](v232);
  OUTLINED_FUNCTION_53();
  v237 = v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB8);
  v230 = *(_QWORD *)(v12 - 8);
  v231 = v12;
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_53();
  v236 = (_QWORD *)v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BAAE8);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_27();
  v229 = v15;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_181();
  v225 = v17;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_181();
  v222 = v19;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v216 - v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_27();
  v228 = v24;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_181();
  v227 = v26;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_181();
  v221 = v28;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v216 - v30;
  v32 = type metadata accessor for PrivatizedSignalSet(0);
  v33 = a2 + *(int *)(v32 + 100);
  v34 = sub_1C03036C4();
  v220 = v33;
  __swift_storeEnumTagSinglePayload(v33, 1, 1, v34);
  v223 = a2 + *(int *)(v32 + 104);
  v224 = (int *)v32;
  v234 = v34;
  __swift_storeEnumTagSinglePayload(v223, 1, 1, v34);
  v35 = *(_OWORD *)(a1 + 304);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 288);
  v36 = *(_QWORD *)(a1 + 320);
  *(_BYTE *)a2 = *(_BYTE *)(a1 + 280);
  *(_OWORD *)(a2 + 24) = v35;
  *(_QWORD *)(a2 + 40) = v36;
  *(_BYTE *)(a2 + 48) = v5[48];
  *(_BYTE *)(a2 + 49) = v5[52];
  *(_BYTE *)(a2 + 50) = v5[53];
  *(_BYTE *)(a2 + 51) = v5[54];
  *(_BYTE *)(a2 + 52) = v5[56];
  *(_BYTE *)(a2 + 53) = v5[57];
  *(_BYTE *)(a2 + 54) = v5[55];
  *(_BYTE *)(a2 + 55) = v5[58];
  *(_BYTE *)(a2 + 56) = v5[59];
  *(_BYTE *)(a2 + 57) = v5[60];
  sub_1C0217D00(*(double *)(a1 + 344));
  *(_QWORD *)(a2 + 64) = v37;
  sub_1C0217D00(*(double *)(a1 + 352));
  *(_QWORD *)(a2 + 72) = v38;
  *(_BYTE *)(a2 + 80) = v5[80];
  *(_BYTE *)(a2 + 81) = v5[81];
  *(_BYTE *)(a2 + 82) = v5[82];
  *(_BYTE *)(a2 + 83) = v5[83];
  sub_1C0217DD4(*(_QWORD *)(a1 + 368));
  *(_QWORD *)(a2 + 88) = v39;
  sub_1C0217DD4(*(_QWORD *)(a1 + 376));
  *(_QWORD *)(a2 + 96) = v40;
  sub_1C0217DD4(*(_QWORD *)(a1 + 384));
  *(_QWORD *)(a2 + 104) = v41;
  v42 = (int *)type metadata accessor for ContactResolver.SignalSet(0);
  OUTLINED_FUNCTION_10_37(a1 + v42[30], (uint64_t)v22);
  v43 = sub_1C0303550();
  OUTLINED_FUNCTION_33_1((uint64_t)v22, 1, v43);
  if (v44)
  {
    sub_1C0044B78((uint64_t)v22, &qword_1EF5BAAE8);
    v45 = 1;
  }
  else
  {
    sub_1C03034FC();
    OUTLINED_FUNCTION_45_9();
    v45 = 0;
  }
  OUTLINED_FUNCTION_26_18((uint64_t)v31, v45);
  sub_1C005A744((uint64_t)v31, a2 + v224[24], &qword_1EF5B8810);
  v46 = v222;
  sub_1C00607B8(a1 + v42[31], v222, &qword_1EF5BAAE8);
  OUTLINED_FUNCTION_33_1(v46, 1, v43);
  v47 = v225;
  if (v44)
  {
    sub_1C0044B78(v46, &qword_1EF5BAAE8);
    v49 = 1;
    v50 = v227;
    v48 = v221;
  }
  else
  {
    v48 = v221;
    sub_1C03034FC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v46, v43);
    v49 = 0;
    v50 = v227;
  }
  OUTLINED_FUNCTION_26_18(v48, v49);
  sub_1C014C3B8(v48, v220);
  sub_1C00607B8(a1 + v42[32], v47, &qword_1EF5BAAE8);
  OUTLINED_FUNCTION_33_1(v47, 1, v43);
  v227 = v43;
  if (v44)
  {
    sub_1C0044B78(v47, &qword_1EF5BAAE8);
    v51 = 1;
  }
  else
  {
    sub_1C03034FC();
    OUTLINED_FUNCTION_45_9();
    v51 = 0;
  }
  OUTLINED_FUNCTION_26_18(v50, v51);
  sub_1C014C3B8(v50, v223);
  v52 = v224;
  *(_BYTE *)(a2 + v224[27]) = *(_BYTE *)(a1 + v42[34]);
  *(_BYTE *)(a2 + v52[28]) = *(_BYTE *)(a1 + v42[35]);
  *(_BYTE *)(a2 + v52[29]) = *(_BYTE *)(a1 + v42[36]);
  *(_BYTE *)(a2 + v52[30]) = *(_BYTE *)(a1 + v42[37]);
  *(_BYTE *)(a2 + v52[31]) = *(_BYTE *)(a1 + v42[38]);
  *(_BYTE *)(a2 + v52[32]) = *(_BYTE *)(a1 + v42[39]);
  *(_BYTE *)(a2 + v52[33]) = *(_BYTE *)(a1 + v42[40]);
  *(_BYTE *)(a2 + v52[34]) = *(_BYTE *)(a1 + v42[41]);
  *(_BYTE *)(a2 + v52[35]) = *(_BYTE *)(a1 + v42[42] + 9);
  v53 = a1 + v42[43];
  v54 = *(_QWORD *)(v53 + 16);
  v55 = *(_QWORD *)(v53 + 24);
  v56 = (_QWORD *)(a2 + v52[36]);
  *v56 = v54;
  v56[1] = v55;
  *(_BYTE *)(a2 + v52[37]) = *(_BYTE *)(a1 + v42[44]);
  *(_BYTE *)(a2 + v52[38]) = *(_BYTE *)(a1 + v42[45]);
  v57 = a1 + v42[33];
  v58 = *(_QWORD *)v57;
  v59 = *(_BYTE *)(v57 + 8);
  v60 = *(_BYTE *)(v57 + 9);
  v61 = *(_BYTE *)(v57 + 10);
  v222 = a1;
  v223 = a2;
  v62 = *(_BYTE *)(v57 + 11);
  v63 = *(_BYTE *)(v57 + 12);
  v64 = *(_BYTE *)(v57 + 13);
  LODWORD(v225) = *(unsigned __int8 *)(v57 + 14);
  LODWORD(v221) = *(unsigned __int8 *)(v57 + 15);
  LODWORD(v220) = *(unsigned __int8 *)(v57 + 16);
  v219 = *(unsigned __int8 *)(v57 + 17);
  v218 = *(unsigned __int8 *)(v57 + 18);
  v217 = *(unsigned __int8 *)(v57 + 19);
  sub_1C0217DD4(v58);
  v65 = v223 + v52[39];
  *(_QWORD *)v65 = v66;
  *(_BYTE *)(v65 + 8) = v59;
  *(_BYTE *)(v65 + 9) = v60;
  *(_BYTE *)(v65 + 10) = v61;
  *(_BYTE *)(v65 + 11) = v62;
  v67 = v222;
  v68 = v223;
  *(_BYTE *)(v65 + 12) = v63;
  *(_BYTE *)(v65 + 13) = v64;
  *(_BYTE *)(v65 + 14) = v225;
  *(_BYTE *)(v65 + 15) = v221;
  *(_BYTE *)(v65 + 16) = v220;
  *(_BYTE *)(v65 + 17) = v219;
  *(_BYTE *)(v65 + 18) = v218;
  *(_BYTE *)(v65 + 19) = v217;
  *(_OWORD *)(v65 + 24) = 0u;
  *(_OWORD *)(v65 + 40) = 0u;
  *(_BYTE *)(v68 + v52[41]) = *(_BYTE *)(v67 + v42[47]);
  *(_BYTE *)(v68 + v52[42]) = *(_BYTE *)(v67 + v42[48]);
  *(_BYTE *)(v68 + v52[43]) = *(_BYTE *)(v67 + v42[49] + 9);
  v69 = *(double *)(v67 + v42[50] + 16);
  swift_bridgeObjectRetain();
  sub_1C0217D00(v69);
  *(_QWORD *)(v68 + v52[44]) = v70;
  *(_BYTE *)(v68 + v52[45]) = *(_BYTE *)(v67 + v42[51]);
  *(_BYTE *)(v68 + v52[46]) = *(_BYTE *)(v67 + v42[58]);
  *(_BYTE *)(v68 + v52[47]) = *(_BYTE *)(v67 + v42[56]);
  *(_QWORD *)(v68 + v52[48]) = *(_QWORD *)(v67 + v42[60]);
  type metadata accessor for MegadomeEntityFeatures();
  swift_allocObject();
  v71 = (_QWORD *)sub_1C0117CBC();
  *(_QWORD *)(v68 + v52[49]) = v71;
  v72 = *(_QWORD *)(v67 + v42[61]);
  sub_1C0217D00(*(double *)(v72 + 16));
  v71[2] = v73;
  sub_1C0217D00(*(double *)(v72 + 24));
  v71[3] = v74;
  sub_1C0217D00(*(double *)(v72 + 32));
  v71[4] = v75;
  sub_1C0217D00(*(double *)(v72 + 40));
  v71[5] = v76;
  sub_1C0217D00(*(double *)(v72 + 48));
  v71[6] = v77;
  sub_1C0217D00(*(double *)(v72 + 56));
  v71[7] = v78;
  sub_1C0217D00(*(double *)(v72 + 64));
  v71[8] = v79;
  sub_1C0217D00(*(double *)(v72 + 72));
  v71[9] = v80;
  sub_1C0217D00(*(double *)(v72 + 80));
  v71[10] = v81;
  sub_1C0217D00(*(double *)(v72 + 88));
  v71[11] = v82;
  sub_1C0217D00(*(double *)(v72 + 96));
  v71[12] = v83;
  sub_1C0217D00(*(double *)(v72 + 104));
  v71[13] = v84;
  sub_1C0217D00(*(double *)(v72 + 112));
  v71[14] = v85;
  sub_1C0217D00(*(double *)(v72 + 120));
  v71[15] = v86;
  sub_1C0217D00(*(double *)(v72 + 128));
  v71[16] = v87;
  sub_1C0217D00(*(double *)(v72 + 136));
  v71[17] = v88;
  sub_1C0217D00(*(double *)(v72 + 144));
  v71[18] = v89;
  sub_1C0217D00(*(double *)(v72 + 152));
  v71[19] = v90;
  sub_1C0217D00(*(double *)(v72 + 160));
  v71[20] = v91;
  sub_1C0217D00(*(double *)(v72 + 168));
  v71[21] = v92;
  sub_1C0217D00(*(double *)(v72 + 176));
  v71[22] = v93;
  sub_1C0217D00(*(double *)(v72 + 184));
  v71[23] = v94;
  sub_1C0217D00(*(double *)(v72 + 192));
  v71[24] = v95;
  sub_1C0217D00(*(double *)(v72 + 200));
  v71[25] = v96;
  sub_1C0217D00(*(double *)(v72 + 208));
  v71[26] = v97;
  sub_1C0217D00(*(double *)(v72 + 216));
  v71[27] = v98;
  sub_1C0217D00(*(double *)(v72 + 224));
  v71[28] = v99;
  sub_1C0217D00(*(double *)(v72 + 232));
  v71[29] = v100;
  sub_1C0217D00(*(double *)(v72 + 240));
  v71[30] = v101;
  sub_1C0217D00(*(double *)(v72 + 248));
  v71[31] = v102;
  sub_1C0217D00(*(double *)(v72 + 256));
  v71[32] = v103;
  sub_1C0217D00(*(double *)(v72 + 264));
  v71[33] = v104;
  sub_1C0217D00(*(double *)(v72 + 272));
  v71[34] = v105;
  sub_1C0217D00(*(double *)(v72 + 280));
  v71[35] = v106;
  sub_1C0217D00(*(double *)(v72 + 288));
  v71[36] = v107;
  sub_1C0217D00(*(double *)(v72 + 296));
  v71[37] = v108;
  sub_1C0217D00(*(double *)(v72 + 304));
  v71[38] = v109;
  sub_1C0217D00(*(double *)(v72 + 312));
  v71[39] = v110;
  sub_1C0217D00(*(double *)(v72 + 320));
  v71[40] = v111;
  sub_1C0217D00(*(double *)(v72 + 328));
  v71[41] = v112;
  sub_1C0217D00(*(double *)(v72 + 336));
  v71[42] = v113;
  sub_1C0217D00(*(double *)(v72 + 344));
  v71[43] = v114;
  sub_1C0217D00(*(double *)(v72 + 352));
  v71[44] = v115;
  sub_1C0217D00(*(double *)(v72 + 360));
  v71[45] = v116;
  sub_1C0217D00(*(double *)(v72 + 368));
  v71[46] = v117;
  sub_1C0217D00(*(double *)(v72 + 376));
  v71[47] = v118;
  sub_1C0217D00(*(double *)(v72 + 384));
  v71[48] = v119;
  sub_1C0217D00(*(double *)(v72 + 392));
  v71[49] = v120;
  sub_1C0217D00(*(double *)(v72 + 400));
  v71[50] = v121;
  sub_1C0217D00(*(double *)(v72 + 408));
  v71[51] = v122;
  sub_1C0217D00(*(double *)(v72 + 416));
  v71[52] = v123;
  sub_1C0217D00(*(double *)(v72 + 424));
  v71[53] = v124;
  sub_1C0217D00(*(double *)(v72 + 432));
  v71[54] = v125;
  sub_1C0217D00(*(double *)(v72 + 440));
  v71[55] = v126;
  sub_1C0217D00(*(double *)(v72 + 448));
  v71[56] = v127;
  sub_1C0217D00(*(double *)(v72 + 456));
  v71[57] = v128;
  sub_1C0217D00(*(double *)(v72 + 464));
  v71[58] = v129;
  sub_1C0217D00(*(double *)(v72 + 472));
  v71[59] = v130;
  sub_1C0217D00(*(double *)(v72 + 480));
  v71[60] = v131;
  sub_1C0217D00(*(double *)(v72 + 488));
  v71[61] = v132;
  sub_1C0217D00(*(double *)(v72 + 496));
  v71[62] = v133;
  sub_1C0217D00(*(double *)(v72 + 504));
  v71[63] = v134;
  sub_1C0217D00(*(double *)(v72 + 512));
  v71[64] = v135;
  sub_1C0217D00(*(double *)(v72 + 520));
  v71[65] = v136;
  sub_1C0217D00(*(double *)(v72 + 528));
  v71[66] = v137;
  sub_1C0217D00(*(double *)(v72 + 536));
  v71[67] = v138;
  sub_1C0217D00(*(double *)(v72 + 544));
  v71[68] = v139;
  sub_1C0217D00(*(double *)(v72 + 552));
  v71[69] = v140;
  sub_1C0217D00(*(double *)(v72 + 560));
  v71[70] = v141;
  sub_1C0217D00(*(double *)(v72 + 568));
  v71[71] = v142;
  sub_1C0217D00(*(double *)(v72 + 576));
  v71[72] = v143;
  sub_1C0217D00(*(double *)(v72 + 584));
  v71[73] = v144;
  sub_1C0217D00(*(double *)(v72 + 592));
  v71[74] = v145;
  sub_1C0217D00(*(double *)(v72 + 600));
  v71[75] = v146;
  sub_1C0217D00(*(double *)(v72 + 608));
  v71[76] = v147;
  sub_1C0217D00(*(double *)(v72 + 616));
  v71[77] = v148;
  sub_1C0217D00(*(double *)(v72 + 624));
  v71[78] = v149;
  sub_1C0217D00(*(double *)(v72 + 632));
  v71[79] = v150;
  sub_1C0217D00(*(double *)(v72 + 640));
  v71[80] = v151;
  sub_1C0217D00(*(double *)(v72 + 648));
  v71[81] = v152;
  sub_1C0217D00(*(double *)(v72 + 656));
  v71[82] = v153;
  sub_1C0217D00(*(double *)(v72 + 664));
  v71[83] = v154;
  sub_1C0217D00(*(double *)(v72 + 672));
  v71[84] = v155;
  sub_1C0217D00(*(double *)(v72 + 680));
  v71[85] = v156;
  sub_1C0217D00(*(double *)(v72 + 688));
  v71[86] = v157;
  sub_1C0217D00(*(double *)(v72 + 696));
  v71[87] = v158;
  sub_1C0217D00(*(double *)(v72 + 704));
  v71[88] = v159;
  sub_1C0217D00(*(double *)(v72 + 712));
  v71[89] = v160;
  sub_1C0217D00(*(double *)(v72 + 720));
  v71[90] = v161;
  sub_1C0217D00(*(double *)(v72 + 728));
  v71[91] = v162;
  sub_1C0217D00(*(double *)(v72 + 736));
  v71[92] = v163;
  sub_1C0217D00(*(double *)(v72 + 744));
  v71[93] = v164;
  sub_1C0217D00(*(double *)(v72 + 752));
  v71[94] = v165;
  sub_1C0217D00(*(double *)(v72 + 760));
  v71[95] = v166;
  sub_1C0217D00(*(double *)(v72 + 768));
  v71[96] = v167;
  sub_1C0217D00(*(double *)(v72 + 776));
  v71[97] = v168;
  sub_1C0217D00(*(double *)(v72 + 784));
  v71[98] = v169;
  sub_1C0217D00(*(double *)(v72 + 792));
  v71[99] = v170;
  sub_1C0217D00(*(double *)(v72 + 800));
  v71[100] = v171;
  sub_1C0217D00(*(double *)(v72 + 808));
  v71[101] = v172;
  sub_1C0217D00(*(double *)(v72 + 816));
  v71[102] = v173;
  sub_1C0217D00(*(double *)(v72 + 824));
  v71[103] = v174;
  sub_1C0217D00(*(double *)(v72 + 832));
  v71[104] = v175;
  sub_1C0217D00(*(double *)(v72 + 840));
  v71[105] = v176;
  sub_1C0217D00(*(double *)(v72 + 848));
  v71[106] = v177;
  sub_1C0217D00(*(double *)(v72 + 856));
  v71[107] = v178;
  sub_1C0217D00(*(double *)(v72 + 864));
  v71[108] = v179;
  sub_1C0217D00(*(double *)(v72 + 872));
  v71[109] = v180;
  sub_1C0217D00(*(double *)(v72 + 880));
  v71[110] = v181;
  sub_1C0217D00(*(double *)(v72 + 888));
  v71[111] = v182;
  sub_1C0217D00(*(double *)(v72 + 896));
  v71[112] = v183;
  sub_1C0217D00(*(double *)(v72 + 904));
  v71[113] = v184;
  v71[114] = *(_QWORD *)(v72 + 912);
  v71[115] = *(_QWORD *)(v72 + 920);
  v71[116] = *(_QWORD *)(v72 + 928);
  sub_1C0217D00(*(double *)(v72 + 936));
  v71[117] = v185;
  sub_1C0217D00(*(double *)(v72 + 944));
  v71[118] = v186;
  sub_1C0217D00(*(double *)(v72 + 952));
  v71[119] = v187;
  sub_1C0217D00(*(double *)(v72 + 960));
  v71[120] = v188;
  v189 = *(_QWORD *)(v67 + 272);
  v190 = *(_QWORD *)(v189 + 16);
  v191 = MEMORY[0x1E0DEE9D8];
  if (v190)
  {
    v239 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1C00B1798();
    v192 = *(unsigned __int8 *)(v216 + 80);
    v221 = v189;
    v193 = v189 + ((v192 + 32) & ~v192);
    v194 = type metadata accessor for ContactResolver.HandleSignalSet;
    v225 = *(_QWORD *)(v216 + 72);
    do
    {
      v195 = v237;
      OUTLINED_FUNCTION_10_37(v193, v237);
      sub_1C00638BC(v195 + *(int *)(v232 + 36), (uint64_t)v2, v194);
      v196 = v235;
      *v235 = *v2;
      v196[1] = v2[1];
      v196[2] = v2[2];
      v196[3] = v2[3];
      v197 = (uint64_t)&v2[*(int *)(v238 + 36)];
      v196[4] = v2[4];
      v198 = v229;
      OUTLINED_FUNCTION_9_32(v197, v229);
      v199 = v227;
      OUTLINED_FUNCTION_33_1(v198, 1, v227);
      if (v44)
      {
        sub_1C0044B78(v198, &qword_1EF5BAAE8);
        v201 = 1;
        v200 = v228;
      }
      else
      {
        v200 = v228;
        sub_1C03034FC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v199 - 8) + 8))(v198, v199);
        v201 = 0;
      }
      OUTLINED_FUNCTION_26_18(v200, v201);
      v202 = (int *)v226;
      v203 = (uint64_t)v235;
      sub_1C005A744(v200, (uint64_t)&v235[*(int *)(v226 + 36)], &qword_1EF5B8810);
      v204 = (int *)v238;
      v205 = v2[*(int *)(v238 + 40)];
      *(_BYTE *)(v203 + v202[10]) = v205;
      *(_BYTE *)(v203 + v202[11]) = v205;
      *(_BYTE *)(v203 + v202[12]) = v205;
      *(_BYTE *)(v203 + v202[13]) = v2[v204[11]];
      *(_BYTE *)(v203 + v202[14]) = v2[v204[12]];
      *(_BYTE *)(v203 + v202[15]) = v2[v204[13]];
      v206 = v2[v204[14]];
      v207 = v2;
      v208 = (uint64_t)v2;
      v209 = v194;
      sub_1C003DD84(v208, v194);
      *(_BYTE *)(v203 + v202[16]) = v206;
      v210 = v233;
      sub_1C014C49C(v203, v233);
      v212 = v236;
      v211 = v237;
      v214 = *(_QWORD *)(v237 + 56);
      v213 = *(_QWORD *)(v237 + 64);
      sub_1C00638BC(v210, (uint64_t)v236 + *(int *)(v231 + 36), type metadata accessor for PrivatizedHandleSignalSet);
      *v212 = v214;
      v212[1] = v213;
      swift_bridgeObjectRetain();
      sub_1C003DD84(v210, type metadata accessor for PrivatizedHandleSignalSet);
      OUTLINED_FUNCTION_61(v211);
      v191 = v239;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C00B1798();
        v191 = v239;
      }
      v215 = *(_QWORD *)(v191 + 16);
      if (v215 >= *(_QWORD *)(v191 + 24) >> 1)
      {
        sub_1C00B1798();
        v191 = v239;
      }
      *(_QWORD *)(v191 + 16) = v215 + 1;
      sub_1C005A744((uint64_t)v236, v191+ ((*(unsigned __int8 *)(v230 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v230 + 80))+ *(_QWORD *)(v230 + 72) * v215, &qword_1ED726DB8);
      v193 += v225;
      --v190;
      v194 = v209;
      v2 = v207;
    }
    while (v190);
    swift_bridgeObjectRelease();
    v67 = v222;
    v68 = v223;
  }
  sub_1C003DD84(v67, type metadata accessor for ContactResolver.SignalSet);
  *(_QWORD *)(v68 + v224[40]) = v191;
}

void sub_1C0146E7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  uint64_t v8;
  double v9;
  double v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  sub_1C0217D00(*(double *)(a1 + 8));
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }
  v14 = MEMORY[0x1E0DEE9D8];
  sub_1C00B17C4();
  v3 = (double *)(v1 + 112);
  while (1)
  {
    v4 = *((_QWORD *)v3 - 3);
    v5 = *((_QWORD *)v3 - 2);
    v6 = *v3;
    if ((*(_QWORD *)v3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      break;
LABEL_13:
    v11 = *(_QWORD *)(v14 + 16);
    v12 = *(_QWORD *)(v14 + 24);
    swift_bridgeObjectRetain();
    if (v11 >= v12 >> 1)
      sub_1C00B17C4();
    *(_QWORD *)(v14 + 16) = v11 + 1;
    v13 = v14 + 24 * v11;
    *(_QWORD *)(v13 + 32) = v4;
    *(_QWORD *)(v13 + 40) = v5;
    *(double *)(v13 + 48) = v6;
    v3 += 11;
    if (!--v2)
      goto LABEL_16;
  }
  v7 = log10(fabs(v6));
  v8 = *(_QWORD *)&v7 & 0x7FF0000000000000;
  if (v7 >= 0.0)
  {
    if (v8 == 0x7FF0000000000000)
      goto LABEL_21;
    if (v7 <= -9.22337204e18)
      goto LABEL_22;
    v9 = -1.0;
    if (v7 >= 9.22337204e18)
      goto LABEL_23;
LABEL_12:
    v10 = __exp10(v9 + (double)(uint64_t)v7);
    v6 = v10 * round(v6 / v10);
    goto LABEL_13;
  }
  if (v8 != 0x7FF0000000000000)
  {
    if (v7 <= -9.22337204e18)
      goto LABEL_19;
    v9 = -2.0;
    if (v7 >= 9.22337204e18)
      goto LABEL_20;
    goto LABEL_12;
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
}

void sub_1C0147058()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, _QWORD);
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 *v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  unsigned __int8 *v69;
  __int128 v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE v75[12];
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  _OWORD v89[3];
  uint64_t v90;
  _OWORD v91[3];
  uint64_t v92;

  v88 = OUTLINED_FUNCTION_57_5();
  v2 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v4 = &v75[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCC08);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_27();
  v87 = v7;
  OUTLINED_FUNCTION_42();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = &v75[-v10];
  MEMORY[0x1E0C80A78](v9);
  v13 = &v75[-v12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v14);
  v16 = MEMORY[0x1E0C80A78]((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v18 = MEMORY[0x1E0C80A78](v17);
  v19 = MEMORY[0x1E0C80A78](v18);
  v20 = MEMORY[0x1E0C80A78](v19);
  v21 = MEMORY[0x1E0C80A78](v20);
  v22 = &v75[-v21];
  v23 = MEMORY[0x1E0C80A78](v21);
  v24 = &v75[-v23];
  v31 = &v75[-MEMORY[0x1E0C80A78](v23)];
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(v1 + 8), *(int64x2_t *)(v0 + 8)), (int32x4_t)vceqq_s64(*(int64x2_t *)(v1 + 24), *(int64x2_t *)(v0 + 24)))), 0xFuLL))) & 1) == 0)goto LABEL_53;
  if (((*v1 ^ *v0) & 1) != 0)
    goto LABEL_53;
  if (*((_QWORD *)v1 + 5) != *((_QWORD *)v0 + 5))
    goto LABEL_53;
  if (v1[48] != v0[48])
    goto LABEL_53;
  if (v1[49] != v0[49])
    goto LABEL_53;
  if (v1[50] != v0[50])
    goto LABEL_53;
  if (v1[51] != v0[51])
    goto LABEL_53;
  if (v1[52] != v0[52])
    goto LABEL_53;
  if (v1[53] != v0[53])
    goto LABEL_53;
  if (v1[54] != v0[54])
    goto LABEL_53;
  if (v1[55] != v0[55])
    goto LABEL_53;
  if (v1[56] != v0[56])
    goto LABEL_53;
  if (v1[57] != v0[57])
    goto LABEL_53;
  if (*((double *)v1 + 8) != *((double *)v0 + 8))
    goto LABEL_53;
  if (*((double *)v1 + 9) != *((double *)v0 + 9))
    goto LABEL_53;
  if (v1[80] != v0[80])
    goto LABEL_53;
  v86 = v13;
  v83 = v25;
  v84 = v26;
  v81 = v30;
  v85 = v11;
  v79 = v28;
  v80 = v29;
  v78 = v27;
  v82 = v4;
  if (v1[81] != v0[81]
    || v1[82] != v0[82]
    || v1[83] != v0[83]
    || *((_QWORD *)v1 + 11) != *((_QWORD *)v0 + 11)
    || *((_QWORD *)v1 + 12) != *((_QWORD *)v0 + 12)
    || *((_QWORD *)v1 + 13) != *((_QWORD *)v0 + 13))
  {
    goto LABEL_53;
  }
  v32 = type metadata accessor for PrivatizedSignalSet(0);
  OUTLINED_FUNCTION_9_32((uint64_t)&v1[*(int *)(v32 + 96)], (uint64_t)v31);
  v77 = v32;
  OUTLINED_FUNCTION_9_32((uint64_t)&v0[*(int *)(v32 + 96)], (uint64_t)v24);
  v33 = (uint64_t)v86;
  v34 = (uint64_t)&v86[*(int *)(v5 + 48)];
  OUTLINED_FUNCTION_9_32((uint64_t)v31, (uint64_t)v86);
  OUTLINED_FUNCTION_9_32((uint64_t)v24, v34);
  OUTLINED_FUNCTION_6_35(v33);
  if (v35)
  {
    OUTLINED_FUNCTION_61((uint64_t)v24);
    OUTLINED_FUNCTION_61((uint64_t)v31);
    OUTLINED_FUNCTION_6_35(v34);
    if (v35)
    {
      sub_1C0044B78((uint64_t)v86, &qword_1EF5B8810);
      goto LABEL_33;
    }
LABEL_31:
    v36 = (uint64_t)v86;
LABEL_52:
    sub_1C0044B78(v36, &qword_1EF5BCC08);
    goto LABEL_53;
  }
  sub_1C00607B8((uint64_t)v86, (uint64_t)v22, &qword_1EF5B8810);
  OUTLINED_FUNCTION_6_35(v34);
  if (v35)
  {
    OUTLINED_FUNCTION_27_4((uint64_t)v24);
    OUTLINED_FUNCTION_27_4((uint64_t)v31);
    (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v22, v88);
    goto LABEL_31;
  }
  v37 = (uint64_t)v82;
  OUTLINED_FUNCTION_44_12((uint64_t)v82, v34, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + 32));
  sub_1C014B340((uint64_t)&unk_1EF5BCC10);
  v76 = OUTLINED_FUNCTION_41_10();
  OUTLINED_FUNCTION_13_1(v37);
  OUTLINED_FUNCTION_95_0((uint64_t)v24);
  OUTLINED_FUNCTION_95_0((uint64_t)v31);
  OUTLINED_FUNCTION_13_1((uint64_t)v22);
  OUTLINED_FUNCTION_95_0((uint64_t)v86);
  if ((v76 & 1) == 0)
    goto LABEL_53;
LABEL_33:
  v38 = v77;
  v39 = v84;
  OUTLINED_FUNCTION_52_9((uint64_t)&v1[*(int *)(v77 + 100)], v84);
  v40 = v83;
  OUTLINED_FUNCTION_52_9((uint64_t)&v0[*(int *)(v38 + 100)], v83);
  v41 = (uint64_t)v85;
  v42 = (uint64_t)&v85[*(int *)(v5 + 48)];
  OUTLINED_FUNCTION_52_9(v39, (uint64_t)v85);
  OUTLINED_FUNCTION_52_9(v40, v42);
  OUTLINED_FUNCTION_6_35(v41);
  if (v35)
  {
    OUTLINED_FUNCTION_50_6(v83);
    OUTLINED_FUNCTION_50_6(v84);
    OUTLINED_FUNCTION_6_35(v42);
    if (v35)
    {
      sub_1C0044B78((uint64_t)v85, &qword_1EF5B8810);
      goto LABEL_43;
    }
    goto LABEL_41;
  }
  sub_1C00607B8((uint64_t)v85, v81, &qword_1EF5B8810);
  OUTLINED_FUNCTION_6_35(v42);
  if (v43)
  {
    OUTLINED_FUNCTION_27_4(v83);
    OUTLINED_FUNCTION_27_4(v84);
    OUTLINED_FUNCTION_64_4(*(uint64_t (**)(_QWORD, _QWORD))(v2 + 8));
LABEL_41:
    v36 = (uint64_t)v85;
    goto LABEL_52;
  }
  v44 = (uint64_t)v82;
  v45 = OUTLINED_FUNCTION_69_5();
  OUTLINED_FUNCTION_44_12(v45, v46, v47);
  sub_1C014B340((uint64_t)&unk_1EF5BCC10);
  v48 = v81;
  v49 = OUTLINED_FUNCTION_41_10();
  OUTLINED_FUNCTION_13_1(v44);
  OUTLINED_FUNCTION_50_6(v83);
  OUTLINED_FUNCTION_50_6(v84);
  OUTLINED_FUNCTION_13_1(v48);
  OUTLINED_FUNCTION_50_6((uint64_t)v85);
  if ((v49 & 1) == 0)
    goto LABEL_53;
LABEL_43:
  v50 = v77;
  OUTLINED_FUNCTION_10_37((uint64_t)&v1[*(int *)(v77 + 104)], v80);
  v51 = v79;
  OUTLINED_FUNCTION_10_37((uint64_t)&v0[*(int *)(v50 + 104)], v79);
  v52 = v87;
  v53 = v87 + *(int *)(v5 + 48);
  v54 = OUTLINED_FUNCTION_69_5();
  OUTLINED_FUNCTION_10_37(v54, v55);
  OUTLINED_FUNCTION_10_37(v51, v53);
  OUTLINED_FUNCTION_6_35(v52);
  if (!v35)
  {
    sub_1C00607B8(v87, v78, &qword_1EF5B8810);
    OUTLINED_FUNCTION_6_35(v53);
    if (!v56)
    {
      v57 = (uint64_t)v82;
      OUTLINED_FUNCTION_44_12((uint64_t)v82, v53, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + 32));
      sub_1C014B340((uint64_t)&unk_1EF5BCC10);
      v58 = v78;
      v59 = OUTLINED_FUNCTION_41_10();
      OUTLINED_FUNCTION_13_1(v57);
      OUTLINED_FUNCTION_61(v79);
      OUTLINED_FUNCTION_61(v80);
      OUTLINED_FUNCTION_13_1(v58);
      OUTLINED_FUNCTION_61(v87);
      if ((v59 & 1) == 0)
        goto LABEL_53;
      goto LABEL_55;
    }
    OUTLINED_FUNCTION_27_4(v79);
    OUTLINED_FUNCTION_27_4(v80);
    OUTLINED_FUNCTION_64_4(*(uint64_t (**)(_QWORD, _QWORD))(v2 + 8));
    goto LABEL_51;
  }
  OUTLINED_FUNCTION_61(v79);
  OUTLINED_FUNCTION_61(v80);
  OUTLINED_FUNCTION_6_35(v53);
  if (!v35)
  {
LABEL_51:
    v36 = v87;
    goto LABEL_52;
  }
  sub_1C0044B78(v87, &qword_1EF5B8810);
LABEL_55:
  OUTLINED_FUNCTION_7_37();
  OUTLINED_FUNCTION_48_7();
  if (v35)
  {
    OUTLINED_FUNCTION_7_37();
    OUTLINED_FUNCTION_48_7();
    if (v35)
    {
      OUTLINED_FUNCTION_7_37();
      OUTLINED_FUNCTION_48_7();
      if (v35)
      {
        OUTLINED_FUNCTION_7_37();
        OUTLINED_FUNCTION_48_7();
        if (v35)
        {
          OUTLINED_FUNCTION_7_37();
          OUTLINED_FUNCTION_48_7();
          if (v35)
          {
            OUTLINED_FUNCTION_7_37();
            OUTLINED_FUNCTION_48_7();
            if (v35)
            {
              OUTLINED_FUNCTION_7_37();
              OUTLINED_FUNCTION_48_7();
              if (v35)
              {
                OUTLINED_FUNCTION_7_37();
                OUTLINED_FUNCTION_48_7();
                if (v35)
                {
                  OUTLINED_FUNCTION_7_37();
                  OUTLINED_FUNCTION_48_7();
                  if (v35)
                  {
                    OUTLINED_FUNCTION_7_37();
                    v61 = *(int *)(v60 + 144);
                    v62 = *(_QWORD *)&v1[v61];
                    v63 = *(_QWORD *)&v1[v61 + 8];
                    v64 = &v0[v61];
                    v65 = v62 == *(_QWORD *)v64 && v63 == *((_QWORD *)v64 + 1);
                    if (v65 || (sub_1C0304A08() & 1) != 0)
                    {
                      OUTLINED_FUNCTION_7_37();
                      OUTLINED_FUNCTION_48_7();
                      if (v35)
                      {
                        OUTLINED_FUNCTION_7_37();
                        OUTLINED_FUNCTION_48_7();
                        if (v35)
                        {
                          OUTLINED_FUNCTION_7_37();
                          v67 = *(int *)(v66 + 156);
                          v68 = *(_OWORD *)&v1[v67 + 16];
                          v89[0] = *(_OWORD *)&v1[v67];
                          v89[1] = v68;
                          v89[2] = *(_OWORD *)&v1[v67 + 32];
                          v90 = *(_QWORD *)&v1[v67 + 48];
                          v69 = &v0[v67];
                          v70 = *((_OWORD *)v69 + 1);
                          v91[0] = *(_OWORD *)v69;
                          v91[1] = v70;
                          v91[2] = *((_OWORD *)v69 + 2);
                          v92 = *((_QWORD *)v69 + 6);
                          if (sub_1C01F1C20((uint64_t)v89, (uint64_t)v91))
                          {
                            OUTLINED_FUNCTION_7_37();
                            sub_1C00F0F6C();
                            if ((v71 & 1) != 0)
                            {
                              OUTLINED_FUNCTION_7_37();
                              OUTLINED_FUNCTION_48_7();
                              if (v35)
                              {
                                OUTLINED_FUNCTION_7_37();
                                OUTLINED_FUNCTION_48_7();
                                if (v35)
                                {
                                  OUTLINED_FUNCTION_7_37();
                                  OUTLINED_FUNCTION_48_7();
                                  if (v35)
                                  {
                                    OUTLINED_FUNCTION_7_37();
                                    if (*(double *)&v1[*(int *)(v72 + 176)] == *(double *)&v0[*(int *)(v72 + 176)])
                                    {
                                      OUTLINED_FUNCTION_7_37();
                                      OUTLINED_FUNCTION_48_7();
                                      if (v35)
                                      {
                                        OUTLINED_FUNCTION_7_37();
                                        OUTLINED_FUNCTION_48_7();
                                        if (v35)
                                        {
                                          OUTLINED_FUNCTION_7_37();
                                          OUTLINED_FUNCTION_48_7();
                                          if (v35)
                                          {
                                            OUTLINED_FUNCTION_7_37();
                                            if (*(double *)&v1[*(int *)(v73 + 192)] == *(double *)&v0[*(int *)(v73 + 192)])
                                            {
                                              type metadata accessor for MegadomeEntityFeatures();
                                              OUTLINED_FUNCTION_7_37();
                                              static MegadomeEntityFeatures.== infix(_:_:)(*(double **)&v1[*(int *)(v74 + 196)], *(double **)&v0[*(int *)(v74 + 196)]);
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_53:
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C0147A80(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  char v22;

  if (a1 == 0xD000000000000016 && a2 == 0x80000001C032E420 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C032E440 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = a1 == 0x7365676775537369 && a2 == 0xEB00000000646574;
    if (v5 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001C032E4C0 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000021 && a2 == 0x80000001C032E4E0 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      v6 = a1 == 0x6F636F7079487369 && a2 == 0xEC0000006D736972;
      if (v6 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else if (a1 == 0xD000000000000016 && a2 == 0x80000001C0329DD0 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else if (a1 == 0xD000000000000012 && a2 == 0x80000001C0329DF0 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      else
      {
        v7 = a1 == 0x74536D6F72467369 && a2 == 0xEF68637261655364;
        if (v7 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 8;
        }
        else
        {
          v8 = a1 == 0x4C4E6D6F72467369 && a2 == 0xEF68637261655358;
          if (v8 || (sub_1C0304A08() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 9;
          }
          else
          {
            v9 = a1 == 0x52536D6F72467369 && a2 == 0xEF68637261655352;
            if (v9 || (sub_1C0304A08() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 10;
            }
            else
            {
              v10 = a1 == 0x65726F6353786C6ELL && a2 == 0xE800000000000000;
              if (v10 || (sub_1C0304A08() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 11;
              }
              else
              {
                v11 = a1 == 0x65726F6353727273 && a2 == 0xE800000000000000;
                if (v11 || (sub_1C0304A08() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 12;
                }
                else
                {
                  v12 = a1 == 0x746E656365527369 && a2 == 0xE800000000000000;
                  if (v12 || (sub_1C0304A08() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 13;
                  }
                  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C0329A10 || (sub_1C0304A08() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 14;
                  }
                  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C0329A30 || (sub_1C0304A08() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 15;
                  }
                  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C0329A50 || (sub_1C0304A08() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 16;
                  }
                  else
                  {
                    v13 = a1 == 0x5279636E65636572 && a2 == 0xEB000000006B6E61;
                    if (v13 || (sub_1C0304A08() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 17;
                    }
                    else if (a1 == 0xD000000000000017 && a2 == 0x80000001C0329A70 || (sub_1C0304A08() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 18;
                    }
                    else if (a1 == 0xD000000000000018 && a2 == 0x80000001C0329A90 || (sub_1C0304A08() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 19;
                    }
                    else
                    {
                      v14 = a1 == 0x5379726F74736968 && a2 == 0xEC00000073746174;
                      if (v14 || (sub_1C0304A08() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 20;
                      }
                      else if (a1 == 0xD000000000000018 && a2 == 0x80000001C032E510 || (sub_1C0304A08() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 21;
                      }
                      else if (a1 == 0xD000000000000019 && a2 == 0x80000001C032E530 || (sub_1C0304A08() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 22;
                      }
                      else
                      {
                        v15 = a1 == 0x64726143654D7369 && a2 == 0xE800000000000000;
                        if (v15 || (sub_1C0304A08() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 23;
                        }
                        else if (a1 == 0xD000000000000010 && a2 == 0x80000001C0329AE0 || (sub_1C0304A08() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 24;
                        }
                        else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001C032E570 || (sub_1C0304A08() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 25;
                        }
                        else
                        {
                          v16 = a1 == 0x6974616C65527369 && a2 == 0xEF7361696C416E6FLL;
                          if (v16 || (sub_1C0304A08() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 26;
                          }
                          else if (a1 == 0xD000000000000019 && a2 == 0x80000001C032E590
                                 || (sub_1C0304A08() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 27;
                          }
                          else
                          {
                            v17 = a1 == 0x45696A6F6D457369 && a2 == 0xEF6465646E617078;
                            if (v17 || (sub_1C0304A08() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 28;
                            }
                            else if (a1 == 0xD000000000000027 && a2 == 0x80000001C032E5B0
                                   || (sub_1C0304A08() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 29;
                            }
                            else if (a1 == 0xD000000000000027 && a2 == 0x80000001C032E5E0
                                   || (sub_1C0304A08() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 30;
                            }
                            else if (a1 == 0xD000000000000011 && a2 == 0x80000001C032E610
                                   || (sub_1C0304A08() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 31;
                            }
                            else if (a1 == 0xD000000000000012 && a2 == 0x80000001C032E630
                                   || (sub_1C0304A08() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 32;
                            }
                            else
                            {
                              v18 = a1 == 0x69726F7661467369 && a2 == 0xEA00000000006574;
                              if (v18 || (sub_1C0304A08() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 33;
                              }
                              else if (a1 == 0xD000000000000010 && a2 == 0x80000001C032E650
                                     || (sub_1C0304A08() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 34;
                              }
                              else if (a1 == 0xD000000000000013 && a2 == 0x80000001C032E550
                                     || (sub_1C0304A08() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 35;
                              }
                              else if (a1 == 0xD000000000000019 && a2 == 0x80000001C032F4D0
                                     || (sub_1C0304A08() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 36;
                              }
                              else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001C032E670
                                     || (sub_1C0304A08() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 37;
                              }
                              else if (a1 == 0xD000000000000018 && a2 == 0x80000001C032E690
                                     || (sub_1C0304A08() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 38;
                              }
                              else if (a1 == 0xD000000000000011 && a2 == 0x80000001C032E6B0
                                     || (sub_1C0304A08() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 39;
                              }
                              else if (a1 == 0xD00000000000002ALL && a2 == 0x80000001C032E6D0
                                     || (sub_1C0304A08() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 40;
                              }
                              else
                              {
                                v19 = a1 == 0x695353554C507369 && a2 == 0xEC0000006C616E67;
                                if (v19 || (sub_1C0304A08() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 41;
                                }
                                else
                                {
                                  v20 = a1 == 0x6E67695333457369 && a2 == 0xEA00000000006C61;
                                  if (v20 || (sub_1C0304A08() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 42;
                                  }
                                  else
                                  {
                                    v21 = a1 == 0x6143796C6E4F7369 && a2 == 0xEF6574616469646ELL;
                                    if (v21 || (sub_1C0304A08() & 1) != 0)
                                    {
                                      swift_bridgeObjectRelease();
                                      return 43;
                                    }
                                    else if (a1 == 0xD000000000000017 && a2 == 0x80000001C0329F60
                                           || (sub_1C0304A08() & 1) != 0)
                                    {
                                      swift_bridgeObjectRelease();
                                      return 44;
                                    }
                                    else if (a1 == 0xD000000000000016 && a2 == 0x80000001C032E7B0)
                                    {
                                      swift_bridgeObjectRelease();
                                      return 45;
                                    }
                                    else
                                    {
                                      v22 = sub_1C0304A08();
                                      swift_bridgeObjectRelease();
                                      if ((v22 & 1) != 0)
                                        return 45;
                                      else
                                        return 46;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C0148BB4()
{
  return 46;
}

uint64_t sub_1C0148BBC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1C0148BF4 + 4 * byte_1C030EBC0[a1]))(0xD000000000000016, 0x80000001C032E420);
}

uint64_t sub_1C0148BF4(uint64_t a1)
{
  return a1 + 1;
}

void sub_1C0148FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_71_4();
  v3 = v0;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCEB0);
  OUTLINED_FUNCTION_73();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_58(v5);
  sub_1C014DB38();
  OUTLINED_FUNCTION_43_11();
  sub_1C0111B18();
  OUTLINED_FUNCTION_27_19();
  if (v1)
  {
    v7 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  }
  else
  {
    OUTLINED_FUNCTION_0_56(1);
    OUTLINED_FUNCTION_0_56(2);
    OUTLINED_FUNCTION_0_56(3);
    OUTLINED_FUNCTION_0_56(4);
    OUTLINED_FUNCTION_0_56(5);
    OUTLINED_FUNCTION_0_56(6);
    OUTLINED_FUNCTION_0_56(7);
    OUTLINED_FUNCTION_0_56(8);
    OUTLINED_FUNCTION_0_56(9);
    OUTLINED_FUNCTION_0_56(10);
    OUTLINED_FUNCTION_10_39(11);
    OUTLINED_FUNCTION_10_39(12);
    OUTLINED_FUNCTION_0_56(13);
    OUTLINED_FUNCTION_0_56(14);
    OUTLINED_FUNCTION_0_56(15);
    OUTLINED_FUNCTION_0_56(16);
    OUTLINED_FUNCTION_16_21(17);
    OUTLINED_FUNCTION_16_21(18);
    OUTLINED_FUNCTION_16_21(19);
    v8 = type metadata accessor for PrivatizedSignalSet(0);
    OUTLINED_FUNCTION_61_3();
    sub_1C014B340((uint64_t)&unk_1EF5BCC28);
    OUTLINED_FUNCTION_19_23();
    OUTLINED_FUNCTION_19_23();
    OUTLINED_FUNCTION_19_23();
    OUTLINED_FUNCTION_0_56(23);
    OUTLINED_FUNCTION_0_56(24);
    OUTLINED_FUNCTION_0_56(25);
    OUTLINED_FUNCTION_0_56(26);
    OUTLINED_FUNCTION_0_56(27);
    OUTLINED_FUNCTION_0_56(28);
    OUTLINED_FUNCTION_0_56(29);
    OUTLINED_FUNCTION_0_56(30);
    OUTLINED_FUNCTION_0_56(31);
    sub_1C0304960();
    OUTLINED_FUNCTION_0_56(33);
    OUTLINED_FUNCTION_0_56(34);
    v9 = *(unsigned __int8 *)(v3 + *(int *)(v8 + 156) + 16);
    sub_1C0111B54();
    OUTLINED_FUNCTION_27_19();
    if (!v9)
    {
      OUTLINED_FUNCTION_164();
      sub_1C0118004((uint64_t)&unk_1EF5BCEB8);
      OUTLINED_FUNCTION_66_3();
      OUTLINED_FUNCTION_27_19();
      OUTLINED_FUNCTION_0_56(37);
      OUTLINED_FUNCTION_0_56(38);
      OUTLINED_FUNCTION_0_56(39);
      OUTLINED_FUNCTION_10_39(40);
      OUTLINED_FUNCTION_0_56(41);
      OUTLINED_FUNCTION_0_56(42);
      OUTLINED_FUNCTION_0_56(43);
      OUTLINED_FUNCTION_10_39(44);
      type metadata accessor for MegadomeEntityFeatures();
      sub_1C014B340((uint64_t)&unk_1EF5BAB90);
      OUTLINED_FUNCTION_66_3();
      OUTLINED_FUNCTION_27_19();
    }
    v7 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  }
  OUTLINED_FUNCTION_51_2(v7);
  OUTLINED_FUNCTION_28_0();
}

void sub_1C014960C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  int *v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  char v95;
  uint64_t v96;
  uint64_t v97;

  OUTLINED_FUNCTION_71_4();
  v96 = v4;
  v97 = v5;
  v85 = v0;
  v7 = v6;
  v82 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_27();
  v81 = v10;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_52_0();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v80 - v13;
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCE78);
  MEMORY[0x1E0C80A78](v84);
  OUTLINED_FUNCTION_39_2();
  v15 = type metadata accessor for PrivatizedSignalSet(0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_32_0();
  v18 = v3 + *(int *)(v17 + 100);
  OUTLINED_FUNCTION_61_3();
  v87 = v18;
  OUTLINED_FUNCTION_50_10(v18);
  v89 = (int *)v15;
  v90 = v3;
  v86 = v3 + *(int *)(v15 + 104);
  OUTLINED_FUNCTION_50_10(v86);
  v19 = v7[3];
  v88 = v7;
  __swift_project_boxed_opaque_existential_1(v7, v19);
  sub_1C014DB38();
  v83 = v1;
  v20 = v85;
  sub_1C0304B88();
  if (v20)
  {
    OUTLINED_FUNCTION_65_3();
    sub_1C0044B78(v87, &qword_1EF5B8810);
    sub_1C0044B78(v86, &qword_1EF5B8810);
  }
  else
  {
    v21 = (uint64_t)v14;
    v22 = v81;
    v23 = v82;
    v95 = 0;
    sub_1C0117DD0();
    OUTLINED_FUNCTION_36_15();
    v24 = v94;
    v25 = v90;
    *(_BYTE *)v90 = v91;
    *(_OWORD *)(v25 + 8) = v92;
    *(_OWORD *)(v25 + 24) = v93;
    *(_QWORD *)(v25 + 40) = v24;
    *(_BYTE *)(v25 + 48) = OUTLINED_FUNCTION_1_48(1) & 1;
    *(_BYTE *)(v25 + 49) = OUTLINED_FUNCTION_1_48(2) & 1;
    *(_BYTE *)(v25 + 50) = OUTLINED_FUNCTION_1_48(3) & 1;
    *(_BYTE *)(v25 + 51) = OUTLINED_FUNCTION_1_48(4) & 1;
    *(_BYTE *)(v25 + 52) = OUTLINED_FUNCTION_1_48(5) & 1;
    *(_BYTE *)(v25 + 53) = OUTLINED_FUNCTION_1_48(6) & 1;
    OUTLINED_FUNCTION_1_48(7);
    OUTLINED_FUNCTION_29_16();
    *(_BYTE *)(v27 + 54) = v26;
    OUTLINED_FUNCTION_1_48(8);
    OUTLINED_FUNCTION_29_16();
    *(_BYTE *)(v29 + 55) = v28;
    OUTLINED_FUNCTION_1_48(9);
    OUTLINED_FUNCTION_29_16();
    *(_BYTE *)(v31 + 56) = v30;
    OUTLINED_FUNCTION_1_48(10);
    OUTLINED_FUNCTION_29_16();
    *(_BYTE *)(v33 + 57) = v32;
    OUTLINED_FUNCTION_12_25(11);
    *(_QWORD *)(v90 + 64) = v34;
    OUTLINED_FUNCTION_12_25(12);
    *(_QWORD *)(v90 + 72) = v35;
    OUTLINED_FUNCTION_1_48(13);
    OUTLINED_FUNCTION_29_16();
    *(_BYTE *)(v37 + 80) = v36;
    OUTLINED_FUNCTION_1_48(14);
    OUTLINED_FUNCTION_29_16();
    *(_BYTE *)(v39 + 81) = v38;
    OUTLINED_FUNCTION_1_48(15);
    OUTLINED_FUNCTION_29_16();
    *(_BYTE *)(v41 + 82) = v40;
    OUTLINED_FUNCTION_1_48(16);
    OUTLINED_FUNCTION_29_16();
    *(_BYTE *)(v43 + 83) = v42;
    *(_QWORD *)(v90 + 88) = OUTLINED_FUNCTION_20_14(17);
    *(_QWORD *)(v90 + 96) = OUTLINED_FUNCTION_20_14(18);
    *(_QWORD *)(v90 + 104) = OUTLINED_FUNCTION_20_14(19);
    LOBYTE(v91) = 20;
    sub_1C014B340((uint64_t)&unk_1EF5BCC38);
    OUTLINED_FUNCTION_18_23();
    sub_1C005A744(v21, v90 + v89[24], &qword_1EF5B8810);
    LOBYTE(v91) = 21;
    OUTLINED_FUNCTION_18_23();
    sub_1C014C3B8(v2, v87);
    LOBYTE(v91) = 22;
    OUTLINED_FUNCTION_18_23();
    sub_1C014C3B8(v22, v86);
    v44 = OUTLINED_FUNCTION_1_48(23);
    OUTLINED_FUNCTION_9_34(v44, v89[27]);
    v45 = OUTLINED_FUNCTION_1_48(24);
    OUTLINED_FUNCTION_9_34(v45, v89[28]);
    v46 = OUTLINED_FUNCTION_1_48(25);
    OUTLINED_FUNCTION_9_34(v46, v89[29]);
    v47 = OUTLINED_FUNCTION_1_48(26);
    OUTLINED_FUNCTION_9_34(v47, v89[30]);
    v48 = OUTLINED_FUNCTION_1_48(27);
    OUTLINED_FUNCTION_9_34(v48, v89[31]);
    v49 = OUTLINED_FUNCTION_1_48(28);
    OUTLINED_FUNCTION_9_34(v49, v89[32]);
    v50 = OUTLINED_FUNCTION_1_48(29);
    OUTLINED_FUNCTION_9_34(v50, v89[33]);
    v51 = OUTLINED_FUNCTION_1_48(30);
    OUTLINED_FUNCTION_9_34(v51, v89[34]);
    v52 = OUTLINED_FUNCTION_1_48(31);
    OUTLINED_FUNCTION_9_34(v52, v89[35]);
    LOBYTE(v91) = 32;
    v53 = sub_1C03048AC();
    v54 = (uint64_t *)(v90 + v89[36]);
    *v54 = v53;
    v54[1] = v55;
    v56 = OUTLINED_FUNCTION_1_48(33);
    OUTLINED_FUNCTION_9_34(v56, v89[37]);
    v57 = OUTLINED_FUNCTION_1_48(34);
    OUTLINED_FUNCTION_9_34(v57, v89[38]);
    v95 = 35;
    sub_1C0117E54();
    OUTLINED_FUNCTION_36_15();
    v58 = v92;
    v59 = BYTE1(v92);
    v60 = BYTE2(v92);
    v61 = BYTE3(v92);
    v62 = BYTE4(v92);
    v63 = BYTE5(v92);
    v64 = BYTE6(v92);
    v65 = BYTE7(v92);
    v66 = BYTE8(v92);
    v67 = BYTE9(v92);
    v68 = BYTE10(v92);
    v69 = BYTE11(v92);
    v70 = v90 + v89[39];
    *(_QWORD *)v70 = v91;
    *(_BYTE *)(v70 + 8) = v58;
    *(_BYTE *)(v70 + 9) = v59;
    *(_BYTE *)(v70 + 10) = v60;
    *(_BYTE *)(v70 + 11) = v61;
    *(_BYTE *)(v70 + 12) = v62;
    *(_BYTE *)(v70 + 13) = v63;
    *(_BYTE *)(v70 + 14) = v64;
    *(_BYTE *)(v70 + 15) = v65;
    *(_BYTE *)(v70 + 16) = v66;
    *(_BYTE *)(v70 + 17) = v67;
    *(_BYTE *)(v70 + 18) = v68;
    *(_BYTE *)(v70 + 19) = v69;
    *(_OWORD *)(v70 + 24) = v93;
    *(_OWORD *)(v70 + 40) = v94;
    OUTLINED_FUNCTION_164();
    v95 = 36;
    sub_1C0117CDC((uint64_t)&unk_1EF5BCE90);
    sub_1C03048E8();
    *(_QWORD *)(v90 + v89[40]) = v91;
    v71 = OUTLINED_FUNCTION_1_48(37);
    OUTLINED_FUNCTION_9_34(v71, v89[41]);
    v72 = OUTLINED_FUNCTION_1_48(38);
    OUTLINED_FUNCTION_9_34(v72, v89[42]);
    v73 = OUTLINED_FUNCTION_1_48(39);
    OUTLINED_FUNCTION_9_34(v73, v89[43]);
    OUTLINED_FUNCTION_12_25(40);
    *(_QWORD *)(v90 + v89[44]) = v74;
    v75 = OUTLINED_FUNCTION_1_48(41);
    OUTLINED_FUNCTION_9_34(v75, v89[45]);
    v76 = OUTLINED_FUNCTION_1_48(42);
    OUTLINED_FUNCTION_9_34(v76, v89[46]);
    v77 = OUTLINED_FUNCTION_1_48(43);
    OUTLINED_FUNCTION_9_34(v77, v89[47]);
    OUTLINED_FUNCTION_12_25(44);
    *(_QWORD *)(v90 + v89[48]) = v78;
    type metadata accessor for MegadomeEntityFeatures();
    v95 = 45;
    sub_1C014B340((uint64_t)&unk_1EF5BABF8);
    sub_1C03048E8();
    OUTLINED_FUNCTION_11_34();
    v79 = v90;
    *(_QWORD *)(v90 + v89[49]) = v91;
    sub_1C00638BC(v79, v23, type metadata accessor for PrivatizedSignalSet);
    OUTLINED_FUNCTION_65_3();
    sub_1C003DD84(v79, type metadata accessor for PrivatizedSignalSet);
  }
  OUTLINED_FUNCTION_28_0();
}

uint64_t sub_1C0149F24()
{
  unsigned __int8 *v0;

  return sub_1C0148BBC(*v0);
}

uint64_t sub_1C0149F2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0147A80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0149F50@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0148BB4();
  *a1 = result;
  return result;
}

uint64_t sub_1C0149F74()
{
  sub_1C014DB38();
  return sub_1C0304BAC();
}

uint64_t sub_1C0149F9C()
{
  sub_1C014DB38();
  return sub_1C0304BB8();
}

void sub_1C0149FC4()
{
  sub_1C014960C();
}

void sub_1C0149FD8()
{
  sub_1C0148FC8();
}

uint64_t sub_1C0149FF0(int a1, double a2, double a3, uint64_t a4, int a5)
{
  if (((a1 ^ a5) & 1) != 0 || a2 != a3)
    return 0;
  else
    return sub_1C00F04AC();
}

uint64_t sub_1C014A014(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000017 && a2 == 0x80000001C032E7D0 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C032E8A0 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001C032F4F0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1C014A150(char a1)
{
  if (!a1)
    return 0xD000000000000017;
  if (a1 == 1)
    return 0xD000000000000014;
  return 0xD00000000000001BLL;
}

uint64_t sub_1C014A1AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_71_4();
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCF30);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_1_3();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C014DF9C();
  sub_1C0304BA0();
  sub_1C030496C();
  if (!v0)
  {
    sub_1C0304978();
    OUTLINED_FUNCTION_164();
    sub_1C0118004((uint64_t)&unk_1EF5BCF38);
    sub_1C030499C();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
}

double sub_1C014A328()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  double v4;
  double v5;

  OUTLINED_FUNCTION_71_4();
  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCEF8);
  OUTLINED_FUNCTION_73();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_58(v1);
  sub_1C014DF9C();
  OUTLINED_FUNCTION_68_3();
  sub_1C03048B8();
  sub_1C03048C4();
  v5 = v4;
  OUTLINED_FUNCTION_164();
  sub_1C0117CDC((uint64_t)&unk_1EF5BCF10);
  sub_1C03048E8();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_10_0();
  return v5;
}

unint64_t sub_1C014A49C()
{
  char *v0;

  return sub_1C014A150(*v0);
}

uint64_t sub_1C014A4A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C014A014(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C014A4C8()
{
  sub_1C014DF9C();
  return sub_1C0304BAC();
}

uint64_t sub_1C014A4F0()
{
  sub_1C014DF9C();
  return sub_1C0304BB8();
}

void sub_1C014A518(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  uint64_t v4;
  double v5;

  v5 = sub_1C014A328();
  if (!v1)
  {
    *(_BYTE *)a1 = v3 & 1;
    *(double *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v4;
  }
}

uint64_t sub_1C014A54C()
{
  return sub_1C014A1AC();
}

uint64_t sub_1C014A56C(unsigned __int8 *a1, double *a2)
{
  return sub_1C0149FF0(*a1, *((double *)a1 + 1), a2[1], *((_QWORD *)a1 + 2), *(unsigned __int8 *)a2);
}

void static PrivatizedHandleSignalSet.== infix(_:_:)()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  char v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = OUTLINED_FUNCTION_57_5();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_39_2();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCC08);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_1_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
  OUTLINED_FUNCTION_12_0();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_52_0();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - v14;
  if (*v1 != *v0 || v1[1] != v0[1] || v1[2] != v0[2] || v1[3] != v0[3] || v1[4] != v0[4])
    goto LABEL_27;
  v25 = type metadata accessor for PrivatizedHandleSignalSet(0);
  sub_1C00607B8((uint64_t)&v1[*(int *)(v25 + 36)], (uint64_t)v15, &qword_1EF5B8810);
  sub_1C00607B8((uint64_t)&v0[*(int *)(v25 + 36)], v4, &qword_1EF5B8810);
  v16 = v2 + *(int *)(v7 + 48);
  sub_1C00607B8((uint64_t)v15, v2, &qword_1EF5B8810);
  v24 = v16;
  sub_1C00607B8(v4, v16, &qword_1EF5B8810);
  OUTLINED_FUNCTION_33_1(v2, 1, v5);
  if (!v18)
  {
    sub_1C00607B8(v2, (uint64_t)v12, &qword_1EF5B8810);
    v17 = v24;
    OUTLINED_FUNCTION_33_1(v24, 1, v5);
    if (!v18)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v3, v17, v5);
      sub_1C014B340((uint64_t)&unk_1EF5BCC10);
      v21 = sub_1C0303E80();
      v22 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v22(v3, v5);
      OUTLINED_FUNCTION_61(v4);
      OUTLINED_FUNCTION_61((uint64_t)v15);
      v23 = OUTLINED_FUNCTION_69_5();
      ((void (*)(uint64_t))v22)(v23);
      OUTLINED_FUNCTION_61(v2);
      if ((v21 & 1) == 0)
        goto LABEL_27;
      goto LABEL_16;
    }
    OUTLINED_FUNCTION_27_4(v4);
    OUTLINED_FUNCTION_27_4((uint64_t)v15);
    v19 = OUTLINED_FUNCTION_69_5();
    v20(v19);
LABEL_14:
    sub_1C0044B78(v2, &qword_1EF5BCC08);
    goto LABEL_27;
  }
  sub_1C0044B78(v4, &qword_1EF5B8810);
  sub_1C0044B78((uint64_t)v15, &qword_1EF5B8810);
  OUTLINED_FUNCTION_33_1(v24, 1, v5);
  if (!v18)
    goto LABEL_14;
  sub_1C0044B78(v2, &qword_1EF5B8810);
LABEL_16:
  OUTLINED_FUNCTION_48_7();
  if (v18)
  {
    OUTLINED_FUNCTION_48_7();
    if (v18)
    {
      OUTLINED_FUNCTION_48_7();
      if (v18)
      {
        OUTLINED_FUNCTION_48_7();
        if (v18)
        {
          OUTLINED_FUNCTION_48_7();
          if (v18)
            OUTLINED_FUNCTION_48_7();
        }
      }
    }
  }
LABEL_27:
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for PrivatizedHandleSignalSet(uint64_t a1)
{
  return sub_1C003CD30(a1, (uint64_t *)&unk_1EF5BCC98);
}

uint64_t sub_1C014A8F0(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v12;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001C032E820 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x69726F7661467369 && a2 == 0xEA00000000006574;
    if (v5 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x80000001C032E840 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v6 = a1 == 0x4D79726575517369 && a2 == 0xEC00000068637461;
      if (v6 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000018 && a2 == 0x80000001C032E860 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v7 = a1 == 0x5379726F74736968 && a2 == 0xEC00000073746174;
        if (v7 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v8 = a1 == 0x746E656365527369 && a2 == 0xE800000000000000;
          if (v8 || (sub_1C0304A08() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0xD000000000000012 && a2 == 0x80000001C032F490 || (sub_1C0304A08() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else if (a1 == 0xD000000000000013 && a2 == 0x80000001C032F4B0 || (sub_1C0304A08() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 8;
          }
          else
          {
            v9 = a1 == 0x7265666572507369 && a2 == 0xEF65707954646572;
            if (v9 || (sub_1C0304A08() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else
            {
              v10 = a1 == 0x65776F6C6C417369 && a2 == 0xED00006570795464;
              if (v10 || (sub_1C0304A08() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 10;
              }
              else
              {
                v11 = a1 == 0x6954656361467369 && a2 == 0xEE00656C6261656DLL;
                if (v11 || (sub_1C0304A08() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 11;
                }
                else if (a1 == 0xD000000000000011 && a2 == 0x80000001C032E880)
                {
                  swift_bridgeObjectRelease();
                  return 12;
                }
                else
                {
                  v12 = sub_1C0304A08();
                  swift_bridgeObjectRelease();
                  if ((v12 & 1) != 0)
                    return 12;
                  else
                    return 13;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C014AE7C()
{
  return 13;
}

uint64_t sub_1C014AE84(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1C014AEBC + 4 * byte_1C030EBEE[a1]))(0xD000000000000011, 0x80000001C032E820);
}

uint64_t sub_1C014AEBC()
{
  return 0x69726F7661467369;
}

uint64_t sub_1C014AFEC()
{
  unsigned __int8 *v0;

  return sub_1C014AE84(*v0);
}

uint64_t sub_1C014AFF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C014A8F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C014B018@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C014AE7C();
  *a1 = result;
  return result;
}

uint64_t sub_1C014B03C()
{
  sub_1C014B304();
  return sub_1C0304BAC();
}

uint64_t sub_1C014B064()
{
  sub_1C014B304();
  return sub_1C0304BB8();
}

uint64_t PrivatizedHandleSignalSet.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCC18);
  OUTLINED_FUNCTION_73();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_58(a1);
  sub_1C014B304();
  OUTLINED_FUNCTION_43_11();
  v9[15] = 0;
  OUTLINED_FUNCTION_3_57();
  if (!v1)
  {
    v9[14] = 1;
    OUTLINED_FUNCTION_3_57();
    v9[13] = 2;
    OUTLINED_FUNCTION_3_57();
    v9[12] = 3;
    OUTLINED_FUNCTION_3_57();
    v9[11] = 4;
    OUTLINED_FUNCTION_3_57();
    type metadata accessor for PrivatizedHandleSignalSet(0);
    v9[10] = 5;
    OUTLINED_FUNCTION_61_3();
    sub_1C014B340((uint64_t)&unk_1EF5BCC28);
    sub_1C0304954();
    v9[9] = 6;
    OUTLINED_FUNCTION_3_57();
    v9[8] = 7;
    OUTLINED_FUNCTION_3_57();
    v9[7] = 8;
    OUTLINED_FUNCTION_3_57();
    v9[6] = 9;
    OUTLINED_FUNCTION_3_57();
    v9[5] = 10;
    OUTLINED_FUNCTION_3_57();
    v9[4] = 11;
    OUTLINED_FUNCTION_3_57();
    v9[3] = 12;
    OUTLINED_FUNCTION_3_57();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v2 + 8))(v7, v4);
}

unint64_t sub_1C014B304()
{
  unint64_t result;

  result = qword_1EF5BCC20;
  if (!qword_1EF5BCC20)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030ED9C, &type metadata for PrivatizedHandleSignalSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BCC20);
  }
  return result;
}

void sub_1C014B340(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (!OUTLINED_FUNCTION_56_0(a1))
  {
    v4 = v3;
    v5 = v2(255);
    atomic_store(MEMORY[0x1C3B9827C](v4, v5), v1);
  }
  OUTLINED_FUNCTION_9();
}

void PrivatizedHandleSignalSet.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  int *v14;
  _BYTE *v15;

  OUTLINED_FUNCTION_71_4();
  v3 = v2;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_32_0();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCC30);
  MEMORY[0x1E0C80A78](v13);
  v14 = (int *)type metadata accessor for PrivatizedHandleSignalSet(0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_53();
  v15 = v8;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C014B304();
  sub_1C0304B88();
  if (v0)
  {
    OUTLINED_FUNCTION_10_0();
  }
  else
  {
    *v15 = OUTLINED_FUNCTION_4_44() & 1;
    v15[1] = OUTLINED_FUNCTION_4_44() & 1;
    v15[2] = OUTLINED_FUNCTION_4_44() & 1;
    v15[3] = OUTLINED_FUNCTION_4_44() & 1;
    v15[4] = OUTLINED_FUNCTION_4_44() & 1;
    OUTLINED_FUNCTION_61_3();
    sub_1C014B340((uint64_t)&unk_1EF5BCC38);
    sub_1C03048A0();
    sub_1C005A744(v1, (uint64_t)&v15[v14[9]], &qword_1EF5B8810);
    v15[v14[10]] = OUTLINED_FUNCTION_4_44() & 1;
    v15[v14[11]] = OUTLINED_FUNCTION_4_44() & 1;
    v15[v14[12]] = OUTLINED_FUNCTION_4_44() & 1;
    v9 = OUTLINED_FUNCTION_4_44();
    OUTLINED_FUNCTION_9_34(v9, v14[13]);
    v10 = OUTLINED_FUNCTION_5_36();
    OUTLINED_FUNCTION_9_34(v10, v14[14]);
    v11 = OUTLINED_FUNCTION_5_36();
    OUTLINED_FUNCTION_9_34(v11, v14[15]);
    v12 = OUTLINED_FUNCTION_5_36();
    OUTLINED_FUNCTION_25_14();
    v15[v14[16]] = v12 & 1;
    sub_1C00638BC((uint64_t)v15, v5, type metadata accessor for PrivatizedHandleSignalSet);
    OUTLINED_FUNCTION_10_0();
    sub_1C003DD84((uint64_t)v15, type metadata accessor for PrivatizedHandleSignalSet);
  }
  OUTLINED_FUNCTION_28_0();
}

BOOL sub_1C014B760(double a1, double a2)
{
  return a1 == a2;
}

uint64_t sub_1C014B76C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCE70);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_21_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C014DAFC();
  sub_1C0304BA0();
  sub_1C0304978();
  return OUTLINED_FUNCTION_51_2(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
}

double sub_1C014B83C()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  double v6;

  OUTLINED_FUNCTION_71_4();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCE60);
  OUTLINED_FUNCTION_73();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_58(v4);
  sub_1C014DAFC();
  OUTLINED_FUNCTION_68_3();
  if (!v0)
  {
    sub_1C03048C4();
    v2 = v6;
    OUTLINED_FUNCTION_51_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  OUTLINED_FUNCTION_10_0();
  return v2;
}

void sub_1C014B90C()
{
  PrivatizedHandleSignalSet.init(from:)();
}

uint64_t sub_1C014B920(_QWORD *a1)
{
  return PrivatizedHandleSignalSet.encode(to:)(a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for PrivatizedHandleSignalSet(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
    v7 = a3[9];
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = sub_1C03036C4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    v13 = a3[11];
    *((_BYTE *)v4 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    *((_BYTE *)v4 + v13) = *((_BYTE *)a2 + v13);
    v14 = a3[13];
    *((_BYTE *)v4 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    *((_BYTE *)v4 + v14) = *((_BYTE *)a2 + v14);
    v15 = a3[15];
    *((_BYTE *)v4 + a3[14]) = *((_BYTE *)a2 + a3[14]);
    *((_BYTE *)v4 + v15) = *((_BYTE *)a2 + v15);
    *((_BYTE *)v4 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  }
  return v4;
}

uint64_t destroy for PrivatizedHandleSignalSet(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 36);
  v3 = sub_1C03036C4();
  result = __swift_getEnumTagSinglePayload(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return result;
}

uint64_t initializeWithCopy for PrivatizedHandleSignalSet(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v6 = a3[9];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1C03036C4();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v13 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  return a1;
}

_BYTE *assignWithCopy for PrivatizedHandleSignalSet(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  v6 = a3[9];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C03036C4();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  a1[a3[10]] = a2[a3[10]];
  a1[a3[11]] = a2[a3[11]];
  a1[a3[12]] = a2[a3[12]];
  a1[a3[13]] = a2[a3[13]];
  a1[a3[14]] = a2[a3[14]];
  a1[a3[15]] = a2[a3[15]];
  a1[a3[16]] = a2[a3[16]];
  return a1;
}

uint64_t initializeWithTake for PrivatizedHandleSignalSet(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v6 = a3[9];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1C03036C4();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v13 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  return a1;
}

_BYTE *assignWithTake for PrivatizedHandleSignalSet(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  v6 = a3[9];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C03036C4();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v14 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v14] = a2[v14];
  v15 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  a1[v15] = a2[v15];
  v16 = a3[15];
  a1[a3[14]] = a2[a3[14]];
  a1[v16] = a2[v16];
  a1[a3[16]] = a2[a3[16]];
  return a1;
}

uint64_t getEnumTagSinglePayload for PrivatizedHandleSignalSet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C014BFE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 254)
  {
    OUTLINED_FUNCTION_37_0();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    OUTLINED_FUNCTION_46(a1 + *(int *)(a3 + 36), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for PrivatizedHandleSignalSet()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C014C058(_BYTE *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 254)
  {
    *a1 = a2 + 1;
    OUTLINED_FUNCTION_37_0();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    OUTLINED_FUNCTION_49_3((uint64_t)&a1[*(int *)(a4 + 36)], a2, a2, v7);
  }
}

void sub_1C014C0B4()
{
  unint64_t v0;

  sub_1C014C13C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1C014C13C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF5BCCA8[0])
  {
    sub_1C03036C4();
    v0 = sub_1C030448C();
    if (!v1)
      atomic_store(v0, qword_1EF5BCCA8);
  }
}

uint64_t _s8TimeUnitOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF4)
  {
    if (a2 + 12 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 12) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 13;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v5 = v6 - 13;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PrivatizedHandleSignalSet.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1C014C264 + 4 * byte_1C030EC00[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1C014C298 + 4 * byte_1C030EBFB[v4]))();
}

uint64_t sub_1C014C298(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C014C2A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C014C2A8);
  return result;
}

uint64_t sub_1C014C2B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C014C2BCLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1C014C2C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C014C2C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PrivatizedHandleSignalSet.CodingKeys()
{
  return &type metadata for PrivatizedHandleSignalSet.CodingKeys;
}

unint64_t sub_1C014C2E8()
{
  unint64_t result;

  result = qword_1EF5BCD08;
  if (!qword_1EF5BCD08)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030ED74, &type metadata for PrivatizedHandleSignalSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BCD08);
  }
  return result;
}

unint64_t sub_1C014C328()
{
  unint64_t result;

  result = qword_1EF5BCD10;
  if (!qword_1EF5BCD10)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030ECE4, &type metadata for PrivatizedHandleSignalSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BCD10);
  }
  return result;
}

unint64_t sub_1C014C368()
{
  unint64_t result;

  result = qword_1EF5BCD18;
  if (!qword_1EF5BCD18)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030ED0C, &type metadata for PrivatizedHandleSignalSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BCD18);
  }
  return result;
}

uint64_t type metadata accessor for PrivatizedSignalSet(uint64_t a1)
{
  return sub_1C003CD30(a1, qword_1EF5BCD78);
}

uint64_t sub_1C014C3B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C014C400()
{
  sub_1C014DAFC();
  return sub_1C0304BAC();
}

uint64_t sub_1C014C428()
{
  sub_1C014DAFC();
  return sub_1C0304BB8();
}

void sub_1C014C450(double *a1@<X8>)
{
  uint64_t v1;
  double v3;

  v3 = sub_1C014B83C();
  if (!v1)
    *a1 = v3;
}

uint64_t sub_1C014C478(_QWORD *a1)
{
  return sub_1C014B76C(a1);
}

BOOL sub_1C014C490(double *a1, double *a2)
{
  return sub_1C014B760(*a1, *a2);
}

uint64_t sub_1C014C49C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PrivatizedHandleSignalSet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for PrivatizedBgHandleSignalSet()
{
  return &type metadata for PrivatizedBgHandleSignalSet;
}

uint64_t sub_1C014C4F0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = v13 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
    *(_QWORD *)(a1 + 104) = a2[13];
    v8 = a3[24];
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = sub_1C03036C4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    v14 = a3[25];
    v15 = (void *)(v4 + v14);
    v16 = (char *)a2 + v14;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v14, 1, v11))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v15, v16, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v11);
    }
    v18 = a3[26];
    v19 = (void *)(v4 + v18);
    v20 = (char *)a2 + v18;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v18, 1, v11))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v19, v20, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v11);
    }
    v22 = a3[28];
    *(_BYTE *)(v4 + a3[27]) = *((_BYTE *)a2 + a3[27]);
    *(_BYTE *)(v4 + v22) = *((_BYTE *)a2 + v22);
    v23 = a3[30];
    *(_BYTE *)(v4 + a3[29]) = *((_BYTE *)a2 + a3[29]);
    *(_BYTE *)(v4 + v23) = *((_BYTE *)a2 + v23);
    v24 = a3[32];
    *(_BYTE *)(v4 + a3[31]) = *((_BYTE *)a2 + a3[31]);
    *(_BYTE *)(v4 + v24) = *((_BYTE *)a2 + v24);
    v25 = a3[34];
    *(_BYTE *)(v4 + a3[33]) = *((_BYTE *)a2 + a3[33]);
    *(_BYTE *)(v4 + v25) = *((_BYTE *)a2 + v25);
    v26 = a3[36];
    *(_BYTE *)(v4 + a3[35]) = *((_BYTE *)a2 + a3[35]);
    v27 = (_QWORD *)(v4 + v26);
    v28 = (uint64_t *)((char *)a2 + v26);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = a3[38];
    *(_BYTE *)(v4 + a3[37]) = *((_BYTE *)a2 + a3[37]);
    *(_BYTE *)(v4 + v30) = *((_BYTE *)a2 + v30);
    v31 = a3[39];
    v32 = a3[40];
    v33 = v4 + v31;
    v34 = (uint64_t)a2 + v31;
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
    *(_DWORD *)(v33 + 16) = *(_DWORD *)(v34 + 16);
    v35 = *(_QWORD *)(v34 + 32);
    *(_QWORD *)(v33 + 24) = *(_QWORD *)(v34 + 24);
    *(_QWORD *)(v33 + 32) = v35;
    v36 = *(_QWORD *)(v34 + 48);
    *(_QWORD *)(v33 + 40) = *(_QWORD *)(v34 + 40);
    *(_QWORD *)(v33 + 48) = v36;
    *(_QWORD *)(v4 + v32) = *(uint64_t *)((char *)a2 + v32);
    v37 = a3[42];
    *(_BYTE *)(v4 + a3[41]) = *((_BYTE *)a2 + a3[41]);
    *(_BYTE *)(v4 + v37) = *((_BYTE *)a2 + v37);
    v38 = a3[44];
    *(_BYTE *)(v4 + a3[43]) = *((_BYTE *)a2 + a3[43]);
    *(_QWORD *)(v4 + v38) = *(uint64_t *)((char *)a2 + v38);
    v39 = a3[46];
    *(_BYTE *)(v4 + a3[45]) = *((_BYTE *)a2 + a3[45]);
    *(_BYTE *)(v4 + v39) = *((_BYTE *)a2 + v39);
    v40 = a3[48];
    *(_BYTE *)(v4 + a3[47]) = *((_BYTE *)a2 + a3[47]);
    *(_QWORD *)(v4 + v40) = *(uint64_t *)((char *)a2 + v40);
    *(_QWORD *)(v4 + a3[49]) = *(uint64_t *)((char *)a2 + a3[49]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1C014C828(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1 + a2[24];
  v5 = sub_1C03036C4();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[25];
  if (!__swift_getEnumTagSinglePayload(v6, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v6, v5);
  v7 = a1 + a2[26];
  if (!__swift_getEnumTagSinglePayload(v7, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v7, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1C014C928(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v7 = a3[24];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1C03036C4();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[25];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  if (__swift_getEnumTagSinglePayload(a2 + v12, 1, v10))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v13, v14, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v10);
  }
  v16 = a3[26];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  if (__swift_getEnumTagSinglePayload(a2 + v16, 1, v10))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v17, v18, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v10);
  }
  v20 = a3[28];
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v21 = a3[30];
  *(_BYTE *)(a1 + a3[29]) = *(_BYTE *)(a2 + a3[29]);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  v22 = a3[32];
  *(_BYTE *)(a1 + a3[31]) = *(_BYTE *)(a2 + a3[31]);
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  v23 = a3[34];
  *(_BYTE *)(a1 + a3[33]) = *(_BYTE *)(a2 + a3[33]);
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  v24 = a3[36];
  *(_BYTE *)(a1 + a3[35]) = *(_BYTE *)(a2 + a3[35]);
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = a3[38];
  *(_BYTE *)(a1 + a3[37]) = *(_BYTE *)(a2 + a3[37]);
  *(_BYTE *)(a1 + v28) = *(_BYTE *)(a2 + v28);
  v29 = a3[39];
  v30 = a3[40];
  v31 = a1 + v29;
  v32 = a2 + v29;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_QWORD *)(v31 + 8) = *(_QWORD *)(v32 + 8);
  *(_DWORD *)(v31 + 16) = *(_DWORD *)(v32 + 16);
  v33 = *(_QWORD *)(v32 + 32);
  *(_QWORD *)(v31 + 24) = *(_QWORD *)(v32 + 24);
  *(_QWORD *)(v31 + 32) = v33;
  v34 = *(_QWORD *)(v32 + 48);
  *(_QWORD *)(v31 + 40) = *(_QWORD *)(v32 + 40);
  *(_QWORD *)(v31 + 48) = v34;
  *(_QWORD *)(a1 + v30) = *(_QWORD *)(a2 + v30);
  v35 = a3[42];
  *(_BYTE *)(a1 + a3[41]) = *(_BYTE *)(a2 + a3[41]);
  *(_BYTE *)(a1 + v35) = *(_BYTE *)(a2 + v35);
  v36 = a3[44];
  *(_BYTE *)(a1 + a3[43]) = *(_BYTE *)(a2 + a3[43]);
  *(_QWORD *)(a1 + v36) = *(_QWORD *)(a2 + v36);
  v37 = a3[46];
  *(_BYTE *)(a1 + a3[45]) = *(_BYTE *)(a2 + a3[45]);
  *(_BYTE *)(a1 + v37) = *(_BYTE *)(a2 + v37);
  v38 = a3[48];
  *(_BYTE *)(a1 + a3[47]) = *(_BYTE *)(a2 + a3[47]);
  *(_QWORD *)(a1 + v38) = *(_QWORD *)(a2 + v38);
  *(_QWORD *)(a1 + a3[49]) = *(_QWORD *)(a2 + a3[49]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1C014CC38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  *(_BYTE *)(a1 + 53) = *(_BYTE *)(a2 + 53);
  *(_BYTE *)(a1 + 54) = *(_BYTE *)(a2 + 54);
  *(_BYTE *)(a1 + 55) = *(_BYTE *)(a2 + 55);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_BYTE *)(a1 + 82) = *(_BYTE *)(a2 + 82);
  *(_BYTE *)(a1 + 83) = *(_BYTE *)(a2 + 83);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v6 = a3[24];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1C03036C4();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = a3[25];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = __swift_getEnumTagSinglePayload(a1 + v14, 1, v9);
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v9);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v15, v16, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v19 = *(_QWORD *)(v9 - 8);
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v15, v9);
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v19 + 24))(v15, v16, v9);
LABEL_13:
  v21 = a3[26];
  v22 = (void *)(a1 + v21);
  v23 = (const void *)(a2 + v21);
  v24 = __swift_getEnumTagSinglePayload(a1 + v21, 1, v9);
  v25 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v9);
  if (!v24)
  {
    v26 = *(_QWORD *)(v9 - 8);
    if (!v25)
    {
      (*(void (**)(void *, const void *, uint64_t))(v26 + 24))(v22, v23, v9);
      goto LABEL_19;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v22, v9);
    goto LABEL_18;
  }
  if (v25)
  {
LABEL_18:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v22, v23, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v9);
LABEL_19:
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  *(_BYTE *)(a1 + a3[28]) = *(_BYTE *)(a2 + a3[28]);
  *(_BYTE *)(a1 + a3[29]) = *(_BYTE *)(a2 + a3[29]);
  *(_BYTE *)(a1 + a3[30]) = *(_BYTE *)(a2 + a3[30]);
  *(_BYTE *)(a1 + a3[31]) = *(_BYTE *)(a2 + a3[31]);
  *(_BYTE *)(a1 + a3[32]) = *(_BYTE *)(a2 + a3[32]);
  *(_BYTE *)(a1 + a3[33]) = *(_BYTE *)(a2 + a3[33]);
  *(_BYTE *)(a1 + a3[34]) = *(_BYTE *)(a2 + a3[34]);
  *(_BYTE *)(a1 + a3[35]) = *(_BYTE *)(a2 + a3[35]);
  v28 = a3[36];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[37]) = *(_BYTE *)(a2 + a3[37]);
  *(_BYTE *)(a1 + a3[38]) = *(_BYTE *)(a2 + a3[38]);
  v31 = a3[39];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_QWORD *)v32 = *(_QWORD *)(a2 + v31);
  *(_BYTE *)(v32 + 8) = *(_BYTE *)(a2 + v31 + 8);
  *(_BYTE *)(v32 + 9) = *(_BYTE *)(a2 + v31 + 9);
  *(_BYTE *)(v32 + 10) = *(_BYTE *)(a2 + v31 + 10);
  *(_BYTE *)(v32 + 11) = *(_BYTE *)(a2 + v31 + 11);
  *(_BYTE *)(v32 + 12) = *(_BYTE *)(a2 + v31 + 12);
  *(_BYTE *)(v32 + 13) = *(_BYTE *)(a2 + v31 + 13);
  *(_BYTE *)(v32 + 14) = *(_BYTE *)(a2 + v31 + 14);
  *(_BYTE *)(v32 + 15) = *(_BYTE *)(a2 + v31 + 15);
  *(_BYTE *)(v32 + 16) = *(_BYTE *)(a2 + v31 + 16);
  *(_BYTE *)(v32 + 17) = *(_BYTE *)(a2 + v31 + 17);
  *(_BYTE *)(v32 + 18) = *(_BYTE *)(a2 + v31 + 18);
  *(_BYTE *)(v32 + 19) = *(_BYTE *)(a2 + v31 + 19);
  *(_QWORD *)(v32 + 24) = *(_QWORD *)(a2 + v31 + 24);
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(a2 + v31 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v32 + 40) = *(_QWORD *)(v33 + 40);
  *(_QWORD *)(v32 + 48) = *(_QWORD *)(v33 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[40]) = *(_QWORD *)(a2 + a3[40]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[41]) = *(_BYTE *)(a2 + a3[41]);
  *(_BYTE *)(a1 + a3[42]) = *(_BYTE *)(a2 + a3[42]);
  *(_BYTE *)(a1 + a3[43]) = *(_BYTE *)(a2 + a3[43]);
  *(_QWORD *)(a1 + a3[44]) = *(_QWORD *)(a2 + a3[44]);
  *(_BYTE *)(a1 + a3[45]) = *(_BYTE *)(a2 + a3[45]);
  *(_BYTE *)(a1 + a3[46]) = *(_BYTE *)(a2 + a3[46]);
  *(_BYTE *)(a1 + a3[47]) = *(_BYTE *)(a2 + a3[47]);
  *(_QWORD *)(a1 + a3[48]) = *(_QWORD *)(a2 + a3[48]);
  *(_QWORD *)(a1 + a3[49]) = *(_QWORD *)(a2 + a3[49]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C014D170(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v7 = a3[24];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1C03036C4();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[25];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  if (__swift_getEnumTagSinglePayload(a2 + v12, 1, v10))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v13, v14, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v10);
  }
  v16 = a3[26];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  if (__swift_getEnumTagSinglePayload(a2 + v16, 1, v10))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v17, v18, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v10);
  }
  v20 = a3[28];
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v21 = a3[30];
  *(_BYTE *)(a1 + a3[29]) = *(_BYTE *)(a2 + a3[29]);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  v22 = a3[32];
  *(_BYTE *)(a1 + a3[31]) = *(_BYTE *)(a2 + a3[31]);
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  v23 = a3[34];
  *(_BYTE *)(a1 + a3[33]) = *(_BYTE *)(a2 + a3[33]);
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  v24 = a3[36];
  *(_BYTE *)(a1 + a3[35]) = *(_BYTE *)(a2 + a3[35]);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  v25 = a3[38];
  *(_BYTE *)(a1 + a3[37]) = *(_BYTE *)(a2 + a3[37]);
  *(_BYTE *)(a1 + v25) = *(_BYTE *)(a2 + v25);
  v26 = a3[39];
  v27 = a3[40];
  v28 = a1 + v26;
  v29 = a2 + v26;
  v30 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v30;
  *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
  *(_QWORD *)(v28 + 48) = *(_QWORD *)(v29 + 48);
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);
  v31 = a3[42];
  *(_BYTE *)(a1 + a3[41]) = *(_BYTE *)(a2 + a3[41]);
  *(_BYTE *)(a1 + v31) = *(_BYTE *)(a2 + v31);
  v32 = a3[44];
  *(_BYTE *)(a1 + a3[43]) = *(_BYTE *)(a2 + a3[43]);
  *(_QWORD *)(a1 + v32) = *(_QWORD *)(a2 + v32);
  v33 = a3[46];
  *(_BYTE *)(a1 + a3[45]) = *(_BYTE *)(a2 + a3[45]);
  *(_BYTE *)(a1 + v33) = *(_BYTE *)(a2 + v33);
  v34 = a3[48];
  *(_BYTE *)(a1 + a3[47]) = *(_BYTE *)(a2 + a3[47]);
  *(_QWORD *)(a1 + v34) = *(_QWORD *)(a2 + v34);
  *(_QWORD *)(a1 + a3[49]) = *(_QWORD *)(a2 + a3[49]);
  return a1;
}

uint64_t sub_1C014D444(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  *(_BYTE *)(a1 + 53) = *(_BYTE *)(a2 + 53);
  *(_BYTE *)(a1 + 54) = *(_BYTE *)(a2 + 54);
  *(_BYTE *)(a1 + 55) = *(_BYTE *)(a2 + 55);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_BYTE *)(a1 + 82) = *(_BYTE *)(a2 + 82);
  *(_BYTE *)(a1 + 83) = *(_BYTE *)(a2 + 83);
  v6 = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v7 = a3[24];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 88) = v6;
  v10 = sub_1C03036C4();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  v15 = a3[25];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = __swift_getEnumTagSinglePayload(a1 + v15, 1, v10);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v10);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v16, v17, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v20 = *(_QWORD *)(v10 - 8);
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v16, v10);
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v20 + 40))(v16, v17, v10);
LABEL_13:
  v22 = a3[26];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  v25 = __swift_getEnumTagSinglePayload(a1 + v22, 1, v10);
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v10);
  if (!v25)
  {
    v27 = *(_QWORD *)(v10 - 8);
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(v27 + 40))(v23, v24, v10);
      goto LABEL_19;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v23, v10);
    goto LABEL_18;
  }
  if (v26)
  {
LABEL_18:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v23, v24, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v10);
LABEL_19:
  v29 = a3[28];
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  v30 = a3[30];
  *(_BYTE *)(a1 + a3[29]) = *(_BYTE *)(a2 + a3[29]);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  v31 = a3[32];
  *(_BYTE *)(a1 + a3[31]) = *(_BYTE *)(a2 + a3[31]);
  *(_BYTE *)(a1 + v31) = *(_BYTE *)(a2 + v31);
  v32 = a3[34];
  *(_BYTE *)(a1 + a3[33]) = *(_BYTE *)(a2 + a3[33]);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  v33 = a3[36];
  *(_BYTE *)(a1 + a3[35]) = *(_BYTE *)(a2 + a3[35]);
  v34 = (_QWORD *)(a1 + v33);
  v35 = (uint64_t *)(a2 + v33);
  v37 = *v35;
  v36 = v35[1];
  *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  v38 = a3[38];
  *(_BYTE *)(a1 + a3[37]) = *(_BYTE *)(a2 + a3[37]);
  *(_BYTE *)(a1 + v38) = *(_BYTE *)(a2 + v38);
  v39 = a3[39];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_QWORD *)v40 = *(_QWORD *)(a2 + v39);
  *(_BYTE *)(v40 + 8) = *(_BYTE *)(a2 + v39 + 8);
  *(_BYTE *)(v40 + 9) = *(_BYTE *)(a2 + v39 + 9);
  *(_BYTE *)(v40 + 10) = *(_BYTE *)(a2 + v39 + 10);
  *(_BYTE *)(v40 + 11) = *(_BYTE *)(a2 + v39 + 11);
  *(_BYTE *)(v40 + 12) = *(_BYTE *)(a2 + v39 + 12);
  *(_BYTE *)(v40 + 13) = *(_BYTE *)(a2 + v39 + 13);
  *(_BYTE *)(v40 + 14) = *(_BYTE *)(a2 + v39 + 14);
  *(_BYTE *)(v40 + 15) = *(_BYTE *)(a2 + v39 + 15);
  *(_BYTE *)(v40 + 16) = *(_BYTE *)(a2 + v39 + 16);
  *(_BYTE *)(v40 + 17) = *(_BYTE *)(a2 + v39 + 17);
  *(_BYTE *)(v40 + 18) = *(_BYTE *)(a2 + v39 + 18);
  *(_BYTE *)(v40 + 19) = *(_BYTE *)(a2 + v39 + 19);
  v42 = *(_QWORD *)(a2 + v39 + 32);
  *(_QWORD *)(v40 + 24) = *(_QWORD *)(a2 + v39 + 24);
  *(_QWORD *)(v40 + 32) = v42;
  swift_bridgeObjectRelease();
  v43 = *(_QWORD *)(v41 + 48);
  *(_QWORD *)(v40 + 40) = *(_QWORD *)(v41 + 40);
  *(_QWORD *)(v40 + 48) = v43;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[40]) = *(_QWORD *)(a2 + a3[40]);
  swift_bridgeObjectRelease();
  v44 = a3[42];
  *(_BYTE *)(a1 + a3[41]) = *(_BYTE *)(a2 + a3[41]);
  *(_BYTE *)(a1 + v44) = *(_BYTE *)(a2 + v44);
  v45 = a3[44];
  *(_BYTE *)(a1 + a3[43]) = *(_BYTE *)(a2 + a3[43]);
  *(_QWORD *)(a1 + v45) = *(_QWORD *)(a2 + v45);
  v46 = a3[46];
  *(_BYTE *)(a1 + a3[45]) = *(_BYTE *)(a2 + a3[45]);
  *(_BYTE *)(a1 + v46) = *(_BYTE *)(a2 + v46);
  v47 = a3[48];
  *(_BYTE *)(a1 + a3[47]) = *(_BYTE *)(a2 + a3[47]);
  *(_QWORD *)(a1 + v47) = *(_QWORD *)(a2 + v47);
  *(_QWORD *)(a1 + a3[49]) = *(_QWORD *)(a2 + a3[49]);
  swift_release();
  return a1;
}

uint64_t sub_1C014D8F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C014D900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    OUTLINED_FUNCTION_46(a1 + *(int *)(a3 + 96), a2, v6);
  else
    OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C014D974()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C014D980(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    OUTLINED_FUNCTION_49_3(a1 + *(int *)(a4 + 96), a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 144) + 8) = (a2 - 1);
    OUTLINED_FUNCTION_37_0();
  }
}

void sub_1C014D9F0()
{
  unint64_t v0;

  sub_1C014C13C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_1C014DAFC()
{
  unint64_t result;

  result = qword_1EF5BCE68;
  if (!qword_1EF5BCE68)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030F160, &type metadata for PrivatizedBgHandleSignalSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BCE68);
  }
  return result;
}

unint64_t sub_1C014DB38()
{
  unint64_t result;

  result = qword_1EF5BCE80;
  if (!qword_1EF5BCE80)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030F110, &type metadata for PrivatizedSignalSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BCE80);
  }
  return result;
}

uint64_t sub_1C014DB74(uint64_t a1)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_56_0(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED726DB8);
    sub_1C014B340((uint64_t)&unk_1EF5BCEA0);
    sub_1C014B340((uint64_t)&unk_1EF5BCEA8);
    OUTLINED_FUNCTION_74_2();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PrivatizedSignalSet.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xD3)
  {
    if (a2 + 45 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 45) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 46;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x2E;
  v5 = v6 - 46;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PrivatizedSignalSet.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 45 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 45) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xD3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD2)
    return ((uint64_t (*)(void))((char *)&loc_1C014DCF0 + 4 * byte_1C030EC0A[v4]))();
  *a1 = a2 + 45;
  return ((uint64_t (*)(void))((char *)sub_1C014DD24 + 4 * byte_1C030EC05[v4]))();
}

uint64_t sub_1C014DD24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C014DD2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C014DD34);
  return result;
}

uint64_t sub_1C014DD40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C014DD48);
  *(_BYTE *)result = a2 + 45;
  return result;
}

uint64_t sub_1C014DD4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C014DD54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PrivatizedSignalSet.CodingKeys()
{
  return &type metadata for PrivatizedSignalSet.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PrivatizedBgHandleSignalSet.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C014DDB0 + 4 * byte_1C030EC0F[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C014DDD0 + 4 * byte_1C030EC14[v4]))();
}

_BYTE *sub_1C014DDB0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C014DDD0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C014DDD8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C014DDE0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C014DDE8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C014DDF0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PrivatizedBgHandleSignalSet.CodingKeys()
{
  return &type metadata for PrivatizedBgHandleSignalSet.CodingKeys;
}

ValueMetadata *type metadata accessor for PrivatizedBgSignalSet()
{
  return &type metadata for PrivatizedBgSignalSet;
}

unint64_t sub_1C014DE20()
{
  unint64_t result;

  result = qword_1EF5BCEC8;
  if (!qword_1EF5BCEC8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030F030, &type metadata for PrivatizedBgHandleSignalSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BCEC8);
  }
  return result;
}

unint64_t sub_1C014DE60()
{
  unint64_t result;

  result = qword_1EF5BCED0;
  if (!qword_1EF5BCED0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030F0E8, &type metadata for PrivatizedSignalSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BCED0);
  }
  return result;
}

unint64_t sub_1C014DEA0()
{
  unint64_t result;

  result = qword_1EF5BCED8;
  if (!qword_1EF5BCED8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030F058, &type metadata for PrivatizedSignalSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BCED8);
  }
  return result;
}

unint64_t sub_1C014DEE0()
{
  unint64_t result;

  result = qword_1EF5BCEE0;
  if (!qword_1EF5BCEE0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030F080, &type metadata for PrivatizedSignalSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BCEE0);
  }
  return result;
}

unint64_t sub_1C014DF20()
{
  unint64_t result;

  result = qword_1EF5BCEE8;
  if (!qword_1EF5BCEE8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030EFA0, &type metadata for PrivatizedBgHandleSignalSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BCEE8);
  }
  return result;
}

unint64_t sub_1C014DF60()
{
  unint64_t result;

  result = qword_1EF5BCEF0;
  if (!qword_1EF5BCEF0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030EFC8, &type metadata for PrivatizedBgHandleSignalSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BCEF0);
  }
  return result;
}

unint64_t sub_1C014DF9C()
{
  unint64_t result;

  result = qword_1EF5BCF00;
  if (!qword_1EF5BCF00)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030F2B8, &type metadata for PrivatizedBgSignalSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BCF00);
  }
  return result;
}

unint64_t sub_1C014DFD8()
{
  unint64_t result;

  result = qword_1EF5BCF20;
  if (!qword_1EF5BCF20)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030EF38, &type metadata for PrivatizedBgHandleSignalSet);
    atomic_store(result, (unint64_t *)&qword_1EF5BCF20);
  }
  return result;
}

unint64_t sub_1C014E014()
{
  unint64_t result;

  result = qword_1EF5BCF28;
  if (!qword_1EF5BCF28)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030EF10, &type metadata for PrivatizedBgHandleSignalSet);
    atomic_store(result, (unint64_t *)&qword_1EF5BCF28);
  }
  return result;
}

uint64_t sub_1C014E050(uint64_t a1)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_56_0(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EF5B8F00);
    sub_1C014DFD8();
    sub_1C014E014();
    OUTLINED_FUNCTION_74_2();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PrivatizedBgSignalSet.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C014E10C + 4 * byte_1C030EC1E[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C014E140 + 4 * byte_1C030EC19[v4]))();
}

uint64_t sub_1C014E140(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C014E148(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C014E150);
  return result;
}

uint64_t sub_1C014E15C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C014E164);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C014E168(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C014E170(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PrivatizedBgSignalSet.CodingKeys()
{
  return &type metadata for PrivatizedBgSignalSet.CodingKeys;
}

unint64_t sub_1C014E190()
{
  unint64_t result;

  result = qword_1EF5BCF48;
  if (!qword_1EF5BCF48)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030F290, &type metadata for PrivatizedBgSignalSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BCF48);
  }
  return result;
}

unint64_t sub_1C014E1D0()
{
  unint64_t result;

  result = qword_1EF5BCF50;
  if (!qword_1EF5BCF50)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030F200, &type metadata for PrivatizedBgSignalSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BCF50);
  }
  return result;
}

unint64_t sub_1C014E210()
{
  unint64_t result;

  result = qword_1EF5BCF58;
  if (!qword_1EF5BCF58)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030F228, &type metadata for PrivatizedBgSignalSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BCF58);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_56@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 136) = a1;
  return sub_1C030496C();
}

uint64_t OUTLINED_FUNCTION_1_48@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 136) = a1;
  return sub_1C03048B8();
}

uint64_t OUTLINED_FUNCTION_3_57()
{
  return sub_1C030496C();
}

uint64_t OUTLINED_FUNCTION_4_44()
{
  return sub_1C03048B8();
}

uint64_t OUTLINED_FUNCTION_5_36()
{
  return sub_1C03048B8();
}

uint64_t OUTLINED_FUNCTION_6_35(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, *(_QWORD *)(v1 - 216));
}

uint64_t OUTLINED_FUNCTION_9_34@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_BYTE *)(v2 + a2) = result & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_10_39@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 136) = a1;
  return sub_1C0304978();
}

uint64_t OUTLINED_FUNCTION_11_34()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 200), *(_QWORD *)(v1 - 192));
}

uint64_t OUTLINED_FUNCTION_12_25@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 136) = a1;
  return sub_1C03048C4();
}

uint64_t OUTLINED_FUNCTION_16_21@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 136) = a1;
  return sub_1C0304984();
}

uint64_t OUTLINED_FUNCTION_18_23()
{
  return sub_1C03048A0();
}

uint64_t OUTLINED_FUNCTION_19_23()
{
  return sub_1C0304954();
}

uint64_t OUTLINED_FUNCTION_20_14@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 136) = a1;
  return sub_1C03048D0();
}

uint64_t OUTLINED_FUNCTION_25_14()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 120) + 8))(v0, *(_QWORD *)(v1 - 112));
}

uint64_t OUTLINED_FUNCTION_27_19()
{
  return sub_1C030499C();
}

uint64_t OUTLINED_FUNCTION_40_12@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_41_10()
{
  return sub_1C0303E80();
}

uint64_t OUTLINED_FUNCTION_43_11()
{
  return sub_1C0304BA0();
}

uint64_t OUTLINED_FUNCTION_45_9()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_57_5()
{
  return sub_1C03036C4();
}

uint64_t OUTLINED_FUNCTION_61_3()
{
  return sub_1C03036C4();
}

uint64_t OUTLINED_FUNCTION_68_3()
{
  return sub_1C0304B88();
}

uint64_t OUTLINED_FUNCTION_69_5()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C014E404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t);
  uint64_t v10;

  v0 = sub_1C0301690();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v10 - v6;
  __swift_allocate_value_buffer(v5, qword_1ED727C90);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED727C90);
  sub_1C0301678();
  sub_1C030166C();
  sub_1C0301684();
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  return ((uint64_t (*)(char *, uint64_t))v8)(v7, v0);
}

uint64_t sub_1C014E4DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v6 = a3;
  v8 = a1;
  v10 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, v13, v14);
  v44 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(v6, a4);
  v46 = v15;
  v42 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(v6, a4);
  v43 = v12;
  v45 = v16;
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(v6, a4);
  v17 = sub_1C0303F10();
  v19 = v18;
  swift_bridgeObjectRelease();
  v47 = v17;
  v48 = v19;
  if (qword_1ED727DA8 != -1)
    swift_once();
  v20 = sub_1C0301690();
  __swift_project_value_buffer(v20, (uint64_t)qword_1ED727C90);
  sub_1C004F408();
  v21 = sub_1C03044C8();
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v38 = v8;
    v39 = a2;
    v40 = v10;
    v41 = v6;
    swift_bridgeObjectRetain();
    v23 = (uint64_t *)(v21 + 40);
    v24 = MEMORY[0x1E0DEE9D8];
    do
    {
      v26 = *(v23 - 1);
      v25 = *v23;
      v27 = HIBYTE(*v23) & 0xF;
      if ((*v23 & 0x2000000000000000) == 0)
        v27 = v26 & 0xFFFFFFFFFFFFLL;
      if (v27)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C00500A0();
          v24 = v30;
        }
        v28 = *(_QWORD *)(v24 + 16);
        if (v28 >= *(_QWORD *)(v24 + 24) >> 1)
        {
          sub_1C00500A0();
          v24 = v31;
        }
        *(_QWORD *)(v24 + 16) = v28 + 1;
        v29 = v24 + 16 * v28;
        *(_QWORD *)(v29 + 32) = v26;
        *(_QWORD *)(v29 + 40) = v25;
      }
      v23 += 2;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    v10 = v40;
    v6 = v41;
    v8 = v38;
    a2 = v39;
  }
  else
  {
    v24 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v32 = v44;
  if (*(_QWORD *)(v24 + 16))
  {
    v34 = v45;
    v33 = v46;
    v35 = v42;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = 0;
    a2 = 0;
    v32 = 0;
    v33 = 0;
    v35 = 0;
    v34 = 0;
    v24 = 0;
  }
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v43, v6);
  *a5 = v8;
  a5[1] = a2;
  a5[2] = v32;
  a5[3] = v33;
  a5[4] = v35;
  a5[5] = v34;
  a5[6] = v24;
  return result;
}

_QWORD *assignWithCopy for MemorableEntity(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MemorableEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MemorableEntity()
{
  return &type metadata for MemorableEntity;
}

uint64_t TerminalElement.Interval.toInterval()()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  _BYTE v14[12];
  char v15;
  char v16;
  char v17[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BBED8);
  MEMORY[0x1E0C80A78](v0);
  v2 = &v14[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BBEC8);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1C0302980();
  v8 = v7;
  sub_1C0302974();
  v9 = sub_1C0302944();
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v9) == 1)
  {
    sub_1C0056C9C((uint64_t)v5, &qword_1EF5BBEC8);
    v10 = 13;
  }
  else
  {
    sub_1C022A314();
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v5, v9);
    v10 = v17[1];
  }
  v17[0] = v10;
  sub_1C030298C();
  v11 = sub_1C03029BC();
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v11) == 1)
  {
    sub_1C0056C9C((uint64_t)v2, &qword_1EF5BBED8);
    v12 = 20;
  }
  else
  {
    TerminalElement.Qualifier.toQualifier()(&v16);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v2, v11);
    v12 = v16;
  }
  v15 = v12;
  type metadata accessor for DateTime.Interval();
  swift_allocObject();
  return DateTime.Interval.init(withQuantity:timeUnit:qualifier:)(v6, v8 & 1, v17, &v15);
}

void sub_1C014EA68(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;
  int v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v22 = a2;
  v7 = type metadata accessor for LearnedDisambiguation();
  v20 = *(_QWORD *)(v7 - 8);
  v21 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a4 >> 1;
  v23 = a3;
  v11 = __OFSUB__(a4 >> 1, a3);
  v12 = (a4 >> 1) - a3;
  if (v11)
    goto LABEL_19;
  if (v12)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1C10();
    if (v12 < 0)
    {
LABEL_20:
      __break(1u);
      return;
    }
    v19[1] = v4;
    for (i = 0; ; ++i)
    {
      v14 = i + 1;
      if (__OFADD__(i, 1))
        break;
      if (v23 + i >= v10 || i >= v12)
        goto LABEL_18;
      sub_1C0150CBC(v22 + *(_QWORD *)(v20 + 72) * (v23 + i), (uint64_t)v9);
      v16 = *(_DWORD *)&v9[*(int *)(v21 + 32)];
      sub_1C0150D00((uint64_t)v9);
      v17 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C00B1C10();
        v17 = v24;
      }
      v18 = *(_QWORD *)(v17 + 16);
      if (v18 >= *(_QWORD *)(v17 + 24) >> 1)
      {
        sub_1C00B1C10();
        v17 = v24;
      }
      *(_QWORD *)(v17 + 16) = v18 + 1;
      *(_DWORD *)(v17 + 4 * v18 + 32) = v16;
      if (v14 == v12)
        return;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
}

uint64_t sub_1C014EC0C()
{
  os_log_type_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  Class isa;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  BOOL v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  BOOL v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  os_log_type_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unsigned __int8 *v38;
  __int16 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  os_log_type_t KeyPath;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unsigned __int8 *v55;
  __int16 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  OUTLINED_FUNCTION_18_0();
  v71 = v2;
  v72 = v3;
  v5 = v4;
  v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCF90);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_12_26();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v66 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCF98);
  isa = v12[-1].isa;
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_19_2();
  v16 = v14 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v66 - v18;
  if (v5)
  {
    v20 = v7 == 0x6563726F66 && v5 == 0xE500000000000000;
    if (v20 || (sub_1C0304A08() & 1) != 0)
    {
      OUTLINED_FUNCTION_29();
      if (qword_1EF5B7F30 != -1)
        swift_once();
      v21 = OUTLINED_FUNCTION_9_0();
      __swift_project_value_buffer(v21, (uint64_t)qword_1EF5FC710);
      OUTLINED_FUNCTION_33_0();
      v22 = OUTLINED_FUNCTION_42_0();
      if (OUTLINED_FUNCTION_4_1(v22))
      {
        v23 = (uint8_t *)OUTLINED_FUNCTION_4_0();
        *(_WORD *)v23 = 0;
        OUTLINED_FUNCTION_10_3(&dword_1C0039000, v12, v0, "LearnedChoiceExtractor: Using default strategy for prediction but will always disambiguate.", v23);
        OUTLINED_FUNCTION_5();
      }

      return 3;
    }
    v26 = v7 == 0x74736574616CLL && v5 == 0xE600000000000000;
    if (v26 || (sub_1C0304A08() & 1) != 0)
    {
      OUTLINED_FUNCTION_29();
      return 0;
    }
    v68 = v7;
    v69 = v5;
    if (qword_1EF5B7F50 != -1)
      swift_once();
    v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCFA0);
    v66 = __swift_project_value_buffer(v67, (uint64_t)qword_1EF5BCF60);
    v27 = sub_1C004F444();
    sub_1C0150A88(&qword_1EF5BCFA8, &qword_1EF5BCFA0);
    v66 = v27;
    sub_1C0303E38();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12) == 1)
    {
      sub_1C003E978((uint64_t)v11, &qword_1EF5BCF90);
      v68 = v7;
      v69 = v5;
      if (qword_1EF5B7F58 != -1)
        swift_once();
      __swift_project_value_buffer(v67, (uint64_t)qword_1EF5BCF78);
      sub_1C0303E38();
      if (__swift_getEnumTagSinglePayload(v1, 1, (uint64_t)v12) == 1)
      {
        sub_1C003E978(v1, &qword_1EF5BCF90);
        if (qword_1EF5B7F30 != -1)
          swift_once();
        v28 = OUTLINED_FUNCTION_9_0();
        __swift_project_value_buffer(v28, (uint64_t)qword_1EF5FC710);
        OUTLINED_FUNCTION_65();
        v29 = sub_1C0303B80();
        v30 = sub_1C03042F4();
        if (os_log_type_enabled(v29, v30))
        {
          v31 = (uint8_t *)OUTLINED_FUNCTION_4_0();
          v68 = OUTLINED_FUNCTION_4_0();
          *(_DWORD *)v31 = 136315138;
          OUTLINED_FUNCTION_65();
          v70 = sub_1C003E6D8(v7, v5, &v68);
          sub_1C03044B0();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C0039000, v29, v30, "LearnedChoiceExtractor: Could not parse [%s]", v31, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_5();
        }

        OUTLINED_FUNCTION_2();
        return 3;
      }
      OUTLINED_FUNCTION_29();
      (*((void (**)(uint64_t, uint64_t, NSObject *))isa + 4))(v16, v1, v12);
      KeyPath = swift_getKeyPath();
      sub_1C030391C();
      swift_release();
      if ((v69 ^ v68) >> 14)
      {
        v50 = OUTLINED_FUNCTION_14_30();
        sub_1C0150534(v50, v51, v52, v53, v54);
        if ((v56 & 0x100) != 0)
        {
          v57 = OUTLINED_FUNCTION_14_30();
          v55 = sub_1C01501D0(v57, v58, v59, v60, v61);
        }
        v24 = (uint64_t)v55;
        KeyPath = v56;
        swift_bridgeObjectRelease();
        if ((KeyPath & 1) == 0)
          goto LABEL_53;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if (qword_1EF5B7F30 != -1)
        swift_once();
      v62 = OUTLINED_FUNCTION_9_0();
      __swift_project_value_buffer(v62, (uint64_t)qword_1EF5FC710);
      v63 = OUTLINED_FUNCTION_33_0();
      v64 = sub_1C03042F4();
      if (OUTLINED_FUNCTION_6_1(v64))
      {
        v65 = (uint8_t *)OUTLINED_FUNCTION_4_0();
        *(_WORD *)v65 = 0;
        OUTLINED_FUNCTION_10_3(&dword_1C0039000, v63, KeyPath, "LearnedChoiceExtractor: Could not get Int count", v65);
        OUTLINED_FUNCTION_5();
      }

      v24 = 3;
LABEL_53:
      (*((void (**)(uint64_t, NSObject *))isa + 1))(v16, v12);
      return v24;
    }
    OUTLINED_FUNCTION_29();
    (*((void (**)(char *, char *, NSObject *))isa + 4))(v19, v11, v12);
    v32 = swift_getKeyPath();
    sub_1C030391C();
    swift_release();
    if ((v69 ^ v68) >> 14)
    {
      v33 = OUTLINED_FUNCTION_15_23();
      sub_1C0150534(v33, v34, v35, v36, v37);
      if ((v39 & 0x100) != 0)
      {
        v40 = OUTLINED_FUNCTION_15_23();
        v38 = sub_1C01501D0(v40, v41, v42, v43, v44);
      }
      v24 = (uint64_t)v38;
      v32 = v39;
      swift_bridgeObjectRelease();
      if ((v32 & 1) == 0)
        goto LABEL_39;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v45 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v45, (uint64_t)qword_1EF5FC710);
    v46 = OUTLINED_FUNCTION_33_0();
    v47 = sub_1C03042F4();
    if (OUTLINED_FUNCTION_6_1(v47))
    {
      v48 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      *(_WORD *)v48 = 0;
      OUTLINED_FUNCTION_10_3(&dword_1C0039000, v46, v32, "LearnedChoiceExtractor: Could not get Int count", v48);
      OUTLINED_FUNCTION_5();
    }

    v24 = 3;
LABEL_39:
    (*((void (**)(char *, NSObject *))isa + 1))(v19, v12);
    return v24;
  }
  return 3;
}

uint64_t sub_1C014F2F0()
{
  sub_1C03047B0();
  return 0;
}

void sub_1C014F340()
{
  os_log_type_t v0;
  os_log_type_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  os_log_type_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[2];
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;

  OUTLINED_FUNCTION_18_0();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v88 = v10;
  v11 = sub_1C0301CFC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_19_2();
  v15 = v13 - v14;
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_37();
  v85 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD008);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_27();
  v86 = v19;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v80 - v21;
  type metadata accessor for LearnedDisambiguation();
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_19_2();
  v26 = v24 - v25;
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_37();
  if (!v9)
    goto LABEL_4;
  v83 = v11;
  v84 = v31;
  v32 = v30;
  v33 = swift_bridgeObjectRetain();
  sub_1C020E798(v33, (uint64_t)v22);
  v87 = v32;
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v32) != 1)
  {
    v37 = v84;
    sub_1C0150C78((uint64_t)v22, v84);
    if ((_BYTE)v5)
    {
      if (v5 == 1)
      {
        v22 = *(char **)(v9 + 16);
        if ((uint64_t)v22 < v7)
        {
          if (qword_1EF5B7F30 == -1)
          {
LABEL_11:
            v38 = OUTLINED_FUNCTION_9_0();
            __swift_project_value_buffer(v38, (uint64_t)qword_1EF5FC710);
            OUTLINED_FUNCTION_31_14();
            sub_1C0303B80();
            v39 = OUTLINED_FUNCTION_42_0();
            if (OUTLINED_FUNCTION_4_1(v39))
            {
              v40 = OUTLINED_FUNCTION_4_0();
              *(_DWORD *)v40 = 134218240;
              v90 = (char *)v7;
              OUTLINED_FUNCTION_24_14();
              *(_WORD *)(v40 + 12) = 2048;
              OUTLINED_FUNCTION_8_1();
              v90 = v22;
              OUTLINED_FUNCTION_24_14();
              OUTLINED_FUNCTION_8_1();
              OUTLINED_FUNCTION_38_8(&dword_1C0039000, v5, v1, "LearnedChoiceExtractor: Not enough learnings; need %ld but found %ld",
                (uint8_t *)v40);
              OUTLINED_FUNCTION_5();
            }

            OUTLINED_FUNCTION_2();
            v66 = v86;
            OUTLINED_FUNCTION_22_0(v86, v67, v68, v87);
            v69 = v37;
LABEL_33:
            sub_1C0150D00(v69);
            v77 = v66;
            v34 = v88;
LABEL_34:
            sub_1C0150D3C(v77, v34);
            goto LABEL_5;
          }
LABEL_37:
          swift_once();
          goto LABEL_11;
        }
        v5 = sub_1C014FA70(v7, v9);
        v56 = v55;
        v58 = v57;
        v60 = v59;
        swift_bridgeObjectRetain();
        sub_1C014EA68(v5, v56, v58, v60);
        v62 = v61;
        swift_unknownObjectRelease();
        v63 = sub_1C01AB168(v62);
        if (*(_QWORD *)(v63 + 16) != 1)
        {
          if (qword_1EF5B7F30 != -1)
            swift_once();
          v70 = OUTLINED_FUNCTION_9_0();
          __swift_project_value_buffer(v70, (uint64_t)qword_1EF5FC710);
          OUTLINED_FUNCTION_31_14();
          OUTLINED_FUNCTION_65();
          sub_1C0303B80();
          v71 = OUTLINED_FUNCTION_42_0();
          if (OUTLINED_FUNCTION_4_1(v71))
          {
            v72 = OUTLINED_FUNCTION_4_0();
            *(_DWORD *)v72 = 134218240;
            OUTLINED_FUNCTION_8_1();
            v90 = v22;
            sub_1C03044B0();
            OUTLINED_FUNCTION_8_1();
            *(_WORD *)(v72 + 12) = 2048;
            v73 = *(char **)(v63 + 16);
            OUTLINED_FUNCTION_29();
            v90 = v73;
            sub_1C03044B0();
            OUTLINED_FUNCTION_29();
            OUTLINED_FUNCTION_38_8(&dword_1C0039000, v5, (os_log_type_t)v62, "LearnedChoiceExtractor: Last %ld learnings have %ld different selections.", (uint8_t *)v72);
            OUTLINED_FUNCTION_5();
          }

          OUTLINED_FUNCTION_2();
          OUTLINED_FUNCTION_2();
          v66 = v86;
          OUTLINED_FUNCTION_22_0(v86, v78, v79, v87);
          v69 = v84;
          goto LABEL_33;
        }
        OUTLINED_FUNCTION_29();
        OUTLINED_FUNCTION_8_1();
        v64 = v84;
        OUTLINED_FUNCTION_11_35(v84);
        OUTLINED_FUNCTION_13_25();
        v65 = v64;
LABEL_25:
        sub_1C0150D00(v65);
        v34 = v88;
        sub_1C0150D3C(v5, v88);
        v35 = 2;
        goto LABEL_6;
      }
      OUTLINED_FUNCTION_8_1();
      OUTLINED_FUNCTION_11_35(v37);
      OUTLINED_FUNCTION_13_25();
LABEL_24:
      v65 = v37;
      goto LABEL_25;
    }
    v41 = OUTLINED_FUNCTION_8_1();
    v5 = 60 * v7;
    if ((unsigned __int128)(v7 * (__int128)60) >> 64 == (60 * v7) >> 63)
    {
      v42 = v3(v41);
      v22 = v85;
      if (!__OFSUB__(v42, v5))
      {
        sub_1C0301C0C();
        v43 = v87;
        v5 = v37 + *(int *)(v87 + 24);
        sub_1C0150D84(&qword_1ED728350, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
        v44 = v83;
        if ((sub_1C0303E5C() & 1) != 0)
        {
          if (qword_1EF5B7F30 != -1)
            swift_once();
          v45 = OUTLINED_FUNCTION_9_0();
          __swift_project_value_buffer(v45, (uint64_t)qword_1EF5FC710);
          sub_1C0150CBC(v37, v26);
          v46 = v83;
          (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v15, v22, v83);
          v47 = sub_1C0303B80();
          v48 = sub_1C03042E8();
          v49 = (void (*)(char *, uint64_t))v48;
          if (os_log_type_enabled(v47, v48))
          {
            v50 = OUTLINED_FUNCTION_4_0();
            v82 = OUTLINED_FUNCTION_4_0();
            v90 = (char *)v82;
            *(_DWORD *)v50 = 136315394;
            v80[1] = v50 + 4;
            sub_1C0150D84(&qword_1ED728060, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
            v51 = sub_1C03049E4();
            v89 = OUTLINED_FUNCTION_53_0(v51, v52);
            v81 = (int)v49;
            sub_1C03044B0();
            OUTLINED_FUNCTION_14();
            sub_1C0150D00(v26);
            *(_WORD *)(v50 + 12) = 2080;
            v53 = sub_1C03049E4();
            v89 = OUTLINED_FUNCTION_53_0(v53, v54);
            sub_1C03044B0();
            OUTLINED_FUNCTION_14();
            OUTLINED_FUNCTION_16_22();
            OUTLINED_FUNCTION_38_8(&dword_1C0039000, v47, (os_log_type_t)v81, "LearnedChoiceExtractor: Timestamp %s is older than the cutoff %s", (uint8_t *)v50);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_5();
          }
          sub_1C0150D00(v26);
          OUTLINED_FUNCTION_16_22();

          v34 = v88;
          v74 = v86;
          OUTLINED_FUNCTION_22_0(v86, v75, v76, v87);
          v49(v22, v46);
          sub_1C0150D00(v37);
          v77 = v74;
          goto LABEL_34;
        }
        OUTLINED_FUNCTION_11_35(v37);
        __swift_storeEnumTagSinglePayload(v5, 0, 1, v43);
        (*(void (**)(char *, uint64_t))(v12 + 8))(v22, v44);
        goto LABEL_24;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_37;
  }
  OUTLINED_FUNCTION_8_1();
  sub_1C003E978((uint64_t)v22, &qword_1EF5BD008);
  v30 = v87;
LABEL_4:
  v34 = v88;
  OUTLINED_FUNCTION_22_0(v88, v28, v29, v30);
LABEL_5:
  v35 = 0;
LABEL_6:
  v36 = type metadata accessor for LearningResult();
  *(_OWORD *)(v34 + *(int *)(v36 + 20)) = xmmword_1C030F320;
  *(_BYTE *)(v34 + *(int *)(v36 + 24)) = v35;
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C014FA70(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1C0104668(v3, -result, 0, a2);
  if ((v4 & 1) != 0)
    v5 = 0;
  else
    v5 = result;
  if (v3 < v5)
    goto LABEL_9;
  if ((v5 & 0x8000000000000000) == 0)
  {
    type metadata accessor for LearnedDisambiguation();
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1C014FAFC(uint64_t a1)
{
  return sub_1C014FB38(a1, qword_1EF5BCF60);
}

void sub_1C014FB10()
{
  sub_1C014FBF0();
}

uint64_t sub_1C014FB24(uint64_t a1)
{
  return sub_1C014FB38(a1, qword_1EF5BCF78);
}

uint64_t sub_1C014FB38(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCFA0);
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCFB8);
  sub_1C0150A88(&qword_1EF5BCFA8, &qword_1EF5BCFA0);
  return sub_1C0303910();
}

void sub_1C014FBD8()
{
  sub_1C014FBF0();
}

void sub_1C014FBF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  char *v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  OUTLINED_FUNCTION_18_0();
  v2 = v1;
  v4 = v3;
  v43 = v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCFC0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = v6;
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_27();
  v42 = v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v34 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCFA0);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_32_0();
  v14 = sub_1C03038EC();
  v39 = *(_QWORD *)(v14 - 8);
  v37 = v14;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCFC8);
  v19 = *(_QWORD *)(v18 - 8);
  v40 = v18;
  v41 = v19;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_19_2();
  v23 = v21 - v22;
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_37();
  v36 = v25;
  v44 = v4;
  v45 = v2;
  v38 = sub_1C004F480();
  sub_1C03024D0();
  sub_1C03024E8();
  sub_1C014FEC8();
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCFB8);
  sub_1C0150A88(&qword_1EF5BCFD0, &qword_1EF5BCFC0);
  sub_1C03038D4();
  v35 = *(void (**)(char *, uint64_t))(v7 + 8);
  v27 = v8;
  v35(v12, v8);
  v39 = *(_QWORD *)(v39 + 8);
  ((void (*)(char *, uint64_t))v39)(v17, v14);
  MEMORY[0x1C3B953FC](v0, v26);
  sub_1C0150A88(&qword_1EF5BCFD8, &qword_1EF5BCFC8);
  v28 = v36;
  v29 = v40;
  sub_1C03024D0();
  v30 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
  v30(v23, v29);
  v44 = v46;
  v45 = v47;
  sub_1C03024DC();
  OUTLINED_FUNCTION_29();
  sub_1C03024E8();
  v31 = v42;
  sub_1C03038C8();
  sub_1C03038BC();
  v32 = v31;
  v33 = v35;
  v35(v32, v27);
  ((void (*)(char *, uint64_t))v39)(v17, v37);
  v33(v12, v27);
  v30(v28, v29);
  OUTLINED_FUNCTION_1();
}

void sub_1C014FEC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  OUTLINED_FUNCTION_18_0();
  v47 = v2;
  v3 = sub_1C03024F4();
  v4 = (void (*)(uint64_t))MEMORY[0x1E0DEFE40];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_19_2();
  v8 = v6 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v38 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCFC0);
  v13 = *(_QWORD *)(v12 - 8);
  v45 = v12;
  v46 = v13;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_27();
  v40 = v15;
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_37();
  v41 = v17;
  v18 = sub_1C03038EC();
  v43 = *(_QWORD *)(v18 - 8);
  v44 = v18;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_32_0();
  v39 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCFE0);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BCFE8);
  v42 = *(_QWORD *)(v23 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_12_26();
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v38 - v26;
  v28 = sub_1C0303904();
  OUTLINED_FUNCTION_22_0((uint64_t)v22, v29, v30, v28);
  sub_1C03024E8();
  sub_1C03038F8();
  sub_1C0150D84(&qword_1EF5BCFF0, v4);
  sub_1C03024D0();
  v31 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v31(v8, v3);
  v32 = v40;
  sub_1C03024DC();
  v31((uint64_t)v11, v3);
  sub_1C0150A88(&qword_1EF5BCFD0, &qword_1EF5BCFC0);
  v33 = MEMORY[0x1E0DEBAF0];
  v34 = v41;
  v35 = v45;
  v36 = v39;
  sub_1C03038E0();
  sub_1C003E978((uint64_t)v22, &qword_1EF5BCFE0);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v32, v35);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v36, v44);
  MEMORY[0x1C3B95408](v34, v33);
  sub_1C0150A88(&qword_1EF5BCFF8, &qword_1EF5BCFE8);
  sub_1C03024D0();
  v37 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v37(v0, v23);
  sub_1C03024DC();
  v37((uint64_t)v27, v23);
  OUTLINED_FUNCTION_1();
}

void sub_1C01501B0()
{
  sub_1C014F340();
}

uint64_t sub_1C01501C0()
{
  return sub_1C014F2F0();
}

unsigned __int8 *sub_1C01501D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  v16 = a2;
  v17 = a3;
  v18 = a4;
  sub_1C015060C();
  swift_bridgeObjectRetain();
  v7 = sub_1C0304084();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  v7 = sub_1C01BB240();
  v12 = v11;
  OUTLINED_FUNCTION_14();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (unsigned __int8 *)sub_1C0304720();
  }
LABEL_7:
  v13 = sub_1C01502B8(v9, v10, a5);
  OUTLINED_FUNCTION_14();
  return v13;
}

unsigned __int8 *sub_1C01502B8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      v15 = a2 - 1;
      if (a2 != 1)
      {
        v16 = a3 + 48;
        v17 = a3 + 55;
        v18 = a3 + 87;
        if (a3 > 10)
        {
          v16 = 58;
        }
        else
        {
          v18 = 97;
          v17 = 65;
        }
        if (result)
        {
          v9 = 0;
          v19 = result + 1;
          do
          {
            v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                v13 = 0;
                if (v20 < 0x61 || v20 >= v18)
                  return (unsigned __int8 *)v13;
                v21 = -87;
              }
              else
              {
                v21 = -55;
              }
            }
            else
            {
              v21 = -48;
            }
            v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21)))
              return 0;
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        v23 = a3 + 48;
        v24 = a3 + 55;
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v23 = 58;
        }
        else
        {
          v25 = 97;
          v24 = 65;
        }
        if (result)
        {
          v26 = 0;
          do
          {
            v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                v13 = 0;
                if (v27 < 0x61 || v27 >= v25)
                  return (unsigned __int8 *)v13;
                v28 = -87;
              }
              else
              {
                v28 = -55;
              }
            }
            else
            {
              v28 = -48;
            }
            v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
              return 0;
            v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28)))
              return 0;
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      v5 = a2 - 1;
      if (a2 != 1)
      {
        v6 = a3 + 48;
        v7 = a3 + 55;
        v8 = a3 + 87;
        if (a3 > 10)
        {
          v6 = 58;
        }
        else
        {
          v8 = 97;
          v7 = 65;
        }
        if (result)
        {
          v9 = 0;
          for (i = result + 1; ; ++i)
          {
            v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                v13 = 0;
                if (v11 < 0x61 || v11 >= v8)
                  return (unsigned __int8 *)v13;
                v12 = -87;
              }
              else
              {
                v12 = -55;
              }
            }
            else
            {
              v12 = -48;
            }
            v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12)))
              return 0;
            if (!--v5)
              return (unsigned __int8 *)v9;
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1C0150534(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  _QWORD v14[2];
  char v15;

  if ((a4 & 0x1000000000000000) != 0)
    goto LABEL_8;
  if ((a4 & 0x2000000000000000) != 0)
  {
    v12 = HIBYTE(a4) & 0xF;
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    v11 = (_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v12 = a3 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v11 = (_QWORD *)sub_1C0304720();
  }
  sub_1C0150648((uint64_t)v11, v12, a1, a2, a3, a4, a5);
  if (!v5)
  {
    v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
}

unint64_t sub_1C015060C()
{
  unint64_t result;

  result = qword_1EF5BCFB0;
  if (!qword_1EF5BCFB0)
  {
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0DEBB10], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EF5BCFB0);
  }
  return result;
}

void sub_1C0150648(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7)
{
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  int v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  uint64_t v34;
  unsigned __int8 *v35;
  uint64_t v36;
  unsigned int v37;
  char v38;
  uint64_t v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  uint64_t v43;
  unsigned __int8 *v44;
  uint64_t v45;
  unsigned int v46;
  char v47;
  uint64_t v48;
  unsigned __int8 v49;
  unsigned __int8 v50;
  unsigned __int8 v51;
  uint64_t v52;
  unsigned int v53;
  char v54;
  uint64_t v55;

  v11 = a3;
  v13 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0)
    LOBYTE(v13) = 1;
  v14 = 4 << v13;
  v15 = a3 & 0xC;
  v16 = a3;
  if (v15 == 4 << v13)
  {
    sub_1C029DF68(a3, a5, a6);
    v16 = v20;
  }
  v17 = HIBYTE(a6) & 0xF;
  if ((a6 & 0x1000000000000000) != 0)
  {
    v21 = a5 & 0xFFFFFFFFFFFFLL;
    if ((a6 & 0x2000000000000000) != 0)
      v21 = HIBYTE(a6) & 0xF;
    if (v21 < v16 >> 16)
      goto LABEL_95;
    v18 = sub_1C0304024();
    v17 = HIBYTE(a6) & 0xF;
  }
  else
  {
    v18 = v16 >> 16;
  }
  if (v15 == v14)
  {
    v22 = v17;
    sub_1C029DF68(v11, a5, a6);
    v17 = v22;
    v11 = v23;
  }
  if ((a4 & 0xC) == v14)
  {
    v24 = a4;
    v25 = v17;
    sub_1C029DF68(v24, a5, a6);
    v17 = v25;
    a4 = v26;
    if ((a6 & 0x1000000000000000) == 0)
      goto LABEL_11;
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
LABEL_11:
    v19 = (a4 >> 16) - (v11 >> 16);
    goto LABEL_22;
  }
  v27 = a5 & 0xFFFFFFFFFFFFLL;
  if ((a6 & 0x2000000000000000) != 0)
    v27 = v17;
  if (v27 < v11 >> 16)
    goto LABEL_91;
  if (v27 < a4 >> 16)
  {
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  v19 = sub_1C0304024();
LABEL_22:
  v28 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v28 < v18)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v29 = (unsigned __int8 *)(a1 + v18);
  if (!a1)
    v29 = 0;
  v30 = *v29;
  if (v30 == 43)
  {
    if (v19 < 1)
    {
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
      return;
    }
    if (v19 != 1)
    {
      v40 = a7 + 48;
      v41 = a7 + 55;
      v42 = a7 + 87;
      if (a7 > 10)
      {
        v40 = 58;
      }
      else
      {
        v42 = 97;
        v41 = 65;
      }
      if (v29)
      {
        v43 = 0;
        v44 = v29 + 1;
        v45 = v19 - 1;
        while (1)
        {
          v46 = *v44;
          if (v46 < 0x30 || v46 >= v40)
          {
            if (v46 < 0x41 || v46 >= v41)
            {
              if (v46 < 0x61 || v46 >= v42)
                return;
              v47 = -87;
            }
            else
            {
              v47 = -55;
            }
          }
          else
          {
            v47 = -48;
          }
          v48 = v43 * a7;
          if ((unsigned __int128)(v43 * (__int128)a7) >> 64 == (v43 * a7) >> 63)
          {
            v43 = v48 + (v46 + v47);
            if (!__OFADD__(v48, (v46 + v47)))
            {
              ++v44;
              if (--v45)
                continue;
            }
          }
          return;
        }
      }
    }
  }
  else
  {
    if (v30 == 45)
    {
      if (v19 >= 1)
      {
        if (v19 != 1)
        {
          v31 = a7 + 48;
          v32 = a7 + 55;
          v33 = a7 + 87;
          if (a7 > 10)
          {
            v31 = 58;
          }
          else
          {
            v33 = 97;
            v32 = 65;
          }
          if (v29)
          {
            v34 = 0;
            v35 = v29 + 1;
            v36 = v19 - 1;
            while (1)
            {
              v37 = *v35;
              if (v37 < 0x30 || v37 >= v31)
              {
                if (v37 < 0x41 || v37 >= v32)
                {
                  if (v37 < 0x61 || v37 >= v33)
                    return;
                  v38 = -87;
                }
                else
                {
                  v38 = -55;
                }
              }
              else
              {
                v38 = -48;
              }
              v39 = v34 * a7;
              if ((unsigned __int128)(v34 * (__int128)a7) >> 64 == (v34 * a7) >> 63)
              {
                v34 = v39 - (v37 + v38);
                if (!__OFSUB__(v39, (v37 + v38)))
                {
                  ++v35;
                  if (--v36)
                    continue;
                }
              }
              return;
            }
          }
        }
        return;
      }
      goto LABEL_93;
    }
    if (v28 != v18)
    {
      v49 = a7 + 48;
      v50 = a7 + 55;
      v51 = a7 + 87;
      if (a7 > 10)
      {
        v49 = 58;
      }
      else
      {
        v51 = 97;
        v50 = 65;
      }
      if (v29)
      {
        v52 = 0;
        while (1)
        {
          v53 = *v29;
          if (v53 < 0x30 || v53 >= v49)
          {
            if (v53 < 0x41 || v53 >= v50)
            {
              if (v53 < 0x61 || v53 >= v51)
                return;
              v54 = -87;
            }
            else
            {
              v54 = -55;
            }
          }
          else
          {
            v54 = -48;
          }
          v55 = v52 * a7;
          if ((unsigned __int128)(v52 * (__int128)a7) >> 64 == (v52 * a7) >> 63)
          {
            v52 = v55 + (v53 + v54);
            if (!__OFADD__(v55, (v53 + v54)))
            {
              ++v29;
              if (--v19)
                continue;
            }
          }
          return;
        }
      }
    }
  }
}

void sub_1C0150A88(_QWORD *a1, uint64_t *a2)
{
  if (!*a1)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    OUTLINED_FUNCTION_30_13();
  }
  OUTLINED_FUNCTION_9();
}

uint64_t destroy for LearnedChoiceExtractor()
{
  return swift_release();
}

uint64_t initializeWithCopy for LearnedChoiceExtractor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LearnedChoiceExtractor(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  v4 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for LearnedChoiceExtractor(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LearnedChoiceExtractor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LearnedChoiceExtractor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LearnedChoiceExtractor()
{
  return &type metadata for LearnedChoiceExtractor;
}

unint64_t sub_1C0150C18(uint64_t a1)
{
  unint64_t result;

  result = sub_1C0150C3C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0150C3C()
{
  unint64_t result;

  result = qword_1EF5BD000;
  if (!qword_1EF5BD000)
  {
    result = MEMORY[0x1C3B9827C]("!xh'", &type metadata for LearnedChoiceExtractor);
    atomic_store(result, (unint64_t *)&qword_1EF5BD000);
  }
  return result;
}

uint64_t sub_1C0150C78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LearnedDisambiguation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0150CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LearnedDisambiguation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0150D00(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LearnedDisambiguation();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0150D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD008);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C0150D84(_QWORD *a1, void (*a2)(uint64_t))
{
  if (!*a1)
  {
    a2(255);
    OUTLINED_FUNCTION_30_13();
  }
  OUTLINED_FUNCTION_9();
}

ValueMetadata *type metadata accessor for LearnedChoiceExtractor.Strategy()
{
  return &type metadata for LearnedChoiceExtractor.Strategy;
}

uint64_t OUTLINED_FUNCTION_11_35(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0150CBC(a1, *(_QWORD *)(v1 - 136));
}

uint64_t OUTLINED_FUNCTION_13_25()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, *(_QWORD *)(v1 - 128));
}

uint64_t OUTLINED_FUNCTION_14_30()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_15_23()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_16_22()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_24_14()
{
  return sub_1C03044B0();
}

void OUTLINED_FUNCTION_30_13()
{
  JUMPOUT(0x1C3B9827CLL);
}

id sub_1C0150E70@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id result;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = objc_msgSend(v1, sel_directoryValue);
  if (result)
  {
    v4 = sub_1C008D860(result, (SEL *)&selRef_path);
    if (v5)
    {
      v6 = HIBYTE(v5) & 0xF;
      if ((v5 & 0x2000000000000000) == 0)
        v6 = v4 & 0xFFFFFFFFFFFFLL;
      if (v6)
      {
        sub_1C0301B04();
        v7 = 0;
      }
      else
      {
        v7 = 1;
      }
      OUTLINED_FUNCTION_14();
    }
    else
    {
      v7 = 1;
    }
    v8 = sub_1C0301B70();
    return (id)__swift_storeEnumTagSinglePayload(a1, v7, 1, v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0150F18()
{
  uint64_t v1;

  sub_1C03043A8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_29();
  return v1;
}

__n128 sub_1C0150F84@<Q0>(__n128 *a1@<X8>)
{
  __n128 result;
  unint64_t v3;
  unint64_t v4;
  __n128 v5;
  unint64_t v6;
  unint64_t v7;

  sub_1C03043A8();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_14();
  a1->n128_u64[0] = v3;
  a1->n128_u64[1] = v4;
  result = v5;
  a1[1] = v5;
  a1[2].n128_u64[0] = v6;
  a1[2].n128_u64[1] = v7;
  return result;
}

uint64_t sub_1C0151018()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t result;

  if (qword_1EF5B7F00 != -1)
    swift_once();
  v0 = sub_1C0303B98();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF5FC698);
  v1 = sub_1C0303B80();
  v2 = sub_1C03042E8();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1C0039000, v1, v2, "updating TrialManager because of a notification", v3, 2u);
    OUTLINED_FUNCTION_5();
  }

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C008D0C8();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0151114(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t result;
  _BYTE v8[16];
  _BYTE v9[16];
  _BYTE v10[16];

  sub_1C00F7F8C((uint64_t)a2, (uint64_t)v10);
  sub_1C00F7F8C((uint64_t)(a2 + 1), (uint64_t)v9);
  sub_1C00F7F8C((uint64_t)(a2 + 2), (uint64_t)v8);
  sub_1C0098758((uint64_t)v10);
  sub_1C0098758((uint64_t)v9);
  sub_1C0098758((uint64_t)v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a2[1];
  *(_OWORD *)(a1 + 8) = *a2;
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 40) = a2[2];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a1 = a3;
  return result;
}

uint64_t sub_1C01511DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v24[2];
  uint64_t v25;
  unint64_t v26;

  v25 = 0;
  v26 = 0xE000000000000000;
  sub_1C03046CC();
  sub_1C0303FD0();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_3_58();
  OUTLINED_FUNCTION_18();
  sub_1C0303FD0();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_3_58();
  OUTLINED_FUNCTION_18();
  sub_1C0303FD0();
  swift_bridgeObjectRetain();
  sub_1C0303FD0();
  OUTLINED_FUNCTION_29();
  sub_1C0303FD0();
  v3 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v8 << 6); ; i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    v14 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * i);
    v24[0] = 538976288;
    v24[1] = 0xE400000000000000;
    swift_bridgeObjectRetain();
    v15 = v14;
    OUTLINED_FUNCTION_4_5();
    OUTLINED_FUNCTION_17_0();
    sub_1C0303FD0();
    v16 = objc_msgSend(v15, sel_description);
    OUTLINED_FUNCTION_15_24();

    OUTLINED_FUNCTION_4_5();
    OUTLINED_FUNCTION_17_0();
    sub_1C0303FD0();
    sub_1C0303FD0();

    OUTLINED_FUNCTION_18();
    if (v6)
      goto LABEL_4;
LABEL_5:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7)
      goto LABEL_21;
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        goto LABEL_21;
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v7)
          goto LABEL_21;
        v12 = *(_QWORD *)(v3 + 8 * v8);
        if (!v12)
          break;
      }
    }
LABEL_18:
    v6 = (v12 - 1) & v12;
  }
  v13 = v11 + 3;
  if (v13 < v7)
  {
    v12 = *(_QWORD *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        v8 = v13 + 1;
        if (__OFADD__(v13, 1))
          goto LABEL_26;
        if (v8 >= v7)
          goto LABEL_21;
        v12 = *(_QWORD *)(v3 + 8 * v8);
        ++v13;
        if (v12)
          goto LABEL_18;
      }
    }
    v8 = v13;
    goto LABEL_18;
  }
LABEL_21:
  swift_release();
  if (qword_1EF5B7F00 == -1)
    goto LABEL_22;
LABEL_27:
  swift_once();
LABEL_22:
  v17 = sub_1C0303B98();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EF5FC698);
  v19 = v25;
  v18 = v26;
  OUTLINED_FUNCTION_65();
  v20 = sub_1C0303B80();
  v21 = sub_1C03042E8();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v24[0] = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v22 = 136446210;
    OUTLINED_FUNCTION_65();
    sub_1C003E6D8(v19, v18, v24);
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0039000, v20, v21, "%{public}s", v22, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }

  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1C0151638(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;

  v4 = a1[1];
  v5 = a2[1];
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v6 = *a1 == *a2 && v4 == v5;
  if (v6 || (v7 = OUTLINED_FUNCTION_176(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    v9 = a1[3];
    v10 = a2[3];
    if (v9)
    {
      if (!v10)
        return 0;
      if (a1[2] != a2[2] || v9 != v10)
      {
        v12 = OUTLINED_FUNCTION_176();
        result = 0;
        if ((v12 & 1) == 0)
          return result;
      }
    }
    else if (v10)
    {
      return 0;
    }
    v13 = a1[5];
    v14 = a2[5];
    if (v13)
    {
      if (v14)
      {
        v15 = a1[4] == a2[4] && v13 == v14;
        if (v15 || (OUTLINED_FUNCTION_176() & 1) != 0)
          return 1;
      }
    }
    else if (!v14)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1C015170C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6E656D7461657274 && a2 == 0xEB00000000644974;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656D697265707865 && a2 == 0xEC0000006449746ELL;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x4974756F6C6C6F72 && a2 == 0xE900000000000064)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1C0304A08();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1C0151894@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD108);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_6_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C006B394();
  sub_1C0304B88();
  if (v2)
    return OUTLINED_FUNCTION_10_0();
  v7 = OUTLINED_FUNCTION_5_37();
  v9 = v8;
  v20 = v7;
  swift_bridgeObjectRetain();
  v10 = OUTLINED_FUNCTION_5_37();
  v12 = v11;
  v18 = v10;
  swift_bridgeObjectRetain();
  v19 = v12;
  v13 = sub_1C0304870();
  v15 = v14;
  v16 = v13;
  OUTLINED_FUNCTION_1_49(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_14();
  swift_bridgeObjectRelease();
  result = OUTLINED_FUNCTION_28();
  *a2 = v20;
  a2[1] = v9;
  a2[2] = v18;
  a2[3] = v19;
  a2[4] = v16;
  a2[5] = v15;
  return result;
}

uint64_t sub_1C0151A60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C015170C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0151A84()
{
  sub_1C006B394();
  return sub_1C0304BAC();
}

uint64_t sub_1C0151AAC()
{
  sub_1C006B394();
  return sub_1C0304BB8();
}

double sub_1C0151AD8@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1C0151894(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t destroy for TrialManager.EnrollmentAndFactors()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for TrialManager.EnrollmentAndFactors(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for TrialManager.EnrollmentAndFactors(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for TrialManager.EnrollmentAndFactors(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrialManager.EnrollmentAndFactors(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrialManager.EnrollmentAndFactors(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrialManager.EnrollmentAndFactors()
{
  return &type metadata for TrialManager.EnrollmentAndFactors;
}

ValueMetadata *type metadata accessor for TrialEnrollment()
{
  return &type metadata for TrialEnrollment;
}

uint64_t sub_1C0151D68(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0151114(a1, *(_OWORD **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1C0151D70(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C01A30DC(v1, a1);
}

uint64_t storeEnumTagSinglePayload for TrialEnrollment.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0151DD4 + 4 * byte_1C030F3C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0151E08 + 4 * asc_1C030F3C0[v4]))();
}

uint64_t sub_1C0151E08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0151E10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0151E18);
  return result;
}

uint64_t sub_1C0151E24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0151E2CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0151E30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0151E38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrialEnrollment.CodingKeys()
{
  return &type metadata for TrialEnrollment.CodingKeys;
}

uint64_t OUTLINED_FUNCTION_0_58()
{
  return sub_1C0304924();
}

uint64_t OUTLINED_FUNCTION_1_49@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_3_58()
{
  return sub_1C0303FD0();
}

uint64_t OUTLINED_FUNCTION_5_37()
{
  return sub_1C0304870();
}

_QWORD *OUTLINED_FUNCTION_9_35()
{
  uint64_t v0;
  _QWORD *v1;

  return __swift_project_boxed_opaque_existential_1(v1, *(_QWORD *)(v0 + 56));
}

unint64_t OUTLINED_FUNCTION_11_36()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C00B3C3C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_15_24()
{
  return sub_1C0303EB0();
}

uint64_t sub_1C0151EC0(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v11 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v7 = MEMORY[0x1C3B975EC](v5, a1);
LABEL_7:
        v8 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_15;
        type metadata accessor for DateTime.Date();
        if (static DateTime.Date.< infix(_:_:)(v7, a2))
        {
          sub_1C0304738();
          sub_1C0304768();
          v6 = a1 & 0xFFFFFFFFFFFFFF8;
          sub_1C0304774();
          sub_1C0304744();
        }
        else
        {
          swift_release();
        }
        ++v5;
        if (v8 == v4)
        {
          v9 = v11;
          goto LABEL_18;
        }
      }
      if (v5 < *(_QWORD *)(v6 + 16))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v4 = sub_1C03047F8();
      if (!v4)
        goto LABEL_17;
    }
    v7 = *(_QWORD *)(a1 + 8 * v5 + 32);
    swift_retain();
    goto LABEL_7;
  }
LABEL_17:
  v9 = MEMORY[0x1E0DEE9D8];
LABEL_18:
  swift_release();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1C0152058(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v9;

  v9 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        MEMORY[0x1C3B975EC](v3, a1);
LABEL_7:
        v5 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_15;
        type metadata accessor for DateTime.Date();
        static DateTime.Date.<= infix(_:_:)();
        if ((v6 & 1) != 0)
        {
          swift_release();
        }
        else
        {
          sub_1C0304738();
          sub_1C0304768();
          v4 = a1 & 0xFFFFFFFFFFFFFF8;
          sub_1C0304774();
          sub_1C0304744();
        }
        ++v3;
        if (v5 == v2)
        {
          v7 = v9;
          goto LABEL_18;
        }
      }
      if (v3 < *(_QWORD *)(v4 + 16))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v2 = sub_1C03047F8();
      if (!v2)
        goto LABEL_17;
    }
    swift_retain();
    goto LABEL_7;
  }
LABEL_17:
  v7 = MEMORY[0x1E0DEE9D8];
LABEL_18:
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

BOOL sub_1C01521F0(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;

  if (a1 >> 62)
    goto LABEL_12;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_1C03047F8())
  {
    type metadata accessor for DateTime.Date();
    v5 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1C3B975EC](v5 - 4, a1);
      }
      else
      {
        v6 = *(_QWORD *)(a1 + 8 * v5);
        swift_retain();
      }
      v7 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v8 = static DateTime.Date.== infix(_:_:)(v6, a2);
      swift_release();
      if (!v8)
      {
        ++v5;
        if (v7 != v4)
          continue;
      }
      goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
  }
  v8 = 0;
LABEL_14:
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C0152304(uint64_t *a1)
{
  uint64_t v2;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v2;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v2 < 0 || (v2 & 0x4000000000000000) != 0)
    sub_1C01F5B88(v2);
  v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v6[0] = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v6[1] = v4;
  sub_1C0155130(v6);
  return sub_1C0304150();
}

uint64_t sub_1C0152388(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_release();
}

uint64_t sub_1C0152398()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v5;

  v1 = v0;
  v2 = *(void **)(v0 + 24);
  swift_retain();
  v3 = v2;
  sub_1C03043FC();
  sub_1C0152B2C(v1, &v5);
  sub_1C0304408();

  swift_release();
  return v5;
}

void sub_1C0152410()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_40_0();
  v12 = v0;
  v13 = v1;
  v14 = OUTLINED_FUNCTION_36_16();
  v2 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_6_0();
  v5 = v4 - v3;
  if (qword_1ED728440 != -1)
    swift_once();
  v6 = (id)qword_1ED729668;
  sub_1C0303B68();
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v7 = OUTLINED_FUNCTION_7_3();
  *(_OWORD *)(v7 + 16) = xmmword_1C0305B60;
  v8 = OUTLINED_FUNCTION_23_0();
  v10 = v9;
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v10;
  OUTLINED_FUNCTION_26_19();
  sub_1C0303B50();
  OUTLINED_FUNCTION_20();
  if (qword_1ED7258D0 != -1)
    swift_once();
  v11 = (id)qword_1ED725938;
  sub_1C03043FC();
  sub_1C0152E28(v12 & 1, v13);
  sub_1C0304408();

  sub_1C03043D8();
  sub_1C0303B5C();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v14);

  OUTLINED_FUNCTION_28_0();
}

uint64_t sub_1C01525E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = sub_1C0301CFC();
  v20 = *(_QWORD *)(v3 - 8);
  v21 = v3;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_5_7();
  v19 = sub_1C0301EC4();
  v5 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_1_1();
  v6 = sub_1C0301954();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_6_0();
  v10 = v9 - v8;
  sub_1C0301E88();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725E18);
  v11 = sub_1C0301EAC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C0305B60;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v12 + 104))(v14 + v13, *MEMORY[0x1E0CB10E8], v11);
  sub_1C011F784();
  v15 = objc_msgSend((id)objc_opt_self(), sel_now);
  sub_1C0301CD8();

  sub_1C0301E1C();
  OUTLINED_FUNCTION_29_0();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v2, v21);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v19);
  sub_1C0301798();
  LOBYTE(v12) = v16;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  if ((v12 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_1C03049E4();
    swift_bridgeObjectRetain();
    sub_1C0303FD0();
    swift_bridgeObjectRelease();
    return a1;
  }
  return result;
}

void sub_1C01527F0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  OUTLINED_FUNCTION_40_0();
  v10 = v1;
  v9 = v2;
  v11 = OUTLINED_FUNCTION_36_16();
  v3 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_1_1();
  if (qword_1ED728440 != -1)
    swift_once();
  v4 = (id)qword_1ED729668;
  sub_1C0303B68();
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v5 = OUTLINED_FUNCTION_7_3();
  *(_OWORD *)(v5 + 16) = xmmword_1C0305B60;
  v6 = OUTLINED_FUNCTION_23_0();
  v8 = v7;
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = v8;
  OUTLINED_FUNCTION_26_19();
  sub_1C0303B50();
  OUTLINED_FUNCTION_20();
  sub_1C015322C(v0, v9, v10);
  sub_1C03043D8();
  sub_1C0303B5C();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v11);

  OUTLINED_FUNCTION_28_0();
}

void sub_1C0152968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjCClassFromMetadata;
  id v12;
  id v13;
  void *v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  _QWORD *v16;

  OUTLINED_FUNCTION_40_0();
  v1 = v0;
  v2 = sub_1C0301B70();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_6_0();
  v6 = v5 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728340);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_6_0();
  v10 = v9 - v8;
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v12 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v13 = sub_1C03012A8(0x73796164696C6F68, 0xE800000000000000, 0x336574696C7173, 0xE700000000000000, v12);
  if (!v13)
  {
    OUTLINED_FUNCTION_18_7(v10, 1);
    goto LABEL_5;
  }
  v14 = v13;
  sub_1C0301B40();

  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  v15(v10, v6, v2);
  OUTLINED_FUNCTION_18_7(v10, 0);
  if (__swift_getEnumTagSinglePayload(v10, 1, v2) == 1)
  {
LABEL_5:
    sub_1C0056C9C(v10, &qword_1ED728340);
    type metadata accessor for HolidaysDBHolidayResolverError();
    sub_1C01550F0();
    OUTLINED_FUNCTION_15_2();
    *v16 = 0xD000000000000024;
    v16[1] = 0x80000001C032F690;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    goto LABEL_6;
  }

  v15(v1, v10, v2);
LABEL_6:
  OUTLINED_FUNCTION_28_0();
}

uint64_t sub_1C0152B2C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint8_t *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  v5 = sub_1C0301B70();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 32);
  if (v9)
  {
    *a2 = v9;
  }
  else
  {
    sub_1C0152410();
    if (v2)
    {
      if (qword_1ED7256B8 != -1)
        swift_once();
      v15 = sub_1C0303B98();
      __swift_project_value_buffer(v15, (uint64_t)qword_1ED729440);
      v16 = v2;
      v17 = v2;
      v18 = sub_1C0303B80();
      v19 = sub_1C03042F4();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        v26 = swift_slowAlloc();
        v29 = v26;
        v27 = a2;
        *(_DWORD *)v20 = 136315138;
        v25 = v20 + 4;
        swift_getErrorValue();
        v21 = sub_1C0304A8C();
        v28 = sub_1C003E6D8(v21, v22, &v29);
        a2 = v27;
        sub_1C03044B0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C0039000, v18, v19, "Caught error while trying to open holidays database: %s", v20, 0xCu);
        v23 = v26;
        swift_arrayDestroy();
        MEMORY[0x1C3B98378](v23, -1, -1);
        MEMORY[0x1C3B98378](v20, -1, -1);

      }
      else
      {

      }
    }
    else
    {
      v27 = a2;
      v10 = sub_1C0301AEC();
      v12 = v11;
      v13 = *(_BYTE *)(a1 + 16);
      type metadata accessor for Connection();
      swift_allocObject();
      v14 = sub_1C0067FE8(v10, v12, v13);
      sub_1C0152388(v14);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      a2 = v27;
    }
    *a2 = *(_QWORD *)(a1 + 32);
    swift_retain();
  }
  return swift_retain();
}

void sub_1C0152E28(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  v5 = sub_1C0301B70();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v15 - v10;
  sub_1C00E42D0();
  if (!v2)
  {
    v16 = a1;
    v17 = a2;
    v12 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    sub_1C0301B58();
    v13 = (void *)sub_1C0303E8C();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v12, sel_fileExistsAtPath_, v13);

    if ((v14 & 1) == 0)
    {
      sub_1C0152968();
      sub_1C01527F0();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v17, v11, v5);
  }
}

void sub_1C015322C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  void *v14;
  unsigned int v15;
  id v16;
  id v17;
  id v18;
  id v19[2];
  id v20[2];

  v20[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728340);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C0301B70();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C01525E0(0xD000000000000011);
  sub_1C00E42D0();
  if (!v3)
  {
    sub_1C0067424();
    v19[1] = a3;
    v19[0] = (id)objc_opt_self();
    v12 = objc_msgSend(v19[0], sel_defaultManager);
    v13 = (void *)sub_1C0301B10();
    v14 = (void *)sub_1C0301B10();
    v20[0] = 0;
    v15 = objc_msgSend(v12, sel_copyItemAtURL_toURL_error_, v13, v14, v20);

    if (v15)
    {
      v16 = v20[0];
      v17 = objc_msgSend(v19[0], sel_defaultManager);
      sub_1C03042D0();

      sub_1C0056C9C((uint64_t)v7, &qword_1ED728340);
    }
    else
    {
      v18 = v20[0];
      sub_1C0301ABC();

      swift_willThrow();
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

dispatch_semaphore_t sub_1C0153480()
{
  dispatch_semaphore_t result;

  result = dispatch_semaphore_create(1);
  qword_1ED725938 = (uint64_t)result;
  return result;
}

uint64_t HolidaysDatabase.__deallocating_deinit()
{
  HolidaysDatabase.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HolidaysDatabase()
{
  return objc_opt_self();
}

uint64_t method lookup function for HolidaysDatabase()
{
  return swift_lookUpClassMethod();
}

void sub_1C01534EC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  _BYTE *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_40_0();
  v27 = v0;
  v28 = v1;
  v3 = v2;
  v5 = v4;
  v25 = v6;
  v7 = OUTLINED_FUNCTION_36_16();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1C0152398();
  if (v8)
  {
    v9 = v8;
    v10 = &v3[*(int *)(type metadata accessor for HolidayResolutionContext() + 24)];
    v11 = sub_1C0301D80();
    if (v12)
    {
      v22 = v11;
      v23 = v5;
      v24 = v12;
      if (qword_1ED728440 != -1)
        swift_once();
      v13 = (id)qword_1ED729668;
      sub_1C0303B68();
      sub_1C03043E4();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
      v14 = OUTLINED_FUNCTION_7_3();
      *(_OWORD *)(v14 + 16) = xmmword_1C0305B60;
      v15 = OUTLINED_FUNCTION_23_0();
      v17 = v16;
      *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v14 + 64) = sub_1C00A6A70();
      *(_QWORD *)(v14 + 32) = v15;
      *(_QWORD *)(v14 + 40) = v17;
      sub_1C0303B50();
      swift_bridgeObjectRelease();
      sub_1C01537D8(v25, v23, v22, v24, v3, v9, &v26);
      sub_1C03043D8();
      OUTLINED_FUNCTION_17_19();
      OUTLINED_FUNCTION_25_15();
      OUTLINED_FUNCTION_39_3();
      swift_bridgeObjectRelease();

    }
    else
    {
      type metadata accessor for HolidaysDBHolidayResolverError();
      sub_1C01550F0();
      OUTLINED_FUNCTION_15_2();
      v20 = v19;
      v21 = sub_1C0301DB0();
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, v10, v21);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      OUTLINED_FUNCTION_39_3();
    }
  }
  else
  {
    type metadata accessor for HolidaysDBHolidayResolverError();
    sub_1C01550F0();
    OUTLINED_FUNCTION_15_2();
    *v18 = 0xD000000000000017;
    v18[1] = 0x80000001C032F650;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
}

uint64_t sub_1C01537D8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(unint64_t, _QWORD, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  int v58;
  uint64_t v59;
  BOOL v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE __dst[168];
  unint64_t v86;

  v8 = v7;
  v83 = a6;
  v80 = a5;
  v82 = a4;
  v81 = a3;
  v79 = a1;
  v11 = sub_1C0301954();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v77 = (uint64_t)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED7256B8 != -1)
    swift_once();
  v14 = sub_1C0303B98();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED729440);
  swift_bridgeObjectRetain_n();
  v15 = sub_1C0303B80();
  v16 = sub_1C03042E8();
  v17 = os_log_type_enabled(v15, v16);
  v78 = a7;
  v76 = v11;
  v75 = v12;
  if (v17)
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v74 = v7;
    v20 = v19;
    v86 = v19;
    *(_DWORD *)v18 = 136315138;
    swift_bridgeObjectRetain();
    v21 = v79;
    v84 = sub_1C003E6D8(v79, a2, (uint64_t *)&v86);
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0039000, v15, v16, "Resolving holiday: %s", v18, 0xCu);
    swift_arrayDestroy();
    v22 = v20;
    v8 = v74;
    MEMORY[0x1C3B98378](v22, -1, -1);
    MEMORY[0x1C3B98378](v18, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    v21 = v79;
  }
  v86 = MEMORY[0x1E0DEE9D8];
  v23 = v80;
  LOBYTE(v84) = *v80;
  v24 = sub_1C01EA0E4((char *)&v84);
  result = sub_1C0251968(v21, a2, v81, v82, v24);
  if (!v8)
  {
    v26 = result;
    v27 = *(_QWORD *)(result + 16);
    if (v27)
    {
      v28 = 32;
      do
      {
        memcpy(__dst, (const void *)(v26 + v28), 0xA3uLL);
        sub_1C0154FE0((uint64_t)__dst);
        sub_1C01541C8((uint64_t)__dst);
        v30 = v29;
        sub_1C0155028((uint64_t)__dst);
        sub_1C004F99C(v30);
        v28 += 168;
        --v27;
      }
      while (v27);
      result = swift_bridgeObjectRelease();
      v31 = v86;
    }
    else
    {
      result = swift_bridgeObjectRelease();
      v31 = MEMORY[0x1E0DEE9D8];
    }
    if (v31 >> 62)
    {
      swift_bridgeObjectRetain();
      v32 = sub_1C03047F8();
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v32 <= 1)
      goto LABEL_45;
    v33 = type metadata accessor for HolidayResolutionContext();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725E18);
    v34 = sub_1C0301EAC();
    v35 = *(_QWORD *)(v34 - 8);
    v36 = v23;
    v37 = *(_QWORD *)(v35 + 72);
    v38 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1C03067E0;
    v40 = v39 + v38;
    v41 = *(void (**)(unint64_t, _QWORD, uint64_t))(v35 + 104);
    v41(v40, *MEMORY[0x1E0CB1158], v34);
    v41(v40 + v37, *MEMORY[0x1E0CB1160], v34);
    v41(v40 + 2 * v37, *MEMORY[0x1E0CB1130], v34);
    sub_1C011F784();
    v42 = v77;
    sub_1C0107330(v43, (uint64_t)&v36[*(int *)(v33 + 20)], v77);
    swift_bridgeObjectRelease();
    v44 = sub_1C0301828();
    if ((v45 & 1) != 0)
      v46 = 0;
    else
      v46 = v44;
    v47 = sub_1C0301894();
    if ((v48 & 1) != 0)
      v49 = 0;
    else
      v49 = v47;
    v50 = sub_1C030187C();
    if ((v51 & 1) != 0)
      v52 = 0;
    else
      v52 = v50;
    type metadata accessor for DateTime.Date();
    swift_allocObject();
    v53 = DateTime.Date.init(withDay:month:year:)(v46, v49, v52);
    sub_1C0152304((uint64_t *)&v86);
    swift_retain();
    v54 = swift_bridgeObjectRetain();
    v55 = sub_1C0151EC0(v54, v53);
    swift_retain();
    v56 = swift_bridgeObjectRetain();
    v57 = sub_1C0152058(v56);
    v58 = v36[*(int *)(v33 + 40)];
    if (v58 == 20)
    {
      v84 = MEMORY[0x1E0DEE9D8];
      if (v55 >> 62)
      {
        swift_bridgeObjectRetain();
        v59 = sub_1C03047F8();
        swift_bridgeObjectRelease();
        if (v59)
          goto LABEL_27;
      }
      else
      {
        v59 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v59)
        {
LABEL_27:
          v60 = __OFSUB__(v59, 1);
          v61 = v59 - 1;
          if (v60)
          {
            __break(1u);
            goto LABEL_65;
          }
          sub_1C02CFE78(v61, (v55 & 0xC000000000000001) == 0, v55);
          if ((v55 & 0xC000000000000001) != 0)
            MEMORY[0x1C3B975EC](v61, v55);
          else
            swift_retain();
          swift_bridgeObjectRelease();
          v62 = swift_retain();
          MEMORY[0x1C3B97010](v62);
          if (*(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1C030415C();
          sub_1C0304180();
          sub_1C0304150();
          swift_release();
LABEL_50:
          swift_retain();
          v67 = swift_bridgeObjectRetain();
          v68 = sub_1C01521F0(v67, v53);
          swift_bridgeObjectRelease_n();
          if (v68)
          {
            v69 = swift_retain();
            MEMORY[0x1C3B97010](v69);
            if (*(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1C030415C();
            sub_1C0304180();
            sub_1C0304150();
          }
          if (v57 >> 62)
          {
            swift_bridgeObjectRetain();
            v71 = sub_1C03047F8();
            swift_bridgeObjectRelease();
            if (v71)
            {
LABEL_56:
              sub_1C02CFE78(0, (v57 & 0xC000000000000001) == 0, v57);
              if ((v57 & 0xC000000000000001) == 0)
              {
                swift_retain();
LABEL_58:
                swift_bridgeObjectRelease();
                v70 = swift_retain();
                MEMORY[0x1C3B97010](v70);
                if (*(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_1C030415C();
                sub_1C0304180();
                sub_1C0304150();
                swift_release();
                swift_release();
                result = (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 8))(v42, v76);
                goto LABEL_63;
              }
LABEL_65:
              MEMORY[0x1C3B975EC](0, v57);
              goto LABEL_58;
            }
          }
          else if (*(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_56;
          }
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v42, v76);
          result = swift_release();
LABEL_63:
          *v78 = v84;
          return result;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_50;
    }
    swift_bridgeObjectRelease();
    if (v58 != 19)
    {
      if (v58 != 17)
      {
        swift_release();
        swift_bridgeObjectRelease();
LABEL_71:
        swift_bridgeObjectRelease();
        result = (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 8))(v42, v76);
        *v78 = MEMORY[0x1E0DEE9D8];
        return result;
      }
      swift_bridgeObjectRelease();
      if (v57 >> 62)
      {
        swift_bridgeObjectRetain();
        v72 = sub_1C03047F8();
        swift_bridgeObjectRelease();
        if (v72)
        {
LABEL_37:
          sub_1C02CFE78(0, (v57 & 0xC000000000000001) == 0, v57);
          if ((v57 & 0xC000000000000001) != 0)
          {
            v63 = MEMORY[0x1C3B975EC](0, v57);
          }
          else
          {
            v63 = *(_QWORD *)(v57 + 32);
            swift_retain();
          }
          goto LABEL_44;
        }
      }
      else if (*(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_37;
      }
LABEL_70:
      swift_release();
      goto LABEL_71;
    }
    swift_bridgeObjectRelease();
    if (v55 >> 62)
    {
      swift_bridgeObjectRetain();
      v64 = sub_1C03047F8();
      swift_bridgeObjectRelease();
      if (!v64)
        goto LABEL_70;
    }
    else
    {
      v64 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v64)
        goto LABEL_70;
    }
    v60 = __OFSUB__(v64, 1);
    v65 = v64 - 1;
    if (v60)
    {
      __break(1u);
    }
    else
    {
      sub_1C02CFE78(v65, (v55 & 0xC000000000000001) == 0, v55);
      if ((v55 & 0xC000000000000001) == 0)
      {
        v63 = *(_QWORD *)(v55 + 8 * v65 + 32);
        swift_retain();
LABEL_44:
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727640);
        v66 = swift_allocObject();
        *(_OWORD *)(v66 + 16) = xmmword_1C030A730;
        *(_QWORD *)(v66 + 32) = v63;
        v84 = v66;
        sub_1C0304150();
        v31 = v84;
        swift_release();
        result = (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 8))(v42, v76);
LABEL_45:
        *v78 = v31;
        return result;
      }
    }
    v63 = MEMORY[0x1C3B975EC](v65, v55);
    goto LABEL_44;
  }
  return result;
}

void sub_1C01541C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_6_0();
  sub_1C0301954();
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_5_7();
  v4 = sub_1C0301EAC();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_6_0();
  __asm { BR              X10 }
}

uint64_t sub_1C015428C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v15;
  uint64_t v16;
  char v17;
  char *v18;
  uint64_t v19;
  char v20;
  char *v21;
  uint64_t v22;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727640);
  v3 = (__n128 *)OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_33_12(v3, (__n128)xmmword_1C030A730);
  v4 = *(_BYTE *)(v1 + 72);
  v5 = v0 + *(int *)(OUTLINED_FUNCTION_23_17() + 36);
  v6 = *(_QWORD *)v5;
  v7 = *(_BYTE *)(v5 + 8);
  *(_BYTE *)(v2 - 128) = 7;
  *(_BYTE *)(v2 - 168) = 12;
  *(_BYTE *)(v2 - 176) = 7;
  *(_BYTE *)(v2 - 177) = 7;
  OUTLINED_FUNCTION_22_19();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_12_27();
  v20 = v8;
  v17 = v8;
  v9 = OUTLINED_FUNCTION_38_15();
  v3[2].n128_u64[0] = OUTLINED_FUNCTION_28_17(v9, v10, v11, v4, v6, v7, v12, v13, v15, v16, v17, v18, v19, v20, v21, v22);
  *(_QWORD *)(v2 - 128) = v3;
  sub_1C0304150();
  return *(_QWORD *)(v2 - 128);
}

uint64_t sub_1C0154B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C0301954();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a5[3];
  v18 = a5[4];
  __swift_project_boxed_opaque_existential_1(a5, v17);
  sub_1C02A9F9C(a1, *(_QWORD *)(a6 + 112), *(unsigned __int8 *)(a6 + 120), a4, v17, v18, (uint64_t)v12);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {
    sub_1C0056C9C((uint64_t)v12, &qword_1ED725F50);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    v20 = sub_1C0301900();
    v21 = 7;
    if ((v22 & 1) == 0)
    {
      v23 = sub_1C0143118(v20);
      v21 = sub_1C01EA0F8(v23);
    }
    v32 = sub_1C0301828();
    v25 = v24 & 1;
    v26 = sub_1C0301894();
    v28 = v27 & 1;
    v36 = 7;
    v35 = 12;
    v34 = v21;
    v29 = sub_1C03017E0();
    v31 = v30 & 1;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v33 = 7;
    type metadata accessor for DateTime.Date();
    swift_allocObject();
    return DateTime.Date.init(withDay:month:year:definedValue:holiday:monthOfYear:weekOfYear:dayOfWeek:dayOfWeekOrdinal:calendarEra:occurringIn:)(v32, v25, v26, v28, a1, 0, &v36, 0, &v35, 0, 1, &v34, v29, v31, &v33, 0);
  }
}

void sub_1C0154D84(char a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1C0301DC8();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_5_7();
  type metadata accessor for SolsticeAndEquinox();
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_1();
  __asm { BR              X10 }
}

uint64_t sub_1C0154E0C()
{
  uint64_t *v0;
  char v1;
  uint64_t v2;
  uint64_t result;
  _UNKNOWN **v4;

  if (v1 == 9)
  {
    v2 = type metadata accessor for JulianEasterHoliday();
    result = OUTLINED_FUNCTION_16_0();
    v4 = &off_1E799CC28;
  }
  else
  {
    v2 = type metadata accessor for GregorianEasterHoliday();
    result = OUTLINED_FUNCTION_16_0();
    v4 = &off_1E79964A0;
  }
  v0[3] = v2;
  v0[4] = (uint64_t)v4;
  *v0 = result;
  return result;
}

uint64_t sub_1C0154F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SolsticeAndEquinox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0154FE0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C0155028(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0155070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD2A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for HolidaysDBHolidayResolverError()
{
  uint64_t result;

  result = qword_1EF5BD328;
  if (!qword_1EF5BD328)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1C01550F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF5BD2B0;
  if (!qword_1EF5BD2B0)
  {
    v1 = type metadata accessor for HolidaysDBHolidayResolverError();
    result = MEMORY[0x1C3B9827C](&unk_1C030F6C8, v1);
    atomic_store(result, (unint64_t *)&qword_1EF5BD2B0);
  }
  return result;
}

void sub_1C0155130(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;

  v3 = a1[1];
  v4 = sub_1C03049CC();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_128;
    if (v3)
      sub_1C0155738(0, v3, 1, a1);
    return;
  }
  v5 = v4;
  sub_1C027E0B0(v3 / 2);
  v89 = v3;
  v90 = v6;
  v92 = v7;
  v87 = a1;
  if (v3 <= 0)
    goto LABEL_92;
  v88 = v5;
  v8 = 0;
  v9 = *a1;
  v86 = *a1 - 8;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v91 = *a1;
  while (1)
  {
    v11 = v8++;
    if (v8 < v3)
    {
      v12 = *(_QWORD *)(v9 + 8 * v8);
      v13 = *(_QWORD *)(v9 + 8 * v11);
      type metadata accessor for DateTime.Date();
      v14 = static DateTime.Date.< infix(_:_:)(v12, v13);
      v8 = v11 + 2;
      if (v11 + 2 < v3)
      {
        v15 = v11;
        while (((v14 ^ static DateTime.Date.< infix(_:_:)(*(_QWORD *)(v91 + 8 * v15 + 16), *(_QWORD *)(v91 + 8 * v15 + 8))) & 1) == 0)
        {
          v16 = v15 + 3;
          ++v15;
          if (v16 >= v3)
          {
            v8 = v3;
            goto LABEL_11;
          }
        }
        v8 = v15 + 2;
LABEL_11:
        v9 = v91;
      }
      if (v14)
      {
        if (v8 < v11)
          goto LABEL_129;
        if (v11 < v8)
        {
          v17 = (uint64_t *)(v86 + 8 * v8);
          v18 = v8;
          v19 = v11;
          v20 = (uint64_t *)(v9 + 8 * v11);
          do
          {
            if (v19 != --v18)
            {
              if (!v9)
                goto LABEL_135;
              v21 = *v20;
              *v20 = *v17;
              *v17 = v21;
            }
            ++v19;
            --v17;
            ++v20;
          }
          while (v19 < v18);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_127;
      if (v8 - v11 < v88)
      {
        if (__OFADD__(v11, v88))
          goto LABEL_130;
        if (v11 + v88 >= v3)
          v22 = v3;
        else
          v22 = v11 + v88;
        if (v22 < v11)
        {
LABEL_131:
          __break(1u);
          goto LABEL_132;
        }
        if (v8 != v22)
        {
          type metadata accessor for DateTime.Date();
          v23 = (uint64_t *)(v86 + 8 * v8);
          do
          {
            v24 = *(_QWORD *)(v9 + 8 * v8);
            v25 = v11;
            v26 = v23;
            do
            {
              if (!static DateTime.Date.< infix(_:_:)(v24, *v26))
                break;
              if (!v9)
                goto LABEL_133;
              v27 = *v26;
              v24 = v26[1];
              *v26 = v24;
              v26[1] = v27;
              --v26;
              ++v25;
            }
            while (v8 != v25);
            ++v8;
            ++v23;
          }
          while (v8 != v22);
          v8 = v22;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1C00500C8(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v29 = *((_QWORD *)v10 + 2);
    v28 = *((_QWORD *)v10 + 3);
    v30 = v29 + 1;
    if (v29 >= v28 >> 1)
      v10 = sub_1C00500C8((char *)(v28 > 1), v29 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v30;
    v31 = v10 + 32;
    v32 = &v10[16 * v29 + 32];
    *(_QWORD *)v32 = v11;
    *((_QWORD *)v32 + 1) = v8;
    if (v29)
      break;
    v30 = 1;
    v9 = v91;
LABEL_85:
    v3 = v89;
    if (v8 >= v89)
      goto LABEL_93;
  }
  v9 = v91;
  while (1)
  {
    v33 = v30 - 1;
    if (v30 >= 4)
    {
      v38 = &v31[16 * v30];
      v39 = *((_QWORD *)v38 - 8);
      v40 = *((_QWORD *)v38 - 7);
      v44 = __OFSUB__(v40, v39);
      v41 = v40 - v39;
      if (v44)
        goto LABEL_111;
      v43 = *((_QWORD *)v38 - 6);
      v42 = *((_QWORD *)v38 - 5);
      v44 = __OFSUB__(v42, v43);
      v36 = v42 - v43;
      v37 = v44;
      if (v44)
        goto LABEL_112;
      v45 = v30 - 2;
      v46 = &v31[16 * v30 - 32];
      v48 = *(_QWORD *)v46;
      v47 = *((_QWORD *)v46 + 1);
      v44 = __OFSUB__(v47, v48);
      v49 = v47 - v48;
      if (v44)
        goto LABEL_113;
      v44 = __OFADD__(v36, v49);
      v50 = v36 + v49;
      if (v44)
        goto LABEL_115;
      if (v50 >= v41)
      {
        v68 = &v31[16 * v33];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v44 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v44)
          goto LABEL_121;
        v61 = v36 < v71;
        goto LABEL_74;
      }
    }
    else
    {
      if (v30 != 3)
      {
        v62 = *((_QWORD *)v10 + 4);
        v63 = *((_QWORD *)v10 + 5);
        v44 = __OFSUB__(v63, v62);
        v55 = v63 - v62;
        v56 = v44;
        goto LABEL_68;
      }
      v35 = *((_QWORD *)v10 + 4);
      v34 = *((_QWORD *)v10 + 5);
      v44 = __OFSUB__(v34, v35);
      v36 = v34 - v35;
      v37 = v44;
    }
    if ((v37 & 1) != 0)
      goto LABEL_114;
    v45 = v30 - 2;
    v51 = &v31[16 * v30 - 32];
    v53 = *(_QWORD *)v51;
    v52 = *((_QWORD *)v51 + 1);
    v54 = __OFSUB__(v52, v53);
    v55 = v52 - v53;
    v56 = v54;
    if (v54)
      goto LABEL_116;
    v57 = &v31[16 * v33];
    v59 = *(_QWORD *)v57;
    v58 = *((_QWORD *)v57 + 1);
    v44 = __OFSUB__(v58, v59);
    v60 = v58 - v59;
    if (v44)
      goto LABEL_118;
    if (__OFADD__(v55, v60))
      goto LABEL_120;
    if (v55 + v60 >= v36)
    {
      v61 = v36 < v60;
LABEL_74:
      if (v61)
        v33 = v45;
      goto LABEL_76;
    }
LABEL_68:
    if ((v56 & 1) != 0)
      goto LABEL_117;
    v64 = &v31[16 * v33];
    v66 = *(_QWORD *)v64;
    v65 = *((_QWORD *)v64 + 1);
    v44 = __OFSUB__(v65, v66);
    v67 = v65 - v66;
    if (v44)
      goto LABEL_119;
    if (v67 < v55)
      goto LABEL_85;
LABEL_76:
    v72 = v33 - 1;
    if (v33 - 1 >= v30)
    {
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
      goto LABEL_122;
    }
    if (!v9)
      goto LABEL_134;
    v73 = v10;
    v74 = v9;
    v75 = &v31[16 * v72];
    v76 = *(_QWORD *)v75;
    v77 = &v31[16 * v33];
    v78 = *((_QWORD *)v77 + 1);
    sub_1C01557E8((uint64_t *)(v74 + 8 * *(_QWORD *)v75), (uint64_t *)(v74 + 8 * *(_QWORD *)v77), v74 + 8 * v78, v90);
    if (v1)
      break;
    if (v78 < v76)
      goto LABEL_108;
    if (v33 > *((_QWORD *)v73 + 2))
      goto LABEL_109;
    *(_QWORD *)v75 = v76;
    *(_QWORD *)&v31[16 * v72 + 8] = v78;
    v79 = *((_QWORD *)v73 + 2);
    if (v33 >= v79)
      goto LABEL_110;
    v10 = v73;
    v30 = v79 - 1;
    memmove(&v31[16 * v33], v77 + 16, 16 * (v79 - 1 - v33));
    *((_QWORD *)v73 + 2) = v79 - 1;
    v61 = v79 > 2;
    v9 = v91;
    if (!v61)
      goto LABEL_85;
  }
LABEL_90:
  swift_bridgeObjectRelease();
  if (v89 >= -1)
    goto LABEL_105;
  __break(1u);
LABEL_92:
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v30 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_93:
  if (v30 >= 2)
  {
    v80 = *v87;
    while (1)
    {
      v81 = v30 - 2;
      if (v30 < 2)
        break;
      if (!v80)
        goto LABEL_136;
      v82 = *(_QWORD *)&v10[16 * v81 + 32];
      v83 = *(_QWORD *)&v10[16 * v30 + 24];
      sub_1C01557E8((uint64_t *)(v80 + 8 * v82), (uint64_t *)(v80 + 8 * *(_QWORD *)&v10[16 * v30 + 16]), v80 + 8 * v83, v90);
      if (v1)
        goto LABEL_90;
      if (v83 < v82)
        goto LABEL_123;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_1C020FAB8();
      if (v81 >= *((_QWORD *)v10 + 2))
        goto LABEL_124;
      v84 = &v10[16 * v81 + 32];
      *(_QWORD *)v84 = v82;
      *((_QWORD *)v84 + 1) = v83;
      v85 = *((_QWORD *)v10 + 2);
      if (v30 > v85)
        goto LABEL_125;
      memmove(&v10[16 * v30 + 16], &v10[16 * v30 + 32], 16 * (v85 - v30));
      *((_QWORD *)v10 + 2) = v85 - 1;
      v30 = v85 - 1;
      if (v85 <= 2)
        goto LABEL_104;
    }
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
LABEL_104:
  swift_bridgeObjectRelease();
  if (v89 >= -1)
  {
LABEL_105:
    *(_QWORD *)((v92 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_1C0304150();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
}

uint64_t sub_1C0155738(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    type metadata accessor for DateTime.Date();
    v8 = v7 + 8 * v4 - 8;
    while (2)
    {
      result = *(_QWORD *)(v7 + 8 * v4);
      v9 = v6;
      v10 = (uint64_t *)v8;
      do
      {
        result = static DateTime.Date.< infix(_:_:)(result, *v10);
        if ((result & 1) == 0)
          break;
        if (!v7)
        {
          __break(1u);
          return result;
        }
        v11 = *v10;
        result = v10[1];
        *v10 = result;
        v10[1] = v11;
        --v10;
        ++v9;
      }
      while (v4 != v9);
      ++v4;
      v8 += 8;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1C01557E8(uint64_t *a1, uint64_t *a2, unint64_t a3, uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v14;
  BOOL v15;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t *v20;
  BOOL v21;
  BOOL v22;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = (char *)a2 - (char *)a1;
  v9 = a2 - a1;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v9 >= v11)
  {
    sub_1C00ADA28(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v12 = &v4[v11];
    if (v7 >= v6 || v10 <= 7)
      goto LABEL_40;
    type metadata accessor for DateTime.Date();
    v18 = (uint64_t *)(a3 - 8);
    while (1)
    {
      v19 = v18 + 1;
      v20 = v6 - 1;
      if (static DateTime.Date.< infix(_:_:)(*(v12 - 1), *(v6 - 1)))
      {
        v21 = v19 != v6 || v18 >= v6;
        --v6;
        if (!v21)
          goto LABEL_36;
      }
      else
      {
        v22 = v19 != v12 || v18 >= v12;
        v20 = --v12;
        if (!v22)
          goto LABEL_36;
      }
      *v18 = *v20;
LABEL_36:
      --v18;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_40;
    }
  }
  sub_1C00ADA28(a1, a2 - a1, a4);
  v12 = &v4[v9];
  if ((unint64_t)v6 < a3 && v8 > 7)
  {
    type metadata accessor for DateTime.Date();
    while (!static DateTime.Date.< infix(_:_:)(*v6, *v4))
    {
      v14 = v4;
      v15 = v7 == v4++;
      if (!v15)
        goto LABEL_12;
LABEL_13:
      ++v7;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_18;
    }
    v14 = v6;
    v15 = v7 == v6++;
    if (v15)
      goto LABEL_13;
LABEL_12:
    *v7 = *v14;
    goto LABEL_13;
  }
LABEL_18:
  v6 = v7;
LABEL_40:
  sub_1C00ADA28(v4, v12 - v4, v6);
  return 1;
}

uint64_t *sub_1C0155984(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1C0301DB0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C0155A40(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_bridgeObjectRelease();
  v2 = sub_1C0301DB0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *sub_1C0155A90(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1C0301DB0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1C0155B20(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_1C0155BC8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_1C0301DB0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C0155BC8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HolidaysDBHolidayResolverError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1C0155C04(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1C0301DB0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1C0155C90(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1C0155BC8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1C0301DB0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C0155D38()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C0301DB0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_59()
{
  uint64_t v0;

  return sub_1C0155028(v0);
}

uint64_t OUTLINED_FUNCTION_3_59(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_6_36()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_7_38(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = a1;
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_8_29()
{
  uint64_t v0;

  return sub_1C0154FE0(v0);
}

uint64_t OUTLINED_FUNCTION_10_40()
{
  return sub_1C0301DD4();
}

uint64_t OUTLINED_FUNCTION_11_37()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_13_26()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1C003E6D8(v0, v1, (uint64_t *)(v2 - 128));
}

uint64_t *OUTLINED_FUNCTION_14_31@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v1[3] = v2;
  v1[4] = a1;
  return __swift_allocate_boxed_opaque_existential_0(v1);
}

uint64_t OUTLINED_FUNCTION_17_19()
{
  return sub_1C0303B5C();
}

uint64_t OUTLINED_FUNCTION_22_19()
{
  return type metadata accessor for DateTime.Date();
}

uint64_t OUTLINED_FUNCTION_23_17()
{
  return type metadata accessor for HolidayResolutionContext();
}

uint64_t OUTLINED_FUNCTION_25_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 96));
}

uint64_t OUTLINED_FUNCTION_34_17()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_0Tm(v0 - 128);
}

uint64_t OUTLINED_FUNCTION_35_19(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1C003E6D8(a1, a2, (uint64_t *)(v2 - 128));
}

uint64_t sub_1C0155E90@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  char v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF5BD360);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C0302E6C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v15 - v10;
  sub_1C0302C2C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    result = sub_1C0156098((uint64_t)v4);
    v13 = 7;
  }
  else
  {
    v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v14(v11, v4, v5);
    v14(v9, v11, v5);
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
    if ((_DWORD)result == *MEMORY[0x1E0DA1550])
    {
      v13 = 3;
    }
    else if ((_DWORD)result == *MEMORY[0x1E0DA1520])
    {
      v13 = 2;
    }
    else if ((_DWORD)result == *MEMORY[0x1E0DA1548])
    {
      v13 = 5;
    }
    else if ((_DWORD)result == *MEMORY[0x1E0DA1528])
    {
      v13 = 4;
    }
    else
    {
      if ((_DWORD)result == *MEMORY[0x1E0DA1530])
      {
        *a1 = 0;
        return result;
      }
      if ((_DWORD)result == *MEMORY[0x1E0DA1540])
      {
        v13 = 1;
      }
      else
      {
        if ((_DWORD)result != *MEMORY[0x1E0DA1538])
        {
          *a1 = 7;
          return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
        }
        v13 = 6;
      }
    }
  }
  *a1 = v13;
  return result;
}

uint64_t sub_1C0156098(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF5BD360);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_1C01560D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    a1[1] = a2[1];
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1C0301DB0();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1C0156188(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1C0301DB0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1C01561D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1C0301DB0();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_1C0156258(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C0301DB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_1C01562E4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1C0301DB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1C0156340(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C0301DB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1C01563BC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C01563C8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_14_4();
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1C0156438()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_1C0156444(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_4();
    return (_QWORD *)__swift_storeEnumTagSinglePayload((uint64_t)v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MeCardContactGenerator()
{
  uint64_t result;

  result = qword_1EF5BD3C0;
  if (!qword_1EF5BD3C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C01564E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C0301DB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1C015655C(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = objc_msgSend(a1, sel_contactRelations);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726F40);
  v7 = sub_1C0304138();

  if (v7 >> 62)
  {
    OUTLINED_FUNCTION_21();
    v8 = sub_1C03047F8();
    OUTLINED_FUNCTION_17_0();
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v36 = a3;
  v37 = a2;
  v35 = a1;
  if (!v8)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    v38 = MEMORY[0x1E0DEE9D8];
LABEL_26:
    OUTLINED_FUNCTION_17_0();

    *v36 = v38;
    v36[1] = v10;
    v33 = (char *)v36 + *(int *)(OUTLINED_FUNCTION_32_13() + 24);
    v34 = OUTLINED_FUNCTION_14_4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v33, v37, v34);
    return;
  }
  if (v8 >= 1)
  {
    v9 = 0;
    v10 = MEMORY[0x1E0DEE9D8];
    v38 = MEMORY[0x1E0DEE9D8];
    v39 = v8;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
        v11 = (id)MEMORY[0x1C3B975EC](v9, v7);
      else
        v11 = *(id *)(v7 + 8 * v9 + 32);
      v12 = v11;
      v13 = objc_msgSend(v11, sel_label, v35);
      if (v13)
      {
        v14 = v13;
        v15 = sub_1C0303EB0();
        v17 = v16;

        v18 = objc_msgSend(v12, sel_value);
        v19 = objc_msgSend(v18, sel_name);

        v20 = sub_1C0303EB0();
        v22 = v21;

        if ((sub_1C0304054() & 1) != 0 && (sub_1C0304060() & 1) != 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C004FF20();
            v38 = v31;
          }
          v24 = *(_QWORD *)(v38 + 16);
          v23 = *(_QWORD *)(v38 + 24);
          if (v24 >= v23 >> 1)
          {
            OUTLINED_FUNCTION_33_13(v23);
            sub_1C004FF20();
            v38 = v32;
          }
          *(_QWORD *)(v38 + 16) = v24 + 1;
          v25 = (_QWORD *)(v38 + 32 * v24);
        }
        else
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C004FF20();
            v10 = v29;
          }
          v27 = *(_QWORD *)(v10 + 16);
          v26 = *(_QWORD *)(v10 + 24);
          if (v27 >= v26 >> 1)
          {
            OUTLINED_FUNCTION_33_13(v26);
            sub_1C004FF20();
            v10 = v30;
          }
          *(_QWORD *)(v10 + 16) = v27 + 1;
          v25 = (_QWORD *)(v10 + 32 * v27);
        }
        v25[4] = v15;
        v25[5] = v17;
        v28 = v25 + 6;
        *v28 = v20;
        v28[1] = v22;
        v8 = v39;
      }
      ++v9;

    }
    while (v8 != v9);
    goto LABEL_26;
  }
  __break(1u);
}

void sub_1C0156844(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62[8];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[2];
  unint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE v72[264];
  _OWORD v73[17];

  v3 = OUTLINED_FUNCTION_14_4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StringTokenizer();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (_QWORD *)((char *)v66 - v11);
  v13 = *(_QWORD *)(a1 + 184);
  if (v13)
  {
    v14 = *(_QWORD *)(a1 + 176);
    v15 = HIBYTE(v13) & 0xF;
    if ((v13 & 0x2000000000000000) == 0)
      v15 = v14 & 0xFFFFFFFFFFFFLL;
    if (v15)
    {
      v70 = *(_QWORD *)(a1 + 168);
      v71 = v14;
      v16 = *(int *)(OUTLINED_FUNCTION_32_13() + 24);
      v68 = v1;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1 + v16, v3);
      swift_bridgeObjectRetain();
      StringTokenizer.init(locale:)(v6, v12);
      v17 = *(_QWORD *)(a1 + 8);
      v18 = *(_BYTE *)(a1 + 16);
      v19 = *(_OWORD *)(a1 + 24);
      v20 = *(_OWORD *)(a1 + 40);
      v21 = *(_OWORD *)(a1 + 56);
      v22 = *(_OWORD *)(a1 + 72);
      v23 = *(_OWORD *)(a1 + 88);
      v24 = *(_OWORD *)(a1 + 104);
      v25 = *(_OWORD *)(a1 + 120);
      v26 = *(_QWORD *)(a1 + 136);
      v27 = *(_QWORD *)(a1 + 144);
      v29 = *(_QWORD *)(a1 + 152);
      v28 = *(_QWORD *)(a1 + 160);
      v30 = *(_QWORD *)(a1 + 240);
      v31 = *(_BYTE *)(a1 + 248);
      v32 = *(_QWORD *)(a1 + 256);
      *(_QWORD *)&v73[0] = *(_QWORD *)a1;
      *((_QWORD *)&v73[0] + 1) = v17;
      LOBYTE(v73[1]) = v18;
      *(_OWORD *)((char *)&v73[1] + 8) = v19;
      *(_OWORD *)((char *)&v73[2] + 8) = v20;
      *(_OWORD *)((char *)&v73[3] + 8) = v21;
      *(_OWORD *)((char *)&v73[4] + 8) = v22;
      *(_OWORD *)((char *)&v73[5] + 8) = v23;
      *(_OWORD *)((char *)&v73[6] + 8) = v24;
      *(_OWORD *)((char *)&v73[7] + 8) = v25;
      *((_QWORD *)&v73[8] + 1) = v26;
      *(_QWORD *)&v73[9] = v27;
      *((_QWORD *)&v73[9] + 1) = v29;
      *(_QWORD *)&v73[10] = v28;
      *((_QWORD *)&v73[10] + 1) = v70;
      *(_QWORD *)&v73[11] = v71;
      v33 = *(_OWORD *)(a1 + 208);
      v73[12] = *(_OWORD *)(a1 + 192);
      v73[13] = v33;
      v69 = v12;
      v70 = a1;
      v73[14] = *(_OWORD *)(a1 + 224);
      v67 = v13;
      *((_QWORD *)&v73[11] + 1) = v13;
      *(_QWORD *)&v73[15] = v30;
      BYTE8(v73[15]) = v31;
      *(_QWORD *)&v73[16] = v32;
      sub_1C01579F0((uint64_t)v12, (uint64_t)v10);
      memcpy(v72, v73, sizeof(v72));
      sub_1C003F648(v73);
      v34 = sub_1C008F258();
      v35 = *(_QWORD *)(v34 + 16);
      if (!v35)
      {
        v36 = HIBYTE(v28) & 0xF;
        if ((v28 & 0x2000000000000000) == 0)
          v36 = v29 & 0xFFFFFFFFFFFFLL;
        if (!v36)
        {
          v28 = MEMORY[0x1E0DEE9D8];
LABEL_31:
          v52 = (uint64_t)v69;
          v51 = v70;
          OUTLINED_FUNCTION_18();
          sub_1C01AACEC(v28);
          sub_1C0157A34((uint64_t)v10);
          sub_1C0040644(v73);
          v53 = v67;
          sub_1C0156D8C(v71, v67);
          v55 = v54;
          v56 = swift_bridgeObjectRelease();
          if (*(_QWORD *)(v55 + 16))
          {
            MEMORY[0x1E0C80A78](v56);
            v65 = v52;
            sub_1C0157ADC((uint64_t)sub_1C0157A70, (uint64_t)v62, v55, (uint64_t)sub_1C0157E8C);
            v57 = OUTLINED_FUNCTION_17_0();
            MEMORY[0x1E0C80A78](v57);
            v64 = v51;
            sub_1C01F0C34();
            swift_release();
            sub_1C0157A34(v52);
          }
          else
          {
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_17_0();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726FF0);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
            v59 = OUTLINED_FUNCTION_3_60();
            *(_OWORD *)(v59 + 16) = xmmword_1C0305B60;
            sub_1C01579A8(v51, v59 + v53);
            sub_1C0157A34(v52);
          }
          goto LABEL_34;
        }
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
LABEL_41:
          OUTLINED_FUNCTION_35_20();
          v34 = v60;
        }
        v37 = *(_QWORD *)(v34 + 16);
        v35 = v37 + 1;
        if (v37 >= *(_QWORD *)(v34 + 24) >> 1)
        {
          OUTLINED_FUNCTION_35_20();
          v34 = v61;
        }
        *(_QWORD *)(v34 + 16) = v35;
        v38 = v34 + 16 * v37;
        *(_QWORD *)(v38 + 32) = v29;
        *(_QWORD *)(v38 + 40) = v28;
      }
      OUTLINED_FUNCTION_22();
      v66[1] = v34;
      v39 = (uint64_t *)(v34 + 40);
      v28 = MEMORY[0x1E0DEE9D8];
      do
      {
        v40 = *(v39 - 1);
        v41 = *v39;
        OUTLINED_FUNCTION_21();
        v42 = StringTokenizer.tokenize(_:useMorphun:removeEmojis:)(v40, v41, 1, 1);
        OUTLINED_FUNCTION_17_0();
        v29 = *(_QWORD *)(v42 + 16);
        v43 = *(_QWORD *)(v28 + 16);
        if (__OFADD__(v43, v29))
        {
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        if (!swift_isUniquelyReferenced_nonNull_native() || v43 + v29 > *(_QWORD *)(v28 + 24) >> 1)
        {
          sub_1C00500A0();
          v28 = v44;
        }
        if (*(_QWORD *)(v42 + 16))
        {
          v45 = *(_QWORD *)(v28 + 16);
          if ((*(_QWORD *)(v28 + 24) >> 1) - v45 < v29)
            goto LABEL_39;
          v46 = v28 + 16 * v45 + 32;
          if (v42 + 32 < v46 + 16 * v29 && v46 < v42 + 32 + 16 * v29)
          {
            LODWORD(v64) = 0;
            v63 = 1092;
            v62[0] = 2;
            sub_1C0304828();
            __break(1u);
            return;
          }
          swift_arrayInitWithCopy();
          if (v29)
          {
            v48 = *(_QWORD *)(v28 + 16);
            v49 = __OFADD__(v48, v29);
            v50 = v48 + v29;
            if (v49)
              goto LABEL_40;
            *(_QWORD *)(v28 + 16) = v50;
          }
        }
        else if (v29)
        {
          goto LABEL_38;
        }
        v39 += 2;
        swift_bridgeObjectRelease();
        --v35;
      }
      while (v35);
      OUTLINED_FUNCTION_18();
      goto LABEL_31;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726FF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
  v58 = OUTLINED_FUNCTION_3_60();
  *(_OWORD *)(v58 + 16) = xmmword_1C0305B60;
  sub_1C01579A8(a1, (uint64_t)&v6[v58]);
LABEL_34:
  OUTLINED_FUNCTION_1();
}

void sub_1C0156D8C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD **v15;
  __int128 v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  const char *v58;
  uint64_t v59;
  __int128 v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  os_log_type_t v84;
  _DWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  os_log_type_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F70);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = MEMORY[0x1E0DEE9E8];
  v98 = a1;
  v99 = a2;
  v105 = a1;
  v106 = a2;
  v9 = v3 + *(int *)(OUTLINED_FUNCTION_32_13() + 24);
  v10 = OUTLINED_FUNCTION_14_4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  v11 = sub_1C004F408();
  sub_1C03044E0();
  sub_1C0056CD8((uint64_t)v8);
  v12 = sub_1C005257C();
  v97 = v3;
  v13 = *(_QWORD **)(v3 + 8);
  v14 = v13[2];
  HIDWORD(v91) = v12;
  if (v14)
  {
    OUTLINED_FUNCTION_44();
    v96 = v13;
    v15 = (_QWORD **)(v13 + 7);
    *(_QWORD *)&v16 = 136315394;
    v101 = v16;
    v100 = MEMORY[0x1E0DEE9B8] + 8;
    v17 = v99;
    v102 = v11;
    do
    {
      v18 = (uint64_t)*(v15 - 3);
      v19 = (unint64_t)*(v15 - 2);
      v20 = (uint64_t)*(v15 - 1);
      v13 = *v15;
      v105 = v18;
      v106 = v19;
      v103 = v98;
      v104 = v17;
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_44();
      if (sub_1C030451C())
      {
        OUTLINED_FUNCTION_33();
      }
      else
      {
        if (qword_1ED727970 != -1)
          swift_once();
        v21 = OUTLINED_FUNCTION_9_0();
        v22 = __swift_project_value_buffer(v21, (uint64_t)&unk_1ED7295C8);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_1C0303B80();
        v23 = OUTLINED_FUNCTION_9_1();
        if (os_log_type_enabled(v22, v23))
        {
          v24 = OUTLINED_FUNCTION_4_0();
          v105 = OUTLINED_FUNCTION_4_0();
          *(_DWORD *)v24 = v101;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v24 + 4) = sub_1C003E6D8(v18, v19, &v105);
          OUTLINED_FUNCTION_2();
          OUTLINED_FUNCTION_8_2();
          *(_WORD *)(v24 + 12) = 2080;
          OUTLINED_FUNCTION_44();
          *(_QWORD *)(v24 + 14) = sub_1C003E6D8(v20, (unint64_t)v13, &v105);
          OUTLINED_FUNCTION_2();
          OUTLINED_FUNCTION_8_2();
          OUTLINED_FUNCTION_38_8(&dword_1C0039000, v22, v23, "adding relative via customRelations into matchingNames: label=%s -> %s", (uint8_t *)v24);
          OUTLINED_FUNCTION_14_32();
          OUTLINED_FUNCTION_5();
        }

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        OUTLINED_FUNCTION_44();
        sub_1C022D204((uint64_t)&v105, v20, (uint64_t)v13, v25, v26, v27, v28, v29, v91, v92);
        OUTLINED_FUNCTION_33();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v15 += 4;
      --v14;
      v17 = v99;
    }
    while (v14);
    swift_bridgeObjectRelease();
    LOWORD(v12) = WORD2(v91);
  }
  if ((unsigned __int16)v12 == 376)
  {
    if (!*(_QWORD *)(v107 + 16))
      goto LABEL_60;
    goto LABEL_34;
  }
  sub_1C02E23A0(v12);
  v94 = *(_QWORD **)(v30 + 16);
  if (v94)
  {
    v32 = 0;
    v92 = v30 + 32;
    *(_QWORD *)&v31 = 136315394;
    v101 = v31;
    v100 = MEMORY[0x1E0DEE9B8] + 8;
    v93 = v30;
    while (v32 < *(_QWORD *)(v30 + 16))
    {
      v13 = *(_QWORD **)v97;
      v33 = *(_QWORD *)(*(_QWORD *)v97 + 16);
      if (v33)
      {
        v96 = (_QWORD *)v32;
        v34 = (uint64_t *)(v92 + 16 * v32);
        v36 = *v34;
        v35 = v34[1];
        OUTLINED_FUNCTION_22();
        OUTLINED_FUNCTION_44();
        v95 = v13;
        v37 = v13 + 7;
        do
        {
          v13 = (_QWORD *)*(v37 - 2);
          v39 = *(v37 - 1);
          v38 = *v37;
          v40 = *(v37 - 3) == v36 && v13 == (_QWORD *)v35;
          if (v40 || (OUTLINED_FUNCTION_37_12() & 1) != 0)
          {
            v41 = qword_1ED727970;
            OUTLINED_FUNCTION_44();
            OUTLINED_FUNCTION_74_1();
            if (v41 != -1)
              swift_once();
            v42 = OUTLINED_FUNCTION_9_0();
            v43 = __swift_project_value_buffer(v42, (uint64_t)&unk_1ED7295C8);
            OUTLINED_FUNCTION_9_2();
            OUTLINED_FUNCTION_9_2();
            OUTLINED_FUNCTION_9_2();
            sub_1C0303B80();
            v44 = OUTLINED_FUNCTION_9_1();
            if (os_log_type_enabled(v43, v44))
            {
              v45 = OUTLINED_FUNCTION_4_0();
              v102 = v39;
              v46 = v36;
              v47 = v45;
              v105 = OUTLINED_FUNCTION_4_0();
              *(_DWORD *)v47 = v101;
              OUTLINED_FUNCTION_22();
              *(_QWORD *)(v47 + 4) = sub_1C003E6D8(v46, v35, &v105);
              OUTLINED_FUNCTION_8_2();
              *(_WORD *)(v47 + 12) = 2080;
              OUTLINED_FUNCTION_74_1();
              *(_QWORD *)(v47 + 14) = sub_1C003E6D8(v102, v38, &v105);
              OUTLINED_FUNCTION_2();
              OUTLINED_FUNCTION_8_2();
              OUTLINED_FUNCTION_38_8(&dword_1C0039000, v43, v44, "adding relative into matchingNames: label=%s -> %s", (uint8_t *)v47);
              OUTLINED_FUNCTION_14_32();
              OUTLINED_FUNCTION_5();
            }

            OUTLINED_FUNCTION_2();
            OUTLINED_FUNCTION_2();
            OUTLINED_FUNCTION_2();
            OUTLINED_FUNCTION_74_1();
            sub_1C022D204((uint64_t)&v105, v39, v38, v48, v49, v50, v51, v52, v91, v92);
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_33();
            swift_bridgeObjectRelease();
          }
          v37 += 4;
          --v33;
        }
        while (v33);
        OUTLINED_FUNCTION_18();
        swift_bridgeObjectRelease();
        v30 = v93;
        v32 = (unint64_t)v96;
      }
      if ((_QWORD *)++v32 == v94)
        goto LABEL_33;
    }
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    swift_once();
LABEL_35:
    v53 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v53, (uint64_t)&unk_1ED7295C8);
    sub_1C0303B80();
    v54 = OUTLINED_FUNCTION_42_0();
    if (OUTLINED_FUNCTION_20_7(v54))
    {
      OUTLINED_FUNCTION_4_0();
      v105 = OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_4_45(4.8149e-34);
      OUTLINED_FUNCTION_45_0();
      sub_1C030424C();
      OUTLINED_FUNCTION_20_15();
      v55 = OUTLINED_FUNCTION_22_20();
      OUTLINED_FUNCTION_10_41(v55);
      swift_bridgeObjectRelease();
      v58 = "found relatives via exact label matches. names=%s";
      goto LABEL_37;
    }
    goto LABEL_38;
  }
LABEL_33:
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v107 + 16))
  {
LABEL_34:
    if (qword_1ED727970 == -1)
      goto LABEL_35;
    goto LABEL_71;
  }
  v59 = sub_1C02E5984(SWORD2(v91));
  v94 = *(_QWORD **)(v59 + 16);
  if (v94)
  {
    v61 = 0;
    v92 = v59 + 32;
    *(_QWORD *)&v60 = 136315394;
    v101 = v60;
    v100 = MEMORY[0x1E0DEE9B8] + 8;
    v93 = v59;
    while (1)
    {
      if (v61 >= *(_QWORD *)(v59 + 16))
        goto LABEL_70;
      v13 = *(_QWORD **)v97;
      v62 = *(_QWORD *)(*(_QWORD *)v97 + 16);
      if (v62)
      {
        v96 = (_QWORD *)v61;
        v63 = (uint64_t *)(v92 + 16 * v61);
        v65 = *v63;
        v64 = v63[1];
        OUTLINED_FUNCTION_22();
        OUTLINED_FUNCTION_44();
        v95 = v13;
        v66 = v13 + 7;
        do
        {
          v13 = (_QWORD *)*(v66 - 2);
          v68 = *(v66 - 1);
          v67 = *v66;
          v69 = *(v66 - 3) == v65 && v13 == (_QWORD *)v64;
          if (v69 || (OUTLINED_FUNCTION_37_12() & 1) != 0)
          {
            v70 = qword_1ED727970;
            OUTLINED_FUNCTION_44();
            OUTLINED_FUNCTION_21();
            if (v70 != -1)
              swift_once();
            v71 = OUTLINED_FUNCTION_9_0();
            v72 = __swift_project_value_buffer(v71, (uint64_t)&unk_1ED7295C8);
            OUTLINED_FUNCTION_9_2();
            OUTLINED_FUNCTION_9_2();
            OUTLINED_FUNCTION_9_2();
            sub_1C0303B80();
            v73 = OUTLINED_FUNCTION_9_1();
            if (os_log_type_enabled(v72, v73))
            {
              v74 = OUTLINED_FUNCTION_4_0();
              v102 = v68;
              v75 = v65;
              v76 = v74;
              v105 = OUTLINED_FUNCTION_4_0();
              *(_DWORD *)v76 = v101;
              OUTLINED_FUNCTION_22();
              *(_QWORD *)(v76 + 4) = sub_1C003E6D8(v75, v64, &v105);
              OUTLINED_FUNCTION_8_2();
              *(_WORD *)(v76 + 12) = 2080;
              OUTLINED_FUNCTION_21();
              *(_QWORD *)(v76 + 14) = sub_1C003E6D8(v102, v67, &v105);
              OUTLINED_FUNCTION_2();
              OUTLINED_FUNCTION_8_2();
              OUTLINED_FUNCTION_38_8(&dword_1C0039000, v72, v73, "adding relative via fallback semantic labels into matchingNames: label=%s -> %s", (uint8_t *)v76);
              OUTLINED_FUNCTION_14_32();
              OUTLINED_FUNCTION_5();
            }

            OUTLINED_FUNCTION_2();
            OUTLINED_FUNCTION_2();
            OUTLINED_FUNCTION_2();
            OUTLINED_FUNCTION_21();
            sub_1C022D204((uint64_t)&v105, v68, v67, v77, v78, v79, v80, v81, v91, v92);
            OUTLINED_FUNCTION_17_0();
            OUTLINED_FUNCTION_33();
            swift_bridgeObjectRelease();
          }
          v66 += 4;
          --v62;
        }
        while (v62);
        OUTLINED_FUNCTION_18();
        swift_bridgeObjectRelease();
        v59 = v93;
        v61 = (unint64_t)v96;
      }
      if (*(_QWORD *)(v107 + 16))
        break;
      if ((_QWORD *)++v61 == v94)
        goto LABEL_59;
    }
    swift_bridgeObjectRelease();
    if (qword_1ED727970 != -1)
      swift_once();
    v88 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v88, (uint64_t)&unk_1ED7295C8);
    sub_1C0303B80();
    v89 = OUTLINED_FUNCTION_42_0();
    if (OUTLINED_FUNCTION_20_7(v89))
    {
      OUTLINED_FUNCTION_4_0();
      v105 = OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_4_45(4.8149e-34);
      OUTLINED_FUNCTION_45_0();
      sub_1C030424C();
      OUTLINED_FUNCTION_20_15();
      v90 = OUTLINED_FUNCTION_22_20();
      OUTLINED_FUNCTION_10_41(v90);
      swift_bridgeObjectRelease();
      v58 = "found relatives via fallback semantic labels. names=%s";
LABEL_37:
      OUTLINED_FUNCTION_15_25(&dword_1C0039000, v56, v57, v58);
      OUTLINED_FUNCTION_24_15();
      OUTLINED_FUNCTION_5();
    }
LABEL_38:

    swift_beginAccess();
    goto LABEL_39;
  }
LABEL_59:
  swift_bridgeObjectRelease();
LABEL_60:
  if (qword_1ED727970 != -1)
    swift_once();
  v82 = OUTLINED_FUNCTION_9_0();
  __swift_project_value_buffer(v82, (uint64_t)&unk_1ED7295C8);
  v83 = v99;
  OUTLINED_FUNCTION_9_2();
  sub_1C0303B80();
  v84 = OUTLINED_FUNCTION_42_0();
  if (OUTLINED_FUNCTION_20_7(v84))
  {
    v85 = (_DWORD *)OUTLINED_FUNCTION_4_0();
    v105 = OUTLINED_FUNCTION_4_0();
    *v85 = 136315138;
    OUTLINED_FUNCTION_45_0();
    v103 = sub_1C003E6D8(v98, v83, &v105);
    sub_1C03044B0();
    OUTLINED_FUNCTION_8_2();
    OUTLINED_FUNCTION_15_25(&dword_1C0039000, v86, v87, "found no relatives. label=%s");
    OUTLINED_FUNCTION_24_15();
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_2();
LABEL_39:
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C015788C(uint64_t *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)(a2 + 16))
  {
    v3 = 1;
    v4 = StringTokenizer.tokenize(_:useMorphun:removeEmojis:)(*a1, a1[1], 1, 1);
    v5 = sub_1C01AACEC(v4);
    if ((sub_1C01F22D0(v5, a2) & 1) == 0)
      v3 = sub_1C01F22D0(a2, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 1;
  }
  return v3 & 1;
}

uint64_t sub_1C0157910@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;

  v5 = *a1;
  v4 = a1[1];
  sub_1C01579A8(a2, (uint64_t)a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a3[7] = v5;
  a3[8] = v4;
  swift_bridgeObjectRelease();
  a3[9] = 0;
  a3[10] = 0xE000000000000000;
  swift_bridgeObjectRelease();
  a3[11] = 0;
  a3[12] = 0xE000000000000000;
  v6 = (char *)a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98) + 36);
  result = type metadata accessor for ContactResolver.SignalSet(0);
  v6[*(int *)(result + 140)] = 1;
  return result;
}

uint64_t sub_1C01579A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C01579F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StringTokenizer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0157A34(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StringTokenizer();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0157A70(uint64_t *a1)
{
  uint64_t v1;

  return sub_1C015788C(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1C0157A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0157ADC(a1, a2, a3, (uint64_t)sub_1C0157C24);
}

uint64_t sub_1C0157ADC(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  if ((*(_BYTE *)(a3 + 32) & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    OUTLINED_FUNCTION_23_18();
    OUTLINED_FUNCTION_7_39();
    OUTLINED_FUNCTION_26_20();
    if (a4)
      swift_willThrow();
  }
  else
  {
    v6 = swift_slowAlloc();
    OUTLINED_FUNCTION_23_18();
    OUTLINED_FUNCTION_7_39();
    OUTLINED_FUNCTION_26_20();
    MEMORY[0x1C3B98378](v6, -1, -1);
  }
  return v4;
}

uint64_t sub_1C0157C08@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0157910(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1C0157C24(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;
  unint64_t v19;
  int64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t (*v31)(char *);
  uint64_t v32;

  v31 = a4;
  v26 = a2;
  v27 = a1;
  v6 = sub_1C03016E4();
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v32 = a3;
  v12 = *(_QWORD *)(a3 + 56);
  v28 = 0;
  v29 = a3 + 56;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v30 = (unint64_t)(v13 + 63) >> 6;
  while (v15)
  {
    v16 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v17 = v16 | (v11 << 6);
LABEL_17:
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v10, *(_QWORD *)(v32 + 48) + *(_QWORD *)(v7 + 72) * v17, v6);
    v21 = v31(v10);
    if (v4)
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v22 = v21;
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    if ((v22 & 1) != 0)
    {
      *(unint64_t *)((char *)v27 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = __OFADD__(v28++, 1);
      if (v18)
        goto LABEL_30;
    }
  }
  v18 = __OFADD__(v11++, 1);
  if (v18)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v11 >= v30)
    goto LABEL_27;
  v19 = *(_QWORD *)(v29 + 8 * v11);
  if (v19)
  {
LABEL_16:
    v15 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v11 << 6);
    goto LABEL_17;
  }
  v20 = v11 + 1;
  if (v11 + 1 >= v30)
    goto LABEL_27;
  v19 = *(_QWORD *)(v29 + 8 * v20);
  if (v19)
    goto LABEL_15;
  v20 = v11 + 2;
  if (v11 + 2 >= v30)
    goto LABEL_27;
  v19 = *(_QWORD *)(v29 + 8 * v20);
  if (v19)
    goto LABEL_15;
  v20 = v11 + 3;
  if (v11 + 3 >= v30)
  {
LABEL_27:
    v23 = v26;
    v24 = v28;
    v25 = v32;
    swift_retain();
    return sub_1C0158090(v27, v23, v24, v25);
  }
  v19 = *(_QWORD *)(v29 + 8 * v20);
  if (v19)
  {
LABEL_15:
    v11 = v20;
    goto LABEL_16;
  }
  while (1)
  {
    v11 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v11 >= v30)
      goto LABEL_27;
    v19 = *(_QWORD *)(v29 + 8 * v11);
    ++v20;
    if (v19)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void sub_1C0157E8C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *))
{
  uint64_t v4;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  unint64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  int64_t v24;

  v7 = 0;
  v21 = 0;
  v22 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v24 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v12 = v11 | (v7 << 6);
LABEL_17:
    v16 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * v12);
    v17 = v16[1];
    v23[0] = *v16;
    v23[1] = v17;
    swift_bridgeObjectRetain();
    v18 = a4(v23);
    swift_bridgeObjectRelease();
    if (v4)
      return;
    if ((v18 & 1) != 0)
    {
      *(unint64_t *)((char *)a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = __OFADD__(v21++, 1);
      if (v13)
        goto LABEL_30;
    }
  }
  v13 = __OFADD__(v7++, 1);
  if (v13)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v7 >= v24)
    goto LABEL_26;
  v14 = *(_QWORD *)(v22 + 8 * v7);
  if (v14)
  {
LABEL_16:
    v10 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v7 << 6);
    goto LABEL_17;
  }
  v15 = v7 + 1;
  if (v7 + 1 >= v24)
    goto LABEL_26;
  v14 = *(_QWORD *)(v22 + 8 * v15);
  if (v14)
    goto LABEL_15;
  v15 = v7 + 2;
  if (v7 + 2 >= v24)
    goto LABEL_26;
  v14 = *(_QWORD *)(v22 + 8 * v15);
  if (v14)
    goto LABEL_15;
  v15 = v7 + 3;
  if (v7 + 3 >= v24)
  {
LABEL_26:
    swift_retain();
    sub_1C01585A0(a1, a2, v21, a3);
    return;
  }
  v14 = *(_QWORD *)(v22 + 8 * v15);
  if (v14)
  {
LABEL_15:
    v7 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    v7 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v7 >= v24)
      goto LABEL_26;
    v14 = *(_QWORD *)(v22 + 8 * v7);
    ++v15;
    if (v14)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_1C0158090(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;

  v8 = sub_1C03016E4();
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  v38 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD400);
  result = sub_1C030469C();
  v12 = result;
  v36 = a1;
  v37 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 56;
  v17 = v38;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v15 << 6);
    }
    else
    {
      v20 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v20 >= v37)
      {
LABEL_36:
        swift_release();
        return v12;
      }
      v21 = v36[v20];
      ++v15;
      if (!v21)
      {
        v15 = v20 + 1;
        if (v20 + 1 >= v37)
          goto LABEL_36;
        v21 = v36[v15];
        if (!v21)
        {
          v15 = v20 + 2;
          if (v20 + 2 >= v37)
            goto LABEL_36;
          v21 = v36[v15];
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v37)
              goto LABEL_36;
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v15 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v15 >= v37)
                  goto LABEL_36;
                v21 = v36[v15];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v15 = v22;
          }
        }
      }
LABEL_24:
      v14 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v15 << 6);
    }
    v23 = a4;
    v24 = *(_QWORD *)(a4 + 48);
    v25 = *(_QWORD *)(v17 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, v24 + v25 * v19, v8);
    sub_1C0158AF8();
    result = sub_1C0303DF0();
    v26 = -1 << *(_BYTE *)(v12 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) == 0)
      break;
    v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    v17 = v38;
LABEL_34:
    *(_QWORD *)(v16 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v12 + 48) + v29 * v25, v11, v8);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      goto LABEL_39;
    a4 = v23;
    if (!a3)
      goto LABEL_36;
  }
  v30 = 0;
  v31 = (unint64_t)(63 - v26) >> 6;
  v17 = v38;
  while (++v28 != v31 || (v30 & 1) == 0)
  {
    v32 = v28 == v31;
    if (v28 == v31)
      v28 = 0;
    v30 |= v32;
    v33 = *(_QWORD *)(v16 + 8 * v28);
    if (v33 != -1)
    {
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_1C0158370(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  char v24;
  unint64_t *v25;

  if (!a3)
  {
LABEL_35:
    swift_release();
    return;
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC028);
  v7 = OUTLINED_FUNCTION_19_24();
  v8 = v7;
  v25 = a1;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = v7 + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= a2)
      goto LABEL_35;
    v15 = v25[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= a2)
        goto LABEL_35;
      v15 = v25[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= a2)
          goto LABEL_35;
        v15 = v25[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v13);
    sub_1C0304B04();
    swift_retain();
    sub_1C0078A80();
    v18 = sub_1C0304B40() & ~(-1 << *(_BYTE *)(v8 + 32));
    if (((-1 << v18) & ~*(_QWORD *)(v11 + 8 * (v18 >> 6))) == 0)
    {
      OUTLINED_FUNCTION_16();
      while (++v21 != v22 || (v20 & 1) == 0)
      {
        v23 = v21 == v22;
        if (v21 == v22)
          v21 = 0;
        v20 |= v23;
        if (*(_QWORD *)(v11 + 8 * v21) != -1)
        {
          OUTLINED_FUNCTION_15_18();
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    OUTLINED_FUNCTION_17_16();
LABEL_33:
    *(_QWORD *)(v11 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19) = v17;
    OUTLINED_FUNCTION_34_18();
    if (v24)
      goto LABEL_38;
  }
  v16 = v14 + 3;
  if (v16 >= a2)
    goto LABEL_35;
  v15 = v25[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= a2)
      goto LABEL_35;
    v15 = v25[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
}

void sub_1C01585A0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  _QWORD *v25;
  char v26;
  uint64_t v27;

  if (!a3)
  {
LABEL_35:
    swift_release();
    return;
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726F88);
  v6 = OUTLINED_FUNCTION_19_24();
  v7 = v6;
  v27 = a2;
  if (a2 < 1)
    v8 = 0;
  else
    v8 = *a1;
  v9 = 0;
  v10 = v6 + 56;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_39;
    if (v13 >= v27)
      goto LABEL_35;
    v14 = a1[v13];
    ++v9;
    if (!v14)
    {
      v9 = v13 + 1;
      if (v13 + 1 >= v27)
        goto LABEL_35;
      v14 = a1[v9];
      if (!v14)
      {
        v9 = v13 + 2;
        if (v13 + 2 >= v27)
          goto LABEL_35;
        v14 = a1[v9];
        if (!v14)
          break;
      }
    }
LABEL_23:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    v16 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v12);
    v17 = *v16;
    v18 = v16[1];
    sub_1C0304B04();
    swift_bridgeObjectRetain();
    sub_1C0303E20();
    v19 = sub_1C0304B40() & ~(-1 << *(_BYTE *)(v7 + 32));
    if (((-1 << v19) & ~*(_QWORD *)(v10 + 8 * (v19 >> 6))) == 0)
    {
      OUTLINED_FUNCTION_16();
      while (++v22 != v23 || (v21 & 1) == 0)
      {
        v24 = v22 == v23;
        if (v22 == v23)
          v22 = 0;
        v21 |= v24;
        if (*(_QWORD *)(v10 + 8 * v22) != -1)
        {
          OUTLINED_FUNCTION_15_18();
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    OUTLINED_FUNCTION_17_16();
LABEL_33:
    *(_QWORD *)(v10 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    v25 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v20);
    *v25 = v17;
    v25[1] = v18;
    OUTLINED_FUNCTION_34_18();
    if (v26)
      goto LABEL_38;
  }
  v15 = v13 + 3;
  if (v15 >= v27)
    goto LABEL_35;
  v14 = a1[v15];
  if (v14)
  {
    v9 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v27)
      goto LABEL_35;
    v14 = a1[v9];
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_1C01587F4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE v18[48];

  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC018);
  result = OUTLINED_FUNCTION_19_24();
  v6 = result;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v11 << 6);
    }
    else
    {
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_30;
      if (v14 >= a2)
      {
LABEL_27:
        swift_release();
        return v6;
      }
      v15 = a1[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= a2)
          goto LABEL_27;
        v15 = a1[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= a2)
            goto LABEL_27;
          v15 = a1[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= a2)
              goto LABEL_27;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_31;
                if (v11 >= a2)
                  goto LABEL_27;
                v15 = a1[v11];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_24:
      v10 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v11 << 6);
    }
    sub_1C015898C(*(_QWORD *)(a4 + 48) + 48 * v13, (uint64_t)v18);
    sub_1C01589C8((uint64_t)v18);
    result = sub_1C02325B0((uint64_t)v18, v6);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      goto LABEL_27;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C015898C(uint64_t a1, uint64_t a2)
{
  __swift_memcpy41_8(a2, a1);
  return a2;
}

uint64_t sub_1C01589C8(uint64_t a1)
{
  sub_1C0120A8C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return a1;
}

_QWORD *initializeWithCopy for MeCardContactGenerator.Relation(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MeCardContactGenerator.Relation(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for MeCardContactGenerator.Relation(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MeCardContactGenerator.Relation()
{
  return &type metadata for MeCardContactGenerator.Relation;
}

unint64_t sub_1C0158AF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF5BD408;
  if (!qword_1EF5BD408)
  {
    v1 = sub_1C03016E4();
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0CAE5F0], v1);
    atomic_store(result, &qword_1EF5BD408);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_60()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_4_45(float a1)
{
  float *v1;

  *v1 = a1;
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_7_39()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return v1(v5, v4, v0, v3, v2);
}

uint64_t OUTLINED_FUNCTION_10_41(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_14_32()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_15_25(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_19_24()
{
  return sub_1C030469C();
}

uint64_t OUTLINED_FUNCTION_20_15()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_22_20()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1C003E6D8(v0, v1, (uint64_t *)(v2 - 120));
}

uint64_t OUTLINED_FUNCTION_23_18()
{
  uint64_t v0;
  _QWORD *v1;

  return sub_1C007A70C(0, v0, v1);
}

uint64_t OUTLINED_FUNCTION_24_15()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_32_13()
{
  return type metadata accessor for MeCardContactGenerator();
}

void OUTLINED_FUNCTION_34_18()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 16);
}

void OUTLINED_FUNCTION_35_20()
{
  sub_1C00500A0();
}

uint64_t OUTLINED_FUNCTION_37_12()
{
  return sub_1C0304A08();
}

uint64_t SeasAppUsageRule.__allocating_init(appUsageProvider:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t static SeasAppUsageRule.daysAgo.getter()
{
  return 7;
}

uint64_t AppUsageProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t SeasAppUsageRule.init(appUsageProvider:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_5_20();
}

uint64_t sub_1C0158CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1C0158CC0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  _QWORD *v46;
  NSObject *v47;
  NSObject *v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  NSObject *v62;
  os_log_type_t v63;
  _QWORD *v64;
  char v65;
  os_log_type_t v67;
  _BOOL8 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  id v84;
  NSObject *v85;
  NSObject *v86;
  id v87;
  NSObject *v88;
  os_log_type_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  NSObject *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t *v106;
  id v107;
  os_log_type_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  _QWORD *v122;
  os_log_t log;
  uint64_t v124;
  uint64_t type;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139[2];

  v1 = v0;
  sub_1C008EB24(v0[4]);
  if (!v4)
  {
    v11 = (_QWORD *)v0[3];
    *v11 = 0;
    v11[1] = 0;
LABEL_30:
    v65 = 3;
    goto LABEL_31;
  }
  v5 = v2;
  v6 = v3;
  swift_bridgeObjectRelease();
  if (__OFADD__(v5, v6))
  {
    __break(1u);
LABEL_48:
    swift_once();
LABEL_5:
    v7 = sub_1C0303B98();
    v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1EF5FC6E0);
    sub_1C0303B80();
    v9 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_4(v9))
    {
      v10 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1C0039000, v8, (os_log_type_t)v6, "#SeasAppUsageRule: current contact exists in fewer than 2 apps, skip app usage rule", v10, 2u);
      goto LABEL_28;
    }
LABEL_29:
    v64 = (_QWORD *)v0[3];

    *v64 = 0;
    v64[1] = 0;
    goto LABEL_30;
  }
  if (v5 + v6 <= 1)
  {
    if (qword_1EF5B7F18 == -1)
      goto LABEL_5;
    goto LABEL_48;
  }
  v12 = *(_QWORD *)(v0[4] + 16);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    OUTLINED_FUNCTION_9_2();
    v14 = (uint64_t *)(v12 + 40);
    v15 = MEMORY[0x1E0DEE9D8];
    do
    {
      v17 = *(v14 - 1);
      v16 = *v14;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_4_10();
        v15 = v20;
      }
      v18 = *(_QWORD *)(v15 + 16);
      if (v18 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        OUTLINED_FUNCTION_4_10();
        v15 = v21;
      }
      *(_QWORD *)(v15 + 16) = v18 + 1;
      v19 = v15 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v17;
      *(_QWORD *)(v19 + 40) = v16;
      v14 += 3;
      --v13;
    }
    while (v13);
    OUTLINED_FUNCTION_2();
  }
  v22 = OUTLINED_FUNCTION_44();
  v23 = sub_1C0159EB8(v22, 7);
  swift_bridgeObjectRelease();
  if (qword_1EF5B7F18 != -1)
    swift_once();
  v24 = sub_1C0303B98();
  v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1EF5FC6E0);
  OUTLINED_FUNCTION_44();
  v136 = v25;
  v26 = sub_1C0303B80();
  v27 = sub_1C03042E8();
  v135 = v0;
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v139[0] = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v28 = 136315138;
    v29 = v0;
    v30 = OUTLINED_FUNCTION_44();
    v31 = MEMORY[0x1C3B97040](v30, MEMORY[0x1E0DEA968]);
    v33 = v32;
    swift_bridgeObjectRelease();
    v29[2] = sub_1C003E6D8(v31, v33, v139);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_2();
    _os_log_impl(&dword_1C0039000, v26, v27, "#SeasAppUsageRule candidate apps: %s", v28, 0xCu);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_2();

  OUTLINED_FUNCTION_9_2();
  v34 = OUTLINED_FUNCTION_4_46();
  sub_1C03042E8();
  if (OUTLINED_FUNCTION_23_19(v34))
  {
    v35 = OUTLINED_FUNCTION_4_0();
    v139[0] = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v35 = 134218242;
    v0[2] = 7;
    sub_1C03044B0();
    *(_WORD *)(v35 + 12) = 2080;
    sub_1C00F6888();
    OUTLINED_FUNCTION_32();
    v36 = sub_1C0303D9C();
    v38 = v37;
    swift_bridgeObjectRelease();
    v0[2] = sub_1C003E6D8(v36, v38, v139);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_16_23(&dword_1C0039000, v34, v39, "#SeasAppUsageRule app usage in last %ld days: %s");
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_2();

  v40 = sub_1C0159ACC();
  v137 = v42;
  if (!v42)
  {
    OUTLINED_FUNCTION_29_0();
    v8 = OUTLINED_FUNCTION_4_46();
    v63 = sub_1C03042F4();
    if (OUTLINED_FUNCTION_4(v63))
    {
      *(_WORD *)OUTLINED_FUNCTION_4_0() = 0;
      OUTLINED_FUNCTION_93_0(&dword_1C0039000, v8, (os_log_type_t)v34, "#SeasAppUsageRule can't find maxUsage app, this not expected");
LABEL_28:
      OUTLINED_FUNCTION_5();
    }
    goto LABEL_29;
  }
  v43 = (uint64_t)v40;
  v44 = v41;
  OUTLINED_FUNCTION_9_2();
  v45 = v44;
  sub_1C0159F80(v23, v43, v137, v45);
  OUTLINED_FUNCTION_29_0();
  v46 = sub_1C0159ACC();
  v48 = v47;
  v50 = v49;
  swift_release();
  if (v48)
  {
    swift_bridgeObjectRetain_n();
    v51 = v45;
    swift_bridgeObjectRetain_n();
    v52 = v50;
    v134 = (unint64_t)v48;
    OUTLINED_FUNCTION_31_15();
    v53 = 0;
    OUTLINED_FUNCTION_31_15();
    v54 = 0;
    v55 = OUTLINED_FUNCTION_31_15();
    v56 = 0;
    sub_1C015A1C8((uint64_t)v46, (uint64_t)v48, v50);
    OUTLINED_FUNCTION_4_46();
    v57 = OUTLINED_FUNCTION_9_1();
    LODWORD(type) = v57;
    v128 = v43;
    v130 = v44;
    if (os_log_type_enabled(v48, v57))
    {
      v58 = OUTLINED_FUNCTION_4_0();
      v122 = (_QWORD *)OUTLINED_FUNCTION_4_0();
      v139[0] = OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v58 = 136315906;
      v59 = OUTLINED_FUNCTION_44();
      v135[2] = OUTLINED_FUNCTION_33_14(v59, v60, v139);
      OUTLINED_FUNCTION_17_20();
      OUTLINED_FUNCTION_6_37();

      *(_WORD *)(v58 + 12) = 2112;
      v135[2] = v55;
      v61 = v55;
      sub_1C03044B0();
      *v122 = v130;
      OUTLINED_FUNCTION_2();

      *(_WORD *)(v58 + 22) = 2080;
      swift_bridgeObjectRetain();
      v135[2] = sub_1C003E6D8((uint64_t)v46, (unint64_t)v48, v139);
      OUTLINED_FUNCTION_17_20();
      swift_bridgeObjectRelease_n();

      *(_WORD *)(v58 + 32) = 2112;
      v135[2] = v56;
      v62 = v56;
      sub_1C03044B0();
      v122[1] = v50;
      OUTLINED_FUNCTION_2();

      _os_log_impl(&dword_1C0039000, v48, (os_log_type_t)type, "#SeasAppUsageRule found maxUsage %s:%@ and secondMaxUsage: %s:%@", (uint8_t *)v58, 0x2Au);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727620);
      OUTLINED_FUNCTION_21_2();
      OUTLINED_FUNCTION_5();
    }
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_11_38();
    if (v76 == 0.0 || (OUTLINED_FUNCTION_27_20(), v78 = v77, OUTLINED_FUNCTION_11_38(), v78 / v79 >= 3.0))
    {
      OUTLINED_FUNCTION_9_2();
      v93 = v55;
      v94 = OUTLINED_FUNCTION_4_46();
      sub_1C03042E8();
      if (OUTLINED_FUNCTION_23_19(v94))
      {
        v95 = OUTLINED_FUNCTION_4_0();
        v139[0] = OUTLINED_FUNCTION_4_0();
        OUTLINED_FUNCTION_9_36(3.8521e-34);
        OUTLINED_FUNCTION_12_28();
        *(_WORD *)(v95 + 12) = 2080;
        v96 = OUTLINED_FUNCTION_44();
        v135[2] = OUTLINED_FUNCTION_13_27(v96, v97, v98, v99, v100, v101, v102, v103, v121, (uint64_t)log, v124, type, (uint64_t)v56, v128);
        sub_1C03044B0();
        OUTLINED_FUNCTION_6_37();

        OUTLINED_FUNCTION_16_23(&dword_1C0039000, v94, v104, "#SeasAppUsageRule maxUsage/secondMaxUsage >= %f, return resolved %s");
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_5();
      }
      sub_1C015A198(v128, v137, v130);
      sub_1C015A198((uint64_t)v46, (uint64_t)v48, v50);
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_2();
      v65 = 0;
      v105 = (uint64_t *)v135[3];
      *v105 = v128;
      v105[1] = v137;
    }
    else
    {
      OUTLINED_FUNCTION_27_20();
      v81 = v80;
      OUTLINED_FUNCTION_11_38();
      v83 = v81 / v82;
      OUTLINED_FUNCTION_26_21();
      v84 = v55;
      if (v83 >= 2.0)
      {
        OUTLINED_FUNCTION_26_21();
        v107 = v84;
        OUTLINED_FUNCTION_4_46();
        v108 = OUTLINED_FUNCTION_9_1();
        if (OUTLINED_FUNCTION_23_19(v48))
        {
          v109 = OUTLINED_FUNCTION_4_0();
          v139[0] = OUTLINED_FUNCTION_4_0();
          OUTLINED_FUNCTION_9_36(3.8522e-34);
          OUTLINED_FUNCTION_12_28();
          *(_WORD *)(v109 + 12) = 2048;
          v135[2] = 0x4000000000000000;
          OUTLINED_FUNCTION_12_28();
          *(_WORD *)(v109 + 22) = 2080;
          v110 = OUTLINED_FUNCTION_44();
          v135[2] = OUTLINED_FUNCTION_13_27(v110, v111, v112, v113, v114, v115, v116, v117, v121, (uint64_t)log, v124, type, (uint64_t)v56, v43);
          sub_1C03044B0();
          OUTLINED_FUNCTION_6_37();

          OUTLINED_FUNCTION_29_17(&dword_1C0039000, v48, v108, "#SeasAppUsageRule maxUsage/secondMaxUsage <= %f and >= %f, return needsConfirmation %s");
          OUTLINED_FUNCTION_23();
          OUTLINED_FUNCTION_5();
        }
        sub_1C015A198(v43, v137, v44);
        sub_1C015A198((uint64_t)v46, (uint64_t)v48, v50);
        swift_bridgeObjectRelease();

        OUTLINED_FUNCTION_2();
        v120 = (uint64_t *)v135[3];
        *v120 = v43;
        v120[1] = v137;
        v65 = 1;
      }
      else
      {
        v85 = v56;
        OUTLINED_FUNCTION_9_2();
        v86 = v56;
        OUTLINED_FUNCTION_26_21();
        v87 = v84;
        v88 = v86;
        OUTLINED_FUNCTION_4_46();
        v89 = OUTLINED_FUNCTION_9_1();
        if (os_log_type_enabled(v85, v89))
        {
          v90 = OUTLINED_FUNCTION_4_0();
          v139[0] = OUTLINED_FUNCTION_4_0();
          *(_DWORD *)v90 = 134218498;
          v135[2] = 0x4000000000000000;
          sub_1C03044B0();
          *(_WORD *)(v90 + 12) = 2080;
          v91 = OUTLINED_FUNCTION_44();
          v135[2] = OUTLINED_FUNCTION_33_14(v91, v92, v139);
          sub_1C03044B0();
          OUTLINED_FUNCTION_6_37();

          *(_WORD *)(v90 + 22) = 2080;
          OUTLINED_FUNCTION_32();
          v135[2] = sub_1C003E6D8((uint64_t)v46, v134, v139);
          sub_1C03044B0();
          swift_bridgeObjectRelease_n();

          OUTLINED_FUNCTION_29_17(&dword_1C0039000, v85, v89, "#SeasAppUsageRule maxUsage/secondMaxUsage < %f, return needsDisambiguation between %s and %s");
          OUTLINED_FUNCTION_21_2();
          OUTLINED_FUNCTION_5();
        }
        OUTLINED_FUNCTION_2();

        OUTLINED_FUNCTION_2();
        v118 = (uint64_t *)v135[3];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727E60);
        v119 = swift_allocObject();
        *(_OWORD *)(v119 + 16) = xmmword_1C03084B0;
        *(_QWORD *)(v119 + 32) = v43;
        *(_QWORD *)(v119 + 40) = v137;
        *(_QWORD *)(v119 + 48) = v46;
        *(_QWORD *)(v119 + 56) = v134;
        OUTLINED_FUNCTION_32();
        sub_1C015A198(v43, v137, v130);

        sub_1C015A198((uint64_t)v46, v134, v50);
        OUTLINED_FUNCTION_29_0();

        *v118 = v119;
        v118[1] = 0;
        v65 = 2;
      }
    }
  }
  else
  {
    OUTLINED_FUNCTION_4_46();
    v67 = OUTLINED_FUNCTION_9_1();
    v68 = os_log_type_enabled(0, v67);
    if (v68)
    {
      *(_WORD *)OUTLINED_FUNCTION_4_0() = 0;
      OUTLINED_FUNCTION_93_0(&dword_1C0039000, 0, v67, "#SeasAppUsageRule can't find secondMaxUsage app, select max usage app");
      OUTLINED_FUNCTION_5();
    }
    OUTLINED_FUNCTION_18_24(v68, v69, v70, v71, v72, v73, v74, v75, v121, (uint64_t)log, v124, type, v126, v127, v129, v131, v132, v133, (uint64_t)v0,
      (uint64_t)(v0 + 2),
      v136,
      v137);

    v106 = (uint64_t *)v0[3];
    v65 = 0;
    *v106 = v43;
    v106[1] = v138;
  }
LABEL_31:
  *(_BYTE *)(v1[3] + 16) = v65;
  return ((uint64_t (*)(void))v1[1])();
}

_QWORD *sub_1C0159ACC()
{
  _QWORD *result;
  unint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  double v17;
  double v18;
  double v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;

  result = sub_1C006F164(&v25);
  v24 = v26;
  if (!v29)
  {
    v20 = v28 + 1;
    if (__OFADD__(v28, 1))
      goto LABEL_44;
    v3 = (unint64_t)(v27 + 64) >> 6;
    if (v20 < v3)
    {
      v21 = *(_QWORD *)(v26 + 8 * v20);
      v4 = v28 + 1;
      if (v21)
      {
LABEL_29:
        v1 = (v21 - 1) & v21;
        v2 = __clz(__rbit64(v21)) + (v4 << 6);
        goto LABEL_3;
      }
      v4 = v28 + 2;
      if (v28 + 2 < v3)
      {
        v21 = *(_QWORD *)(v26 + 8 * v4);
        if (v21)
          goto LABEL_29;
        v4 = v28 + 3;
        if (v28 + 3 < v3)
        {
          v21 = *(_QWORD *)(v26 + 8 * v4);
          if (v21)
            goto LABEL_29;
          v4 = v28 + 4;
          if (v28 + 4 < v3)
          {
            v21 = *(_QWORD *)(v26 + 8 * v4);
            if (v21)
              goto LABEL_29;
            v4 = v28 + 5;
            if (v28 + 5 < v3)
            {
              v21 = *(_QWORD *)(v26 + 8 * v4);
              if (!v21)
              {
                v22 = v28 + 6;
                do
                {
                  if (v22 >= v3)
                    goto LABEL_42;
                  v21 = *(_QWORD *)(v26 + 8 * v22++);
                }
                while (!v21);
                v4 = v22 - 1;
              }
              goto LABEL_29;
            }
          }
        }
      }
    }
LABEL_42:
    swift_bridgeObjectRetain();
    sub_1C015A4A4((uint64_t)&v25);
    return 0;
  }
  v1 = (v29 - 1) & v29;
  v2 = __clz(__rbit64(v29)) | (v28 << 6);
  v3 = (unint64_t)(v27 + 64) >> 6;
  v4 = v28;
LABEL_3:
  v5 = v25;
  v23 = *(_QWORD *)(*(_QWORD *)(v25 + 48) + 16 * v2);
  v6 = *(void **)(*(_QWORD *)(v25 + 56) + 8 * v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = v6;
  v7 = result;
  while (1)
  {
    if (v1)
    {
      v8 = __clz(__rbit64(v1));
      v1 &= v1 - 1;
      v9 = v8 | (v4 << 6);
      goto LABEL_22;
    }
    v10 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v10 >= v3)
      goto LABEL_25;
    v11 = *(_QWORD *)(v24 + 8 * v10);
    v12 = v4 + 1;
    if (!v11)
    {
      v12 = v4 + 2;
      if (v4 + 2 >= v3)
        goto LABEL_25;
      v11 = *(_QWORD *)(v24 + 8 * v12);
      if (!v11)
      {
        v12 = v4 + 3;
        if (v4 + 3 >= v3)
          goto LABEL_25;
        v11 = *(_QWORD *)(v24 + 8 * v12);
        if (!v11)
        {
          v12 = v4 + 4;
          if (v4 + 4 >= v3)
            goto LABEL_25;
          v11 = *(_QWORD *)(v24 + 8 * v12);
          if (!v11)
          {
            v12 = v4 + 5;
            if (v4 + 5 >= v3)
              goto LABEL_25;
            v11 = *(_QWORD *)(v24 + 8 * v12);
            if (!v11)
            {
              v13 = v4 + 6;
              while (v13 < v3)
              {
                v11 = *(_QWORD *)(v24 + 8 * v13++);
                if (v11)
                {
                  v12 = v13 - 1;
                  goto LABEL_21;
                }
              }
LABEL_25:
              swift_release();
              return (_QWORD *)v23;
            }
          }
        }
      }
    }
LABEL_21:
    v1 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
    v4 = v12;
LABEL_22:
    v14 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v9);
    v15 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v9);
    swift_bridgeObjectRetain();
    v16 = v15;
    objc_msgSend(v7, sel_doubleValue);
    v18 = v17;
    objc_msgSend(v16, sel_doubleValue);
    if (v18 < v19)
    {

      result = (_QWORD *)swift_bridgeObjectRelease();
      v7 = v16;
      v23 = v14;
    }
    else
    {

      result = (_QWORD *)swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

unint64_t sub_1C0159DD8()
{
  return 0xD000000000000010;
}

uint64_t SeasAppUsageRule.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t SeasAppUsageRule.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0159E34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C008E870;
  return sub_1C0158CA4(a1, a2);
}

unint64_t sub_1C0159E98()
{
  sub_1C0159DD8();
  return 0xD000000000000010;
}

uint64_t sub_1C0159EB8(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D709A8]), sel_init);
  v4 = (void *)sub_1C0304120();
  v5 = objc_msgSend(v3, sel_relativeAppUsageProbabilitiesForCandidateBundleIds_daysAgo_, v4, a2);

  sub_1C00F6888();
  v6 = sub_1C0303D90();

  return v6;
}

uint64_t AppUsageProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C0159F80(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t isStackAllocationSafe;
  void *v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  _QWORD v20[2];

  v20[1] = *MEMORY[0x1E0C80C00];
  v9 = *(_BYTE *)(a1 + 32);
  v10 = v9 & 0x3F;
  v11 = (unint64_t)((1 << v9) + 63) >> 6;
  swift_bridgeObjectRetain_n();
  isStackAllocationSafe = a4;
  v13 = (void *)isStackAllocationSafe;
  if (v10 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v14 = (_QWORD *)((char *)v20 - ((8 * v11 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1C007A70C(0, v11, v14);
    swift_bridgeObjectRetain();
    v15 = v13;
    v16 = sub_1C015A2E0((uint64_t)v14, v11, a1, a2, a3, v15);
    if (v4)
      swift_willThrow();
    else
      a2 = v16;

    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = (_QWORD *)swift_slowAlloc();
    sub_1C007A70C(0, v11, v17);
    swift_bridgeObjectRetain();
    v18 = v13;
    a2 = sub_1C015A2E0((uint64_t)v17, v11, a1, a2, a3, v18);
    MEMORY[0x1C3B98378](v17, -1, -1);

    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease_n();
  return a2;
}

void sub_1C015A198(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

  }
}

id sub_1C015A1C8(uint64_t a1, uint64_t a2, void *a3)
{
  id result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return a3;
  }
  return result;
}

uint64_t type metadata accessor for SeasAppUsageRule()
{
  return objc_opt_self();
}

uint64_t method lookup function for SeasAppUsageRule()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SeasAppUsageRule.__allocating_init(appUsageProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of SeasAppUsageRule.resolve(features:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 96) + *(_QWORD *)(*(_QWORD *)v2 + 96));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1C008E870;
  return v8(a1, a2);
}

uint64_t dispatch thunk of SeasAppUsageRule.getName()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t type metadata accessor for AppUsageProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for AppUsageProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AppUsageProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1C015A2E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v24;
  uint64_t v25;
  uint64_t v28;

  v28 = result;
  v9 = 0;
  v10 = 0;
  v11 = a3 + 64;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(a3 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (v14)
  {
    v16 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v17 = v16 | (v10 << 6);
LABEL_20:
    v21 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v17);
    result = *v21;
    if (*v21 != a4 || v21[1] != a5)
    {
      result = sub_1C0304A08();
      if ((result & 1) == 0)
      {
        *(_QWORD *)(v28 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
        if (__OFADD__(v9++, 1))
        {
          __break(1u);
LABEL_28:
          sub_1C02A1040(v28, a2, v9);
          v25 = v24;

          swift_bridgeObjectRelease();
          return v25;
        }
      }
    }
  }
  v18 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v18 >= v15)
    goto LABEL_28;
  v19 = *(_QWORD *)(v11 + 8 * v18);
  ++v10;
  if (v19)
    goto LABEL_19;
  v10 = v18 + 1;
  if (v18 + 1 >= v15)
    goto LABEL_28;
  v19 = *(_QWORD *)(v11 + 8 * v10);
  if (v19)
    goto LABEL_19;
  v10 = v18 + 2;
  if (v18 + 2 >= v15)
    goto LABEL_28;
  v19 = *(_QWORD *)(v11 + 8 * v10);
  if (v19)
  {
LABEL_19:
    v14 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v10 << 6);
    goto LABEL_20;
  }
  v20 = v18 + 3;
  if (v20 >= v15)
    goto LABEL_28;
  v19 = *(_QWORD *)(v11 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_19;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v15)
      goto LABEL_28;
    v19 = *(_QWORD *)(v11 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_19;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C015A4A4(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t OUTLINED_FUNCTION_4_46()
{
  return sub_1C0303B80();
}

uint64_t OUTLINED_FUNCTION_6_37()
{
  return swift_bridgeObjectRelease_n();
}

void OUTLINED_FUNCTION_9_36(float a1)
{
  float *v1;
  uint64_t v2;

  *v1 = a1;
  *(_QWORD *)(v2 + 16) = 0x4008000000000000;
}

id OUTLINED_FUNCTION_11_38()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 3144));
}

uint64_t OUTLINED_FUNCTION_12_28()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_13_27(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unint64_t v14;
  uint64_t v15;

  return sub_1C003E6D8(a14, v14, (uint64_t *)(v15 - 96));
}

void OUTLINED_FUNCTION_14_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  uint64_t v15;
  uint64_t v16;

  sub_1C015A198(v16, v15, a15);
}

void OUTLINED_FUNCTION_16_23(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  uint8_t *v4;
  os_log_type_t v5;

  _os_log_impl(a1, a2, v5, a4, v4, 0x16u);
}

uint64_t OUTLINED_FUNCTION_17_20()
{
  return sub_1C03044B0();
}

void OUTLINED_FUNCTION_18_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  void *v23;

  sub_1C015A198(v22, a22, v23);
}

BOOL OUTLINED_FUNCTION_23_19(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

id OUTLINED_FUNCTION_27_20()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 3144));
}

void OUTLINED_FUNCTION_29_17(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x20u);
}

uint64_t OUTLINED_FUNCTION_30_14()
{
  return swift_bridgeObjectRelease();
}

id sub_1C015A594()
{
  void *v0;
  uint64_t v1;
  id result;
  void *v3;
  uint64_t v4;
  char v5;
  char v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F70);
  MEMORY[0x1E0C80A78](v1);
  result = objc_msgSend(v0, sel_label);
  if (result)
  {
    v3 = result;
    v4 = sub_1C0303EB0();
    v6 = v5;

    sub_1C0301DB0();
    OUTLINED_FUNCTION_1_50();
    sub_1C004F408();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_0_60();
    OUTLINED_FUNCTION_2_50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v3 & 1) == 0)
      sub_1C0303F40();
    OUTLINED_FUNCTION_1_50();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_0_60();
    OUTLINED_FUNCTION_2_50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
      sub_1C0303F40();
    return (id)v4;
  }
  return result;
}

id sub_1C015A720(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = a1;
  sub_1C015A594();
  v3 = v2;

  if (v3)
  {
    v4 = (void *)sub_1C0303E8C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t OUTLINED_FUNCTION_0_60()
{
  return sub_1C0304528();
}

uint64_t OUTLINED_FUNCTION_1_50()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_2_50()
{
  uint64_t v0;

  return sub_1C0056CD8(v0);
}

uint64_t sub_1C015A7C8()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD v27[5];

  sub_1C006F164(v27);
  v0 = v27[0];
  v1 = v27[1];
  v2 = v27[3];
  v3 = v27[4];
  v4 = (unint64_t)(v27[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  v26 = MEMORY[0x1E0DEE9D8];
  while (v3)
  {
    v5 = __clz(__rbit64(v3));
    v3 &= v3 - 1;
    v6 = v5 | (v2 << 6);
LABEL_20:
    v11 = (uint64_t *)(*(_QWORD *)(v0 + 48) + 16 * v6);
    v12 = *v11;
    v13 = v11[1];
    v14 = *(double *)(*(_QWORD *)(v0 + 56) + 8 * v6);
    swift_bridgeObjectRetain();
    v15 = sub_1C015A9E8(v12, v13, v14);
    v17 = v16;
    v19 = v18;
    swift_bridgeObjectRelease();
    if (v17)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C004FAA8();
        v26 = v23;
      }
      v20 = *(_QWORD *)(v26 + 16);
      v21 = v20 + 1;
      if (v20 >= *(_QWORD *)(v26 + 24) >> 1)
      {
        sub_1C004FAA8();
        v21 = v20 + 1;
        v26 = v24;
      }
      *(_QWORD *)(v26 + 16) = v21;
      v22 = (_QWORD *)(v26 + 24 * v20);
      v22[4] = v15;
      v22[5] = v17;
      v22[6] = v19;
    }
  }
  v7 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    JUMPOUT(0x1C015A9D8);
  }
  if (v7 >= v4)
    goto LABEL_26;
  v8 = *(_QWORD *)(v1 + 8 * v7);
  v9 = v2 + 1;
  if (v8)
    goto LABEL_19;
  v9 = v2 + 2;
  if (v2 + 2 >= v4)
    goto LABEL_26;
  v8 = *(_QWORD *)(v1 + 8 * v9);
  if (v8)
    goto LABEL_19;
  v9 = v2 + 3;
  if (v2 + 3 >= v4)
    goto LABEL_26;
  v8 = *(_QWORD *)(v1 + 8 * v9);
  if (v8)
    goto LABEL_19;
  v9 = v2 + 4;
  if (v2 + 4 >= v4)
    goto LABEL_26;
  v8 = *(_QWORD *)(v1 + 8 * v9);
  if (v8)
    goto LABEL_19;
  v9 = v2 + 5;
  if (v2 + 5 >= v4)
    goto LABEL_26;
  v8 = *(_QWORD *)(v1 + 8 * v9);
  if (v8)
  {
LABEL_19:
    v3 = (v8 - 1) & v8;
    v6 = __clz(__rbit64(v8)) + (v9 << 6);
    v2 = v9;
    goto LABEL_20;
  }
  v10 = v2 + 6;
  while (v10 < v4)
  {
    v8 = *(_QWORD *)(v1 + 8 * v10++);
    if (v8)
    {
      v9 = v10 - 1;
      goto LABEL_19;
    }
  }
LABEL_26:
  swift_release();
  return v26;
}

uint64_t sub_1C015A9E8(uint64_t a1, unint64_t a2, double a3)
{
  double v5;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = trunc(a3);
  if (a3 <= -9.22337204e18 || a3 >= 9.22337204e18 || v5 != a3)
  {
    if ((~*(_QWORD *)&a3 & 0x7FF0000000000000) != 0)
    {
      if (a3 > -9.22337204e18)
      {
        if (a3 < 9.22337204e18)
        {
          if (qword_1ED727970 == -1)
            goto LABEL_12;
          goto LABEL_20;
        }
LABEL_19:
        __break(1u);
LABEL_20:
        swift_once();
LABEL_12:
        v8 = sub_1C0303B98();
        __swift_project_value_buffer(v8, (uint64_t)&unk_1ED7295C8);
        swift_bridgeObjectRetain_n();
        v9 = sub_1C0303B80();
        v10 = sub_1C03042E8();
        if (os_log_type_enabled(v9, v10))
        {
          v11 = swift_slowAlloc();
          v12 = swift_slowAlloc();
          v14 = v12;
          *(_DWORD *)v11 = 136315650;
          swift_bridgeObjectRetain();
          sub_1C003E6D8(a1, a2, &v14);
          sub_1C03044B0();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v11 + 12) = 2048;
          sub_1C03044B0();
          *(_WORD *)(v11 + 22) = 2048;
          sub_1C03044B0();
          _os_log_impl(&dword_1C0039000, v9, v10, "Rounded down value for signal %s %f -> %ld", (uint8_t *)v11, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1C3B98378](v12, -1, -1);
          MEMORY[0x1C3B98378](v11, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_19;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1C015AC48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char v30;
  char v31;
  BOOL v32;
  char v33;
  char v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t *v46;
  uint64_t v47;
  char v48;
  char v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  int v73;
  int v74;
  uint64_t v75;
  unsigned __int8 *v76;
  uint64_t v77;
  int v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  BOOL v95;
  int *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t);
  uint64_t v108;
  char v109;
  void (*v110)(uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  int *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD v133[33];
  _QWORD v134[34];

  v132 = OUTLINED_FUNCTION_40_1();
  v126 = *(_QWORD *)(v132 - 8);
  MEMORY[0x1E0C80A78](v132);
  OUTLINED_FUNCTION_53();
  v125 = v5;
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD628);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_53();
  v131 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_27();
  v128 = v9;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v10);
  v129 = (uint64_t)&v116 - v11;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v12);
  v130 = (uint64_t)&v116 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_39_2();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD630);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_6_0();
  v20 = v19 - v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261B8);
  OUTLINED_FUNCTION_12_0();
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v116 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v22);
  v27 = (char *)&v116 - v26;
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v116 - v28;
  memcpy(v134, (const void *)a1, 0x108uLL);
  memcpy(v133, (const void *)a2, sizeof(v133));
  static ContactQuery.== infix(_:_:)((uint64_t)v134, (uint64_t)v133);
  if ((v30 & 1) != 0)
  {
    sub_1C025C22C(*(_BYTE *)(a1 + 264));
    if ((v31 & 1) != 0)
    {
      v32 = *(_QWORD *)(a1 + 272) == *(_QWORD *)(a2 + 272) && *(_QWORD *)(a1 + 280) == *(_QWORD *)(a2 + 280);
      if ((v32 || (OUTLINED_FUNCTION_176() & 1) != 0)
        && *(unsigned __int8 *)(a1 + 288) == *(unsigned __int8 *)(a2 + 288)
        && *(unsigned __int8 *)(a1 + 289) == *(unsigned __int8 *)(a2 + 289))
      {
        sub_1C00F0548();
        if ((v33 & 1) != 0)
        {
          v124 = (int *)type metadata accessor for ContactResolverRunTimeData(0);
          sub_1C015D690(a1 + v124[10], a2 + v124[10]);
          if ((v34 & 1) != 0)
          {
            v35 = v124[11];
            v36 = *(_BYTE *)(a1 + v35);
            v122 = *(unsigned __int8 *)(a2 + v35);
            v121 = sub_1C006AF9C(v36);
            v123 = v37;
            if (v121 == sub_1C006AF9C(v122) && v123 == v38)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              v120 = v38;
              v122 = OUTLINED_FUNCTION_176();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v122 & 1) == 0)
                goto LABEL_78;
            }
            if (*(unsigned __int8 *)(a1 + v124[12]) == *(unsigned __int8 *)(a2 + v124[12]))
            {
              sub_1C025D68C(*(_BYTE *)(a1 + v124[13]));
              if ((v40 & 1) != 0)
              {
                sub_1C0045DFC(a1 + v124[14], (uint64_t)v29, &qword_1ED7261B8);
                sub_1C0045DFC(a2 + v124[14], (uint64_t)v27, &qword_1ED7261B8);
                v41 = v20 + *(int *)(v16 + 48);
                v42 = OUTLINED_FUNCTION_75_4();
                sub_1C0045DFC(v42, v43, &qword_1ED7261B8);
                v123 = v41;
                sub_1C0045DFC((uint64_t)v27, v41, &qword_1ED7261B8);
                OUTLINED_FUNCTION_33_1(v20, 1, v14);
                if (v32)
                {
                  OUTLINED_FUNCTION_61((uint64_t)v27);
                  OUTLINED_FUNCTION_61((uint64_t)v29);
                  OUTLINED_FUNCTION_33_1(v123, 1, v14);
                  if (v32)
                  {
                    sub_1C0044B78(v20, &qword_1ED7261B8);
                    goto LABEL_32;
                  }
                }
                else
                {
                  sub_1C0045DFC(v20, (uint64_t)v24, &qword_1ED7261B8);
                  v44 = v123;
                  OUTLINED_FUNCTION_33_1(v123, 1, v14);
                  if (!v45)
                  {
                    sub_1C0161728(v44, v2);
                    sub_1C015D690((uint64_t)v24, v2);
                    v49 = v48;
                    sub_1C0044B78(v2, &qword_1ED7261A8);
                    OUTLINED_FUNCTION_61((uint64_t)v27);
                    OUTLINED_FUNCTION_61((uint64_t)v29);
                    sub_1C0044B78((uint64_t)v24, &qword_1ED7261A8);
                    OUTLINED_FUNCTION_61(v20);
                    if ((v49 & 1) == 0)
                      goto LABEL_78;
LABEL_32:
                    v50 = v124;
                    v51 = v124[15];
                    v52 = *(_QWORD *)(a1 + v51);
                    v53 = *(_QWORD *)(a1 + v51 + 8);
                    v54 = *(_QWORD *)(a1 + v51 + 16);
                    v55 = *(_QWORD *)(a1 + v51 + 24);
                    v56 = *(_QWORD *)(a1 + v51 + 32);
                    v57 = *(_QWORD *)(a1 + v51 + 40);
                    v58 = (uint64_t *)(a2 + v51);
                    v59 = *v58;
                    v60 = v58[1];
                    v61 = v58[2];
                    v62 = v58[3];
                    v63 = v58[4];
                    v64 = v58[5];
                    if (v53 == 1)
                    {
                      if (v60 == 1)
                      {
LABEL_38:
                        v70 = v50[16];
                        v71 = *(unsigned __int8 *)(a1 + v70);
                        v72 = *(unsigned __int8 *)(a1 + v70 + 1);
                        v73 = *(unsigned __int8 *)(a1 + v70 + 2);
                        v74 = *(unsigned __int8 *)(a1 + v70 + 3);
                        v75 = *(unsigned __int8 *)(a1 + v70 + 4);
                        v76 = (unsigned __int8 *)(a2 + v70);
                        v77 = *v76;
                        v78 = v76[1];
                        v79 = v76[2];
                        v80 = v76[3];
                        v81 = v76[4];
                        if (v74)
                          v82 = 0x1000000;
                        else
                          v82 = 0;
                        v83 = v82 | (v75 << 32);
                        if (v73)
                          v84 = 0x10000;
                        else
                          v84 = 0;
                        if (v72)
                          v85 = 256;
                        else
                          v85 = 0;
                        v86 = v83 | v84 | v85 | v71;
                        if (v80)
                          v87 = 0x1000000;
                        else
                          v87 = 0;
                        v88 = v87 | (v81 << 32);
                        if (v79)
                          v89 = 0x10000;
                        else
                          v89 = 0;
                        if (v78)
                          v90 = 256;
                        else
                          v90 = 0;
                        if (!sub_1C01219D4(v86, v88 | v89 | v90 | v77))
                          goto LABEL_78;
                        OUTLINED_FUNCTION_72_4();
                        if (v91)
                        {
                          if (!v92)
                            goto LABEL_78;
                          v95 = *v93 == *v94 && v91 == v92;
                          if (!v95 && (OUTLINED_FUNCTION_176() & 1) == 0)
                            goto LABEL_78;
                        }
                        else if (v92)
                        {
                          goto LABEL_78;
                        }
                        if ((sub_1C0301D38() & 1) == 0)
                          goto LABEL_78;
                        v96 = v124;
                        v97 = v130;
                        OUTLINED_FUNCTION_66_4(a1 + v124[19], v130);
                        OUTLINED_FUNCTION_66_4(a2 + v96[19], v129);
                        v98 = v131;
                        v99 = v131 + *(int *)(v127 + 48);
                        OUTLINED_FUNCTION_66_4(v97, v131);
                        v100 = OUTLINED_FUNCTION_75_4();
                        OUTLINED_FUNCTION_66_4(v100, v101);
                        OUTLINED_FUNCTION_33_1(v98, 1, v132);
                        if (v32)
                        {
                          OUTLINED_FUNCTION_29_13(v129);
                          OUTLINED_FUNCTION_29_13(v130);
                          OUTLINED_FUNCTION_33_1(v99, 1, v132);
                          if (v32)
                          {
                            sub_1C0044B78(v131, &qword_1ED728070);
LABEL_77:
                            if (*(unsigned __int8 *)(a1 + v124[20]) == *(unsigned __int8 *)(a2 + v124[20]))
                            {
                              OUTLINED_FUNCTION_72_4();
                              if (v111)
                              {
                                if (v112)
                                {
                                  if (*v113 != *v114 || v111 != v112)
                                    OUTLINED_FUNCTION_176();
                                }
                              }
                            }
                            goto LABEL_78;
                          }
                        }
                        else
                        {
                          sub_1C0045DFC(v131, v128, &qword_1ED728070);
                          OUTLINED_FUNCTION_33_1(v99, 1, v132);
                          if (!v102)
                          {
                            v104 = v125;
                            v103 = v126;
                            v105 = OUTLINED_FUNCTION_75_4();
                            v106 = v132;
                            v107(v105);
                            sub_1C006831C(&qword_1EF5B9098, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
                            v108 = v128;
                            v109 = sub_1C0303E80();
                            v110 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
                            v110(v104, v106);
                            OUTLINED_FUNCTION_29_13(v129);
                            OUTLINED_FUNCTION_29_13(v130);
                            v110(v108, v106);
                            OUTLINED_FUNCTION_29_13(v131);
                            if ((v109 & 1) == 0)
                              goto LABEL_78;
                            goto LABEL_77;
                          }
                          sub_1C0044B78(v129, &qword_1ED728070);
                          sub_1C0044B78(v130, &qword_1ED728070);
                          (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v128, v132);
                        }
                        v46 = &qword_1EF5BD628;
                        v47 = v131;
LABEL_30:
                        sub_1C0044B78(v47, v46);
                        goto LABEL_78;
                      }
                    }
                    else if (v60 != 1)
                    {
                      v133[0] = v52;
                      v133[1] = v53;
                      v133[2] = v54;
                      v133[3] = v55;
                      v133[4] = v56;
                      v133[5] = v57;
                      v134[0] = v59;
                      v134[1] = v60;
                      v134[2] = v61;
                      v134[3] = v62;
                      v119 = v64;
                      v120 = v63;
                      v134[4] = v63;
                      v134[5] = v64;
                      v121 = v56;
                      v116 = v54;
                      v117 = v59;
                      v69 = v52;
                      v123 = v52;
                      v118 = v61;
                      v122 = sub_1C0151638(v133, v134);
                      OUTLINED_FUNCTION_43_12(v69, v53);
                      OUTLINED_FUNCTION_43_12(v123, v53);
                      sub_1C00EE078(v117, v60);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      OUTLINED_FUNCTION_29_0();
                      OUTLINED_FUNCTION_14();
                      sub_1C0066AFC(v123, v53);
                      v50 = v124;
                      if ((v122 & 1) == 0)
                        goto LABEL_78;
                      goto LABEL_38;
                    }
                    v131 = v55;
                    v132 = v57;
                    v123 = v52;
                    sub_1C00EE078(v52, v53);
                    v65 = OUTLINED_FUNCTION_47_14();
                    sub_1C00EE078(v65, v66);
                    sub_1C0066AFC(v123, v53);
                    v67 = OUTLINED_FUNCTION_47_14();
                    sub_1C0066AFC(v67, v68);
                    goto LABEL_78;
                  }
                  sub_1C0044B78((uint64_t)v27, &qword_1ED7261B8);
                  sub_1C0044B78((uint64_t)v29, &qword_1ED7261B8);
                  sub_1C0044B78((uint64_t)v24, &qword_1ED7261A8);
                }
                v46 = &qword_1EF5BD630;
                v47 = v20;
                goto LABEL_30;
              }
            }
          }
        }
      }
    }
  }
LABEL_78:
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C015B54C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  char v16;

  v2 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C032F7A0 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C032F7C0 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C032F7E0 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001C032F800 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = a1 == 0x7365686374616DLL && a2 == 0xE700000000000000;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else
    {
      v7 = a1 == 0x6E656D6D6F636572 && a2 == 0xEE006E6F69746164;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else
      {
        v8 = a1 == 0x6974756C6F736572 && a2 == 0xEE00657079546E6FLL;
        if (v8 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 7;
        }
        else
        {
          v9 = a1 == 0x6F72506563726F66 && a2 == 0xEB0000000074706DLL;
          if (v9 || (sub_1C0304A08() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 8;
          }
          else
          {
            v10 = a1 == 0x6F72506563726F66 && a2 == 0xEF6570795474706DLL;
            if (v10 || (sub_1C0304A08() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else if (a1 == 0xD000000000000019 && a2 == 0x80000001C032F830 || (sub_1C0304A08() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 10;
            }
            else
            {
              v11 = a1 == 0x726E456C61697274 && a2 == 0xEF746E656D6C6C6FLL;
              if (v11 || (sub_1C0304A08() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 11;
              }
              else
              {
                v12 = a1 == 0x546E755273756C50 && a2 == 0xEF61746144656D69;
                if (v12 || (sub_1C0304A08() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 12;
                }
                else
                {
                  v13 = a1 == 0x4974736575716572 && a2 == 0xE900000000000064;
                  if (v13 || (sub_1C0304A08() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 13;
                  }
                  else
                  {
                    v14 = a1 == 0x64497972657571 && a2 == 0xE700000000000000;
                    if (v14 || (sub_1C0304A08() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 14;
                    }
                    else
                    {
                      v15 = a1 == 0x6974756C6F736572 && a2 == 0xEC00000064496E6FLL;
                      if (v15 || (sub_1C0304A08() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 15;
                      }
                      else if (a1 == 0xD000000000000014 && a2 == 0x80000001C032F850 || (sub_1C0304A08() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 16;
                      }
                      else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001C032F870)
                      {
                        swift_bridgeObjectRelease();
                        return 17;
                      }
                      else
                      {
                        v16 = sub_1C0304A08();
                        swift_bridgeObjectRelease();
                        if ((v16 & 1) != 0)
                          return 17;
                        else
                          return 18;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C015BCD8()
{
  return 18;
}

void sub_1C015BCE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  _OWORD *v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[33];
  _QWORD v50[2];
  char v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  _QWORD *v78;

  OUTLINED_FUNCTION_40_0();
  v78 = v3;
  v30 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_53();
  v31 = v6;
  v7 = sub_1C0301D5C();
  v41 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_53();
  v35 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261B8);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_53();
  v32 = v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_53();
  v34 = v13;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD588);
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v14 = OUTLINED_FUNCTION_48_12();
  v15 = (int *)type metadata accessor for ContactResolverRunTimeData(v14);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_32_0();
  v50[0] = 0;
  v50[1] = 0xE000000000000000;
  v51 = 0;
  v52 = 0;
  v53 = 0xE000000000000000;
  v54 = 0;
  v55 = 0xE000000000000000;
  v56 = 0;
  v57 = 0xE000000000000000;
  v58 = 0;
  v59 = 0xE000000000000000;
  v60 = 0;
  v61 = 0xE000000000000000;
  v62 = 0;
  v63 = 0xE000000000000000;
  v64 = 0;
  v65 = 0xE000000000000000;
  v66 = 0;
  v67 = 0xE000000000000000;
  v73 = 0u;
  v72 = 0u;
  v71 = 0u;
  v70 = 0u;
  v68 = 0;
  v69 = 0xE000000000000000;
  v74 = 0;
  v75 = MEMORY[0x1E0DEE9D8];
  v76 = 1;
  v77 = 0;
  OUTLINED_FUNCTION_27_0((void *)v2, v50);
  *(_QWORD *)(v2 + 272) = 0;
  *(_QWORD *)(v2 + 280) = 0xE000000000000000;
  *(_WORD *)(v2 + 288) = 0;
  v33 = v15[12];
  *(_BYTE *)(v2 + v33) = 0;
  v17 = v15[13];
  *(_BYTE *)(v2 + v17) = 5;
  v44 = v2 + v15[14];
  __swift_storeEnumTagSinglePayload(v44, 1, 1, v11);
  v18 = (_OWORD *)(v2 + v15[15]);
  *v18 = xmmword_1C0307CF0;
  v18[1] = 0u;
  v43 = v18;
  v18[2] = 0u;
  v19 = v2 + v15[16];
  *(_DWORD *)v19 = 1;
  *(_BYTE *)(v19 + 4) = 2;
  v20 = (uint64_t *)(v2 + v15[17]);
  *v20 = 0;
  v20[1] = 0;
  v42 = v20;
  v39 = v2 + v15[18];
  sub_1C0301D50();
  v38 = v2 + v15[19];
  __swift_storeEnumTagSinglePayload(v38, 1, 1, v7);
  v21 = v15[20];
  *(_BYTE *)(v2 + v21) = 0;
  v22 = (uint64_t *)(v2 + v15[21]);
  *v22 = 0;
  v22[1] = 0;
  v40 = v22;
  __swift_project_boxed_opaque_existential_1(v78, v78[3]);
  sub_1C006A4BC();
  sub_1C0304B88();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v78);
    OUTLINED_FUNCTION_27_0(v49, (const void *)v2);
    sub_1C0040644(v49);
    swift_bridgeObjectRelease();
    sub_1C0044B78(v44, &qword_1ED7261B8);
    sub_1C0066AFC(*(_QWORD *)v43, *((_QWORD *)v43 + 1));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v7);
    sub_1C0044B78(v38, &qword_1ED728070);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C003F814();
    OUTLINED_FUNCTION_13_28();
    sub_1C0040644(v50);
    OUTLINED_FUNCTION_27_0((void *)v2, v49);
    sub_1C01616EC();
    OUTLINED_FUNCTION_12_29();
    *(_BYTE *)(v2 + 264) = v45;
    LOBYTE(v45) = 2;
    *(_QWORD *)(v2 + 272) = sub_1C03048AC();
    *(_QWORD *)(v2 + 280) = v23;
    *(_BYTE *)(v2 + 288) = OUTLINED_FUNCTION_19_25(3) & 1;
    *(_BYTE *)(v2 + 289) = OUTLINED_FUNCTION_19_25(4) & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD5A0);
    sub_1C006A990(&qword_1EF5BD5A8, &qword_1EF5BD5B0, (uint64_t)&unk_1C030FD78, MEMORY[0x1E0DEAF40]);
    OUTLINED_FUNCTION_20_16();
    *(_QWORD *)(v2 + 296) = v45;
    sub_1C006AA04(&qword_1EF5BD5B8, (uint64_t)&protocol conformance descriptor for <A> Recommendation<A>);
    OUTLINED_FUNCTION_20_16();
    sub_1C0161728(v34, v2 + v15[10]);
    sub_1C0161770();
    OUTLINED_FUNCTION_12_29();
    *(_BYTE *)(v2 + v15[11]) = 6;
    *(_BYTE *)(v2 + v33) = OUTLINED_FUNCTION_19_25(8) & 1;
    sub_1C01617AC();
    OUTLINED_FUNCTION_12_29();
    *(_BYTE *)(v2 + v17) = 6;
    LOBYTE(v45) = 10;
    OUTLINED_FUNCTION_71_5();
    sub_1C006CC50(v32, v44, &qword_1ED7261B8);
    sub_1C01617E8();
    OUTLINED_FUNCTION_71_5();
    sub_1C0066AFC(*(_QWORD *)v43, *((_QWORD *)v43 + 1));
    *v43 = v45;
    v43[1] = v46;
    *((_QWORD *)v43 + 4) = v47;
    *((_QWORD *)v43 + 5) = v48;
    sub_1C0161824();
    OUTLINED_FUNCTION_13_28();
    *(_WORD *)v19 = __PAIR16__(BYTE1(v45), 10);
    *(_BYTE *)(v19 + 2) = BYTE2(v45);
    *(_BYTE *)(v19 + 3) = BYTE3(v45);
    *(_BYTE *)(v19 + 4) = BYTE4(v45);
    v24 = OUTLINED_FUNCTION_50_11(13);
    v26 = v25;
    swift_bridgeObjectRelease();
    *v42 = v24;
    v42[1] = v26;
    sub_1C006831C(&qword_1EF5BABF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    OUTLINED_FUNCTION_20_16();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 40))(v39, v35, v7);
    OUTLINED_FUNCTION_71_5();
    sub_1C006CC50(v31, v38, &qword_1ED728070);
    *(_BYTE *)(v2 + v21) = sub_1C03048B8() & 1;
    v27 = OUTLINED_FUNCTION_50_11(17);
    v29 = v28;
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v1, v36);
    swift_bridgeObjectRelease();
    *v40 = v27;
    v40[1] = v29;
    OUTLINED_FUNCTION_76_5(v2, v30);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v78);
    OUTLINED_FUNCTION_38_10(v2);
  }
  OUTLINED_FUNCTION_28_0();
}

uint64_t sub_1C015C580()
{
  unint64_t v0;

  v0 = sub_1C030484C();
  OUTLINED_FUNCTION_33();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1C015C5C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C015B54C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C015C5E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C015BCD8();
  *a1 = result;
  return result;
}

uint64_t sub_1C015C60C()
{
  sub_1C006A4BC();
  return sub_1C0304BAC();
}

uint64_t sub_1C015C634()
{
  sub_1C006A4BC();
  return sub_1C0304BB8();
}

void sub_1C015C65C()
{
  sub_1C015BCE0();
}

void sub_1C015C674()
{
  unsigned __int8 *v0;

  sub_1C00CE938(*v0);
}

void sub_1C015C67C(uint64_t a1)
{
  char *v1;

  sub_1C00C1C44(a1, *v1);
}

void sub_1C015C684(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EB0D4(a1, *v1);
}

uint64_t sub_1C015C68C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C015C580();
  *a1 = result;
  return result;
}

uint64_t sub_1C015C6B8()
{
  sub_1C0166510();
  return sub_1C03040F0();
}

void sub_1C015C714(char *a1)
{
  sub_1C025D514(*a1);
}

void sub_1C015C720()
{
  char v0;
  uint64_t matched;
  char v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  BOOL v7;
  char v8;

  static Contact.== infix(_:_:)();
  if ((v0 & 1) != 0)
  {
    matched = type metadata accessor for ContactMatchRuntimeData(0);
    OUTLINED_FUNCTION_78_4(matched);
    static ContactResolver.SignalSet.== infix(_:_:)();
    if ((v2 & 1) != 0)
    {
      v5 = OUTLINED_FUNCTION_30_15();
      v7 = v7 && v5 == v6;
      if (v7 && (sub_1C00F07AC(*(_QWORD *)(v3 + 16), *(_QWORD *)(v4 + 16)) & 1) != 0)
      {
        OUTLINED_FUNCTION_65_4();
        if ((v8 & 1) != 0)
        {
          OUTLINED_FUNCTION_83_2();
          if (v7)
            OUTLINED_FUNCTION_37_13();
        }
      }
    }
  }
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C015C798(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C015C7C8 + 4 * byte_1C030F7B7[a1]))(0x65756C6176, 0xE500000000000000);
}

uint64_t sub_1C015C7C8()
{
  return 0x736C616E676973;
}

unint64_t sub_1C015C7E0()
{
  return 0xD000000000000011;
}

uint64_t sub_1C015C7FC()
{
  return 0x7365727574616566;
}

uint64_t sub_1C015C814()
{
  return 0x65726F6373;
}

uint64_t sub_1C015C824()
{
  return 0x546E776F68537369;
}

void sub_1C015C848(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD730);
  OUTLINED_FUNCTION_42_1();
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C016645C();
  OUTLINED_FUNCTION_18_1();
  type metadata accessor for Contact();
  sub_1C006831C(&qword_1EF5BC758, (uint64_t (*)(uint64_t))type metadata accessor for Contact, (uint64_t)&protocol conformance descriptor for Contact);
  OUTLINED_FUNCTION_7_40();
  if (!v1)
  {
    type metadata accessor for ContactMatchRuntimeData(0);
    v4 = OUTLINED_FUNCTION_46_12();
    type metadata accessor for ContactResolver.SignalSet(v4);
    sub_1C006831C(&qword_1EF5BC788, type metadata accessor for ContactResolver.SignalSet, (uint64_t)&protocol conformance descriptor for ContactResolver.SignalSet);
    OUTLINED_FUNCTION_7_40();
    OUTLINED_FUNCTION_17_21();
    sub_1C016654C();
    OUTLINED_FUNCTION_2_51();
    OUTLINED_FUNCTION_32_14();
    OUTLINED_FUNCTION_2_51();
    OUTLINED_FUNCTION_16_24();
    OUTLINED_FUNCTION_15_26();
  }
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_52_7();
}

void sub_1C015C9C8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int *matched;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_40_0();
  v3 = v2;
  v17 = v4;
  type metadata accessor for ContactResolver.SignalSet(0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_6_0();
  v8 = v7 - v6;
  type metadata accessor for Contact();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_21_0();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD708);
  MEMORY[0x1E0C80A78](v18);
  v10 = OUTLINED_FUNCTION_29_1();
  matched = (int *)type metadata accessor for ContactMatchRuntimeData(v10);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_53();
  v20 = v12;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C016645C();
  sub_1C0304B88();
  if (v0)
  {
    OUTLINED_FUNCTION_70_4();
  }
  else
  {
    sub_1C006831C(&qword_1EF5BC750, (uint64_t (*)(uint64_t))type metadata accessor for Contact, (uint64_t)&protocol conformance descriptor for Contact);
    OUTLINED_FUNCTION_21_19();
    sub_1C004555C(v1, v20, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
    LOBYTE(v21) = 1;
    sub_1C006831C(&qword_1EF5BC780, type metadata accessor for ContactResolver.SignalSet, (uint64_t)&protocol conformance descriptor for ContactResolver.SignalSet);
    OUTLINED_FUNCTION_21_19();
    sub_1C004555C(v8, v20 + matched[5], type metadata accessor for ContactResolver.SignalSet);
    sub_1C0166498();
    OUTLINED_FUNCTION_87_5();
    OUTLINED_FUNCTION_21_19();
    v13 = OUTLINED_FUNCTION_86_4();
    OUTLINED_FUNCTION_39_11(v14, v13);
    OUTLINED_FUNCTION_87_5();
    OUTLINED_FUNCTION_21_19();
    *(_QWORD *)(v20 + matched[7]) = v21;
    OUTLINED_FUNCTION_69_6(4);
    sub_1C03048C4();
    *(_QWORD *)(v20 + matched[8]) = v15;
    OUTLINED_FUNCTION_69_6(5);
    v16 = sub_1C03048B8();
    OUTLINED_FUNCTION_27_21();
    *(_BYTE *)(v20 + matched[9]) = v16 & 1;
    OUTLINED_FUNCTION_76_5(v20, v17);
    OUTLINED_FUNCTION_70_4();
    OUTLINED_FUNCTION_38_10(v20);
  }
  OUTLINED_FUNCTION_28_0();
}

void sub_1C015CD18(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  BOOL v4;
  char v5;
  uint64_t matched;
  char v7;
  double v8;
  double v9;
  char v11;

  v2 = (_QWORD *)a1[2];
  v3 = (_QWORD *)a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (OUTLINED_FUNCTION_176() & 1) != 0)
  {
    sub_1C00F03F4(v2, v3);
    if ((v5 & 1) != 0)
    {
      matched = type metadata accessor for PrivatizedContactMatchRuntimeData(0);
      OUTLINED_FUNCTION_78_4(matched);
      sub_1C0147058();
      if ((v7 & 1) != 0)
      {
        v8 = OUTLINED_FUNCTION_30_15();
        if (v4 && v8 == v9 && (sub_1C00F04AC() & 1) != 0)
        {
          OUTLINED_FUNCTION_65_4();
          if ((v11 & 1) != 0)
          {
            OUTLINED_FUNCTION_83_2();
            if (v4)
              OUTLINED_FUNCTION_37_13();
          }
        }
      }
    }
  }
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C015CDC0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (OUTLINED_FUNCTION_7_4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x736C616E676973 && a2 == 0xE700000000000000;
    if (v6 || (OUTLINED_FUNCTION_7_4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x80000001C032F890 || (OUTLINED_FUNCTION_7_4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x7365727574616566 && a2 == 0xE800000000000000;
      if (v7 || (OUTLINED_FUNCTION_7_4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x65726F6373 && a2 == 0xE500000000000000;
        if (v8 || (OUTLINED_FUNCTION_7_4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0x546E776F68537369 && a2 == 0xED0000726573556FLL)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v10 = OUTLINED_FUNCTION_7_4();
          OUTLINED_FUNCTION_33();
          if ((v10 & 1) != 0)
            return 5;
          else
            return 6;
        }
      }
    }
  }
}

void sub_1C015CFF0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD770);
  OUTLINED_FUNCTION_42_1();
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01665C4();
  OUTLINED_FUNCTION_18_1();
  sub_1C0166678();
  OUTLINED_FUNCTION_2_51();
  if (!v1)
  {
    type metadata accessor for PrivatizedContactMatchRuntimeData(0);
    v4 = OUTLINED_FUNCTION_46_12();
    type metadata accessor for PrivatizedSignalSet(v4);
    sub_1C006831C(&qword_1EF5BD780, type metadata accessor for PrivatizedSignalSet, (uint64_t)&unk_1C030EE98);
    OUTLINED_FUNCTION_7_40();
    OUTLINED_FUNCTION_17_21();
    sub_1C01666B4();
    OUTLINED_FUNCTION_2_51();
    OUTLINED_FUNCTION_32_14();
    OUTLINED_FUNCTION_2_51();
    OUTLINED_FUNCTION_16_24();
    OUTLINED_FUNCTION_15_26();
  }
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_52_7();
}

void sub_1C015D154()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  int *matched;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  OUTLINED_FUNCTION_40_0();
  v3 = v2;
  v5 = v4;
  type metadata accessor for PrivatizedSignalSet(0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_32_0();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD748);
  MEMORY[0x1E0C80A78](v14);
  v7 = OUTLINED_FUNCTION_48_12();
  matched = (int *)type metadata accessor for PrivatizedContactMatchRuntimeData(v7);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_53();
  v16 = v9;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C01665C4();
  sub_1C0304B88();
  if (v0)
  {
    OUTLINED_FUNCTION_85_3();
  }
  else
  {
    sub_1C0166600();
    OUTLINED_FUNCTION_21_19();
    *(_QWORD *)v16 = v17;
    *(_OWORD *)(v16 + 8) = v18;
    LOBYTE(v17) = 1;
    sub_1C006831C(&qword_1EF5BD760, type metadata accessor for PrivatizedSignalSet, (uint64_t)&unk_1C030EEC0);
    OUTLINED_FUNCTION_21_19();
    sub_1C004555C(v1, v16 + matched[5], type metadata accessor for PrivatizedSignalSet);
    sub_1C016663C();
    OUTLINED_FUNCTION_21_19();
    v10 = OUTLINED_FUNCTION_86_4();
    OUTLINED_FUNCTION_39_11(v11, v10);
    OUTLINED_FUNCTION_21_19();
    *(_QWORD *)(v16 + matched[7]) = v17;
    OUTLINED_FUNCTION_68_4(4);
    sub_1C03048C4();
    *(_QWORD *)(v16 + matched[8]) = v12;
    OUTLINED_FUNCTION_68_4(5);
    v13 = sub_1C03048B8();
    OUTLINED_FUNCTION_29_18();
    *(_BYTE *)(v16 + matched[9]) = v13 & 1;
    OUTLINED_FUNCTION_76_5(v16, v5);
    OUTLINED_FUNCTION_85_3();
    OUTLINED_FUNCTION_38_10(v16);
  }
  OUTLINED_FUNCTION_28_0();
}

uint64_t sub_1C015D494()
{
  unsigned __int8 *v0;

  return sub_1C015C798(*v0);
}

uint64_t sub_1C015D49C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C015CDC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C015D4C0()
{
  sub_1C016645C();
  return sub_1C0304BAC();
}

uint64_t sub_1C015D4E8()
{
  sub_1C016645C();
  return sub_1C0304BB8();
}

void sub_1C015D510()
{
  sub_1C015C9C8();
}

void sub_1C015D524(_QWORD *a1)
{
  sub_1C015C848(a1);
}

uint64_t sub_1C015D53C()
{
  sub_1C01665C4();
  return sub_1C0304BAC();
}

uint64_t sub_1C015D564()
{
  sub_1C01665C4();
  return sub_1C0304BB8();
}

void sub_1C015D58C()
{
  sub_1C015D154();
}

void sub_1C015D5A0(_QWORD *a1)
{
  sub_1C015CFF0(a1);
}

SiriInference::ForcePromptType_optional __swiftcall ForcePromptType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  SiriInference::ForcePromptType_optional result;

  v2 = v1;
  v3 = sub_1C030484C();
  OUTLINED_FUNCTION_33();
  v4 = 6;
  if (v3 < 6)
    v4 = v3;
  *v2 = v4;
  OUTLINED_FUNCTION_37_0();
  return result;
}

void sub_1C015D604()
{
  unsigned __int8 *v0;

  sub_1C00CE944(*v0);
}

void sub_1C015D60C(uint64_t a1)
{
  char *v1;

  sub_1C00C2658(a1, *v1);
}

void sub_1C015D614(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EAB94(a1, *v1);
}

SiriInference::ForcePromptType_optional sub_1C015D61C(Swift::String *a1)
{
  return ForcePromptType.init(rawValue:)(*a1);
}

uint64_t sub_1C015D628()
{
  sub_1C016198C();
  return sub_1C03040F0();
}

void sub_1C015D684(char *a1)
{
  sub_1C025D68C(*a1);
}

void sub_1C015D690(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  _QWORD v15[2];

  v4 = type metadata accessor for Contact();
  v5 = MEMORY[0x1E0C80A78](v4);
  v15[1] = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v9 = MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD638);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v15 + *(int *)(v11 + 48) - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0045DFC(a1, (uint64_t)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1ED7261A8);
  sub_1C0045DFC(a2, (uint64_t)v13, &qword_1ED7261A8);
  v14 = (char *)sub_1C015D80C + 4 * byte_1C030F7C3[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1C015D80C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t *v5;
  char v6;

  sub_1C0045DFC(v0, v2, &qword_1ED7261A8);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1C003DD84(v2, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
    v4 = 0;
    v5 = (uint64_t *)&unk_1EF5BD638;
  }
  else
  {
    sub_1C004555C(v3, v1, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
    static Contact.== infix(_:_:)();
    v4 = v6;
    sub_1C003DD84(v1, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
    sub_1C003DD84(v2, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
    v5 = &qword_1ED7261A8;
  }
  sub_1C0044B78(v0, v5);
  return v4 & 1;
}

unint64_t sub_1C015D9C4()
{
  unint64_t result;

  result = qword_1EF5BD578;
  if (!qword_1EF5BD578)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ForcePromptType, &type metadata for ForcePromptType);
    atomic_store(result, (unint64_t *)&qword_1EF5BD578);
  }
  return result;
}

ValueMetadata *type metadata accessor for ForcePromptType()
{
  return &type metadata for ForcePromptType;
}

uint64_t sub_1C015DA18(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  const void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  const void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int *v99;
  uint64_t v100;
  const void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __int128 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(uint64_t, uint64_t, uint64_t);
  uint64_t v145;
  void *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v154;
  void *__dst;
  void *__dsta;
  void *__dstb;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t *v163;
  uint64_t *v164;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v17 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
    return a1;
  }
  v5 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  v6 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v6;
  v7 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v7;
  v8 = a2[8];
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_QWORD *)(a1 + 64) = v8;
  v9 = a2[10];
  *(_QWORD *)(a1 + 72) = a2[9];
  *(_QWORD *)(a1 + 80) = v9;
  v10 = a2[12];
  v11 = a2;
  *(_QWORD *)(a1 + 88) = a2[11];
  *(_QWORD *)(a1 + 96) = v10;
  v12 = a2[14];
  *(_QWORD *)(a1 + 104) = a2[13];
  *(_QWORD *)(a1 + 112) = v12;
  v13 = a2[16];
  *(_QWORD *)(a1 + 120) = a2[15];
  *(_QWORD *)(a1 + 128) = v13;
  v14 = a2[18];
  *(_QWORD *)(a1 + 136) = a2[17];
  *(_QWORD *)(a1 + 144) = v14;
  v15 = a2[20];
  *(_QWORD *)(a1 + 152) = a2[19];
  *(_QWORD *)(a1 + 160) = v15;
  v161 = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v161)
  {
    v16 = v11[22];
    *(_QWORD *)(a1 + 168) = v11[21];
    *(_QWORD *)(a1 + 176) = v16;
    *(_QWORD *)(a1 + 184) = v161;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(v11 + 21);
    *(_QWORD *)(a1 + 184) = v11[23];
  }
  v18 = v11[26];
  v19 = a3;
  if (v18)
  {
    *(_BYTE *)(a1 + 192) = *((_BYTE *)v11 + 192);
    *(_QWORD *)(a1 + 200) = v11[25];
    *(_QWORD *)(a1 + 208) = v18;
    v20 = v11[28];
    *(_QWORD *)(a1 + 216) = v11[27];
    *(_QWORD *)(a1 + 224) = v20;
    *(_QWORD *)(a1 + 232) = v11[29];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *((_OWORD *)v11 + 13);
    *(_OWORD *)(a1 + 192) = *((_OWORD *)v11 + 12);
    *(_OWORD *)(a1 + 208) = v21;
    *(_OWORD *)(a1 + 224) = *((_OWORD *)v11 + 14);
  }
  *(_QWORD *)(a1 + 240) = v11[30];
  *(_BYTE *)(a1 + 248) = *((_BYTE *)v11 + 248);
  *(_QWORD *)(a1 + 256) = v11[32];
  *(_BYTE *)(a1 + 264) = *((_BYTE *)v11 + 264);
  v22 = v11[35];
  *(_QWORD *)(a1 + 272) = v11[34];
  *(_QWORD *)(a1 + 280) = v22;
  *(_WORD *)(a1 + 288) = *((_WORD *)v11 + 144);
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = (uint64_t)v11 + v23;
  *(_QWORD *)(a1 + 296) = v11[37];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(_QWORD *)v24 = *(_QWORD *)v25;
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v154 = v26;
    v159 = a1;
    v163 = v11;
    v46 = *(_QWORD *)(v25 + 8);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *(_QWORD *)(v24 + 8) = v46;
    *(_BYTE *)(v24 + 16) = *(_BYTE *)(v25 + 16);
    v47 = *(_QWORD *)(v25 + 32);
    *(_QWORD *)(v24 + 24) = *(_QWORD *)(v25 + 24);
    *(_QWORD *)(v24 + 32) = v47;
    v48 = *(_QWORD *)(v25 + 48);
    *(_QWORD *)(v24 + 40) = *(_QWORD *)(v25 + 40);
    *(_QWORD *)(v24 + 48) = v48;
    v49 = *(_QWORD *)(v25 + 64);
    *(_QWORD *)(v24 + 56) = *(_QWORD *)(v25 + 56);
    *(_QWORD *)(v24 + 64) = v49;
    v50 = *(_QWORD *)(v25 + 80);
    *(_QWORD *)(v24 + 72) = *(_QWORD *)(v25 + 72);
    *(_QWORD *)(v24 + 80) = v50;
    v51 = *(_QWORD *)(v25 + 96);
    *(_QWORD *)(v24 + 88) = *(_QWORD *)(v25 + 88);
    *(_QWORD *)(v24 + 96) = v51;
    v52 = *(_QWORD *)(v25 + 112);
    *(_QWORD *)(v24 + 104) = *(_QWORD *)(v25 + 104);
    *(_QWORD *)(v24 + 112) = v52;
    v53 = *(_QWORD *)(v25 + 128);
    *(_QWORD *)(v24 + 120) = *(_QWORD *)(v25 + 120);
    *(_QWORD *)(v24 + 128) = v53;
    v54 = *(_QWORD *)(v25 + 144);
    *(_QWORD *)(v24 + 136) = *(_QWORD *)(v25 + 136);
    *(_QWORD *)(v24 + 144) = v54;
    v55 = *(_QWORD *)(v25 + 160);
    *(_QWORD *)(v24 + 152) = *(_QWORD *)(v25 + 152);
    *(_QWORD *)(v24 + 160) = v55;
    v56 = *(_QWORD *)(v25 + 176);
    *(_QWORD *)(v24 + 168) = *(_QWORD *)(v25 + 168);
    *(_QWORD *)(v24 + 176) = v56;
    v57 = *(_QWORD *)(v25 + 192);
    *(_QWORD *)(v24 + 184) = *(_QWORD *)(v25 + 184);
    *(_QWORD *)(v24 + 192) = v57;
    v58 = *(_QWORD *)(v25 + 208);
    *(_QWORD *)(v24 + 200) = *(_QWORD *)(v25 + 200);
    *(_QWORD *)(v24 + 208) = v58;
    *(_QWORD *)(v24 + 216) = *(_QWORD *)(v25 + 216);
    v59 = (int *)type metadata accessor for Contact();
    v60 = v59[19];
    __dsta = (void *)(v24 + v60);
    v61 = (const void *)(v25 + v60);
    v62 = sub_1C0301954();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62))
    {
      v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
      memcpy(__dsta, v61, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(__dsta, v61, v62);
      __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v62);
    }
    a1 = v159;
    v11 = v163;
    v19 = a3;
    v26 = v154;
    *(_QWORD *)(v24 + v59[20]) = *(_QWORD *)(v25 + v59[20]);
    *(_BYTE *)(v24 + v59[21]) = *(_BYTE *)(v25 + v59[21]);
    v72 = v59[22];
    v73 = (_QWORD *)(v24 + v72);
    v74 = (_QWORD *)(v25 + v72);
    v75 = v74[1];
    *v73 = *v74;
    v73[1] = v75;
    *(_BYTE *)(v24 + v59[23]) = *(_BYTE *)(v25 + v59[23]);
    v76 = v59[24];
    v77 = (_QWORD *)(v24 + v76);
    v78 = (_QWORD *)(v25 + v76);
    v79 = v78[1];
    *v77 = *v78;
    v77[1] = v79;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy((void *)v24, (const void *)v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      goto LABEL_23;
    }
    v158 = a1;
    v162 = v11;
    v28 = *(_QWORD *)(v25 + 8);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *(_QWORD *)(v24 + 8) = v28;
    *(_BYTE *)(v24 + 16) = *(_BYTE *)(v25 + 16);
    v29 = *(_QWORD *)(v25 + 32);
    *(_QWORD *)(v24 + 24) = *(_QWORD *)(v25 + 24);
    *(_QWORD *)(v24 + 32) = v29;
    v30 = *(_QWORD *)(v25 + 48);
    *(_QWORD *)(v24 + 40) = *(_QWORD *)(v25 + 40);
    *(_QWORD *)(v24 + 48) = v30;
    v31 = *(_QWORD *)(v25 + 64);
    *(_QWORD *)(v24 + 56) = *(_QWORD *)(v25 + 56);
    *(_QWORD *)(v24 + 64) = v31;
    v32 = *(_QWORD *)(v25 + 80);
    *(_QWORD *)(v24 + 72) = *(_QWORD *)(v25 + 72);
    *(_QWORD *)(v24 + 80) = v32;
    v33 = *(_QWORD *)(v25 + 96);
    *(_QWORD *)(v24 + 88) = *(_QWORD *)(v25 + 88);
    *(_QWORD *)(v24 + 96) = v33;
    v34 = *(_QWORD *)(v25 + 112);
    *(_QWORD *)(v24 + 104) = *(_QWORD *)(v25 + 104);
    *(_QWORD *)(v24 + 112) = v34;
    v35 = *(_QWORD *)(v25 + 128);
    *(_QWORD *)(v24 + 120) = *(_QWORD *)(v25 + 120);
    *(_QWORD *)(v24 + 128) = v35;
    v36 = *(_QWORD *)(v25 + 144);
    *(_QWORD *)(v24 + 136) = *(_QWORD *)(v25 + 136);
    *(_QWORD *)(v24 + 144) = v36;
    v37 = *(_QWORD *)(v25 + 160);
    *(_QWORD *)(v24 + 152) = *(_QWORD *)(v25 + 152);
    *(_QWORD *)(v24 + 160) = v37;
    v38 = *(_QWORD *)(v25 + 176);
    *(_QWORD *)(v24 + 168) = *(_QWORD *)(v25 + 168);
    *(_QWORD *)(v24 + 176) = v38;
    v39 = *(_QWORD *)(v25 + 192);
    *(_QWORD *)(v24 + 184) = *(_QWORD *)(v25 + 184);
    *(_QWORD *)(v24 + 192) = v39;
    v40 = *(_QWORD *)(v25 + 208);
    *(_QWORD *)(v24 + 200) = *(_QWORD *)(v25 + 200);
    *(_QWORD *)(v24 + 208) = v40;
    *(_QWORD *)(v24 + 216) = *(_QWORD *)(v25 + 216);
    v41 = (int *)type metadata accessor for Contact();
    v42 = v41[19];
    __dst = (void *)(v24 + v42);
    v43 = (const void *)(v25 + v42);
    v44 = sub_1C0301954();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
      memcpy(__dst, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(__dst, v43, v44);
      __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v44);
    }
    a1 = v158;
    v11 = v162;
    v19 = a3;
    *(_QWORD *)(v24 + v41[20]) = *(_QWORD *)(v25 + v41[20]);
    *(_BYTE *)(v24 + v41[21]) = *(_BYTE *)(v25 + v41[21]);
    v64 = v41[22];
    v65 = (_QWORD *)(v24 + v64);
    v66 = (_QWORD *)(v25 + v64);
    v67 = v66[1];
    *v65 = *v66;
    v65[1] = v67;
    *(_BYTE *)(v24 + v41[23]) = *(_BYTE *)(v25 + v41[23]);
    v68 = v41[24];
    v69 = (_QWORD *)(v24 + v68);
    v70 = (_QWORD *)(v25 + v68);
    v71 = v70[1];
    *v69 = *v70;
    v69[1] = v71;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_23:
  v80 = v19[12];
  *(_BYTE *)(a1 + v19[11]) = *((_BYTE *)v11 + v19[11]);
  *(_BYTE *)(a1 + v80) = *((_BYTE *)v11 + v80);
  v81 = v19[14];
  *(_BYTE *)(a1 + v19[13]) = *((_BYTE *)v11 + v19[13]);
  v82 = a1 + v81;
  v83 = (uint64_t)v11 + v81;
  if (!__swift_getEnumTagSinglePayload((uint64_t)v11 + v81, 1, v26))
  {
    v85 = swift_getEnumCaseMultiPayload();
    if (v85 == 2)
    {
      *(_QWORD *)v82 = *(_QWORD *)v83;
      swift_bridgeObjectRetain();
LABEL_36:
      swift_storeEnumTagMultiPayload();
      goto LABEL_37;
    }
    if (v85 == 1)
    {
      v160 = a1;
      v164 = v11;
      v103 = *(_QWORD *)(v83 + 8);
      *(_QWORD *)v82 = *(_QWORD *)v83;
      *(_QWORD *)(v82 + 8) = v103;
      *(_BYTE *)(v82 + 16) = *(_BYTE *)(v83 + 16);
      v104 = *(_QWORD *)(v83 + 32);
      *(_QWORD *)(v82 + 24) = *(_QWORD *)(v83 + 24);
      *(_QWORD *)(v82 + 32) = v104;
      v105 = *(_QWORD *)(v83 + 48);
      *(_QWORD *)(v82 + 40) = *(_QWORD *)(v83 + 40);
      *(_QWORD *)(v82 + 48) = v105;
      v106 = *(_QWORD *)(v83 + 64);
      *(_QWORD *)(v82 + 56) = *(_QWORD *)(v83 + 56);
      *(_QWORD *)(v82 + 64) = v106;
      v107 = *(_QWORD *)(v83 + 80);
      *(_QWORD *)(v82 + 72) = *(_QWORD *)(v83 + 72);
      *(_QWORD *)(v82 + 80) = v107;
      v108 = *(_QWORD *)(v83 + 96);
      *(_QWORD *)(v82 + 88) = *(_QWORD *)(v83 + 88);
      *(_QWORD *)(v82 + 96) = v108;
      v109 = *(_QWORD *)(v83 + 112);
      *(_QWORD *)(v82 + 104) = *(_QWORD *)(v83 + 104);
      *(_QWORD *)(v82 + 112) = v109;
      v110 = *(_QWORD *)(v83 + 128);
      *(_QWORD *)(v82 + 120) = *(_QWORD *)(v83 + 120);
      *(_QWORD *)(v82 + 128) = v110;
      v111 = *(_QWORD *)(v83 + 144);
      *(_QWORD *)(v82 + 136) = *(_QWORD *)(v83 + 136);
      *(_QWORD *)(v82 + 144) = v111;
      v112 = *(_QWORD *)(v83 + 160);
      *(_QWORD *)(v82 + 152) = *(_QWORD *)(v83 + 152);
      *(_QWORD *)(v82 + 160) = v112;
      v113 = *(_QWORD *)(v83 + 176);
      *(_QWORD *)(v82 + 168) = *(_QWORD *)(v83 + 168);
      *(_QWORD *)(v82 + 176) = v113;
      v114 = *(_QWORD *)(v83 + 192);
      *(_QWORD *)(v82 + 184) = *(_QWORD *)(v83 + 184);
      *(_QWORD *)(v82 + 192) = v114;
      v115 = *(_QWORD *)(v83 + 208);
      *(_QWORD *)(v82 + 200) = *(_QWORD *)(v83 + 200);
      *(_QWORD *)(v82 + 208) = v115;
      *(_QWORD *)(v82 + 216) = *(_QWORD *)(v83 + 216);
      v99 = (int *)type metadata accessor for Contact();
      v116 = v99[19];
      __dstb = (void *)(v82 + v116);
      v101 = (const void *)(v83 + v116);
      v102 = sub_1C0301954();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v101, 1, v102))
      {
LABEL_32:
        v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
        memcpy(__dstb, v101, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
LABEL_35:
        a1 = v160;
        v11 = v164;
        v19 = a3;
        *(_QWORD *)(v82 + v99[20]) = *(_QWORD *)(v83 + v99[20]);
        *(_BYTE *)(v82 + v99[21]) = *(_BYTE *)(v83 + v99[21]);
        v118 = v99[22];
        v119 = (_QWORD *)(v82 + v118);
        v120 = (_QWORD *)(v83 + v118);
        v121 = v120[1];
        *v119 = *v120;
        v119[1] = v121;
        *(_BYTE *)(v82 + v99[23]) = *(_BYTE *)(v83 + v99[23]);
        v122 = v99[24];
        v123 = (_QWORD *)(v82 + v122);
        v124 = (_QWORD *)(v83 + v122);
        v125 = v124[1];
        *v123 = *v124;
        v123[1] = v125;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_36;
      }
    }
    else
    {
      if (v85)
      {
        memcpy((void *)v82, (const void *)v83, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
LABEL_37:
        __swift_storeEnumTagSinglePayload(v82, 0, 1, v26);
        goto LABEL_38;
      }
      v160 = a1;
      v164 = v11;
      v86 = *(_QWORD *)(v83 + 8);
      *(_QWORD *)v82 = *(_QWORD *)v83;
      *(_QWORD *)(v82 + 8) = v86;
      *(_BYTE *)(v82 + 16) = *(_BYTE *)(v83 + 16);
      v87 = *(_QWORD *)(v83 + 32);
      *(_QWORD *)(v82 + 24) = *(_QWORD *)(v83 + 24);
      *(_QWORD *)(v82 + 32) = v87;
      v88 = *(_QWORD *)(v83 + 48);
      *(_QWORD *)(v82 + 40) = *(_QWORD *)(v83 + 40);
      *(_QWORD *)(v82 + 48) = v88;
      v89 = *(_QWORD *)(v83 + 64);
      *(_QWORD *)(v82 + 56) = *(_QWORD *)(v83 + 56);
      *(_QWORD *)(v82 + 64) = v89;
      v90 = *(_QWORD *)(v83 + 80);
      *(_QWORD *)(v82 + 72) = *(_QWORD *)(v83 + 72);
      *(_QWORD *)(v82 + 80) = v90;
      v91 = *(_QWORD *)(v83 + 96);
      *(_QWORD *)(v82 + 88) = *(_QWORD *)(v83 + 88);
      *(_QWORD *)(v82 + 96) = v91;
      v92 = *(_QWORD *)(v83 + 112);
      *(_QWORD *)(v82 + 104) = *(_QWORD *)(v83 + 104);
      *(_QWORD *)(v82 + 112) = v92;
      v93 = *(_QWORD *)(v83 + 128);
      *(_QWORD *)(v82 + 120) = *(_QWORD *)(v83 + 120);
      *(_QWORD *)(v82 + 128) = v93;
      v94 = *(_QWORD *)(v83 + 144);
      *(_QWORD *)(v82 + 136) = *(_QWORD *)(v83 + 136);
      *(_QWORD *)(v82 + 144) = v94;
      v95 = *(_QWORD *)(v83 + 160);
      *(_QWORD *)(v82 + 152) = *(_QWORD *)(v83 + 152);
      *(_QWORD *)(v82 + 160) = v95;
      v96 = *(_QWORD *)(v83 + 176);
      *(_QWORD *)(v82 + 168) = *(_QWORD *)(v83 + 168);
      *(_QWORD *)(v82 + 176) = v96;
      v97 = *(_QWORD *)(v83 + 192);
      *(_QWORD *)(v82 + 184) = *(_QWORD *)(v83 + 184);
      *(_QWORD *)(v82 + 192) = v97;
      v98 = *(_QWORD *)(v83 + 208);
      *(_QWORD *)(v82 + 200) = *(_QWORD *)(v83 + 200);
      *(_QWORD *)(v82 + 208) = v98;
      *(_QWORD *)(v82 + 216) = *(_QWORD *)(v83 + 216);
      v99 = (int *)type metadata accessor for Contact();
      v100 = v99[19];
      __dstb = (void *)(v82 + v100);
      v101 = (const void *)(v83 + v100);
      v102 = sub_1C0301954();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v101, 1, v102))
        goto LABEL_32;
    }
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(__dstb, v101, v102);
    __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v102);
    goto LABEL_35;
  }
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261B8);
  memcpy((void *)v82, (const void *)v83, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
LABEL_38:
  v126 = v19[15];
  v127 = a1 + v126;
  v128 = (uint64_t)v11 + v126;
  v129 = *(_QWORD *)(v128 + 8);
  if (v129 == 1)
  {
    v130 = *(_OWORD *)(v128 + 16);
    *(_OWORD *)v127 = *(_OWORD *)v128;
    *(_OWORD *)(v127 + 16) = v130;
    *(_OWORD *)(v127 + 32) = *(_OWORD *)(v128 + 32);
  }
  else
  {
    *(_QWORD *)v127 = *(_QWORD *)v128;
    *(_QWORD *)(v127 + 8) = v129;
    v131 = *(_QWORD *)(v128 + 24);
    *(_QWORD *)(v127 + 16) = *(_QWORD *)(v128 + 16);
    *(_QWORD *)(v127 + 24) = v131;
    v132 = *(_QWORD *)(v128 + 40);
    *(_QWORD *)(v127 + 32) = *(_QWORD *)(v128 + 32);
    *(_QWORD *)(v127 + 40) = v132;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v133 = v19[16];
  v134 = v19[17];
  v135 = a1 + v133;
  v136 = (uint64_t)v11 + v133;
  *(_DWORD *)v135 = *(_DWORD *)v136;
  *(_BYTE *)(v135 + 4) = *(_BYTE *)(v136 + 4);
  v137 = (_QWORD *)(a1 + v134);
  v138 = (uint64_t *)((char *)v11 + v134);
  v139 = v138[1];
  *v137 = *v138;
  v137[1] = v139;
  v140 = v19[18];
  v141 = a1 + v140;
  v142 = (uint64_t)v11 + v140;
  v143 = sub_1C0301D5C();
  v144 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 16);
  swift_bridgeObjectRetain();
  v144(v141, v142, v143);
  v145 = v19[19];
  v146 = (void *)(a1 + v145);
  v147 = (char *)v11 + v145;
  if (__swift_getEnumTagSinglePayload((uint64_t)v11 + v145, 1, v143))
  {
    v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
    memcpy(v146, v147, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
  }
  else
  {
    v144((uint64_t)v146, (uint64_t)v147, v143);
    __swift_storeEnumTagSinglePayload((uint64_t)v146, 0, 1, v143);
  }
  v149 = v19[21];
  *(_BYTE *)(a1 + v19[20]) = *((_BYTE *)v11 + v19[20]);
  v150 = (_QWORD *)(a1 + v149);
  v151 = (uint64_t *)((char *)v11 + v149);
  v152 = v151[1];
  *v150 = *v151;
  v150[1] = v152;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C015E71C(uint64_t a1, uint64_t a2, int *a3)
{
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  int *v23;
  uint64_t v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int EnumTagSinglePayload;
  int v40;
  int v41;
  int *v42;
  uint64_t v43;
  const void *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int *v48;
  uint64_t v49;
  const void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  __int128 *v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  void *v84;
  const void *v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(void *, const void *, uint64_t);
  uint64_t v89;
  void *v90;
  const void *v91;
  int v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  void *__dst;
  void *v100;
  void *v101;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 168);
  v7 = (_OWORD *)(a2 + 168);
  v8 = *(_QWORD *)(a2 + 184);
  if (*(_QWORD *)(a1 + 184))
  {
    if (v8)
    {
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C011A248(a1 + 168);
      v9 = *(_QWORD *)(a2 + 184);
      *v6 = *v7;
      *(_QWORD *)(a1 + 184) = v9;
    }
  }
  else if (v8)
  {
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *v7;
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *v6 = v10;
  }
  v11 = (_OWORD *)(a1 + 192);
  v12 = (_OWORD *)(a2 + 192);
  v13 = *(_QWORD *)(a2 + 208);
  if (*(_QWORD *)(a1 + 208))
  {
    if (v13)
    {
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C011A27C(a1 + 192);
      v15 = *(_OWORD *)(a2 + 208);
      v14 = *(_OWORD *)(a2 + 224);
      *v11 = *v12;
      *(_OWORD *)(a1 + 208) = v15;
      *(_OWORD *)(a1 + 224) = v14;
    }
  }
  else if (v13)
  {
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v16 = *v12;
    v17 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v17;
    *v11 = v16;
  }
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_BYTE *)(a1 + 289) = *(_BYTE *)(a2 + 289);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v18 = a3[10];
    v19 = a1 + v18;
    v20 = a2 + v18;
    sub_1C0044B78(a1 + v18, &qword_1ED7261A8);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)v19 = *(_QWORD *)v20;
      swift_bridgeObjectRetain();
LABEL_27:
      swift_storeEnumTagMultiPayload();
      goto LABEL_28;
    }
    if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)v19 = *(_QWORD *)v20;
      *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
      *(_BYTE *)(v19 + 16) = *(_BYTE *)(v20 + 16);
      *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 24);
      *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
      *(_QWORD *)(v19 + 40) = *(_QWORD *)(v20 + 40);
      *(_QWORD *)(v19 + 48) = *(_QWORD *)(v20 + 48);
      *(_QWORD *)(v19 + 56) = *(_QWORD *)(v20 + 56);
      *(_QWORD *)(v19 + 64) = *(_QWORD *)(v20 + 64);
      *(_QWORD *)(v19 + 72) = *(_QWORD *)(v20 + 72);
      *(_QWORD *)(v19 + 80) = *(_QWORD *)(v20 + 80);
      *(_QWORD *)(v19 + 88) = *(_QWORD *)(v20 + 88);
      *(_QWORD *)(v19 + 96) = *(_QWORD *)(v20 + 96);
      *(_QWORD *)(v19 + 104) = *(_QWORD *)(v20 + 104);
      *(_QWORD *)(v19 + 112) = *(_QWORD *)(v20 + 112);
      *(_QWORD *)(v19 + 120) = *(_QWORD *)(v20 + 120);
      *(_QWORD *)(v19 + 128) = *(_QWORD *)(v20 + 128);
      *(_QWORD *)(v19 + 136) = *(_QWORD *)(v20 + 136);
      *(_QWORD *)(v19 + 144) = *(_QWORD *)(v20 + 144);
      *(_QWORD *)(v19 + 152) = *(_QWORD *)(v20 + 152);
      *(_QWORD *)(v19 + 160) = *(_QWORD *)(v20 + 160);
      *(_QWORD *)(v19 + 168) = *(_QWORD *)(v20 + 168);
      *(_QWORD *)(v19 + 176) = *(_QWORD *)(v20 + 176);
      *(_QWORD *)(v19 + 184) = *(_QWORD *)(v20 + 184);
      *(_QWORD *)(v19 + 192) = *(_QWORD *)(v20 + 192);
      *(_QWORD *)(v19 + 200) = *(_QWORD *)(v20 + 200);
      *(_QWORD *)(v19 + 208) = *(_QWORD *)(v20 + 208);
      *(_QWORD *)(v19 + 216) = *(_QWORD *)(v20 + 216);
      v23 = (int *)type metadata accessor for Contact();
      v27 = v23[19];
      __dst = (void *)(v19 + v27);
      v25 = (const void *)(v20 + v27);
      v26 = sub_1C0301954();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
      {
LABEL_23:
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
        memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
LABEL_26:
        *(_QWORD *)(v19 + v23[20]) = *(_QWORD *)(v20 + v23[20]);
        *(_BYTE *)(v19 + v23[21]) = *(_BYTE *)(v20 + v23[21]);
        v29 = v23[22];
        v30 = (_QWORD *)(v19 + v29);
        v31 = (_QWORD *)(v20 + v29);
        *v30 = *v31;
        v30[1] = v31[1];
        *(_BYTE *)(v19 + v23[23]) = *(_BYTE *)(v20 + v23[23]);
        v32 = v23[24];
        v33 = (_QWORD *)(v19 + v32);
        v34 = (_QWORD *)(v20 + v32);
        *v33 = *v34;
        v33[1] = v34[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_27;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy((void *)v19, (const void *)v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        goto LABEL_28;
      }
      *(_QWORD *)v19 = *(_QWORD *)v20;
      *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
      *(_BYTE *)(v19 + 16) = *(_BYTE *)(v20 + 16);
      *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 24);
      *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
      *(_QWORD *)(v19 + 40) = *(_QWORD *)(v20 + 40);
      *(_QWORD *)(v19 + 48) = *(_QWORD *)(v20 + 48);
      *(_QWORD *)(v19 + 56) = *(_QWORD *)(v20 + 56);
      *(_QWORD *)(v19 + 64) = *(_QWORD *)(v20 + 64);
      *(_QWORD *)(v19 + 72) = *(_QWORD *)(v20 + 72);
      *(_QWORD *)(v19 + 80) = *(_QWORD *)(v20 + 80);
      *(_QWORD *)(v19 + 88) = *(_QWORD *)(v20 + 88);
      *(_QWORD *)(v19 + 96) = *(_QWORD *)(v20 + 96);
      *(_QWORD *)(v19 + 104) = *(_QWORD *)(v20 + 104);
      *(_QWORD *)(v19 + 112) = *(_QWORD *)(v20 + 112);
      *(_QWORD *)(v19 + 120) = *(_QWORD *)(v20 + 120);
      *(_QWORD *)(v19 + 128) = *(_QWORD *)(v20 + 128);
      *(_QWORD *)(v19 + 136) = *(_QWORD *)(v20 + 136);
      *(_QWORD *)(v19 + 144) = *(_QWORD *)(v20 + 144);
      *(_QWORD *)(v19 + 152) = *(_QWORD *)(v20 + 152);
      *(_QWORD *)(v19 + 160) = *(_QWORD *)(v20 + 160);
      *(_QWORD *)(v19 + 168) = *(_QWORD *)(v20 + 168);
      *(_QWORD *)(v19 + 176) = *(_QWORD *)(v20 + 176);
      *(_QWORD *)(v19 + 184) = *(_QWORD *)(v20 + 184);
      *(_QWORD *)(v19 + 192) = *(_QWORD *)(v20 + 192);
      *(_QWORD *)(v19 + 200) = *(_QWORD *)(v20 + 200);
      *(_QWORD *)(v19 + 208) = *(_QWORD *)(v20 + 208);
      *(_QWORD *)(v19 + 216) = *(_QWORD *)(v20 + 216);
      v23 = (int *)type metadata accessor for Contact();
      v24 = v23[19];
      __dst = (void *)(v19 + v24);
      v25 = (const void *)(v20 + v24);
      v26 = sub_1C0301954();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
        goto LABEL_23;
    }
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(__dst, v25, v26);
    __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v26);
    goto LABEL_26;
  }
LABEL_28:
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v35 = a3[14];
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v36, 1, v38);
  v40 = __swift_getEnumTagSinglePayload(v37, 1, v38);
  if (EnumTagSinglePayload)
  {
    if (!v40)
    {
      v41 = swift_getEnumCaseMultiPayload();
      if (v41 == 2)
      {
        *(_QWORD *)v36 = *(_QWORD *)v37;
        swift_bridgeObjectRetain();
LABEL_56:
        swift_storeEnumTagMultiPayload();
        goto LABEL_57;
      }
      if (v41 == 1)
      {
        *(_QWORD *)v36 = *(_QWORD *)v37;
        *(_QWORD *)(v36 + 8) = *(_QWORD *)(v37 + 8);
        *(_BYTE *)(v36 + 16) = *(_BYTE *)(v37 + 16);
        *(_QWORD *)(v36 + 24) = *(_QWORD *)(v37 + 24);
        *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
        *(_QWORD *)(v36 + 40) = *(_QWORD *)(v37 + 40);
        *(_QWORD *)(v36 + 48) = *(_QWORD *)(v37 + 48);
        *(_QWORD *)(v36 + 56) = *(_QWORD *)(v37 + 56);
        *(_QWORD *)(v36 + 64) = *(_QWORD *)(v37 + 64);
        *(_QWORD *)(v36 + 72) = *(_QWORD *)(v37 + 72);
        *(_QWORD *)(v36 + 80) = *(_QWORD *)(v37 + 80);
        *(_QWORD *)(v36 + 88) = *(_QWORD *)(v37 + 88);
        *(_QWORD *)(v36 + 96) = *(_QWORD *)(v37 + 96);
        *(_QWORD *)(v36 + 104) = *(_QWORD *)(v37 + 104);
        *(_QWORD *)(v36 + 112) = *(_QWORD *)(v37 + 112);
        *(_QWORD *)(v36 + 120) = *(_QWORD *)(v37 + 120);
        *(_QWORD *)(v36 + 128) = *(_QWORD *)(v37 + 128);
        *(_QWORD *)(v36 + 136) = *(_QWORD *)(v37 + 136);
        *(_QWORD *)(v36 + 144) = *(_QWORD *)(v37 + 144);
        *(_QWORD *)(v36 + 152) = *(_QWORD *)(v37 + 152);
        *(_QWORD *)(v36 + 160) = *(_QWORD *)(v37 + 160);
        *(_QWORD *)(v36 + 168) = *(_QWORD *)(v37 + 168);
        *(_QWORD *)(v36 + 176) = *(_QWORD *)(v37 + 176);
        *(_QWORD *)(v36 + 184) = *(_QWORD *)(v37 + 184);
        *(_QWORD *)(v36 + 192) = *(_QWORD *)(v37 + 192);
        *(_QWORD *)(v36 + 200) = *(_QWORD *)(v37 + 200);
        *(_QWORD *)(v36 + 208) = *(_QWORD *)(v37 + 208);
        *(_QWORD *)(v36 + 216) = *(_QWORD *)(v37 + 216);
        v42 = (int *)type metadata accessor for Contact();
        v52 = v42[19];
        v100 = (void *)(v36 + v52);
        v44 = (const void *)(v37 + v52);
        v45 = sub_1C0301954();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45))
        {
LABEL_47:
          v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
          memcpy(v100, v44, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
LABEL_55:
          *(_QWORD *)(v36 + v42[20]) = *(_QWORD *)(v37 + v42[20]);
          *(_BYTE *)(v36 + v42[21]) = *(_BYTE *)(v37 + v42[21]);
          v56 = v42[22];
          v57 = (_QWORD *)(v36 + v56);
          v58 = (_QWORD *)(v37 + v56);
          *v57 = *v58;
          v57[1] = v58[1];
          *(_BYTE *)(v36 + v42[23]) = *(_BYTE *)(v37 + v42[23]);
          v59 = v42[24];
          v60 = (_QWORD *)(v36 + v59);
          v61 = (_QWORD *)(v37 + v59);
          *v60 = *v61;
          v60[1] = v61[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_56;
        }
      }
      else
      {
        if (v41)
        {
          memcpy((void *)v36, (const void *)v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
LABEL_57:
          __swift_storeEnumTagSinglePayload(v36, 0, 1, v38);
          goto LABEL_61;
        }
        *(_QWORD *)v36 = *(_QWORD *)v37;
        *(_QWORD *)(v36 + 8) = *(_QWORD *)(v37 + 8);
        *(_BYTE *)(v36 + 16) = *(_BYTE *)(v37 + 16);
        *(_QWORD *)(v36 + 24) = *(_QWORD *)(v37 + 24);
        *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
        *(_QWORD *)(v36 + 40) = *(_QWORD *)(v37 + 40);
        *(_QWORD *)(v36 + 48) = *(_QWORD *)(v37 + 48);
        *(_QWORD *)(v36 + 56) = *(_QWORD *)(v37 + 56);
        *(_QWORD *)(v36 + 64) = *(_QWORD *)(v37 + 64);
        *(_QWORD *)(v36 + 72) = *(_QWORD *)(v37 + 72);
        *(_QWORD *)(v36 + 80) = *(_QWORD *)(v37 + 80);
        *(_QWORD *)(v36 + 88) = *(_QWORD *)(v37 + 88);
        *(_QWORD *)(v36 + 96) = *(_QWORD *)(v37 + 96);
        *(_QWORD *)(v36 + 104) = *(_QWORD *)(v37 + 104);
        *(_QWORD *)(v36 + 112) = *(_QWORD *)(v37 + 112);
        *(_QWORD *)(v36 + 120) = *(_QWORD *)(v37 + 120);
        *(_QWORD *)(v36 + 128) = *(_QWORD *)(v37 + 128);
        *(_QWORD *)(v36 + 136) = *(_QWORD *)(v37 + 136);
        *(_QWORD *)(v36 + 144) = *(_QWORD *)(v37 + 144);
        *(_QWORD *)(v36 + 152) = *(_QWORD *)(v37 + 152);
        *(_QWORD *)(v36 + 160) = *(_QWORD *)(v37 + 160);
        *(_QWORD *)(v36 + 168) = *(_QWORD *)(v37 + 168);
        *(_QWORD *)(v36 + 176) = *(_QWORD *)(v37 + 176);
        *(_QWORD *)(v36 + 184) = *(_QWORD *)(v37 + 184);
        *(_QWORD *)(v36 + 192) = *(_QWORD *)(v37 + 192);
        *(_QWORD *)(v36 + 200) = *(_QWORD *)(v37 + 200);
        *(_QWORD *)(v36 + 208) = *(_QWORD *)(v37 + 208);
        *(_QWORD *)(v36 + 216) = *(_QWORD *)(v37 + 216);
        v42 = (int *)type metadata accessor for Contact();
        v43 = v42[19];
        v100 = (void *)(v36 + v43);
        v44 = (const void *)(v37 + v43);
        v45 = sub_1C0301954();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45))
          goto LABEL_47;
      }
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v100, v44, v45);
      __swift_storeEnumTagSinglePayload((uint64_t)v100, 0, 1, v45);
      goto LABEL_55;
    }
    goto LABEL_37;
  }
  if (v40)
  {
    sub_1C0044B78(v36, &qword_1ED7261A8);
LABEL_37:
    v46 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261B8) - 8);
LABEL_38:
    memcpy((void *)v36, (const void *)v37, *(_QWORD *)(v46 + 64));
    goto LABEL_61;
  }
  if (a1 == a2)
    goto LABEL_61;
  sub_1C0044B78(v36, &qword_1ED7261A8);
  v47 = swift_getEnumCaseMultiPayload();
  if (v47 != 2)
  {
    if (v47 == 1)
    {
      *(_QWORD *)v36 = *(_QWORD *)v37;
      *(_QWORD *)(v36 + 8) = *(_QWORD *)(v37 + 8);
      *(_BYTE *)(v36 + 16) = *(_BYTE *)(v37 + 16);
      *(_QWORD *)(v36 + 24) = *(_QWORD *)(v37 + 24);
      *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
      *(_QWORD *)(v36 + 40) = *(_QWORD *)(v37 + 40);
      *(_QWORD *)(v36 + 48) = *(_QWORD *)(v37 + 48);
      *(_QWORD *)(v36 + 56) = *(_QWORD *)(v37 + 56);
      *(_QWORD *)(v36 + 64) = *(_QWORD *)(v37 + 64);
      *(_QWORD *)(v36 + 72) = *(_QWORD *)(v37 + 72);
      *(_QWORD *)(v36 + 80) = *(_QWORD *)(v37 + 80);
      *(_QWORD *)(v36 + 88) = *(_QWORD *)(v37 + 88);
      *(_QWORD *)(v36 + 96) = *(_QWORD *)(v37 + 96);
      *(_QWORD *)(v36 + 104) = *(_QWORD *)(v37 + 104);
      *(_QWORD *)(v36 + 112) = *(_QWORD *)(v37 + 112);
      *(_QWORD *)(v36 + 120) = *(_QWORD *)(v37 + 120);
      *(_QWORD *)(v36 + 128) = *(_QWORD *)(v37 + 128);
      *(_QWORD *)(v36 + 136) = *(_QWORD *)(v37 + 136);
      *(_QWORD *)(v36 + 144) = *(_QWORD *)(v37 + 144);
      *(_QWORD *)(v36 + 152) = *(_QWORD *)(v37 + 152);
      *(_QWORD *)(v36 + 160) = *(_QWORD *)(v37 + 160);
      *(_QWORD *)(v36 + 168) = *(_QWORD *)(v37 + 168);
      *(_QWORD *)(v36 + 176) = *(_QWORD *)(v37 + 176);
      *(_QWORD *)(v36 + 184) = *(_QWORD *)(v37 + 184);
      *(_QWORD *)(v36 + 192) = *(_QWORD *)(v37 + 192);
      *(_QWORD *)(v36 + 200) = *(_QWORD *)(v37 + 200);
      *(_QWORD *)(v36 + 208) = *(_QWORD *)(v37 + 208);
      *(_QWORD *)(v36 + 216) = *(_QWORD *)(v37 + 216);
      v48 = (int *)type metadata accessor for Contact();
      v54 = v48[19];
      v101 = (void *)(v36 + v54);
      v50 = (const void *)(v37 + v54);
      v51 = sub_1C0301954();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v51))
      {
LABEL_52:
        v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
        memcpy(v101, v50, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
LABEL_59:
        *(_QWORD *)(v36 + v48[20]) = *(_QWORD *)(v37 + v48[20]);
        *(_BYTE *)(v36 + v48[21]) = *(_BYTE *)(v37 + v48[21]);
        v62 = v48[22];
        v63 = (_QWORD *)(v36 + v62);
        v64 = (_QWORD *)(v37 + v62);
        *v63 = *v64;
        v63[1] = v64[1];
        *(_BYTE *)(v36 + v48[23]) = *(_BYTE *)(v37 + v48[23]);
        v65 = v48[24];
        v66 = (_QWORD *)(v36 + v65);
        v67 = (_QWORD *)(v37 + v65);
        *v66 = *v67;
        v66[1] = v67[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_60;
      }
    }
    else
    {
      if (v47)
      {
        v46 = *(_QWORD *)(v38 - 8);
        goto LABEL_38;
      }
      *(_QWORD *)v36 = *(_QWORD *)v37;
      *(_QWORD *)(v36 + 8) = *(_QWORD *)(v37 + 8);
      *(_BYTE *)(v36 + 16) = *(_BYTE *)(v37 + 16);
      *(_QWORD *)(v36 + 24) = *(_QWORD *)(v37 + 24);
      *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
      *(_QWORD *)(v36 + 40) = *(_QWORD *)(v37 + 40);
      *(_QWORD *)(v36 + 48) = *(_QWORD *)(v37 + 48);
      *(_QWORD *)(v36 + 56) = *(_QWORD *)(v37 + 56);
      *(_QWORD *)(v36 + 64) = *(_QWORD *)(v37 + 64);
      *(_QWORD *)(v36 + 72) = *(_QWORD *)(v37 + 72);
      *(_QWORD *)(v36 + 80) = *(_QWORD *)(v37 + 80);
      *(_QWORD *)(v36 + 88) = *(_QWORD *)(v37 + 88);
      *(_QWORD *)(v36 + 96) = *(_QWORD *)(v37 + 96);
      *(_QWORD *)(v36 + 104) = *(_QWORD *)(v37 + 104);
      *(_QWORD *)(v36 + 112) = *(_QWORD *)(v37 + 112);
      *(_QWORD *)(v36 + 120) = *(_QWORD *)(v37 + 120);
      *(_QWORD *)(v36 + 128) = *(_QWORD *)(v37 + 128);
      *(_QWORD *)(v36 + 136) = *(_QWORD *)(v37 + 136);
      *(_QWORD *)(v36 + 144) = *(_QWORD *)(v37 + 144);
      *(_QWORD *)(v36 + 152) = *(_QWORD *)(v37 + 152);
      *(_QWORD *)(v36 + 160) = *(_QWORD *)(v37 + 160);
      *(_QWORD *)(v36 + 168) = *(_QWORD *)(v37 + 168);
      *(_QWORD *)(v36 + 176) = *(_QWORD *)(v37 + 176);
      *(_QWORD *)(v36 + 184) = *(_QWORD *)(v37 + 184);
      *(_QWORD *)(v36 + 192) = *(_QWORD *)(v37 + 192);
      *(_QWORD *)(v36 + 200) = *(_QWORD *)(v37 + 200);
      *(_QWORD *)(v36 + 208) = *(_QWORD *)(v37 + 208);
      *(_QWORD *)(v36 + 216) = *(_QWORD *)(v37 + 216);
      v48 = (int *)type metadata accessor for Contact();
      v49 = v48[19];
      v101 = (void *)(v36 + v49);
      v50 = (const void *)(v37 + v49);
      v51 = sub_1C0301954();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v51))
        goto LABEL_52;
    }
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v101, v50, v51);
    __swift_storeEnumTagSinglePayload((uint64_t)v101, 0, 1, v51);
    goto LABEL_59;
  }
  *(_QWORD *)v36 = *(_QWORD *)v37;
  swift_bridgeObjectRetain();
LABEL_60:
  swift_storeEnumTagMultiPayload();
LABEL_61:
  v68 = a3[15];
  v69 = a1 + v68;
  v70 = (__int128 *)(a2 + v68);
  v71 = *(_QWORD *)(a1 + v68 + 8);
  v72 = *(_QWORD *)(a2 + v68 + 8);
  if (v71 == 1)
  {
    if (v72 == 1)
    {
      v73 = *v70;
      v74 = v70[2];
      *(_OWORD *)(v69 + 16) = v70[1];
      *(_OWORD *)(v69 + 32) = v74;
      *(_OWORD *)v69 = v73;
    }
    else
    {
      *(_QWORD *)v69 = *(_QWORD *)v70;
      *(_QWORD *)(v69 + 8) = *((_QWORD *)v70 + 1);
      *(_QWORD *)(v69 + 16) = *((_QWORD *)v70 + 2);
      *(_QWORD *)(v69 + 24) = *((_QWORD *)v70 + 3);
      *(_QWORD *)(v69 + 32) = *((_QWORD *)v70 + 4);
      *(_QWORD *)(v69 + 40) = *((_QWORD *)v70 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v72 == 1)
  {
    sub_1C015FEC4(v69);
    v76 = v70[1];
    v75 = v70[2];
    *(_OWORD *)v69 = *v70;
    *(_OWORD *)(v69 + 16) = v76;
    *(_OWORD *)(v69 + 32) = v75;
  }
  else
  {
    *(_QWORD *)v69 = *(_QWORD *)v70;
    *(_QWORD *)(v69 + 8) = *((_QWORD *)v70 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v69 + 16) = *((_QWORD *)v70 + 2);
    *(_QWORD *)(v69 + 24) = *((_QWORD *)v70 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v69 + 32) = *((_QWORD *)v70 + 4);
    *(_QWORD *)(v69 + 40) = *((_QWORD *)v70 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v77 = a3[16];
  v78 = (_BYTE *)(a1 + v77);
  v79 = (_BYTE *)(a2 + v77);
  *v78 = *v79;
  v78[1] = v79[1];
  v78[2] = v79[2];
  v78[3] = v79[3];
  v78[4] = v79[4];
  v80 = a3[17];
  v81 = (_QWORD *)(a1 + v80);
  v82 = (_QWORD *)(a2 + v80);
  *v81 = *v82;
  v81[1] = v82[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v83 = a3[18];
  v84 = (void *)(a1 + v83);
  v85 = (const void *)(a2 + v83);
  v86 = sub_1C0301D5C();
  v87 = *(_QWORD *)(v86 - 8);
  v88 = *(void (**)(void *, const void *, uint64_t))(v87 + 24);
  v88(v84, v85, v86);
  v89 = a3[19];
  v90 = (void *)(a1 + v89);
  v91 = (const void *)(a2 + v89);
  v92 = __swift_getEnumTagSinglePayload(a1 + v89, 1, v86);
  v93 = __swift_getEnumTagSinglePayload((uint64_t)v91, 1, v86);
  if (!v92)
  {
    if (!v93)
    {
      v88(v90, v91, v86);
      goto LABEL_74;
    }
    (*(void (**)(void *, uint64_t))(v87 + 8))(v90, v86);
    goto LABEL_73;
  }
  if (v93)
  {
LABEL_73:
    v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
    memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
    goto LABEL_74;
  }
  (*(void (**)(void *, const void *, uint64_t))(v87 + 16))(v90, v91, v86);
  __swift_storeEnumTagSinglePayload((uint64_t)v90, 0, 1, v86);
LABEL_74:
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  v95 = a3[21];
  v96 = (_QWORD *)(a1 + v95);
  v97 = (_QWORD *)(a2 + v95);
  *v96 = *v97;
  v96[1] = v97[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C015FEC4(uint64_t a1)
{
  destroy for TrialEnrollment();
  return a1;
}

uint64_t sub_1C015FEF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  int *v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  int v28;
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  _OWORD *v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  void *v54;
  const void *v55;
  uint64_t v56;
  uint64_t v57;

  memcpy((void *)a1, (const void *)a2, 0x108uLL);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_WORD *)(a1 + 288) = *(_WORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  v6 = a3[10];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)v7 = *(_OWORD *)v8;
    *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
    *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
    *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
    *(_OWORD *)(v7 + 56) = *(_OWORD *)(v8 + 56);
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
    *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
    *(_OWORD *)(v7 + 104) = *(_OWORD *)(v8 + 104);
    *(_OWORD *)(v7 + 120) = *(_OWORD *)(v8 + 120);
    *(_OWORD *)(v7 + 136) = *(_OWORD *)(v8 + 136);
    *(_OWORD *)(v7 + 152) = *(_OWORD *)(v8 + 152);
    *(_OWORD *)(v7 + 168) = *(_OWORD *)(v8 + 168);
    *(_OWORD *)(v7 + 184) = *(_OWORD *)(v8 + 184);
    *(_OWORD *)(v7 + 200) = *(_OWORD *)(v8 + 200);
    *(_QWORD *)(v7 + 216) = *(_QWORD *)(v8 + 216);
    v17 = (int *)type metadata accessor for Contact();
    v18 = v17[19];
    v19 = (void *)(v7 + v18);
    v20 = (const void *)(v8 + v18);
    v21 = sub_1C0301954();
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
    }
    *(_QWORD *)(v7 + v17[20]) = *(_QWORD *)(v8 + v17[20]);
    *(_BYTE *)(v7 + v17[21]) = *(_BYTE *)(v8 + v17[21]);
    *(_OWORD *)(v7 + v17[22]) = *(_OWORD *)(v8 + v17[22]);
    *(_BYTE *)(v7 + v17[23]) = *(_BYTE *)(v8 + v17[23]);
    *(_OWORD *)(v7 + v17[24]) = *(_OWORD *)(v8 + v17[24]);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      goto LABEL_13;
    }
    *(_OWORD *)v7 = *(_OWORD *)v8;
    *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
    *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
    *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
    *(_OWORD *)(v7 + 56) = *(_OWORD *)(v8 + 56);
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
    *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
    *(_OWORD *)(v7 + 104) = *(_OWORD *)(v8 + 104);
    *(_OWORD *)(v7 + 120) = *(_OWORD *)(v8 + 120);
    *(_OWORD *)(v7 + 136) = *(_OWORD *)(v8 + 136);
    *(_OWORD *)(v7 + 152) = *(_OWORD *)(v8 + 152);
    *(_OWORD *)(v7 + 168) = *(_OWORD *)(v8 + 168);
    *(_OWORD *)(v7 + 184) = *(_OWORD *)(v8 + 184);
    *(_OWORD *)(v7 + 200) = *(_OWORD *)(v8 + 200);
    *(_QWORD *)(v7 + 216) = *(_QWORD *)(v8 + 216);
    v11 = (int *)type metadata accessor for Contact();
    v12 = v11[19];
    v13 = (void *)(v7 + v12);
    v14 = (const void *)(v8 + v12);
    v15 = sub_1C0301954();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
    *(_QWORD *)(v7 + v11[20]) = *(_QWORD *)(v8 + v11[20]);
    *(_BYTE *)(v7 + v11[21]) = *(_BYTE *)(v8 + v11[21]);
    *(_OWORD *)(v7 + v11[22]) = *(_OWORD *)(v8 + v11[22]);
    *(_BYTE *)(v7 + v11[23]) = *(_BYTE *)(v8 + v11[23]);
    *(_OWORD *)(v7 + v11[24]) = *(_OWORD *)(v8 + v11[24]);
  }
  swift_storeEnumTagMultiPayload();
LABEL_13:
  v23 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  v24 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v25 = (_OWORD *)(a1 + v24);
  v26 = (_OWORD *)(a2 + v24);
  if (__swift_getEnumTagSinglePayload(a2 + v24, 1, v9))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261B8);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_28;
  }
  v28 = swift_getEnumCaseMultiPayload();
  if (v28 == 1)
  {
    *v25 = *v26;
    *((_BYTE *)v25 + 16) = *((_BYTE *)v26 + 16);
    *(_OWORD *)((char *)v25 + 24) = *(_OWORD *)((char *)v26 + 24);
    *(_OWORD *)((char *)v25 + 40) = *(_OWORD *)((char *)v26 + 40);
    *(_OWORD *)((char *)v25 + 56) = *(_OWORD *)((char *)v26 + 56);
    *(_OWORD *)((char *)v25 + 72) = *(_OWORD *)((char *)v26 + 72);
    *(_OWORD *)((char *)v25 + 88) = *(_OWORD *)((char *)v26 + 88);
    *(_OWORD *)((char *)v25 + 104) = *(_OWORD *)((char *)v26 + 104);
    *(_OWORD *)((char *)v25 + 120) = *(_OWORD *)((char *)v26 + 120);
    *(_OWORD *)((char *)v25 + 136) = *(_OWORD *)((char *)v26 + 136);
    *(_OWORD *)((char *)v25 + 152) = *(_OWORD *)((char *)v26 + 152);
    *(_OWORD *)((char *)v25 + 168) = *(_OWORD *)((char *)v26 + 168);
    *(_OWORD *)((char *)v25 + 184) = *(_OWORD *)((char *)v26 + 184);
    *(_OWORD *)((char *)v25 + 200) = *(_OWORD *)((char *)v26 + 200);
    *((_QWORD *)v25 + 27) = *((_QWORD *)v26 + 27);
    v35 = (int *)type metadata accessor for Contact();
    v36 = v35[19];
    v37 = (char *)v25 + v36;
    v38 = (char *)v26 + v36;
    v39 = sub_1C0301954();
    if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v39);
    }
    *(_QWORD *)((char *)v25 + v35[20]) = *(_QWORD *)((char *)v26 + v35[20]);
    *((_BYTE *)v25 + v35[21]) = *((_BYTE *)v26 + v35[21]);
    *(_OWORD *)((char *)v25 + v35[22]) = *(_OWORD *)((char *)v26 + v35[22]);
    *((_BYTE *)v25 + v35[23]) = *((_BYTE *)v26 + v35[23]);
    *(_OWORD *)((char *)v25 + v35[24]) = *(_OWORD *)((char *)v26 + v35[24]);
    goto LABEL_26;
  }
  if (!v28)
  {
    *v25 = *v26;
    *((_BYTE *)v25 + 16) = *((_BYTE *)v26 + 16);
    *(_OWORD *)((char *)v25 + 24) = *(_OWORD *)((char *)v26 + 24);
    *(_OWORD *)((char *)v25 + 40) = *(_OWORD *)((char *)v26 + 40);
    *(_OWORD *)((char *)v25 + 56) = *(_OWORD *)((char *)v26 + 56);
    *(_OWORD *)((char *)v25 + 72) = *(_OWORD *)((char *)v26 + 72);
    *(_OWORD *)((char *)v25 + 88) = *(_OWORD *)((char *)v26 + 88);
    *(_OWORD *)((char *)v25 + 104) = *(_OWORD *)((char *)v26 + 104);
    *(_OWORD *)((char *)v25 + 120) = *(_OWORD *)((char *)v26 + 120);
    *(_OWORD *)((char *)v25 + 136) = *(_OWORD *)((char *)v26 + 136);
    *(_OWORD *)((char *)v25 + 152) = *(_OWORD *)((char *)v26 + 152);
    *(_OWORD *)((char *)v25 + 168) = *(_OWORD *)((char *)v26 + 168);
    *(_OWORD *)((char *)v25 + 184) = *(_OWORD *)((char *)v26 + 184);
    *(_OWORD *)((char *)v25 + 200) = *(_OWORD *)((char *)v26 + 200);
    *((_QWORD *)v25 + 27) = *((_QWORD *)v26 + 27);
    v29 = (int *)type metadata accessor for Contact();
    v30 = v29[19];
    v31 = (char *)v25 + v30;
    v32 = (char *)v26 + v30;
    v33 = sub_1C0301954();
    if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
      __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v33);
    }
    *(_QWORD *)((char *)v25 + v29[20]) = *(_QWORD *)((char *)v26 + v29[20]);
    *((_BYTE *)v25 + v29[21]) = *((_BYTE *)v26 + v29[21]);
    *(_OWORD *)((char *)v25 + v29[22]) = *(_OWORD *)((char *)v26 + v29[22]);
    *((_BYTE *)v25 + v29[23]) = *((_BYTE *)v26 + v29[23]);
    *(_OWORD *)((char *)v25 + v29[24]) = *(_OWORD *)((char *)v26 + v29[24]);
LABEL_26:
    swift_storeEnumTagMultiPayload();
    goto LABEL_27;
  }
  memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
LABEL_27:
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v9);
LABEL_28:
  v41 = a3[15];
  v42 = a3[16];
  v43 = (_OWORD *)(a1 + v41);
  v44 = (_OWORD *)(a2 + v41);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  v43[2] = v44[2];
  v46 = a1 + v42;
  v47 = a2 + v42;
  *(_BYTE *)(v46 + 4) = *(_BYTE *)(v47 + 4);
  *(_DWORD *)v46 = *(_DWORD *)v47;
  v48 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = sub_1C0301D5C();
  v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 32);
  v52(v49, v50, v51);
  v53 = a3[19];
  v54 = (void *)(a1 + v53);
  v55 = (const void *)(a2 + v53);
  if (__swift_getEnumTagSinglePayload(a2 + v53, 1, v51))
  {
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    v52((uint64_t)v54, (uint64_t)v55, v51);
    __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v51);
  }
  v57 = a3[21];
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  *(_OWORD *)(a1 + v57) = *(_OWORD *)(a2 + v57);
  return a1;
}

uint64_t sub_1C0160670(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  int *v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int EnumTagSinglePayload;
  int v44;
  int v45;
  int *v46;
  uint64_t v47;
  void *v48;
  const void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int *v54;
  uint64_t v55;
  void *v56;
  const void *v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  void *v62;
  const void *v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  uint64_t v67;
  void *v68;
  const void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  const void *v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(void *, const void *, uint64_t);
  uint64_t v93;
  void *v94;
  const void *v95;
  int v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v15;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 184))
  {
    if (*(_QWORD *)(a2 + 184))
    {
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      swift_release();
      v16 = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = v16;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C011A248(a1 + 168);
  }
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
LABEL_6:
  if (*(_QWORD *)(a1 + 208))
  {
    v17 = *(_QWORD *)(a2 + 208);
    if (v17)
    {
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = v17;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = v18;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1C011A27C(a1 + 192);
  }
  v19 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v19;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
LABEL_11:
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_release();
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v20 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_BYTE *)(a1 + 289) = *(_BYTE *)(a2 + 289);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRelease();
  if (a1 == a2)
    goto LABEL_24;
  v21 = a3[10];
  v22 = a1 + v21;
  v23 = a2 + v21;
  sub_1C0044B78(a1 + v21, &qword_1ED7261A8);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_BYTE *)(v22 + 16) = *(_BYTE *)(v23 + 16);
    *(_OWORD *)(v22 + 24) = *(_OWORD *)(v23 + 24);
    *(_OWORD *)(v22 + 40) = *(_OWORD *)(v23 + 40);
    *(_OWORD *)(v22 + 56) = *(_OWORD *)(v23 + 56);
    *(_OWORD *)(v22 + 72) = *(_OWORD *)(v23 + 72);
    *(_OWORD *)(v22 + 88) = *(_OWORD *)(v23 + 88);
    *(_OWORD *)(v22 + 104) = *(_OWORD *)(v23 + 104);
    *(_OWORD *)(v22 + 120) = *(_OWORD *)(v23 + 120);
    *(_OWORD *)(v22 + 136) = *(_OWORD *)(v23 + 136);
    *(_OWORD *)(v22 + 152) = *(_OWORD *)(v23 + 152);
    *(_OWORD *)(v22 + 168) = *(_OWORD *)(v23 + 168);
    *(_OWORD *)(v22 + 184) = *(_OWORD *)(v23 + 184);
    *(_OWORD *)(v22 + 200) = *(_OWORD *)(v23 + 200);
    *(_QWORD *)(v22 + 216) = *(_QWORD *)(v23 + 216);
    v32 = (int *)type metadata accessor for Contact();
    v33 = v32[19];
    v34 = (void *)(v22 + v33);
    v35 = (const void *)(v23 + v33);
    v36 = sub_1C0301954();
    if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v36))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
      __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v36);
    }
    *(_QWORD *)(v22 + v32[20]) = *(_QWORD *)(v23 + v32[20]);
    *(_BYTE *)(v22 + v32[21]) = *(_BYTE *)(v23 + v32[21]);
    *(_OWORD *)(v22 + v32[22]) = *(_OWORD *)(v23 + v32[22]);
    *(_BYTE *)(v22 + v32[23]) = *(_BYTE *)(v23 + v32[23]);
    *(_OWORD *)(v22 + v32[24]) = *(_OWORD *)(v23 + v32[24]);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy((void *)v22, (const void *)v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      goto LABEL_24;
    }
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_BYTE *)(v22 + 16) = *(_BYTE *)(v23 + 16);
    *(_OWORD *)(v22 + 24) = *(_OWORD *)(v23 + 24);
    *(_OWORD *)(v22 + 40) = *(_OWORD *)(v23 + 40);
    *(_OWORD *)(v22 + 56) = *(_OWORD *)(v23 + 56);
    *(_OWORD *)(v22 + 72) = *(_OWORD *)(v23 + 72);
    *(_OWORD *)(v22 + 88) = *(_OWORD *)(v23 + 88);
    *(_OWORD *)(v22 + 104) = *(_OWORD *)(v23 + 104);
    *(_OWORD *)(v22 + 120) = *(_OWORD *)(v23 + 120);
    *(_OWORD *)(v22 + 136) = *(_OWORD *)(v23 + 136);
    *(_OWORD *)(v22 + 152) = *(_OWORD *)(v23 + 152);
    *(_OWORD *)(v22 + 168) = *(_OWORD *)(v23 + 168);
    *(_OWORD *)(v22 + 184) = *(_OWORD *)(v23 + 184);
    *(_OWORD *)(v22 + 200) = *(_OWORD *)(v23 + 200);
    *(_QWORD *)(v22 + 216) = *(_QWORD *)(v23 + 216);
    v26 = (int *)type metadata accessor for Contact();
    v27 = v26[19];
    v28 = (void *)(v22 + v27);
    v29 = (const void *)(v23 + v27);
    v30 = sub_1C0301954();
    if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
    }
    *(_QWORD *)(v22 + v26[20]) = *(_QWORD *)(v23 + v26[20]);
    *(_BYTE *)(v22 + v26[21]) = *(_BYTE *)(v23 + v26[21]);
    *(_OWORD *)(v22 + v26[22]) = *(_OWORD *)(v23 + v26[22]);
    *(_BYTE *)(v22 + v26[23]) = *(_BYTE *)(v23 + v26[23]);
    *(_OWORD *)(v22 + v26[24]) = *(_OWORD *)(v23 + v26[24]);
  }
  swift_storeEnumTagMultiPayload();
LABEL_24:
  v38 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v38) = *(_BYTE *)(a2 + v38);
  v39 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v40, 1, v42);
  v44 = __swift_getEnumTagSinglePayload(v41, 1, v42);
  if (EnumTagSinglePayload)
  {
    if (!v44)
    {
      v45 = swift_getEnumCaseMultiPayload();
      if (v45 == 1)
      {
        *(_OWORD *)v40 = *(_OWORD *)v41;
        *(_BYTE *)(v40 + 16) = *(_BYTE *)(v41 + 16);
        *(_OWORD *)(v40 + 24) = *(_OWORD *)(v41 + 24);
        *(_OWORD *)(v40 + 40) = *(_OWORD *)(v41 + 40);
        *(_OWORD *)(v40 + 56) = *(_OWORD *)(v41 + 56);
        *(_OWORD *)(v40 + 72) = *(_OWORD *)(v41 + 72);
        *(_OWORD *)(v40 + 88) = *(_OWORD *)(v41 + 88);
        *(_OWORD *)(v40 + 104) = *(_OWORD *)(v41 + 104);
        *(_OWORD *)(v40 + 120) = *(_OWORD *)(v41 + 120);
        *(_OWORD *)(v40 + 136) = *(_OWORD *)(v41 + 136);
        *(_OWORD *)(v40 + 152) = *(_OWORD *)(v41 + 152);
        *(_OWORD *)(v40 + 168) = *(_OWORD *)(v41 + 168);
        *(_OWORD *)(v40 + 184) = *(_OWORD *)(v41 + 184);
        *(_OWORD *)(v40 + 200) = *(_OWORD *)(v41 + 200);
        *(_QWORD *)(v40 + 216) = *(_QWORD *)(v41 + 216);
        v60 = (int *)type metadata accessor for Contact();
        v61 = v60[19];
        v62 = (void *)(v40 + v61);
        v63 = (const void *)(v41 + v61);
        v64 = sub_1C0301954();
        if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64))
        {
          v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
          memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v62, v63, v64);
          __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v64);
        }
        *(_QWORD *)(v40 + v60[20]) = *(_QWORD *)(v41 + v60[20]);
        *(_BYTE *)(v40 + v60[21]) = *(_BYTE *)(v41 + v60[21]);
        *(_OWORD *)(v40 + v60[22]) = *(_OWORD *)(v41 + v60[22]);
        *(_BYTE *)(v40 + v60[23]) = *(_BYTE *)(v41 + v60[23]);
        *(_OWORD *)(v40 + v60[24]) = *(_OWORD *)(v41 + v60[24]);
      }
      else
      {
        if (v45)
        {
          memcpy((void *)v40, (const void *)v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
LABEL_50:
          __swift_storeEnumTagSinglePayload(v40, 0, 1, v42);
          goto LABEL_51;
        }
        *(_OWORD *)v40 = *(_OWORD *)v41;
        *(_BYTE *)(v40 + 16) = *(_BYTE *)(v41 + 16);
        *(_OWORD *)(v40 + 24) = *(_OWORD *)(v41 + 24);
        *(_OWORD *)(v40 + 40) = *(_OWORD *)(v41 + 40);
        *(_OWORD *)(v40 + 56) = *(_OWORD *)(v41 + 56);
        *(_OWORD *)(v40 + 72) = *(_OWORD *)(v41 + 72);
        *(_OWORD *)(v40 + 88) = *(_OWORD *)(v41 + 88);
        *(_OWORD *)(v40 + 104) = *(_OWORD *)(v41 + 104);
        *(_OWORD *)(v40 + 120) = *(_OWORD *)(v41 + 120);
        *(_OWORD *)(v40 + 136) = *(_OWORD *)(v41 + 136);
        *(_OWORD *)(v40 + 152) = *(_OWORD *)(v41 + 152);
        *(_OWORD *)(v40 + 168) = *(_OWORD *)(v41 + 168);
        *(_OWORD *)(v40 + 184) = *(_OWORD *)(v41 + 184);
        *(_OWORD *)(v40 + 200) = *(_OWORD *)(v41 + 200);
        *(_QWORD *)(v40 + 216) = *(_QWORD *)(v41 + 216);
        v46 = (int *)type metadata accessor for Contact();
        v47 = v46[19];
        v48 = (void *)(v40 + v47);
        v49 = (const void *)(v41 + v47);
        v50 = sub_1C0301954();
        if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v50))
        {
          v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
          memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
          __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v50);
        }
        *(_QWORD *)(v40 + v46[20]) = *(_QWORD *)(v41 + v46[20]);
        *(_BYTE *)(v40 + v46[21]) = *(_BYTE *)(v41 + v46[21]);
        *(_OWORD *)(v40 + v46[22]) = *(_OWORD *)(v41 + v46[22]);
        *(_BYTE *)(v40 + v46[23]) = *(_BYTE *)(v41 + v46[23]);
        *(_OWORD *)(v40 + v46[24]) = *(_OWORD *)(v41 + v46[24]);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_50;
    }
    goto LABEL_32;
  }
  if (v44)
  {
    sub_1C0044B78(v40, &qword_1ED7261A8);
LABEL_32:
    v52 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261B8) - 8);
LABEL_33:
    memcpy((void *)v40, (const void *)v41, *(_QWORD *)(v52 + 64));
    goto LABEL_51;
  }
  if (a1 == a2)
    goto LABEL_51;
  sub_1C0044B78(v40, &qword_1ED7261A8);
  v53 = swift_getEnumCaseMultiPayload();
  if (v53 == 1)
  {
    *(_OWORD *)v40 = *(_OWORD *)v41;
    *(_BYTE *)(v40 + 16) = *(_BYTE *)(v41 + 16);
    *(_OWORD *)(v40 + 24) = *(_OWORD *)(v41 + 24);
    *(_OWORD *)(v40 + 40) = *(_OWORD *)(v41 + 40);
    *(_OWORD *)(v40 + 56) = *(_OWORD *)(v41 + 56);
    *(_OWORD *)(v40 + 72) = *(_OWORD *)(v41 + 72);
    *(_OWORD *)(v40 + 88) = *(_OWORD *)(v41 + 88);
    *(_OWORD *)(v40 + 104) = *(_OWORD *)(v41 + 104);
    *(_OWORD *)(v40 + 120) = *(_OWORD *)(v41 + 120);
    *(_OWORD *)(v40 + 136) = *(_OWORD *)(v41 + 136);
    *(_OWORD *)(v40 + 152) = *(_OWORD *)(v41 + 152);
    *(_OWORD *)(v40 + 168) = *(_OWORD *)(v41 + 168);
    *(_OWORD *)(v40 + 184) = *(_OWORD *)(v41 + 184);
    *(_OWORD *)(v40 + 200) = *(_OWORD *)(v41 + 200);
    *(_QWORD *)(v40 + 216) = *(_QWORD *)(v41 + 216);
    v66 = (int *)type metadata accessor for Contact();
    v67 = v66[19];
    v68 = (void *)(v40 + v67);
    v69 = (const void *)(v41 + v67);
    v70 = sub_1C0301954();
    if (__swift_getEnumTagSinglePayload((uint64_t)v69, 1, v70))
    {
      v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
      __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v70);
    }
    *(_QWORD *)(v40 + v66[20]) = *(_QWORD *)(v41 + v66[20]);
    *(_BYTE *)(v40 + v66[21]) = *(_BYTE *)(v41 + v66[21]);
    *(_OWORD *)(v40 + v66[22]) = *(_OWORD *)(v41 + v66[22]);
    *(_BYTE *)(v40 + v66[23]) = *(_BYTE *)(v41 + v66[23]);
    *(_OWORD *)(v40 + v66[24]) = *(_OWORD *)(v41 + v66[24]);
  }
  else
  {
    if (v53)
    {
      v52 = *(_QWORD *)(v42 - 8);
      goto LABEL_33;
    }
    *(_OWORD *)v40 = *(_OWORD *)v41;
    *(_BYTE *)(v40 + 16) = *(_BYTE *)(v41 + 16);
    *(_OWORD *)(v40 + 24) = *(_OWORD *)(v41 + 24);
    *(_OWORD *)(v40 + 40) = *(_OWORD *)(v41 + 40);
    *(_OWORD *)(v40 + 56) = *(_OWORD *)(v41 + 56);
    *(_OWORD *)(v40 + 72) = *(_OWORD *)(v41 + 72);
    *(_OWORD *)(v40 + 88) = *(_OWORD *)(v41 + 88);
    *(_OWORD *)(v40 + 104) = *(_OWORD *)(v41 + 104);
    *(_OWORD *)(v40 + 120) = *(_OWORD *)(v41 + 120);
    *(_OWORD *)(v40 + 136) = *(_OWORD *)(v41 + 136);
    *(_OWORD *)(v40 + 152) = *(_OWORD *)(v41 + 152);
    *(_OWORD *)(v40 + 168) = *(_OWORD *)(v41 + 168);
    *(_OWORD *)(v40 + 184) = *(_OWORD *)(v41 + 184);
    *(_OWORD *)(v40 + 200) = *(_OWORD *)(v41 + 200);
    *(_QWORD *)(v40 + 216) = *(_QWORD *)(v41 + 216);
    v54 = (int *)type metadata accessor for Contact();
    v55 = v54[19];
    v56 = (void *)(v40 + v55);
    v57 = (const void *)(v41 + v55);
    v58 = sub_1C0301954();
    if (__swift_getEnumTagSinglePayload((uint64_t)v57, 1, v58))
    {
      v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
      __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, v58);
    }
    *(_QWORD *)(v40 + v54[20]) = *(_QWORD *)(v41 + v54[20]);
    *(_BYTE *)(v40 + v54[21]) = *(_BYTE *)(v41 + v54[21]);
    *(_OWORD *)(v40 + v54[22]) = *(_OWORD *)(v41 + v54[22]);
    *(_BYTE *)(v40 + v54[23]) = *(_BYTE *)(v41 + v54[23]);
    *(_OWORD *)(v40 + v54[24]) = *(_OWORD *)(v41 + v54[24]);
  }
  swift_storeEnumTagMultiPayload();
LABEL_51:
  v72 = a3[15];
  v73 = a1 + v72;
  v74 = a2 + v72;
  if (*(_QWORD *)(a1 + v72 + 8) == 1)
  {
LABEL_54:
    v76 = *(_OWORD *)(v74 + 16);
    *(_OWORD *)v73 = *(_OWORD *)v74;
    *(_OWORD *)(v73 + 16) = v76;
    *(_OWORD *)(v73 + 32) = *(_OWORD *)(v74 + 32);
    goto LABEL_56;
  }
  v75 = *(_QWORD *)(v74 + 8);
  if (v75 == 1)
  {
    sub_1C015FEC4(v73);
    goto LABEL_54;
  }
  *(_QWORD *)v73 = *(_QWORD *)v74;
  *(_QWORD *)(v73 + 8) = v75;
  swift_bridgeObjectRelease();
  v77 = *(_QWORD *)(v74 + 24);
  *(_QWORD *)(v73 + 16) = *(_QWORD *)(v74 + 16);
  *(_QWORD *)(v73 + 24) = v77;
  swift_bridgeObjectRelease();
  v78 = *(_QWORD *)(v74 + 40);
  *(_QWORD *)(v73 + 32) = *(_QWORD *)(v74 + 32);
  *(_QWORD *)(v73 + 40) = v78;
  swift_bridgeObjectRelease();
LABEL_56:
  v79 = a3[16];
  v80 = a3[17];
  v81 = (_BYTE *)(a1 + v79);
  v82 = (_BYTE *)(a2 + v79);
  *v81 = *v82;
  v81[1] = v82[1];
  v81[2] = v82[2];
  v81[3] = v82[3];
  v81[4] = v82[4];
  v83 = (_QWORD *)(a1 + v80);
  v84 = (uint64_t *)(a2 + v80);
  v86 = *v84;
  v85 = v84[1];
  *v83 = v86;
  v83[1] = v85;
  swift_bridgeObjectRelease();
  v87 = a3[18];
  v88 = (void *)(a1 + v87);
  v89 = (const void *)(a2 + v87);
  v90 = sub_1C0301D5C();
  v91 = *(_QWORD *)(v90 - 8);
  v92 = *(void (**)(void *, const void *, uint64_t))(v91 + 40);
  v92(v88, v89, v90);
  v93 = a3[19];
  v94 = (void *)(a1 + v93);
  v95 = (const void *)(a2 + v93);
  v96 = __swift_getEnumTagSinglePayload(a1 + v93, 1, v90);
  v97 = __swift_getEnumTagSinglePayload((uint64_t)v95, 1, v90);
  if (!v96)
  {
    if (!v97)
    {
      v92(v94, v95, v90);
      goto LABEL_62;
    }
    (*(void (**)(void *, uint64_t))(v91 + 8))(v94, v90);
    goto LABEL_61;
  }
  if (v97)
  {
LABEL_61:
    v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
    memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
    goto LABEL_62;
  }
  (*(void (**)(void *, const void *, uint64_t))(v91 + 32))(v94, v95, v90);
  __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v90);
LABEL_62:
  v99 = a3[21];
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  v100 = (_QWORD *)(a1 + v99);
  v101 = (uint64_t *)(a2 + v99);
  v103 = *v101;
  v102 = v101[1];
  *v100 = v103;
  v100[1] = v102;
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1C0161380(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_33_15(*(_QWORD *)(a1 + 8));
    OUTLINED_FUNCTION_37_0();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
    OUTLINED_FUNCTION_1_7();
    if (v9)
    {
      v7 = v6;
      v8 = a3[10];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261B8);
      OUTLINED_FUNCTION_1_7();
      if (v9)
      {
        v7 = v10;
        v8 = a3[14];
      }
      else
      {
        OUTLINED_FUNCTION_40_1();
        OUTLINED_FUNCTION_1_7();
        if (v11)
        {
          v7 = v12;
          v8 = a3[18];
        }
        else
        {
          v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
          v8 = a3[19];
        }
      }
    }
    OUTLINED_FUNCTION_46(a1 + v8, a2, v7);
  }
}

void sub_1C0161434()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  int *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  OUTLINED_FUNCTION_73_0();
  if (v4)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    OUTLINED_FUNCTION_37_0();
  }
  else
  {
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
    OUTLINED_FUNCTION_0_6();
    if (v4)
    {
      v6 = v5;
      v7 = v3[10];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261B8);
      OUTLINED_FUNCTION_0_6();
      if (v8)
      {
        v6 = v9;
        v7 = v3[14];
      }
      else
      {
        OUTLINED_FUNCTION_40_1();
        OUTLINED_FUNCTION_0_6();
        if (v10)
        {
          v6 = v11;
          v7 = v3[18];
        }
        else
        {
          v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
          v7 = v3[19];
        }
      }
    }
    OUTLINED_FUNCTION_49_3(v1 + v7, v0, v0, v6);
  }
}

void sub_1C01614E4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1C0161694(319, &qword_1ED7261B0, (uint64_t (*)(uint64_t))type metadata accessor for Contact, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Recommendation);
  if (v0 <= 0x3F)
  {
    sub_1C016163C();
    if (v1 <= 0x3F)
    {
      sub_1C0301D5C();
      if (v2 <= 0x3F)
      {
        sub_1C0161694(319, (unint64_t *)&qword_1EF5BD580, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void sub_1C016163C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED7261C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7261A8);
    v0 = sub_1C030448C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED7261C0);
  }
}

void sub_1C0161694(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

unint64_t sub_1C01616EC()
{
  unint64_t result;

  result = qword_1EF5BD598;
  if (!qword_1EF5BD598)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ModelType, &type metadata for ModelType);
    atomic_store(result, (unint64_t *)&qword_1EF5BD598);
  }
  return result;
}

uint64_t sub_1C0161728(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C0161770()
{
  unint64_t result;

  result = qword_1EF5BD5C0;
  if (!qword_1EF5BD5C0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030FD50, &type metadata for ContactResolutionType);
    atomic_store(result, (unint64_t *)&qword_1EF5BD5C0);
  }
  return result;
}

unint64_t sub_1C01617AC()
{
  unint64_t result;

  result = qword_1EF5BD5C8;
  if (!qword_1EF5BD5C8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ForcePromptType, &type metadata for ForcePromptType);
    atomic_store(result, (unint64_t *)&qword_1EF5BD5C8);
  }
  return result;
}

unint64_t sub_1C01617E8()
{
  unint64_t result;

  result = qword_1EF5BD5D0;
  if (!qword_1EF5BD5D0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030F4A0, &type metadata for TrialEnrollment);
    atomic_store(result, (unint64_t *)&qword_1EF5BD5D0);
  }
  return result;
}

unint64_t sub_1C0161824()
{
  unint64_t result;

  result = qword_1EF5BD5D8;
  if (!qword_1EF5BD5D8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030C8F4, &type metadata for PLUSRunTimeData);
    atomic_store(result, (unint64_t *)&qword_1EF5BD5D8);
  }
  return result;
}

unint64_t sub_1C0161860()
{
  unint64_t result;

  result = qword_1EF5BD5E8;
  if (!qword_1EF5BD5E8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ModelType, &type metadata for ModelType);
    atomic_store(result, (unint64_t *)&qword_1EF5BD5E8);
  }
  return result;
}

unint64_t sub_1C016189C()
{
  unint64_t result;

  result = qword_1EF5BD608;
  if (!qword_1EF5BD608)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030FD00, &type metadata for ContactResolutionType);
    atomic_store(result, (unint64_t *)&qword_1EF5BD608);
  }
  return result;
}

unint64_t sub_1C01618D8()
{
  unint64_t result;

  result = qword_1EF5BD610;
  if (!qword_1EF5BD610)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ForcePromptType, &type metadata for ForcePromptType);
    atomic_store(result, (unint64_t *)&qword_1EF5BD610);
  }
  return result;
}

unint64_t sub_1C0161914()
{
  unint64_t result;

  result = qword_1EF5BD618;
  if (!qword_1EF5BD618)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030F478, &type metadata for TrialEnrollment);
    atomic_store(result, (unint64_t *)&qword_1EF5BD618);
  }
  return result;
}

unint64_t sub_1C0161950()
{
  unint64_t result;

  result = qword_1EF5BD620;
  if (!qword_1EF5BD620)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030C8CC, &type metadata for PLUSRunTimeData);
    atomic_store(result, (unint64_t *)&qword_1EF5BD620);
  }
  return result;
}

unint64_t sub_1C016198C()
{
  unint64_t result;

  result = qword_1EF5BD640;
  if (!qword_1EF5BD640)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ForcePromptType, &type metadata for ForcePromptType);
    atomic_store(result, (unint64_t *)&qword_1EF5BD640);
  }
  return result;
}

_QWORD *sub_1C01619C8(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = *(_OWORD *)((char *)a2 + v7 + 16);
    *(_OWORD *)v8 = *(_OWORD *)((char *)a2 + v7);
    *((_OWORD *)v8 + 1) = v10;
    *((_OWORD *)v8 + 2) = *(_OWORD *)((char *)a2 + v7 + 32);
    *((_QWORD *)v8 + 6) = *(_QWORD *)((char *)a2 + v7 + 48);
    *((_WORD *)v8 + 28) = *(_WORD *)((char *)a2 + v7 + 56);
    *((_OWORD *)v8 + 4) = *(_OWORD *)((char *)a2 + v7 + 64);
    *((_DWORD *)v8 + 20) = *(_DWORD *)((char *)a2 + v7 + 80);
    *(_OWORD *)(v8 + 88) = *(_OWORD *)((char *)a2 + v7 + 88);
    *((_QWORD *)v8 + 13) = *(_QWORD *)((char *)a2 + v7 + 104);
    v11 = (int *)type metadata accessor for PrivatizedSignalSet(0);
    v12 = v11[24];
    v13 = &v8[v12];
    v14 = &v9[v12];
    v15 = sub_1C03036C4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
    v18 = v11[25];
    v19 = &v8[v18];
    v20 = &v9[v18];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v9[v18], 1, v15))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v19, v20, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v15);
    }
    v22 = v11[26];
    v23 = &v8[v22];
    v24 = &v9[v22];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v9[v22], 1, v15))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v23, v24, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v15);
    }
    v8[v11[27]] = v9[v11[27]];
    v8[v11[28]] = v9[v11[28]];
    v8[v11[29]] = v9[v11[29]];
    v8[v11[30]] = v9[v11[30]];
    v8[v11[31]] = v9[v11[31]];
    v8[v11[32]] = v9[v11[32]];
    v8[v11[33]] = v9[v11[33]];
    v8[v11[34]] = v9[v11[34]];
    v8[v11[35]] = v9[v11[35]];
    v26 = v11[36];
    v27 = &v8[v26];
    v28 = &v9[v26];
    v29 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v29;
    v8[v11[37]] = v9[v11[37]];
    v8[v11[38]] = v9[v11[38]];
    v30 = v11[39];
    v31 = &v8[v30];
    v32 = &v9[v30];
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
    *((_DWORD *)v31 + 4) = *((_DWORD *)v32 + 4);
    v33 = *((_QWORD *)v32 + 4);
    *((_QWORD *)v31 + 3) = *((_QWORD *)v32 + 3);
    *((_QWORD *)v31 + 4) = v33;
    v34 = *((_QWORD *)v32 + 6);
    *((_QWORD *)v31 + 5) = *((_QWORD *)v32 + 5);
    *((_QWORD *)v31 + 6) = v34;
    *(_QWORD *)&v8[v11[40]] = *(_QWORD *)&v9[v11[40]];
    v8[v11[41]] = v9[v11[41]];
    v8[v11[42]] = v9[v11[42]];
    v8[v11[43]] = v9[v11[43]];
    *(_QWORD *)&v8[v11[44]] = *(_QWORD *)&v9[v11[44]];
    v8[v11[45]] = v9[v11[45]];
    v8[v11[46]] = v9[v11[46]];
    v8[v11[47]] = v9[v11[47]];
    *(_QWORD *)&v8[v11[48]] = *(_QWORD *)&v9[v11[48]];
    *(_QWORD *)&v8[v11[49]] = *(_QWORD *)&v9[v11[49]];
    v35 = a3[6];
    v36 = a3[7];
    v37 = (char *)v4 + v35;
    v38 = (char *)a2 + v35;
    *v37 = *v38;
    v39 = *((_QWORD *)v38 + 2);
    *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
    *((_QWORD *)v37 + 2) = v39;
    *(_QWORD *)((char *)v4 + v36) = *(_QWORD *)((char *)a2 + v36);
    v40 = a3[9];
    *(_QWORD *)((char *)v4 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
    *((_BYTE *)v4 + v40) = *((_BYTE *)a2 + v40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C0161DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = (int *)type metadata accessor for PrivatizedSignalSet(0);
  v6 = v4 + v5[24];
  v7 = sub_1C03036C4();
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v4 + v5[25];
  if (!__swift_getEnumTagSinglePayload(v8, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v8, v7);
  v9 = v4 + v5[26];
  if (!__swift_getEnumTagSinglePayload(v9, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v9, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1C0161F14(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  a1[2] = a2[2];
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = *(_OWORD *)((char *)a2 + v6 + 16);
  *(_OWORD *)v7 = *(_OWORD *)((char *)a2 + v6);
  *((_OWORD *)v7 + 1) = v9;
  *((_OWORD *)v7 + 2) = *(_OWORD *)((char *)a2 + v6 + 32);
  *((_QWORD *)v7 + 6) = *(_QWORD *)((char *)a2 + v6 + 48);
  *((_WORD *)v7 + 28) = *(_WORD *)((char *)a2 + v6 + 56);
  *((_OWORD *)v7 + 4) = *(_OWORD *)((char *)a2 + v6 + 64);
  *((_DWORD *)v7 + 20) = *(_DWORD *)((char *)a2 + v6 + 80);
  *(_OWORD *)(v7 + 88) = *(_OWORD *)((char *)a2 + v6 + 88);
  *((_QWORD *)v7 + 13) = *(_QWORD *)((char *)a2 + v6 + 104);
  v10 = (int *)type metadata accessor for PrivatizedSignalSet(0);
  v11 = v10[24];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = sub_1C03036C4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  v16 = v10[25];
  v17 = &v7[v16];
  v18 = &v8[v16];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v8[v16], 1, v14))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v17, v18, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v14);
  }
  v20 = v10[26];
  v21 = &v7[v20];
  v22 = &v8[v20];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v8[v20], 1, v14))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v21, v22, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v14);
  }
  v7[v10[27]] = v8[v10[27]];
  v7[v10[28]] = v8[v10[28]];
  v7[v10[29]] = v8[v10[29]];
  v7[v10[30]] = v8[v10[30]];
  v7[v10[31]] = v8[v10[31]];
  v7[v10[32]] = v8[v10[32]];
  v7[v10[33]] = v8[v10[33]];
  v7[v10[34]] = v8[v10[34]];
  v7[v10[35]] = v8[v10[35]];
  v24 = v10[36];
  v25 = &v7[v24];
  v26 = &v8[v24];
  v27 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = v27;
  v7[v10[37]] = v8[v10[37]];
  v7[v10[38]] = v8[v10[38]];
  v28 = v10[39];
  v29 = &v7[v28];
  v30 = &v8[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
  *((_DWORD *)v29 + 4) = *((_DWORD *)v30 + 4);
  v31 = *((_QWORD *)v30 + 4);
  *((_QWORD *)v29 + 3) = *((_QWORD *)v30 + 3);
  *((_QWORD *)v29 + 4) = v31;
  v32 = *((_QWORD *)v30 + 6);
  *((_QWORD *)v29 + 5) = *((_QWORD *)v30 + 5);
  *((_QWORD *)v29 + 6) = v32;
  *(_QWORD *)&v7[v10[40]] = *(_QWORD *)&v8[v10[40]];
  v7[v10[41]] = v8[v10[41]];
  v7[v10[42]] = v8[v10[42]];
  v7[v10[43]] = v8[v10[43]];
  *(_QWORD *)&v7[v10[44]] = *(_QWORD *)&v8[v10[44]];
  v7[v10[45]] = v8[v10[45]];
  v7[v10[46]] = v8[v10[46]];
  v7[v10[47]] = v8[v10[47]];
  *(_QWORD *)&v7[v10[48]] = *(_QWORD *)&v8[v10[48]];
  *(_QWORD *)&v7[v10[49]] = *(_QWORD *)&v8[v10[49]];
  v33 = a3[6];
  v34 = a3[7];
  v35 = (char *)a1 + v33;
  v36 = (char *)a2 + v33;
  *v35 = *v36;
  v37 = *((_QWORD *)v36 + 2);
  *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
  *((_QWORD *)v35 + 2) = v37;
  *(_QWORD *)((char *)a1 + v34) = *(_QWORD *)((char *)a2 + v34);
  v38 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *((_BYTE *)a1 + v38) = *((_BYTE *)a2 + v38);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1C01622EC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int EnumTagSinglePayload;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *v7 = *((_BYTE *)a2 + v6);
  *((_QWORD *)v7 + 1) = *(_QWORD *)((char *)a2 + v6 + 8);
  *((_QWORD *)v7 + 2) = *(_QWORD *)((char *)a2 + v6 + 16);
  *((_QWORD *)v7 + 3) = *(_QWORD *)((char *)a2 + v6 + 24);
  *((_QWORD *)v7 + 4) = *(_QWORD *)((char *)a2 + v6 + 32);
  *((_QWORD *)v7 + 5) = *(_QWORD *)((char *)a2 + v6 + 40);
  v7[48] = *((_BYTE *)a2 + v6 + 48);
  v7[49] = *((_BYTE *)a2 + v6 + 49);
  v7[50] = *((_BYTE *)a2 + v6 + 50);
  v7[51] = *((_BYTE *)a2 + v6 + 51);
  v7[52] = *((_BYTE *)a2 + v6 + 52);
  v7[53] = *((_BYTE *)a2 + v6 + 53);
  v7[54] = *((_BYTE *)a2 + v6 + 54);
  v7[55] = *((_BYTE *)a2 + v6 + 55);
  v7[56] = *((_BYTE *)a2 + v6 + 56);
  v7[57] = *((_BYTE *)a2 + v6 + 57);
  *((_QWORD *)v7 + 8) = *(_QWORD *)((char *)a2 + v6 + 64);
  *((_QWORD *)v7 + 9) = *(_QWORD *)((char *)a2 + v6 + 72);
  v7[80] = *((_BYTE *)a2 + v6 + 80);
  v7[81] = *((_BYTE *)a2 + v6 + 81);
  v7[82] = *((_BYTE *)a2 + v6 + 82);
  v7[83] = *((_BYTE *)a2 + v6 + 83);
  *((_QWORD *)v7 + 11) = *(_QWORD *)((char *)a2 + v6 + 88);
  *((_QWORD *)v7 + 12) = *(_QWORD *)((char *)a2 + v6 + 96);
  *((_QWORD *)v7 + 13) = *(_QWORD *)((char *)a2 + v6 + 104);
  v9 = (int *)type metadata accessor for PrivatizedSignalSet(0);
  v10 = v9[24];
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_1C03036C4();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v16 = *(_QWORD *)(v13 - 8);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v13);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v11, v12, v13);
LABEL_7:
  v18 = v9[25];
  v19 = &v7[v18];
  v20 = &v8[v18];
  v21 = __swift_getEnumTagSinglePayload((uint64_t)&v7[v18], 1, v13);
  v22 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v13);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v19, v20, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v23 = *(_QWORD *)(v13 - 8);
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v13);
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v19, v20, v13);
LABEL_13:
  v25 = v9[26];
  v26 = &v7[v25];
  v27 = &v8[v25];
  v28 = __swift_getEnumTagSinglePayload((uint64_t)&v7[v25], 1, v13);
  v29 = __swift_getEnumTagSinglePayload((uint64_t)v27, 1, v13);
  if (!v28)
  {
    v30 = *(_QWORD *)(v13 - 8);
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 24))(v26, v27, v13);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v26, v13);
    goto LABEL_18;
  }
  if (v29)
  {
LABEL_18:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v26, v27, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v13);
LABEL_19:
  v7[v9[27]] = v8[v9[27]];
  v7[v9[28]] = v8[v9[28]];
  v7[v9[29]] = v8[v9[29]];
  v7[v9[30]] = v8[v9[30]];
  v7[v9[31]] = v8[v9[31]];
  v7[v9[32]] = v8[v9[32]];
  v7[v9[33]] = v8[v9[33]];
  v7[v9[34]] = v8[v9[34]];
  v7[v9[35]] = v8[v9[35]];
  v32 = v9[36];
  v33 = &v7[v32];
  v34 = &v8[v32];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v9[37]] = v8[v9[37]];
  v7[v9[38]] = v8[v9[38]];
  v35 = v9[39];
  v36 = &v7[v35];
  v37 = &v8[v35];
  *(_QWORD *)v36 = *(_QWORD *)&v8[v35];
  v36[8] = v8[v35 + 8];
  v36[9] = v8[v35 + 9];
  v36[10] = v8[v35 + 10];
  v36[11] = v8[v35 + 11];
  v36[12] = v8[v35 + 12];
  v36[13] = v8[v35 + 13];
  v36[14] = v8[v35 + 14];
  v36[15] = v8[v35 + 15];
  v36[16] = v8[v35 + 16];
  v36[17] = v8[v35 + 17];
  v36[18] = v8[v35 + 18];
  v36[19] = v8[v35 + 19];
  *((_QWORD *)v36 + 3) = *(_QWORD *)&v8[v35 + 24];
  *((_QWORD *)v36 + 4) = *(_QWORD *)&v8[v35 + 32];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v36 + 5) = *((_QWORD *)v37 + 5);
  *((_QWORD *)v36 + 6) = *((_QWORD *)v37 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v9[40]] = *(_QWORD *)&v8[v9[40]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v9[41]] = v8[v9[41]];
  v7[v9[42]] = v8[v9[42]];
  v7[v9[43]] = v8[v9[43]];
  *(_QWORD *)&v7[v9[44]] = *(_QWORD *)&v8[v9[44]];
  v7[v9[45]] = v8[v9[45]];
  v7[v9[46]] = v8[v9[46]];
  v7[v9[47]] = v8[v9[47]];
  *(_QWORD *)&v7[v9[48]] = *(_QWORD *)&v8[v9[48]];
  *(_QWORD *)&v7[v9[49]] = *(_QWORD *)&v8[v9[49]];
  swift_retain();
  swift_release();
  v38 = a3[6];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  *v39 = *v40;
  *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
  *((_QWORD *)v39 + 2) = *((_QWORD *)v40 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

uint64_t sub_1C01628E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  int *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = *(_OWORD *)(a2 + v6 + 16);
  *(_OWORD *)v7 = *(_OWORD *)(a2 + v6);
  *(_OWORD *)(v7 + 16) = v9;
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a2 + v6 + 32);
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(a2 + v6 + 48);
  *(_WORD *)(v7 + 56) = *(_WORD *)(a2 + v6 + 56);
  *(_OWORD *)(v7 + 64) = *(_OWORD *)(a2 + v6 + 64);
  *(_DWORD *)(v7 + 80) = *(_DWORD *)(a2 + v6 + 80);
  *(_OWORD *)(v7 + 88) = *(_OWORD *)(a2 + v6 + 88);
  *(_QWORD *)(v7 + 104) = *(_QWORD *)(a2 + v6 + 104);
  v10 = (int *)type metadata accessor for PrivatizedSignalSet(0);
  v11 = v10[24];
  v12 = (void *)(v7 + v11);
  v13 = (const void *)(v8 + v11);
  v14 = sub_1C03036C4();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  v16 = v10[25];
  v17 = (void *)(v7 + v16);
  v18 = (const void *)(v8 + v16);
  if (__swift_getEnumTagSinglePayload(v8 + v16, 1, v14))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v17, v18, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v14);
  }
  v20 = v10[26];
  v21 = (void *)(v7 + v20);
  v22 = (const void *)(v8 + v20);
  if (__swift_getEnumTagSinglePayload(v8 + v20, 1, v14))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v21, v22, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v14);
  }
  *(_BYTE *)(v7 + v10[27]) = *(_BYTE *)(v8 + v10[27]);
  *(_BYTE *)(v7 + v10[28]) = *(_BYTE *)(v8 + v10[28]);
  *(_BYTE *)(v7 + v10[29]) = *(_BYTE *)(v8 + v10[29]);
  *(_BYTE *)(v7 + v10[30]) = *(_BYTE *)(v8 + v10[30]);
  *(_BYTE *)(v7 + v10[31]) = *(_BYTE *)(v8 + v10[31]);
  *(_BYTE *)(v7 + v10[32]) = *(_BYTE *)(v8 + v10[32]);
  *(_BYTE *)(v7 + v10[33]) = *(_BYTE *)(v8 + v10[33]);
  *(_BYTE *)(v7 + v10[34]) = *(_BYTE *)(v8 + v10[34]);
  *(_BYTE *)(v7 + v10[35]) = *(_BYTE *)(v8 + v10[35]);
  *(_OWORD *)(v7 + v10[36]) = *(_OWORD *)(v8 + v10[36]);
  *(_BYTE *)(v7 + v10[37]) = *(_BYTE *)(v8 + v10[37]);
  *(_BYTE *)(v7 + v10[38]) = *(_BYTE *)(v8 + v10[38]);
  v24 = v10[39];
  v25 = v7 + v24;
  v26 = v8 + v24;
  v27 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v27;
  *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
  *(_QWORD *)(v25 + 48) = *(_QWORD *)(v26 + 48);
  *(_QWORD *)(v7 + v10[40]) = *(_QWORD *)(v8 + v10[40]);
  *(_BYTE *)(v7 + v10[41]) = *(_BYTE *)(v8 + v10[41]);
  *(_BYTE *)(v7 + v10[42]) = *(_BYTE *)(v8 + v10[42]);
  *(_BYTE *)(v7 + v10[43]) = *(_BYTE *)(v8 + v10[43]);
  *(_QWORD *)(v7 + v10[44]) = *(_QWORD *)(v8 + v10[44]);
  *(_BYTE *)(v7 + v10[45]) = *(_BYTE *)(v8 + v10[45]);
  *(_BYTE *)(v7 + v10[46]) = *(_BYTE *)(v8 + v10[46]);
  *(_BYTE *)(v7 + v10[47]) = *(_BYTE *)(v8 + v10[47]);
  *(_QWORD *)(v7 + v10[48]) = *(_QWORD *)(v8 + v10[48]);
  *(_QWORD *)(v7 + v10[49]) = *(_QWORD *)(v8 + v10[49]);
  v28 = a3[6];
  v29 = a3[7];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(v31 + 16);
  *(_QWORD *)(a1 + v29) = *(_QWORD *)(a2 + v29);
  v32 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  return a1;
}

_QWORD *sub_1C0162C54(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  *v8 = *((_BYTE *)a2 + v7);
  *(_OWORD *)(v8 + 8) = *(_OWORD *)((char *)a2 + v7 + 8);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)((char *)a2 + v7 + 24);
  *((_QWORD *)v8 + 5) = *(_QWORD *)((char *)a2 + v7 + 40);
  v8[48] = *((_BYTE *)a2 + v7 + 48);
  v8[49] = *((_BYTE *)a2 + v7 + 49);
  v8[50] = *((_BYTE *)a2 + v7 + 50);
  v8[51] = *((_BYTE *)a2 + v7 + 51);
  v8[52] = *((_BYTE *)a2 + v7 + 52);
  v8[53] = *((_BYTE *)a2 + v7 + 53);
  v8[54] = *((_BYTE *)a2 + v7 + 54);
  v8[55] = *((_BYTE *)a2 + v7 + 55);
  v8[56] = *((_BYTE *)a2 + v7 + 56);
  v8[57] = *((_BYTE *)a2 + v7 + 57);
  *((_OWORD *)v8 + 4) = *(_OWORD *)((char *)a2 + v7 + 64);
  v8[80] = *((_BYTE *)a2 + v7 + 80);
  v8[81] = *((_BYTE *)a2 + v7 + 81);
  v8[82] = *((_BYTE *)a2 + v7 + 82);
  v8[83] = *((_BYTE *)a2 + v7 + 83);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)((char *)a2 + v7 + 88);
  *((_QWORD *)v8 + 13) = *(_QWORD *)((char *)a2 + v7 + 104);
  v10 = (int *)type metadata accessor for PrivatizedSignalSet(0);
  v11 = v10[24];
  v12 = &v8[v11];
  v13 = &v9[v11];
  v14 = sub_1C03036C4();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (EnumTagSinglePayload)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v17 = *(_QWORD *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v12, v13, v14);
LABEL_7:
  v19 = v10[25];
  v20 = &v8[v19];
  v21 = &v9[v19];
  v22 = __swift_getEnumTagSinglePayload((uint64_t)&v8[v19], 1, v14);
  v23 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v14);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v20, v21, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v24 = *(_QWORD *)(v14 - 8);
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v20, v14);
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v20, v21, v14);
LABEL_13:
  v26 = v10[26];
  v27 = &v8[v26];
  v28 = &v9[v26];
  v29 = __swift_getEnumTagSinglePayload((uint64_t)&v8[v26], 1, v14);
  v30 = __swift_getEnumTagSinglePayload((uint64_t)v28, 1, v14);
  if (!v29)
  {
    v31 = *(_QWORD *)(v14 - 8);
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v27, v28, v14);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v14);
    goto LABEL_18;
  }
  if (v30)
  {
LABEL_18:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8810);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v27, v28, v14);
  __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v14);
LABEL_19:
  v8[v10[27]] = v9[v10[27]];
  v8[v10[28]] = v9[v10[28]];
  v8[v10[29]] = v9[v10[29]];
  v8[v10[30]] = v9[v10[30]];
  v8[v10[31]] = v9[v10[31]];
  v8[v10[32]] = v9[v10[32]];
  v8[v10[33]] = v9[v10[33]];
  v8[v10[34]] = v9[v10[34]];
  v8[v10[35]] = v9[v10[35]];
  v33 = v10[36];
  v34 = &v8[v33];
  v35 = &v9[v33];
  v37 = *(_QWORD *)v35;
  v36 = *((_QWORD *)v35 + 1);
  *(_QWORD *)v34 = v37;
  *((_QWORD *)v34 + 1) = v36;
  swift_bridgeObjectRelease();
  v8[v10[37]] = v9[v10[37]];
  v8[v10[38]] = v9[v10[38]];
  v38 = v10[39];
  v39 = &v8[v38];
  v40 = &v9[v38];
  *(_QWORD *)v39 = *(_QWORD *)&v9[v38];
  v39[8] = v9[v38 + 8];
  v39[9] = v9[v38 + 9];
  v39[10] = v9[v38 + 10];
  v39[11] = v9[v38 + 11];
  v39[12] = v9[v38 + 12];
  v39[13] = v9[v38 + 13];
  v39[14] = v9[v38 + 14];
  v39[15] = v9[v38 + 15];
  v39[16] = v9[v38 + 16];
  v39[17] = v9[v38 + 17];
  v39[18] = v9[v38 + 18];
  v39[19] = v9[v38 + 19];
  v41 = *(_QWORD *)&v9[v38 + 32];
  *((_QWORD *)v39 + 3) = *(_QWORD *)&v9[v38 + 24];
  *((_QWORD *)v39 + 4) = v41;
  swift_bridgeObjectRelease();
  v42 = *((_QWORD *)v40 + 6);
  *((_QWORD *)v39 + 5) = *((_QWORD *)v40 + 5);
  *((_QWORD *)v39 + 6) = v42;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v8[v10[40]] = *(_QWORD *)&v9[v10[40]];
  swift_bridgeObjectRelease();
  v8[v10[41]] = v9[v10[41]];
  v8[v10[42]] = v9[v10[42]];
  v8[v10[43]] = v9[v10[43]];
  *(_QWORD *)&v8[v10[44]] = *(_QWORD *)&v9[v10[44]];
  v8[v10[45]] = v9[v10[45]];
  v8[v10[46]] = v9[v10[46]];
  v8[v10[47]] = v9[v10[47]];
  *(_QWORD *)&v8[v10[48]] = *(_QWORD *)&v9[v10[48]];
  *(_QWORD *)&v8[v10[49]] = *(_QWORD *)&v9[v10[49]];
  swift_release();
  v43 = a3[6];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  *v44 = *v45;
  *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
  *((_QWORD *)v44 + 2) = *((_QWORD *)v45 + 2);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  v46 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *((_BYTE *)a1 + v46) = *((_BYTE *)a2 + v46);
  return a1;
}

uint64_t sub_1C01631C0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C01631CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_33_15(*(_QWORD *)(a1 + 8));
    OUTLINED_FUNCTION_37_0();
  }
  else
  {
    v6 = type metadata accessor for PrivatizedSignalSet(0);
    OUTLINED_FUNCTION_46(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t sub_1C0163224()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0163230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_73_0();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    OUTLINED_FUNCTION_37_0();
  }
  else
  {
    v4 = v2;
    v5 = type metadata accessor for PrivatizedSignalSet(0);
    OUTLINED_FUNCTION_49_3(v1 + *(int *)(v4 + 20), v0, v0, v5);
  }
}

uint64_t sub_1C0163280()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PrivatizedSignalSet(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactResolverRunTimeData.CodingKeys()
{
  return &type metadata for ContactResolverRunTimeData.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ContactResolutionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C0163378 + 4 * byte_1C030F7D6[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C01633AC + 4 * byte_1C030F7D1[v4]))();
}

uint64_t sub_1C01633AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C01633B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C01633BCLL);
  return result;
}

uint64_t sub_1C01633C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C01633D0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C01633D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C01633DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContactResolutionType()
{
  return &type metadata for ContactResolutionType;
}

_QWORD *sub_1C01633F8(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  const void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  const void *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  const void *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  char *__dst;
  void *__dstb;
  char *__dsta;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v7 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v7;
    v8 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v8;
    v9 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v9;
    v10 = a2[10];
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v10;
    v11 = a2[12];
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = v11;
    v12 = a2[14];
    *(_QWORD *)(a1 + 104) = a2[13];
    *(_QWORD *)(a1 + 112) = v12;
    v13 = a2[16];
    *(_QWORD *)(a1 + 120) = a2[15];
    *(_QWORD *)(a1 + 128) = v13;
    v14 = a2[18];
    *(_QWORD *)(a1 + 136) = a2[17];
    *(_QWORD *)(a1 + 144) = v14;
    v15 = a2[20];
    *(_QWORD *)(a1 + 152) = a2[19];
    *(_QWORD *)(a1 + 160) = v15;
    v16 = a2[22];
    *(_QWORD *)(a1 + 168) = a2[21];
    *(_QWORD *)(a1 + 176) = v16;
    v17 = a2[24];
    *(_QWORD *)(a1 + 184) = a2[23];
    *(_QWORD *)(a1 + 192) = v17;
    v18 = a2[26];
    *(_QWORD *)(a1 + 200) = a2[25];
    *(_QWORD *)(a1 + 208) = v18;
    *(_QWORD *)(a1 + 216) = a2[27];
    v19 = (int *)type metadata accessor for Contact();
    v20 = v19[19];
    __dst = (char *)v4 + v20;
    v21 = (char *)a2 + v20;
    v22 = sub_1C0301954();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
      memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(__dst, v21, v22);
      __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v22);
    }
    *(_QWORD *)((char *)v4 + v19[20]) = *(uint64_t *)((char *)a2 + v19[20]);
    *((_BYTE *)v4 + v19[21]) = *((_BYTE *)a2 + v19[21]);
    v25 = v19[22];
    v26 = (_QWORD *)((char *)v4 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    __dstb = (void *)v27[1];
    *v26 = *v27;
    v26[1] = __dstb;
    *((_BYTE *)v4 + v19[23]) = *((_BYTE *)a2 + v19[23]);
    v28 = v19[24];
    v29 = (_QWORD *)((char *)v4 + v28);
    v30 = (uint64_t *)((char *)a2 + v28);
    v89 = v30[1];
    *v29 = *v30;
    v29[1] = v89;
    v31 = a3[5];
    v32 = (char *)v4 + v31;
    v33 = (uint64_t)a2 + v31;
    *(_OWORD *)v32 = *(_OWORD *)((char *)a2 + v31);
    *((_QWORD *)v32 + 2) = *(uint64_t *)((char *)a2 + v31 + 16);
    v32[24] = *((_BYTE *)a2 + v31 + 24);
    v34 = *(uint64_t *)((char *)a2 + v31 + 40);
    *((_QWORD *)v32 + 4) = *(uint64_t *)((char *)a2 + v31 + 32);
    *((_QWORD *)v32 + 5) = v34;
    v35 = *(uint64_t *)((char *)a2 + v31 + 56);
    *((_QWORD *)v32 + 6) = *(uint64_t *)((char *)a2 + v31 + 48);
    *((_QWORD *)v32 + 7) = v35;
    v36 = *(uint64_t *)((char *)a2 + v31 + 72);
    *((_QWORD *)v32 + 8) = *(uint64_t *)((char *)a2 + v31 + 64);
    *((_QWORD *)v32 + 9) = v36;
    v37 = *(uint64_t *)((char *)a2 + v31 + 88);
    *((_QWORD *)v32 + 10) = *(uint64_t *)((char *)a2 + v31 + 80);
    *((_QWORD *)v32 + 11) = v37;
    v38 = *(uint64_t *)((char *)a2 + v31 + 104);
    *((_QWORD *)v32 + 12) = *(uint64_t *)((char *)a2 + v31 + 96);
    *((_QWORD *)v32 + 13) = v38;
    v39 = *(uint64_t *)((char *)a2 + v31 + 120);
    *((_QWORD *)v32 + 14) = *(uint64_t *)((char *)a2 + v31 + 112);
    *((_QWORD *)v32 + 15) = v39;
    v40 = *(uint64_t *)((char *)a2 + v31 + 136);
    *((_QWORD *)v32 + 16) = *(uint64_t *)((char *)a2 + v31 + 128);
    *((_QWORD *)v32 + 17) = v40;
    v41 = *(uint64_t *)((char *)a2 + v31 + 152);
    *((_QWORD *)v32 + 18) = *(uint64_t *)((char *)a2 + v31 + 144);
    *((_QWORD *)v32 + 19) = v41;
    v42 = *(uint64_t *)((char *)a2 + v31 + 168);
    *((_QWORD *)v32 + 20) = *(uint64_t *)((char *)a2 + v31 + 160);
    *((_QWORD *)v32 + 21) = v42;
    v88 = *(uint64_t *)((char *)a2 + v31 + 192);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v88)
    {
      v43 = *(_QWORD *)(v33 + 184);
      *((_QWORD *)v32 + 22) = *(_QWORD *)(v33 + 176);
      *((_QWORD *)v32 + 23) = v43;
      *((_QWORD *)v32 + 24) = v88;
      swift_retain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)v32 + 11) = *(_OWORD *)(v33 + 176);
      *((_QWORD *)v32 + 24) = *(_QWORD *)(v33 + 192);
    }
    v44 = *(_QWORD *)(v33 + 216);
    if (v44)
    {
      v32[200] = *(_BYTE *)(v33 + 200);
      *((_QWORD *)v32 + 26) = *(_QWORD *)(v33 + 208);
      *((_QWORD *)v32 + 27) = v44;
      v45 = *(_QWORD *)(v33 + 232);
      *((_QWORD *)v32 + 28) = *(_QWORD *)(v33 + 224);
      *((_QWORD *)v32 + 29) = v45;
      *((_QWORD *)v32 + 30) = *(_QWORD *)(v33 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v46 = *(_OWORD *)(v33 + 216);
      *(_OWORD *)(v32 + 200) = *(_OWORD *)(v33 + 200);
      *(_OWORD *)(v32 + 216) = v46;
      *(_OWORD *)(v32 + 232) = *(_OWORD *)(v33 + 232);
    }
    *((_QWORD *)v32 + 31) = *(_QWORD *)(v33 + 248);
    v32[256] = *(_BYTE *)(v33 + 256);
    v47 = *(_QWORD *)(v33 + 272);
    *((_QWORD *)v32 + 33) = *(_QWORD *)(v33 + 264);
    *((_QWORD *)v32 + 34) = v47;
    v48 = *(_OWORD *)(v33 + 296);
    *(_OWORD *)(v32 + 280) = *(_OWORD *)(v33 + 280);
    *(_OWORD *)(v32 + 296) = v48;
    *(_OWORD *)(v32 + 312) = *(_OWORD *)(v33 + 312);
    *((_QWORD *)v32 + 41) = *(_QWORD *)(v33 + 328);
    *((_DWORD *)v32 + 84) = *(_DWORD *)(v33 + 336);
    v32[340] = *(_BYTE *)(v33 + 340);
    v49 = *(_QWORD *)(v33 + 352);
    *((_QWORD *)v32 + 43) = *(_QWORD *)(v33 + 344);
    *((_QWORD *)v32 + 44) = v49;
    *((_DWORD *)v32 + 90) = *(_DWORD *)(v33 + 360);
    *((_OWORD *)v32 + 23) = *(_OWORD *)(v33 + 368);
    *((_QWORD *)v32 + 48) = *(_QWORD *)(v33 + 384);
    v50 = (int *)type metadata accessor for ContactResolver.SignalSet(0);
    v51 = v50[30];
    __dsta = &v32[v51];
    v52 = (const void *)(v33 + v51);
    v53 = sub_1C0303550();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53))
    {
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BAAE8);
      memcpy(__dsta, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(__dsta, v52, v53);
      __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v53);
    }
    v55 = v50[31];
    v56 = &v32[v55];
    v57 = (const void *)(v33 + v55);
    if (__swift_getEnumTagSinglePayload(v33 + v55, 1, v53))
    {
      v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BAAE8);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v56, v57, v53);
      __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, v53);
    }
    v59 = v50[32];
    v60 = &v32[v59];
    v61 = (const void *)(v33 + v59);
    if (__swift_getEnumTagSinglePayload(v33 + v59, 1, v53))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BAAE8);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v60, v61, v53);
      __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v53);
    }
    v63 = v50[33];
    v64 = &v32[v63];
    v65 = v33 + v63;
    *(_QWORD *)v64 = *(_QWORD *)v65;
    *((_QWORD *)v64 + 1) = *(_QWORD *)(v65 + 8);
    *((_DWORD *)v64 + 4) = *(_DWORD *)(v65 + 16);
    v66 = *(_QWORD *)(v65 + 32);
    *((_QWORD *)v64 + 3) = *(_QWORD *)(v65 + 24);
    *((_QWORD *)v64 + 4) = v66;
    v67 = *(_QWORD *)(v65 + 48);
    *((_QWORD *)v64 + 5) = *(_QWORD *)(v65 + 40);
    *((_QWORD *)v64 + 6) = v67;
    v32[v50[34]] = *(_BYTE *)(v33 + v50[34]);
    v32[v50[35]] = *(_BYTE *)(v33 + v50[35]);
    v32[v50[36]] = *(_BYTE *)(v33 + v50[36]);
    v32[v50[37]] = *(_BYTE *)(v33 + v50[37]);
    v32[v50[38]] = *(_BYTE *)(v33 + v50[38]);
    v32[v50[39]] = *(_BYTE *)(v33 + v50[39]);
    v32[v50[40]] = *(_BYTE *)(v33 + v50[40]);
    v32[v50[41]] = *(_BYTE *)(v33 + v50[41]);
    v68 = v50[42];
    v69 = &v32[v68];
    v70 = v33 + v68;
    *(_QWORD *)v69 = *(_QWORD *)v70;
    *((_WORD *)v69 + 4) = *(_WORD *)(v70 + 8);
    v71 = v50[43];
    v72 = &v32[v71];
    v73 = v33 + v71;
    *(_QWORD *)v72 = *(_QWORD *)v73;
    v72[8] = *(_BYTE *)(v73 + 8);
    v74 = *(_QWORD *)(v73 + 24);
    *((_QWORD *)v72 + 2) = *(_QWORD *)(v73 + 16);
    *((_QWORD *)v72 + 3) = v74;
    v32[v50[44]] = *(_BYTE *)(v33 + v50[44]);
    v32[v50[45]] = *(_BYTE *)(v33 + v50[45]);
    v32[v50[46]] = *(_BYTE *)(v33 + v50[46]);
    v32[v50[47]] = *(_BYTE *)(v33 + v50[47]);
    v32[v50[48]] = *(_BYTE *)(v33 + v50[48]);
    v75 = v50[49];
    v76 = &v32[v75];
    v77 = v33 + v75;
    *((_WORD *)v76 + 4) = *(_WORD *)(v77 + 8);
    *(_QWORD *)v76 = *(_QWORD *)v77;
    v78 = v50[50];
    v79 = &v32[v78];
    v80 = v33 + v78;
    *(_OWORD *)v79 = *(_OWORD *)v80;
    *((_QWORD *)v79 + 2) = *(_QWORD *)(v80 + 16);
    v32[v50[51]] = *(_BYTE *)(v33 + v50[51]);
    *(_QWORD *)&v32[v50[52]] = *(_QWORD *)(v33 + v50[52]);
    v32[v50[53]] = *(_BYTE *)(v33 + v50[53]);
    v32[v50[54]] = *(_BYTE *)(v33 + v50[54]);
    v32[v50[55]] = *(_BYTE *)(v33 + v50[55]);
    v32[v50[56]] = *(_BYTE *)(v33 + v50[56]);
    v32[v50[57]] = *(_BYTE *)(v33 + v50[57]);
    v32[v50[58]] = *(_BYTE *)(v33 + v50[58]);
    v32[v50[59]] = *(_BYTE *)(v33 + v50[59]);
    *(_QWORD *)&v32[v50[60]] = *(_QWORD *)(v33 + v50[60]);
    *(_QWORD *)&v32[v50[61]] = *(_QWORD *)(v33 + v50[61]);
    v81 = a3[6];
    v82 = a3[7];
    v83 = (char *)v4 + v81;
    v84 = (char *)a2 + v81;
    *v83 = *v84;
    v85 = *((_QWORD *)v84 + 2);
    *((_QWORD *)v83 + 1) = *((_QWORD *)v84 + 1);
    *((_QWORD *)v83 + 2) = v85;
    *(_QWORD *)((char *)v4 + v82) = *(uint64_t *)((char *)a2 + v82);
    v86 = a3[9];
    *(_QWORD *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *((_BYTE *)v4 + v86) = *((_BYTE *)a2 + v86);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C0163C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for Contact() + 76);
  v5 = sub_1C0301954();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 192))
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v6 + 216))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for ContactResolver.SignalSet(0);
  v8 = v6 + v7[30];
  v9 = sub_1C0303550();
  if (!__swift_getEnumTagSinglePayload(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v6 + v7[31];
  if (!__swift_getEnumTagSinglePayload(v10, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v10, v9);
  v11 = v6 + v7[32];
  if (!__swift_getEnumTagSinglePayload(v11, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v11, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0163EC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  const void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  const void *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v86;
  uint64_t v87;
  void *__dst;
  void *__dstb;
  void *__dsta;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v10;
  v11 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v11;
  v12 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v12;
  v13 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v13;
  v14 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v14;
  v15 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v15;
  v16 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v16;
  v17 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v17;
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  v18 = (int *)type metadata accessor for Contact();
  v19 = v18[19];
  __dst = (void *)(a1 + v19);
  v20 = (const void *)(a2 + v19);
  v21 = sub_1C0301954();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
    memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(__dst, v20, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v21);
  }
  *(_QWORD *)(a1 + v18[20]) = *(_QWORD *)(a2 + v18[20]);
  *(_BYTE *)(a1 + v18[21]) = *(_BYTE *)(a2 + v18[21]);
  v23 = v18[22];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  __dstb = (void *)v25[1];
  *v24 = *v25;
  v24[1] = __dstb;
  *(_BYTE *)(a1 + v18[23]) = *(_BYTE *)(a2 + v18[23]);
  v26 = v18[24];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  v87 = v28[1];
  *v27 = *v28;
  v27[1] = v87;
  v29 = a3[5];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_OWORD *)v30 = *(_OWORD *)(a2 + v29);
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(a2 + v29 + 16);
  *(_BYTE *)(v30 + 24) = *(_BYTE *)(a2 + v29 + 24);
  v32 = *(_QWORD *)(a2 + v29 + 40);
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(a2 + v29 + 32);
  *(_QWORD *)(v30 + 40) = v32;
  v33 = *(_QWORD *)(a2 + v29 + 56);
  *(_QWORD *)(v30 + 48) = *(_QWORD *)(a2 + v29 + 48);
  *(_QWORD *)(v30 + 56) = v33;
  v34 = *(_QWORD *)(a2 + v29 + 72);
  *(_QWORD *)(v30 + 64) = *(_QWORD *)(a2 + v29 + 64);
  *(_QWORD *)(v30 + 72) = v34;
  v35 = *(_QWORD *)(a2 + v29 + 88);
  *(_QWORD *)(v30 + 80) = *(_QWORD *)(a2 + v29 + 80);
  *(_QWORD *)(v30 + 88) = v35;
  v36 = *(_QWORD *)(a2 + v29 + 104);
  *(_QWORD *)(v30 + 96) = *(_QWORD *)(a2 + v29 + 96);
  *(_QWORD *)(v30 + 104) = v36;
  v37 = *(_QWORD *)(a2 + v29 + 120);
  *(_QWORD *)(v30 + 112) = *(_QWORD *)(a2 + v29 + 112);
  *(_QWORD *)(v30 + 120) = v37;
  v38 = *(_QWORD *)(a2 + v29 + 136);
  *(_QWORD *)(v30 + 128) = *(_QWORD *)(a2 + v29 + 128);
  *(_QWORD *)(v30 + 136) = v38;
  v39 = *(_QWORD *)(a2 + v29 + 152);
  *(_QWORD *)(v30 + 144) = *(_QWORD *)(a2 + v29 + 144);
  *(_QWORD *)(v30 + 152) = v39;
  v40 = *(_QWORD *)(a2 + v29 + 168);
  *(_QWORD *)(v30 + 160) = *(_QWORD *)(a2 + v29 + 160);
  *(_QWORD *)(v30 + 168) = v40;
  v86 = *(_QWORD *)(a2 + v29 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v86)
  {
    v41 = *(_QWORD *)(v31 + 184);
    *(_QWORD *)(v30 + 176) = *(_QWORD *)(v31 + 176);
    *(_QWORD *)(v30 + 184) = v41;
    *(_QWORD *)(v30 + 192) = v86;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v30 + 176) = *(_OWORD *)(v31 + 176);
    *(_QWORD *)(v30 + 192) = *(_QWORD *)(v31 + 192);
  }
  v42 = *(_QWORD *)(v31 + 216);
  if (v42)
  {
    *(_BYTE *)(v30 + 200) = *(_BYTE *)(v31 + 200);
    *(_QWORD *)(v30 + 208) = *(_QWORD *)(v31 + 208);
    *(_QWORD *)(v30 + 216) = v42;
    v43 = *(_QWORD *)(v31 + 232);
    *(_QWORD *)(v30 + 224) = *(_QWORD *)(v31 + 224);
    *(_QWORD *)(v30 + 232) = v43;
    *(_QWORD *)(v30 + 240) = *(_QWORD *)(v31 + 240);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v44 = *(_OWORD *)(v31 + 216);
    *(_OWORD *)(v30 + 200) = *(_OWORD *)(v31 + 200);
    *(_OWORD *)(v30 + 216) = v44;
    *(_OWORD *)(v30 + 232) = *(_OWORD *)(v31 + 232);
  }
  *(_QWORD *)(v30 + 248) = *(_QWORD *)(v31 + 248);
  *(_BYTE *)(v30 + 256) = *(_BYTE *)(v31 + 256);
  v45 = *(_QWORD *)(v31 + 272);
  *(_QWORD *)(v30 + 264) = *(_QWORD *)(v31 + 264);
  *(_QWORD *)(v30 + 272) = v45;
  v46 = *(_OWORD *)(v31 + 296);
  *(_OWORD *)(v30 + 280) = *(_OWORD *)(v31 + 280);
  *(_OWORD *)(v30 + 296) = v46;
  *(_OWORD *)(v30 + 312) = *(_OWORD *)(v31 + 312);
  *(_QWORD *)(v30 + 328) = *(_QWORD *)(v31 + 328);
  *(_DWORD *)(v30 + 336) = *(_DWORD *)(v31 + 336);
  *(_BYTE *)(v30 + 340) = *(_BYTE *)(v31 + 340);
  v47 = *(_QWORD *)(v31 + 352);
  *(_QWORD *)(v30 + 344) = *(_QWORD *)(v31 + 344);
  *(_QWORD *)(v30 + 352) = v47;
  *(_DWORD *)(v30 + 360) = *(_DWORD *)(v31 + 360);
  *(_OWORD *)(v30 + 368) = *(_OWORD *)(v31 + 368);
  *(_QWORD *)(v30 + 384) = *(_QWORD *)(v31 + 384);
  v48 = (int *)type metadata accessor for ContactResolver.SignalSet(0);
  v49 = v48[30];
  __dsta = (void *)(v30 + v49);
  v50 = (const void *)(v31 + v49);
  v51 = sub_1C0303550();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v51))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BAAE8);
    memcpy(__dsta, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(__dsta, v50, v51);
    __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v51);
  }
  v53 = v48[31];
  v54 = (void *)(v30 + v53);
  v55 = (const void *)(v31 + v53);
  if (__swift_getEnumTagSinglePayload(v31 + v53, 1, v51))
  {
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BAAE8);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v54, v55, v51);
    __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v51);
  }
  v57 = v48[32];
  v58 = (void *)(v30 + v57);
  v59 = (const void *)(v31 + v57);
  if (__swift_getEnumTagSinglePayload(v31 + v57, 1, v51))
  {
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BAAE8);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v58, v59, v51);
    __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v51);
  }
  v61 = v48[33];
  v62 = v30 + v61;
  v63 = v31 + v61;
  *(_QWORD *)v62 = *(_QWORD *)v63;
  *(_QWORD *)(v62 + 8) = *(_QWORD *)(v63 + 8);
  *(_DWORD *)(v62 + 16) = *(_DWORD *)(v63 + 16);
  v64 = *(_QWORD *)(v63 + 32);
  *(_QWORD *)(v62 + 24) = *(_QWORD *)(v63 + 24);
  *(_QWORD *)(v62 + 32) = v64;
  v65 = *(_QWORD *)(v63 + 48);
  *(_QWORD *)(v62 + 40) = *(_QWORD *)(v63 + 40);
  *(_QWORD *)(v62 + 48) = v65;
  *(_BYTE *)(v30 + v48[34]) = *(_BYTE *)(v31 + v48[34]);
  *(_BYTE *)(v30 + v48[35]) = *(_BYTE *)(v31 + v48[35]);
  *(_BYTE *)(v30 + v48[36]) = *(_BYTE *)(v31 + v48[36]);
  *(_BYTE *)(v30 + v48[37]) = *(_BYTE *)(v31 + v48[37]);
  *(_BYTE *)(v30 + v48[38]) = *(_BYTE *)(v31 + v48[38]);
  *(_BYTE *)(v30 + v48[39]) = *(_BYTE *)(v31 + v48[39]);
  *(_BYTE *)(v30 + v48[40]) = *(_BYTE *)(v31 + v48[40]);
  *(_BYTE *)(v30 + v48[41]) = *(_BYTE *)(v31 + v48[41]);
  v66 = v48[42];
  v67 = v30 + v66;
  v68 = v31 + v66;
  *(_QWORD *)v67 = *(_QWORD *)v68;
  *(_WORD *)(v67 + 8) = *(_WORD *)(v68 + 8);
  v69 = v48[43];
  v70 = v30 + v69;
  v71 = v31 + v69;
  *(_QWORD *)v70 = *(_QWORD *)v71;
  *(_BYTE *)(v70 + 8) = *(_BYTE *)(v71 + 8);
  v72 = *(_QWORD *)(v71 + 24);
  *(_QWORD *)(v70 + 16) = *(_QWORD *)(v71 + 16);
  *(_QWORD *)(v70 + 24) = v72;
  *(_BYTE *)(v30 + v48[44]) = *(_BYTE *)(v31 + v48[44]);
  *(_BYTE *)(v30 + v48[45]) = *(_BYTE *)(v31 + v48[45]);
  *(_BYTE *)(v30 + v48[46]) = *(_BYTE *)(v31 + v48[46]);
  *(_BYTE *)(v30 + v48[47]) = *(_BYTE *)(v31 + v48[47]);
  *(_BYTE *)(v30 + v48[48]) = *(_BYTE *)(v31 + v48[48]);
  v73 = v48[49];
  v74 = v30 + v73;
  v75 = v31 + v73;
  *(_WORD *)(v74 + 8) = *(_WORD *)(v75 + 8);
  *(_QWORD *)v74 = *(_QWORD *)v75;
  v76 = v48[50];
  v77 = v30 + v76;
  v78 = v31 + v76;
  *(_OWORD *)v77 = *(_OWORD *)v78;
  *(_QWORD *)(v77 + 16) = *(_QWORD *)(v78 + 16);
  *(_BYTE *)(v30 + v48[51]) = *(_BYTE *)(v31 + v48[51]);
  *(_QWORD *)(v30 + v48[52]) = *(_QWORD *)(v31 + v48[52]);
  *(_BYTE *)(v30 + v48[53]) = *(_BYTE *)(v31 + v48[53]);
  *(_BYTE *)(v30 + v48[54]) = *(_BYTE *)(v31 + v48[54]);
  *(_BYTE *)(v30 + v48[55]) = *(_BYTE *)(v31 + v48[55]);
  *(_BYTE *)(v30 + v48[56]) = *(_BYTE *)(v31 + v48[56]);
  *(_BYTE *)(v30 + v48[57]) = *(_BYTE *)(v31 + v48[57]);
  *(_BYTE *)(v30 + v48[58]) = *(_BYTE *)(v31 + v48[58]);
  *(_BYTE *)(v30 + v48[59]) = *(_BYTE *)(v31 + v48[59]);
  *(_QWORD *)(v30 + v48[60]) = *(_QWORD *)(v31 + v48[60]);
  *(_QWORD *)(v30 + v48[61]) = *(_QWORD *)(v31 + v48[61]);
  v79 = a3[6];
  v80 = a3[7];
  v81 = a1 + v79;
  v82 = a2 + v79;
  *(_BYTE *)v81 = *(_BYTE *)v82;
  v83 = *(_QWORD *)(v82 + 16);
  *(_QWORD *)(v81 + 8) = *(_QWORD *)(v82 + 8);
  *(_QWORD *)(v81 + 16) = v83;
  *(_QWORD *)(a1 + v80) = *(_QWORD *)(a2 + v80);
  v84 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v84) = *(_BYTE *)(a2 + v84);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C01646AC(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  _OWORD *v29;
  _OWORD *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  int *v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const void *v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const void *v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Contact();
  v7 = v6[19];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1C0301954();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
LABEL_7:
  *(_QWORD *)(a1 + v6[20]) = *(_QWORD *)(a2 + v6[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v6[21]) = *(_BYTE *)(a2 + v6[21]);
  v15 = v6[22];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v6[23]) = *(_BYTE *)(a2 + v6[23]);
  v18 = v6[24];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[5];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_QWORD *)v22 = *(_QWORD *)(a2 + v21);
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(a2 + v21 + 8);
  *(_QWORD *)(v22 + 16) = *(_QWORD *)(a2 + v21 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v22 + 24) = *(_BYTE *)(v23 + 24);
  *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
  *(_QWORD *)(v22 + 40) = *(_QWORD *)(v23 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v22 + 48) = *(_QWORD *)(v23 + 48);
  *(_QWORD *)(v22 + 56) = *(_QWORD *)(v23 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v22 + 64) = *(_QWORD *)(v23 + 64);
  *(_QWORD *)(v22 + 72) = *(_QWORD *)(v23 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v22 + 80) = *(_QWORD *)(v23 + 80);
  *(_QWORD *)(v22 + 88) = *(_QWORD *)(v23 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v22 + 96) = *(_QWORD *)(v23 + 96);
  *(_QWORD *)(v22 + 104) = *(_QWORD *)(v23 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v22 + 112) = *(_QWORD *)(v23 + 112);
  *(_QWORD *)(v22 + 120) = *(_QWORD *)(v23 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v22 + 128) = *(_QWORD *)(v23 + 128);
  *(_QWORD *)(v22 + 136) = *(_QWORD *)(v23 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v22 + 144) = *(_QWORD *)(v23 + 144);
  *(_QWORD *)(v22 + 152) = *(_QWORD *)(v23 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v22 + 160) = *(_QWORD *)(v23 + 160);
  *(_QWORD *)(v22 + 168) = *(_QWORD *)(v23 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = (_OWORD *)(v22 + 176);
  v25 = (_OWORD *)(v23 + 176);
  v26 = *(_QWORD *)(v23 + 192);
  if (*(_QWORD *)(v22 + 192))
  {
    if (v26)
    {
      *(_QWORD *)(v22 + 176) = *(_QWORD *)(v23 + 176);
      swift_retain();
      swift_release();
      *(_QWORD *)(v22 + 184) = *(_QWORD *)(v23 + 184);
      *(_QWORD *)(v22 + 192) = *(_QWORD *)(v23 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C011A248(v22 + 176);
      v27 = *(_QWORD *)(v23 + 192);
      *v24 = *v25;
      *(_QWORD *)(v22 + 192) = v27;
    }
  }
  else if (v26)
  {
    *(_QWORD *)(v22 + 176) = *(_QWORD *)(v23 + 176);
    *(_QWORD *)(v22 + 184) = *(_QWORD *)(v23 + 184);
    *(_QWORD *)(v22 + 192) = *(_QWORD *)(v23 + 192);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v28 = *v25;
    *(_QWORD *)(v22 + 192) = *(_QWORD *)(v23 + 192);
    *v24 = v28;
  }
  v29 = (_OWORD *)(v22 + 200);
  v30 = (_OWORD *)(v23 + 200);
  v31 = *(_QWORD *)(v23 + 216);
  if (*(_QWORD *)(v22 + 216))
  {
    if (v31)
    {
      *(_BYTE *)(v22 + 200) = *(_BYTE *)(v23 + 200);
      *(_QWORD *)(v22 + 208) = *(_QWORD *)(v23 + 208);
      *(_QWORD *)(v22 + 216) = *(_QWORD *)(v23 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 224) = *(_QWORD *)(v23 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 232) = *(_QWORD *)(v23 + 232);
      *(_QWORD *)(v22 + 240) = *(_QWORD *)(v23 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C011A27C(v22 + 200);
      v33 = *(_OWORD *)(v23 + 216);
      v32 = *(_OWORD *)(v23 + 232);
      *v29 = *v30;
      *(_OWORD *)(v22 + 216) = v33;
      *(_OWORD *)(v22 + 232) = v32;
    }
  }
  else if (v31)
  {
    *(_BYTE *)(v22 + 200) = *(_BYTE *)(v23 + 200);
    *(_QWORD *)(v22 + 208) = *(_QWORD *)(v23 + 208);
    *(_QWORD *)(v22 + 216) = *(_QWORD *)(v23 + 216);
    *(_QWORD *)(v22 + 224) = *(_QWORD *)(v23 + 224);
    *(_QWORD *)(v22 + 232) = *(_QWORD *)(v23 + 232);
    *(_QWORD *)(v22 + 240) = *(_QWORD *)(v23 + 240);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v34 = *v30;
    v35 = *(_OWORD *)(v23 + 232);
    *(_OWORD *)(v22 + 216) = *(_OWORD *)(v23 + 216);
    *(_OWORD *)(v22 + 232) = v35;
    *v29 = v34;
  }
  *(_QWORD *)(v22 + 248) = *(_QWORD *)(v23 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v22 + 256) = *(_BYTE *)(v23 + 256);
  *(_QWORD *)(v22 + 264) = *(_QWORD *)(v23 + 264);
  swift_retain();
  swift_release();
  *(_QWORD *)(v22 + 272) = *(_QWORD *)(v23 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v22 + 280) = *(_BYTE *)(v23 + 280);
  *(_QWORD *)(v22 + 288) = *(_QWORD *)(v23 + 288);
  *(_QWORD *)(v22 + 296) = *(_QWORD *)(v23 + 296);
  *(_QWORD *)(v22 + 304) = *(_QWORD *)(v23 + 304);
  *(_QWORD *)(v22 + 312) = *(_QWORD *)(v23 + 312);
  *(_QWORD *)(v22 + 320) = *(_QWORD *)(v23 + 320);
  *(_BYTE *)(v22 + 328) = *(_BYTE *)(v23 + 328);
  *(_BYTE *)(v22 + 329) = *(_BYTE *)(v23 + 329);
  *(_BYTE *)(v22 + 330) = *(_BYTE *)(v23 + 330);
  *(_BYTE *)(v22 + 331) = *(_BYTE *)(v23 + 331);
  *(_BYTE *)(v22 + 332) = *(_BYTE *)(v23 + 332);
  *(_BYTE *)(v22 + 333) = *(_BYTE *)(v23 + 333);
  *(_BYTE *)(v22 + 334) = *(_BYTE *)(v23 + 334);
  *(_BYTE *)(v22 + 335) = *(_BYTE *)(v23 + 335);
  *(_BYTE *)(v22 + 336) = *(_BYTE *)(v23 + 336);
  *(_BYTE *)(v22 + 337) = *(_BYTE *)(v23 + 337);
  *(_BYTE *)(v22 + 338) = *(_BYTE *)(v23 + 338);
  *(_BYTE *)(v22 + 339) = *(_BYTE *)(v23 + 339);
  *(_BYTE *)(v22 + 340) = *(_BYTE *)(v23 + 340);
  *(_QWORD *)(v22 + 344) = *(_QWORD *)(v23 + 344);
  *(_QWORD *)(v22 + 352) = *(_QWORD *)(v23 + 352);
  *(_BYTE *)(v22 + 360) = *(_BYTE *)(v23 + 360);
  *(_BYTE *)(v22 + 361) = *(_BYTE *)(v23 + 361);
  *(_BYTE *)(v22 + 362) = *(_BYTE *)(v23 + 362);
  *(_BYTE *)(v22 + 363) = *(_BYTE *)(v23 + 363);
  *(_QWORD *)(v22 + 368) = *(_QWORD *)(v23 + 368);
  *(_QWORD *)(v22 + 376) = *(_QWORD *)(v23 + 376);
  *(_QWORD *)(v22 + 384) = *(_QWORD *)(v23 + 384);
  v36 = (int *)type metadata accessor for ContactResolver.SignalSet(0);
  v37 = v36[30];
  v38 = (void *)(v22 + v37);
  v39 = (const void *)(v23 + v37);
  v40 = sub_1C0303550();
  v41 = __swift_getEnumTagSinglePayload((uint64_t)v38, 1, v40);
  v42 = __swift_getEnumTagSinglePayload((uint64_t)v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
      __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v40);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  v43 = *(_QWORD *)(v40 - 8);
  if (v42)
  {
    (*(void (**)(void *, uint64_t))(v43 + 8))(v38, v40);
LABEL_27:
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BAAE8);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(void *, const void *, uint64_t))(v43 + 24))(v38, v39, v40);
LABEL_28:
  v45 = v36[31];
  v46 = (void *)(v22 + v45);
  v47 = (const void *)(v23 + v45);
  v48 = __swift_getEnumTagSinglePayload(v22 + v45, 1, v40);
  v49 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v40);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v46, v47, v40);
      __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v40);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  v50 = *(_QWORD *)(v40 - 8);
  if (v49)
  {
    (*(void (**)(void *, uint64_t))(v50 + 8))(v46, v40);
LABEL_33:
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BAAE8);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(void *, const void *, uint64_t))(v50 + 24))(v46, v47, v40);
LABEL_34:
  v52 = v36[32];
  v53 = (void *)(v22 + v52);
  v54 = (const void *)(v23 + v52);
  v55 = __swift_getEnumTagSinglePayload(v22 + v52, 1, v40);
  v56 = __swift_getEnumTagSinglePayload((uint64_t)v54, 1, v40);
  if (!v55)
  {
    v57 = *(_QWORD *)(v40 - 8);
    if (!v56)
    {
      (*(void (**)(void *, const void *, uint64_t))(v57 + 24))(v53, v54, v40);
      goto LABEL_40;
    }
    (*(void (**)(void *, uint64_t))(v57 + 8))(v53, v40);
    goto LABEL_39;
  }
  if (v56)
  {
LABEL_39:
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BAAE8);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v53, v54, v40);
  __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v40);
LABEL_40:
  v59 = v36[33];
  v60 = v22 + v59;
  v61 = v23 + v59;
  *(_QWORD *)v60 = *(_QWORD *)(v23 + v59);
  *(_BYTE *)(v60 + 8) = *(_BYTE *)(v23 + v59 + 8);
  *(_BYTE *)(v60 + 9) = *(_BYTE *)(v23 + v59 + 9);
  *(_BYTE *)(v60 + 10) = *(_BYTE *)(v23 + v59 + 10);
  *(_BYTE *)(v60 + 11) = *(_BYTE *)(v23 + v59 + 11);
  *(_BYTE *)(v60 + 12) = *(_BYTE *)(v23 + v59 + 12);
  *(_BYTE *)(v60 + 13) = *(_BYTE *)(v23 + v59 + 13);
  *(_BYTE *)(v60 + 14) = *(_BYTE *)(v23 + v59 + 14);
  *(_BYTE *)(v60 + 15) = *(_BYTE *)(v23 + v59 + 15);
  *(_BYTE *)(v60 + 16) = *(_BYTE *)(v23 + v59 + 16);
  *(_BYTE *)(v60 + 17) = *(_BYTE *)(v23 + v59 + 17);
  *(_BYTE *)(v60 + 18) = *(_BYTE *)(v23 + v59 + 18);
  *(_BYTE *)(v60 + 19) = *(_BYTE *)(v23 + v59 + 19);
  *(_QWORD *)(v60 + 24) = *(_QWORD *)(v23 + v59 + 24);
  *(_QWORD *)(v60 + 32) = *(_QWORD *)(v23 + v59 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v60 + 40) = *(_QWORD *)(v61 + 40);
  *(_QWORD *)(v60 + 48) = *(_QWORD *)(v61 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v22 + v36[34]) = *(_BYTE *)(v23 + v36[34]);
  *(_BYTE *)(v22 + v36[35]) = *(_BYTE *)(v23 + v36[35]);
  *(_BYTE *)(v22 + v36[36]) = *(_BYTE *)(v23 + v36[36]);
  *(_BYTE *)(v22 + v36[37]) = *(_BYTE *)(v23 + v36[37]);
  *(_BYTE *)(v22 + v36[38]) = *(_BYTE *)(v23 + v36[38]);
  *(_BYTE *)(v22 + v36[39]) = *(_BYTE *)(v23 + v36[39]);
  *(_BYTE *)(v22 + v36[40]) = *(_BYTE *)(v23 + v36[40]);
  *(_BYTE *)(v22 + v36[41]) = *(_BYTE *)(v23 + v36[41]);
  v62 = v36[42];
  v63 = v22 + v62;
  v64 = v23 + v62;
  *(_QWORD *)v63 = *(_QWORD *)v64;
  *(_BYTE *)(v63 + 8) = *(_BYTE *)(v64 + 8);
  *(_BYTE *)(v63 + 9) = *(_BYTE *)(v64 + 9);
  v65 = v36[43];
  v66 = v22 + v65;
  v67 = v23 + v65;
  *(_QWORD *)v66 = *(_QWORD *)v67;
  *(_BYTE *)(v66 + 8) = *(_BYTE *)(v67 + 8);
  *(_QWORD *)(v66 + 16) = *(_QWORD *)(v67 + 16);
  *(_QWORD *)(v66 + 24) = *(_QWORD *)(v67 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v22 + v36[44]) = *(_BYTE *)(v23 + v36[44]);
  *(_BYTE *)(v22 + v36[45]) = *(_BYTE *)(v23 + v36[45]);
  *(_BYTE *)(v22 + v36[46]) = *(_BYTE *)(v23 + v36[46]);
  *(_BYTE *)(v22 + v36[47]) = *(_BYTE *)(v23 + v36[47]);
  *(_BYTE *)(v22 + v36[48]) = *(_BYTE *)(v23 + v36[48]);
  v68 = v36[49];
  v69 = v22 + v68;
  v70 = v23 + v68;
  *(_QWORD *)v69 = *(_QWORD *)v70;
  *(_BYTE *)(v69 + 8) = *(_BYTE *)(v70 + 8);
  *(_BYTE *)(v69 + 9) = *(_BYTE *)(v70 + 9);
  v71 = v36[50];
  v72 = v22 + v71;
  v73 = v23 + v71;
  *(_QWORD *)v72 = *(_QWORD *)v73;
  *(_BYTE *)(v72 + 8) = *(_BYTE *)(v73 + 8);
  *(_QWORD *)(v72 + 16) = *(_QWORD *)(v73 + 16);
  *(_BYTE *)(v22 + v36[51]) = *(_BYTE *)(v23 + v36[51]);
  *(_QWORD *)(v22 + v36[52]) = *(_QWORD *)(v23 + v36[52]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v22 + v36[53]) = *(_BYTE *)(v23 + v36[53]);
  *(_BYTE *)(v22 + v36[54]) = *(_BYTE *)(v23 + v36[54]);
  *(_BYTE *)(v22 + v36[55]) = *(_BYTE *)(v23 + v36[55]);
  *(_BYTE *)(v22 + v36[56]) = *(_BYTE *)(v23 + v36[56]);
  *(_BYTE *)(v22 + v36[57]) = *(_BYTE *)(v23 + v36[57]);
  *(_BYTE *)(v22 + v36[58]) = *(_BYTE *)(v23 + v36[58]);
  *(_BYTE *)(v22 + v36[59]) = *(_BYTE *)(v23 + v36[59]);
  *(_QWORD *)(v22 + v36[60]) = *(_QWORD *)(v23 + v36[60]);
  *(_QWORD *)(v22 + v36[61]) = *(_QWORD *)(v23 + v36[61]);
  swift_retain();
  swift_release();
  v74 = a3[6];
  v75 = a1 + v74;
  v76 = a2 + v74;
  *(_BYTE *)v75 = *(_BYTE *)v76;
  *(_QWORD *)(v75 + 8) = *(_QWORD *)(v76 + 8);
  *(_QWORD *)(v75 + 16) = *(_QWORD *)(v76 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1C016537C(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  v6 = (int *)type metadata accessor for Contact();
  v7 = v6[19];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1C0301954();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  *(_QWORD *)(a1 + v6[20]) = *(_QWORD *)(a2 + v6[20]);
  *(_BYTE *)(a1 + v6[21]) = *(_BYTE *)(a2 + v6[21]);
  *(_OWORD *)(a1 + v6[22]) = *(_OWORD *)(a2 + v6[22]);
  *(_BYTE *)(a1 + v6[23]) = *(_BYTE *)(a2 + v6[23]);
  *(_OWORD *)(a1 + v6[24]) = *(_OWORD *)(a2 + v6[24]);
  v12 = a3[5];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  memcpy((void *)(a1 + v12 + 8), (const void *)(a2 + v12 + 8), 0x108uLL);
  *(_QWORD *)(v13 + 272) = *(_QWORD *)(v14 + 272);
  v15 = *(_OWORD *)(v14 + 296);
  *(_OWORD *)(v13 + 280) = *(_OWORD *)(v14 + 280);
  *(_OWORD *)(v13 + 296) = v15;
  *(_OWORD *)(v13 + 312) = *(_OWORD *)(v14 + 312);
  *(_QWORD *)(v13 + 328) = *(_QWORD *)(v14 + 328);
  *(_DWORD *)(v13 + 336) = *(_DWORD *)(v14 + 336);
  *(_BYTE *)(v13 + 340) = *(_BYTE *)(v14 + 340);
  v16 = *(_QWORD *)(v14 + 352);
  *(_QWORD *)(v13 + 344) = *(_QWORD *)(v14 + 344);
  *(_QWORD *)(v13 + 352) = v16;
  *(_DWORD *)(v13 + 360) = *(_DWORD *)(v14 + 360);
  *(_OWORD *)(v13 + 368) = *(_OWORD *)(v14 + 368);
  *(_QWORD *)(v13 + 384) = *(_QWORD *)(v14 + 384);
  v17 = (int *)type metadata accessor for ContactResolver.SignalSet(0);
  v18 = v17[30];
  v19 = (void *)(v13 + v18);
  v20 = (const void *)(v14 + v18);
  v21 = sub_1C0303550();
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BAAE8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
  }
  v23 = v17[31];
  v24 = (void *)(v13 + v23);
  v25 = (const void *)(v14 + v23);
  if (__swift_getEnumTagSinglePayload(v14 + v23, 1, v21))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BAAE8);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v24, v25, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v21);
  }
  v27 = v17[32];
  v28 = (void *)(v13 + v27);
  v29 = (const void *)(v14 + v27);
  if (__swift_getEnumTagSinglePayload(v14 + v27, 1, v21))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BAAE8);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v28, v29, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v21);
  }
  v31 = v17[33];
  v32 = v13 + v31;
  v33 = v14 + v31;
  v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  *(_OWORD *)(v32 + 32) = *(_OWORD *)(v33 + 32);
  *(_QWORD *)(v32 + 48) = *(_QWORD *)(v33 + 48);
  *(_BYTE *)(v13 + v17[34]) = *(_BYTE *)(v14 + v17[34]);
  *(_BYTE *)(v13 + v17[35]) = *(_BYTE *)(v14 + v17[35]);
  *(_BYTE *)(v13 + v17[36]) = *(_BYTE *)(v14 + v17[36]);
  *(_BYTE *)(v13 + v17[37]) = *(_BYTE *)(v14 + v17[37]);
  *(_BYTE *)(v13 + v17[38]) = *(_BYTE *)(v14 + v17[38]);
  *(_BYTE *)(v13 + v17[39]) = *(_BYTE *)(v14 + v17[39]);
  *(_BYTE *)(v13 + v17[40]) = *(_BYTE *)(v14 + v17[40]);
  *(_BYTE *)(v13 + v17[41]) = *(_BYTE *)(v14 + v17[41]);
  v35 = v17[42];
  v36 = v13 + v35;
  v37 = v14 + v35;
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *(_WORD *)(v36 + 8) = *(_WORD *)(v37 + 8);
  v38 = v17[43];
  v39 = (_OWORD *)(v13 + v38);
  v40 = (_OWORD *)(v14 + v38);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  *(_BYTE *)(v13 + v17[44]) = *(_BYTE *)(v14 + v17[44]);
  *(_BYTE *)(v13 + v17[45]) = *(_BYTE *)(v14 + v17[45]);
  *(_BYTE *)(v13 + v17[46]) = *(_BYTE *)(v14 + v17[46]);
  *(_BYTE *)(v13 + v17[47]) = *(_BYTE *)(v14 + v17[47]);
  *(_BYTE *)(v13 + v17[48]) = *(_BYTE *)(v14 + v17[48]);
  v42 = v17[49];
  v43 = v13 + v42;
  v44 = v14 + v42;
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *(_WORD *)(v43 + 8) = *(_WORD *)(v44 + 8);
  v45 = v17[50];
  v46 = v13 + v45;
  v47 = v14 + v45;
  *(_OWORD *)v46 = *(_OWORD *)v47;
  *(_QWORD *)(v46 + 16) = *(_QWORD *)(v47 + 16);
  *(_BYTE *)(v13 + v17[51]) = *(_BYTE *)(v14 + v17[51]);
  *(_QWORD *)(v13 + v17[52]) = *(_QWORD *)(v14 + v17[52]);
  *(_BYTE *)(v13 + v17[53]) = *(_BYTE *)(v14 + v17[53]);
  *(_BYTE *)(v13 + v17[54]) = *(_BYTE *)(v14 + v17[54]);
  *(_BYTE *)(v13 + v17[55]) = *(_BYTE *)(v14 + v17[55]);
  *(_BYTE *)(v13 + v17[56]) = *(_BYTE *)(v14 + v17[56]);
  *(_BYTE *)(v13 + v17[57]) = *(_BYTE *)(v14 + v17[57]);
  *(_BYTE *)(v13 + v17[58]) = *(_BYTE *)(v14 + v17[58]);
  *(_BYTE *)(v13 + v17[59]) = *(_BYTE *)(v14 + v17[59]);
  *(_QWORD *)(v13 + v17[60]) = *(_QWORD *)(v14 + v17[60]);
  *(_QWORD *)(v13 + v17[61]) = *(_QWORD *)(v14 + v17[61]);
  v48 = a3[6];
  v49 = a3[7];
  v50 = a1 + v48;
  v51 = a2 + v48;
  *(_OWORD *)v50 = *(_OWORD *)v51;
  *(_QWORD *)(v50 + 16) = *(_QWORD *)(v51 + 16);
  *(_QWORD *)(a1 + v49) = *(_QWORD *)(a2 + v49);
  v52 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v52) = *(_BYTE *)(a2 + v52);
  return a1;
}

uint64_t sub_1C01658C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  int EnumTagSinglePayload;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  int *v55;
  uint64_t v56;
  void *v57;
  const void *v58;
  uint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  const void *v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  const void *v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v17;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRelease();
  v19 = (int *)type metadata accessor for Contact();
  v20 = v19[19];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  v23 = sub_1C0301954();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v23);
  v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23);
  if (EnumTagSinglePayload)
  {
    if (!v25)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v26 = *(_QWORD *)(v23 - 8);
  if (v25)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v21, v23);
LABEL_6:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v26 + 40))(v21, v22, v23);
LABEL_7:
  *(_QWORD *)(a1 + v19[20]) = *(_QWORD *)(a2 + v19[20]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v19[21]) = *(_BYTE *)(a2 + v19[21]);
  v28 = v19[22];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (uint64_t *)(a2 + v28);
  v32 = *v30;
  v31 = v30[1];
  *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v19[23]) = *(_BYTE *)(a2 + v19[23]);
  v33 = v19[24];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (uint64_t *)(a2 + v33);
  v37 = *v35;
  v36 = v35[1];
  *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  v38 = a3[5];
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_OWORD *)v39 = *(_OWORD *)(a2 + v38);
  *(_QWORD *)(v39 + 16) = *(_QWORD *)(a2 + v38 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v39 + 24) = *(_BYTE *)(v40 + 24);
  v41 = *(_QWORD *)(v40 + 40);
  *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
  *(_QWORD *)(v39 + 40) = v41;
  swift_bridgeObjectRelease();
  v42 = *(_QWORD *)(v40 + 56);
  *(_QWORD *)(v39 + 48) = *(_QWORD *)(v40 + 48);
  *(_QWORD *)(v39 + 56) = v42;
  swift_bridgeObjectRelease();
  v43 = *(_QWORD *)(v40 + 72);
  *(_QWORD *)(v39 + 64) = *(_QWORD *)(v40 + 64);
  *(_QWORD *)(v39 + 72) = v43;
  swift_bridgeObjectRelease();
  v44 = *(_QWORD *)(v40 + 88);
  *(_QWORD *)(v39 + 80) = *(_QWORD *)(v40 + 80);
  *(_QWORD *)(v39 + 88) = v44;
  swift_bridgeObjectRelease();
  v45 = *(_QWORD *)(v40 + 104);
  *(_QWORD *)(v39 + 96) = *(_QWORD *)(v40 + 96);
  *(_QWORD *)(v39 + 104) = v45;
  swift_bridgeObjectRelease();
  v46 = *(_QWORD *)(v40 + 120);
  *(_QWORD *)(v39 + 112) = *(_QWORD *)(v40 + 112);
  *(_QWORD *)(v39 + 120) = v46;
  swift_bridgeObjectRelease();
  v47 = *(_QWORD *)(v40 + 136);
  *(_QWORD *)(v39 + 128) = *(_QWORD *)(v40 + 128);
  *(_QWORD *)(v39 + 136) = v47;
  swift_bridgeObjectRelease();
  v48 = *(_QWORD *)(v40 + 152);
  *(_QWORD *)(v39 + 144) = *(_QWORD *)(v40 + 144);
  *(_QWORD *)(v39 + 152) = v48;
  swift_bridgeObjectRelease();
  v49 = *(_QWORD *)(v40 + 168);
  *(_QWORD *)(v39 + 160) = *(_QWORD *)(v40 + 160);
  *(_QWORD *)(v39 + 168) = v49;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v39 + 192))
  {
    if (*(_QWORD *)(v40 + 192))
    {
      *(_QWORD *)(v39 + 176) = *(_QWORD *)(v40 + 176);
      swift_release();
      v50 = *(_QWORD *)(v40 + 192);
      *(_QWORD *)(v39 + 184) = *(_QWORD *)(v40 + 184);
      *(_QWORD *)(v39 + 192) = v50;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_1C011A248(v39 + 176);
  }
  *(_OWORD *)(v39 + 176) = *(_OWORD *)(v40 + 176);
  *(_QWORD *)(v39 + 192) = *(_QWORD *)(v40 + 192);
LABEL_12:
  if (*(_QWORD *)(v39 + 216))
  {
    v51 = *(_QWORD *)(v40 + 216);
    if (v51)
    {
      *(_BYTE *)(v39 + 200) = *(_BYTE *)(v40 + 200);
      *(_QWORD *)(v39 + 208) = *(_QWORD *)(v40 + 208);
      *(_QWORD *)(v39 + 216) = v51;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v39 + 224) = *(_QWORD *)(v40 + 224);
      swift_bridgeObjectRelease();
      v52 = *(_QWORD *)(v40 + 240);
      *(_QWORD *)(v39 + 232) = *(_QWORD *)(v40 + 232);
      *(_QWORD *)(v39 + 240) = v52;
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    sub_1C011A27C(v39 + 200);
  }
  v53 = *(_OWORD *)(v40 + 216);
  *(_OWORD *)(v39 + 200) = *(_OWORD *)(v40 + 200);
  *(_OWORD *)(v39 + 216) = v53;
  *(_OWORD *)(v39 + 232) = *(_OWORD *)(v40 + 232);
LABEL_17:
  *(_QWORD *)(v39 + 248) = *(_QWORD *)(v40 + 248);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v39 + 256) = *(_BYTE *)(v40 + 256);
  *(_QWORD *)(v39 + 264) = *(_QWORD *)(v40 + 264);
  swift_release();
  *(_QWORD *)(v39 + 272) = *(_QWORD *)(v40 + 272);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v39 + 280) = *(_BYTE *)(v40 + 280);
  v54 = *(_OWORD *)(v40 + 304);
  *(_OWORD *)(v39 + 288) = *(_OWORD *)(v40 + 288);
  *(_OWORD *)(v39 + 304) = v54;
  *(_QWORD *)(v39 + 320) = *(_QWORD *)(v40 + 320);
  *(_BYTE *)(v39 + 328) = *(_BYTE *)(v40 + 328);
  *(_BYTE *)(v39 + 329) = *(_BYTE *)(v40 + 329);
  *(_BYTE *)(v39 + 330) = *(_BYTE *)(v40 + 330);
  *(_BYTE *)(v39 + 331) = *(_BYTE *)(v40 + 331);
  *(_BYTE *)(v39 + 332) = *(_BYTE *)(v40 + 332);
  *(_BYTE *)(v39 + 333) = *(_BYTE *)(v40 + 333);
  *(_BYTE *)(v39 + 334) = *(_BYTE *)(v40 + 334);
  *(_BYTE *)(v39 + 335) = *(_BYTE *)(v40 + 335);
  *(_BYTE *)(v39 + 336) = *(_BYTE *)(v40 + 336);
  *(_BYTE *)(v39 + 337) = *(_BYTE *)(v40 + 337);
  *(_BYTE *)(v39 + 338) = *(_BYTE *)(v40 + 338);
  *(_BYTE *)(v39 + 339) = *(_BYTE *)(v40 + 339);
  *(_BYTE *)(v39 + 340) = *(_BYTE *)(v40 + 340);
  *(_QWORD *)&v54 = *(_QWORD *)(v40 + 352);
  *(_QWORD *)(v39 + 344) = *(_QWORD *)(v40 + 344);
  *(_QWORD *)(v39 + 352) = v54;
  *(_BYTE *)(v39 + 360) = *(_BYTE *)(v40 + 360);
  *(_BYTE *)(v39 + 361) = *(_BYTE *)(v40 + 361);
  *(_BYTE *)(v39 + 362) = *(_BYTE *)(v40 + 362);
  *(_BYTE *)(v39 + 363) = *(_BYTE *)(v40 + 363);
  *(_OWORD *)(v39 + 368) = *(_OWORD *)(v40 + 368);
  *(_QWORD *)(v39 + 384) = *(_QWORD *)(v40 + 384);
  v55 = (int *)type metadata accessor for ContactResolver.SignalSet(0);
  v56 = v55[30];
  v57 = (void *)(v39 + v56);
  v58 = (const void *)(v40 + v56);
  v59 = sub_1C0303550();
  v60 = __swift_getEnumTagSinglePayload((uint64_t)v57, 1, v59);
  v61 = __swift_getEnumTagSinglePayload((uint64_t)v58, 1, v59);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
      __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v59);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  v62 = *(_QWORD *)(v59 - 8);
  if (v61)
  {
    (*(void (**)(void *, uint64_t))(v62 + 8))(v57, v59);
LABEL_22:
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BAAE8);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(void *, const void *, uint64_t))(v62 + 40))(v57, v58, v59);
LABEL_23:
  v64 = v55[31];
  v65 = (void *)(v39 + v64);
  v66 = (const void *)(v40 + v64);
  v67 = __swift_getEnumTagSinglePayload(v39 + v64, 1, v59);
  v68 = __swift_getEnumTagSinglePayload((uint64_t)v66, 1, v59);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v65, v66, v59);
      __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v59);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  v69 = *(_QWORD *)(v59 - 8);
  if (v68)
  {
    (*(void (**)(void *, uint64_t))(v69 + 8))(v65, v59);
LABEL_28:
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BAAE8);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(void *, const void *, uint64_t))(v69 + 40))(v65, v66, v59);
LABEL_29:
  v71 = v55[32];
  v72 = (void *)(v39 + v71);
  v73 = (const void *)(v40 + v71);
  v74 = __swift_getEnumTagSinglePayload(v39 + v71, 1, v59);
  v75 = __swift_getEnumTagSinglePayload((uint64_t)v73, 1, v59);
  if (!v74)
  {
    v76 = *(_QWORD *)(v59 - 8);
    if (!v75)
    {
      (*(void (**)(void *, const void *, uint64_t))(v76 + 40))(v72, v73, v59);
      goto LABEL_35;
    }
    (*(void (**)(void *, uint64_t))(v76 + 8))(v72, v59);
    goto LABEL_34;
  }
  if (v75)
  {
LABEL_34:
    v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BAAE8);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v72, v73, v59);
  __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v59);
LABEL_35:
  v78 = v55[33];
  v79 = v39 + v78;
  v80 = v40 + v78;
  *(_QWORD *)v79 = *(_QWORD *)(v40 + v78);
  *(_BYTE *)(v79 + 8) = *(_BYTE *)(v40 + v78 + 8);
  *(_BYTE *)(v79 + 9) = *(_BYTE *)(v40 + v78 + 9);
  *(_BYTE *)(v79 + 10) = *(_BYTE *)(v40 + v78 + 10);
  *(_BYTE *)(v79 + 11) = *(_BYTE *)(v40 + v78 + 11);
  *(_BYTE *)(v79 + 12) = *(_BYTE *)(v40 + v78 + 12);
  *(_BYTE *)(v79 + 13) = *(_BYTE *)(v40 + v78 + 13);
  *(_BYTE *)(v79 + 14) = *(_BYTE *)(v40 + v78 + 14);
  *(_BYTE *)(v79 + 15) = *(_BYTE *)(v40 + v78 + 15);
  *(_BYTE *)(v79 + 16) = *(_BYTE *)(v40 + v78 + 16);
  *(_BYTE *)(v79 + 17) = *(_BYTE *)(v40 + v78 + 17);
  *(_BYTE *)(v79 + 18) = *(_BYTE *)(v40 + v78 + 18);
  *(_BYTE *)(v79 + 19) = *(_BYTE *)(v40 + v78 + 19);
  v81 = *(_QWORD *)(v40 + v78 + 32);
  *(_QWORD *)(v79 + 24) = *(_QWORD *)(v40 + v78 + 24);
  *(_QWORD *)(v79 + 32) = v81;
  swift_bridgeObjectRelease();
  v82 = *(_QWORD *)(v80 + 48);
  *(_QWORD *)(v79 + 40) = *(_QWORD *)(v80 + 40);
  *(_QWORD *)(v79 + 48) = v82;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v39 + v55[34]) = *(_BYTE *)(v40 + v55[34]);
  *(_BYTE *)(v39 + v55[35]) = *(_BYTE *)(v40 + v55[35]);
  *(_BYTE *)(v39 + v55[36]) = *(_BYTE *)(v40 + v55[36]);
  *(_BYTE *)(v39 + v55[37]) = *(_BYTE *)(v40 + v55[37]);
  *(_BYTE *)(v39 + v55[38]) = *(_BYTE *)(v40 + v55[38]);
  *(_BYTE *)(v39 + v55[39]) = *(_BYTE *)(v40 + v55[39]);
  *(_BYTE *)(v39 + v55[40]) = *(_BYTE *)(v40 + v55[40]);
  *(_BYTE *)(v39 + v55[41]) = *(_BYTE *)(v40 + v55[41]);
  v83 = v55[42];
  v84 = v39 + v83;
  v85 = v40 + v83;
  *(_QWORD *)v84 = *(_QWORD *)v85;
  *(_BYTE *)(v84 + 8) = *(_BYTE *)(v85 + 8);
  *(_BYTE *)(v84 + 9) = *(_BYTE *)(v85 + 9);
  v86 = v55[43];
  v87 = v39 + v86;
  v88 = v40 + v86;
  *(_QWORD *)v87 = *(_QWORD *)v88;
  *(_BYTE *)(v87 + 8) = *(_BYTE *)(v88 + 8);
  v90 = *(_QWORD *)(v88 + 16);
  v89 = *(_QWORD *)(v88 + 24);
  *(_QWORD *)(v87 + 16) = v90;
  *(_QWORD *)(v87 + 24) = v89;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v39 + v55[44]) = *(_BYTE *)(v40 + v55[44]);
  *(_BYTE *)(v39 + v55[45]) = *(_BYTE *)(v40 + v55[45]);
  *(_BYTE *)(v39 + v55[46]) = *(_BYTE *)(v40 + v55[46]);
  *(_BYTE *)(v39 + v55[47]) = *(_BYTE *)(v40 + v55[47]);
  *(_BYTE *)(v39 + v55[48]) = *(_BYTE *)(v40 + v55[48]);
  v91 = v55[49];
  v92 = v39 + v91;
  v93 = v40 + v91;
  *(_QWORD *)v92 = *(_QWORD *)v93;
  *(_BYTE *)(v92 + 8) = *(_BYTE *)(v93 + 8);
  *(_BYTE *)(v92 + 9) = *(_BYTE *)(v93 + 9);
  v94 = v55[50];
  v95 = v39 + v94;
  v96 = v40 + v94;
  *(_QWORD *)v95 = *(_QWORD *)v96;
  *(_BYTE *)(v95 + 8) = *(_BYTE *)(v96 + 8);
  *(_QWORD *)(v95 + 16) = *(_QWORD *)(v96 + 16);
  *(_BYTE *)(v39 + v55[51]) = *(_BYTE *)(v40 + v55[51]);
  *(_QWORD *)(v39 + v55[52]) = *(_QWORD *)(v40 + v55[52]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v39 + v55[53]) = *(_BYTE *)(v40 + v55[53]);
  *(_BYTE *)(v39 + v55[54]) = *(_BYTE *)(v40 + v55[54]);
  *(_BYTE *)(v39 + v55[55]) = *(_BYTE *)(v40 + v55[55]);
  *(_BYTE *)(v39 + v55[56]) = *(_BYTE *)(v40 + v55[56]);
  *(_BYTE *)(v39 + v55[57]) = *(_BYTE *)(v40 + v55[57]);
  *(_BYTE *)(v39 + v55[58]) = *(_BYTE *)(v40 + v55[58]);
  *(_BYTE *)(v39 + v55[59]) = *(_BYTE *)(v40 + v55[59]);
  *(_QWORD *)(v39 + v55[60]) = *(_QWORD *)(v40 + v55[60]);
  *(_QWORD *)(v39 + v55[61]) = *(_QWORD *)(v40 + v55[61]);
  swift_release();
  v97 = a3[6];
  v98 = a1 + v97;
  v99 = a2 + v97;
  *(_BYTE *)v98 = *(_BYTE *)v99;
  *(_QWORD *)(v98 + 8) = *(_QWORD *)(v99 + 8);
  *(_QWORD *)(v98 + 16) = *(_QWORD *)(v99 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v100 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v100) = *(_BYTE *)(a2 + v100);
  return a1;
}

void sub_1C0166284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_56_9();
  OUTLINED_FUNCTION_1_7();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    OUTLINED_FUNCTION_1_6();
    OUTLINED_FUNCTION_1_7();
    if (!v9)
    {
      OUTLINED_FUNCTION_33_15(*(_QWORD *)(v4 + *(int *)(a3 + 24) + 16));
      OUTLINED_FUNCTION_37_0();
      return;
    }
    v7 = v10;
    v8 = v4 + *(int *)(a3 + 20);
  }
  OUTLINED_FUNCTION_46(v8, v3, v7);
}

void sub_1C01662EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  OUTLINED_FUNCTION_56_9();
  OUTLINED_FUNCTION_0_6();
  if (v10)
  {
    v8 = v7;
    v9 = v5;
  }
  else
  {
    OUTLINED_FUNCTION_1_6();
    OUTLINED_FUNCTION_0_6();
    if (!v10)
    {
      *(_QWORD *)(v5 + *(int *)(a4 + 24) + 16) = (v4 - 1);
      OUTLINED_FUNCTION_37_0();
      return;
    }
    v8 = v11;
    v9 = v5 + *(int *)(a4 + 20);
  }
  OUTLINED_FUNCTION_49_3(v9, v4, v4, v8);
}

uint64_t sub_1C016635C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Contact();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ContactResolver.SignalSet(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_1C0166414()
{
  unint64_t result;

  result = qword_1EF5BD6E8;
  if (!qword_1EF5BD6E8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030FB30, &type metadata for ContactResolutionType);
    atomic_store(result, (unint64_t *)&qword_1EF5BD6E8);
  }
  return result;
}

unint64_t sub_1C016645C()
{
  unint64_t result;

  result = qword_1EF5BD710;
  if (!qword_1EF5BD710)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030FFB0, &type metadata for ContactMatchRuntimeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BD710);
  }
  return result;
}

unint64_t sub_1C0166498()
{
  unint64_t result;

  result = qword_1EF5BD718;
  if (!qword_1EF5BD718)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactResolver.BackgroundSignalSet, &type metadata for ContactResolver.BackgroundSignalSet);
    atomic_store(result, (unint64_t *)&qword_1EF5BD718);
  }
  return result;
}

unint64_t sub_1C01664D4()
{
  unint64_t result;

  result = qword_1EF5BD720;
  if (!qword_1EF5BD720)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0318068, &type metadata for ContactRankerFeatureSet);
    atomic_store(result, (unint64_t *)&qword_1EF5BD720);
  }
  return result;
}

unint64_t sub_1C0166510()
{
  unint64_t result;

  result = qword_1EF5BD728;
  if (!qword_1EF5BD728)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030FB58, &type metadata for ContactResolutionType);
    atomic_store(result, (unint64_t *)&qword_1EF5BD728);
  }
  return result;
}

unint64_t sub_1C016654C()
{
  unint64_t result;

  result = qword_1EF5BD738;
  if (!qword_1EF5BD738)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactResolver.BackgroundSignalSet, &type metadata for ContactResolver.BackgroundSignalSet);
    atomic_store(result, (unint64_t *)&qword_1EF5BD738);
  }
  return result;
}

unint64_t sub_1C0166588()
{
  unint64_t result;

  result = qword_1EF5BD740;
  if (!qword_1EF5BD740)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0318040, &type metadata for ContactRankerFeatureSet);
    atomic_store(result, (unint64_t *)&qword_1EF5BD740);
  }
  return result;
}

unint64_t sub_1C01665C4()
{
  unint64_t result;

  result = qword_1EF5BD750;
  if (!qword_1EF5BD750)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030FF60, &type metadata for PrivatizedContactMatchRuntimeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BD750);
  }
  return result;
}

unint64_t sub_1C0166600()
{
  unint64_t result;

  result = qword_1EF5BD758;
  if (!qword_1EF5BD758)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031AF54, &unk_1E799F590);
    atomic_store(result, (unint64_t *)&qword_1EF5BD758);
  }
  return result;
}

unint64_t sub_1C016663C()
{
  unint64_t result;

  result = qword_1EF5BD768;
  if (!qword_1EF5BD768)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030F1D8, &type metadata for PrivatizedBgSignalSet);
    atomic_store(result, (unint64_t *)&qword_1EF5BD768);
  }
  return result;
}

unint64_t sub_1C0166678()
{
  unint64_t result;

  result = qword_1EF5BD778;
  if (!qword_1EF5BD778)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031AF2C, &unk_1E799F590);
    atomic_store(result, (unint64_t *)&qword_1EF5BD778);
  }
  return result;
}

unint64_t sub_1C01666B4()
{
  unint64_t result;

  result = qword_1EF5BD788;
  if (!qword_1EF5BD788)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030F1B0, &type metadata for PrivatizedBgSignalSet);
    atomic_store(result, (unint64_t *)&qword_1EF5BD788);
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivatizedContactMatchRuntimeData.CodingKeys()
{
  return &type metadata for PrivatizedContactMatchRuntimeData.CodingKeys;
}

uint64_t _s13SiriInference15ForcePromptTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1C016674C + 4 * byte_1C030F7E0[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1C0166780 + 4 * byte_1C030F7DB[v4]))();
}

uint64_t sub_1C0166780(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0166788(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0166790);
  return result;
}

uint64_t sub_1C016679C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C01667A4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1C01667A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C01667B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContactMatchRuntimeData.CodingKeys()
{
  return &type metadata for ContactMatchRuntimeData.CodingKeys;
}

unint64_t sub_1C01667D0()
{
  unint64_t result;

  result = qword_1EF5BD790;
  if (!qword_1EF5BD790)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030FE80, &type metadata for ContactMatchRuntimeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BD790);
  }
  return result;
}

unint64_t sub_1C0166810()
{
  unint64_t result;

  result = qword_1EF5BD798;
  if (!qword_1EF5BD798)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030FF38, &type metadata for PrivatizedContactMatchRuntimeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BD798);
  }
  return result;
}

unint64_t sub_1C0166850()
{
  unint64_t result;

  result = qword_1EF5BD7A0;
  if (!qword_1EF5BD7A0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030FEA8, &type metadata for PrivatizedContactMatchRuntimeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BD7A0);
  }
  return result;
}

unint64_t sub_1C0166890()
{
  unint64_t result;

  result = qword_1EF5BD7A8;
  if (!qword_1EF5BD7A8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030FED0, &type metadata for PrivatizedContactMatchRuntimeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BD7A8);
  }
  return result;
}

unint64_t sub_1C01668D0()
{
  unint64_t result;

  result = qword_1EF5BD7B0;
  if (!qword_1EF5BD7B0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030FDF0, &type metadata for ContactMatchRuntimeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BD7B0);
  }
  return result;
}

unint64_t sub_1C0166910()
{
  unint64_t result;

  result = qword_1EF5BD7B8;
  if (!qword_1EF5BD7B8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030FE18, &type metadata for ContactMatchRuntimeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BD7B8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_51()
{
  return sub_1C030499C();
}

uint64_t OUTLINED_FUNCTION_3_61()
{
  return sub_1C030499C();
}

uint64_t OUTLINED_FUNCTION_6_38@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = a1;
  return sub_1C030496C();
}

uint64_t OUTLINED_FUNCTION_7_40()
{
  return sub_1C030499C();
}

uint64_t OUTLINED_FUNCTION_8_30()
{
  return sub_1C030499C();
}

uint64_t OUTLINED_FUNCTION_12_29()
{
  return sub_1C03048E8();
}

uint64_t OUTLINED_FUNCTION_13_28()
{
  return sub_1C03048E8();
}

uint64_t OUTLINED_FUNCTION_15_26()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 88) = 5;
  return sub_1C030496C();
}

uint64_t OUTLINED_FUNCTION_16_24()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 88) = 4;
  return sub_1C0304978();
}

double OUTLINED_FUNCTION_17_21()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double *v3;
  char v4;
  double result;
  uint64_t v6;

  v3 = (double *)(v0 + *(int *)(v1 + 24));
  v4 = *(_BYTE *)v3;
  result = v3[1];
  v6 = *((_QWORD *)v3 + 2);
  *(_BYTE *)(v2 - 88) = v4;
  *(double *)(v2 - 80) = result;
  *(_QWORD *)(v2 - 72) = v6;
  *(_BYTE *)(v2 - 89) = 2;
  return result;
}

uint64_t OUTLINED_FUNCTION_19_25@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 208) = a1;
  return sub_1C03048B8();
}

uint64_t OUTLINED_FUNCTION_20_16()
{
  return sub_1C03048E8();
}

uint64_t OUTLINED_FUNCTION_21_19()
{
  return sub_1C03048E8();
}

uint64_t OUTLINED_FUNCTION_22_21@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = a1;
  return sub_1C0304954();
}

uint64_t OUTLINED_FUNCTION_27_21()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 144), v1);
}

uint64_t OUTLINED_FUNCTION_29_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 136));
}

double OUTLINED_FUNCTION_30_15()
{
  uint64_t v0;
  uint64_t v1;

  return *(double *)(v0 + *(int *)(v1 + 24) + 8);
}

unint64_t OUTLINED_FUNCTION_32_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = *(_QWORD *)(v0 + *(int *)(v1 + 28));
  *(_BYTE *)(v2 - 89) = 3;
  return sub_1C0166588();
}

uint64_t OUTLINED_FUNCTION_34_19@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_43_12(uint64_t a1, uint64_t a2)
{
  return sub_1C00EE078(a1, a2);
}

uint64_t OUTLINED_FUNCTION_46_12()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 88) = 1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_47_14()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_48_12()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_56_9()
{
  return type metadata accessor for Contact();
}

uint64_t OUTLINED_FUNCTION_68_4@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t OUTLINED_FUNCTION_69_6@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t OUTLINED_FUNCTION_70_4()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_0Tm(*(_QWORD *)(v0 - 120));
}

uint64_t OUTLINED_FUNCTION_78_4(uint64_t a1)
{
  uint64_t v1;

  return v1 + *(int *)(a1 + 20);
}

void sub_1C0166BF0(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD v10[6];

  v4 = (void *)objc_opt_self();
  if (qword_1ED7258E8 != -1)
    swift_once();
  v5 = qword_1ED729458;
  v6 = OUTLINED_FUNCTION_16_0();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v10[4] = sub_1C0168584;
  v10[5] = v6;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1C0167418;
  v10[3] = &block_descriptor_12;
  v7 = _Block_copy(v10);
  swift_retain();
  swift_release();
  v8 = OUTLINED_FUNCTION_8_31();
  sub_1C0168208(v8, v9, v5, (uint64_t)v7, v4);
  _Block_release(v7);
}

void sub_1C0166CF8(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3)
{
  id v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  id v25;
  _QWORD *v26;
  _QWORD aBlock[6];

  v6 = objc_allocWithZone(MEMORY[0x1E0D4E050]);
  v7 = OUTLINED_FUNCTION_8_31();
  v9 = sub_1C0168170(v7, v8);
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, sel_returnTypes_, 2);
    if (qword_1ED7256B8 != -1)
      swift_once();
    v11 = sub_1C0303B98();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED729440);
    v12 = v10;
    v13 = sub_1C0303B80();
    v14 = sub_1C03042DC();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      v26 = (_QWORD *)OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v15 = 138412290;
      aBlock[0] = v12;
      v16 = v12;
      sub_1C03044B0();
      *v26 = v10;

      _os_log_impl(&dword_1C0039000, v13, v14, "Starting MobileAsset query %@", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727620);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }

    v23 = (_QWORD *)OUTLINED_FUNCTION_16_0();
    v23[2] = v12;
    v23[3] = a1;
    v23[4] = a2;
    v23[5] = a3;
    aBlock[4] = sub_1C01681FC;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C0167418;
    aBlock[3] = &block_descriptor_6_0;
    v24 = _Block_copy(aBlock);
    v25 = v12;
    swift_retain();
    swift_release();
    objc_msgSend(v25, sel_queryMetaData_, v24);
    _Block_release(v24);

  }
  else
  {
    if (qword_1ED7256B8 != -1)
      swift_once();
    v17 = sub_1C0303B98();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED729440);
    v18 = sub_1C0303B80();
    v19 = sub_1C03042F4();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1C0039000, v18, v19, "MobileAsset query init failed", v20, 2u);
      OUTLINED_FUNCTION_5();
    }

    sub_1C01680B4();
    v21 = (void *)swift_allocError();
    *(_QWORD *)v22 = 0;
    *(_BYTE *)(v22 + 8) = 3;
    a2(v21, 1);

  }
}

uint64_t sub_1C0167058(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void (*)(uint64_t), uint64_t, uint64_t, uint64_t);

  v5 = a1[5];
  v6 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v5);
  v7 = OUTLINED_FUNCTION_16_0();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v8 = *(void (**)(void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v6 + 32);
  swift_retain();
  v8(sub_1C0168168, v7, v5, v6);
  return swift_release();
}

uint64_t sub_1C01670EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  type metadata accessor for HolidaysDBUpdate();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_1_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728340);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C0301B70();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_39_2();
  sub_1C0167654((uint64_t)v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
  {
    sub_1C0056C9C((uint64_t)v9, &qword_1ED728340);
    sub_1C01680B4();
    swift_allocError();
    *(_QWORD *)v12 = 1;
    *(_BYTE *)(v12 + 8) = 3;
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v4, v9, v10);
    sub_1C02DC034(v4);
    if (!v2)
    {
      MEMORY[0x1E0C80A78](v14);
      *(&v15 - 2) = a2;
      *(&v15 - 1) = v3;
      sub_1C00CD480(0, (void (*)(uint64_t))sub_1C01680F0, (uint64_t)(&v15 - 4));
      sub_1C0168108(v3);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v4, v10);
  }
}

id sub_1C0167298()
{
  return sub_1C01672B8();
}

id sub_1C01672B8()
{
  void *v0;

  return objc_msgSend(v0, sel_state);
}

uint64_t sub_1C01672C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1C01672E8(a1);
}

uint64_t sub_1C01672E8@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(v1, sel_getLocalFileUrl);
  if (v3)
  {
    v4 = v3;
    sub_1C0301B40();

    v5 = 0;
  }
  else
  {
    v5 = 1;
  }
  v6 = sub_1C0301B70();
  return __swift_storeEnumTagSinglePayload(a1, v5, 1, v6);
}

void sub_1C0167354(uint64_t a1, uint64_t a2)
{
  sub_1C0167374(a1, a2);
}

void sub_1C0167374(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  _QWORD v4[6];

  if (a1)
  {
    v4[4] = a1;
    v4[5] = a2;
    v4[0] = MEMORY[0x1E0C809B0];
    v4[1] = 1107296256;
    v4[2] = sub_1C0167418;
    v4[3] = &block_descriptor_9;
    v3 = _Block_copy(v4);
    swift_retain();
    swift_release();
  }
  else
  {
    v3 = 0;
  }
  objc_msgSend(v2, sel_startDownload_, v3);
  _Block_release(v3);
}

id sub_1C016741C()
{
  return sub_1C016743C();
}

id sub_1C016743C()
{
  void *v0;

  return objc_msgSend(v0, sel_cancelDownloadSync);
}

id sub_1C016744C()
{
  return sub_1C016746C();
}

id sub_1C016746C()
{
  void *v0;

  return objc_msgSend(v0, sel_purgeSync);
}

id sub_1C016747C()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4E088]), sel_init);
  objc_msgSend(v0, sel_setDiscretionary_, 1);
  result = objc_msgSend(v0, sel_setAllowsCellularAccess_, 0);
  qword_1ED729458 = (uint64_t)v0;
  return result;
}

uint64_t sub_1C01674DC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t EnumTagSinglePayload;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD7C0);
  OUTLINED_FUNCTION_12_0();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v15[-v7];
  v9 = (uint64_t)v1 + OBJC_IVAR____TtC13SiriInference21HolidaysDBMobileAsset____lazy_storage___assetURL;
  swift_beginAccess();
  sub_1C0055ED0(v9, (uint64_t)v8, &qword_1EF5BD7C0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728340);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  if ((_DWORD)EnumTagSinglePayload != 1)
    return sub_1C0168054((uint64_t)v8, a1);
  OUTLINED_FUNCTION_7_41(EnumTagSinglePayload, &qword_1EF5BD7C0);
  v12 = v1[5];
  v13 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
  sub_1C0055ED0(a1, (uint64_t)v6, &qword_1ED728340);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v10);
  swift_beginAccess();
  sub_1C016800C((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_1C0167654@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t EnumTagSinglePayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = sub_1C0301B70();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_1_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728340);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_39_2();
  v8 = v1[5];
  v9 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v8);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9) & 0xFFFFFFFFFFFFFFFELL) != 2)
    return __swift_storeEnumTagSinglePayload(a1, 1, 1, v5);
  sub_1C01674DC(v3);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v3, 1, v5);
  if ((_DWORD)EnumTagSinglePayload)
  {
    OUTLINED_FUNCTION_7_41(EnumTagSinglePayload, &qword_1ED728340);
    v11 = a1;
    v12 = 1;
  }
  else
  {
    v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, v3, v5);
    OUTLINED_FUNCTION_7_41(v14, &qword_1ED728340);
    sub_1C0301B1C();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v5);
    v11 = a1;
    v12 = 0;
  }
  return __swift_storeEnumTagSinglePayload(v11, v12, 1, v5);
}

void sub_1C01677E8(uint64_t a1, void (*a2)(void))
{
  void *v4;
  uint64_t v5;

  if (a1)
  {
    sub_1C01680B4();
    v4 = (void *)swift_allocError();
    *(_QWORD *)v5 = a1;
    *(_BYTE *)(v5 + 8) = 1;
    a2();

  }
  else
  {
    a2();
  }
}

void sub_1C0167860(uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t, _QWORD))
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *v10;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t i;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, _QWORD);
  uint64_t v34;
  uint64_t v35;

  if (!a1)
  {
    v35 = MEMORY[0x1E0DEE9D8];
    v13 = sub_1C01682CC(a2);
    if (!v13)
    {
LABEL_30:
      a4(v35, 0);
      swift_bridgeObjectRelease();
      return;
    }
    v14 = v13;
    if (qword_1ED7256B8 != -1)
      swift_once();
    v15 = sub_1C0303B98();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED729440);
    swift_bridgeObjectRetain_n();
    v16 = sub_1C0303B80();
    v17 = sub_1C03042E8();
    v33 = a4;
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v34 = v19;
      *(_DWORD *)v18 = 136315138;
      v20 = sub_1C0168548();
      v21 = swift_bridgeObjectRetain();
      v22 = MEMORY[0x1C3B97040](v21, v20);
      v24 = v23;
      swift_bridgeObjectRelease();
      sub_1C003E6D8(v22, v24, &v34);
      sub_1C03044B0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0039000, v16, v17, "Query returned results %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v19, -1, -1);
      MEMORY[0x1C3B98378](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      v25 = sub_1C03047F8();
      swift_bridgeObjectRelease();
      if (v25)
        goto LABEL_15;
    }
    else
    {
      v25 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v25)
      {
LABEL_15:
        if (v25 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v25; ++i)
        {
          if ((v14 & 0xC000000000000001) != 0)
            v27 = (id)MEMORY[0x1C3B975EC](i, v14);
          else
            v27 = *(id *)(v14 + 8 * i + 32);
          v28 = v27;
          type metadata accessor for HolidaysDBMobileAsset();
          v29 = swift_allocObject();
          v30 = v28;
          v31 = sub_1C0168328(v30, v29);
          if (v31)
          {
            if (*(_QWORD *)(v31 + 56) >= a3)
            {
              v32 = swift_retain();
              MEMORY[0x1C3B97010](v32);
              if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_1C030415C();
              sub_1C0304180();
              sub_1C0304150();
            }
            swift_release();
          }

        }
      }
    }
    swift_bridgeObjectRelease();
    a4 = v33;
    goto LABEL_30;
  }
  if (qword_1ED7256B8 != -1)
    swift_once();
  v6 = sub_1C0303B98();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED729440);
  v7 = sub_1C0303B80();
  v8 = sub_1C03042F4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v9 = 134217984;
    v35 = a1;
    sub_1C03044B0();
    _os_log_impl(&dword_1C0039000, v7, v8, "Query returned error %ld", v9, 0xCu);
    MEMORY[0x1C3B98378](v9, -1, -1);
  }

  sub_1C01680B4();
  v10 = (void *)swift_allocError();
  *(_QWORD *)v11 = a1;
  *(_BYTE *)(v11 + 8) = 0;
  a4((uint64_t)v10, 1);

}

void sub_1C0167CC0(uint64_t a1, void (*a2)(void))
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void *v8;
  uint64_t v9;

  if (a1 != 10 && a1)
  {
    if (qword_1ED7256B8 != -1)
      swift_once();
    v4 = sub_1C0303B98();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED729440);
    v5 = sub_1C0303B80();
    v6 = sub_1C03042F4();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v7 = 134217984;
      sub_1C03044B0();
      _os_log_impl(&dword_1C0039000, v5, v6, "Download failed with code %ld", v7, 0xCu);
      MEMORY[0x1C3B98378](v7, -1, -1);
    }

    sub_1C01680B4();
    v8 = (void *)swift_allocError();
    *(_QWORD *)v9 = a1;
    *(_BYTE *)(v9 + 8) = 1;
    a2();

  }
  else
  {
    ((void (*)(_QWORD))a2)(0);
  }
}

uint64_t sub_1C0167E30()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  sub_1C0056C9C(v0 + OBJC_IVAR____TtC13SiriInference21HolidaysDBMobileAsset____lazy_storage___assetURL, &qword_1EF5BD7C0);
  sub_1C0056C9C(v0 + OBJC_IVAR____TtC13SiriInference21HolidaysDBMobileAsset____lazy_storage___versiondate, &qword_1EF5BD7C8);
  OUTLINED_FUNCTION_6_39(OBJC_IVAR____TtC13SiriInference21HolidaysDBMobileAsset____lazy_storage___holiday);
  OUTLINED_FUNCTION_6_39(OBJC_IVAR____TtC13SiriInference21HolidaysDBMobileAsset____lazy_storage___country);
  return v0;
}

uint64_t sub_1C0167E94()
{
  sub_1C0167E30();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0167EB8()
{
  return type metadata accessor for HolidaysDBMobileAsset();
}

uint64_t type metadata accessor for HolidaysDBMobileAsset()
{
  uint64_t result;

  result = qword_1ED725CD8;
  if (!qword_1ED725CD8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C0167EF8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1C0167FC0(319, &qword_1ED7256E8, &qword_1ED728340);
  if (v0 <= 0x3F)
  {
    sub_1C0167FC0(319, (unint64_t *)&unk_1ED7256F0, &qword_1ED728360);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_1C0167FC0(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_1C030448C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1C016800C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD7C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0168054(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

unint64_t sub_1C01680B4()
{
  unint64_t result;

  result = qword_1ED7258A0;
  if (!qword_1ED7258A0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03100AC, &type metadata for HolidaysDBMobileAssetError);
    atomic_store(result, (unint64_t *)&qword_1ED7258A0);
  }
  return result;
}

void sub_1C01680F0()
{
  sub_1C02DD328();
}

uint64_t sub_1C0168108(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HolidaysDBUpdate();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0168144()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C0168168(uint64_t a1)
{
  uint64_t v1;

  sub_1C0167CC0(a1, *(void (**)(void))(v1 + 16));
}

id sub_1C0168170(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;

  if (a2)
  {
    v3 = (void *)sub_1C0303E8C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(v2, sel_initWithType_, v3);

  return v4;
}

uint64_t sub_1C01681D0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1C01681FC(uint64_t a1)
{
  uint64_t v1;

  sub_1C0167860(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t, _QWORD))(v1 + 32));
}

void sub_1C0168208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8;

  v8 = (id)sub_1C0303E8C();
  objc_msgSend(a5, sel_startCatalogDownload_options_then_, v8, a3, a4);

}

uint64_t sub_1C0168264(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_attributes);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C0303D90();

  return v3;
}

uint64_t sub_1C01682CC(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_results);
  if (!v1)
    return 0;
  v2 = v1;
  sub_1C0168548();
  v3 = sub_1C0304138();

  return v3;
}

uint64_t sub_1C0168328(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];
  _BYTE v11[40];
  __int128 v12;
  uint64_t v13;
  _QWORD v14[5];

  v14[3] = sub_1C0168548();
  v14[4] = &off_1E7997298;
  v14[0] = a1;
  v4 = a2 + OBJC_IVAR____TtC13SiriInference21HolidaysDBMobileAsset____lazy_storage___assetURL;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728340);
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v5);
  v6 = a2 + OBJC_IVAR____TtC13SiriInference21HolidaysDBMobileAsset____lazy_storage___versiondate;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728360);
  __swift_storeEnumTagSinglePayload(v6, 1, 1, v7);
  *(_OWORD *)(a2 + OBJC_IVAR____TtC13SiriInference21HolidaysDBMobileAsset____lazy_storage___holiday) = xmmword_1C0307CF0;
  *(_OWORD *)(a2 + OBJC_IVAR____TtC13SiriInference21HolidaysDBMobileAsset____lazy_storage___country) = xmmword_1C0307CF0;
  sub_1C0048FE0((uint64_t)v14, a2 + 16);
  result = sub_1C0168264(a1);
  if (result)
  {
    v9 = result;
    strcpy((char *)v10, "UpdateVersion");
    HIWORD(v10[1]) = -4864;
    sub_1C030466C();
    sub_1C00A9C28((uint64_t)v11, v9, &v12);
    swift_bridgeObjectRelease();
    sub_1C00A83E0((uint64_t)v11);
    if (v13)
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        *(_QWORD *)(a2 + 56) = v10[0];
LABEL_7:
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
        return a2;
      }
    }
    else
    {
      sub_1C0056C9C((uint64_t)&v12, (uint64_t *)&unk_1ED727E70);
    }
    __swift_destroy_boxed_opaque_existential_0Tm(a2 + 16);
    sub_1C0056C9C(a2 + OBJC_IVAR____TtC13SiriInference21HolidaysDBMobileAsset____lazy_storage___assetURL, &qword_1EF5BD7C0);
    sub_1C0056C9C(a2 + OBJC_IVAR____TtC13SiriInference21HolidaysDBMobileAsset____lazy_storage___versiondate, &qword_1EF5BD7C8);
    sub_1C00C09A0(*(_QWORD *)(a2 + OBJC_IVAR____TtC13SiriInference21HolidaysDBMobileAsset____lazy_storage___holiday), *(_QWORD *)(a2 + OBJC_IVAR____TtC13SiriInference21HolidaysDBMobileAsset____lazy_storage___holiday + 8));
    sub_1C00C09A0(*(_QWORD *)(a2 + OBJC_IVAR____TtC13SiriInference21HolidaysDBMobileAsset____lazy_storage___country), *(_QWORD *)(a2 + OBJC_IVAR____TtC13SiriInference21HolidaysDBMobileAsset____lazy_storage___country + 8));
    type metadata accessor for HolidaysDBMobileAsset();
    swift_deallocPartialClassInstance();
    a2 = 0;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C0168548()
{
  unint64_t result;

  result = qword_1EF5BD7D0;
  if (!qword_1EF5BD7D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF5BD7D0);
  }
  return result;
}

void sub_1C0168584(uint64_t a1)
{
  uint64_t v1;

  sub_1C01677E8(a1, *(void (**)(void))(v1 + 16));
}

uint64_t getEnumTagSinglePayload for HolidaysDBMobileAssetError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 3)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HolidaysDBMobileAssetError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C0168610(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_1C0168628(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for HolidaysDBMobileAssetError()
{
  return &type metadata for HolidaysDBMobileAssetError;
}

uint64_t OUTLINED_FUNCTION_6_39@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C00C09A0(*(_QWORD *)(v1 + a1), *(_QWORD *)(v1 + a1 + 8));
}

uint64_t OUTLINED_FUNCTION_7_41(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1C0056C9C(v2, a2);
}

unint64_t OUTLINED_FUNCTION_8_31()
{
  return 0xD00000000000002BLL;
}

char *static LearnedDisambiguationPersistentStorage.all.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  _QWORD v42[4];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD008);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_17_22();
  v3 = type metadata accessor for LearnedDisambiguation();
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_27();
  v49 = v5;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v6);
  v44 = (uint64_t)v42 - v7;
  v8 = sub_1C03034F0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_6_0();
  v12 = v11 - v10;
  v47 = sub_1C030364C();
  v43 = *(_QWORD *)(v47 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_19_2();
  v16 = v14 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v42 - v18;
  v20 = sub_1C030367C();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_18_25();
  v22 = v48;
  sub_1C0303670();
  if (!v22)
  {
    v42[2] = v21;
    v42[3] = v20;
    v48 = v9;
    sub_1C0303640();
    sub_1C0303610();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v16, v47);
    v23 = sub_1C0303634();
    v43 = 0;
    v25 = v23;
    OUTLINED_FUNCTION_36_18();
    v26 = *(_QWORD *)(v25 + 16);
    if (v26)
    {
      v42[0] = v25;
      v42[1] = v1;
      OUTLINED_FUNCTION_21_1();
      v28 = v25 + v27;
      v47 = *(_QWORD *)(v29 + 72);
      v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
      OUTLINED_FUNCTION_47();
      v19 = (char *)MEMORY[0x1E0DEE9D8];
      v31 = v46;
      do
      {
        v30(v12, v28, v8);
        v32 = sub_1C03034B4();
        sub_1C00F1C5C(v32, v0);
        (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v12, v8);
        v33 = OUTLINED_FUNCTION_42_12();
        if (__swift_getEnumTagSinglePayload(v33, v34, v31) == 1)
        {
          sub_1C0044B78((uint64_t)v0, &qword_1EF5BD008);
        }
        else
        {
          v35 = v44;
          sub_1C0150C78((uint64_t)v0, v44);
          sub_1C0150C78(v35, v49);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C004FFBC();
            v19 = v40;
          }
          v37 = *((_QWORD *)v19 + 2);
          v36 = *((_QWORD *)v19 + 3);
          if (v37 >= v36 >> 1)
          {
            OUTLINED_FUNCTION_34_1(v36);
            sub_1C004FFBC();
            v19 = v41;
          }
          *((_QWORD *)v19 + 2) = v37 + 1;
          OUTLINED_FUNCTION_21_1();
          sub_1C0150C78(v49, (uint64_t)&v19[v38 + *(_QWORD *)(v39 + 72) * v37]);
          v31 = v46;
        }
        v28 += v47;
        --v26;
      }
      while (v26);
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = (char *)MEMORY[0x1E0DEE9D8];
    }
    OUTLINED_FUNCTION_24_16();
    swift_bridgeObjectRelease();
  }
  return v19;
}

uint64_t sub_1C01689CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD888);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_6_0();
  v9 = v8 - v7;
  v10 = OUTLINED_FUNCTION_38_16();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_6_0();
  v14 = v13 - v12;
  sub_1C0303670();
  OUTLINED_FUNCTION_79_1(v9, 0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  v15(v14, v9, v10);
  v15(a3, v14, v10);
  v16 = OUTLINED_FUNCTION_16_25();
  v17 = (_QWORD *)(a3 + *(int *)(v16 + 20));
  *v17 = a1;
  v17[1] = a2;
  *(_BYTE *)(a3 + *(int *)(v16 + 24)) = 1;
  return __swift_storeEnumTagSinglePayload(a3, 0, 1, v16);
}

uint64_t sub_1C0168BA4(int a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  _QWORD v52[2];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v52[0] = OUTLINED_FUNCTION_16_25();
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_6_0();
  v52[1] = v5 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD008);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_17_22();
  v7 = type metadata accessor for LearnedDisambiguation();
  v56 = *(_QWORD *)(v7 - 8);
  v57 = v7;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_27();
  v58 = v9;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v10);
  v55 = (uint64_t)v52 - v11;
  v12 = OUTLINED_FUNCTION_37_14();
  v59 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_6_0();
  v16 = v15 - v14;
  v17 = sub_1C0303694();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_6_0();
  v21 = v20 - v19;
  v22 = sub_1C030364C();
  v53 = *(_QWORD *)(v22 - 8);
  v54 = v22;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_19_2();
  v26 = v24 - v25;
  MEMORY[0x1E0C80A78](v27);
  sub_1C0169170(a1);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v21, *MEMORY[0x1E0DA4298], v17);
  sub_1C0303628();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v21, v17);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v26, v54);
  v28 = sub_1C0303634();
  OUTLINED_FUNCTION_30_16();
  v29 = *(_QWORD *)(v28 + 16);
  if (v29)
  {
    OUTLINED_FUNCTION_21_1();
    v31 = v28 + v30;
    v33 = *(_QWORD *)(v32 + 72);
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
    v54 = v28;
    OUTLINED_FUNCTION_47();
    v35 = MEMORY[0x1E0DEE9D8];
    v36 = v57;
    do
    {
      v34(v16, v31, v12);
      v37 = sub_1C03034B4();
      sub_1C00F1C5C(v37, v1);
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v16, v12);
      v38 = OUTLINED_FUNCTION_42_12();
      if (__swift_getEnumTagSinglePayload(v38, v39, v36) == 1)
      {
        sub_1C0044B78((uint64_t)v1, &qword_1EF5BD008);
      }
      else
      {
        v40 = v55;
        sub_1C0150C78((uint64_t)v1, v55);
        sub_1C0150C78(v40, v58);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C004FFBC();
          v35 = v45;
        }
        v42 = *(_QWORD *)(v35 + 16);
        v41 = *(_QWORD *)(v35 + 24);
        if (v42 >= v41 >> 1)
        {
          OUTLINED_FUNCTION_34_1(v41);
          sub_1C004FFBC();
          v35 = v46;
        }
        *(_QWORD *)(v35 + 16) = v42 + 1;
        OUTLINED_FUNCTION_21_1();
        sub_1C0150C78(v58, v35 + v43 + *(_QWORD *)(v44 + 72) * v42);
        v36 = v57;
      }
      v31 += v33;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    OUTLINED_FUNCTION_14();
    v35 = MEMORY[0x1E0DEE9D8];
  }
  if (qword_1EF5B7F30 != -1)
    swift_once();
  v47 = OUTLINED_FUNCTION_9_0();
  __swift_project_value_buffer(v47, (uint64_t)qword_1EF5FC710);
  swift_bridgeObjectRetain();
  v48 = sub_1C0303B80();
  v49 = sub_1C03042E8();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v50 = 134217984;
    v60 = *(_QWORD *)(v35 + 16);
    sub_1C03044B0();
    OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v48, v49, "LearnedDisambiguationPersistentStorage: count of entries %ld", v50);
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_29();
  return v35;
}

uint64_t sub_1C0169170(int a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t);
  uint64_t v11;

  v2 = sub_1C030364C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  sub_1C0303640();
  sub_1C0303610();
  v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v6, v2);
  sub_1C0169AAC(a1);
  sub_1C0303604();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v9)(v8, v2);
}

void sub_1C016926C(int a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  os_log_type_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint8_t *v46;
  unint64_t v47;
  uint64_t v48;
  char v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int EnumTagSinglePayload;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82[2];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v89 = a2;
  v86 = OUTLINED_FUNCTION_16_25();
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_27();
  v92 = v5;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v6);
  v82[1] = (uint64_t)v82 - v7;
  v8 = sub_1C0301CFC();
  v9 = *(uint8_t **)(v8 - 8);
  v93 = v8;
  v94 = v9;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_19_2();
  v13 = v11 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v82 - v15;
  v87 = OUTLINED_FUNCTION_37_14();
  v95 = *(_QWORD *)(v87 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_27();
  v84 = v18;
  OUTLINED_FUNCTION_42();
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v82 - v21;
  MEMORY[0x1E0C80A78](v20);
  v85 = (uint64_t)v82 - v23;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v82 - v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD880);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_27();
  v83 = v28;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)v82 - v30;
  v32 = sub_1C030364C();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_18_25();
  sub_1C0169170(a1);
  v88 = v2;
  v41 = sub_1C0303634();
  v82[0] = (uint64_t)v31;
  OUTLINED_FUNCTION_22_22();
  v42 = *(_QWORD *)(v41 + 16);
  if (v42)
  {
    v43 = v95;
    v44 = v41 + ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80));
    v90 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v95 + 16);
    v91 = v44;
    v45 = v87;
    OUTLINED_FUNCTION_12((uint64_t)v26, v44, v90);
    OUTLINED_FUNCTION_47();
    v92 = v42;
    v46 = v94;
    if (v42 != 1)
    {
      v47 = 1;
      while (v47 < *(_QWORD *)(v41 + 16))
      {
        v48 = v41;
        v90((uint64_t)v22, v91 + *(_QWORD *)(v43 + 72) * v47, v45);
        sub_1C03034D8();
        sub_1C03034D8();
        v49 = sub_1C0301C78();
        v50 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v46 + 1);
        v51 = v93;
        v50(v13, v93);
        v50((uint64_t)v16, v51);
        v43 = v95;
        v52 = *(void (**)(char *, uint64_t))(v95 + 8);
        if ((v49 & 1) != 0)
        {
          v52(v26, v45);
          OUTLINED_FUNCTION_12((uint64_t)v26, (uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 32));
        }
        else
        {
          v52(v22, v45);
        }
        ++v47;
        v46 = v94;
        v41 = v48;
        if (v92 == v47)
          goto LABEL_12;
      }
      __break(1u);
      swift_once();
      v33 = OUTLINED_FUNCTION_9_0();
      v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1EF5FC710);
      OUTLINED_FUNCTION_31_16(v88, v35, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguationPersistentStorage);
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_3();
      sub_1C0303B80();
      v36 = OUTLINED_FUNCTION_34();
      if (os_log_type_enabled(v34, v36))
      {
        v37 = OUTLINED_FUNCTION_4_0();
        v38 = (_QWORD *)OUTLINED_FUNCTION_4_0();
        v97 = OUTLINED_FUNCTION_4_0();
        *(_DWORD *)v37 = 136315394;
        OUTLINED_FUNCTION_21_20();
        v96 = OUTLINED_FUNCTION_11_39();
        OUTLINED_FUNCTION_28_19();
        v39 = swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_41_4(v39, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguationPersistentStorage);
        *(_WORD *)(v37 + 12) = 2112;
        OUTLINED_FUNCTION_3();
        v40 = OUTLINED_FUNCTION_44_13();
        v96 = v40;
        OUTLINED_FUNCTION_28_19();
        *v38 = v40;
        OUTLINED_FUNCTION_44_1();
        OUTLINED_FUNCTION_44_1();
        OUTLINED_FUNCTION_38_8(&dword_1C0039000, v34, v36, "LearnedDisambiguationPersistentStorage: Could not query for %s: %@", (uint8_t *)v37);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727620);
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_5();
      }
      OUTLINED_FUNCTION_44_1();
      OUTLINED_FUNCTION_41_4(v54, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguationPersistentStorage);
      OUTLINED_FUNCTION_44_1();
      OUTLINED_FUNCTION_44_1();

      v55 = v89;
      v56 = OUTLINED_FUNCTION_5_23();
      v57 = v55;
      goto LABEL_25;
    }
LABEL_12:
    OUTLINED_FUNCTION_14();
    v53 = v82[0];
    OUTLINED_FUNCTION_12(v82[0], (uint64_t)v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 32));
    __swift_storeEnumTagSinglePayload(v53, 0, 1, v45);
  }
  else
  {
    v53 = v82[0];
    v45 = v87;
    __swift_storeEnumTagSinglePayload(v82[0], 1, 1, v87);
    v43 = v95;
  }
  OUTLINED_FUNCTION_14();
  v58 = v83;
  sub_1C016AA90(v53, v83);
  v59 = OUTLINED_FUNCTION_42_12();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v59, v60, v45);
  v62 = v84;
  v63 = v85;
  if (EnumTagSinglePayload == 1)
  {
    sub_1C0044B78(v58, &qword_1EF5BD880);
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v64 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v64, (uint64_t)qword_1EF5FC710);
    OUTLINED_FUNCTION_31_16(v88, v65, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguationPersistentStorage);
    v66 = sub_1C0303B80();
    v67 = sub_1C03042E8();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      v69 = OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v68 = 136315138;
      v97 = v69;
      v70 = OUTLINED_FUNCTION_32_15();
      v72 = OUTLINED_FUNCTION_33_16(v70, v71, &v97);
      OUTLINED_FUNCTION_43_13(v72);
      sub_1C03044B0();
      v73 = swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_41_4(v73, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguationPersistentStorage);
      OUTLINED_FUNCTION_13_0(&dword_1C0039000, v66, v67, "LearnedDisambiguationPersistentStorage: Could not query for  the most recent entry for  %s", v68);
      OUTLINED_FUNCTION_24_15();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_41_4(v79, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguationPersistentStorage);
    sub_1C0044B78(v53, &qword_1EF5BD880);
    v56 = OUTLINED_FUNCTION_5_23();
    v57 = v89;
LABEL_25:
    __swift_storeEnumTagSinglePayload((uint64_t)v57, 1, 1, v56);
    return;
  }
  OUTLINED_FUNCTION_12(v85, v58, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 32));
  if (qword_1EF5B7F30 != -1)
    swift_once();
  v74 = OUTLINED_FUNCTION_9_0();
  __swift_project_value_buffer(v74, (uint64_t)qword_1EF5FC710);
  OUTLINED_FUNCTION_12(v62, v63, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 16));
  v75 = sub_1C0303B80();
  v76 = sub_1C03042DC();
  if (os_log_type_enabled(v75, v76))
  {
    v77 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v97 = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v77 = 136315138;
    v94 = v77 + 4;
    sub_1C03034B4();
    sub_1C030370C();
    sub_1C0303D9C();
    OUTLINED_FUNCTION_14();
    v78 = OUTLINED_FUNCTION_11_39();
    OUTLINED_FUNCTION_43_13(v78);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v62, v87);
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v75, v76, "LearnedDisambiguationPersistentStorage: found the mostRecentInteraction:  %s", v77);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }
  v80 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
  v80(v62, v45);

  v81 = sub_1C03034B4();
  sub_1C00F1C5C(v81, v89);
  v80(v63, v45);
  sub_1C0044B78(v53, &qword_1EF5BD880);
}

uint64_t sub_1C0169AAC(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v7 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for LearnedDisambiguationPersistentStorage() + 20));
  swift_bridgeObjectRetain();
  sub_1C0303FD0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v3 = swift_allocObject();
  v4 = MEMORY[0x1E0DEE0F8];
  *(_OWORD *)(v3 + 16) = xmmword_1C0305B60;
  v5 = MEMORY[0x1E0DEE168];
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = v5;
  *(_DWORD *)(v3 + 32) = a1;
  sub_1C0303ED4();
  sub_1C0303FD0();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C0169B64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v3[8] = OUTLINED_FUNCTION_16_25();
  v3[9] = OUTLINED_FUNCTION_3_37();
  v3[10] = OUTLINED_FUNCTION_5_23();
  v3[11] = OUTLINED_FUNCTION_3_37();
  v4 = OUTLINED_FUNCTION_37_14();
  v3[12] = v4;
  v3[13] = *(_QWORD *)(v4 - 8);
  v3[14] = OUTLINED_FUNCTION_3_37();
  v5 = sub_1C0303700();
  v3[15] = v5;
  v3[16] = *(_QWORD *)(v5 - 8);
  v3[17] = OUTLINED_FUNCTION_3_37();
  v6 = sub_1C0303694();
  v3[18] = v6;
  v3[19] = *(_QWORD *)(v6 - 8);
  v3[20] = OUTLINED_FUNCTION_3_37();
  v7 = sub_1C03023E0();
  v3[21] = v7;
  v3[22] = *(_QWORD *)(v7 - 8);
  v3[23] = OUTLINED_FUNCTION_3_37();
  return swift_task_switch();
}

uint64_t sub_1C0169C34()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[2];

  v1 = *(_QWORD **)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = (_QWORD *)(v2 + *(int *)(*(_QWORD *)(v0 + 64) + 20));
  if (*v1 == *v3 && v1[1] == v3[1])
  {
    v35 = *(_QWORD *)(v0 + 64);
    goto LABEL_8;
  }
  if ((sub_1C0304A08() & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 56);
    v35 = *(_QWORD *)(v0 + 64);
LABEL_8:
    v5 = *(_QWORD *)(v0 + 184);
    v6 = *(_QWORD *)(v0 + 160);
    v28 = *(_QWORD *)(v0 + 176);
    v29 = *(_QWORD *)(v0 + 168);
    v31 = *(_QWORD *)(v0 + 152);
    v32 = *(_QWORD *)(v0 + 144);
    v34 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 96);
    v33 = *(_QWORD *)(v0 + 104);
    v30 = *(_QWORD *)(v0 + 48);
    swift_allocBox();
    v9 = v8;
    sub_1C03034E4();
    swift_bridgeObjectRetain();
    sub_1C0303490();
    sub_1C03034A8();
    swift_bridgeObjectRetain();
    sub_1C03023F8();
    v10 = sub_1C03023D4();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v5, v29);
    sub_1C0169AAC(v10);
    sub_1C030349C();
    sub_1C00EF570();
    sub_1C03034C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v6, v30, v32);
    sub_1C03034CC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v34, v9, v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD878);
    sub_1C0303DB4();
    sub_1C03036DC();
    if (*(_BYTE *)(v2 + *(int *)(v35 + 24)) == 1)
    {
      swift_retain();
      sub_1C03036E8();
      swift_release();
    }
    else
    {
      sub_1C03036F4();
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    swift_release();
    goto LABEL_17;
  }
  if (qword_1EF5B7F30 != -1)
    swift_once();
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 72);
  v13 = *(_QWORD *)(v0 + 56);
  v14 = *(_QWORD *)(v0 + 40);
  v15 = OUTLINED_FUNCTION_9_0();
  v16 = __swift_project_value_buffer(v15, (uint64_t)qword_1EF5FC710);
  sub_1C00655E8(v14, v11, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguation);
  sub_1C00655E8(v13, v12, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguationPersistentStorage);
  v17 = v16;
  sub_1C0303B80();
  v18 = OUTLINED_FUNCTION_34();
  v19 = os_log_type_enabled(v16, v18);
  v20 = *(uint64_t **)(v0 + 88);
  v21 = *(_QWORD *)(v0 + 72);
  if (v19)
  {
    v22 = OUTLINED_FUNCTION_4_0();
    v36[0] = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v22 = 136315394;
    v24 = *v20;
    v23 = v20[1];
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_1C003E6D8(v24, v23, v36);
    sub_1C03044B0();
    OUTLINED_FUNCTION_29();
    sub_1C003DD84((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguation);
    *(_WORD *)(v22 + 12) = 2080;
    v25 = OUTLINED_FUNCTION_32_15();
    *(_QWORD *)(v0 + 24) = OUTLINED_FUNCTION_33_16(v25, v26, v36);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    sub_1C003DD84(v21, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguationPersistentStorage);
    OUTLINED_FUNCTION_38_8(&dword_1C0039000, v17, v18, "LearnedDisambiguationPersistentStorage: Ignoring mismatched useCase [%s]!=[%s]", (uint8_t *)v22);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }
  sub_1C003DD84(*(_QWORD *)(v0 + 88), (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguation);
  sub_1C003DD84(v21, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguationPersistentStorage);

LABEL_17:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1C016A1E4(void *a1, char a2)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD *v20;
  id v21;
  NSObject *oslog;
  uint64_t v23;
  uint64_t v24;

  if ((a2 & 1) != 0)
  {
    v14 = a1;
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v15 = sub_1C0303B98();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EF5FC710);
    v16 = a1;
    v17 = a1;
    oslog = sub_1C0303B80();
    v18 = sub_1C03042F4();
    if (os_log_type_enabled(oslog, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v19 = 138412290;
      v21 = a1;
      v23 = _swift_stdlib_bridgeErrorToNSError();
      sub_1C03044B0();
      *v20 = v23;
      sub_1C00A6AAC(a1, 1);
      sub_1C00A6AAC(a1, 1);
      _os_log_impl(&dword_1C0039000, oslog, v18, "LearnedDisambiguationPersistentStorage: Donation failed with %@.", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727620);
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v20, -1, -1);
      MEMORY[0x1C3B98378](v19, -1, -1);

      sub_1C00A6AAC(a1, 1);
    }
    else
    {
      sub_1C00A6AAC(a1, 1);
      sub_1C00A6AAC(a1, 1);

    }
  }
  else
  {
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v2 = sub_1C0303B98();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EF5FC710);
    v3 = sub_1C0303B80();
    v4 = sub_1C03042E8();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1C0039000, v3, v4, "LearnedDisambiguationPersistentStorage: Donation succeeded.", v5, 2u);
      MEMORY[0x1C3B98378](v5, -1, -1);
    }

    swift_retain_n();
    v6 = sub_1C0303B80();
    v7 = sub_1C03042E8();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v24 = v9;
      *(_DWORD *)v8 = 136315138;
      sub_1C03034F0();
      swift_projectBox();
      swift_beginAccess();
      sub_1C03034B4();
      swift_endAccess();
      sub_1C030370C();
      v10 = sub_1C0303D9C();
      v12 = v11;
      swift_bridgeObjectRelease();
      sub_1C003E6D8(v10, v12, &v24);
      sub_1C03044B0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0039000, v6, v7, "LearnedDisambiguationPersistentStorage: Donated learning: %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v9, -1, -1);
      MEMORY[0x1C3B98378](v8, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for LearnedDisambiguationPersistentStorage(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C030367C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for LearnedDisambiguationPersistentStorage(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C030367C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LearnedDisambiguationPersistentStorage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_1C030367C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LearnedDisambiguationPersistentStorage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1C030367C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for LearnedDisambiguationPersistentStorage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C030367C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for LearnedDisambiguationPersistentStorage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1C030367C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for LearnedDisambiguationPersistentStorage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C016A8D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_38_16();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LearnedDisambiguationPersistentStorage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C016A95C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_38_16();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for LearnedDisambiguationPersistentStorage()
{
  uint64_t result;

  result = qword_1EF5BD830;
  if (!qword_1EF5BD830)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C016AA08()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C030367C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1C016AA84(void *a1, char a2)
{
  sub_1C016A1E4(a1, a2 & 1);
}

uint64_t sub_1C016AA90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD880);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_11_39()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1C003E6D8(v0, v1, (uint64_t *)(v2 - 96));
}

uint64_t OUTLINED_FUNCTION_16_25()
{
  return type metadata accessor for LearnedDisambiguationPersistentStorage();
}

uint64_t OUTLINED_FUNCTION_17_22()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_21_20()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_22_22()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_24_16()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 144) + 8))(v0, *(_QWORD *)(v1 - 136));
}

uint64_t OUTLINED_FUNCTION_29_19()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_30_16()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_32_15()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_37_14()
{
  return sub_1C03034F0();
}

uint64_t OUTLINED_FUNCTION_42_12()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_43_13(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t sub_1C016ABAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v23 = (uint64_t)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v20 - v10;
  v12 = MEMORY[0x1E0DEE9D8];
  v25 = MEMORY[0x1E0DEE9D8];
  v22 = *(_QWORD *)(a1 + 16);
  if (v22)
  {
    v20[0] = v2;
    v13 = 0;
    v20[1] = a2;
    v21 = a1;
    while (v13 < *(_QWORD *)(a1 + 16))
    {
      v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v15 = *(_QWORD *)(v6 + 72);
      sub_1C010E4E8(a1 + v14 + v15 * v13, (uint64_t)v11);
      sub_1C020021C();
      sub_1C022EAFC(&v24, v16);
      if ((v17 & 1) != 0)
      {
        sub_1C00E5EFC((uint64_t)v11, v23);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1C00B1738();
        v18 = v25;
        v19 = *(_QWORD *)(v25 + 16);
        if (v19 >= *(_QWORD *)(v25 + 24) >> 1)
        {
          sub_1C00B1738();
          v18 = v25;
        }
        *(_QWORD *)(v18 + 16) = v19 + 1;
        result = sub_1C00E5EFC(v23, v18 + v14 + v19 * v15);
        a1 = v21;
      }
      else
      {
        result = sub_1C010E530((uint64_t)v11);
      }
      if (v22 == ++v13)
      {
        v12 = v25;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_1C016AD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[8];
  uint64_t v34;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v32 = (uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v27 - v10);
  v12 = MEMORY[0x1E0DEE9D8];
  v34 = MEMORY[0x1E0DEE9D8];
  v31 = *(_QWORD *)(a1 + 16);
  if (v31)
  {
    v28 = v2;
    v13 = 0;
    v29 = v6;
    v30 = a2;
    while (v13 < *(_QWORD *)(a1 + 16))
    {
      v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v15 = *(_QWORD *)(v6 + 72);
      sub_1C010E4E8(a1 + v14 + v15 * v13, (uint64_t)v11);
      v16 = *v11;
      v17 = v11[1];
      swift_bridgeObjectRetain();
      sub_1C022D204((uint64_t)v33, v16, v17, v18, v19, v20, v21, v22, v27, v28);
      LOBYTE(v17) = v23;
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0)
      {
        v24 = a1;
        sub_1C00E5EFC((uint64_t)v11, v32);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1C00B1738();
        v25 = v34;
        v26 = *(_QWORD *)(v34 + 16);
        if (v26 >= *(_QWORD *)(v34 + 24) >> 1)
        {
          sub_1C00B1738();
          v25 = v34;
        }
        *(_QWORD *)(v25 + 16) = v26 + 1;
        result = sub_1C00E5EFC(v32, v25 + v14 + v26 * v15);
        a1 = v24;
        v6 = v29;
      }
      else
      {
        result = sub_1C010E530((uint64_t)v11);
      }
      if (v31 == ++v13)
      {
        v12 = v34;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

void sub_1C016AF64(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[8];
  uint64_t v25;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = 0;
    v4 = a1 + 40;
    v21 = v2 - 1;
    v5 = MEMORY[0x1E0DEE9D8];
    v22 = a1 + 40;
    do
    {
      v23 = v5;
      v6 = (uint64_t *)(v4 + 16 * v3);
      v7 = v3;
      while (1)
      {
        if (v7 >= *(_QWORD *)(a1 + 16))
        {
          __break(1u);
          return;
        }
        v9 = *(v6 - 1);
        v8 = *v6;
        v3 = v7 + 1;
        swift_bridgeObjectRetain_n();
        sub_1C022D204((uint64_t)v24, v9, v8, v10, v11, v12, v13, v14, v21, v22);
        v16 = v15;
        swift_bridgeObjectRelease();
        if ((v16 & 1) != 0)
          break;
        swift_bridgeObjectRelease();
        v6 += 2;
        ++v7;
        if (v2 == v3)
          goto LABEL_13;
      }
      v5 = v23;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v25 = v23;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C00B1764();
        v5 = v25;
      }
      v18 = *(_QWORD *)(v5 + 16);
      v19 = v18 + 1;
      if (v18 >= *(_QWORD *)(v5 + 24) >> 1)
      {
        sub_1C00B1764();
        v19 = v18 + 1;
        v5 = v25;
      }
      *(_QWORD *)(v5 + 16) = v19;
      v20 = v5 + 16 * v18;
      *(_QWORD *)(v20 + 32) = v9;
      *(_QWORD *)(v20 + 40) = v8;
      v4 = v22;
    }
    while (v21 != v7);
  }
LABEL_13:
  swift_bridgeObjectRelease();
}

uint64_t sub_1C016B0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char v20;
  char v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;

  v35 = a2;
  v4 = sub_1C0301D5C();
  v34 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v33 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v32 = (char *)v26 - v7;
  v8 = sub_1C0303AD8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v31 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v26 - v13;
  v15 = MEMORY[0x1E0DEE9D8];
  v37 = MEMORY[0x1E0DEE9D8];
  v30 = *(_QWORD *)(a1 + 16);
  if (v30)
  {
    v26[1] = v2;
    v27 = v8;
    v16 = 0;
    v28 = a1;
    v29 = v4;
    while (v16 < *(_QWORD *)(a1 + 16))
    {
      v17 = *(_QWORD *)(v9 + 72);
      v36 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v14, a1 + v36 + v17 * v16, v8);
      sub_1C0303AC0();
      v18 = v14;
      v19 = v32;
      sub_1C022DB14();
      v21 = v20;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v29);
      if ((v21 & 1) != 0)
      {
        v22 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
        v22(v31, v18, v8);
        v23 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C00B1AC8();
          v23 = v37;
        }
        v24 = *(_QWORD *)(v23 + 16);
        if (v24 >= *(_QWORD *)(v23 + 24) >> 1)
        {
          sub_1C00B1AC8();
          v23 = v37;
        }
        *(_QWORD *)(v23 + 16) = v24 + 1;
        v25 = v23 + v36 + v24 * v17;
        v8 = v27;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v22)(v25, v31, v27);
        v37 = v23;
        a1 = v28;
        v14 = v18;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v18, v8);
        v14 = v18;
      }
      if (v30 == ++v16)
      {
        v15 = v37;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return v15;
  }
  return result;
}

uint64_t sub_1C016B388(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;
  _BYTE v42[8];
  uint64_t v43;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v2 = 0;
    v3 = result + 105;
    v34 = *(_QWORD *)(result + 16);
    v31 = v1 - 1;
    v4 = MEMORY[0x1E0DEE9D8];
    v41 = result;
    v32 = result + 105;
    do
    {
      v33 = v4;
      v5 = (char *)(v3 + 80 * v2);
      while (1)
      {
        if (v2 >= *(_QWORD *)(result + 16))
        {
          __break(1u);
          return result;
        }
        v6 = *(_QWORD *)(v5 - 65);
        v35 = *(_QWORD *)(v5 - 49);
        v36 = *(_QWORD *)(v5 - 73);
        v7 = *(_QWORD *)(v5 - 41);
        v37 = *(_QWORD *)(v5 - 33);
        v8 = *(_QWORD *)(v5 - 25);
        v9 = *(_QWORD *)(v5 - 17);
        v10 = *(_QWORD *)(v5 - 9);
        v39 = *(v5 - 1);
        v40 = *(v5 - 57);
        v11 = v2 + 1;
        v38 = *v5;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        sub_1C022D204((uint64_t)v42, v9, v10, v12, v13, v14, v15, v16, v28, v29);
        v18 = v17;
        swift_bridgeObjectRelease();
        if ((v18 & 1) != 0)
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v5 += 80;
        ++v2;
        result = v41;
        if (v34 == v11)
        {
          v4 = v33;
          goto LABEL_15;
        }
      }
      v30 = v2;
      v29 = v2 + 1;
      v4 = v33;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v43 = v33;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C00B1E80();
        v4 = v43;
      }
      v20 = v36;
      v22 = v39;
      v21 = v40;
      v23 = v9;
      v24 = v38;
      v25 = *(_QWORD *)(v4 + 16);
      v26 = v25 + 1;
      if (v25 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        sub_1C00B1E80();
        v26 = v25 + 1;
        v24 = v38;
        v22 = v39;
        v23 = v9;
        v21 = v40;
        v20 = v36;
        v4 = v43;
      }
      *(_QWORD *)(v4 + 16) = v26;
      v27 = v4 + 80 * v25;
      *(_QWORD *)(v27 + 32) = v20;
      *(_QWORD *)(v27 + 40) = v6;
      *(_BYTE *)(v27 + 48) = v21;
      *(_QWORD *)(v27 + 56) = v35;
      *(_QWORD *)(v27 + 64) = v7;
      *(_QWORD *)(v27 + 72) = v37;
      *(_QWORD *)(v27 + 80) = v8;
      *(_QWORD *)(v27 + 88) = v23;
      *(_QWORD *)(v27 + 96) = v10;
      *(_BYTE *)(v27 + 104) = v22;
      *(_BYTE *)(v27 + 105) = v24;
      ++v2;
      result = v41;
      v3 = v32;
    }
    while (v31 != v30);
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
  }
LABEL_15:
  swift_bridgeObjectRelease();
  return v4;
}

void sub_1C016B5D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(a1 + 16) > 1uLL)
  {
    sub_1C0301D5C();
    sub_1C00A81F4();
    v2 = sub_1C0304258();
    v1 = OUTLINED_FUNCTION_44();
    sub_1C016B0EC(v1, (uint64_t)&v2);
    OUTLINED_FUNCTION_2_52();
  }
  else
  {
    OUTLINED_FUNCTION_44();
  }
  OUTLINED_FUNCTION_36_0();
}

void sub_1C016B648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(a1 + 16) > 1uLL)
  {
    sub_1C0304258();
    v1 = OUTLINED_FUNCTION_44();
    OUTLINED_FUNCTION_3_62(v1, v2);
    OUTLINED_FUNCTION_2_52();
  }
  else
  {
    OUTLINED_FUNCTION_44();
  }
  OUTLINED_FUNCTION_36_0();
}

void sub_1C016B6A8(uint64_t a1)
{
  sub_1C016B6C4(a1);
}

void sub_1C016B6C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(a1 + 16) > 1uLL)
  {
    sub_1C0304258();
    v1 = OUTLINED_FUNCTION_44();
    OUTLINED_FUNCTION_3_62(v1, v2);
    OUTLINED_FUNCTION_2_52();
  }
  else
  {
    OUTLINED_FUNCTION_44();
  }
  OUTLINED_FUNCTION_36_0();
}

uint64_t OUTLINED_FUNCTION_2_52()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_3_62(uint64_t a1, uint64_t a2, ...)
{
  uint64_t (*v2)(uint64_t, char *);
  va_list va;

  va_start(va, a2);
  return v2(a1, va);
}

uint64_t sub_1C016B730()
{
  uint64_t v0;
  char v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  char v15;
  char v16;

  if (sub_1C0302CB0())
  {
    v0 = OUTLINED_FUNCTION_3_35();
    v2 = v1;
    OUTLINED_FUNCTION_5_3();
    if ((v2 & 1) != 0)
      v3 = 2;
    else
      v3 = v0 > 11;
    v4 = (v2 & 1) != 0;
  }
  else
  {
    v0 = 0;
    v4 = 1;
    v3 = 2;
  }
  if (sub_1C03030DC())
  {
    v5 = OUTLINED_FUNCTION_3_35();
    v7 = v6;
    OUTLINED_FUNCTION_5_3();
    v8 = v7 & 1;
  }
  else
  {
    v5 = 0;
    v8 = 1;
  }
  if (sub_1C0302D64())
  {
    v9 = OUTLINED_FUNCTION_3_35();
    v11 = v10;
    OUTLINED_FUNCTION_5_3();
    v12 = v11 & 1;
  }
  else
  {
    v9 = 0;
    v12 = 1;
  }
  v16 = v3;
  v15 = 3;
  if (sub_1C03030AC())
  {
    v13 = UsoEntity_common_DateTimeRange.toDateTimeRange()();
    swift_release();
  }
  else
  {
    v13 = 0;
  }
  type metadata accessor for DateTime.Time();
  swift_allocObject();
  return DateTime.Time.init(withHour:minute:second:meridiem:definedValue:occurringIn:setByUser:)(v0, v4, v5, v8, v9, v12, &v16, &v15, v13, 1);
}

uint64_t DateTime.DateTimeRange.DefinedDateTimeRange.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  v2 = 0;
  v3 = 20;
  switch(result)
  {
    case 0:
      goto LABEL_22;
    case 1:
      v2 = 1;
      goto LABEL_22;
    case 2:
      v2 = 2;
      goto LABEL_22;
    case 3:
      v2 = 3;
      goto LABEL_22;
    case 4:
      v2 = 4;
      goto LABEL_22;
    case 5:
      v2 = 5;
      goto LABEL_22;
    case 6:
      v2 = 6;
      goto LABEL_22;
    case 7:
      v2 = 7;
      goto LABEL_22;
    case 8:
      v2 = 8;
      goto LABEL_22;
    case 9:
      v2 = 9;
      goto LABEL_22;
    case 10:
      v2 = 10;
      goto LABEL_22;
    case 11:
      v2 = 11;
      goto LABEL_22;
    case 12:
      v2 = 12;
      goto LABEL_22;
    case 13:
      v2 = 13;
      goto LABEL_22;
    case 14:
      v2 = 14;
      goto LABEL_22;
    case 15:
      v2 = 15;
      goto LABEL_22;
    case 16:
      v2 = 16;
      goto LABEL_22;
    case 17:
      v2 = 17;
      goto LABEL_22;
    case 18:
      v2 = 18;
      goto LABEL_22;
    case 19:
      v2 = 19;
LABEL_22:
      v3 = v2;
      break;
    case 20:
      break;
    case 21:
      v3 = 21;
      break;
    case 22:
      v3 = 22;
      break;
    case 23:
      v3 = 23;
      break;
    case 24:
      v3 = 24;
      break;
    case 25:
      v3 = 25;
      break;
    case 26:
      v3 = 26;
      break;
    case 27:
      v3 = 27;
      break;
    case 28:
      v3 = 28;
      break;
    case 29:
      v3 = 29;
      break;
    case 30:
      v3 = 30;
      break;
    case 31:
      v3 = 31;
      break;
    case 32:
      v3 = 32;
      break;
    case 33:
      v3 = 33;
      break;
    case 34:
      v3 = 34;
      break;
    case 35:
      v3 = 35;
      break;
    case 36:
      v3 = 36;
      break;
    case 37:
      v3 = 37;
      break;
    default:
      v3 = 38;
      break;
  }
  *a2 = v3;
  return result;
}

uint64_t DateTime.DateTimeRange.DefinedDateTimeRange.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1C016B9F8()
{
  unint64_t result;

  result = qword_1EF5BD890;
  if (!qword_1EF5BD890)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.DateTimeRange.DefinedDateTimeRange, &type metadata for DateTime.DateTimeRange.DefinedDateTimeRange);
    atomic_store(result, (unint64_t *)&qword_1EF5BD890);
  }
  return result;
}

uint64_t sub_1C016BA34@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return DateTime.DateTimeRange.DefinedDateTimeRange.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C016BA3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DateTime.DateTimeRange.DefinedDateTimeRange.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C016BA60()
{
  sub_1C016BC4C();
  return sub_1C03040FC();
}

uint64_t sub_1C016BABC()
{
  sub_1C016BC4C();
  return sub_1C03040D8();
}

uint64_t _s20DefinedDateTimeRangeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xDB)
  {
    if (a2 + 37 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 37) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 38;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x26;
  v5 = v6 - 38;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s20DefinedDateTimeRangeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 37 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 37) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xDB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xDA)
    return ((uint64_t (*)(void))((char *)&loc_1C016BBDC + 4 * byte_1C03101BB[v4]))();
  *a1 = a2 + 37;
  return ((uint64_t (*)(void))((char *)sub_1C016BC10 + 4 * byte_1C03101B6[v4]))();
}

uint64_t sub_1C016BC10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C016BC18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C016BC20);
  return result;
}

uint64_t sub_1C016BC2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C016BC34);
  *(_BYTE *)result = a2 + 37;
  return result;
}

uint64_t sub_1C016BC38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C016BC40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1C016BC4C()
{
  unint64_t result;

  result = qword_1EF5BD898;
  if (!qword_1EF5BD898)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.DateTimeRange.DefinedDateTimeRange, &type metadata for DateTime.DateTimeRange.DefinedDateTimeRange);
    atomic_store(result, (unint64_t *)&qword_1EF5BD898);
  }
  return result;
}

uint64_t ContactRelationshipQuery.init(label:fromContact:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _BYTE v7[264];
  _BYTE v8[264];
  _BYTE v9[264];

  OUTLINED_FUNCTION_32_16();
  v3 = v2;
  sub_1C016BD2C(v4, (uint64_t)v8);
  sub_1C016BD2C((uint64_t)v8, (uint64_t)v9);
  result = sub_1C00BD188((uint64_t)v9);
  if ((_DWORD)result == 1)
  {
    v6 = 0;
  }
  else
  {
    sub_1C016BD2C((uint64_t)v8, (uint64_t)v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD8A0);
    v6 = swift_allocObject();
    result = (uint64_t)OUTLINED_FUNCTION_27_0((void *)(v6 + 16), v7);
  }
  *v3 = v6;
  v3[1] = v1;
  v3[2] = v0;
  return result;
}

uint64_t sub_1C016BD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC860);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C016BD74(const void *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[23];
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;

  OUTLINED_FUNCTION_27_0(v11, a1);
  v1 = sub_1C0049AF8() & 1;
  if (v12)
  {
    if ((v12 & 0x2000000000000000) != 0 ? HIBYTE(v12) & 0xF : v11[22] & 0xFFFFFFFFFFFFLL)
      v1 |= 2uLL;
  }
  v3 = v15;
  if (v15)
  {
    v5 = v16;
    v4 = v17;
    v7 = v13;
    v6 = v14;
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_65();
    sub_1C0040644(v11);
    v8 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0)
      v8 = v6 & 0xFFFFFFFFFFFFLL;
    if (v8)
      v1 |= 4uLL;
    sub_1C00407A4(v7, v6, v3);
    v9 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0)
      v9 = v5 & 0xFFFFFFFFFFFFLL;
    if (v9)
      return v1 | 8;
  }
  else
  {
    sub_1C0040644(v11);
  }
  return v1;
}

void sub_1C016BE78(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  char v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  _QWORD v66[2];
  char v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v28 = *(_QWORD *)(a1 + 40);
  v29 = *(_QWORD *)a1;
  v19 = *(_QWORD *)(a1 + 32);
  v20 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 64);
  v24 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 80);
  v30 = *(_QWORD *)(a1 + 72);
  v31 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 128);
  v18 = *(_QWORD *)(a1 + 120);
  v9 = *(_QWORD *)(a1 + 144);
  v32 = *(_QWORD *)(a1 + 136);
  v33 = *(_QWORD *)(a1 + 104);
  v10 = *(_QWORD **)(a1 + 216);
  if (v10[2])
  {
    v16 = v10[6];
    v27 = v10[7];
    swift_bridgeObjectRetain();
  }
  else
  {
    v16 = 0;
    v27 = 0;
  }
  v11 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Contact() + 80));
  if (*(_QWORD *)(v11 + 16))
  {
    v26 = *(unsigned __int8 *)(v11 + 48);
    v12 = *(_QWORD *)(v11 + 64);
    v25 = *(_QWORD *)(v11 + 56);
    v13 = *(_QWORD *)(v11 + 80);
    v22 = *(_QWORD *)(v11 + 72);
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_9_2();
    v23 = v12;
    OUTLINED_FUNCTION_74_1();
    v21 = v13;
    OUTLINED_FUNCTION_2_1();
    sub_1C017111C(a1);
    sub_1C00407A4(0, 0, 0);
    v14 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_9_2();
    sub_1C017111C(a1);
    v25 = 0;
    v26 = 0;
    v22 = 0;
    v23 = 0;
    v14 = 0;
    v21 = 0;
  }
  v15 = v14;
  v34[0] = v29;
  v34[1] = v3;
  v35 = v4 & 1;
  v36 = 0;
  v37 = 0xE000000000000000;
  v38 = v31;
  v39 = v19;
  v40 = v28;
  v41 = v20;
  v42 = v24;
  v43 = v5;
  v44 = v30;
  v45 = v6;
  v46 = 0;
  v47 = 0xE000000000000000;
  v48 = v33;
  v49 = v7;
  v50 = v18;
  v51 = v8;
  v52 = v32;
  v53 = v9;
  v54 = 0;
  v55 = v16;
  v56 = v27;
  v57 = v26;
  v58 = v25;
  v59 = v23;
  v60 = v14;
  v61 = v22;
  v62 = v21;
  v63 = MEMORY[0x1E0DEE9D8];
  v64 = 1;
  v65 = 0;
  sub_1C003F648(v34);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_27_0(a2, v34);
  v66[0] = v29;
  v66[1] = v3;
  v67 = v4 & 1;
  v68 = 0;
  v69 = 0xE000000000000000;
  v70 = v31;
  v71 = v19;
  v72 = v28;
  v73 = v20;
  v74 = v24;
  v75 = v5;
  v76 = v30;
  v77 = v6;
  v78 = 0;
  v79 = 0xE000000000000000;
  v80 = v33;
  v81 = v7;
  v82 = v18;
  v83 = v8;
  v84 = v32;
  v85 = v9;
  v86 = 0;
  v87 = v16;
  v88 = v27;
  v89 = v26;
  v90 = v25;
  v91 = v23;
  v92 = v15;
  v93 = v22;
  v94 = v21;
  v95 = MEMORY[0x1E0DEE9D8];
  v96 = 1;
  v97 = 0;
  sub_1C0040644(v66);
  OUTLINED_FUNCTION_1();
}

void ContactQuery.id.getter()
{
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_189();
  OUTLINED_FUNCTION_9();
}

uint64_t (*ContactQuery.id.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ContactQuery.isMe.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t (*ContactQuery.isMe.modify())(_QWORD)
{
  return nullsub_1;
}

void ContactQuery.fullName.getter()
{
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_189();
  OUTLINED_FUNCTION_9();
}

void ContactQuery.fullName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_32_16();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v0;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*ContactQuery.fullName.modify())(_QWORD)
{
  return nullsub_1;
}

void ContactQuery.namePrefix.getter()
{
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_189();
  OUTLINED_FUNCTION_9();
}

uint64_t (*ContactQuery.namePrefix.modify())(_QWORD)
{
  return nullsub_1;
}

void ContactQuery.givenName.getter()
{
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_189();
  OUTLINED_FUNCTION_9();
}

uint64_t (*ContactQuery.givenName.modify())(_QWORD)
{
  return nullsub_1;
}

void ContactQuery.middleName.getter()
{
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_189();
  OUTLINED_FUNCTION_9();
}

uint64_t (*ContactQuery.middleName.modify())(_QWORD)
{
  return nullsub_1;
}

void ContactQuery.familyName.getter()
{
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_189();
  OUTLINED_FUNCTION_9();
}

uint64_t (*ContactQuery.familyName.modify())(_QWORD)
{
  return nullsub_1;
}

void ContactQuery.previousFamilyName.getter()
{
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_189();
  OUTLINED_FUNCTION_9();
}

void ContactQuery.previousFamilyName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_32_16();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 104) = v2;
  *(_QWORD *)(v1 + 112) = v0;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*ContactQuery.previousFamilyName.modify())(_QWORD)
{
  return nullsub_1;
}

void ContactQuery.nameSuffix.getter()
{
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_189();
  OUTLINED_FUNCTION_9();
}

uint64_t (*ContactQuery.nameSuffix.modify())(_QWORD)
{
  return nullsub_1;
}

void ContactQuery.nickname.getter()
{
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_189();
  OUTLINED_FUNCTION_9();
}

uint64_t (*ContactQuery.nickname.modify())(_QWORD)
{
  return nullsub_1;
}

void ContactQuery.organizationName.getter()
{
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_189();
  OUTLINED_FUNCTION_9();
}

void ContactQuery.organizationName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_32_16();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 152) = v2;
  *(_QWORD *)(v1 + 160) = v0;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*ContactQuery.organizationName.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ContactQuery.relationship.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[21];
  v3 = v1[22];
  v4 = v1[23];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return sub_1C003F770(v2, v3, v4);
}

__n128 ContactQuery.relationship.setter(__n128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;

  v4 = *a1;
  v2 = a1[1].n128_i64[0];
  sub_1C0040774(v1[21], v1[22], v1[23]);
  result = v4;
  *(__n128 *)(v1 + 21) = v4;
  v1[23] = v2;
  return result;
}

uint64_t (*ContactQuery.relationship.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ContactQuery.handle.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1[24];
  v3 = v1[25];
  v4 = v1[26];
  v5 = v1[27];
  v6 = v1[28];
  v7 = v1[29];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_1C003F79C(v2, v3, v4);
}

__n128 ContactQuery.handle.setter(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;

  v5 = (__n128)a1[1];
  v6 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  sub_1C00407A4(v1[24], v1[25], v1[26]);
  result = v5;
  *((_OWORD *)v1 + 12) = v6;
  *((__n128 *)v1 + 13) = v5;
  v1[28] = v2;
  v1[29] = v3;
  return result;
}

uint64_t (*ContactQuery.handle.modify())(_QWORD)
{
  return nullsub_1;
}

void ContactQuery.ontologySource.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 248);
}

_BYTE *ContactQuery.ontologySource.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 248) = *result;
  return result;
}

uint64_t (*ContactQuery.ontologySource.modify())(_QWORD)
{
  return nullsub_1;
}

void __swiftcall ContactHandleQuery.init(type:label:value:)(SiriInference::ContactHandleQuery *__return_ptr retstr, SiriInference::ContactHandle::HandleType type, Swift::String label, Swift::String value)
{
  retstr->type = *(_BYTE *)type;
  retstr->label = label;
  retstr->normalizedLabels._rawValue = (void *)MEMORY[0x1E0DEE9D8];
  retstr->value = value;
}

uint64_t ContactRelationshipQuery.description.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  if (*v0)
    sub_1C016DABC();
  OUTLINED_FUNCTION_113_0();
  if (v1)
  {
    OUTLINED_FUNCTION_78_5();
    OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_65_5();
    OUTLINED_FUNCTION_18();
  }
  OUTLINED_FUNCTION_65_5();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_51_10();
  if (v2)
  {
    OUTLINED_FUNCTION_10_42();
    OUTLINED_FUNCTION_33();
  }
  else
  {
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_43_14();
  }
  OUTLINED_FUNCTION_10_42();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_60_1();
  return 40;
}

uint64_t ContactHandleQuery.description.getter()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v0[1];
  v1 = v0[2];
  v3 = v0[3];
  sub_1C03047B0();
  sub_1C0303FD0();
  v4 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0)
    v4 = v2 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    OUTLINED_FUNCTION_78_5();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_110();
    OUTLINED_FUNCTION_17_0();
  }
  sub_1C0303FD0();
  OUTLINED_FUNCTION_28();
  if (*(_QWORD *)(v3 + 16))
  {
    sub_1C03046CC();
    swift_bridgeObjectRelease();
    v5 = OUTLINED_FUNCTION_22();
    MEMORY[0x1C3B97040](v5, MEMORY[0x1E0DEA968]);
    sub_1C0303FD0();
    OUTLINED_FUNCTION_18();
    OUTLINED_FUNCTION_17_0();
  }
  OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_51_10();
  if (v6)
  {
    OUTLINED_FUNCTION_44();
    OUTLINED_FUNCTION_10_42();
    OUTLINED_FUNCTION_33();
  }
  else
  {
    OUTLINED_FUNCTION_43_14();
  }
  OUTLINED_FUNCTION_10_42();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_60_1();
  return 0;
}

uint64_t sub_1C016C820(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  char v18;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1699574633 && a2 == 0xE400000000000000;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x656D614E6C6C7566 && a2 == 0xE800000000000000;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x66657250656D616ELL && a2 == 0xEA00000000007869;
        if (v8 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6D614E6E65766967 && a2 == 0xE900000000000065;
          if (v9 || (sub_1C0304A08() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x614E656C6464696DLL && a2 == 0xEA0000000000656DLL;
            if (v10 || (sub_1C0304A08() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x614E796C696D6166 && a2 == 0xEA0000000000656DLL;
              if (v11 || (sub_1C0304A08() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else if (a1 == 0xD000000000000012 && a2 == 0x80000001C032FA30 || (sub_1C0304A08() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                v12 = a1 == 0x66667553656D616ELL && a2 == 0xEA00000000007869;
                if (v12 || (sub_1C0304A08() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  v13 = a1 == 0x656D616E6B63696ELL && a2 == 0xE800000000000000;
                  if (v13 || (sub_1C0304A08() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 9;
                  }
                  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C032FA50 || (sub_1C0304A08() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 10;
                  }
                  else
                  {
                    v14 = a1 == 0x6E6F6974616C6572 && a2 == 0xEC00000070696873;
                    if (v14 || (sub_1C0304A08() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 11;
                    }
                    else
                    {
                      v15 = a1 == 0x656C646E6168 && a2 == 0xE600000000000000;
                      if (v15 || (sub_1C0304A08() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 12;
                      }
                      else if (a1 == 0xD000000000000013 && a2 == 0x80000001C032FA70 || (sub_1C0304A08() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 13;
                      }
                      else
                      {
                        v16 = a1 == 0x79676F6C6F746E6FLL && a2 == 0xEE00656372756F53;
                        if (v16 || (sub_1C0304A08() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 14;
                        }
                        else if (a1 == 0x65646F4E6F7375 && a2 == 0xE700000000000000)
                        {
                          swift_bridgeObjectRelease();
                          return 15;
                        }
                        else
                        {
                          v18 = sub_1C0304A08();
                          swift_bridgeObjectRelease();
                          if ((v18 & 1) != 0)
                            return 15;
                          else
                            return 16;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C016CE7C()
{
  return 16;
}

void sub_1C016CE84()
{
  sub_1C016EDA0();
}

uint64_t sub_1C016CEA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C016C820(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C016CEC4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C016CE7C();
  *a1 = result;
  return result;
}

uint64_t sub_1C016CEE8()
{
  sub_1C003FDF8();
  return sub_1C0304BAC();
}

uint64_t sub_1C016CF10()
{
  sub_1C003FDF8();
  return sub_1C0304BB8();
}

void ContactQuery.hashValue.getter()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_0_1();
  ContactQuery.hash(into:)((uint64_t)v0);
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void ContactQuery.init(from:)()
{
  uint64_t v0;
  _DWORD *v1;
  char v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _DWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _DWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _DWORD *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  _QWORD v67[33];
  char v68;
  uint64_t v69;
  _DWORD *v70;
  unint64_t v71;
  uint64_t v72;
  _DWORD *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  _BYTE v90[6];
  _DWORD v91[3];
  unint64_t v92;

  OUTLINED_FUNCTION_40_0();
  v3 = v0;
  v5 = v4;
  v7 = v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD8F8);
  OUTLINED_FUNCTION_73();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_1_3();
  v10 = v5[3];
  v11 = v5[4];
  v47 = (uint64_t)v5;
  __swift_project_boxed_opaque_existential_1(v5, v10);
  sub_1C003FDF8();
  OUTLINED_FUNCTION_117();
  sub_1C0304B88();
  if (v0)
  {
    OUTLINED_FUNCTION_22_23();
    v8 = 0;
    OUTLINED_FUNCTION_35_21();
    v61 = 0xE000000000000000;
    v62 = 0xE000000000000000;
    v64 = 0xE000000000000000;
    v65 = 0xE000000000000000;
    v66 = 0xE000000000000000;
    v92 = 0xE000000000000000;
    v16 = 0xE000000000000000;
    v17 = v90;
  }
  else
  {
    v12 = v7;
    v13 = OUTLINED_FUNCTION_5_38();
    v16 = v15;
    v43 = v13;
    OUTLINED_FUNCTION_49_11();
    v17 = v1;
    v42 = sub_1C03048B8() & 1;
    v18 = OUTLINED_FUNCTION_5_38();
    v20 = v19;
    v41 = v18;
    OUTLINED_FUNCTION_49_11();
    v92 = v20;
    v21 = OUTLINED_FUNCTION_5_38();
    v23 = v22;
    v40 = v21;
    OUTLINED_FUNCTION_49_11();
    v24 = OUTLINED_FUNCTION_5_38();
    v26 = v25;
    v46 = v24;
    OUTLINED_FUNCTION_49_11();
    v39 = OUTLINED_FUNCTION_5_38();
    v66 = v27;
    swift_bridgeObjectRetain();
    v38 = OUTLINED_FUNCTION_5_38();
    v65 = v28;
    swift_bridgeObjectRetain();
    v45 = OUTLINED_FUNCTION_5_38();
    v64 = v29;
    swift_bridgeObjectRetain();
    v63 = OUTLINED_FUNCTION_5_38();
    v61 = v30;
    OUTLINED_FUNCTION_49_11();
    v60 = OUTLINED_FUNCTION_80_3();
    v62 = v31;
    LOBYTE(v70) = 10;
    swift_bridgeObjectRetain();
    v58 = OUTLINED_FUNCTION_80_3();
    v59 = v32;
    LOBYTE(v67[0]) = 11;
    v33 = sub_1C004009C();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_73_4();
    sub_1C03048A0();
    if (v33)
    {
      OUTLINED_FUNCTION_0_61();
      OUTLINED_FUNCTION_31();
      OUTLINED_FUNCTION_25_16();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_28_20();
      OUTLINED_FUNCTION_40_13();
      OUTLINED_FUNCTION_47_15();
      OUTLINED_FUNCTION_59_6();
      OUTLINED_FUNCTION_74_6();
      OUTLINED_FUNCTION_82_5();
      OUTLINED_FUNCTION_45_10();
    }
    else
    {
      v55 = (uint64_t)v70;
      v56 = v71;
      v57 = v72;
      sub_1C003F770((uint64_t)v70, v71, v72);
      sub_1C0040154();
      sub_1C03048A0();
      v50 = (uint64_t)v70;
      v51 = v71;
      v52 = v72;
      v53 = v73;
      v54 = v74;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD8C8);
      v49 = v75;
      LOBYTE(v67[0]) = 13;
      sub_1C003F79C((uint64_t)v70, v71, v72);
      sub_1C004024C((uint64_t)&unk_1EF5BD910);
      OUTLINED_FUNCTION_79_4();
      v17 = v70;
      LOBYTE(v67[0]) = 14;
      v34 = sub_1C00403E8();
      v48 = (uint64_t)v70;
      OUTLINED_FUNCTION_47();
      OUTLINED_FUNCTION_73_4();
      sub_1C03048E8();
      if (!v34)
      {
        v44 = (char)v70;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD8E8);
        v68 = 15;
        sub_1C00405C0((uint64_t)&unk_1EF5BD928);
        OUTLINED_FUNCTION_79_4();
        OUTLINED_FUNCTION_0_61();
        v67[0] = v43;
        v67[1] = v16;
        LOBYTE(v67[2]) = v42;
        v67[3] = v41;
        v67[4] = v92;
        v67[5] = v40;
        v67[6] = v23;
        v67[7] = v46;
        v67[8] = v26;
        v67[9] = v39;
        v67[10] = v66;
        v67[11] = v38;
        v67[12] = v65;
        v67[13] = v45;
        v67[14] = v64;
        v67[15] = v63;
        v67[16] = v61;
        v67[17] = v60;
        v67[18] = v62;
        v67[19] = v58;
        v67[20] = v59;
        v67[21] = v55;
        v67[22] = v56;
        v67[23] = v57;
        v67[24] = v50;
        v67[25] = v51;
        v67[26] = v52;
        v67[27] = v53;
        v67[28] = v54;
        v67[29] = v49;
        v67[30] = v48;
        LOBYTE(v67[31]) = v44;
        v67[32] = v69;
        v37 = v69;
        swift_retain();
        sub_1C003F648(v67);
        OUTLINED_FUNCTION_17_0();
        OUTLINED_FUNCTION_57();
        sub_1C00407A4(v50, v51, v52);
        OUTLINED_FUNCTION_39_12();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_29_0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_28_20();
        OUTLINED_FUNCTION_55_0();
        OUTLINED_FUNCTION_17_0();
        OUTLINED_FUNCTION_8_1();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_31();
        memcpy(v12, v67, 0x108uLL);
        __swift_destroy_boxed_opaque_existential_0Tm(v47);
        v70 = (_DWORD *)v43;
        v71 = v16;
        LOBYTE(v72) = v42;
        v73 = (_DWORD *)v41;
        v74 = v92;
        *(_DWORD *)((char *)&v72 + 1) = v91[0];
        HIDWORD(v72) = *(_DWORD *)((char *)v91 + 3);
        v75 = v40;
        OUTLINED_FUNCTION_76_6();
        v76 = v39;
        v77 = v66;
        v78 = v38;
        v79 = v65;
        v80 = v45;
        v81 = v64;
        v82 = v63;
        v83 = v61;
        v84 = v60;
        v85 = v62;
        v86 = v58;
        v87 = v59;
        OUTLINED_FUNCTION_7_42();
        *(_DWORD *)(v36 + 249) = *v35;
        v88 = *(_DWORD *)((char *)v35 + 3);
        v89 = v37;
        goto LABEL_5;
      }
      OUTLINED_FUNCTION_0_61();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_38_17();
      OUTLINED_FUNCTION_39_12();
      OUTLINED_FUNCTION_31();
      OUTLINED_FUNCTION_25_16();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_28_20();
      OUTLINED_FUNCTION_40_13();
      OUTLINED_FUNCTION_47_15();
      OUTLINED_FUNCTION_59_6();
      OUTLINED_FUNCTION_74_6();
      OUTLINED_FUNCTION_82_5();
    }
    OUTLINED_FUNCTION_44_14();
    v10 = v40;
    v1 = (_DWORD *)v41;
    v11 = v38;
    v3 = v39;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v47);
  v70 = (_DWORD *)v8;
  v71 = v16;
  LOBYTE(v72) = v2;
  *(_DWORD *)((char *)&v72 + 1) = *(_DWORD *)((char *)v17 + 7);
  HIDWORD(v72) = *(_DWORD *)((char *)v17 + 10);
  v73 = v1;
  v74 = v92;
  v75 = v10;
  OUTLINED_FUNCTION_76_6();
  v76 = v3;
  v77 = v66;
  v78 = v11;
  v79 = v65;
  v80 = v45;
  v81 = v64;
  v82 = v63;
  v83 = v61;
  v84 = v60;
  v85 = v62;
  v86 = v58;
  v87 = v59;
  OUTLINED_FUNCTION_7_42();
  v88 = *(_DWORD *)((char *)v17 + 3);
  *(_DWORD *)(v14 + 249) = *v17;
  v89 = 0;
LABEL_5:
  sub_1C0040644(&v70);
  OUTLINED_FUNCTION_28_0();
}

void sub_1C016DA6C()
{
  ContactQuery.init(from:)();
}

uint64_t sub_1C016DA84()
{
  _BYTE v1[72];

  sub_1C0304B04();
  ContactQuery.hash(into:)((uint64_t)v1);
  return sub_1C0304B40();
}

uint64_t sub_1C016DABC()
{
  uint64_t v0;
  void *v1;
  _BYTE __dst[264];

  v1 = memcpy(__dst, (const void *)(v0 + 16), sizeof(__dst));
  return ContactQuery.description.getter(v1);
}

void static ContactRelationshipQuery.== infix(_:_:)(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[264];
  _BYTE v9[264];

  v2 = a1[1];
  v3 = a1[2];
  v5 = *a2;
  v4 = a2[1];
  v6 = a2[2];
  if (*a1)
  {
    if (!v5)
      goto LABEL_10;
    OUTLINED_FUNCTION_27_0(v9, (const void *)(*a1 + 16));
    OUTLINED_FUNCTION_27_0(v8, (const void *)(v5 + 16));
    if ((static ContactQuery.== infix(_:_:)(v9, v8) & 1) == 0)
      goto LABEL_10;
  }
  else if (v5)
  {
    goto LABEL_10;
  }
  if (v2 != v4 || v3 != v6)
  {
    OUTLINED_FUNCTION_93_2();
    OUTLINED_FUNCTION_56_10();
    return;
  }
LABEL_10:
  OUTLINED_FUNCTION_17_1();
}

uint64_t ContactRelationshipQuery.hash(into:)(uint64_t a1)
{
  _QWORD *v1;

  if (*v1)
  {
    sub_1C0304B1C();
    swift_retain();
    sub_1C016FF00(a1);
    swift_release();
  }
  else
  {
    sub_1C0304B1C();
  }
  OUTLINED_FUNCTION_44();
  sub_1C0303E20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C016DC0C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x746E6F436D6F7266 && a2 == 0xEB00000000746361;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C016DD08(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6C6562616CLL;
  else
    return 0x746E6F436D6F7266;
}

uint64_t sub_1C016DD44()
{
  char *v0;

  return sub_1C016DD08(*v0);
}

uint64_t sub_1C016DD4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C016DC0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C016DD70()
{
  sub_1C01702A0();
  return sub_1C0304BAC();
}

uint64_t sub_1C016DD98()
{
  sub_1C01702A0();
  return sub_1C0304BB8();
}

void ContactRelationshipQuery.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_40_0();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD930);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_3();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C01702A0();
  OUTLINED_FUNCTION_117();
  sub_1C0304BA0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD8A0);
  sub_1C01702DC((uint64_t)&unk_1EF5BD940);
  OUTLINED_FUNCTION_111_0();
  sub_1C0304954();
  if (!v0)
    OUTLINED_FUNCTION_28_16();
  OUTLINED_FUNCTION_75_5(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_28_0();
}

uint64_t ContactRelationshipQuery.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  OUTLINED_FUNCTION_0_1();
  sub_1C0304B1C();
  if (v1)
  {
    swift_retain();
    sub_1C016FF00((uint64_t)v3);
    swift_release();
  }
  OUTLINED_FUNCTION_44();
  sub_1C0303E20();
  OUTLINED_FUNCTION_33();
  return OUTLINED_FUNCTION_78_0();
}

void ContactRelationshipQuery.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_40_0();
  v12 = v11;
  v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD948);
  OUTLINED_FUNCTION_148();
  MEMORY[0x1E0C80A78](v15);
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  sub_1C01702A0();
  OUTLINED_FUNCTION_64_5();
  if (!v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD8A0);
    sub_1C01702DC((uint64_t)&unk_1EF5BD950);
    sub_1C03048A0();
    swift_retain();
    v16 = OUTLINED_FUNCTION_55_8();
    v18 = v17;
    OUTLINED_FUNCTION_10_5();
    OUTLINED_FUNCTION_47();
    swift_bridgeObjectRelease();
    *v14 = a10;
    v14[1] = v16;
    v14[2] = v18;
  }
  OUTLINED_FUNCTION_10_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_28_0();
}

void sub_1C016E0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ContactRelationshipQuery.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1C016E0C0()
{
  ContactRelationshipQuery.encode(to:)();
}

uint64_t sub_1C016E0E0()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1C0304B04();
  sub_1C0304B1C();
  if (v1)
  {
    swift_retain();
    sub_1C016FF00((uint64_t)v3);
    swift_release();
  }
  swift_bridgeObjectRetain();
  sub_1C0303E20();
  swift_bridgeObjectRelease();
  return sub_1C0304B40();
}

uint64_t ContactHandleQuery.normalizedLabels.getter()
{
  return swift_bridgeObjectRetain();
}

void ContactHandleQuery.normalizedLabels.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_9();
}

uint64_t (*ContactHandleQuery.normalizedLabels.modify())(_QWORD)
{
  return nullsub_1;
}

void static ContactHandleQuery.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  BOOL v10;

  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2)
    goto LABEL_13;
  v2 = (_QWORD *)a1[3];
  v3 = a1[4];
  v4 = a1[5];
  v6 = (_QWORD *)a2[3];
  v5 = a2[4];
  v7 = a2[5];
  v8 = a1[1] == a2[1] && a1[2] == a2[2];
  if ((v8 || (OUTLINED_FUNCTION_176() & 1) != 0)
    && (sub_1C00F03F4(v2, v6), (v9 & 1) != 0)
    && (v3 == v5 ? (v10 = v4 == v7) : (v10 = 0), !v10))
  {
    OUTLINED_FUNCTION_93_2();
    OUTLINED_FUNCTION_56_10();
  }
  else
  {
LABEL_13:
    OUTLINED_FUNCTION_17_1();
  }
}

uint64_t ContactHandleQuery.hash(into:)()
{
  sub_1C0304B10();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_26_22();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_21();
  sub_1C0170110();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_112_0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C016E2D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6C6562616CLL && a2 == 0xE500000000000000;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000001C032FA90 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v8 = sub_1C0304A08();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 3;
      else
        return 4;
    }
  }
}

uint64_t sub_1C016E460(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C016E48C + 4 * byte_1C0310384[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_1C016E48C()
{
  return 0x6C6562616CLL;
}

unint64_t sub_1C016E4A0()
{
  return 0xD000000000000010;
}

uint64_t sub_1C016E4BC()
{
  return 0x65756C6176;
}

uint64_t sub_1C016E4D0()
{
  unsigned __int8 *v0;

  return sub_1C016E460(*v0);
}

uint64_t sub_1C016E4D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C016E2D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C016E4FC()
{
  sub_1C0170338();
  return sub_1C0304BAC();
}

uint64_t sub_1C016E524()
{
  sub_1C0170338();
  return sub_1C0304BB8();
}

void ContactHandleQuery.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_40_0();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD958);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_3();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C0170338();
  OUTLINED_FUNCTION_117();
  sub_1C0304BA0();
  sub_1C0170374();
  OUTLINED_FUNCTION_120_0();
  sub_1C030499C();
  if (!v0)
  {
    OUTLINED_FUNCTION_28_16();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
    sub_1C01703EC((uint64_t)&qword_1EF5BD970);
    OUTLINED_FUNCTION_111_0();
    sub_1C030499C();
    OUTLINED_FUNCTION_28_16();
  }
  OUTLINED_FUNCTION_75_5(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_28_0();
}

uint64_t ContactHandleQuery.hashValue.getter()
{
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_68_5();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_26_22();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_21();
  sub_1C0170110();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_28();
  return OUTLINED_FUNCTION_78_0();
}

void ContactHandleQuery.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_40_0();
  v17 = v16;
  v19 = v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD978);
  OUTLINED_FUNCTION_148();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_58_0();
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  sub_1C0170338();
  sub_1C0304B88();
  if (v13)
  {
    v23 = 0;
  }
  else
  {
    sub_1C01703B0();
    OUTLINED_FUNCTION_121_0();
    v22 = OUTLINED_FUNCTION_89_3();
    v25 = v24;
    v33 = v22;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
    sub_1C01703EC((uint64_t)&unk_1EF5BD988);
    v27 = v26;
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_121_0();
    if (!v27)
    {
      OUTLINED_FUNCTION_32();
      v28 = OUTLINED_FUNCTION_89_3();
      v30 = v29;
      v31 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v32 = v28;
      v31(v14, v20);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_47();
      OUTLINED_FUNCTION_17_0();
      *(_BYTE *)v19 = a13;
      *(_QWORD *)(v19 + 8) = v33;
      *(_QWORD *)(v19 + 16) = v25;
      *(_QWORD *)(v19 + 24) = v34;
      *(_QWORD *)(v19 + 32) = v32;
      *(_QWORD *)(v19 + 40) = v30;
      OUTLINED_FUNCTION_106_0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_29_0();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    OUTLINED_FUNCTION_50_12();
    OUTLINED_FUNCTION_17_0();
    v23 = 1;
  }
  OUTLINED_FUNCTION_106_0();
  if (v23)
    OUTLINED_FUNCTION_17_0();
LABEL_6:
  OUTLINED_FUNCTION_28_0();
}

void sub_1C016E96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ContactHandleQuery.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_1C016E980()
{
  ContactHandleQuery.encode(to:)();
}

uint64_t sub_1C016E9A0()
{
  sub_1C0304B04();
  sub_1C0304B10();
  swift_bridgeObjectRetain();
  sub_1C0303E20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C0170110();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C0303E20();
  swift_bridgeObjectRelease();
  return sub_1C0304B40();
}

void sub_1C016EA64()
{
  sub_1C03046CC();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_65_5();
  OUTLINED_FUNCTION_18();
  sub_1C0303FD0();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_65_5();
  OUTLINED_FUNCTION_18();
  sub_1C0303FD0();
  sub_1C0304210();
  OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_36_0();
}

BOOL sub_1C016EB28(unsigned __int8 *a1, unsigned __int8 *a2)
{
  _BOOL8 result;
  BOOL v5;
  char v6;
  char v8;

  if (*a1 != *a2)
    return 0;
  v5 = *((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1) && *((_QWORD *)a1 + 2) == *((_QWORD *)a2 + 2);
  if (v5 || (v6 = OUTLINED_FUNCTION_176(), result = 0, (v6 & 1) != 0))
  {
    if (*((_QWORD *)a1 + 3) == *((_QWORD *)a2 + 3) && *((_QWORD *)a1 + 4) == *((_QWORD *)a2 + 4))
      return *((double *)a1 + 5) == *((double *)a2 + 5);
    v8 = OUTLINED_FUNCTION_176();
    result = 0;
    if ((v8 & 1) != 0)
      return *((double *)a1 + 5) == *((double *)a2 + 5);
  }
  return result;
}

void sub_1C016EBBC()
{
  sub_1C0304B10();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_26_22();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_26_22();
  OUTLINED_FUNCTION_18();
  sub_1C0304B34();
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C016EC1C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x72656469766F7270 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6449707061 && a2 == 0xE500000000000000;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 25705 && a2 == 0xE200000000000000;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1C0304A08();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

void sub_1C016EDA0()
{
  OUTLINED_FUNCTION_0_1();
  sub_1C0304B10();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

uint64_t sub_1C016EDD0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C016EE04 + 4 * byte_1C0310388[a1]))(0x72656469766F7270, 0xE800000000000000);
}

uint64_t sub_1C016EE04()
{
  return 0x6449707061;
}

uint64_t sub_1C016EE18()
{
  return 25705;
}

uint64_t sub_1C016EE24()
{
  return 0x65726F6373;
}

uint64_t sub_1C016EE38(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDA00);
  OUTLINED_FUNCTION_73();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_1_3();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0171068();
  OUTLINED_FUNCTION_117();
  sub_1C0304BA0();
  sub_1C01710A4();
  OUTLINED_FUNCTION_120_0();
  sub_1C030499C();
  if (!v1)
  {
    OUTLINED_FUNCTION_99_1();
    OUTLINED_FUNCTION_99_1();
    sub_1C0304978();
  }
  return OUTLINED_FUNCTION_75_5(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
}

void sub_1C016EF6C()
{
  OUTLINED_FUNCTION_0_1();
  sub_1C016EBBC();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

uint64_t sub_1C016EF94@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char v17;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDA18);
  OUTLINED_FUNCTION_148();
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0171068();
  OUTLINED_FUNCTION_64_5();
  if (v2)
    return OUTLINED_FUNCTION_10_0();
  sub_1C01710E0();
  sub_1C03048E8();
  v6 = OUTLINED_FUNCTION_55_8();
  v8 = v7;
  v16 = v6;
  OUTLINED_FUNCTION_49_11();
  v9 = OUTLINED_FUNCTION_55_8();
  v11 = v10;
  v15 = v9;
  OUTLINED_FUNCTION_49_11();
  sub_1C03048C4();
  v13 = v12;
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_29_0();
  result = OUTLINED_FUNCTION_8_1();
  *(_BYTE *)a2 = v17;
  *(_QWORD *)(a2 + 8) = v16;
  *(_QWORD *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = v15;
  *(_QWORD *)(a2 + 32) = v11;
  *(_QWORD *)(a2 + 40) = v13;
  return result;
}

uint64_t sub_1C016F17C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x61636F5669726973 && a2 == 0xE900000000000062;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1935894896 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C016F264(char a1)
{
  if ((a1 & 1) != 0)
    return 1935894896;
  else
    return 0x61636F5669726973;
}

void sub_1C016F298()
{
  char v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];
  char v17;

  OUTLINED_FUNCTION_40_0();
  v17 = v0;
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDA50);
  v4 = OUTLINED_FUNCTION_108_1(v3);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDA58);
  v7 = *(_QWORD *)(v16[0] - 8);
  MEMORY[0x1E0C80A78](v16[0]);
  OUTLINED_FUNCTION_6_0();
  v10 = v9 - v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDA60);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_6_0();
  v15 = v14 - v13;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C0171330();
  sub_1C0304BA0();
  if ((v17 & 1) != 0)
  {
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_3_5();
    (*(void (**)(char *, _QWORD))(v16[1] + 8))(v6, v16[2]);
  }
  else
  {
    sub_1C01713A8();
    OUTLINED_FUNCTION_3_5();
    (*(void (**)(uint64_t, _QWORD))(v7 + 8))(v10, v16[0]);
  }
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
  OUTLINED_FUNCTION_28_0();
}

void sub_1C016F410()
{
  OUTLINED_FUNCTION_0_1();
  sub_1C0304B10();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

uint64_t sub_1C016F440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_40_0();
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDA80);
  v6 = OUTLINED_FUNCTION_108_1(v5);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_6_0();
  v29 = v8 - v7;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDA88);
  v9 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_1_3();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDA90);
  OUTLINED_FUNCTION_73();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_6_0();
  v14 = v13 - v12;
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1C0171330();
  sub_1C0304B88();
  if (v0)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v4);
  v27 = v2;
  v15 = sub_1C0304900();
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16
    || (v17 = *(unsigned __int8 *)(v15 + 32),
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))sub_1C012B614)(1, v16, v15, v15 + 32, 0, (2 * v16) | 1), v19 = v18, v21 = v20, OUTLINED_FUNCTION_31(), v19 != v21 >> 1))
  {
    v23 = sub_1C0304714();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC278);
    *v25 = &unk_1E7997B90;
    sub_1C0304864();
    sub_1C0304708();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v23);
    swift_willThrow();
    OUTLINED_FUNCTION_2_3();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v14, v10);
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v4);
  }
  if ((v17 & 1) != 0)
  {
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_63_1();
    v22 = v27;
    (*(void (**)(uint64_t))(v30 + 8))(v29);
  }
  else
  {
    sub_1C01713A8();
    OUTLINED_FUNCTION_63_1();
    v22 = v27;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v28);
  }
  OUTLINED_FUNCTION_2_3();
  (*(void (**)(uint64_t, unint64_t))(v22 + 8))(v14, v21);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v4);
  return v17;
}

void sub_1C016F740()
{
  OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_68_5();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

uint64_t sub_1C016F76C()
{
  unsigned __int8 *v0;

  return sub_1C016EDD0(*v0);
}

uint64_t sub_1C016F774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C016EC1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C016F798()
{
  sub_1C0171068();
  return sub_1C0304BAC();
}

uint64_t sub_1C016F7C0()
{
  sub_1C0171068();
  return sub_1C0304BB8();
}

double sub_1C016F7E8@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1C016EF94(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1C016F828(_QWORD *a1)
{
  return sub_1C016EE38(a1);
}

void sub_1C016F848()
{
  OUTLINED_FUNCTION_119();
  sub_1C016EBBC();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C016F874()
{
  sub_1C016F410();
}

uint64_t sub_1C016F88C()
{
  char *v0;

  return sub_1C016F264(*v0);
}

uint64_t sub_1C016F894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C016F17C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C016F8B8()
{
  sub_1C0171330();
  return sub_1C0304BAC();
}

uint64_t sub_1C016F8E0()
{
  sub_1C0171330();
  return sub_1C0304BB8();
}

uint64_t sub_1C016F908()
{
  sub_1C017136C();
  return sub_1C0304BAC();
}

uint64_t sub_1C016F930()
{
  sub_1C017136C();
  return sub_1C0304BB8();
}

uint64_t sub_1C016F958()
{
  sub_1C01713A8();
  return sub_1C0304BAC();
}

uint64_t sub_1C016F980()
{
  sub_1C01713A8();
  return sub_1C0304BB8();
}

uint64_t sub_1C016F9A8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1C016F440();
  if (!v1)
    *a1 = result & 1;
  return result;
}

void sub_1C016F9D4()
{
  sub_1C016F298();
}

SiriInference::ContactOntologySource_optional __swiftcall ContactOntologySource.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  SiriInference::ContactOntologySource_optional result;

  v2 = v1;
  v3 = sub_1C030484C();
  OUTLINED_FUNCTION_33();
  v4 = 4;
  if (v3 < 4)
    v4 = v3;
  *v2 = v4;
  OUTLINED_FUNCTION_37_0();
  return result;
}

void sub_1C016FA38(char *a1)
{
  sub_1C025DBEC(*a1);
}

void sub_1C016FA44()
{
  unsigned __int8 *v0;

  sub_1C00CE950(*v0);
}

void sub_1C016FA4C(uint64_t a1)
{
  char *v1;

  sub_1C00C1D00(a1, *v1);
}

void sub_1C016FA54(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EB0C8(a1, *v1);
}

SiriInference::ContactOntologySource_optional sub_1C016FA5C(Swift::String *a1)
{
  return ContactOntologySource.init(rawValue:)(*a1);
}

uint64_t sub_1C016FA6C()
{
  sub_1C0040424();
  return sub_1C03040F0();
}

void sub_1C016FAC8(char a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((a1 & 1) == 0)
  {
    v2 = MEMORY[0x1E0DEE9D8];
    if ((a1 & 2) == 0)
      goto LABEL_12;
    goto LABEL_7;
  }
  sub_1C00500A0();
  v2 = v3;
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 >= *(_QWORD *)(v3 + 24) >> 1)
  {
    OUTLINED_FUNCTION_4_10();
    v2 = v12;
  }
  *(_QWORD *)(v2 + 16) = v4 + 1;
  v5 = v2 + 16 * v4;
  *(_QWORD *)(v5 + 32) = 1701667182;
  *(_QWORD *)(v5 + 40) = 0xE400000000000000;
  if ((a1 & 2) != 0)
  {
LABEL_7:
    if ((OUTLINED_FUNCTION_116() & 1) == 0)
    {
      OUTLINED_FUNCTION_4_10();
      v2 = v13;
    }
    v6 = *(_QWORD *)(v2 + 16);
    if (v6 >= *(_QWORD *)(v2 + 24) >> 1)
    {
      OUTLINED_FUNCTION_4_10();
      v2 = v14;
    }
    *(_QWORD *)(v2 + 16) = v6 + 1;
    v7 = v2 + 16 * v6;
    strcpy((char *)(v7 + 32), "relationship");
    *(_BYTE *)(v7 + 45) = 0;
    *(_WORD *)(v7 + 46) = -5120;
  }
LABEL_12:
  if ((a1 & 4) == 0)
  {
    if ((a1 & 8) == 0)
      goto LABEL_25;
    goto LABEL_20;
  }
  if ((OUTLINED_FUNCTION_116() & 1) == 0)
  {
    OUTLINED_FUNCTION_4_10();
    v2 = v15;
  }
  v8 = *(_QWORD *)(v2 + 16);
  if (v8 >= *(_QWORD *)(v2 + 24) >> 1)
  {
    OUTLINED_FUNCTION_4_10();
    v2 = v16;
  }
  *(_QWORD *)(v2 + 16) = v8 + 1;
  v9 = v2 + 16 * v8;
  *(_QWORD *)(v9 + 32) = 0x614C656C646E6168;
  *(_QWORD *)(v9 + 40) = 0xEB000000006C6562;
  if ((a1 & 8) != 0)
  {
LABEL_20:
    if ((OUTLINED_FUNCTION_116() & 1) == 0)
    {
      OUTLINED_FUNCTION_4_10();
      v2 = v17;
    }
    v10 = *(_QWORD *)(v2 + 16);
    if (v10 >= *(_QWORD *)(v2 + 24) >> 1)
    {
      OUTLINED_FUNCTION_4_10();
      v2 = v18;
    }
    *(_QWORD *)(v2 + 16) = v10 + 1;
    v11 = v2 + 16 * v10;
    *(_QWORD *)(v11 + 32) = 0x6156656C646E6168;
    *(_QWORD *)(v11 + 40) = 0xEB0000000065756CLL;
  }
LABEL_25:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
  sub_1C00405C0((uint64_t)&qword_1ED7283B0);
  sub_1C0303E50();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_36_0();
}

_QWORD *sub_1C016FD18@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1C016FD24()
{
  _QWORD *v0;

  sub_1C016FAC8(*v0);
}

void sub_1C016FD2C(uint64_t *a1@<X8>)
{
  *a1 = j__OUTLINED_FUNCTION_20_11();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C016FD4C(_QWORD *a1)
{
  _QWORD *v1;

  return sub_1C02A37A0(*a1, *v1);
}

uint64_t sub_1C016FD58@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t result;

  result = j__OUTLINED_FUNCTION_3_84(*a1, *v2);
  *a2 = result;
  return result;
}

void sub_1C016FD84(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  *a2 = j__OUTLINED_FUNCTION_145_3(*a1, *v2);
  OUTLINED_FUNCTION_9();
}

void sub_1C016FDAC(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  *a2 = j__OUTLINED_FUNCTION_5_63(*a1, *v2);
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C016FDD4(uint64_t a1, _QWORD *a2)
{
  return sub_1C02A3760(a1, *a2);
}

uint64_t sub_1C016FDDC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_1C01C1EF0(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1C016FE0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_1C01C1EE8(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1C016FE3C(_QWORD *a1)
{
  return j_j__OUTLINED_FUNCTION_178_2(*a1);
}

uint64_t sub_1C016FE44(_QWORD *a1)
{
  return j_j__OUTLINED_FUNCTION_179_1(*a1);
}

uint64_t sub_1C016FE4C(_QWORD *a1)
{
  return sub_1C01C1EE4(*a1);
}

uint64_t sub_1C016FE54@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t result;

  result = sub_1C01C1EE0(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_1C016FE80(_QWORD *a1)
{
  _QWORD *v1;

  return sub_1C02A37A4(*a1, *v1);
}

uint64_t sub_1C016FE8C(_QWORD *a1)
{
  _QWORD *v1;

  return sub_1C01C1EEC(*a1, *v1);
}

BOOL sub_1C016FE98()
{
  uint64_t *v0;

  return sub_1C01C1AA8(*v0);
}

uint64_t sub_1C016FEA0()
{
  return sub_1C030457C();
}

uint64_t sub_1C016FEB8(_QWORD *a1)
{
  return sub_1C01C1EF4(*a1);
}

_QWORD *sub_1C016FEC0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1C016FED0(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1C016FEDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1C01C1944();
  *a1 = result;
  return result;
}

uint64_t sub_1C016FF00(uint64_t a1)
{
  uint64_t v1;
  _BYTE __dst[264];

  memcpy(__dst, (const void *)(v1 + 16), sizeof(__dst));
  return ContactQuery.hash(into:)(a1);
}

uint64_t sub_1C016FF48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  unsigned __int8 *v3;
  int v4;

  result = OUTLINED_FUNCTION_37_15();
  if (v0)
  {
    v3 = (unsigned __int8 *)(v1 + 105);
    do
    {
      v4 = *v3;
      OUTLINED_FUNCTION_9_2();
      OUTLINED_FUNCTION_22();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_74_1();
      sub_1C0303E20();
      OUTLINED_FUNCTION_29();
      sub_1C0304B10();
      OUTLINED_FUNCTION_22();
      sub_1C0303E20();
      OUTLINED_FUNCTION_18();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_114();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_74_1();
      OUTLINED_FUNCTION_90_4();
      OUTLINED_FUNCTION_55_0();
      sub_1C0304B1C();
      if (v4 != 2)
        sub_1C0304B1C();
      sub_1C0304B1C();
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_18();
      result = OUTLINED_FUNCTION_29();
      v3 += 80;
      --v0;
    }
    while (v0);
  }
  return result;
}

void sub_1C0170084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_37_15();
  if (v0)
  {
    v2 = v1 + 72;
    do
    {
      OUTLINED_FUNCTION_9_2();
      OUTLINED_FUNCTION_74_1();
      OUTLINED_FUNCTION_31_6();
      OUTLINED_FUNCTION_26_22();
      OUTLINED_FUNCTION_18();
      OUTLINED_FUNCTION_74_1();
      OUTLINED_FUNCTION_90_4();
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_107_0();
      OUTLINED_FUNCTION_8_1();
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_18();
      v2 += 48;
      --v0;
    }
    while (v0);
  }
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C0170110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = OUTLINED_FUNCTION_37_15();
  if (v0)
  {
    v3 = v1 + 40;
    do
    {
      OUTLINED_FUNCTION_22();
      OUTLINED_FUNCTION_26_22();
      result = OUTLINED_FUNCTION_18();
      v3 += 16;
      --v0;
    }
    while (v0);
  }
  return result;
}

uint64_t sub_1C0170164(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1C0304B10();
  if (v3)
  {
    v5 = a2 + 72;
    do
    {
      v5 += 48;
      sub_1C0304B10();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C0303E20();
      swift_bridgeObjectRetain();
      sub_1C0303E20();
      swift_bridgeObjectRelease();
      sub_1C0304B34();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
  }
  return result;
}

unint64_t sub_1C0170228()
{
  unint64_t result;

  result = qword_1EF5BD8D8;
  if (!qword_1EF5BD8D8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0310BC0, &unk_1E7997A60);
    atomic_store(result, (unint64_t *)&qword_1EF5BD8D8);
  }
  return result;
}

unint64_t sub_1C0170264()
{
  unint64_t result;

  result = qword_1EF5BD918;
  if (!qword_1EF5BD918)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0310B98, &unk_1E7997A60);
    atomic_store(result, (unint64_t *)&qword_1EF5BD918);
  }
  return result;
}

unint64_t sub_1C01702A0()
{
  unint64_t result;

  result = qword_1EF5BD938;
  if (!qword_1EF5BD938)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0310B48, &type metadata for ContactRelationshipQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BD938);
  }
  return result;
}

void sub_1C01702DC(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!OUTLINED_FUNCTION_56_0(a1))
  {
    v3 = v2;
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF5BD8A0);
    v5[0] = sub_1C003F814();
    v5[1] = sub_1C003F850();
    atomic_store(MEMORY[0x1C3B9827C](v3, v4, v5), v1);
  }
  OUTLINED_FUNCTION_36_0();
}

unint64_t sub_1C0170338()
{
  unint64_t result;

  result = qword_1EF5BD960;
  if (!qword_1EF5BD960)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0310AF8, &type metadata for ContactHandleQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BD960);
  }
  return result;
}

unint64_t sub_1C0170374()
{
  unint64_t result;

  result = qword_1EF5BD968;
  if (!qword_1EF5BD968)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactHandle.HandleType, &type metadata for ContactHandle.HandleType);
    atomic_store(result, (unint64_t *)&qword_1EF5BD968);
  }
  return result;
}

unint64_t sub_1C01703B0()
{
  unint64_t result;

  result = qword_1EF5BD980;
  if (!qword_1EF5BD980)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactHandle.HandleType, &type metadata for ContactHandle.HandleType);
    atomic_store(result, (unint64_t *)&qword_1EF5BD980);
  }
  return result;
}

void sub_1C01703EC(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (!OUTLINED_FUNCTION_56_0(a1))
  {
    v4 = v3;
    v5 = v2;
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED7283A0);
    v7 = v5;
    atomic_store(MEMORY[0x1C3B9827C](v4, v6, &v7), v1);
  }
  OUTLINED_FUNCTION_36_0();
}

uint64_t assignWithCopy for ContactQuery(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 168);
  v5 = (_OWORD *)(a2 + 168);
  v6 = *(_QWORD *)(a2 + 184);
  if (*(_QWORD *)(a1 + 184))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C011A248(a1 + 168);
      v7 = *(_QWORD *)(a2 + 184);
      *v4 = *v5;
      *(_QWORD *)(a1 + 184) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *v5;
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *v4 = v8;
  }
  v9 = (_OWORD *)(a1 + 192);
  v10 = (_OWORD *)(a2 + 192);
  v11 = *(_QWORD *)(a2 + 208);
  if (*(_QWORD *)(a1 + 208))
  {
    if (v11)
    {
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C011A27C(a1 + 192);
      v13 = *(_OWORD *)(a2 + 208);
      v12 = *(_OWORD *)(a2 + 224);
      *v9 = *v10;
      *(_OWORD *)(a1 + 208) = v13;
      *(_OWORD *)(a1 + 224) = v12;
    }
  }
  else if (v11)
  {
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *v10;
    v15 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v15;
    *v9 = v14;
  }
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ContactQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v13;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 184))
  {
    v14 = *(_QWORD *)(a2 + 184);
    if (v14)
    {
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      swift_release();
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = v14;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C011A248(a1 + 168);
  }
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
LABEL_6:
  if (!*(_QWORD *)(a1 + 208))
  {
LABEL_10:
    v17 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v17;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    goto LABEL_11;
  }
  v15 = *(_QWORD *)(a2 + 208);
  if (!v15)
  {
    sub_1C011A27C(a1 + 192);
    goto LABEL_10;
  }
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v16;
  swift_bridgeObjectRelease();
LABEL_11:
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactQuery(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 264))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 248) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 264) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 264) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t destroy for ContactRelationshipQuery()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s13SiriInference24ContactRelationshipQueryVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  OUTLINED_FUNCTION_47();
  return a1;
}

_QWORD *assignWithCopy for ContactRelationshipQuery(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ContactRelationshipQuery(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for ContactRelationshipQuery()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t destroy for ContactHandleQuery()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContactHandleQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContactHandleQuery(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ContactHandleQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for ContactHandleQuery()
{
  OUTLINED_FUNCTION_17_2();
}

void type metadata accessor for ContactOntologySource()
{
  OUTLINED_FUNCTION_17_2();
}

ValueMetadata *type metadata accessor for ContactHandleQuery.CodingKeys()
{
  return &type metadata for ContactHandleQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for ContactRelationshipQuery.CodingKeys()
{
  return &type metadata for ContactRelationshipQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for ContactQuery.CodingKeys()
{
  return &type metadata for ContactQuery.CodingKeys;
}

uint64_t destroy for SportsResolverMetrics()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0170D28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C0170D74(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t sub_1C0170DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t sub_1C0170E44(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ContactId()
{
  OUTLINED_FUNCTION_17_2();
}

unint64_t sub_1C0170EA0()
{
  unint64_t result;

  result = qword_1EF5BD9B0;
  if (!qword_1EF5BD9B0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03108A8, &unk_1E7997A60);
    atomic_store(result, (unint64_t *)&qword_1EF5BD9B0);
  }
  return result;
}

unint64_t sub_1C0170EE4()
{
  unint64_t result;

  result = qword_1EF5BD9C0;
  if (!qword_1EF5BD9C0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0310A18, &type metadata for ContactRelationshipQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BD9C0);
  }
  return result;
}

unint64_t sub_1C0170F24()
{
  unint64_t result;

  result = qword_1EF5BD9C8;
  if (!qword_1EF5BD9C8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0310AD0, &type metadata for ContactHandleQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BD9C8);
  }
  return result;
}

unint64_t sub_1C0170F64()
{
  unint64_t result;

  result = qword_1EF5BD9D0;
  if (!qword_1EF5BD9D0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0310A40, &type metadata for ContactHandleQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BD9D0);
  }
  return result;
}

unint64_t sub_1C0170FA4()
{
  unint64_t result;

  result = qword_1EF5BD9D8;
  if (!qword_1EF5BD9D8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0310A68, &type metadata for ContactHandleQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BD9D8);
  }
  return result;
}

unint64_t sub_1C0170FE4()
{
  unint64_t result;

  result = qword_1EF5BD9E0;
  if (!qword_1EF5BD9E0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0310988, &type metadata for ContactRelationshipQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BD9E0);
  }
  return result;
}

unint64_t sub_1C0171024()
{
  unint64_t result;

  result = qword_1EF5BD9E8;
  if (!qword_1EF5BD9E8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03109B0, &type metadata for ContactRelationshipQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BD9E8);
  }
  return result;
}

unint64_t sub_1C0171068()
{
  unint64_t result;

  result = qword_1EF5BDA08;
  if (!qword_1EF5BDA08)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0310DC4, &type metadata for ContactId.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BDA08);
  }
  return result;
}

unint64_t sub_1C01710A4()
{
  unint64_t result;

  result = qword_1EF5BDA10;
  if (!qword_1EF5BDA10)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0310D9C, &unk_1E7997B90);
    atomic_store(result, (unint64_t *)&qword_1EF5BDA10);
  }
  return result;
}

unint64_t sub_1C01710E0()
{
  unint64_t result;

  result = qword_1EF5BDA20;
  if (!qword_1EF5BDA20)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0310D74, &unk_1E7997B90);
    atomic_store(result, (unint64_t *)&qword_1EF5BDA20);
  }
  return result;
}

uint64_t sub_1C017111C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Contact();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s13SiriInference21ContactOntologySourceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C01711A4 + 4 * byte_1C031039F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C01711D8 + 4 * byte_1C031039A[v4]))();
}

uint64_t sub_1C01711D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C01711E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C01711E8);
  return result;
}

uint64_t sub_1C01711F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C01711FCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C0171200(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0171208(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContactId.CodingKeys()
{
  return &type metadata for ContactId.CodingKeys;
}

void type metadata accessor for ContactIdProvider()
{
  OUTLINED_FUNCTION_17_2();
}

unint64_t sub_1C0171234()
{
  unint64_t result;
  const void *vars0;

  result = qword_1EF5BDA30;
  if (!qword_1EF5BDA30)
  {
    result = MEMORY[0x1C3B9827C]("%ph'", vars0);
    atomic_store(result, (unint64_t *)&qword_1EF5BDA30);
  }
  return result;
}

unint64_t sub_1C0171274()
{
  unint64_t result;

  result = qword_1EF5BDA38;
  if (!qword_1EF5BDA38)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0310D4C, &type metadata for ContactId.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BDA38);
  }
  return result;
}

unint64_t sub_1C01712B4()
{
  unint64_t result;

  result = qword_1EF5BDA40;
  if (!qword_1EF5BDA40)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0310CBC, &type metadata for ContactId.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BDA40);
  }
  return result;
}

unint64_t sub_1C01712F4()
{
  unint64_t result;

  result = qword_1EF5BDA48;
  if (!qword_1EF5BDA48)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0310CE4, &type metadata for ContactId.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BDA48);
  }
  return result;
}

unint64_t sub_1C0171330()
{
  unint64_t result;

  result = qword_1EF5BDA68;
  if (!qword_1EF5BDA68)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0311214, &type metadata for ContactIdProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BDA68);
  }
  return result;
}

unint64_t sub_1C017136C()
{
  unint64_t result;

  result = qword_1EF5BDA70;
  if (!qword_1EF5BDA70)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03111C4, &type metadata for ContactIdProvider.PicsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BDA70);
  }
  return result;
}

unint64_t sub_1C01713A8()
{
  unint64_t result;

  result = qword_1EF5BDA78;
  if (!qword_1EF5BDA78)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0311174, &type metadata for ContactIdProvider.SiriVocabCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BDA78);
  }
  return result;
}

uint64_t _s13SiriInference24ContactRelationshipQueryV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0171430 + 4 * byte_1C03103A9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0171464 + 4 * byte_1C03103A4[v4]))();
}

uint64_t sub_1C0171464(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C017146C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0171474);
  return result;
}

uint64_t sub_1C0171480(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0171488);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C017148C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0171494(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContactIdProvider.CodingKeys()
{
  return &type metadata for ContactIdProvider.CodingKeys;
}

ValueMetadata *type metadata accessor for ContactIdProvider.SiriVocabCodingKeys()
{
  return &type metadata for ContactIdProvider.SiriVocabCodingKeys;
}

ValueMetadata *type metadata accessor for ContactIdProvider.PicsCodingKeys()
{
  return &type metadata for ContactIdProvider.PicsCodingKeys;
}

void type metadata accessor for ContactQueryType()
{
  OUTLINED_FUNCTION_17_2();
}

unint64_t sub_1C01714E0()
{
  unint64_t result;

  result = qword_1EF5BDA98;
  if (!qword_1EF5BDA98)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0310E94, &unk_1E7997C80);
    atomic_store(result, (unint64_t *)&qword_1EF5BDA98);
  }
  return result;
}

unint64_t sub_1C0171520()
{
  unint64_t result;

  result = qword_1EF5BDAA0;
  if (!qword_1EF5BDAA0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0310E64, &unk_1E7997C80);
    atomic_store(result, (unint64_t *)&qword_1EF5BDAA0);
  }
  return result;
}

unint64_t sub_1C0171560()
{
  unint64_t result;

  result = qword_1EF5BDAA8;
  if (!qword_1EF5BDAA8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0310EBC, &unk_1E7997C80);
    atomic_store(result, (unint64_t *)&qword_1EF5BDAA8);
  }
  return result;
}

unint64_t sub_1C01715A0()
{
  unint64_t result;

  result = qword_1EF5BDAB0;
  if (!qword_1EF5BDAB0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0310EF4, &unk_1E7997C80);
    atomic_store(result, (unint64_t *)&qword_1EF5BDAB0);
  }
  return result;
}

unint64_t sub_1C01715E0()
{
  unint64_t result;

  result = qword_1EF5BDAB8;
  if (!qword_1EF5BDAB8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031114C, &type metadata for ContactIdProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BDAB8);
  }
  return result;
}

unint64_t sub_1C0171620()
{
  unint64_t result;

  result = qword_1EF5BDAC0;
  if (!qword_1EF5BDAC0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031106C, &type metadata for ContactIdProvider.SiriVocabCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BDAC0);
  }
  return result;
}

unint64_t sub_1C0171660()
{
  unint64_t result;

  result = qword_1EF5BDAC8;
  if (!qword_1EF5BDAC8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0311094, &type metadata for ContactIdProvider.SiriVocabCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BDAC8);
  }
  return result;
}

unint64_t sub_1C01716A0()
{
  unint64_t result;

  result = qword_1EF5BDAD0;
  if (!qword_1EF5BDAD0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031101C, &type metadata for ContactIdProvider.PicsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BDAD0);
  }
  return result;
}

unint64_t sub_1C01716E0()
{
  unint64_t result;

  result = qword_1EF5BDAD8;
  if (!qword_1EF5BDAD8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0311044, &type metadata for ContactIdProvider.PicsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BDAD8);
  }
  return result;
}

unint64_t sub_1C0171720()
{
  unint64_t result;

  result = qword_1EF5BDAE0;
  if (!qword_1EF5BDAE0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03110BC, &type metadata for ContactIdProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BDAE0);
  }
  return result;
}

unint64_t sub_1C0171760()
{
  unint64_t result;

  result = qword_1EF5BDAE8;
  if (!qword_1EF5BDAE8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03110E4, &type metadata for ContactIdProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BDAE8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_61()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_5_38()
{
  return sub_1C03048AC();
}

uint64_t OUTLINED_FUNCTION_6_40()
{
  return sub_1C0304960();
}

void OUTLINED_FUNCTION_7_42()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 728) = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 736) = *(_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 744) = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v0 + 752) = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 760) = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 768) = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 776) = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 784) = *(_QWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 792) = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 800) = *(_QWORD *)(v0 + 120);
  *(_BYTE *)(v0 + 808) = *(_DWORD *)(v0 + 92);
}

uint64_t OUTLINED_FUNCTION_10_42()
{
  return sub_1C0303FD0();
}

void OUTLINED_FUNCTION_22_23()
{
  _QWORD *v0;

  v0[16] = 0;
  v0[17] = 0;
  v0[20] = 0;
  v0[21] = 0;
  v0[18] = 0;
  v0[19] = 0;
  v0[23] = 0;
  v0[24] = 0;
  v0[22] = 0;
  v0[27] = 0;
  v0[30] = 0;
  v0[12] = 0;
  v0[13] = 0;
}

uint64_t OUTLINED_FUNCTION_25_16()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_29_20(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 120) = a1;
  *(_DWORD *)(v1 + 92) = 1;
  *(_QWORD *)(v1 + 224) = 0xE000000000000000;
  *(_QWORD *)(v1 + 232) = 0xE000000000000000;
  *(_QWORD *)(v1 + 248) = 0xE000000000000000;
  *(_QWORD *)(v1 + 264) = 0xE000000000000000;
  *(_QWORD *)(v1 + 272) = 0xE000000000000000;
  *(_QWORD *)(v1 + 72) = 0xE000000000000000;
  *(_QWORD *)(v1 + 80) = 0xE000000000000000;
  *(_QWORD *)(v2 - 72) = 0xE000000000000000;
}

void OUTLINED_FUNCTION_35_21()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 200) = 0;
  *(_QWORD *)(v0 + 208) = 0xE000000000000000;
}

uint64_t OUTLINED_FUNCTION_37_15()
{
  return sub_1C0304B10();
}

uint64_t OUTLINED_FUNCTION_40_13()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_43_14()
{
  return 0;
}

void OUTLINED_FUNCTION_45_10()
{
  _QWORD *v0;

  v0[16] = 0;
  v0[17] = 0;
  v0[20] = 0;
  v0[21] = 0;
  v0[18] = 0;
  v0[19] = 0;
  v0[23] = 0;
  v0[24] = 0;
  v0[22] = 0;
}

uint64_t OUTLINED_FUNCTION_47_15()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_48_13(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 136) = a1;
}

uint64_t OUTLINED_FUNCTION_56_10()
{
  return sub_1C0304A08();
}

uint64_t OUTLINED_FUNCTION_60_1()
{
  return sub_1C0303FD0();
}

uint64_t OUTLINED_FUNCTION_68_5()
{
  return sub_1C0304B10();
}

uint64_t OUTLINED_FUNCTION_70_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_74_6()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_84_2()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 92) = 1;
  *(_QWORD *)(v0 + 224) = 0xE000000000000000;
  *(_QWORD *)(v0 + 232) = 0xE000000000000000;
  *(_QWORD *)(v0 + 248) = 0xE000000000000000;
}

uint64_t OUTLINED_FUNCTION_90_4()
{
  return sub_1C0303E20();
}

uint64_t OUTLINED_FUNCTION_93_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_94_4()
{
  return sub_1C0303E20();
}

unint64_t OUTLINED_FUNCTION_102_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1C017136C();
}

uint64_t OUTLINED_FUNCTION_103_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_106_0()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_0Tm(v0);
}

uint64_t OUTLINED_FUNCTION_107_0()
{
  return sub_1C0303E20();
}

uint64_t OUTLINED_FUNCTION_108_1(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = *(_QWORD *)(result - 8);
  *(_QWORD *)(v1 - 96) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_110()
{
  return sub_1C0303FD0();
}

uint64_t OUTLINED_FUNCTION_112_0()
{
  return sub_1C0303E20();
}

uint64_t OUTLINED_FUNCTION_118_0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_120_0()
{
  uint64_t v0;

  return v0 - 65;
}

uint64_t OUTLINED_FUNCTION_121_0()
{
  return sub_1C03048E8();
}

uint64_t TerminalElement.DateTimeValue.toDateTime()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t EnumTagSinglePayload;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;

  v73 = sub_1C0302860();
  v71 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  OUTLINED_FUNCTION_53();
  v70 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDAF0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_53();
  v75 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BBED8);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_53();
  v67 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDAF8);
  OUTLINED_FUNCTION_12_0();
  v6 = MEMORY[0x1E0C80A78](v5);
  v66 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v69 = (char *)&v65 - v9;
  MEMORY[0x1E0C80A78](v8);
  v72 = (char *)&v65 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BBEC8);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_53();
  v68 = v12;
  v13 = sub_1C03028F0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDB00);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDB08);
  OUTLINED_FUNCTION_12_0();
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v21);
  v26 = (char *)&v65 - v25;
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v65 - v27;
  sub_1C03027F4();
  v74 = sub_1C017216C((uint64_t)v28, 1);
  sub_1C0056C9C((uint64_t)v28, &qword_1EF5BDB08);
  sub_1C0302800();
  v29 = sub_1C01723E8((uint64_t)v19);
  sub_1C0056C9C((uint64_t)v19, &qword_1EF5BDB00);
  sub_1C03027DC();
  sub_1C0055ED0((uint64_t)v26, (uint64_t)v23, &qword_1EF5BDB08);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v13);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_7_41(EnumTagSinglePayload, &qword_1EF5BDB08);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v23, v13);
    if ((sub_1C01F711C() & 1) != 0)
    {
      v31 = sub_1C01F74F4();
      OUTLINED_FUNCTION_3_63();
      goto LABEL_7;
    }
    OUTLINED_FUNCTION_3_63();
  }
  v31 = 0;
LABEL_7:
  v33 = v74;
  v32 = v75;
  sub_1C0056C9C((uint64_t)v26, &qword_1EF5BDB08);
  sub_1C03027E8();
  v34 = sub_1C01723E8((uint64_t)v19);
  sub_1C0056C9C((uint64_t)v19, &qword_1EF5BDB00);
  v35 = sub_1C0172518(v33, v29);
  v75 = v31;
  v74 = sub_1C0172518(v31, v34);
  if (v33 | v29)
    goto LABEL_23;
  v36 = (uint64_t)v72;
  OUTLINED_FUNCTION_4_47();
  v37 = sub_1C03027D0();
  OUTLINED_FUNCTION_2_53(v36);
  if (v38)
  {
    v39 = &qword_1EF5BDAF8;
    v40 = v36;
  }
  else
  {
    v41 = v68;
    sub_1C03027B8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
    v42 = sub_1C0302944();
    v43 = __swift_getEnumTagSinglePayload(v41, 1, v42);
    if (v43 != 1)
    {
      v50 = sub_1C03029BC();
      v51 = v41;
      v52 = v67;
      __swift_storeEnumTagSinglePayload(v67, 1, 1, v50);
      sub_1C022A708(v52, 1, &v80);
      sub_1C0056C9C(v52, &qword_1EF5BBED8);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v51, v42);
      if (v80 != 38)
        goto LABEL_23;
      goto LABEL_14;
    }
    v39 = &qword_1EF5BBEC8;
    v40 = v41;
  }
  sub_1C0056C9C(v40, v39);
LABEL_14:
  v44 = (uint64_t)v69;
  OUTLINED_FUNCTION_4_47();
  OUTLINED_FUNCTION_2_53(v44);
  if (v38)
  {
    sub_1C0056C9C(v44, &qword_1EF5BDAF8);
  }
  else
  {
    v45 = TerminalElement.Recurrence.toRecurrence()();
    v46 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8);
    v46(v44, v37);
    if (v45)
    {
      v47 = *(_QWORD *)(v45 + 24);
      swift_retain();
      swift_release();
      if (v47)
      {
        v77 = 1;
        v48 = (uint64_t)v66;
        sub_1C030280C();
        v49 = OUTLINED_FUNCTION_2_53(v48);
        if (v38)
        {
          OUTLINED_FUNCTION_7_41(v49, &qword_1EF5BDAF8);
          v63 = 0;
        }
        else
        {
          v63 = TerminalElement.Recurrence.toRecurrence()();
          v46(v48, v37);
        }
        v76 = 4;
        type metadata accessor for DateTime.DateTimeRange();
        OUTLINED_FUNCTION_16_0();
        v64 = DateTime.DateTimeRange.init(withInterval:)(v47);
        type metadata accessor for DateTime();
        OUTLINED_FUNCTION_16_0();
        v61 = DateTime.init(withDate:time:definedValue:recurrencePattern:temporalIntent:occurringIn:)(0, 0, &v77, v63, &v76, v64);
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_34;
      }
    }
  }
LABEL_23:
  v79 = 1;
  v53 = sub_1C01725B4();
  sub_1C0302818();
  v54 = v73;
  v55 = __swift_getEnumTagSinglePayload(v32, 1, v73);
  if ((_DWORD)v55 == 1)
  {
    OUTLINED_FUNCTION_7_41(v55, &qword_1EF5BDAF0);
    v56 = 4;
  }
  else
  {
    v57 = v70;
    v58 = v71;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 16))(v70, v32, v54);
    v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 88))(v57, v54);
    if (v59 == *MEMORY[0x1E0DA08A0])
    {
      v56 = 0;
    }
    else if (v59 == *MEMORY[0x1E0DA08B0])
    {
      v56 = 1;
    }
    else if (v59 == *MEMORY[0x1E0DA08A8])
    {
      v56 = 2;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v54);
      v56 = 4;
    }
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v32, v54);
  }
  v78 = v56;
  v60 = sub_1C01728EC(v35, v74);
  type metadata accessor for DateTime();
  OUTLINED_FUNCTION_16_0();
  v61 = DateTime.init(withDate:time:definedValue:recurrencePattern:temporalIntent:occurringIn:)(v33, v29, &v79, v53, &v78, v60);
  swift_release();
  swift_release();
  swift_release();
LABEL_34:
  swift_release();
  return v61;
}

uint64_t sub_1C017216C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDAF8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BBEC8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDB08);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C03028F0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0055ED0(a1, (uint64_t)v12, &qword_1EF5BDB08);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {
    sub_1C0056C9C((uint64_t)v12, &qword_1EF5BDB08);
    if ((a2 & 1) == 0)
      return 0;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  if ((sub_1C01F711C() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    if ((a2 & 1) == 0)
      return 0;
LABEL_7:
    sub_1C030280C();
    v18 = sub_1C03027D0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v18) == 1)
    {
      v19 = &qword_1EF5BDAF8;
      v20 = (uint64_t)v6;
    }
    else
    {
      sub_1C03027B8();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v6, v18);
      v21 = sub_1C0302944();
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v21) != 1)
      {
        v17 = sub_1C022AEFC();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v9, v21);
        return v17;
      }
      v19 = &qword_1EF5BBEC8;
      v20 = (uint64_t)v9;
    }
    sub_1C0056C9C(v20, v19);
    return 0;
  }
  v17 = sub_1C01F74F4();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return v17;
}

uint64_t sub_1C01723E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDB00);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C0302938();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0055ED0(a1, (uint64_t)v4, &qword_1EF5BDB00);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    sub_1C0056C9C((uint64_t)v4, &qword_1EF5BDB00);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  if (!TerminalElement.Time.canConvertToTime()())
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  v9 = TerminalElement.Time.toTime()();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

uint64_t sub_1C0172518(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v6;
  char v7;

  if (!(a1 | a2))
    return 0;
  v7 = 1;
  v6 = 4;
  type metadata accessor for DateTime();
  swift_allocObject();
  v2 = DateTime.init(withDate:time:definedValue:recurrencePattern:temporalIntent:occurringIn:)(a1, a2, &v7, 0, &v6, 0);
  swift_retain();
  swift_retain();
  return v2;
}

uint64_t sub_1C01725B4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  double v15;
  uint64_t v16;
  uint64_t inited;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v23;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BBEC8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDAF8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C03027D0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C030280C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) == 1)
  {
    sub_1C0056C9C((uint64_t)v5, &qword_1EF5BDAF8);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  sub_1C03027B8();
  v11 = sub_1C0302944();
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v11) == 1)
  {
    sub_1C0056C9C((uint64_t)v2, &qword_1EF5BBEC8);
LABEL_12:
    v10 = TerminalElement.Recurrence.toRecurrence()();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v10;
  }
  v12 = sub_1C022AEFC();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v2, v11);
  if (!v12)
    goto LABEL_12;
  v13 = sub_1C03027C4();
  if ((v14 & 1) != 0)
  {
    swift_release();
    goto LABEL_12;
  }
  v15 = (double)v13;
  LOBYTE(v23) = 11;
  type metadata accessor for DateTime.Interval();
  swift_allocObject();
  v16 = DateTime.Interval.init(withQuantity:timeUnit:)((char *)&v23, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727640);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C030A730;
  type metadata accessor for DateTime();
  swift_allocObject();
  *(_QWORD *)(inited + 32) = DateTime.init(withDate:)(v12);
  v23 = inited;
  swift_retain();
  swift_retain();
  sub_1C0304150();
  v18 = v23;
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_1C03047F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v19)
  {
    sub_1C01200EC(v18);
    v21 = v20;
  }
  else
  {
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x1E0DEE9E8];
  }
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOBYTE(v23) = 3;
  type metadata accessor for DateTime.RecurrencePattern();
  swift_allocObject();
  return DateTime.RecurrencePattern.init(withRecurrenceDateTimeRange:recurrencePeriod:totalNumberOfOccurrences:recurrenceDateTimes:fromDateTime:toDateTime:definedValue:)(0, v16, 0, 1, v21, 0, 0, (char *)&v23);
}

uint64_t sub_1C01728EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  int EnumTagSinglePayload;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  char *v73;
  char v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  char v79;
  char v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  char v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  unsigned __int8 v143;
  unsigned __int8 v144;
  char v145;
  char v146;
  char v147;
  char v148;
  char v149;
  char v150;
  char v151;
  unsigned __int8 v152;
  char v153[9];

  v133 = a2;
  v131 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDAF8);
  MEMORY[0x1E0C80A78](v2);
  v128 = (char *)&v122 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDB10);
  MEMORY[0x1E0C80A78](v4);
  v136 = (char *)&v122 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDB18);
  MEMORY[0x1E0C80A78](v6);
  v135 = (char *)&v122 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDB20);
  MEMORY[0x1E0C80A78](v8);
  v125 = (char *)&v122 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C03028F0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v140 = (char *)&v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v126 = (char *)&v122 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BBEC8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v123 = (char *)&v122 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v127 = (char *)&v122 - v19;
  MEMORY[0x1E0C80A78](v18);
  v124 = (char *)&v122 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BBED0);
  v22 = MEMORY[0x1E0C80A78](v21);
  v138 = (char *)&v122 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v132 = (uint64_t)&v122 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDB00);
  v26 = MEMORY[0x1E0C80A78](v25);
  v137 = (char *)&v122 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v122 - v28;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDB08);
  v31 = MEMORY[0x1E0C80A78](v30);
  v139 = (uint64_t)&v122 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x1E0C80A78](v31);
  v35 = (char *)&v122 - v34;
  MEMORY[0x1E0C80A78](v33);
  v37 = (char *)&v122 - v36;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BBED8);
  v39 = MEMORY[0x1E0C80A78](v38);
  v122 = (uint64_t)&v122 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x1E0C80A78](v39);
  v134 = (uint64_t)&v122 - v42;
  v43 = MEMORY[0x1E0C80A78](v41);
  v130 = (uint64_t)&v122 - v44;
  v45 = MEMORY[0x1E0C80A78](v43);
  v47 = (char *)&v122 - v46;
  v48 = MEMORY[0x1E0C80A78](v45);
  v50 = (char *)&v122 - v49;
  v51 = MEMORY[0x1E0C80A78](v48);
  v142 = (uint64_t)&v122 - v52;
  MEMORY[0x1E0C80A78](v51);
  v54 = (char *)&v122 - v53;
  sub_1C03027F4();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v37, 1, v10);
  v141 = v54;
  if (EnumTagSinglePayload == 1)
  {
    sub_1C0056C9C((uint64_t)v37, &qword_1EF5BDB08);
    v56 = sub_1C03029BC();
    __swift_storeEnumTagSinglePayload((uint64_t)v54, 1, 1, v56);
  }
  else
  {
    sub_1C03028E4();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v37, v10);
  }
  sub_1C0302800();
  v57 = sub_1C0302938();
  if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v57) == 1)
  {
    sub_1C0056C9C((uint64_t)v29, &qword_1EF5BDB00);
    v58 = sub_1C03029BC();
    __swift_storeEnumTagSinglePayload(v142, 1, 1, v58);
  }
  else
  {
    sub_1C030292C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v29, v57);
  }
  sub_1C0055ED0((uint64_t)v141, (uint64_t)v50, &qword_1EF5BBED8);
  v59 = sub_1C03029BC();
  if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v59) == 1)
  {
    sub_1C0056C9C((uint64_t)v50, &qword_1EF5BBED8);
    LODWORD(v60) = 0;
  }
  else
  {
    LODWORD(v60) = sub_1C022C40C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v50, v59);
  }
  v61 = v140;
  sub_1C0055ED0(v142, (uint64_t)v47, &qword_1EF5BBED8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v59) == 1)
  {
    sub_1C0056C9C((uint64_t)v47, &qword_1EF5BBED8);
    v129 = 0;
  }
  else
  {
    v129 = sub_1C022C40C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v47, v59);
  }
  v62 = (uint64_t)v138;
  sub_1C03027F4();
  if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v10) == 1)
  {
    sub_1C0056C9C((uint64_t)v35, &qword_1EF5BDB08);
    v63 = (uint64_t)v136;
LABEL_17:
    v67 = 38;
    v153[0] = 38;
    goto LABEL_22;
  }
  v64 = v132;
  sub_1C01F7ABC(v132);
  v65 = v64;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v35, v10);
  v66 = sub_1C0302854();
  if (__swift_getEnumTagSinglePayload(v65, 1, v66) == 1)
  {
    sub_1C0056C9C(v65, &qword_1EF5BBED0);
    v63 = (uint64_t)v136;
    v61 = v140;
    goto LABEL_17;
  }
  v68 = v124;
  sub_1C0302848();
  v69 = (uint64_t)v68;
  v70 = sub_1C0302944();
  v71 = __swift_getEnumTagSinglePayload(v69, 1, v70);
  v63 = (uint64_t)v136;
  if (v71 == 1)
  {
    sub_1C0056C9C(v69, &qword_1EF5BBEC8);
    v153[0] = 38;
  }
  else
  {
    sub_1C022A708((uint64_t)v141, 0, v153);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8))(v69, v70);
  }
  v62 = (uint64_t)v138;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(v132, v66);
  v67 = v153[0];
  v61 = v140;
LABEL_22:
  if ((v60 & (v67 == 38)) != 1)
    goto LABEL_34;
  sub_1C03027F4();
  v72 = v139;
  if (__swift_getEnumTagSinglePayload(v139, 1, v10) == 1)
  {
    sub_1C0056C9C(v72, &qword_1EF5BDB08);
    goto LABEL_34;
  }
  v138 = (char *)v59;
  v73 = v126;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v126, v72, v10);
  sub_1C03028B4();
  if ((v74 & 1) == 0)
    v153[0] = 11;
  LODWORD(v140) = (_DWORD)v60;
  sub_1C03028C0();
  if ((v75 & 1) == 0)
    v153[0] = 9;
  v76 = (uint64_t)v125;
  sub_1C03028D8();
  v77 = sub_1C03029A4();
  v78 = __swift_getEnumTagSinglePayload(v76, 1, v77);
  sub_1C0056C9C(v76, &qword_1EF5BDB20);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v61, v73, v10);
  if (v78 != 1)
  {
    v81 = *(void (**)(char *, uint64_t))(v11 + 8);
    v81(v61, v10);
    v81(v73, v10);
    LOBYTE(v60) = (_BYTE)v140;
    v59 = (uint64_t)v138;
    goto LABEL_33;
  }
  sub_1C0302890();
  v80 = v79;
  v60 = *(void (**)(char *, uint64_t))(v11 + 8);
  v60(v61, v10);
  v60(v73, v10);
  LOBYTE(v60) = (_BYTE)v140;
  v59 = (uint64_t)v138;
  if ((v80 & 1) == 0)
LABEL_33:
    v153[0] = 8;
LABEL_34:
  v82 = (uint64_t)v137;
  sub_1C0302800();
  v83 = (char)v60;
  if (__swift_getEnumTagSinglePayload(v82, 1, v57) == 1)
  {
    v84 = &qword_1EF5BDB00;
    v85 = v82;
LABEL_38:
    sub_1C0056C9C(v85, v84);
    v87 = 38;
    v88 = (uint64_t)v141;
    goto LABEL_43;
  }
  sub_1C0302908();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v82, v57);
  v86 = sub_1C0302854();
  if (__swift_getEnumTagSinglePayload(v62, 1, v86) == 1)
  {
    v84 = &qword_1EF5BBED0;
    v85 = v62;
    goto LABEL_38;
  }
  v89 = v127;
  sub_1C0302848();
  v90 = (uint64_t)v89;
  v91 = sub_1C0302944();
  v92 = __swift_getEnumTagSinglePayload(v90, 1, v91);
  v88 = (uint64_t)v141;
  if (v92 == 1)
  {
    sub_1C0056C9C(v90, &qword_1EF5BBEC8);
    v152 = 38;
  }
  else
  {
    sub_1C022A708(v142, 0, (char *)&v152);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 8))(v90, v91);
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 8))(v62, v86);
  v87 = v152;
LABEL_43:
  v93 = (uint64_t)v135;
  sub_1C0302830();
  v94 = sub_1C0302998();
  if (__swift_getEnumTagSinglePayload(v93, 1, v94) == 1)
  {
    sub_1C0056C9C(v93, &qword_1EF5BDB18);
    v95 = 0;
  }
  else
  {
    v96 = TerminalElement.Interval.toInterval()();
    v97 = v93;
    v95 = v96;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 8))(v97, v94);
  }
  sub_1C0302824();
  v98 = sub_1C0302968();
  if (__swift_getEnumTagSinglePayload(v63, 1, v98) == 1)
  {
    sub_1C0056C9C(v63, &qword_1EF5BDB10);
    v99 = 0;
  }
  else
  {
    v99 = TerminalElement.Duration.toInterval()();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 8))(v63, v98);
  }
  v100 = v134;
  if (!(v83 & 1 | (v153[0] != 38)))
  {
    if ((v129 & 1) == 0)
    {
LABEL_55:
      v101 = 20;
      goto LABEL_56;
    }
    sub_1C0055ED0(v142, v134, &qword_1EF5BBED8);
    if (__swift_getEnumTagSinglePayload(v100, 1, v59) != 1)
    {
      TerminalElement.Qualifier.toQualifier()((char *)&v144);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v100, v59);
      v101 = v144;
      goto LABEL_56;
    }
LABEL_54:
    sub_1C0056C9C(v100, &qword_1EF5BBED8);
    goto LABEL_55;
  }
  v100 = v130;
  sub_1C0055ED0(v88, v130, &qword_1EF5BBED8);
  if (__swift_getEnumTagSinglePayload(v100, 1, v59) == 1)
    goto LABEL_54;
  TerminalElement.Qualifier.toQualifier()((char *)&v143);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v100, v59);
  v101 = v143;
LABEL_56:
  v102 = v153[0];
  if (v153[0] != 38 || v87 != 38 || v95 || v101 != 20 || v99)
  {
    sub_1C0056C9C(v142, &qword_1EF5BBED8);
    sub_1C0056C9C(v88, &qword_1EF5BBED8);
    v107 = v133;
    if (v133)
    {
      v108 = v131;
      swift_retain();
    }
    else
    {
      v108 = 0;
    }
    if (v102 == 38)
      v109 = v87;
    else
      v109 = v102;
    v146 = v109;
    v145 = v101;
    type metadata accessor for DateTime.DateTimeRange();
    swift_allocObject();
    v110 = &v146;
    v111 = &v145;
    v112 = v108;
    v113 = v107;
    v114 = v99;
    v115 = v95;
    goto LABEL_70;
  }
  v103 = (uint64_t)v128;
  sub_1C030280C();
  v104 = sub_1C03027D0();
  if (__swift_getEnumTagSinglePayload(v103, 1, v104) != 1)
  {
    v106 = v131;
    if (!v131 || !*(_QWORD *)(v131 + 16))
    {
      v118 = (uint64_t)v123;
      sub_1C03027B8();
      v119 = sub_1C0302944();
      if (__swift_getEnumTagSinglePayload(v118, 1, v119) != 1)
      {
        v120 = v122;
        __swift_storeEnumTagSinglePayload(v122, 1, 1, v59);
        sub_1C022A708(v120, 1, &v151);
        sub_1C0056C9C(v120, &qword_1EF5BBED8);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 8))(v118, v119);
        goto LABEL_80;
      }
      sub_1C0056C9C(v118, &qword_1EF5BBEC8);
    }
    v151 = 38;
LABEL_80:
    v105 = v133;
    sub_1C0056C9C(v142, &qword_1EF5BBED8);
    sub_1C0056C9C(v88, &qword_1EF5BBED8);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 8))(v103, v104);
    v121 = v151;
    if (v151 == 38)
      goto LABEL_81;
    if (v105)
      swift_retain();
    else
      v106 = 0;
    v148 = v121;
    v147 = 20;
    type metadata accessor for DateTime.DateTimeRange();
    swift_allocObject();
    v110 = &v148;
    v111 = &v147;
    v112 = v106;
    v113 = v105;
    v114 = 0;
    v115 = 0;
LABEL_70:
    v116 = DateTime.DateTimeRange.init(at:start:end:duration:interval:definedValue:qualifier:)(0, v112, v113, v114, v115, v110, v111);
    goto LABEL_71;
  }
  sub_1C0056C9C(v142, &qword_1EF5BBED8);
  sub_1C0056C9C(v88, &qword_1EF5BBED8);
  sub_1C0056C9C(v103, &qword_1EF5BDAF8);
  v105 = v133;
  v106 = v131;
LABEL_81:
  if (!v105)
    return 0;
  v150 = 38;
  v149 = 20;
  type metadata accessor for DateTime.DateTimeRange();
  swift_allocObject();
  v116 = DateTime.DateTimeRange.init(at:start:end:duration:interval:definedValue:qualifier:)(0, v106, v105, 0, 0, &v150, &v149);
  swift_retain();
LABEL_71:
  swift_retain();
  return v116;
}

uint64_t OUTLINED_FUNCTION_2_53(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_3_63()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_4_47()
{
  return sub_1C030280C();
}

uint64_t sub_1C0173780(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  BOOL v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v13;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (OUTLINED_FUNCTION_7_4() & 1) != 0)
    return 0;
  v9 = 0;
  v10 = a3 + 7;
  v11 = 1;
  while (1)
  {
    if (v3 == v11)
      return 0;
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2)
      break;
    v13 = OUTLINED_FUNCTION_7_4();
    result = v11++;
    v10 += 2;
    if ((v13 & 1) != 0)
      return result;
  }
  return v9;
}

unint64_t sub_1C017384C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v11;

  v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v4 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 0;
  v7 = 4 * v4;
  v8 = 15;
  while (sub_1C0304078() != a1 || v9 != a2)
  {
    v11 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
      return v8;
    v8 = sub_1C0303FA0();
    if (v7 == v8 >> 14)
      return 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C0173930()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC6F0);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C0303454();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v3);
  type metadata accessor for PhoneAppSelectionModelCache();
  v4 = OUTLINED_FUNCTION_94_5();
  type metadata accessor for MessagesAppSelectionModelCache();
  v5 = OUTLINED_FUNCTION_94_5();
  type metadata accessor for ModelBasedAppResolverRule();
  v6 = swift_allocObject();
  sub_1C0173A84((uint64_t)v2, v4, v5, (uint64_t)sub_1C0173A48, 0);
  return v6;
}

id sub_1C0173A10()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, 17.25);
  qword_1EF5FC740 = (uint64_t)result;
  return result;
}

uint64_t sub_1C0173A48(uint64_t a1)
{
  uint64_t v1;

  sub_1C00A76D8(a1);
  v1 = sub_1C0177F0C();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C0173A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC6F0);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_1_3();
  v14 = v5 + OBJC_IVAR____TtC13SiriInference25ModelBasedAppResolverRule_signalGatheringSignpostName;
  *(_QWORD *)v14 = "CommsAppSelectionModelInferenceSignalGathering";
  *(_QWORD *)(v14 + 8) = 46;
  *(_BYTE *)(v14 + 16) = 2;
  v15 = v5 + OBJC_IVAR____TtC13SiriInference25ModelBasedAppResolverRule_interactionStatsQuerySignpostName;
  *(_QWORD *)v15 = "CommsAppSelectionModelInferenceStatsQuery";
  *(_QWORD *)(v15 + 8) = 41;
  *(_BYTE *)(v15 + 16) = 2;
  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC13SiriInference25ModelBasedAppResolverRule_phoneAppSelectionModelCache) = a2;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC13SiriInference25ModelBasedAppResolverRule_messageAppSelectionModelCache) = a3;
  v16 = sub_1C0303454();
  if (__swift_getEnumTagSinglePayload(a1, 1, v16) != 1)
  {
    v7 = a1;
LABEL_6:
    sub_1C005A718(v7, v5 + OBJC_IVAR____TtC13SiriInference25ModelBasedAppResolverRule_appMatcher, &qword_1EF5BC6F0);
    return v5;
  }
  sub_1C0303448();
  if (!v6)
  {
    sub_1C003E978(a1, &qword_1EF5BC6F0);
    __swift_storeEnumTagSinglePayload(v7, 0, 1, v16);
    goto LABEL_6;
  }
  sub_1C003E978(a1, &qword_1EF5BC6F0);
  swift_release();
  swift_release();
  swift_release();
  type metadata accessor for ModelBasedAppResolverRule();
  swift_deallocPartialClassInstance();
  return v5;
}

uint64_t sub_1C0173C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC6F0);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = type metadata accessor for Signpost();
  v3[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0173CB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  os_log_type_t v38;
  _WORD *v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  os_log_type_t v52;
  _WORD *v53;
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  os_log_type_t v60;
  _WORD *v61;
  os_log_type_t v62;
  _WORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;

  v1 = *(_QWORD *)(v0[19] + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    v3 = (uint64_t *)(v1 + 40);
    v4 = (uint64_t *)MEMORY[0x1E0DEE9D8];
    do
    {
      v6 = *(v3 - 1);
      v5 = *v3;
      OUTLINED_FUNCTION_65();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_4_10();
        v4 = v9;
      }
      v7 = v4[2];
      if (v7 >= (unint64_t)v4[3] >> 1)
      {
        OUTLINED_FUNCTION_4_10();
        v4 = v10;
      }
      v4[2] = v7 + 1;
      v8 = &v4[2 * v7];
      v8[4] = v6;
      v8[5] = v5;
      v3 += 3;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v4 = (uint64_t *)MEMORY[0x1E0DEE9D8];
  }
  if (qword_1EF5B7F18 != -1)
    swift_once();
  v11 = OUTLINED_FUNCTION_9_0();
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1EF5FC6E0);
  swift_bridgeObjectRetain_n();
  sub_1C0303B80();
  v13 = OUTLINED_FUNCTION_9_1();
  v70 = v0;
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v71 = swift_slowAlloc();
    *(_DWORD *)v14 = 136315138;
    v15 = OUTLINED_FUNCTION_44();
    v16 = MEMORY[0x1C3B97040](v15, MEMORY[0x1E0DEA968]);
    v18 = v17;
    OUTLINED_FUNCTION_33();
    v0[17] = sub_1C003E6D8(v16, v18, &v71);
    sub_1C03044B0();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_53_2();
    _os_log_impl(&dword_1C0039000, v12, v13, "ModelBasedAppResolverRule#resolve candidate apps: %s", v14, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_53_2();

  v19 = v0[20];
  v20 = *(_QWORD *)(v19 + OBJC_IVAR____TtC13SiriInference25ModelBasedAppResolverRule_interactionStatsQuerySignpostName);
  v21 = *(_QWORD *)(v19
                  + OBJC_IVAR____TtC13SiriInference25ModelBasedAppResolverRule_interactionStatsQuerySignpostName
                  + 8);
  v22 = *(_BYTE *)(v19
                 + OBJC_IVAR____TtC13SiriInference25ModelBasedAppResolverRule_interactionStatsQuerySignpostName
                 + 16);
  if (qword_1ED728440 != -1)
    swift_once();
  v24 = v0[23];
  v23 = v0[24];
  v68 = v0[22];
  v25 = (void *)qword_1ED729668;
  v26 = v23 + *(int *)(v24 + 20);
  *(_QWORD *)v26 = v20;
  *(_QWORD *)(v26 + 8) = v21;
  *(_BYTE *)(v26 + 16) = v22;
  v27 = v25;
  sub_1C0303B68();
  *(_QWORD *)(v23 + *(int *)(v24 + 24)) = v27;
  v28 = v27;
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v29 = OUTLINED_FUNCTION_16_0();
  *(_OWORD *)(v29 + 16) = xmmword_1C0305B60;
  v30 = sub_1C03046E4();
  v32 = v31;
  *(_QWORD *)(v29 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v29 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v29 + 32) = v30;
  *(_QWORD *)(v29 + 40) = v32;
  OUTLINED_FUNCTION_53_1();
  sub_1C0303B50();

  v33 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_93_3(v33, v34, &qword_1EF5BC6F0);
  v35 = sub_1C0303454();
  v36 = OUTLINED_FUNCTION_44_10(v68);
  v37 = v70[22];
  if (v36 == 1)
  {
    OUTLINED_FUNCTION_33();
    sub_1C003E978(v37, &qword_1EF5BC6F0);
    OUTLINED_FUNCTION_69_7();
    v38 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_4(v38))
    {
      v39 = (_WORD *)OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_36_1(v39);
      v42 = "ModelBasedAppResolverRule#resolve bundle stats is nil";
      goto LABEL_19;
    }
    goto LABEL_20;
  }
  OUTLINED_FUNCTION_67_3();
  v43 = sub_1C0303430();
  if (v20)
  {
    v44 = v70[22];
    sub_1C003DDAC(v70[24]);
    OUTLINED_FUNCTION_33();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v44, v35);
    goto LABEL_23;
  }
  v46 = v43;
  v47 = v70[21];
  v48 = OUTLINED_FUNCTION_84_3(v70[22]);
  OUTLINED_FUNCTION_93_3(v48, v49, &qword_1EF5BC6F0);
  v50 = OUTLINED_FUNCTION_44_10(v47);
  v51 = v70[21];
  if (v50 == 1)
  {
    OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_33();
    sub_1C003E978(v51, &qword_1EF5BC6F0);
    OUTLINED_FUNCTION_69_7();
    v52 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_4(v52))
    {
      v53 = (_WORD *)OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_36_1(v53);
      v42 = "ModelBasedAppResolverRule#resolve bundle contact stats is nil";
      goto LABEL_19;
    }
    goto LABEL_20;
  }
  OUTLINED_FUNCTION_67_3();
  v69 = sub_1C0303418();
  OUTLINED_FUNCTION_84_3(v70[21]);
  sub_1C03043D8();
  sub_1C0303B5C();
  sub_1C01743CC();
  if (!v70[10])
  {
    OUTLINED_FUNCTION_28();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_33();
    sub_1C003E978((uint64_t)(v70 + 7), &qword_1EF5B9B68);
    OUTLINED_FUNCTION_69_7();
    v60 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_4(v60))
    {
      v61 = (_WORD *)OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_36_1(v61);
      v42 = "ModelBasedAppResolverRule#resolve Unable to get the CoreML model for prediction";
LABEL_19:
      OUTLINED_FUNCTION_66_5(&dword_1C0039000, v40, v41, v42);
      OUTLINED_FUNCTION_5();
    }
LABEL_20:
    OUTLINED_FUNCTION_87_6();
    OUTLINED_FUNCTION_2_31();
    *v4 = 0;
    v4[1] = 0;
    *((_BYTE *)v4 + 16) = 3;
    goto LABEL_23;
  }
  v54 = v70[19];
  sub_1C004CD5C((__int128 *)(v70 + 7), (uint64_t)(v70 + 2));
  sub_1C017442C(v4, v54, v69, v46);
  v56 = v55;
  OUTLINED_FUNCTION_28();
  swift_bridgeObjectRelease();
  if (v56)
  {
    v57 = v70[5];
    v58 = v70[6];
    __swift_project_boxed_opaque_existential_1(v70 + 2, v57);
    (*(void (**)(void *, uint64_t, uint64_t))(v58 + 16))(v56, v57, v58);
    v59 = v70[24];
    v67 = v70[15];
    v66 = v70[16];
    __swift_project_boxed_opaque_existential_1(v70 + 12, v67);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v66 + 24))(v4, v67, v66);

    OUTLINED_FUNCTION_33();
    sub_1C003DDAC(v59);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v70 + 12));
  }
  else
  {
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_69_7();
    v62 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_4(v62))
    {
      v63 = (_WORD *)OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_36_1(v63);
      OUTLINED_FUNCTION_66_5(&dword_1C0039000, v64, v65, "ModelBasedAppResolverRule#resolve Unable to generate CoreML model feature input");
      OUTLINED_FUNCTION_5();
    }
    OUTLINED_FUNCTION_87_6();
    OUTLINED_FUNCTION_2_31();
    *v4 = 0;
    v4[1] = 0;
    *((_BYTE *)v4 + 16) = 3;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v70 + 2));
LABEL_23:
  OUTLINED_FUNCTION_86_5();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v70[1])();
}

uint64_t sub_1C01743CC()
{
  char v0;

  CommsAppResolutionFeature.isMessage.getter();
  if ((v0 & 1) != 0)
    return sub_1C01A3A7C();
  else
    return sub_1C00D9F3C();
}

void sub_1C017442C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  void *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t (*v98)(uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t (*v109)(uint64_t, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  char v120;
  void (*v121)(uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  double v130;
  double v131;
  __n128 *v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  id v137;
  __n128 *v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  __n128 *v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  __n128 *v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  void *v152;
  __n128 *v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  void *v157;
  __n128 *v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  uint64_t v162;
  __n128 *v163;
  uint64_t v164;
  uint64_t v165;
  id v166;
  void *v167;
  __n128 *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  unint64_t v173;
  char v174;
  uint64_t v175;
  void *v176;
  uint64_t v177;
  __n128 *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  char v183;
  uint64_t v184;
  void *v185;
  uint64_t v186;
  __n128 *v187;
  uint64_t v188;
  uint64_t v189;
  void *v190;
  uint64_t v191;
  __n128 *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  char v197;
  uint64_t v198;
  void *v199;
  uint64_t v200;
  __n128 *v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  char v205;
  id v206;
  void *v207;
  uint64_t v208;
  void *v209;
  __n128 *v210;
  uint64_t v211;
  uint64_t v212;
  __n128 *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  void *v217;
  __n128 *v218;
  uint64_t v219;
  uint64_t v220;
  void *v221;
  void (*v222)(uint64_t, _QWORD, uint64_t);
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  void (*v226)(uint64_t, uint64_t);
  char v227;
  __n128 *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  __n128 *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  __n128 *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  __n128 *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  __n128 *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  __n128 *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  __n128 *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  __n128 *v259;
  uint64_t v260;
  uint64_t v261;
  void *v262;
  __n128 *v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  __n128 *v267;
  uint64_t v268;
  uint64_t v269;
  void *v270;
  __n128 *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  void *v275;
  __n128 *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  void *v280;
  __n128 *v281;
  uint64_t v282;
  uint64_t v283;
  __n128 *v284;
  uint64_t v285;
  uint64_t v286;
  __n128 *v287;
  uint64_t v288;
  uint64_t v289;
  id v290;
  void *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  void *v296;
  _QWORD *v297;
  void *v298;
  id v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  unsigned int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  int v322;
  int v323;
  unsigned int v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  _QWORD *v331;
  uint64_t v332;
  uint64_t v333;
  unint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  void *v348;
  void *v349;
  uint64_t v350;
  char *v351;
  void *v352;
  uint64_t v353;
  uint64_t *v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  id v358;
  uint64_t v359;
  uint64_t v360;
  void *v361;
  __int128 v362;
  uint64_t aBlock;
  uint64_t v364;
  uint64_t (*v365)(uint64_t);
  void *v366;
  void (*v367)();
  _QWORD *v368;
  uint64_t v369;
  unint64_t v370;
  double v371;
  unint64_t v372;

  v314 = a4;
  v313 = a3;
  v355 = a2;
  v8 = sub_1C0303CB8();
  v346 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_19(v10);
  v310 = sub_1C0303D00();
  v309 = *(_QWORD *)(v310 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_19(v12);
  v307 = sub_1C0303CC4();
  v306 = *(_QWORD *)(v307 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_19(v14);
  v360 = sub_1C03035A4();
  v345 = *(_QWORD *)(v360 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_53();
  v359 = v16;
  v344 = sub_1C0301CFC();
  v343 = *(_QWORD *)(v344 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_53();
  v353 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BAAE8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_35_16();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_35_16();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_35_16();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_35_16();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_35_16();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_35_16();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_35_16();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_35_16();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_35_16();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_19(v29);
  v356 = sub_1C0303550();
  v350 = *(_QWORD *)(v356 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_35_16();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_35_16();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_181();
  v361 = (void *)v33;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_35_16();
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v302 - v36;
  sub_1C03022E4();
  OUTLINED_FUNCTION_90_5();
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_32_0();
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727640);
  v40 = OUTLINED_FUNCTION_16_0();
  v362 = xmmword_1C030CE50;
  *(_OWORD *)(v40 + 16) = xmmword_1C030CE50;
  OUTLINED_FUNCTION_5_1(v40, (unint64_t *)&qword_1ED727C50);
  *(_QWORD *)(v40 + 32) = sub_1C0304444();
  v312 = a1;
  v41 = a1[2];
  *(_QWORD *)(v40 + 40) = sub_1C030427C();
  aBlock = v40;
  sub_1C0304150();
  v42 = aBlock;
  v43 = objc_allocWithZone(MEMORY[0x1E0C9E970]);
  v44 = sub_1C0122AE4(v42, 65568);
  v334 = v41;
  v326 = v39;
  v351 = v37;
  v335 = v6;
  v303 = v4;
  v304 = v5;
  if (!v44)
  {
    if (qword_1EF5B7F18 == -1)
    {
LABEL_3:
      v45 = OUTLINED_FUNCTION_9_0();
      __swift_project_value_buffer(v45, (uint64_t)qword_1EF5FC6E0);
      v46 = (void *)sub_1C0303B80();
      v47 = sub_1C03042E8();
      if (OUTLINED_FUNCTION_4_1(v47))
      {
        *(_WORD *)OUTLINED_FUNCTION_6() = 0;
        OUTLINED_FUNCTION_1_5(&dword_1C0039000, v48, v49, "ModelBasedAppResolverRule#generateModelInput Unable to initialize MLMultiArray");
        OUTLINED_FUNCTION_5();
      }

      return;
    }
LABEL_107:
    swift_once();
    goto LABEL_3;
  }
  v50 = v44;
  v51 = v312;
  sub_1C0177420();
  v52 = v313;
  sub_1C0176180();
  v54 = v53;
  sub_1C0176180();
  v330 = v55;
  sub_1C017683C();
  v57 = v56;
  sub_1C0176180();
  v59 = v58;
  sub_1C017683C();
  v61 = v60;
  sub_1C017661C();
  v327 = v62;
  sub_1C017661C();
  v331 = v63;
  v332 = v61;
  sub_1C017661C();
  v329 = v64;
  v333 = v59;
  sub_1C017661C();
  v328 = v65;
  if (v334)
  {
    v325 = v57;
    v66 = *(_QWORD *)(v355 + 16);
    if (v334 > *(_QWORD *)(v66 + 16))
    {
      __break(1u);
      return;
    }
    v324 = *MEMORY[0x1E0DA4138];
    v323 = *MEMORY[0x1E0DA4108];
    v322 = *MEMORY[0x1E0DA4128];
    v321 = *MEMORY[0x1E0DA40F8];
    v320 = *MEMORY[0x1E0DA4118];
    v319 = *MEMORY[0x1E0DA4100];
    v318 = *MEMORY[0x1E0DA4110];
    v317 = *MEMORY[0x1E0DA4120];
    OUTLINED_FUNCTION_21();
    v67 = 0;
    v355 = v66 + 48;
    v68 = v51 + 5;
    v316 = v8;
    v69 = v347;
    v315 = v54;
    v358 = v50;
    while (1)
    {
      v71 = *(v68 - 1);
      v70 = *v68;
      v371 = -1.0;
      v372 = 0xBFF0000000000000;
      v72 = *(_QWORD *)(v54 + 16);
      v357 = v71;
      v354 = v68;
      if (v72)
      {
        OUTLINED_FUNCTION_65();
        sub_1C00B3C3C(v71, v70);
        OUTLINED_FUNCTION_117_0();
        if ((v74 & 1) != 0)
        {
          v75 = *(_QWORD *)(v54 + 56) + *(_QWORD *)(v350 + 72) * v73;
          v71 = v336;
          v76 = v356;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v350 + 16))(v336, v75, v356);
          OUTLINED_FUNCTION_24_0();
        }
        else
        {
          v77 = OUTLINED_FUNCTION_82_6();
          v76 = v356;
        }
        OUTLINED_FUNCTION_50_13(v77, v78, v79, v76);
      }
      else
      {
        v76 = v356;
        v80 = OUTLINED_FUNCTION_82_6();
        __swift_storeEnumTagSinglePayload(v80, v81, v82, v76);
        OUTLINED_FUNCTION_65();
        v59 = v353;
        OUTLINED_FUNCTION_117_0();
      }
      sub_1C005A718(v71, (uint64_t)v51, &qword_1EF5BAAE8);
      if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v76) == 1)
      {
        OUTLINED_FUNCTION_99_2();
        sub_1C003E978((uint64_t)v51, &qword_1EF5BAAE8);
        v83 = v350;
      }
      else
      {
        v83 = v350;
        (*(void (**)(char *, uint64_t *, uint64_t))(v350 + 32))(v351, v51, v76);
      }
      v84 = v330;
      if (*(_QWORD *)(v330 + 16))
      {
        OUTLINED_FUNCTION_65();
        OUTLINED_FUNCTION_24_17();
        if ((v85 & 1) != 0)
        {
          OUTLINED_FUNCTION_36_19();
          v51 = v337;
          v84 = v356;
          OUTLINED_FUNCTION_186((uint64_t)v337, v86, v87);
          OUTLINED_FUNCTION_24_0();
        }
        else
        {
          v88 = OUTLINED_FUNCTION_63_2();
        }
        OUTLINED_FUNCTION_50_13(v88, v89, v90, v84);
      }
      else
      {
        v91 = OUTLINED_FUNCTION_63_2();
        __swift_storeEnumTagSinglePayload(v91, v92, v93, v84);
        OUTLINED_FUNCTION_65();
      }
      sub_1C005A718((uint64_t)v51, v69, &qword_1EF5BAAE8);
      OUTLINED_FUNCTION_70_1(v69);
      if (v94)
      {
        OUTLINED_FUNCTION_99_2();
        OUTLINED_FUNCTION_89_4(v69);
      }
      else
      {
        OUTLINED_FUNCTION_186((uint64_t)v352, v69, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v83 + 32));
      }
      OUTLINED_FUNCTION_29();
      v95 = v325;
      if (*(_QWORD *)(v325 + 16))
      {
        OUTLINED_FUNCTION_65();
        OUTLINED_FUNCTION_24_17();
        if ((v96 & 1) != 0)
        {
          OUTLINED_FUNCTION_36_19();
          v69 = v338;
          v95 = v356;
          OUTLINED_FUNCTION_186(v338, v97, v98);
          OUTLINED_FUNCTION_24_0();
        }
        else
        {
          v99 = OUTLINED_FUNCTION_61_4();
        }
        OUTLINED_FUNCTION_50_13(v99, v100, v101, v95);
      }
      else
      {
        v102 = OUTLINED_FUNCTION_61_4();
        __swift_storeEnumTagSinglePayload(v102, v103, v104, v95);
        OUTLINED_FUNCTION_65();
      }
      OUTLINED_FUNCTION_83_3(v69);
      OUTLINED_FUNCTION_70_1(v8);
      v105 = v361;
      if (v94)
      {
        sub_1C0303544();
        OUTLINED_FUNCTION_89_4(v8);
      }
      else
      {
        OUTLINED_FUNCTION_186((uint64_t)v361, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v83 + 32));
      }
      OUTLINED_FUNCTION_29();
      v106 = v333;
      if (*(_QWORD *)(v333 + 16))
      {
        OUTLINED_FUNCTION_65();
        OUTLINED_FUNCTION_24_17();
        if ((v107 & 1) != 0)
        {
          OUTLINED_FUNCTION_36_19();
          v8 = v339;
          v106 = v356;
          OUTLINED_FUNCTION_186(v339, v108, v109);
          OUTLINED_FUNCTION_24_0();
        }
        else
        {
          v110 = OUTLINED_FUNCTION_60_2();
        }
        OUTLINED_FUNCTION_50_13(v110, v111, v112, v106);
      }
      else
      {
        v113 = OUTLINED_FUNCTION_60_2();
        __swift_storeEnumTagSinglePayload(v113, v114, v115, v106);
        OUTLINED_FUNCTION_65();
      }
      v116 = v8;
      v117 = v341;
      OUTLINED_FUNCTION_83_3(v116);
      OUTLINED_FUNCTION_70_1(v117);
      if (v94)
      {
        OUTLINED_FUNCTION_99_2();
        OUTLINED_FUNCTION_89_4(v117);
      }
      else
      {
        OUTLINED_FUNCTION_186((uint64_t)v348, v117, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v83 + 32));
      }
      v118 = v349;
      v119 = v332;
      OUTLINED_FUNCTION_29();
      if (*(_QWORD *)(v119 + 16))
      {
        OUTLINED_FUNCTION_65();
        OUTLINED_FUNCTION_24_17();
        if ((v120 & 1) != 0)
        {
          OUTLINED_FUNCTION_36_19();
          v83 = v340;
          v117 = v356;
          v121(v340);
          OUTLINED_FUNCTION_24_0();
        }
        else
        {
          v122 = OUTLINED_FUNCTION_59_7();
        }
        OUTLINED_FUNCTION_50_13(v122, v123, v124, v117);
      }
      else
      {
        v125 = OUTLINED_FUNCTION_59_7();
        __swift_storeEnumTagSinglePayload(v125, v126, v127, v117);
        OUTLINED_FUNCTION_65();
      }
      v128 = v83;
      v129 = v342;
      sub_1C005A718(v128, v342, &qword_1EF5BAAE8);
      if (OUTLINED_FUNCTION_44_10(v129) == 1)
      {
        sub_1C0303544();
        sub_1C003E978(v129, &qword_1EF5BAAE8);
      }
      else
      {
        (*(void (**)(void *, uint64_t, uint64_t))(v350 + 32))(v118, v129, v117);
      }
      OUTLINED_FUNCTION_29();
      sub_1C0303520();
      sub_1C0301C9C();
      v131 = v130;
      OUTLINED_FUNCTION_5_2(v59, *(uint64_t (**)(uint64_t, _QWORD))(v343 + 8));
      sub_1C030238C();
      OUTLINED_FUNCTION_65();
      sub_1C03022D8();
      OUTLINED_FUNCTION_8_1();
      OUTLINED_FUNCTION_29();
      sub_1C03023A4();
      OUTLINED_FUNCTION_65();
      sub_1C03022D8();
      OUTLINED_FUNCTION_8_1();
      OUTLINED_FUNCTION_29();
      v132 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v132);
      v133 = sub_1C030427C();
      v134 = OUTLINED_FUNCTION_2_54(v133);
      OUTLINED_FUNCTION_0_62(v134);
      v135 = (void *)OUTLINED_FUNCTION_11_40();
      OUTLINED_FUNCTION_9_37();
      v136 = OUTLINED_FUNCTION_20_17();
      v137 = v358;
      OUTLINED_FUNCTION_14_34(v136, sel_setObject_forKeyedSubscript_);

      v138 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v138);
      v139 = sub_1C030427C();
      v140 = OUTLINED_FUNCTION_2_54(v139);
      OUTLINED_FUNCTION_0_62(v140);
      v141 = (void *)OUTLINED_FUNCTION_11_40();
      OUTLINED_FUNCTION_9_37();
      v142 = OUTLINED_FUNCTION_20_17();
      OUTLINED_FUNCTION_14_34(v142, sel_setObject_forKeyedSubscript_);

      v143 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v143);
      v144 = sub_1C030427C();
      v145 = OUTLINED_FUNCTION_2_54(v144);
      OUTLINED_FUNCTION_0_62(v145);
      v146 = (void *)OUTLINED_FUNCTION_11_40();
      OUTLINED_FUNCTION_9_37();
      v147 = OUTLINED_FUNCTION_20_17();
      OUTLINED_FUNCTION_14_34(v147, sel_setObject_forKeyedSubscript_);

      v148 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v148);
      v149 = sub_1C030427C();
      v150 = OUTLINED_FUNCTION_2_54(v149);
      OUTLINED_FUNCTION_0_62(v150);
      v151 = (void *)sub_1C03041A4();
      v152 = (void *)OUTLINED_FUNCTION_9_37();
      OUTLINED_FUNCTION_14();
      OUTLINED_FUNCTION_29_21(v137, sel_setObject_forKeyedSubscript_, (uint64_t)v151);

      v153 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v153);
      v154 = sub_1C030427C();
      v155 = OUTLINED_FUNCTION_2_54(v154);
      OUTLINED_FUNCTION_0_62(v155);
      v156 = (void *)sub_1C03041F8();
      v157 = (void *)OUTLINED_FUNCTION_9_37();
      OUTLINED_FUNCTION_14();
      OUTLINED_FUNCTION_29_21(v137, sel_setObject_forKeyedSubscript_, (uint64_t)v156);

      v158 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v158);
      v159 = sub_1C030427C();
      v160 = OUTLINED_FUNCTION_2_54(v159);
      OUTLINED_FUNCTION_0_62(v160);
      v161 = (void *)OUTLINED_FUNCTION_11_40();
      OUTLINED_FUNCTION_9_37();
      v162 = OUTLINED_FUNCTION_20_17();
      OUTLINED_FUNCTION_14_34(v162, sel_setObject_forKeyedSubscript_);

      v163 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v163);
      v164 = sub_1C030427C();
      v165 = OUTLINED_FUNCTION_2_54(v164);
      OUTLINED_FUNCTION_0_62(v165);
      v166 = sub_1C01760CC(v371);
      v167 = (void *)OUTLINED_FUNCTION_9_37();
      OUTLINED_FUNCTION_14();
      OUTLINED_FUNCTION_29_21(v137, sel_setObject_forKeyedSubscript_, (uint64_t)v166);

      v168 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v168);
      v169 = sub_1C030427C();
      v170 = OUTLINED_FUNCTION_2_54(v169);
      OUTLINED_FUNCTION_0_62(v170);
      v171 = *(_QWORD *)(v329 + 16);
      OUTLINED_FUNCTION_65();
      v172 = v331;
      if (!v171)
        goto LABEL_58;
      v173 = OUTLINED_FUNCTION_24_17();
      if ((v174 & 1) != 0)
        v175 = (uint64_t)OUTLINED_FUNCTION_64_6(v173);
      else
LABEL_58:
        v175 = OUTLINED_FUNCTION_11_40();
      v176 = (void *)v175;
      OUTLINED_FUNCTION_29();
      OUTLINED_FUNCTION_9_37();
      v177 = OUTLINED_FUNCTION_20_17();
      OUTLINED_FUNCTION_14_34(v177, sel_setObject_forKeyedSubscript_);

      v178 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v178);
      v179 = sub_1C030427C();
      v180 = OUTLINED_FUNCTION_2_54(v179);
      OUTLINED_FUNCTION_0_62(v180);
      v181 = *(_QWORD *)(v328 + 16);
      OUTLINED_FUNCTION_65();
      if (!v181)
        goto LABEL_62;
      v182 = OUTLINED_FUNCTION_24_17();
      if ((v183 & 1) != 0)
        v184 = (uint64_t)OUTLINED_FUNCTION_64_6(v182);
      else
LABEL_62:
        v184 = OUTLINED_FUNCTION_11_40();
      v185 = (void *)v184;
      OUTLINED_FUNCTION_29();
      OUTLINED_FUNCTION_9_37();
      v186 = OUTLINED_FUNCTION_20_17();
      OUTLINED_FUNCTION_14_34(v186, sel_setObject_forKeyedSubscript_);

      v187 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v187);
      v188 = sub_1C030427C();
      v189 = OUTLINED_FUNCTION_2_54(v188);
      OUTLINED_FUNCTION_0_62(v189);
      v190 = (void *)OUTLINED_FUNCTION_11_40();
      OUTLINED_FUNCTION_9_37();
      v191 = OUTLINED_FUNCTION_20_17();
      OUTLINED_FUNCTION_14_34(v191, sel_setObject_forKeyedSubscript_);

      v192 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v192);
      v193 = sub_1C030427C();
      v194 = OUTLINED_FUNCTION_2_54(v193);
      OUTLINED_FUNCTION_0_62(v194);
      v195 = *(_QWORD *)(v327 + 16);
      OUTLINED_FUNCTION_65();
      if (!v195)
        goto LABEL_66;
      v196 = OUTLINED_FUNCTION_24_17();
      if ((v197 & 1) != 0)
        v198 = (uint64_t)OUTLINED_FUNCTION_64_6(v196);
      else
LABEL_66:
        v198 = OUTLINED_FUNCTION_11_40();
      v199 = (void *)v198;
      OUTLINED_FUNCTION_29();
      OUTLINED_FUNCTION_9_37();
      v200 = OUTLINED_FUNCTION_20_17();
      OUTLINED_FUNCTION_14_34(v200, sel_setObject_forKeyedSubscript_);

      v201 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v201);
      v202 = sub_1C030427C();
      v203 = OUTLINED_FUNCTION_2_54(v202);
      OUTLINED_FUNCTION_0_62(v203);
      if (!v172[2])
        goto LABEL_70;
      v204 = sub_1C00B3C3C(v357, v70);
      if ((v205 & 1) != 0)
        v206 = *(id *)(v172[7] + 8 * v204);
      else
LABEL_70:
        v206 = (id)OUTLINED_FUNCTION_11_40();
      v207 = v206;
      v208 = v345;
      OUTLINED_FUNCTION_29();
      v209 = (void *)OUTLINED_FUNCTION_9_37();
      OUTLINED_FUNCTION_8_1();
      OUTLINED_FUNCTION_52_11();

      v210 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v210);
      v211 = sub_1C030427C();
      v212 = OUTLINED_FUNCTION_2_54(v211);
      OUTLINED_FUNCTION_0_62(v212);
      OUTLINED_FUNCTION_11_40();
      OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_7_43();
      OUTLINED_FUNCTION_5_39();

      v213 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v213);
      v214 = sub_1C030427C();
      v215 = OUTLINED_FUNCTION_2_54(v214);
      OUTLINED_FUNCTION_0_62(v215);
      v216 = *(_QWORD *)(v355 - 8);
      aBlock = *(_QWORD *)(v355 - 16);
      v364 = v216;
      v369 = 0x6C7070612E6D6F63;
      v370 = 0xE900000000000065;
      v217 = (void *)sub_1C004F444();
      sub_1C004F480();
      sub_1C0303E44();
      sub_1C03041A4();
      OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_7_43();
      OUTLINED_FUNCTION_5_39();

      v218 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v218);
      v219 = sub_1C030427C();
      v220 = OUTLINED_FUNCTION_2_54(v219);
      OUTLINED_FUNCTION_0_62(v220);
      v221 = (void *)OUTLINED_FUNCTION_18_26();
      v222 = *(void (**)(uint64_t, _QWORD, uint64_t))(v208 + 104);
      v224 = v359;
      v223 = v360;
      v222(v359, v324, v360);
      v225 = sub_1C0303598();
      v226 = *(void (**)(uint64_t, uint64_t))(v208 + 8);
      v226(v224, v223);
      if (v225 < 0)
        break;
      OUTLINED_FUNCTION_41_12();
      if (v227)
        goto LABEL_92;
      OUTLINED_FUNCTION_13_29();
      OUTLINED_FUNCTION_40_14();
      OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_7_43();
      OUTLINED_FUNCTION_8_32(v358, sel_setObject_forKeyedSubscript_);

      v228 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v228);
      v229 = sub_1C030427C();
      v230 = OUTLINED_FUNCTION_2_54(v229);
      OUTLINED_FUNCTION_0_62(v230);
      OUTLINED_FUNCTION_18_26();
      v231 = OUTLINED_FUNCTION_34_20();
      OUTLINED_FUNCTION_32_17(v231, (uint64_t)&v354);
      OUTLINED_FUNCTION_47_16();
      OUTLINED_FUNCTION_17_23();
      if (v225 < 0)
        goto LABEL_93;
      OUTLINED_FUNCTION_41_12();
      if (v227)
        goto LABEL_94;
      OUTLINED_FUNCTION_13_29();
      OUTLINED_FUNCTION_40_14();
      OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_7_43();
      OUTLINED_FUNCTION_8_32(v358, sel_setObject_forKeyedSubscript_);

      v232 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v232);
      v233 = sub_1C030427C();
      v234 = OUTLINED_FUNCTION_2_54(v233);
      OUTLINED_FUNCTION_0_62(v234);
      OUTLINED_FUNCTION_18_26();
      v235 = OUTLINED_FUNCTION_34_20();
      OUTLINED_FUNCTION_32_17(v235, (uint64_t)&v353 + 4);
      OUTLINED_FUNCTION_47_16();
      OUTLINED_FUNCTION_17_23();
      if (v225 < 0)
        goto LABEL_95;
      OUTLINED_FUNCTION_41_12();
      if (v227)
        goto LABEL_96;
      OUTLINED_FUNCTION_13_29();
      OUTLINED_FUNCTION_40_14();
      OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_7_43();
      OUTLINED_FUNCTION_8_32(v358, sel_setObject_forKeyedSubscript_);

      v236 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v236);
      v237 = sub_1C030427C();
      v238 = OUTLINED_FUNCTION_2_54(v237);
      OUTLINED_FUNCTION_0_62(v238);
      OUTLINED_FUNCTION_18_26();
      v239 = OUTLINED_FUNCTION_34_20();
      OUTLINED_FUNCTION_32_17(v239, (uint64_t)&v353);
      OUTLINED_FUNCTION_47_16();
      OUTLINED_FUNCTION_17_23();
      if (v225 < 0)
        goto LABEL_97;
      OUTLINED_FUNCTION_41_12();
      if (v227)
        goto LABEL_98;
      OUTLINED_FUNCTION_13_29();
      OUTLINED_FUNCTION_40_14();
      OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_7_43();
      OUTLINED_FUNCTION_8_32(v358, sel_setObject_forKeyedSubscript_);

      v240 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v240);
      v241 = sub_1C030427C();
      v242 = OUTLINED_FUNCTION_2_54(v241);
      OUTLINED_FUNCTION_0_62(v242);
      OUTLINED_FUNCTION_18_26();
      v243 = OUTLINED_FUNCTION_34_20();
      OUTLINED_FUNCTION_32_17(v243, (uint64_t)&v352 + 4);
      OUTLINED_FUNCTION_47_16();
      OUTLINED_FUNCTION_17_23();
      if (v225 < 0)
        goto LABEL_99;
      OUTLINED_FUNCTION_41_12();
      if (v227)
        goto LABEL_100;
      OUTLINED_FUNCTION_13_29();
      OUTLINED_FUNCTION_40_14();
      OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_7_43();
      OUTLINED_FUNCTION_8_32(v358, sel_setObject_forKeyedSubscript_);

      v244 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v244);
      v245 = sub_1C030427C();
      v246 = OUTLINED_FUNCTION_2_54(v245);
      OUTLINED_FUNCTION_0_62(v246);
      OUTLINED_FUNCTION_18_26();
      v247 = OUTLINED_FUNCTION_34_20();
      OUTLINED_FUNCTION_32_17(v247, (uint64_t)&v352);
      OUTLINED_FUNCTION_47_16();
      OUTLINED_FUNCTION_17_23();
      if (v225 < 0)
        goto LABEL_101;
      OUTLINED_FUNCTION_41_12();
      if (v227)
        goto LABEL_102;
      OUTLINED_FUNCTION_13_29();
      OUTLINED_FUNCTION_40_14();
      OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_7_43();
      OUTLINED_FUNCTION_8_32(v358, sel_setObject_forKeyedSubscript_);

      v248 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v248);
      v249 = sub_1C030427C();
      v250 = OUTLINED_FUNCTION_2_54(v249);
      OUTLINED_FUNCTION_0_62(v250);
      OUTLINED_FUNCTION_18_26();
      v251 = OUTLINED_FUNCTION_34_20();
      OUTLINED_FUNCTION_32_17(v251, (uint64_t)&v351 + 4);
      OUTLINED_FUNCTION_47_16();
      OUTLINED_FUNCTION_17_23();
      if (v225 < 0)
        goto LABEL_103;
      OUTLINED_FUNCTION_41_12();
      if (v227)
        goto LABEL_104;
      OUTLINED_FUNCTION_13_29();
      OUTLINED_FUNCTION_40_14();
      OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_7_43();
      v50 = v358;
      OUTLINED_FUNCTION_8_32(v358, sel_setObject_forKeyedSubscript_);

      v252 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v252);
      v253 = sub_1C030427C();
      v254 = OUTLINED_FUNCTION_2_54(v253);
      OUTLINED_FUNCTION_0_62(v254);
      v51 = (uint64_t *)OUTLINED_FUNCTION_18_26();
      v256 = v359;
      v255 = v360;
      v222(v359, v317, v360);
      v257 = v255;
      v258 = sub_1C0303598();
      v226(v256, v257);
      if (v258 < 0)
        goto LABEL_105;
      OUTLINED_FUNCTION_41_12();
      if (v227)
        goto LABEL_106;
      v357 = v67 + 1;
      v354 += 2;
      OUTLINED_FUNCTION_13_29();
      OUTLINED_FUNCTION_40_14();
      OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_7_43();
      OUTLINED_FUNCTION_5_39();

      v259 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v259);
      v260 = sub_1C030427C();
      v261 = OUTLINED_FUNCTION_2_54(v260);
      OUTLINED_FUNCTION_0_62(v261);
      v262 = v361;
      sub_1C0303538();
      sub_1C030427C();
      OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_7_43();
      OUTLINED_FUNCTION_5_39();

      v263 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v263);
      v264 = sub_1C030427C();
      v265 = OUTLINED_FUNCTION_2_54(v264);
      OUTLINED_FUNCTION_0_62(v265);
      v266 = v351;
      sub_1C0303538();
      sub_1C030427C();
      OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_7_43();
      OUTLINED_FUNCTION_5_39();

      v267 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v267);
      v268 = sub_1C030427C();
      v269 = OUTLINED_FUNCTION_2_54(v268);
      OUTLINED_FUNCTION_0_62(v269);
      v270 = v352;
      sub_1C0303538();
      sub_1C030427C();
      OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_7_43();
      OUTLINED_FUNCTION_5_39();

      v271 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v271);
      v272 = sub_1C030427C();
      v273 = OUTLINED_FUNCTION_2_54(v272);
      OUTLINED_FUNCTION_0_62(v273);
      v274 = (uint64_t)v349;
      v275 = v349;
      sub_1C0303538();
      sub_1C030427C();
      OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_7_43();
      OUTLINED_FUNCTION_5_39();

      v276 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v276);
      v277 = sub_1C030427C();
      v278 = OUTLINED_FUNCTION_2_54(v277);
      OUTLINED_FUNCTION_0_62(v278);
      v279 = (uint64_t)v348;
      v280 = v348;
      sub_1C0303538();
      sub_1C030427C();
      OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_7_43();
      OUTLINED_FUNCTION_5_39();

      v281 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v281);
      v282 = sub_1C030427C();
      v283 = OUTLINED_FUNCTION_2_54(v282);
      OUTLINED_FUNCTION_0_62(v283);
      OUTLINED_FUNCTION_11_40();
      OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_7_43();
      OUTLINED_FUNCTION_5_39();

      v284 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v284);
      v285 = sub_1C030427C();
      v286 = OUTLINED_FUNCTION_2_54(v285);
      OUTLINED_FUNCTION_0_62(v286);
      OUTLINED_FUNCTION_11_40();
      OUTLINED_FUNCTION_4_48();
      OUTLINED_FUNCTION_7_43();
      OUTLINED_FUNCTION_5_39();

      v287 = (__n128 *)OUTLINED_FUNCTION_1_51();
      OUTLINED_FUNCTION_3_64(v287);
      v288 = sub_1C030427C();
      v289 = OUTLINED_FUNCTION_2_54(v288);
      OUTLINED_FUNCTION_0_62(v289);
      v290 = sub_1C01760CC(fabs(round(v131)));
      v291 = (void *)OUTLINED_FUNCTION_9_37();
      OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_52_11();

      v68 = v354;
      OUTLINED_FUNCTION_52_6(v274);
      OUTLINED_FUNCTION_52_6(v279);
      OUTLINED_FUNCTION_52_6((uint64_t)v361);
      OUTLINED_FUNCTION_52_6((uint64_t)v352);
      OUTLINED_FUNCTION_52_6((uint64_t)v351);
      v355 += 24;
      v67 = v357;
      v8 = v316;
      v59 = v346;
      v69 = v347;
      v54 = v315;
      if (v334 == v357)
      {
        OUTLINED_FUNCTION_26();
        OUTLINED_FUNCTION_26();
        OUTLINED_FUNCTION_26();
        v52 = v313;
        goto LABEL_90;
      }
    }
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
    goto LABEL_107;
  }
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_26();
  v59 = v346;
LABEL_90:
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_26();
  v292 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_5_1(v292, (unint64_t *)&qword_1ED7283E0);
  v293 = v306;
  v294 = v305;
  v295 = v307;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v306 + 104))(v305, *MEMORY[0x1E0DEF520], v307);
  v296 = (void *)sub_1C03043CC();
  (*(void (**)(uint64_t, uint64_t))(v293 + 8))(v294, v295);
  v297 = (_QWORD *)OUTLINED_FUNCTION_16_0();
  v297[2] = v50;
  v297[3] = v52;
  v297[4] = v314;
  v367 = sub_1C01782DC;
  v368 = v297;
  aBlock = MEMORY[0x1E0C809B0];
  v364 = 1107296256;
  v365 = sub_1C007B870;
  v366 = &block_descriptor_14;
  v298 = _Block_copy(&aBlock);
  v299 = v50;
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_47();
  v300 = v308;
  sub_1C0303CDC();
  v369 = MEMORY[0x1E0DEE9D8];
  sub_1C0073C68();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726EF0);
  sub_1C0073D24();
  v301 = v311;
  sub_1C0304588();
  MEMORY[0x1C3B972B0](0, v300, v301, v298);
  _Block_release(v298);

  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v301, v8);
  OUTLINED_FUNCTION_5_2(v300, *(uint64_t (**)(uint64_t, _QWORD))(v309 + 8));
  OUTLINED_FUNCTION_5_2(v335, *(uint64_t (**)(uint64_t, _QWORD))(v303 + 8));
  swift_release();
}

void sub_1C0175C74(void *a1)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;

  if (qword_1EF5B7F18 != -1)
    swift_once();
  v2 = sub_1C0303B98();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EF5FC6E0);
  v3 = a1;
  v4 = sub_1C0303B80();
  v5 = sub_1C03042E8();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138412290;
    v23 = (uint64_t)v3;
    v8 = v3;
    sub_1C03044B0();
    *v7 = v3;

    _os_log_impl(&dword_1C0039000, v4, v5, "ModelBasedAppResolverRule#features array: %@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727620);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v7, -1, -1);
    MEMORY[0x1C3B98378](v6, -1, -1);

  }
  else
  {

  }
  swift_bridgeObjectRetain_n();
  v9 = sub_1C0303B80();
  v10 = sub_1C03042E8();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v23 = v12;
    *(_DWORD *)v11 = 136315138;
    sub_1C0303550();
    swift_bridgeObjectRetain();
    v13 = sub_1C0303D9C();
    v15 = v14;
    swift_bridgeObjectRelease();
    sub_1C003E6D8(v13, v15, &v23);
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v9, v10, "ModelBasedAppResolverRule#history bundle contact stats: %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v12, -1, -1);
    MEMORY[0x1C3B98378](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  v16 = sub_1C0303B80();
  v17 = sub_1C03042E8();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v23 = v19;
    *(_DWORD *)v18 = 136315138;
    sub_1C0303550();
    swift_bridgeObjectRetain();
    v20 = sub_1C0303D9C();
    v22 = v21;
    swift_bridgeObjectRelease();
    sub_1C003E6D8(v20, v22, &v23);
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v16, v17, "ModelBasedAppResolverRule#history bundle stats: %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v19, -1, -1);
    MEMORY[0x1C3B98378](v18, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

id sub_1C01760CC(double a1)
{
  id v1;
  double v2;
  long double v4;

  if (a1 == 0.0)
  {
    v1 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    v2 = 0.0001;
    return objc_msgSend(v1, sel_initWithDouble_, v2);
  }
  if (a1 >= 0.0 && a1 <= 2592000.0)
  {
    v4 = log(fabs(a1));
    v1 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    v2 = v4;
    return objc_msgSend(v1, sel_initWithDouble_, v2);
  }
  if (qword_1EF5B7F60 != -1)
    swift_once();
  return (id)qword_1EF5FC740;
}

void sub_1C0176180()
{
  _QWORD *v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  int64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  int64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;

  OUTLINED_FUNCTION_18_0();
  v2 = v1;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_71_1();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_27();
  v63 = (char *)v7;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v59 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDCB0);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_58_7();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_37();
  v70 = v13;
  v64 = sub_1C0303DB4();
  v65 = v4 + 64;
  OUTLINED_FUNCTION_75_6();
  v17 = v16 & v15;
  if ((v2 & 1) != 0)
    v18 = 1702195828;
  else
    v18 = 0x65736C6166;
  v19 = 0xE500000000000000;
  if ((v2 & 1) != 0)
    v19 = 0xE400000000000000;
  v68 = v19;
  v69 = v18;
  v66 = (unint64_t)(v14 + 63) >> 6;
  v67 = v4;
  v59 = v66 - 1;
  OUTLINED_FUNCTION_44();
  v71 = 0;
  if (!v17)
    goto LABEL_9;
LABEL_7:
  v20 = __clz(__rbit64(v17));
  v21 = (v17 - 1) & v17;
  v22 = v70;
  v23 = v20 | (v71 << 6);
LABEL_8:
  v24 = *(_QWORD *)(v67 + 56);
  v25 = (_QWORD *)(*(_QWORD *)(v67 + 48) + 16 * v23);
  v26 = v25[1];
  *v0 = *v25;
  v0[1] = v26;
  v27 = v24 + *(_QWORD *)(v6 + 72) * v23;
  v28 = OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_104_0((uint64_t)v0 + *(int *)(v28 + 48), v27, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  OUTLINED_FUNCTION_81_4((uint64_t)v0);
  OUTLINED_FUNCTION_47();
  while (1)
  {
    sub_1C005A718((uint64_t)v0, (uint64_t)v22, &qword_1EF5BDCB0);
    v35 = OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_70_1((uint64_t)v22);
    if (v36)
    {
      swift_release();
      OUTLINED_FUNCTION_1();
      return;
    }
    v72 = v21;
    v37 = v0;
    v39 = *v22;
    v38 = v22[1];
    v40 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v40(v10, (char *)v22 + *(int *)(v35 + 48), v5);
    v41 = sub_1C01770B4(v39, v38);
    v43 = v42;
    v75 = v39;
    v76 = v38;
    v73 = v69;
    v74 = v68;
    sub_1C004F408();
    v44 = sub_1C030454C();
    OUTLINED_FUNCTION_33();
    swift_bridgeObjectRelease();
    if ((v44 & 1) != 0)
    {
      v60 = v10;
      v61 = v6;
      v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      v62 = v5;
      OUTLINED_FUNCTION_104_0((uint64_t)v63, (uint64_t)v10, v45);
      v46 = v64;
      OUTLINED_FUNCTION_14_1();
      v75 = v46;
      v47 = OUTLINED_FUNCTION_116_0();
      if (__OFADD__(*(_QWORD *)(v46 + 16), (v48 & 1) == 0))
        goto LABEL_43;
      v49 = v47;
      v6 = v48;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5BDCC0);
      if ((sub_1C03047BC() & 1) != 0)
      {
        v50 = OUTLINED_FUNCTION_116_0();
        if ((v6 & 1) != (v51 & 1))
          goto LABEL_46;
        v49 = v50;
      }
      v52 = v75;
      if ((v6 & 1) != 0)
      {
        v53 = OUTLINED_FUNCTION_110_0();
        OUTLINED_FUNCTION_104_0(v53, (uint64_t)v63, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 40));
      }
      else
      {
        *(_QWORD *)(v75 + 8 * (v49 >> 6) + 64) |= 1 << v49;
        v54 = (uint64_t *)(*(_QWORD *)(v52 + 48) + 16 * v49);
        *v54 = v41;
        v54[1] = v43;
        v55 = OUTLINED_FUNCTION_110_0();
        v40((char *)v55, v63, v5);
        v56 = *(_QWORD *)(v52 + 16);
        v57 = __OFADD__(v56, 1);
        v58 = v56 + 1;
        if (v57)
          goto LABEL_44;
        *(_QWORD *)(v52 + 16) = v58;
        swift_bridgeObjectRetain();
      }
      v64 = v75;
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_22_14();
      v10 = v60;
      OUTLINED_FUNCTION_109(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    }
    else
    {
      OUTLINED_FUNCTION_109(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
      OUTLINED_FUNCTION_55_0();
    }
    v0 = v37;
    v17 = v72;
    if (v72)
      goto LABEL_7;
LABEL_9:
    v29 = v71 + 1;
    if (__OFADD__(v71, 1))
      break;
    v22 = v70;
    if (v29 < v66)
    {
      v30 = *(_QWORD *)(v65 + 8 * v29);
      if (v30)
        goto LABEL_12;
      v31 = v71 + 2;
      ++v71;
      if (v29 + 1 < v66)
      {
        v30 = *(_QWORD *)(v65 + 8 * v31);
        if (v30)
          goto LABEL_15;
        v71 = v29 + 1;
        if (v29 + 2 < v66)
        {
          v30 = *(_QWORD *)(v65 + 8 * (v29 + 2));
          if (v30)
          {
            v29 += 2;
            goto LABEL_12;
          }
          v31 = v29 + 3;
          v71 = v29 + 2;
          if (v29 + 3 < v66)
          {
            v30 = *(_QWORD *)(v65 + 8 * v31);
            if (!v30)
            {
              while (1)
              {
                v29 = v31 + 1;
                if (__OFADD__(v31, 1))
                  goto LABEL_45;
                if (v29 >= v66)
                {
                  v71 = v59;
                  goto LABEL_26;
                }
                v30 = *(_QWORD *)(v65 + 8 * v29);
                ++v31;
                if (v30)
                  goto LABEL_12;
              }
            }
LABEL_15:
            v29 = v31;
LABEL_12:
            v21 = (v30 - 1) & v30;
            v23 = __clz(__rbit64(v30)) + (v29 << 6);
            v71 = v29;
            goto LABEL_8;
          }
        }
      }
    }
LABEL_26:
    v32 = OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_22_0((uint64_t)v0, v33, v34, v32);
    v21 = 0;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  sub_1C0304A68();
  __break(1u);
}

void sub_1C017661C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_18_0();
  v4 = v3;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BAAE8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_58_7();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - v9;
  OUTLINED_FUNCTION_71_1();
  OUTLINED_FUNCTION_90_5();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_53();
  v26 = v12;
  v13 = *(_QWORD *)(v6 + 16);
  if (v13)
  {
    swift_bridgeObjectRetain();
    v25 = v6;
    v14 = (uint64_t *)(v6 + 40);
    v15 = MEMORY[0x1E0DEE9D8];
    do
    {
      v16 = *v14;
      if (*(_QWORD *)(v4 + 16))
      {
        v17 = *(v14 - 1);
        OUTLINED_FUNCTION_32();
        v18 = sub_1C00B3C3C(v17, v16);
        if ((v19 & 1) != 0)
        {
          OUTLINED_FUNCTION_12((uint64_t)v10, *(_QWORD *)(v4 + 56) + *(_QWORD *)(v0 + 72) * v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
          v20 = (uint64_t)v10;
          v21 = 0;
        }
        else
        {
          v20 = (uint64_t)v10;
          v21 = 1;
        }
        __swift_storeEnumTagSinglePayload(v20, v21, 1, v2);
      }
      else
      {
        OUTLINED_FUNCTION_50_10((uint64_t)v10);
        OUTLINED_FUNCTION_32();
      }
      sub_1C005A718((uint64_t)v10, v1, &qword_1EF5BAAE8);
      if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
      {
        sub_1C0303544();
        sub_1C003E978(v1, &qword_1EF5BAAE8);
      }
      else
      {
        OUTLINED_FUNCTION_12(v26, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32));
      }
      OUTLINED_FUNCTION_29_0();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_97_1();
        v15 = v23;
      }
      v22 = *(_QWORD *)(v15 + 16);
      if (v22 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        OUTLINED_FUNCTION_97_1();
        v15 = v24;
      }
      *(_QWORD *)(v15 + 16) = v22 + 1;
      OUTLINED_FUNCTION_12(v15+ ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80))+ *(_QWORD *)(v0 + 72) * v22, v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32));
      v14 += 2;
      --v13;
    }
    while (v13);
    v6 = v25;
    OUTLINED_FUNCTION_55_0();
  }
  sub_1C0177160(v6);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_1();
}

void sub_1C017683C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  BOOL v45;
  char v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  char v57;
  char v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  uint64_t v69;
  uint64_t v70;
  int64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  _QWORD *v76;
  uint64_t v77;
  int64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  OUTLINED_FUNCTION_18_0();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BAAE8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_32_0();
  v4 = OUTLINED_FUNCTION_71_1();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_27();
  v79 = v6;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_181();
  v73 = v8;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_181();
  v70 = v10;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_181();
  v72 = v12;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_37();
  v81 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDCB0);
  OUTLINED_FUNCTION_121();
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)((char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v16);
  v20 = (uint64_t *)((char *)&v67 - v19);
  v21 = sub_1C0303DB4();
  v69 = v2 + 64;
  OUTLINED_FUNCTION_75_6();
  v80 = v23 & v22;
  v71 = (unint64_t)(v24 + 63) >> 6;
  v68 = v71 - 1;
  v74 = v2;
  OUTLINED_FUNCTION_44();
  v77 = v0;
  v78 = 0;
  v75 = v20;
  v76 = v18;
  while (1)
  {
    v25 = v80;
    if (v80)
    {
      v80 &= v80 - 1;
      v26 = __clz(__rbit64(v25)) | (v78 << 6);
LABEL_4:
      v27 = *(_QWORD *)(v74 + 56);
      v28 = (_QWORD *)(*(_QWORD *)(v74 + 48) + 16 * v26);
      v29 = v28[1];
      *v18 = *v28;
      v18[1] = v29;
      v30 = v27 + *(_QWORD *)(v5 + 72) * v26;
      v31 = OUTLINED_FUNCTION_92_3();
      OUTLINED_FUNCTION_12((uint64_t)v18 + *(int *)(v31 + 48), v30, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
      OUTLINED_FUNCTION_81_4((uint64_t)v18);
      OUTLINED_FUNCTION_44();
      goto LABEL_23;
    }
    v32 = v78 + 1;
    if (__OFADD__(v78, 1))
      goto LABEL_49;
    if (v32 < v71)
    {
      v33 = *(_QWORD *)(v69 + 8 * v32);
      if (v33)
        goto LABEL_8;
      v34 = v78 + 2;
      ++v78;
      if (v32 + 1 < v71)
      {
        v33 = *(_QWORD *)(v69 + 8 * v34);
        if (v33)
          goto LABEL_11;
        v78 = v32 + 1;
        if (v32 + 2 < v71)
        {
          v33 = *(_QWORD *)(v69 + 8 * (v32 + 2));
          if (v33)
          {
            v32 += 2;
            goto LABEL_8;
          }
          v34 = v32 + 3;
          v78 = v32 + 2;
          if (v32 + 3 < v71)
            break;
        }
      }
    }
LABEL_22:
    v35 = OUTLINED_FUNCTION_92_3();
    OUTLINED_FUNCTION_22_0((uint64_t)v18, v36, v37, v35);
    v80 = 0;
LABEL_23:
    sub_1C005A718((uint64_t)v18, (uint64_t)v20, &qword_1EF5BDCB0);
    v38 = OUTLINED_FUNCTION_92_3();
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v38) == 1)
    {
      swift_release();
      OUTLINED_FUNCTION_1();
      return;
    }
    v39 = *v20;
    v40 = v20[1];
    OUTLINED_FUNCTION_54_8(v81, (uint64_t)v20 + *(int *)(v38 + 48));
    sub_1C01770B4(v39, v40);
    OUTLINED_FUNCTION_55_0();
    if (*(_QWORD *)(v21 + 16))
    {
      OUTLINED_FUNCTION_32();
      v41 = OUTLINED_FUNCTION_37_16();
      if ((v42 & 1) != 0)
      {
        OUTLINED_FUNCTION_12(v0, *(_QWORD *)(v21 + 56) + *(_QWORD *)(v5 + 72) * v41, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
        v43 = 0;
      }
      else
      {
        v43 = 1;
      }
      __swift_storeEnumTagSinglePayload(v0, v43, 1, v4);
      OUTLINED_FUNCTION_29_0();
      if (__swift_getEnumTagSinglePayload(v0, 1, v4) != 1)
      {
        OUTLINED_FUNCTION_54_8(v72, v0);
        v56 = v70;
        sub_1C0176DF4();
        OUTLINED_FUNCTION_54_8(v73, v56);
        OUTLINED_FUNCTION_14_1();
        v82 = v21;
        OUTLINED_FUNCTION_37_16();
        OUTLINED_FUNCTION_87_3();
        if (v45)
          goto LABEL_51;
        v58 = v57;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5BDCC0);
        v59 = OUTLINED_FUNCTION_62_5();
        v0 = v77;
        if ((v59 & 1) != 0)
        {
          OUTLINED_FUNCTION_37_16();
          if ((v58 & 1) != (v60 & 1))
            goto LABEL_54;
        }
        v61 = v82;
        if ((v58 & 1) != 0)
        {
          v62 = OUTLINED_FUNCTION_111_1();
          OUTLINED_FUNCTION_12(v62, v73, v63);
        }
        else
        {
          v64 = OUTLINED_FUNCTION_26_23();
          OUTLINED_FUNCTION_54_8(v64, v73);
          v65 = *(_QWORD *)(v61 + 16);
          v45 = __OFADD__(v65, 1);
          v66 = v65 + 1;
          if (v45)
            goto LABEL_52;
          *(_QWORD *)(v61 + 16) = v66;
          OUTLINED_FUNCTION_32();
        }
        v21 = v82;
        OUTLINED_FUNCTION_29_0();
        OUTLINED_FUNCTION_22_14();
        v55 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
        v55(v72, v4);
        goto LABEL_46;
      }
    }
    else
    {
      OUTLINED_FUNCTION_50_10(v0);
    }
    sub_1C003E978(v0, &qword_1EF5BAAE8);
    OUTLINED_FUNCTION_12(v79, v81, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
    OUTLINED_FUNCTION_14_1();
    v82 = v21;
    OUTLINED_FUNCTION_37_16();
    OUTLINED_FUNCTION_87_3();
    if (v45)
    {
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    v46 = v44;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5BDCC0);
    v47 = OUTLINED_FUNCTION_62_5();
    v0 = v77;
    if ((v47 & 1) != 0)
    {
      OUTLINED_FUNCTION_37_16();
      if ((v46 & 1) != (v48 & 1))
        goto LABEL_54;
    }
    v49 = v82;
    if ((v46 & 1) != 0)
    {
      v50 = OUTLINED_FUNCTION_111_1();
      OUTLINED_FUNCTION_12(v50, v79, v51);
    }
    else
    {
      v52 = OUTLINED_FUNCTION_26_23();
      OUTLINED_FUNCTION_54_8(v52, v79);
      v53 = *(_QWORD *)(v49 + 16);
      v45 = __OFADD__(v53, 1);
      v54 = v53 + 1;
      if (v45)
        goto LABEL_50;
      *(_QWORD *)(v49 + 16) = v54;
      OUTLINED_FUNCTION_32();
    }
    v21 = v82;
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_22_14();
    v55 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
LABEL_46:
    v20 = v75;
    v18 = v76;
    v55(v81, v4);
  }
  v33 = *(_QWORD *)(v69 + 8 * v34);
  if (v33)
  {
LABEL_11:
    v32 = v34;
LABEL_8:
    v80 = (v33 - 1) & v33;
    v26 = __clz(__rbit64(v33)) + (v32 << 6);
    v78 = v32;
    goto LABEL_4;
  }
  while (1)
  {
    v32 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v32 >= v71)
    {
      v78 = v68;
      goto LABEL_22;
    }
    v33 = *(_QWORD *)(v69 + 8 * v32);
    ++v34;
    if (v33)
      goto LABEL_8;
  }
LABEL_53:
  __break(1u);
LABEL_54:
  sub_1C0304A68();
  __break(1u);
}

void sub_1C0176DF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];

  OUTLINED_FUNCTION_18_0();
  v24[1] = v0;
  v1 = sub_1C0301CFC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)v24 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v24 - v9;
  v11 = sub_1C030358C();
  v12 = sub_1C0177004(0, v11);
  v13 = sub_1C0303508();
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_17;
    while (1)
    {
      v15 = 0;
      v16 = *(_QWORD *)(v12 + 16);
      while (v15 < v16)
      {
        *(_WORD *)(v12 + 2 * v15 + 32) = *(_WORD *)(v13 + 32 + 2 * v15);
        if (v14 == ++v15)
          goto LABEL_6;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      sub_1C01F5B8C();
      v12 = v22;
    }
  }
LABEL_6:
  OUTLINED_FUNCTION_14();
  v13 = sub_1C0303508();
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C01F5B8C();
      v12 = v23;
    }
    v17 = 0;
    v18 = v13 + 32;
    v19 = *(_QWORD *)(v12 + 16);
    while (v17 < v19)
    {
      v20 = v12 + 2 * v17;
      v21 = *(__int16 *)(v20 + 32) + *(__int16 *)(v18 + 2 * v17);
      if ((__int16)(*(_WORD *)(v20 + 32) + *(_WORD *)(v18 + 2 * v17)) != v21)
        goto LABEL_16;
      ++v17;
      *(_WORD *)(v20 + 32) = v21;
      if (v14 == v17)
        goto LABEL_13;
    }
    goto LABEL_15;
  }
LABEL_13:
  OUTLINED_FUNCTION_14();
  sub_1C0303520();
  sub_1C0303520();
  sub_1C0301C6C();
  OUTLINED_FUNCTION_85_4((uint64_t)v5);
  OUTLINED_FUNCTION_85_4((uint64_t)v8);
  sub_1C0303520();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v8, v10, v1);
  sub_1C030352C();
  OUTLINED_FUNCTION_85_4((uint64_t)v10);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C0177004(__int16 a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  if (a2 < 0)
  {
    result = sub_1C03047E0();
    __break(1u);
  }
  else if (a2)
  {
    result = sub_1C0304174();
    v5 = 0;
    *(_QWORD *)(result + 16) = a2;
    do
    {
      v6 = result + 2 * v5++;
      *(_WORD *)(v6 + 32) = a1;
    }
    while (a2 != v5);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1C01770B4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1;
  sub_1C017384C(124, 0xE100000000000000, a1, a2);
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_44();
  }
  else
  {
    OUTLINED_FUNCTION_44();
    v4 = sub_1C0304090();
    v6 = v5;
    v8 = v7;
    v10 = v9;
    OUTLINED_FUNCTION_33();
    v2 = MEMORY[0x1C3B96E30](v4, v6, v8, v10);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1C0177160(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  uint64_t *v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  void *v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  id v31;

  OUTLINED_FUNCTION_5_1(a1, (unint64_t *)&qword_1ED727C50);
  v2 = (_QWORD *)sub_1C0303DB4();
  sub_1C03036A0();
  v3 = sub_1C0303514();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = (double *)(v3 + 32);
    v6 = *(_QWORD *)(a1 + 16);
    v7 = (uint64_t *)(a1 + 40);
    while (v6)
    {
      v8 = *v5;
      v9 = *(v7 - 1);
      v10 = *v7;
      v11 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
      swift_bridgeObjectRetain();
      v12 = objc_msgSend(v11, sel_initWithDouble_, v8);
      if (v12)
      {
        v30 = v4;
        v31 = v12;
        OUTLINED_FUNCTION_14_1();
        v13 = v9;
        v14 = OUTLINED_FUNCTION_107_1(v9);
        if (__OFADD__(v2[2], (v15 & 1) == 0))
          goto LABEL_20;
        v16 = v14;
        v17 = v15;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDCA8);
        if ((sub_1C03047BC() & 1) != 0)
        {
          v18 = OUTLINED_FUNCTION_107_1(v13);
          if ((v17 & 1) != (v19 & 1))
            goto LABEL_22;
          v16 = v18;
        }
        if ((v17 & 1) != 0)
        {
          v20 = v2[7];

          *(_QWORD *)(v20 + 8 * v16) = v31;
        }
        else
        {
          v2[(v16 >> 6) + 8] |= 1 << v16;
          v25 = (uint64_t *)(v2[6] + 16 * v16);
          *v25 = v13;
          v25[1] = v10;
          *(_QWORD *)(v2[7] + 8 * v16) = v31;
          v26 = v2[2];
          v27 = __OFADD__(v26, 1);
          v28 = v26 + 1;
          if (v27)
            goto LABEL_21;
          v2[2] = v28;
          swift_bridgeObjectRetain();
        }
        OUTLINED_FUNCTION_28();
        OUTLINED_FUNCTION_22_14();
        v4 = v30;
      }
      else
      {
        OUTLINED_FUNCTION_47();
        v21 = OUTLINED_FUNCTION_107_1(v9);
        v23 = v22;
        OUTLINED_FUNCTION_14();
        if ((v23 & 1) != 0)
        {
          OUTLINED_FUNCTION_14_1();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDCA8);
          sub_1C03047BC();
          swift_bridgeObjectRelease();
          v24 = *(void **)(v2[7] + 8 * v21);
          sub_1C03047D4();

          OUTLINED_FUNCTION_28();
        }
        swift_bridgeObjectRelease();
      }
      --v6;
      v7 += 2;
      ++v5;
      if (!--v4)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    result = sub_1C0304A68();
    __break(1u);
  }
  else
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  return result;
}

void sub_1C0177420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  dispatch_semaphore_t v21;
  uint64_t v22;
  NSObject *v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  void *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_18_0();
  v35 = v2;
  v3 = sub_1C0303D30();
  v33 = *(_QWORD *)(v3 - 8);
  v34 = v3;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_27();
  v30 = v5;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_37();
  v32 = v7;
  v8 = type metadata accessor for Signpost();
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_1_3();
  v31 = v0;
  v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13SiriInference25ModelBasedAppResolverRule_signalGatheringSignpostName);
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13SiriInference25ModelBasedAppResolverRule_signalGatheringSignpostName + 8);
  v12 = *(_BYTE *)(v0 + OBJC_IVAR____TtC13SiriInference25ModelBasedAppResolverRule_signalGatheringSignpostName + 16);
  if (qword_1ED728440 != -1)
    swift_once();
  v13 = (void *)qword_1ED729668;
  v14 = v1 + *(int *)(v8 + 20);
  *(_QWORD *)v14 = v10;
  *(_QWORD *)(v14 + 8) = v11;
  *(_BYTE *)(v14 + 16) = v12;
  v15 = v13;
  sub_1C0303B68();
  *(_QWORD *)(v1 + *(int *)(v8 + 24)) = v15;
  v16 = v15;
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v17 = OUTLINED_FUNCTION_16_0();
  *(_OWORD *)(v17 + 16) = xmmword_1C0305B60;
  v18 = sub_1C03046E4();
  v20 = v19;
  *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v17 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v17 + 32) = v18;
  *(_QWORD *)(v17 + 40) = v20;
  OUTLINED_FUNCTION_53_1();
  sub_1C0303B50();
  swift_bridgeObjectRelease();

  v21 = dispatch_semaphore_create(0);
  v22 = OUTLINED_FUNCTION_16_0();
  sub_1C030205C();
  *(_QWORD *)(v22 + 16) = sub_1C0303DB4();
  swift_retain();
  v23 = v21;
  sub_1C0177E40(v35, v31, v22, v23);
  sub_1C0303D0C();
  MEMORY[0x1C3B96C38](v30, 0.5);
  v24 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
  v24(v30, v34);
  sub_1C03043F0();
  v24(v32, v34);
  if ((sub_1C0303CAC() & 1) != 0)
  {
    if (qword_1EF5B7F18 != -1)
      swift_once();
    v25 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EF5FC6E0);
    v26 = (void *)sub_1C0303B80();
    v27 = sub_1C03042E8();
    if (OUTLINED_FUNCTION_4_1(v27))
    {
      *(_WORD *)OUTLINED_FUNCTION_6() = 0;
      OUTLINED_FUNCTION_1_5(&dword_1C0039000, v28, v29, "ModelBasedAppResolverRule#gatherSignals timeout on gathering signal values");
      OUTLINED_FUNCTION_5();
    }

  }
  sub_1C03043D8();
  sub_1C0303B5C();
  swift_beginAccess();
  OUTLINED_FUNCTION_44();
  OUTLINED_FUNCTION_21();
  sub_1C03022CC();

  OUTLINED_FUNCTION_2_31();
  swift_release();
  OUTLINED_FUNCTION_1();
}

void sub_1C0177790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD aBlock[7];

  v51 = a3;
  v52 = a2;
  v4 = sub_1C0303CB8();
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  MEMORY[0x1E0C80A78](v4);
  v47 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C0303D00();
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  MEMORY[0x1E0C80A78](v6);
  v44 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C0303CC4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1C03020A4();
  v43 = *(_QWORD *)(v48 - 8);
  v12 = *(_QWORD *)(v43 + 64);
  v13 = MEMORY[0x1E0C80A78](v48);
  v14 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v39 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA3E8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0045DFC(a1, (uint64_t)v19, &qword_1EF5BA3E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (qword_1EF5B7F18 != -1)
      swift_once();
    v20 = sub_1C0303B98();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EF5FC6E0);
    v21 = sub_1C0303B80();
    v22 = sub_1C03042E8();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1C0039000, v21, v22, "ModelBasedAppResolverRule#gatherSignals gathering failed", v23, 2u);
      MEMORY[0x1C3B98378](v23, -1, -1);
    }

    sub_1C003E978((uint64_t)v19, &qword_1EF5BA3E8);
  }
  else
  {
    v41 = v16;
    v42 = v52 + 16;
    v24 = v43;
    v25 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
    v26 = v19;
    v27 = v48;
    v25(v16, v26, v48);
    sub_1C00447B0(0, (unint64_t *)&qword_1ED7283E0);
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF520], v8);
    v40 = sub_1C03043CC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v14, v16, v27);
    v28 = v24;
    v29 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    v30 = swift_allocObject();
    v31 = v27;
    v25((char *)(v30 + v29), v14, v27);
    aBlock[4] = sub_1C0178264;
    aBlock[5] = v30;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C007B870;
    aBlock[3] = &block_descriptor_10;
    v32 = _Block_copy(aBlock);
    v33 = v44;
    sub_1C0303CDC();
    v53 = MEMORY[0x1E0DEE9D8];
    sub_1C0073C68();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726EF0);
    sub_1C0073D24();
    v34 = v47;
    v35 = v50;
    sub_1C0304588();
    v36 = (void *)v40;
    MEMORY[0x1C3B972B0](0, v33, v34, v32);
    _Block_release(v32);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v34, v35);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v33, v46);
    swift_release();
    v37 = v41;
    v38 = sub_1C0302098();
    swift_beginAccess();
    *(_QWORD *)(v52 + 16) = v38;
    swift_bridgeObjectRelease();
    sub_1C0304408();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v37, v31);
  }
}

void sub_1C0177C10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = sub_1C03020A4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF5B7F18 != -1)
    swift_once();
  v6 = sub_1C0303B98();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EF5FC6E0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v7 = sub_1C0303B80();
  v8 = sub_1C03042E8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v17 = v15;
    *(_DWORD *)v9 = 136315138;
    v14 = v9 + 4;
    sub_1C0302098();
    sub_1C030205C();
    v10 = sub_1C0303DC0();
    v12 = v11;
    swift_bridgeObjectRelease();
    v16 = sub_1C003E6D8(v10, v12, &v17);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    _os_log_impl(&dword_1C0039000, v7, v8, "ModelBasedAppResolverRule#gatherSignals gathered values: %s", v9, 0xCu);
    v13 = v15;
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v13, -1, -1);
    MEMORY[0x1C3B98378](v9, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }

}

uint64_t sub_1C0177E40(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v8 = sub_1C0302398();
  v9 = sub_1C03023B0();
  sub_1C004F750(v9);
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(v8, a1);
  swift_bridgeObjectRelease();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  swift_retain();
  v11 = a4;
  sub_1C03020B0();

  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1C0177F0C()
{
  sub_1C03020C8();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1C03020BC();
}

unint64_t sub_1C0177F6C()
{
  return 0xD000000000000019;
}

uint64_t sub_1C0177F88()
{
  uint64_t v0;

  swift_release();
  sub_1C003E978(v0 + OBJC_IVAR____TtC13SiriInference25ModelBasedAppResolverRule_appMatcher, &qword_1EF5BC6F0);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1C0177FDC()
{
  sub_1C0177F88();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0178000()
{
  return type metadata accessor for ModelBasedAppResolverRule();
}

uint64_t type metadata accessor for ModelBasedAppResolverRule()
{
  uint64_t result;

  result = qword_1EF5BDB78;
  if (!qword_1EF5BDB78)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C0178040()
{
  unint64_t v0;

  sub_1C01780D8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1C01780D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF5BDB90)
  {
    sub_1C0303454();
    v0 = sub_1C030448C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF5BDB90);
  }
}

uint64_t sub_1C017812C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C008E620;
  return sub_1C0173C1C(a1, a2);
}

unint64_t sub_1C0178190()
{
  sub_1C0177F6C();
  return 0xD000000000000019;
}

uint64_t sub_1C01781AC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C01781D0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1C01781FC(uint64_t a1)
{
  uint64_t v1;

  sub_1C0177790(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C0178204()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1C03020A4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_1C0178264()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1C03020A4() - 8) + 80);
  sub_1C0177C10(v0 + ((v1 + 16) & ~v1));
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_1C01782A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C01782DC()
{
  uint64_t v0;

  sub_1C0175C74(*(void **)(v0 + 16));
}

uint64_t OUTLINED_FUNCTION_0_62(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 40) = a1;
  *(_QWORD *)(v2 - 192) = v1;
  return sub_1C0304150();
}

uint64_t OUTLINED_FUNCTION_1_51()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_2_54(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return sub_1C030427C();
}

__n128 OUTLINED_FUNCTION_3_64(__n128 *a1)
{
  uint64_t v1;
  __n128 result;

  result = *(__n128 *)(v1 - 208);
  a1[1] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_4_48()
{
  return sub_1C0304120();
}

id OUTLINED_FUNCTION_5_39()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  return objc_msgSend(v1, (SEL)(v3 + 2632), v0, v2);
}

uint64_t OUTLINED_FUNCTION_7_43()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_8_32(id a1, SEL a2)
{
  uint64_t v2;
  uint64_t v3;

  return objc_msgSend(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_9_37()
{
  return sub_1C0304120();
}

uint64_t OUTLINED_FUNCTION_11_40()
{
  return sub_1C0304444();
}

uint64_t OUTLINED_FUNCTION_13_29()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_14_34(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  return objc_msgSend(v3, a2, v2, v4);
}

uint64_t OUTLINED_FUNCTION_17_23()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_18_26()
{
  return sub_1C0303508();
}

uint64_t OUTLINED_FUNCTION_20_17()
{
  return swift_bridgeObjectRelease();
}

unint64_t OUTLINED_FUNCTION_24_17()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C00B3C3C(*(_QWORD *)(v1 - 248), v0);
}

id OUTLINED_FUNCTION_29_21(id a1, SEL a2, uint64_t a3)
{
  uint64_t v3;

  return objc_msgSend(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_32_17@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(uint64_t, _QWORD, uint64_t);
  uint64_t v3;

  return v2(a1, *(unsigned int *)(a2 - 256), v3);
}

uint64_t OUTLINED_FUNCTION_34_20()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 232);
}

unint64_t OUTLINED_FUNCTION_37_16()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C00B3C3C(v0, v1);
}

uint64_t OUTLINED_FUNCTION_40_14()
{
  return sub_1C0304AD4();
}

uint64_t OUTLINED_FUNCTION_47_16()
{
  return sub_1C0303598();
}

uint64_t OUTLINED_FUNCTION_60_2()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 392);
}

uint64_t OUTLINED_FUNCTION_61_4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 408);
}

uint64_t OUTLINED_FUNCTION_67_3()
{
  uint64_t v0;

  return **(_QWORD **)(v0 + 152);
}

uint64_t OUTLINED_FUNCTION_69_7()
{
  return sub_1C0303B80();
}

uint64_t OUTLINED_FUNCTION_81_4(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_84_3(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void OUTLINED_FUNCTION_93_3(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_1C0045DFC(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_94_5()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_97_1()
{
  sub_1C004FB6C();
}

unint64_t OUTLINED_FUNCTION_107_1(uint64_t a1)
{
  uint64_t v1;

  return sub_1C00B3C3C(a1, v1);
}

uint64_t OUTLINED_FUNCTION_109@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_110_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return *(_QWORD *)(v0 + 56) + *(_QWORD *)(*(_QWORD *)(v2 - 208) + 72) * v1;
}

uint64_t OUTLINED_FUNCTION_111_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return *(_QWORD *)(v0 + 56) + *(_QWORD *)(v1 + 72) * v2;
}

unint64_t OUTLINED_FUNCTION_116_0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C00B3C3C(v1, v0);
}

uint64_t AppMatches.signals.getter()
{
  return OUTLINED_FUNCTION_4_49();
}

id AppMatches.__allocating_init(recommendation:bundleIds:signals:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_15_27();
  return AppMatches.init(recommendation:bundleIds:signals:)(a1, a2, a3);
}

id sub_1C01785D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C01785E0(a1, a2, a3, 0);
}

id sub_1C01785D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C01785E0(a1, a2, a3, 1);
}

id sub_1C01785E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  id v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727E60);
  v7 = OUTLINED_FUNCTION_17_24();
  *(_OWORD *)(v7 + 16) = xmmword_1C0305B60;
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = a2;
  v8 = objc_allocWithZone((Class)type metadata accessor for AppMatches());
  return OUTLINED_FUNCTION_12_30(a4, v7);
}

id sub_1C0178654@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  id v7;
  id result;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR___AppMatches_recommendation);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___AppMatches_bundleIds);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___AppMatches_signals);
  v6 = (objc_class *)type metadata accessor for AppMatches();
  v7 = objc_allocWithZone(v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = AppMatches.init(recommendation:bundleIds:signals:)(v3, v4, v5);
  a1[3] = v6;
  *a1 = result;
  return result;
}

uint64_t static AppMatches.supportsSecureCoding.getter()
{
  OUTLINED_FUNCTION_55_1();
  return byte_1EF5BDCD0;
}

uint64_t static AppMatches.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_55_1();
  byte_1EF5BDCD0 = a1;
  return result;
}

uint64_t (*static AppMatches.supportsSecureCoding.modify())()
{
  OUTLINED_FUNCTION_55_1();
  return j__swift_endAccess;
}

uint64_t sub_1C0178824(void *a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;

  v2 = (void *)OUTLINED_FUNCTION_0_63();
  OUTLINED_FUNCTION_6_41((uint64_t)v2, sel_encodeInteger_forKey_);

  v3 = (void *)sub_1C0304120();
  v4 = (void *)sub_1C0303E8C();
  OUTLINED_FUNCTION_6_41((uint64_t)v4, sel_encodeObject_forKey_);

  sub_1C0301660();
  OUTLINED_FUNCTION_38_6();
  sub_1C0301654();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDCF0);
  sub_1C0178F7C(&qword_1EF5BDCF8, (uint64_t (*)(void))sub_1C0178F40, MEMORY[0x1E0DEAF10]);
  v5 = sub_1C0301648();
  v7 = v6;
  swift_release();
  OUTLINED_FUNCTION_55_0();
  v8 = (void *)sub_1C0301BE8();
  v9 = (void *)sub_1C0303E8C();
  objc_msgSend(a1, sel_encodeObject_forKey_, v8, v9);

  return sub_1C0040600(v5, v7);
}

id AppMatches.__allocating_init(coder:)(NSObject *a1)
{
  OUTLINED_FUNCTION_15_27();
  return AppMatches.init(coder:)(a1);
}

id AppMatches.init(coder:)(NSObject *a1)
{
  void *v1;
  id v3;
  NSObject *v4;
  _OWORD *v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  const char *v16;
  uint64_t v17;
  os_log_type_t v18;
  uint64_t v19;
  os_log_type_t v20;
  id v22;
  id v23;
  uint64_t v24;
  _QWORD v25[4];

  v3 = v1;
  v4 = OUTLINED_FUNCTION_0_63();
  v5 = -[NSObject decodeIntegerForKey:](a1, sel_decodeIntegerForKey_, v4);

  v6 = AppMatchRecommendation.init(rawValue:)((unint64_t)v5);
  if ((v7 & 1) != 0)
  {

    if (qword_1ED728430 != -1)
      swift_once();
    v13 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED729650);
    OUTLINED_FUNCTION_33_0();
    v14 = OUTLINED_FUNCTION_34();
    if (!OUTLINED_FUNCTION_6_1(v14))
      goto LABEL_21;
    v15 = (uint8_t *)OUTLINED_FUNCTION_6();
    *(_WORD *)v15 = 0;
    v16 = "AppMatches recommendation is missing and cannot be decoded";
    goto LABEL_20;
  }
  v8 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDD08);
  v5 = (_OWORD *)OUTLINED_FUNCTION_17_24();
  v5[1] = xmmword_1C03084B0;
  v9 = OUTLINED_FUNCTION_5_1((uint64_t)v5, (unint64_t *)&unk_1EF5BDD10);
  *((_QWORD *)v5 + 4) = v9;
  *((_QWORD *)v5 + 5) = OUTLINED_FUNCTION_5_1(v9, &qword_1ED7258F8);
  v4 = a1;
  sub_1C0304420();
  OUTLINED_FUNCTION_29();
  if (!v25[3])
  {

    sub_1C00C8404((uint64_t)v25);
LABEL_12:
    if (qword_1ED728430 != -1)
      swift_once();
    v17 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED729650);
    OUTLINED_FUNCTION_33_0();
    v18 = OUTLINED_FUNCTION_34();
    if (!OUTLINED_FUNCTION_6_1(v18))
      goto LABEL_21;
    v15 = (uint8_t *)OUTLINED_FUNCTION_6();
    *(_WORD *)v15 = 0;
    v16 = "AppMatches bundleIds is missing and cannot be decoded";
    goto LABEL_20;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
  v10 = swift_dynamicCast();
  if ((v10 & 1) == 0)
  {

    goto LABEL_12;
  }
  OUTLINED_FUNCTION_5_1(v10, &qword_1EF5BDD20);
  v4 = a1;
  v11 = sub_1C0304414();
  if (!v11)
  {
    OUTLINED_FUNCTION_55_0();

    if (qword_1ED728430 != -1)
      swift_once();
    v19 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED729650);
    OUTLINED_FUNCTION_33_0();
    v20 = OUTLINED_FUNCTION_34();
    if (!OUTLINED_FUNCTION_6_1(v20))
      goto LABEL_21;
    v15 = (uint8_t *)OUTLINED_FUNCTION_6();
    *(_WORD *)v15 = 0;
    v16 = "AppMatches signals is missing and cannot be decoded";
LABEL_20:
    _os_log_impl(&dword_1C0039000, v4, (os_log_type_t)v5, v16, v15, 2u);
    MEMORY[0x1C3B98378](v15, -1, -1);
LABEL_21:

    swift_getObjectType();
    OUTLINED_FUNCTION_2_55();
    return 0;
  }
  v12 = (void *)v11;
  sub_1C0301C00();

  sub_1C030163C();
  OUTLINED_FUNCTION_38_6();
  sub_1C0301630();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDCF0);
  sub_1C0178F7C(&qword_1EF5BDD28, (uint64_t (*)(void))sub_1C0178FE4, MEMORY[0x1E0DEAF40]);
  sub_1C0301624();

  swift_release();
  v22 = objc_allocWithZone((Class)type metadata accessor for AppMatches());
  v23 = OUTLINED_FUNCTION_12_30(v8, v24);

  OUTLINED_FUNCTION_11_41();
  swift_getObjectType();
  OUTLINED_FUNCTION_2_55();
  return v23;
}

unint64_t AppMatchRecommendation.init(rawValue:)(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

id AppMatches.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_15_27(), sel_init);
}

void AppMatches.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AppMatches.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppMatches();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C0178EF0()
{
  _QWORD *v0;

  return sub_1C00CE95C(*v0);
}

void sub_1C0178EF8()
{
  sub_1C00C12C0();
}

uint64_t sub_1C0178F00(uint64_t a1)
{
  _QWORD *v1;

  return sub_1C02EAD64(a1, *v1);
}

unint64_t sub_1C0178F08@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = AppMatchRecommendation.init(rawValue:)(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1C0178F38()
{
  uint64_t *v0;

  return AppMatchRecommendation.description.getter(*v0);
}

unint64_t sub_1C0178F40()
{
  unint64_t result;

  result = qword_1EF5BDD00;
  if (!qword_1EF5BDD00)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for AppSignals, &type metadata for AppSignals);
    atomic_store(result, (unint64_t *)&qword_1EF5BDD00);
  }
  return result;
}

uint64_t sub_1C0178F7C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF5BDCF0);
    v8 = a2();
    result = MEMORY[0x1C3B9827C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0178FE4()
{
  unint64_t result;

  result = qword_1EF5BDD30;
  if (!qword_1EF5BDD30)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for AppSignals, &type metadata for AppSignals);
    atomic_store(result, (unint64_t *)&qword_1EF5BDD30);
  }
  return result;
}

unint64_t sub_1C0179024()
{
  unint64_t result;

  result = qword_1EF5BDD38;
  if (!qword_1EF5BDD38)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for AppMatchRecommendation, &type metadata for AppMatchRecommendation);
    atomic_store(result, (unint64_t *)&qword_1EF5BDD38);
  }
  return result;
}

uint64_t method lookup function for AppMatches()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AppMatches.__allocating_init(recommendation:bundleIds:signals:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of AppMatches.copy(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of AppMatches.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AppMatches.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

ValueMetadata *type metadata accessor for AppMatchRecommendation()
{
  return &type metadata for AppMatchRecommendation;
}

uint64_t OUTLINED_FUNCTION_0_63()
{
  return sub_1C0303E8C();
}

uint64_t OUTLINED_FUNCTION_2_55()
{
  return swift_deallocPartialClassInstance();
}

uint64_t OUTLINED_FUNCTION_4_49()
{
  return swift_bridgeObjectRetain();
}

id OUTLINED_FUNCTION_6_41(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  return objc_msgSend(v2, a2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_11_41()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1C0040600(v1, v0);
}

id OUTLINED_FUNCTION_12_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return AppMatches.init(recommendation:bundleIds:signals:)(a1, a2, v2);
}

id OUTLINED_FUNCTION_15_27()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

uint64_t OUTLINED_FUNCTION_16_26()
{
  return sub_1C0303FD0();
}

uint64_t OUTLINED_FUNCTION_17_24()
{
  return swift_allocObject();
}

uint64_t sub_1C017914C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  _BYTE *v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  BOOL v19;
  int v20;
  char v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  _BYTE *v29;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C03045C4();
    type metadata accessor for DateTimeConstraint();
    sub_1C007BC44();
    result = sub_1C0304270();
    v1 = v24;
    v23 = v25;
    v3 = v26;
    v4 = v27;
    v5 = v28;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v23 = a1 + 56;
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v4 = 0;
  }
  v22 = (unint64_t)(v3 + 64) >> 6;
  while (1)
  {
    v9 = v4;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    if (!sub_1C0304624())
      goto LABEL_42;
    type metadata accessor for DateTimeConstraint();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v12 = v29;
    swift_unknownObjectRelease();
    if (!v29)
      goto LABEL_43;
LABEL_31:
    v16 = v12[51];
    v17 = v16 - 42;
    v18 = v16 & 0xFFFFFFF7;
    v19 = v17 <= 0xFFFFFFFB && v18 == 16;
    if (v19 && v12[48] == 1 && (v12[24] & 1) != 0)
    {
      v20 = v12[49];
      if (v20 != 1 && v20 != 2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_43;
      }
      v21 = sub_1C0304A08();
      swift_bridgeObjectRelease();
      if ((v21 & 1) != 0)
        goto LABEL_43;
    }
    result = swift_release();
  }
  if (v5)
  {
    v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v11 = v10 | (v4 << 6);
LABEL_30:
    v12 = *(_BYTE **)(*(_QWORD *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v12)
      goto LABEL_43;
    goto LABEL_31;
  }
  v13 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v13 >= v22)
      goto LABEL_42;
    v14 = *(_QWORD *)(v23 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v9 + 2;
      if (v9 + 2 >= v22)
        goto LABEL_42;
      v14 = *(_QWORD *)(v23 + 8 * v4);
      if (!v14)
      {
        v4 = v9 + 3;
        if (v9 + 3 >= v22)
          goto LABEL_42;
        v14 = *(_QWORD *)(v23 + 8 * v4);
        if (!v14)
        {
          v4 = v9 + 4;
          if (v9 + 4 >= v22)
            goto LABEL_42;
          v14 = *(_QWORD *)(v23 + 8 * v4);
          if (!v14)
          {
            v4 = v9 + 5;
            if (v9 + 5 >= v22)
              goto LABEL_42;
            v14 = *(_QWORD *)(v23 + 8 * v4);
            if (!v14)
            {
              v15 = v9 + 6;
              while (v15 < v22)
              {
                v14 = *(_QWORD *)(v23 + 8 * v15++);
                if (v14)
                {
                  v4 = v15 - 1;
                  goto LABEL_29;
                }
              }
LABEL_42:
              v12 = 0;
LABEL_43:
              sub_1C00B7078();
              return (uint64_t)v12;
            }
          }
        }
      }
    }
LABEL_29:
    v5 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v4 << 6);
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0179488(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  char v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C03045C4();
    type metadata accessor for DateTimeConstraint();
    sub_1C007BC44();
    result = sub_1C0304270();
    v1 = v19;
    v18 = v20;
    v3 = v21;
    v4 = v22;
    v5 = v23;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v18 = a1 + 56;
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v4 = 0;
  }
  v17 = (unint64_t)(v3 + 64) >> 6;
  while (1)
  {
    v9 = v4;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    if (!sub_1C0304624())
      goto LABEL_42;
    type metadata accessor for DateTimeConstraint();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v12 = v24;
    swift_unknownObjectRelease();
    if (!v24)
      goto LABEL_43;
LABEL_31:
    if (*(_BYTE *)(v12 + 51) == 24
      && !*(_BYTE *)(v12 + 48)
      && *(double *)(v12 + 24) == 0.0
      && *(_BYTE *)(v12 + 16) == 5)
    {
      if (*(_BYTE *)(v12 + 49))
      {
        v16 = sub_1C0304A08();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0)
          goto LABEL_33;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if (*(_BYTE *)(v12 + 50) == 1)
        goto LABEL_43;
    }
LABEL_33:
    result = swift_release();
  }
  if (v5)
  {
    v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v11 = v10 | (v4 << 6);
LABEL_30:
    v12 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v12)
      goto LABEL_43;
    goto LABEL_31;
  }
  v13 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v13 >= v17)
      goto LABEL_42;
    v14 = *(_QWORD *)(v18 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v9 + 2;
      if (v9 + 2 >= v17)
        goto LABEL_42;
      v14 = *(_QWORD *)(v18 + 8 * v4);
      if (!v14)
      {
        v4 = v9 + 3;
        if (v9 + 3 >= v17)
          goto LABEL_42;
        v14 = *(_QWORD *)(v18 + 8 * v4);
        if (!v14)
        {
          v4 = v9 + 4;
          if (v9 + 4 >= v17)
            goto LABEL_42;
          v14 = *(_QWORD *)(v18 + 8 * v4);
          if (!v14)
          {
            v4 = v9 + 5;
            if (v9 + 5 >= v17)
              goto LABEL_42;
            v14 = *(_QWORD *)(v18 + 8 * v4);
            if (!v14)
            {
              v15 = v9 + 6;
              while (v15 < v17)
              {
                v14 = *(_QWORD *)(v18 + 8 * v15++);
                if (v14)
                {
                  v4 = v15 - 1;
                  goto LABEL_29;
                }
              }
LABEL_42:
              v12 = 0;
LABEL_43:
              sub_1C00B7078();
              return v12;
            }
          }
        }
      }
    }
LABEL_29:
    v5 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v4 << 6);
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

void sub_1C01797D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  int64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  void (*v18)(_BYTE *, _QWORD);
  unint64_t v19;
  _BYTE v20[32];
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  v19 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
    v2 = sub_1C03045F4();
  else
    v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1FBC();
    if (v19)
    {
      v3 = sub_1C03045B8();
      v5 = 1;
    }
    else
    {
      v3 = sub_1C00824B4(a1);
      v5 = v6 & 1;
    }
    v21 = v3;
    v22 = v4;
    v23 = v5;
    if (v2 < 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
    }
    else
    {
      do
      {
        v8 = v21;
        v7 = v22;
        v9 = v23;
        v10 = *(_BYTE *)(sub_1C00C73A0(v21, v22, v23, a1) + 16);
        swift_release();
        v11 = v24;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C00B1FBC();
          v11 = v24;
        }
        v12 = *(_QWORD *)(v11 + 16);
        if (v12 >= *(_QWORD *)(v11 + 24) >> 1)
        {
          sub_1C00B1FBC();
          v11 = v24;
        }
        *(_QWORD *)(v11 + 16) = v12 + 1;
        *(_BYTE *)(v11 + v12 + 32) = v10;
        if (v19)
        {
          if ((v9 & 1) == 0)
            goto LABEL_23;
          if (sub_1C03045D0())
            swift_isUniquelyReferenced_nonNull_native();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDEE0);
          v18 = (void (*)(_BYTE *, _QWORD))sub_1C0304264();
          sub_1C030463C();
          v18(v20, 0);
        }
        else
        {
          v13 = sub_1C0082610(v8, v7, v9, a1);
          v15 = v14;
          v17 = v16;
          sub_1C00A6E5C(v8, v7, v9);
          v21 = v13;
          v22 = v15;
          v23 = v17 & 1;
        }
        --v2;
      }
      while (v2);
      sub_1C00A6E5C(v21, v22, v23);
    }
  }
}

uint64_t sub_1C0179A10(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7[2];

  v3 = *a1;
  swift_retain_n();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1C020FB7C();
  v5 = *(_QWORD *)(v3 + 16);
  v7[0] = v3 + 32;
  v7[1] = v5;
  swift_retain();
  sub_1C017A244(v7);
  sub_1C0304744();
  if (!v1)
    return swift_release_n();
  swift_release_n();
  return swift_release();
}

uint64_t sub_1C0179AE4()
{
  uint64_t v0;
  char v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  double v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  int v38;
  int64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  unint64_t v47;

  OUTLINED_FUNCTION_23_20();
  v40 = v1;
  v3 = v2;
  OUTLINED_FUNCTION_28_2();
  v4 = *(_QWORD *)(v0 + 16);
  if ((v4 & 0xC000000000000001) != 0)
  {
    OUTLINED_FUNCTION_65();
    OUTLINED_FUNCTION_40_15();
    OUTLINED_FUNCTION_4_50();
    sub_1C007BC44();
    result = OUTLINED_FUNCTION_113_1();
    v4 = v43;
    v41 = v44;
    v6 = v45;
    v7 = v46;
    v8 = v47;
  }
  else
  {
    v41 = v4 + 56;
    v6 = ~(-1 << *(_BYTE *)(v4 + 32));
    OUTLINED_FUNCTION_48_14();
    v8 = v9 & v10;
    result = OUTLINED_FUNCTION_65();
    v7 = 0;
  }
  v38 = v3;
  v39 = (unint64_t)(v6 + 64) >> 6;
  while (1)
  {
    v11 = v7;
    if (v4 < 0)
    {
      if (!sub_1C0304624())
        goto LABEL_47;
      OUTLINED_FUNCTION_41_5();
      swift_unknownObjectRetain();
      OUTLINED_FUNCTION_6_7();
      v14 = v42;
      swift_unknownObjectRelease();
      if (!v42)
        goto LABEL_47;
    }
    else
    {
      if (v8)
      {
        v12 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v13 = v12 | (v7 << 6);
      }
      else
      {
        if (__OFADD__(v7, 1))
        {
          __break(1u);
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
        if (v7 + 1 >= v39)
          goto LABEL_47;
        OUTLINED_FUNCTION_75_7();
        v7 = v15;
        if (!v16)
        {
          v7 = v15 + 1;
          if (v15 + 1 >= v39)
            goto LABEL_47;
          if (!*(_QWORD *)(v41 + 8 * v7))
          {
            v7 = v15 + 2;
            if (v15 + 2 >= v39)
              goto LABEL_47;
            if (!*(_QWORD *)(v41 + 8 * v7))
            {
              v7 = v15 + 3;
              if (v15 + 3 >= v39)
                goto LABEL_47;
              if (!*(_QWORD *)(v41 + 8 * v7))
              {
                v17 = v11 + 5;
                while (v17 < v39)
                {
                  OUTLINED_FUNCTION_76_7();
                  if (v18)
                  {
                    v7 = v17 - 1;
                    goto LABEL_24;
                  }
                }
LABEL_47:
                OUTLINED_FUNCTION_50_14();
LABEL_48:
                v28 = 0.0;
                return *(_QWORD *)&v28;
              }
            }
          }
        }
LABEL_24:
        OUTLINED_FUNCTION_36_13();
        v8 = v20 & v19;
        v13 = v21 + (v7 << 6);
      }
      v14 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13);
      swift_retain();
      if (!v14)
        goto LABEL_47;
    }
    if (*(_BYTE *)(v14 + 51) != 38)
      goto LABEL_46;
    if (*(_BYTE *)(v14 + 49))
    {
      if (*(_BYTE *)(v14 + 49) == 1)
      {
        v22 = 0xE300000000000000;
        OUTLINED_FUNCTION_71_7();
      }
      else
      {
        v22 = 0xE600000000000000;
        OUTLINED_FUNCTION_11_42();
      }
    }
    else
    {
      v22 = 0xE500000000000000;
      OUTLINED_FUNCTION_7_44();
    }
    if (v40)
    {
      if (v40 == 1)
      {
        v23 = 0xE300000000000000;
        OUTLINED_FUNCTION_95_4();
      }
      else
      {
        v23 = 0xE600000000000000;
        OUTLINED_FUNCTION_44_15();
      }
    }
    else
    {
      v23 = 0xE500000000000000;
      OUTLINED_FUNCTION_17_25();
    }
    if (v24 == v25 && v22 == v23)
    {
      OUTLINED_FUNCTION_2();
    }
    else
    {
      v27 = OUTLINED_FUNCTION_176();
      OUTLINED_FUNCTION_31();
      OUTLINED_FUNCTION_17_0();
      if ((v27 & 1) == 0)
        goto LABEL_46;
    }
    if (*(unsigned __int8 *)(v14 + 16) == v38 && !*(_BYTE *)(v14 + 50))
      break;
LABEL_46:
    result = OUTLINED_FUNCTION_22_2();
  }
  OUTLINED_FUNCTION_50_14();
  v28 = *(double *)(v14 + 24);
  v29 = *(unsigned __int8 *)(v14 + 48);
  v30 = OUTLINED_FUNCTION_105_0();
  sub_1C007BCE0(v30, v31, v32, v33);
  result = OUTLINED_FUNCTION_22_2();
  if (v29 == 2)
    return *(_QWORD *)&v28;
  if (v29)
  {
    v34 = OUTLINED_FUNCTION_105_0();
    sub_1C007BD18(v34, v35, v36, v37);
    goto LABEL_48;
  }
  if ((~*(_QWORD *)&v28 & 0x7FF0000000000000) == 0)
    goto LABEL_59;
  if (v28 <= -9.22337204e18)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  if (v28 < 9.22337204e18)
  {
    *(_QWORD *)&v28 = (uint64_t)v28;
    return *(_QWORD *)&v28;
  }
LABEL_61:
  __break(1u);
  return result;
}

#error "1C0179F40: call analysis failed (funcsize=85)"

uint64_t sub_1C0179FB8(unsigned __int8 *a1, uint64_t a2)
{
  char v2;
  int v5;
  unsigned int v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  char v11;
  char v12;
  char v13;

  v5 = a1[49];
  v6 = *(unsigned __int8 *)(a2 + 49);
  sub_1C025DF14(a1[49], *(_BYTE *)(a2 + 49));
  if ((v7 & 1) != 0)
  {
    v8 = a1[16];
    v9 = *(unsigned __int8 *)(a2 + 16);
    if (v8 == v9)
    {
      v10 = a1[50];
      if (v10 == *(unsigned __int8 *)(a2 + 50))
        v11 = a1[54] ^ 1;
      else
        v11 = v10 == 0;
    }
    else
    {
      v11 = v9 < v8;
    }
    return v11 & 1;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_176();
    OUTLINED_FUNCTION_38_18();
    if ((v2 & 1) == 0)
      goto LABEL_16;
    if (v6)
      goto LABEL_8;
LABEL_12:
    OUTLINED_FUNCTION_7_44();
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  if (!v6)
    goto LABEL_12;
LABEL_8:
  if (v6 == 1)
    goto LABEL_32;
  OUTLINED_FUNCTION_11_42();
LABEL_15:
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_38_18();
  if ((v2 & 1) != 0)
  {
LABEL_33:
    v11 = 1;
    return v11 & 1;
  }
LABEL_16:
  if (v5)
  {
    OUTLINED_FUNCTION_176();
    OUTLINED_FUNCTION_38_18();
    if ((v2 & 1) == 0)
      goto LABEL_24;
    if (v6)
      goto LABEL_19;
LABEL_22:
    OUTLINED_FUNCTION_7_44();
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  if (!v6)
    goto LABEL_22;
LABEL_19:
  if (v6 != 1)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  OUTLINED_FUNCTION_71_7();
LABEL_23:
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_38_18();
  if ((v2 & 1) != 0)
    goto LABEL_33;
LABEL_24:
  if (v5)
  {
    if (v5 == 1)
    {
      OUTLINED_FUNCTION_112_1();
      goto LABEL_30;
    }
    OUTLINED_FUNCTION_11_42();
  }
  else
  {
    OUTLINED_FUNCTION_7_44();
  }
  v12 = OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_29();
  v11 = 0;
  if ((v12 & 1) != 0)
  {
LABEL_30:
    if (v6 <= 1)
    {
      v13 = OUTLINED_FUNCTION_176();
      swift_bridgeObjectRelease();
      return v13 & 1;
    }
    goto LABEL_32;
  }
  return v11 & 1;
}

uint64_t sub_1C017A244(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unsigned __int8 *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unsigned __int8 *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  char v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  unsigned __int8 **v100;
  unint64_t v101;
  char *v102;
  unint64_t v103;
  uint64_t result;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  unint64_t v113;
  char *v114;
  unsigned __int8 **v115;
  uint64_t v116;
  uint64_t v117;
  unsigned __int8 **v118;
  unsigned __int8 **v119;
  uint64_t v120;

  v2 = v1;
  v4 = a1[1];
  swift_retain_n();
  v5 = sub_1C03049CC();
  if (v5 >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4)
      {
        swift_retain();
        sub_1C017A9E8(0, v4, 1, a1);
      }
      swift_release_n();
      return swift_release_n();
    }
    goto LABEL_133;
  }
  v6 = v5;
  sub_1C027E02C(v4 / 2);
  v111 = v7;
  v120 = v8;
  v109 = v4;
  v106 = a1;
  if (v4 <= 0)
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
    v43 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_97:
    if (v43 < 2)
    {
LABEL_108:
      swift_bridgeObjectRelease();
      if (v109 >= -1)
        goto LABEL_109;
      goto LABEL_138;
    }
    v94 = *v106;
    v116 = *v106;
    while (1)
    {
      v95 = v43 - 2;
      if (v43 < 2)
        break;
      if (!v94)
        goto LABEL_142;
      v96 = v2;
      v97 = v11;
      v98 = *(_QWORD *)&v11[16 * v95 + 32];
      v99 = *(_QWORD *)&v11[16 * v43 + 24];
      v119 = (unsigned __int8 **)(v94 + 8 * v98);
      v100 = (unsigned __int8 **)(v94 + 8 * *(_QWORD *)&v11[16 * v43 + 16]);
      v101 = v94 + 8 * v99;
      swift_retain();
      sub_1C017AAEC(v119, v100, v101, v111);
      v2 = v96;
      if (v96)
        goto LABEL_94;
      if (v99 < v98)
        goto LABEL_128;
      v11 = v97;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1C020FAB8();
      if (v95 >= *((_QWORD *)v11 + 2))
        goto LABEL_129;
      v102 = &v11[16 * v95 + 32];
      *(_QWORD *)v102 = v98;
      *((_QWORD *)v102 + 1) = v99;
      v103 = *((_QWORD *)v11 + 2);
      if (v43 > v103)
        goto LABEL_130;
      memmove(&v11[16 * v43 + 16], &v11[16 * v43 + 32], 16 * (v103 - v43));
      *((_QWORD *)v11 + 2) = v103 - 1;
      v43 = v103 - 1;
      v94 = v116;
      if (v103 <= 2)
        goto LABEL_108;
    }
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    swift_release_n();
    __break(1u);
LABEL_140:
    swift_release_n();
    __break(1u);
LABEL_141:
    swift_release_n();
    __break(1u);
LABEL_142:
    result = swift_release_n();
    __break(1u);
    return result;
  }
  v107 = v6;
  v9 = 0;
  v10 = *a1;
  v105 = *a1 - 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v12 = v4;
  v110 = *a1;
  while (1)
  {
    v13 = v9;
    v14 = v9 + 1;
    if (v9 + 1 < v12)
    {
      v15 = v11;
      v16 = *(unsigned __int8 **)(v10 + 8 * v14);
      v17 = *(_QWORD *)(v10 + 8 * v9);
      swift_retain();
      swift_retain();
      v18 = sub_1C0179FB8(v16, v17);
      swift_release();
      swift_release();
      if (v13 + 2 >= v12)
      {
        v26 = v13 + 2;
      }
      else
      {
        v19 = v2;
        v20 = v13;
        while (1)
        {
          v21 = v10 + 8 * v20;
          v23 = *(_QWORD *)(v21 + 8);
          v22 = *(unsigned __int8 **)(v21 + 16);
          swift_retain();
          swift_retain();
          v24 = sub_1C0179FB8(v22, v23);
          swift_release();
          swift_release();
          if (((v18 ^ v24) & 1) != 0)
            break;
          v25 = v20 + 3;
          ++v20;
          if (v25 >= v109)
          {
            v26 = v109;
            goto LABEL_12;
          }
        }
        v26 = v20 + 2;
LABEL_12:
        v2 = v19;
      }
      v11 = v15;
      if ((v18 & 1) != 0)
      {
        if (v26 < v13)
          goto LABEL_135;
        v14 = v26;
        if (v13 >= v26)
        {
          v12 = v109;
        }
        else
        {
          v27 = (uint64_t *)(v105 + 8 * v26);
          v28 = v14;
          v29 = v13;
          v30 = (uint64_t *)(v10 + 8 * v13);
          v12 = v109;
          do
          {
            if (v29 != --v28)
            {
              if (!v10)
                goto LABEL_141;
              v31 = *v30;
              *v30 = *v27;
              *v27 = v31;
            }
            ++v29;
            --v27;
            ++v30;
          }
          while (v29 < v28);
        }
      }
      else
      {
        v12 = v109;
        v14 = v26;
      }
    }
    if (v14 < v12)
    {
      if (__OFSUB__(v14, v13))
        goto LABEL_132;
      if (v14 - v13 < v107)
      {
        if (__OFADD__(v13, v107))
          goto LABEL_136;
        if (v13 + v107 >= v12)
          v32 = v12;
        else
          v32 = v13 + v107;
        if (v32 < v13)
          goto LABEL_137;
        if (v14 != v32)
        {
          v114 = v11;
          v117 = v13;
          v112 = v2;
          v33 = (uint64_t *)(v105 + 8 * v14);
          do
          {
            v34 = v14;
            v35 = *(unsigned __int8 **)(v10 + 8 * v14);
            v36 = v117;
            v37 = v33;
            do
            {
              v38 = *v37;
              swift_retain();
              swift_retain();
              v39 = sub_1C0179FB8(v35, v38);
              swift_release();
              swift_release();
              if ((v39 & 1) == 0)
                break;
              if (!v10)
                goto LABEL_139;
              v40 = *v37;
              v35 = (unsigned __int8 *)v37[1];
              *v37 = (uint64_t)v35;
              v37[1] = v40;
              --v37;
              ++v36;
            }
            while (v34 != v36);
            v14 = v34 + 1;
            ++v33;
          }
          while (v34 + 1 != v32);
          v14 = v32;
          v2 = v112;
          v11 = v114;
          v13 = v117;
        }
      }
    }
    if (v14 < v13)
      goto LABEL_131;
    v108 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1C00500C8(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v42 = *((_QWORD *)v11 + 2);
    v41 = *((_QWORD *)v11 + 3);
    v43 = v42 + 1;
    if (v42 >= v41 >> 1)
      v11 = sub_1C00500C8((char *)(v41 > 1), v42 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v43;
    v44 = v11 + 32;
    v45 = &v11[16 * v42 + 32];
    *(_QWORD *)v45 = v13;
    *((_QWORD *)v45 + 1) = v108;
    if (v42)
      break;
    v43 = 1;
LABEL_88:
    v9 = v108;
    v12 = v109;
    if (v108 >= v109)
      goto LABEL_97;
  }
  while (1)
  {
    v46 = v43 - 1;
    if (v43 >= 4)
    {
      v51 = &v44[16 * v43];
      v52 = *((_QWORD *)v51 - 8);
      v53 = *((_QWORD *)v51 - 7);
      v57 = __OFSUB__(v53, v52);
      v54 = v53 - v52;
      if (v57)
        goto LABEL_116;
      v56 = *((_QWORD *)v51 - 6);
      v55 = *((_QWORD *)v51 - 5);
      v57 = __OFSUB__(v55, v56);
      v49 = v55 - v56;
      v50 = v57;
      if (v57)
        goto LABEL_117;
      v58 = v43 - 2;
      v59 = &v44[16 * v43 - 32];
      v61 = *(_QWORD *)v59;
      v60 = *((_QWORD *)v59 + 1);
      v57 = __OFSUB__(v60, v61);
      v62 = v60 - v61;
      if (v57)
        goto LABEL_118;
      v57 = __OFADD__(v49, v62);
      v63 = v49 + v62;
      if (v57)
        goto LABEL_120;
      if (v63 >= v54)
      {
        v81 = &v44[16 * v46];
        v83 = *(_QWORD *)v81;
        v82 = *((_QWORD *)v81 + 1);
        v57 = __OFSUB__(v82, v83);
        v84 = v82 - v83;
        if (v57)
          goto LABEL_126;
        v74 = v49 < v84;
        goto LABEL_77;
      }
    }
    else
    {
      if (v43 != 3)
      {
        v75 = *((_QWORD *)v11 + 4);
        v76 = *((_QWORD *)v11 + 5);
        v57 = __OFSUB__(v76, v75);
        v68 = v76 - v75;
        v69 = v57;
        goto LABEL_71;
      }
      v48 = *((_QWORD *)v11 + 4);
      v47 = *((_QWORD *)v11 + 5);
      v57 = __OFSUB__(v47, v48);
      v49 = v47 - v48;
      v50 = v57;
    }
    if ((v50 & 1) != 0)
      goto LABEL_119;
    v58 = v43 - 2;
    v64 = &v44[16 * v43 - 32];
    v66 = *(_QWORD *)v64;
    v65 = *((_QWORD *)v64 + 1);
    v67 = __OFSUB__(v65, v66);
    v68 = v65 - v66;
    v69 = v67;
    if (v67)
      goto LABEL_121;
    v70 = &v44[16 * v46];
    v72 = *(_QWORD *)v70;
    v71 = *((_QWORD *)v70 + 1);
    v57 = __OFSUB__(v71, v72);
    v73 = v71 - v72;
    if (v57)
      goto LABEL_123;
    if (__OFADD__(v68, v73))
      goto LABEL_125;
    if (v68 + v73 >= v49)
    {
      v74 = v49 < v73;
LABEL_77:
      if (v74)
        v46 = v58;
      goto LABEL_79;
    }
LABEL_71:
    if ((v69 & 1) != 0)
      goto LABEL_122;
    v77 = &v44[16 * v46];
    v79 = *(_QWORD *)v77;
    v78 = *((_QWORD *)v77 + 1);
    v57 = __OFSUB__(v78, v79);
    v80 = v78 - v79;
    if (v57)
      goto LABEL_124;
    if (v80 < v68)
      goto LABEL_88;
LABEL_79:
    v85 = v46 - 1;
    if (v46 - 1 >= v43)
    {
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
      goto LABEL_127;
    }
    if (!v10)
      goto LABEL_140;
    v86 = v2;
    v87 = v10;
    v88 = &v44[16 * v85];
    v89 = *(_QWORD *)v88;
    v90 = v46;
    v91 = &v44[16 * v46];
    v92 = *((_QWORD *)v91 + 1);
    v115 = (unsigned __int8 **)(v87 + 8 * *(_QWORD *)v91);
    v118 = (unsigned __int8 **)(v87 + 8 * *(_QWORD *)v88);
    v113 = v87 + 8 * v92;
    swift_retain();
    sub_1C017AAEC(v118, v115, v113, v111);
    if (v86)
      break;
    if (v92 < v89)
      goto LABEL_113;
    if (v90 > *((_QWORD *)v11 + 2))
      goto LABEL_114;
    *(_QWORD *)v88 = v89;
    *(_QWORD *)&v44[16 * v85 + 8] = v92;
    v93 = *((_QWORD *)v11 + 2);
    if (v90 >= v93)
      goto LABEL_115;
    v43 = v93 - 1;
    memmove(v91, v91 + 16, 16 * (v93 - 1 - v90));
    *((_QWORD *)v11 + 2) = v93 - 1;
    v10 = v110;
    v2 = 0;
    if (v93 <= 2)
      goto LABEL_88;
  }
LABEL_94:
  swift_bridgeObjectRelease();
  if (v109 < -1)
    goto LABEL_134;
LABEL_109:
  *(_QWORD *)((v120 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_1C0304150();
  swift_release_n();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t sub_1C017A9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t result;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = *a4;
    swift_retain();
    v7 = v6 + 8 * v4 - 8;
    while (2)
    {
      v8 = *(unsigned __int8 **)(v6 + 8 * v4);
      v9 = a1;
      v10 = (uint64_t *)v7;
      do
      {
        v11 = *v10;
        swift_retain();
        swift_retain();
        v12 = sub_1C0179FB8(v8, v11);
        swift_release();
        swift_release();
        if ((v12 & 1) == 0)
          break;
        if (!v6)
        {
          result = swift_release();
          __break(1u);
          return result;
        }
        v13 = *v10;
        v8 = (unsigned __int8 *)v10[1];
        *v10 = (uint64_t)v8;
        v10[1] = v13;
        --v10;
        ++v9;
      }
      while (v4 != v9);
      ++v4;
      v7 += 8;
      if (v4 != a2)
        continue;
      break;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1C017AAEC(unsigned __int8 **a1, unsigned __int8 **a2, unint64_t a3, uint64_t *a4)
{
  unsigned __int8 **v6;
  unsigned __int8 **v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v15;
  unint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  char v19;
  unsigned __int8 **v20;
  BOOL v21;
  unsigned __int8 **v23;
  unsigned __int8 **v24;
  unsigned __int8 *v25;
  unsigned __int8 **v26;
  uint64_t v27;
  unsigned __int8 **v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  BOOL v32;
  uint64_t *v35;
  unsigned __int8 **v36;

  v6 = a2;
  v7 = a1;
  v8 = (char *)a2 - (char *)a1;
  v9 = a2 - a1;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  swift_retain();
  v35 = a4;
  if (v9 >= v11)
  {
    sub_1C00ADA28(v6, v11, a4);
    v12 = (unint64_t)&a4[v11];
    if (v7 >= v6 || v10 < 8)
    {
      v15 = a4;
      goto LABEL_41;
    }
    v23 = (unsigned __int8 **)(a3 - 8);
    while (1)
    {
      v36 = v23 + 1;
      v24 = (unsigned __int8 **)(v12 - 8);
      v25 = *(unsigned __int8 **)(v12 - 8);
      v26 = v6 - 1;
      v27 = (uint64_t)*(v6 - 1);
      v28 = v6;
      v29 = v12;
      swift_retain();
      swift_retain();
      v30 = sub_1C0179FB8(v25, v27);
      swift_release();
      swift_release();
      if ((v30 & 1) != 0)
      {
        v31 = v36 != v28 || v23 >= v28;
        v15 = v35;
        v12 = v29;
        v6 = v26;
        if (!v31)
          goto LABEL_37;
      }
      else
      {
        v32 = v36 != (unsigned __int8 **)v29 || (unint64_t)v23 >= v29;
        v26 = v24;
        v12 = (unint64_t)v24;
        v15 = v35;
        v6 = v28;
        if (!v32)
          goto LABEL_37;
      }
      *v23 = *v26;
LABEL_37:
      --v23;
      if (v6 <= v7 || v12 <= (unint64_t)v15)
        goto LABEL_41;
    }
  }
  sub_1C00ADA28(v7, v9, a4);
  v12 = (unint64_t)&a4[v9];
  if ((unint64_t)v6 >= a3 || v8 < 8)
  {
    v6 = v7;
    v15 = a4;
  }
  else
  {
    v15 = a4;
    do
    {
      v16 = v12;
      v17 = *v6;
      v18 = *v15;
      swift_retain();
      swift_retain();
      v19 = sub_1C0179FB8(v17, v18);
      swift_release();
      swift_release();
      if ((v19 & 1) != 0)
      {
        v20 = v6;
        v21 = v7 == v6++;
      }
      else
      {
        v20 = (unsigned __int8 **)v15;
        v21 = v7 == (unsigned __int8 **)v15++;
      }
      v12 = v16;
      if (!v21)
        *v7 = *v20;
      ++v7;
    }
    while ((unint64_t)v15 < v16 && (unint64_t)v6 < a3);
    v6 = v7;
  }
LABEL_41:
  sub_1C00ADA28(v15, (uint64_t)(v12 - (_QWORD)v15) / 8, v6);
  swift_release_n();
  return 1;
}

#error "1C017AEE8: call analysis failed (funcsize=162)"

#error "1C017B1B8: call analysis failed (funcsize=163)"

uint64_t sub_1C017B2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v5 = sub_1C0301DB0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) == 0)
  {
    swift_retain();
    sub_1C017C014(a1);
    v9 = v33;
    swift_release();
    return v9;
  }
  v9 = MEMORY[0x1E0DEE9E8];
  v47 = MEMORY[0x1E0DEE9E8];
  swift_retain();
  sub_1C03045C4();
  v10 = sub_1C0304624();
  if (!v10)
  {
LABEL_40:
    swift_release_n();
    swift_release();
    return v9;
  }
  v11 = v10;
  v35 = v2;
  v36 = a2;
  type metadata accessor for DateTimeConstraint();
  while (1)
  {
    v37 = v11;
    result = swift_dynamicCast();
    v20 = v46;
    v21 = *(unsigned __int8 *)(v46 + 16);
    if (v21 == 12 || v21 == 3)
    {
      if ((*(_BYTE *)(v46 + 53) & 1) != 0)
        goto LABEL_10;
      if (v21 == 3)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v36 + 24) + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_regionFormat, v5);
        v24 = sub_1C0078D44();
        result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        if ((v24 & 1) != 0 && *(_BYTE *)(v20 + 51) == 39)
        {
          v21 = *(unsigned __int8 *)(v20 + 16);
LABEL_10:
          v23 = 1;
          goto LABEL_27;
        }
      }
    }
    if (qword_1EF5B7FE0 != -1)
      result = swift_once();
    v25 = *(_QWORD *)(qword_1EF5FC768 + 16);
    v21 = *(unsigned __int8 *)(v20 + 16);
    if (!v25)
      goto LABEL_26;
    if (*(unsigned __int8 *)(qword_1EF5FC768 + 32) != v21)
      break;
LABEL_19:
    if (*(_BYTE *)(v20 + 50) != 1)
      goto LABEL_26;
    v23 = *(_BYTE *)(v20 + 53);
LABEL_27:
    if (v21 == 4 && !*(_BYTE *)(v20 + 48))
    {
      if (*(double *)(v20 + 24) > 12.0)
        v32 = 1;
      else
        v32 = v23;
      if ((v32 & 1) != 0)
      {
LABEL_30:
        v29 = v46;
        v28 = v47;
        v30 = *(_QWORD *)(v47 + 16);
        if (*(_QWORD *)(v47 + 24) <= v30)
        {
          sub_1C023014C(v30 + 1, v13, v14, v15, v16, v17, v18, v19, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44,
            v45,
            v46,
            v47,
            v48,
            v49,
            v50,
            v51,
            v52,
            v53,
            v54,
            v55,
            v56,
            v57);
          v28 = v47;
        }
        sub_1C0304B04();
        sub_1C0078A80();
        sub_1C0304B40();
        v31 = sub_1C03045AC();
        *(_QWORD *)(v28 + 56 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
        *(_QWORD *)(*(_QWORD *)(v28 + 48) + 8 * v31) = v29;
        ++*(_QWORD *)(v28 + 16);
        goto LABEL_38;
      }
    }
    else if ((v23 & 1) != 0)
    {
      goto LABEL_30;
    }
    swift_release();
LABEL_38:
    v11 = sub_1C0304624();
    if (!v11)
    {
      v9 = v47;
      goto LABEL_40;
    }
  }
  if (v25 == 1)
  {
LABEL_26:
    v23 = 0;
    goto LABEL_27;
  }
  v26 = 33;
  while (1)
  {
    v27 = v26 - 31;
    if (__OFADD__(v26 - 32, 1))
      break;
    if (*(unsigned __int8 *)(qword_1EF5FC768 + v26) == v21)
      goto LABEL_19;
    ++v26;
    if (v27 == v25)
      goto LABEL_26;
  }
  __break(1u);
  return result;
}

#error "1C017B70C: call analysis failed (funcsize=125)"

uint64_t sub_1C017B7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t vars0;
  uint64_t vars8;

  v3 = v2;
  if ((a1 & 0xC000000000000001) == 0)
  {
    swift_retain();
    sub_1C017C014(a1);
    v6 = v33;
    goto LABEL_42;
  }
  v6 = MEMORY[0x1E0DEE9E8];
  v48 = MEMORY[0x1E0DEE9E8];
  swift_retain();
  v36 = sub_1C03045C4();
  v7 = sub_1C0304624();
  if (!v7)
    goto LABEL_40;
  v8 = v7;
  v35 = v3;
  type metadata accessor for DateTimeConstraint();
  do
  {
    v37 = v8;
    swift_dynamicCast();
    v9 = *(unsigned __int8 *)(v46 + 49);
    v10 = *(unsigned __int8 *)(a2 + 49);
    if (v9 == 1)
      v11 = 6581861;
    else
      v11 = 0x746573746F6ELL;
    if (v9 == 1)
      v12 = 0xE300000000000000;
    else
      v12 = 0xE600000000000000;
    if (*(_BYTE *)(v46 + 49))
      v13 = v11;
    else
      v13 = 0x7472617473;
    if (*(_BYTE *)(v46 + 49))
      v14 = v12;
    else
      v14 = 0xE500000000000000;
    v15 = a2;
    if (v10 == 1)
      v16 = 6581861;
    else
      v16 = 0x746573746F6ELL;
    if (v10 == 1)
      v17 = 0xE300000000000000;
    else
      v17 = 0xE600000000000000;
    if (*(_BYTE *)(a2 + 49))
      v18 = v16;
    else
      v18 = 0x7472617473;
    if (*(_BYTE *)(a2 + 49))
      v19 = v17;
    else
      v19 = 0xE500000000000000;
    if (v13 == v18 && v14 == v19)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v21 = sub_1C0304A08();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
      {
        swift_release();
        goto LABEL_38;
      }
    }
    v29 = v46;
    v30 = v48;
    v31 = *(_QWORD *)(v48 + 16);
    if (*(_QWORD *)(v48 + 24) <= v31)
    {
      sub_1C023014C(v31 + 1, v22, v23, v24, v25, v26, v27, v28, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45,
        v46,
        v47,
        v48,
        v49,
        v50,
        v51,
        v52,
        v53,
        v54,
        v55,
        v56,
        vars0,
        vars8);
      v30 = v48;
    }
    sub_1C0304B04();
    sub_1C0078A80();
    sub_1C0304B40();
    v32 = sub_1C03045AC();
    *(_QWORD *)(v30 + 56 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
    *(_QWORD *)(*(_QWORD *)(v30 + 48) + 8 * v32) = v29;
    ++*(_QWORD *)(v30 + 16);
LABEL_38:
    a2 = v15;
    v8 = sub_1C0304624();
  }
  while (v8);
  v6 = v48;
LABEL_40:
  swift_release_n();
LABEL_42:
  swift_release();
  return v6;
}

uint64_t sub_1C017BA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t vars0;
  uint64_t vars8;

  v3 = v2;
  if ((a1 & 0xC000000000000001) == 0)
  {
    swift_retain();
    sub_1C017C014(a1);
    v6 = v27;
    goto LABEL_33;
  }
  v6 = MEMORY[0x1E0DEE9E8];
  v42 = MEMORY[0x1E0DEE9E8];
  swift_retain();
  sub_1C03045C4();
  v7 = sub_1C0304624();
  if (!v7)
    goto LABEL_31;
  v8 = v7;
  v30 = v3;
  type metadata accessor for DateTimeConstraint();
  do
  {
    v31 = v8;
    swift_dynamicCast();
    if (*(_BYTE *)(v40 + 49))
    {
      if (*(_BYTE *)(v40 + 49) == 1)
      {
        v9 = 0xE300000000000000;
        v10 = 6581861;
      }
      else
      {
        v9 = 0xE600000000000000;
        v10 = 0x746573746F6ELL;
      }
    }
    else
    {
      v9 = 0xE500000000000000;
      v10 = 0x7472617473;
    }
    v11 = (0x20001u >> (8 * *(_BYTE *)(a2 + 49)));
    if ((0x20001u >> (8 * *(_BYTE *)(a2 + 49))))
    {
      if (v11 == 1)
        v12 = 6581861;
      else
        v12 = 0x746573746F6ELL;
      if (v11 == 1)
        v13 = 0xE300000000000000;
      else
        v13 = 0xE600000000000000;
    }
    else
    {
      v13 = 0xE500000000000000;
      v12 = 0x7472617473;
    }
    if (v10 == v12 && v9 == v13)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v15 = sub_1C0304A08();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
        goto LABEL_28;
    }
    if ((*(_BYTE *)(v40 + 55) & 1) == 0)
    {
LABEL_28:
      swift_release();
      goto LABEL_29;
    }
    v23 = v40;
    v24 = v42;
    v25 = *(_QWORD *)(v42 + 16);
    if (*(_QWORD *)(v42 + 24) <= v25)
    {
      sub_1C023014C(v25 + 1, v16, v17, v18, v19, v20, v21, v22, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
        v40,
        v41,
        v42,
        v43,
        v44,
        v45,
        v46,
        v47,
        v48,
        v49,
        v50,
        vars0,
        vars8);
      v24 = v42;
    }
    sub_1C0304B04();
    sub_1C0078A80();
    sub_1C0304B40();
    v26 = sub_1C03045AC();
    *(_QWORD *)(v24 + 56 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    *(_QWORD *)(*(_QWORD *)(v24 + 48) + 8 * v26) = v23;
    ++*(_QWORD *)(v24 + 16);
LABEL_29:
    v8 = sub_1C0304624();
  }
  while (v8);
  v6 = v42;
LABEL_31:
  swift_release_n();
LABEL_33:
  swift_release();
  return v6;
}

unint64_t sub_1C017BD34()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned int v4;

  OUTLINED_FUNCTION_30_17();
  v3 = v2 >> 6;
  if (v4 > 0xD)
  {
    v1 = OUTLINED_FUNCTION_66_6();
    if ((v1 & 1) == 0)
    {
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_77_3();
      OUTLINED_FUNCTION_53_9();
      OUTLINED_FUNCTION_26_20();
      OUTLINED_FUNCTION_5();
    }
  }
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_77_3();
  OUTLINED_FUNCTION_53_9();
  OUTLINED_FUNCTION_26_20();
  if (v0)
    OUTLINED_FUNCTION_115_0();
  return v3;
}

uint64_t sub_1C017BE28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unsigned int v5;

  OUTLINED_FUNCTION_30_17();
  if (v5 > 0xD)
  {
    v4 = OUTLINED_FUNCTION_66_6();
    if ((v4 & 1) == 0)
    {
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_78_6();
      OUTLINED_FUNCTION_56_11();
      OUTLINED_FUNCTION_26_20();
      OUTLINED_FUNCTION_5();
    }
  }
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_78_6();
  OUTLINED_FUNCTION_56_11();
  OUTLINED_FUNCTION_26_20();
  if (a2)
    OUTLINED_FUNCTION_115_0();
  return v2;
}

void sub_1C017BF20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;

  OUTLINED_FUNCTION_30_17();
  if (v5 > 0xD)
  {
    v4 = OUTLINED_FUNCTION_66_6();
    if ((v4 & 1) == 0)
    {
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_22_24();
      OUTLINED_FUNCTION_47_17();
      OUTLINED_FUNCTION_26_20();
      OUTLINED_FUNCTION_5();
    }
  }
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_22_24();
  OUTLINED_FUNCTION_47_17();
  OUTLINED_FUNCTION_26_20();
  if (a3)
    OUTLINED_FUNCTION_115_0();
  OUTLINED_FUNCTION_61_5();
}

void sub_1C017C014(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_BYTE *)(a1 + 32) & 0x3F;
  v2 = OUTLINED_FUNCTION_51_0();
  if (v1 > 0xD)
  {
    v2 = OUTLINED_FUNCTION_66_6();
    if ((v2 & 1) == 0)
    {
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_22_24();
      OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_46_13();
      OUTLINED_FUNCTION_5_3();
      OUTLINED_FUNCTION_5();
    }
  }
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_22_24();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_46_13();
  OUTLINED_FUNCTION_5_3();
  if (v1)
    swift_willThrow();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_39_3();
  OUTLINED_FUNCTION_61_5();
}

void sub_1C017C164(unint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v34;
  uint64_t v37;
  int64_t v39;

  v4 = a3;
  v5 = 0;
  v6 = 0;
  v7 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = 0x1EF5B7000uLL;
  v39 = v11;
LABEL_4:
  v37 = v5;
  while (1)
  {
    while (1)
    {
      do
      {
        if (v10)
        {
          v13 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
          v14 = v13 | (v6 << 6);
        }
        else
        {
          if (__OFADD__(v6++, 1))
            goto LABEL_63;
          if (v6 >= v11)
            goto LABEL_61;
          v16 = *(_QWORD *)(v7 + 8 * v6);
          if (!v16)
          {
            v17 = v6 + 1;
            if (v6 + 1 >= v11)
              goto LABEL_61;
            v16 = *(_QWORD *)(v7 + 8 * v17);
            if (!v16)
            {
              v17 = v6 + 2;
              if (v6 + 2 >= v11)
                goto LABEL_61;
              v16 = *(_QWORD *)(v7 + 8 * v17);
              if (!v16)
              {
                v17 = v6 + 3;
                if (v6 + 3 >= v11)
                  goto LABEL_61;
                v16 = *(_QWORD *)(v7 + 8 * v17);
                if (!v16)
                {
                  while (1)
                  {
                    v6 = v17 + 1;
                    if (__OFADD__(v17, 1))
                      goto LABEL_64;
                    if (v6 >= v11)
                      goto LABEL_61;
                    v16 = *(_QWORD *)(v7 + 8 * v6);
                    ++v17;
                    if (v16)
                      goto LABEL_17;
                  }
                }
              }
            }
            v6 = v17;
          }
LABEL_17:
          v10 = (v16 - 1) & v16;
          v14 = __clz(__rbit64(v16)) + (v6 << 6);
        }
        v18 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v14);
      }
      while (!sub_1C007A978());
      v19 = *(_QWORD *)(v12 + 4064);
      swift_retain();
      if (v19 != -1)
        swift_once();
      v20 = *(_QWORD *)(qword_1EF5FC768 + 16);
      if (v20)
        break;
LABEL_45:
      swift_release();
    }
    v21 = *(unsigned __int8 *)(v18 + 16);
    if (*(unsigned __int8 *)(qword_1EF5FC768 + 32) != v21)
      break;
LABEL_23:
    v22 = *(unsigned __int8 *)(v18 + 49);
    v23 = 0x746573746F6ELL;
    if (v22 == 1)
      v23 = 6581861;
    v24 = 0xE300000000000000;
    if (v22 != 1)
      v24 = 0xE600000000000000;
    if (*(_BYTE *)(v18 + 49))
      v25 = v23;
    else
      v25 = 0x7472617473;
    if (*(_BYTE *)(v18 + 49))
      v26 = v24;
    else
      v26 = 0xE500000000000000;
    v27 = v7;
    v28 = v12;
    if (a4)
    {
      if (a4 == 1)
        v29 = 6581861;
      else
        v29 = 0x746573746F6ELL;
      if (a4 == 1)
        v30 = 0xE300000000000000;
      else
        v30 = 0xE600000000000000;
    }
    else
    {
      v30 = 0xE500000000000000;
      v29 = 0x7472617473;
    }
    if (v25 == v29 && v26 == v30)
    {
      swift_release();
      swift_bridgeObjectRelease_n();
      v12 = v28;
      v7 = v27;
      v4 = a3;
      v11 = v39;
LABEL_58:
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v5 = v37 + 1;
      if (!__OFADD__(v37, 1))
        goto LABEL_4;
      __break(1u);
LABEL_61:
      swift_retain();
      sub_1C0158370(a1, a2, v37, v4);
      return;
    }
    v34 = sub_1C0304A08();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = v28;
    v7 = v27;
    v4 = a3;
    v11 = v39;
    if ((v34 & 1) != 0)
      goto LABEL_58;
  }
  if (v20 == 1)
    goto LABEL_45;
  v31 = 33;
  while (1)
  {
    v32 = v31 - 31;
    if (__OFADD__(v31 - 32, 1))
      break;
    if (*(unsigned __int8 *)(qword_1EF5FC768 + v31) == v21)
      goto LABEL_23;
    ++v31;
    if (v32 == v20)
      goto LABEL_45;
  }
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
}

void sub_1C017C494(unint64_t *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  BOOL v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;

  v7 = 0;
  v8 = 0;
  v9 = a3 + 56;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a3 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v8 << 6);
      goto LABEL_17;
    }
    v16 = __OFADD__(v8++, 1);
    if (v16)
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v8 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v9 + 8 * v8);
    if (!v17)
      break;
LABEL_16:
    v19 = __clz(__rbit64(v17));
    v12 = (v17 - 1) & v17;
    v15 = v19 + (v8 << 6);
LABEL_17:
    v20 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v15);
    if (!*(_BYTE *)(v20 + 48)
      && *(double *)(v20 + 24) == 0.0
      && *(unsigned __int8 *)(v20 + 16) == a4
      && *(_BYTE *)(v20 + 50) == 1)
    {
      *(unint64_t *)((char *)a1 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = __OFADD__(v7++, 1);
      if (v16)
        goto LABEL_31;
    }
  }
  v18 = v8 + 1;
  if (v8 + 1 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
    goto LABEL_15;
  v18 = v8 + 2;
  if (v8 + 2 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
    goto LABEL_15;
  v18 = v8 + 3;
  if (v8 + 3 >= v13)
  {
LABEL_28:
    swift_retain();
    sub_1C0158370(a1, a2, v7, a3);
    return;
  }
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
  {
LABEL_15:
    v8 = v18;
    goto LABEL_16;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v9 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_16;
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
}

void sub_1C017C62C(unint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v25;
  uint64_t v28;

  v5 = 0;
  v6 = 0;
  v7 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
LABEL_4:
  v28 = v5;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v6++, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    if (v6 >= v11)
      goto LABEL_47;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    if (!v15)
      break;
LABEL_17:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_18:
    v17 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v13);
    v18 = *(unsigned __int8 *)(v17 + 51);
    if ((v18 - 42) <= 0xFFFFFFFB && (v18 & 0xFFFFFFF7) == 0x10)
    {
      v19 = *(unsigned __int8 *)(v17 + 49);
      if (v19)
      {
        if (v19 == 1)
        {
          v20 = 0xE300000000000000;
          v21 = 6581861;
        }
        else
        {
          v20 = 0xE600000000000000;
          v21 = 0x746573746F6ELL;
        }
      }
      else
      {
        v20 = 0xE500000000000000;
        v21 = 0x7472617473;
      }
      if (a4)
      {
        if (a4 == 1)
          v22 = 6581861;
        else
          v22 = 0x746573746F6ELL;
        if (a4 == 1)
          v23 = 0xE300000000000000;
        else
          v23 = 0xE600000000000000;
      }
      else
      {
        v23 = 0xE500000000000000;
        v22 = 0x7472617473;
      }
      if (v21 == v22 && v20 == v23)
      {
        swift_bridgeObjectRelease_n();
LABEL_44:
        *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        v5 = v28 + 1;
        if (!__OFADD__(v28, 1))
          goto LABEL_4;
        __break(1u);
LABEL_47:
        swift_retain();
        sub_1C0158370(a1, a2, v28, a3);
        return;
      }
      v25 = sub_1C0304A08();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v25 & 1) != 0)
        goto LABEL_44;
    }
  }
  v16 = v6 + 1;
  if (v6 + 1 >= v11)
    goto LABEL_47;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v6 + 2;
  if (v6 + 2 >= v11)
    goto LABEL_47;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v6 + 3;
  if (v6 + 3 >= v11)
    goto LABEL_47;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
LABEL_16:
    v6 = v16;
    goto LABEL_17;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      goto LABEL_47;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_17;
  }
LABEL_49:
  __break(1u);
}

void sub_1C017C8B0(unint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  unint64_t v13;
  int64_t v14;
  unsigned __int8 *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v21;
  int v22;
  uint64_t v25;
  int64_t v27;

  v25 = 0;
  v5 = 0;
  v6 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v27 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v11 = v10 | (v5 << 6);
LABEL_17:
    v15 = *(unsigned __int8 **)(*(_QWORD *)(a3 + 48) + 8 * v11);
    if (v15[51] == 38)
    {
      if (v15[49])
      {
        if (v15[49] == 1)
        {
          v16 = 0xE300000000000000;
          v17 = 6581861;
        }
        else
        {
          v16 = 0xE600000000000000;
          v17 = 0x746573746F6ELL;
        }
      }
      else
      {
        v16 = 0xE500000000000000;
        v17 = 0x7472617473;
      }
      if (a4)
      {
        if (a4 == 1)
          v18 = 6581861;
        else
          v18 = 0x746573746F6ELL;
        if (a4 == 1)
          v19 = 0xE300000000000000;
        else
          v19 = 0xE600000000000000;
      }
      else
      {
        v19 = 0xE500000000000000;
        v18 = 0x7472617473;
      }
      if (v17 == v18 && v16 == v19)
      {
        swift_retain();
        swift_bridgeObjectRelease_n();
LABEL_38:
        v22 = v15[16];
        swift_release();
        if (v22 == 4)
        {
          *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
          v12 = __OFADD__(v25++, 1);
          if (v12)
            goto LABEL_49;
        }
      }
      else
      {
        v21 = sub_1C0304A08();
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v21 & 1) != 0)
          goto LABEL_38;
        swift_release();
      }
    }
  }
  v12 = __OFADD__(v5++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v5 >= v27)
    goto LABEL_46;
  v13 = *(_QWORD *)(v6 + 8 * v5);
  if (v13)
  {
LABEL_16:
    v9 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v5 << 6);
    goto LABEL_17;
  }
  v14 = v5 + 1;
  if (v5 + 1 >= v27)
    goto LABEL_46;
  v13 = *(_QWORD *)(v6 + 8 * v14);
  if (v13)
    goto LABEL_15;
  v14 = v5 + 2;
  if (v5 + 2 >= v27)
    goto LABEL_46;
  v13 = *(_QWORD *)(v6 + 8 * v14);
  if (v13)
    goto LABEL_15;
  v14 = v5 + 3;
  if (v5 + 3 >= v27)
  {
LABEL_46:
    swift_retain();
    sub_1C0158370(a1, a2, v25, a3);
    return;
  }
  v13 = *(_QWORD *)(v6 + 8 * v14);
  if (v13)
  {
LABEL_15:
    v5 = v14;
    goto LABEL_16;
  }
  while (1)
  {
    v5 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v5 >= v27)
      goto LABEL_46;
    v13 = *(_QWORD *)(v6 + 8 * v5);
    ++v14;
    if (v13)
      goto LABEL_16;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
}

void sub_1C017CB6C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_20;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_24;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_24;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
          break;
      }
    }
LABEL_19:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_20:
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v14) + 50) == 1)
    {
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_1C0158370(a1, a2, v6, a3);
        return;
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_24;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

void sub_1C017CCE0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_20;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_24;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_24;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
          break;
      }
    }
LABEL_19:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_20:
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v14) + 51) == 38)
    {
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_1C0158370(a1, a2, v6, a3);
        return;
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_24;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1C017CE54(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v14;
  int64_t v15;
  unsigned __int8 *v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v30 = (unint64_t *)result;
  v6 = 0;
  v7 = 0;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v33 = (unint64_t)(v8 + 63) >> 6;
LABEL_4:
  v31 = v6;
  while (v10)
  {
    v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v12 = v11 | (v7 << 6);
LABEL_18:
    v16 = *(unsigned __int8 **)(*(_QWORD *)(a3 + 48) + 8 * v12);
    if (v16[16] == *(unsigned __int8 *)(a4 + 16))
    {
      if (v16[49])
      {
        if (v16[49] == 1)
        {
          v17 = 0xE300000000000000;
          v18 = 6581861;
        }
        else
        {
          v17 = 0xE600000000000000;
          v18 = 0x746573746F6ELL;
        }
      }
      else
      {
        v17 = 0xE500000000000000;
        v18 = 0x7472617473;
      }
      v19 = *(unsigned __int8 *)(a4 + 49);
      v20 = 0x746573746F6ELL;
      if (v19 == 1)
        v20 = 6581861;
      v21 = 0xE300000000000000;
      if (v19 != 1)
        v21 = 0xE600000000000000;
      if (*(_BYTE *)(a4 + 49))
        v22 = v20;
      else
        v22 = 0x7472617473;
      if (*(_BYTE *)(a4 + 49))
        v23 = v21;
      else
        v23 = 0xE500000000000000;
      if (v18 == v22 && v17 == v23)
      {
        swift_retain();
        swift_bridgeObjectRelease_n();
        goto LABEL_41;
      }
      v25 = sub_1C0304A08();
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v25 & 1) != 0)
      {
LABEL_41:
        v26 = v16[51];
        result = swift_release();
        if (v26 != 39)
        {
          *(unint64_t *)((char *)v30 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
          v6 = v31 + 1;
          if (!__OFADD__(v31, 1))
            goto LABEL_4;
          __break(1u);
LABEL_50:
          swift_retain();
          sub_1C0158370(v30, a2, v31, a3);
          v28 = v27;
          swift_release();
          return v28;
        }
      }
      else
      {
        result = swift_release();
      }
    }
  }
  if (__OFADD__(v7++, 1))
  {
    __break(1u);
    goto LABEL_52;
  }
  if (v7 >= v33)
    goto LABEL_50;
  v14 = *(_QWORD *)(v32 + 8 * v7);
  if (v14)
  {
LABEL_17:
    v10 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v7 << 6);
    goto LABEL_18;
  }
  v15 = v7 + 1;
  if (v7 + 1 >= v33)
    goto LABEL_50;
  v14 = *(_QWORD *)(v32 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v7 + 2;
  if (v7 + 2 >= v33)
    goto LABEL_50;
  v14 = *(_QWORD *)(v32 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v7 + 3;
  if (v7 + 3 >= v33)
    goto LABEL_50;
  v14 = *(_QWORD *)(v32 + 8 * v15);
  if (v14)
  {
LABEL_16:
    v7 = v15;
    goto LABEL_17;
  }
  while (1)
  {
    v7 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v7 >= v33)
      goto LABEL_50;
    v14 = *(_QWORD *)(v32 + 8 * v7);
    ++v15;
    if (v14)
      goto LABEL_17;
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_1C017D130(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v14;
  int64_t v15;
  unsigned __int8 *v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v30 = (unint64_t *)result;
  v6 = 0;
  v7 = 0;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v33 = (unint64_t)(v8 + 63) >> 6;
LABEL_4:
  v31 = v6;
  while (v10)
  {
    v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v12 = v11 | (v7 << 6);
LABEL_18:
    v16 = *(unsigned __int8 **)(*(_QWORD *)(a3 + 48) + 8 * v12);
    if (v16[16] == *(unsigned __int8 *)(a4 + 16))
    {
      if (v16[49])
      {
        if (v16[49] == 1)
        {
          v17 = 0xE300000000000000;
          v18 = 6581861;
        }
        else
        {
          v17 = 0xE600000000000000;
          v18 = 0x746573746F6ELL;
        }
      }
      else
      {
        v17 = 0xE500000000000000;
        v18 = 0x7472617473;
      }
      v19 = *(unsigned __int8 *)(a4 + 49);
      v20 = 0x746573746F6ELL;
      if (v19 == 1)
        v20 = 6581861;
      v21 = 0xE300000000000000;
      if (v19 != 1)
        v21 = 0xE600000000000000;
      if (*(_BYTE *)(a4 + 49))
        v22 = v20;
      else
        v22 = 0x7472617473;
      if (*(_BYTE *)(a4 + 49))
        v23 = v21;
      else
        v23 = 0xE500000000000000;
      if (v18 == v22 && v17 == v23)
      {
        swift_retain();
        swift_bridgeObjectRelease_n();
        goto LABEL_41;
      }
      v25 = sub_1C0304A08();
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v25 & 1) != 0)
      {
LABEL_41:
        v26 = v16[51];
        result = swift_release();
        if (v26 == 38)
        {
          *(unint64_t *)((char *)v30 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
          v6 = v31 + 1;
          if (!__OFADD__(v31, 1))
            goto LABEL_4;
          __break(1u);
LABEL_50:
          swift_retain();
          sub_1C0158370(v30, a2, v31, a3);
          v28 = v27;
          swift_release();
          return v28;
        }
      }
      else
      {
        result = swift_release();
      }
    }
  }
  if (__OFADD__(v7++, 1))
  {
    __break(1u);
    goto LABEL_52;
  }
  if (v7 >= v33)
    goto LABEL_50;
  v14 = *(_QWORD *)(v32 + 8 * v7);
  if (v14)
  {
LABEL_17:
    v10 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v7 << 6);
    goto LABEL_18;
  }
  v15 = v7 + 1;
  if (v7 + 1 >= v33)
    goto LABEL_50;
  v14 = *(_QWORD *)(v32 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v7 + 2;
  if (v7 + 2 >= v33)
    goto LABEL_50;
  v14 = *(_QWORD *)(v32 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v7 + 3;
  if (v7 + 3 >= v33)
    goto LABEL_50;
  v14 = *(_QWORD *)(v32 + 8 * v15);
  if (v14)
  {
LABEL_16:
    v7 = v15;
    goto LABEL_17;
  }
  while (1)
  {
    v7 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v7 >= v33)
      goto LABEL_50;
    v14 = *(_QWORD *)(v32 + 8 * v7);
    ++v15;
    if (v14)
      goto LABEL_17;
  }
LABEL_52:
  __break(1u);
  return result;
}

void sub_1C017D40C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;

  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_17;
    }
    v15 = __OFADD__(v7++, 1);
    if (v15)
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v7 >= v12)
      goto LABEL_26;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    if (!v16)
      break;
LABEL_16:
    v18 = __clz(__rbit64(v16));
    v11 = (v16 - 1) & v16;
    v14 = v18 + (v7 << 6);
LABEL_17:
    v19 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v14);
    if (*(_BYTE *)(v19 + 51) != 38 && (*(_BYTE *)(v19 + 54) & 1) == 0)
    {
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = __OFADD__(v6++, 1);
      if (v15)
        goto LABEL_29;
    }
  }
  v17 = v7 + 1;
  if (v7 + 1 >= v12)
    goto LABEL_26;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
    goto LABEL_15;
  v17 = v7 + 2;
  if (v7 + 2 >= v12)
    goto LABEL_26;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
    goto LABEL_15;
  v17 = v7 + 3;
  if (v7 + 3 >= v12)
  {
LABEL_26:
    swift_retain();
    sub_1C0158370(a1, a2, v6, a3);
    return;
  }
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
LABEL_15:
    v7 = v17;
    goto LABEL_16;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_26;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_16;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
}

uint64_t sub_1C017D588(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  int v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v38 = a2;
  v45 = a4;
  v39 = a1;
  v5 = sub_1C0301DB0();
  v43 = *(_QWORD *)(v5 - 8);
  v44 = v5;
  result = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v10 = a3 + 56;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  v42 = a3;
  v40 = 0;
  v41 = v14;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v9 << 6);
    }
    else
    {
      v17 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_58;
      if (v17 >= v14)
      {
LABEL_56:
        swift_retain();
        sub_1C0158370(v39, v38, v40, a3);
        v37 = v36;
        swift_release();
        return v37;
      }
      v18 = *(_QWORD *)(v10 + 8 * v17);
      ++v9;
      if (!v18)
      {
        v9 = v17 + 1;
        if (v17 + 1 >= v14)
          goto LABEL_56;
        v18 = *(_QWORD *)(v10 + 8 * v9);
        if (!v18)
        {
          v9 = v17 + 2;
          if (v17 + 2 >= v14)
            goto LABEL_56;
          v18 = *(_QWORD *)(v10 + 8 * v9);
          if (!v18)
          {
            v19 = v17 + 3;
            if (v19 >= v14)
              goto LABEL_56;
            v18 = *(_QWORD *)(v10 + 8 * v19);
            if (!v18)
            {
              while (1)
              {
                v9 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_59;
                if (v9 >= v14)
                  goto LABEL_56;
                v18 = *(_QWORD *)(v10 + 8 * v9);
                ++v19;
                if (v18)
                  goto LABEL_19;
              }
            }
            v9 = v19;
          }
        }
      }
LABEL_19:
      v13 = (v18 - 1) & v18;
      v16 = __clz(__rbit64(v18)) + (v9 << 6);
    }
    v20 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v16);
    v21 = *(unsigned __int8 *)(v20 + 16);
    if (v21 != 12 && v21 != 3)
      goto LABEL_32;
    if (*(_BYTE *)(v20 + 53) == 1)
    {
      swift_retain();
LABEL_27:
      v23 = 1;
      goto LABEL_45;
    }
    if (v21 == 3)
    {
      v24 = v43;
      v25 = v10;
      v26 = v44;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v8, *(_QWORD *)(v45 + 24) + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_regionFormat, v44);
      swift_retain();
      v27 = sub_1C0078D44();
      v28 = *(uint64_t (**)(char *, uint64_t))(v24 + 8);
      v29 = v26;
      v10 = v25;
      v14 = v41;
      a3 = v42;
      result = v28(v8, v29);
      if ((v27 & 1) != 0 && *(_BYTE *)(v20 + 51) == 39)
      {
        v21 = *(unsigned __int8 *)(v20 + 16);
        goto LABEL_27;
      }
    }
    else
    {
LABEL_32:
      result = swift_retain();
    }
    if (qword_1EF5B7FE0 != -1)
      result = swift_once();
    v30 = *(_QWORD *)(qword_1EF5FC768 + 16);
    v21 = *(unsigned __int8 *)(v20 + 16);
    if (!v30)
      goto LABEL_44;
    if (*(unsigned __int8 *)(qword_1EF5FC768 + 32) != v21)
      break;
LABEL_37:
    if (*(_BYTE *)(v20 + 50) == 1)
    {
      v23 = *(_BYTE *)(v20 + 53);
      goto LABEL_45;
    }
LABEL_44:
    v23 = 0;
LABEL_45:
    if (v21 == 4 && !*(_BYTE *)(v20 + 48))
    {
      v34 = *(double *)(v20 + 24);
      result = swift_release();
      if (v34 > 12.0)
        v35 = 1;
      else
        v35 = v23;
      if ((v35 & 1) != 0)
        goto LABEL_48;
    }
    else
    {
      result = swift_release();
      if ((v23 & 1) != 0)
      {
LABEL_48:
        *(unint64_t *)((char *)v39 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        if (__OFADD__(v40++, 1))
          goto LABEL_60;
      }
    }
  }
  if (v30 == 1)
    goto LABEL_44;
  v31 = 33;
  while (1)
  {
    v32 = v31 - 31;
    if (__OFADD__(v31 - 32, 1))
      break;
    if (*(unsigned __int8 *)(qword_1EF5FC768 + v31) == v21)
      goto LABEL_37;
    ++v31;
    if (v32 == v30)
      goto LABEL_44;
  }
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
  return result;
}

void sub_1C017D8F4(unint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v15;
  int64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v33;
  unsigned __int8 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v39;
  int64_t v40;

  v5 = 0;
  v6 = 0;
  v7 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v40 = v11;
LABEL_4:
  v39 = v5;
  while (1)
  {
    do
    {
      if (v10)
      {
        v12 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v13 = v12 | (v6 << 6);
      }
      else
      {
        if (__OFADD__(v6++, 1))
          goto LABEL_75;
        if (v6 >= v11)
          goto LABEL_72;
        v15 = *(_QWORD *)(v7 + 8 * v6);
        if (!v15)
        {
          v16 = v6 + 1;
          if (v6 + 1 >= v11)
            goto LABEL_72;
          v15 = *(_QWORD *)(v7 + 8 * v16);
          if (!v15)
          {
            v16 = v6 + 2;
            if (v6 + 2 >= v11)
              goto LABEL_72;
            v15 = *(_QWORD *)(v7 + 8 * v16);
            if (!v15)
            {
              v16 = v6 + 3;
              if (v6 + 3 >= v11)
                goto LABEL_72;
              v15 = *(_QWORD *)(v7 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  v6 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_76;
                  if (v6 >= v11)
                    goto LABEL_72;
                  v15 = *(_QWORD *)(v7 + 8 * v6);
                  ++v16;
                  if (v15)
                    goto LABEL_17;
                }
              }
            }
          }
          v6 = v16;
        }
LABEL_17:
        v10 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v6 << 6);
      }
      v17 = *(unsigned __int8 **)(*(_QWORD *)(a3 + 48) + 8 * v13);
    }
    while (!sub_1C007A978());
    v18 = qword_1EF5B7FD8;
    swift_retain();
    if (v18 != -1)
      swift_once();
    v19 = *(_QWORD *)(qword_1EF5FC760 + 16);
    if (v19)
    {
      v20 = v17[16];
      if (*(unsigned __int8 *)(qword_1EF5FC760 + 32) == v20)
        goto LABEL_32;
      if (v19 != 1)
        break;
    }
LABEL_28:
    if (qword_1EF5B7FE0 != -1)
      swift_once();
    v23 = *(_QWORD *)(qword_1EF5FC768 + 16);
    if (!v23)
      goto LABEL_68;
    v24 = v17[16];
    if (*(unsigned __int8 *)(qword_1EF5FC768 + 32) == v24)
    {
LABEL_32:
      v25 = v17[49];
      v26 = 0x746573746F6ELL;
      if (v25 == 1)
        v26 = 6581861;
      v27 = 0xE300000000000000;
      if (v25 != 1)
        v27 = 0xE600000000000000;
      if (v17[49])
        v28 = v26;
      else
        v28 = 0x7472617473;
      if (v17[49])
        v29 = v27;
      else
        v29 = 0xE500000000000000;
      if (a4)
      {
        if (a4 == 1)
          v30 = 6581861;
        else
          v30 = 0x746573746F6ELL;
        if (a4 == 1)
          v31 = 0xE300000000000000;
        else
          v31 = 0xE600000000000000;
      }
      else
      {
        v31 = 0xE500000000000000;
        v30 = 0x7472617473;
      }
      if (v28 == v30 && v29 == v31)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_61;
      }
      v33 = sub_1C0304A08();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v33 & 1) != 0)
      {
LABEL_61:
        v34 = v17[53];
        swift_release();
        v11 = v40;
        if ((v34 & 1) != 0)
        {
          *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
          v5 = v39 + 1;
          if (!__OFADD__(v39, 1))
            goto LABEL_4;
          __break(1u);
LABEL_72:
          swift_retain();
          sub_1C0158370(a1, a2, v39, a3);
          return;
        }
      }
      else
      {
        swift_release();
        v11 = v40;
      }
    }
    else
    {
      if (v23 != 1)
      {
        v35 = 33;
        do
        {
          v36 = v35 - 31;
          if (__OFADD__(v35 - 32, 1))
            goto LABEL_74;
          if (*(unsigned __int8 *)(qword_1EF5FC768 + v35) == v24)
            goto LABEL_32;
          ++v35;
        }
        while (v36 != v23);
      }
LABEL_68:
      swift_release();
    }
  }
  v21 = 33;
  while (1)
  {
    v22 = v21 - 31;
    if (__OFADD__(v21 - 32, 1))
      break;
    if (*(unsigned __int8 *)(qword_1EF5FC760 + v21) == v20)
      goto LABEL_32;
    ++v21;
    if (v22 == v19)
      goto LABEL_28;
  }
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
}

uint64_t sub_1C017DC94(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t *v29;
  uint64_t v30;
  int64_t v31;

  v29 = (unint64_t *)result;
  v6 = 0;
  v7 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v31 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v12 = v11 | (v6 << 6);
LABEL_20:
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v12) + 49))
    {
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v12) + 49) == 1)
      {
        v16 = 0xE300000000000000;
        v17 = 6581861;
      }
      else
      {
        v16 = 0xE600000000000000;
        v17 = 0x746573746F6ELL;
      }
    }
    else
    {
      v16 = 0xE500000000000000;
      v17 = 0x7472617473;
    }
    v18 = *(unsigned __int8 *)(a4 + 49);
    v19 = 0x746573746F6ELL;
    if (v18 == 1)
      v19 = 6581861;
    v20 = 0xE300000000000000;
    if (v18 != 1)
      v20 = 0xE600000000000000;
    if (*(_BYTE *)(a4 + 49))
      v21 = v19;
    else
      v21 = 0x7472617473;
    if (*(_BYTE *)(a4 + 49))
      v22 = v20;
    else
      v22 = 0xE500000000000000;
    if (v17 == v21 && v16 == v22)
    {
      result = swift_bridgeObjectRelease_n();
LABEL_42:
      *(unint64_t *)((char *)v29 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v30++, 1))
      {
        __break(1u);
LABEL_45:
        swift_retain();
        sub_1C0158370(v29, a2, v30, a3);
        v27 = v26;
        swift_release();
        return v27;
      }
    }
    else
    {
      v24 = sub_1C0304A08();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v24 & 1) != 0)
        goto LABEL_42;
    }
  }
  v13 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_47;
  }
  if (v13 >= v31)
    goto LABEL_45;
  v14 = *(_QWORD *)(v7 + 8 * v13);
  ++v6;
  if (v14)
    goto LABEL_19;
  v6 = v13 + 1;
  if (v13 + 1 >= v31)
    goto LABEL_45;
  v14 = *(_QWORD *)(v7 + 8 * v6);
  if (v14)
    goto LABEL_19;
  v6 = v13 + 2;
  if (v13 + 2 >= v31)
    goto LABEL_45;
  v14 = *(_QWORD *)(v7 + 8 * v6);
  if (v14)
  {
LABEL_19:
    v10 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v6 << 6);
    goto LABEL_20;
  }
  v15 = v13 + 3;
  if (v15 >= v31)
    goto LABEL_45;
  v14 = *(_QWORD *)(v7 + 8 * v15);
  if (v14)
  {
    v6 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v6 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v6 >= v31)
      goto LABEL_45;
    v14 = *(_QWORD *)(v7 + 8 * v6);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_47:
  __break(1u);
  return result;
}

BOOL sub_1C017DF1C(_BOOL8 result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v24;

  v24 = (unint64_t *)result;
  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    v13 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v14 = v13 | (v7 << 6);
LABEL_20:
    v18 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v14);
    result = sub_1C007A978();
    if (result)
    {
      v19 = *(unsigned __int8 *)(v18 + 16);
      if ((v19 == 11 || *(unsigned __int8 *)(a4 + 16) < v19) && (*(_BYTE *)(v18 + 54) & 1) == 0)
      {
        *(unint64_t *)((char *)v24 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        if (__OFADD__(v6++, 1))
        {
          __break(1u);
LABEL_27:
          swift_retain();
          sub_1C0158370(v24, a2, v6, a3);
          v22 = v21;
          swift_release();
          return v22;
        }
      }
    }
  }
  v15 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v15 >= v12)
    goto LABEL_27;
  v16 = *(_QWORD *)(v8 + 8 * v15);
  ++v7;
  if (v16)
    goto LABEL_19;
  v7 = v15 + 1;
  if (v15 + 1 >= v12)
    goto LABEL_27;
  v16 = *(_QWORD *)(v8 + 8 * v7);
  if (v16)
    goto LABEL_19;
  v7 = v15 + 2;
  if (v15 + 2 >= v12)
    goto LABEL_27;
  v16 = *(_QWORD *)(v8 + 8 * v7);
  if (v16)
  {
LABEL_19:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
    goto LABEL_20;
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_27;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_27;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1C017E0E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;

  v27 = (unint64_t *)result;
  v28 = 0;
  v6 = 0;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v30 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v11 = v10 | (v6 << 6);
LABEL_17:
    v15 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v11);
    if (*(_BYTE *)(v15 + 49))
    {
      if (*(_BYTE *)(v15 + 49) == 1)
      {
        v16 = 0xE300000000000000;
        v17 = 6581861;
      }
      else
      {
        v16 = 0xE600000000000000;
        v17 = 0x746573746F6ELL;
      }
    }
    else
    {
      v16 = 0xE500000000000000;
      v17 = 0x7472617473;
    }
    v18 = (0x20001u >> (8 * *(_BYTE *)(a4 + 49)));
    if ((0x20001u >> (8 * *(_BYTE *)(a4 + 49))))
    {
      if (v18 == 1)
        v19 = 6581861;
      else
        v19 = 0x746573746F6ELL;
      if (v18 == 1)
        v20 = 0xE300000000000000;
      else
        v20 = 0xE600000000000000;
    }
    else
    {
      v20 = 0xE500000000000000;
      v19 = 0x7472617473;
    }
    if (v17 == v19 && v16 == v20)
    {
      swift_retain();
      swift_bridgeObjectRelease_n();
LABEL_37:
      v23 = *(_BYTE *)(v15 + 55);
      result = swift_release();
      if ((v23 & 1) != 0)
      {
        *(unint64_t *)((char *)v27 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        v12 = __OFADD__(v28++, 1);
        if (v12)
          goto LABEL_48;
      }
    }
    else
    {
      v22 = sub_1C0304A08();
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v22 & 1) != 0)
        goto LABEL_37;
      result = swift_release();
    }
  }
  v12 = __OFADD__(v6++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_47;
  }
  if (v6 >= v30)
    goto LABEL_45;
  v13 = *(_QWORD *)(v29 + 8 * v6);
  if (v13)
  {
LABEL_16:
    v9 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v6 << 6);
    goto LABEL_17;
  }
  v14 = v6 + 1;
  if (v6 + 1 >= v30)
    goto LABEL_45;
  v13 = *(_QWORD *)(v29 + 8 * v14);
  if (v13)
    goto LABEL_15;
  v14 = v6 + 2;
  if (v6 + 2 >= v30)
    goto LABEL_45;
  v13 = *(_QWORD *)(v29 + 8 * v14);
  if (v13)
    goto LABEL_15;
  v14 = v6 + 3;
  if (v6 + 3 >= v30)
  {
LABEL_45:
    swift_retain();
    sub_1C0158370(v27, a2, v28, a3);
    v25 = v24;
    swift_release();
    return v25;
  }
  v13 = *(_QWORD *)(v29 + 8 * v14);
  if (v13)
  {
LABEL_15:
    v6 = v14;
    goto LABEL_16;
  }
  while (1)
  {
    v6 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v6 >= v30)
      goto LABEL_45;
    v13 = *(_QWORD *)(v29 + 8 * v6);
    ++v14;
    if (v13)
      goto LABEL_16;
  }
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1C017E3B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  _BYTE *v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  if ((*(_QWORD *)v1 & 0xC000000000000001) != 0)
  {
    result = sub_1C03045F4();
    if (!result)
      return result;
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1C03045C4();
      type metadata accessor for DateTimeConstraint();
      sub_1C007BC44();
      result = sub_1C0304270();
      a1 = v20;
      v18 = v21;
      v4 = v22;
      v5 = v23;
      v6 = v24;
    }
    else
    {
      v7 = -1 << *(_BYTE *)(a1 + 32);
      v18 = a1 + 56;
      v4 = ~v7;
      v8 = -v7;
      if (v8 < 64)
        v9 = ~(-1 << v8);
      else
        v9 = -1;
      v6 = v9 & *(_QWORD *)(a1 + 56);
      result = swift_bridgeObjectRetain();
      v5 = 0;
    }
    v10 = (unint64_t)(v4 + 64) >> 6;
    if (a1 < 0)
      goto LABEL_14;
    while (1)
    {
      if (v6)
      {
        v11 = (v6 - 1) & v6;
        v12 = __clz(__rbit64(v6)) | (v5 << 6);
        v13 = v5;
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          return sub_1C00B7078();
        v16 = *(_QWORD *)(v18 + 8 * v15);
        v13 = v5 + 1;
        if (!v16)
        {
          v13 = v5 + 2;
          if (v5 + 2 >= v10)
            return sub_1C00B7078();
          v16 = *(_QWORD *)(v18 + 8 * v13);
          if (!v16)
          {
            v13 = v5 + 3;
            if (v5 + 3 >= v10)
              return sub_1C00B7078();
            v16 = *(_QWORD *)(v18 + 8 * v13);
            if (!v16)
            {
              v13 = v5 + 4;
              if (v5 + 4 >= v10)
                return sub_1C00B7078();
              v16 = *(_QWORD *)(v18 + 8 * v13);
              if (!v16)
              {
                v13 = v5 + 5;
                if (v5 + 5 >= v10)
                  return sub_1C00B7078();
                v16 = *(_QWORD *)(v18 + 8 * v13);
                if (!v16)
                {
                  v17 = v5 + 6;
                  while (v17 < v10)
                  {
                    v16 = *(_QWORD *)(v18 + 8 * v17++);
                    if (v16)
                    {
                      v13 = v17 - 1;
                      goto LABEL_32;
                    }
                  }
                  return sub_1C00B7078();
                }
              }
            }
          }
        }
LABEL_32:
        v11 = (v16 - 1) & v16;
        v12 = __clz(__rbit64(v16)) + (v13 << 6);
      }
      v14 = *(_BYTE **)(*(_QWORD *)(a1 + 48) + 8 * v12);
      swift_retain();
      if (!v14)
        return sub_1C00B7078();
      while (1)
      {
        sub_1C00D4508(v14);
        swift_release();
        result = swift_release();
        v5 = v13;
        v6 = v11;
        if ((a1 & 0x8000000000000000) == 0)
          break;
LABEL_14:
        if (sub_1C0304624())
        {
          type metadata accessor for DateTimeConstraint();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          v14 = v19;
          swift_unknownObjectRelease();
          v13 = v5;
          v11 = v6;
          if (v19)
            continue;
        }
        return sub_1C00B7078();
      }
    }
  }
  result = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (result)
    goto LABEL_5;
  return result;
}

void sub_1C017E680(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = a1 - a2;
  if (__OFSUB__(0, v6))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v5, v7))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v5 - v6 > *(_QWORD *)(v4 + 24) >> 1)
  {
    sub_1C004FA94();
    v4 = v8;
  }
  v9 = *(_QWORD *)(sub_1C0301D5C() - 8);
  v10 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  v11 = *(_QWORD *)(v9 + 72);
  swift_arrayDestroy();
  if (!v6)
    goto LABEL_13;
  v12 = *(_QWORD *)(v4 + 16);
  if (__OFSUB__(v12, a2))
    goto LABEL_19;
  sub_1C00ADEEC(v10 + v11 * a2, v12 - a2);
  v13 = *(_QWORD *)(v4 + 16);
  v14 = __OFADD__(v13, v7);
  v15 = v13 - v6;
  if (!v14)
  {
    *(_QWORD *)(v4 + 16) = v15;
LABEL_13:
    *v2 = v4;
    return;
  }
LABEL_20:
  __break(1u);
}

uint64_t sub_1C017E794(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    if (!(*v3 >> 62))
    {
      v6 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  v6 = sub_1C03047F8();
  swift_bridgeObjectRelease();
LABEL_4:
  if (v6 < v2)
  {
    __break(1u);
    goto LABEL_32;
  }
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v5 = v4 - v2;
  if (__OFSUB__(0, v2 - v4))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (!(*v3 >> 62))
  {
    v7 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_9;
  }
LABEL_34:
  swift_bridgeObjectRetain();
  v7 = sub_1C03047F8();
  swift_bridgeObjectRelease();
LABEL_9:
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
  {
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    v12 = sub_1C03047F8();
    swift_bridgeObjectRelease();
    v9 = *v3;
    goto LABEL_17;
  }
  v9 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v9;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_20;
    v7 = 1;
  }
  if (v9 >> 62)
    goto LABEL_36;
  v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_17:
  if (v12 <= v8)
    v12 = v8;
  swift_bridgeObjectRetain();
  *v3 = MEMORY[0x1C3B975F8](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_20:
  v13 = v11 + 32;
  v14 = v11 + 32 + 8 * v4;
  type metadata accessor for DateTimeConstraint();
  swift_arrayDestroy();
  if (!v5)
    return sub_1C0304150();
  if (*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_1C03047F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFSUB__(v15, v2))
  {
    __break(1u);
  }
  else
  {
    result = sub_1C00ADA28(v13 + 8 * v2, v15 - v2, v14);
    if (!(*v3 >> 62))
    {
      v17 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRetain();
  v17 = sub_1C03047F8();
  result = swift_bridgeObjectRelease();
LABEL_26:
  if (!__OFADD__(v17, v5))
  {
    *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) = v17 + v5;
    return sub_1C0304150();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C017EA10(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDEE8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_64()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_3_65()
{
  return sub_1C03045AC();
}

uint64_t OUTLINED_FUNCTION_4_50()
{
  return type metadata accessor for DateTimeConstraint();
}

uint64_t OUTLINED_FUNCTION_7_44()
{
  return 0x7472617473;
}

uint64_t OUTLINED_FUNCTION_9_38()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_11_42()
{
  return 0x746573746F6ELL;
}

uint64_t OUTLINED_FUNCTION_12_31()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_18_27()
{
  return swift_endAccess();
}

void OUTLINED_FUNCTION_19_26(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(a1 + ((v1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v1;
  *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v1) = v3;
  ++*(_QWORD *)(v2 + 16);
}

unint64_t OUTLINED_FUNCTION_21_21(unint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= v2 << result;
  return result;
}

uint64_t OUTLINED_FUNCTION_22_24()
{
  uint64_t v0;
  _QWORD *v1;

  return sub_1C007A70C(0, v0, v1);
}

void OUTLINED_FUNCTION_25_17(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  sub_1C023014C(a8 + 1, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32);
}

uint64_t OUTLINED_FUNCTION_34_21@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 + a2) |= v2;
  *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * result) = v4;
  ++*(_QWORD *)(v5 + 16);
  return result;
}

unint64_t OUTLINED_FUNCTION_35_22(unint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  return result;
}

uint64_t OUTLINED_FUNCTION_40_15()
{
  return sub_1C03045C4();
}

uint64_t OUTLINED_FUNCTION_41_13()
{
  return sub_1C03045C4();
}

uint64_t OUTLINED_FUNCTION_46_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  return v2(v4, v3, v1, v0);
}

uint64_t OUTLINED_FUNCTION_47_17()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return v1(v4, v3, v0, v2);
}

uint64_t OUTLINED_FUNCTION_56_11()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v3, v2, v0);
}

void OUTLINED_FUNCTION_57_6(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  sub_1C023014C(a8 + 1, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32);
}

uint64_t OUTLINED_FUNCTION_78_6()
{
  uint64_t v0;
  _QWORD *v1;

  return sub_1C007A70C(0, v0, v1);
}

uint64_t OUTLINED_FUNCTION_90_6()
{
  return sub_1C0078A80();
}

uint64_t OUTLINED_FUNCTION_93_4()
{
  return sub_1C0304624();
}

uint64_t OUTLINED_FUNCTION_96_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v3, v1);
}

BOOL OUTLINED_FUNCTION_102_1(uint64_t a1)
{
  return sub_1C0083A08(a1);
}

uint64_t OUTLINED_FUNCTION_107_2()
{
  return sub_1C007A728(0);
}

void OUTLINED_FUNCTION_108_2()
{
  JUMPOUT(0x1C3B975ECLL);
}

uint64_t OUTLINED_FUNCTION_111_2()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_112_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_113_1()
{
  return sub_1C0304270();
}

uint64_t OUTLINED_FUNCTION_115_0()
{
  return swift_willThrow();
}

uint64_t getEnumTagSinglePayload for PLUSTrialFactors(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ForcePromptingStrategy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C017EE50 + 4 * byte_1C0311445[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C017EE84 + 4 * asc_1C0311440[v4]))();
}

uint64_t sub_1C017EE84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C017EE8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C017EE94);
  return result;
}

uint64_t sub_1C017EEA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C017EEA8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C017EEAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C017EEB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ForcePromptingStrategy()
{
  return &type metadata for ForcePromptingStrategy;
}

uint64_t sub_1C017EED0(uint64_t result, double a2, double a3)
{
  double v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 == a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = a3 - a2;
  if ((~COERCE__INT64(a3 - a2) & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v6 = result;
  v7 = 0;
  result = MEMORY[0x1C3B98390](&v7, 8);
  if (v5 * ((double)(v7 & 0x1FFFFFFFFFFFFFLL) * 1.11022302e-16) + a2 == a3)
    return sub_1C017EED0(v6, a2, a3);
  return result;
}

void RestartableBlockOperation.__allocating_init(block:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR____TtC13SiriInference25RestartableBlockOperation_block];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  objc_msgSendSuper2(&v7, sel_init);
  OUTLINED_FUNCTION_36_0();
}

void RestartableBlockOperation.clone()()
{
  uint64_t v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  objc_super v6;

  v1 = (objc_class *)OUTLINED_FUNCTION_7_9();
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13SiriInference25RestartableBlockOperation_block);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13SiriInference25RestartableBlockOperation_block + 8);
  v4 = (char *)objc_allocWithZone(v1);
  v5 = &v4[OBJC_IVAR____TtC13SiriInference25RestartableBlockOperation_block];
  *(_QWORD *)v5 = v3;
  *((_QWORD *)v5 + 1) = v2;
  v6.receiver = v4;
  v6.super_class = v1;
  swift_retain();
  objc_msgSendSuper2(&v6, sel_init);
  OUTLINED_FUNCTION_36_0();
}

void RestartableBlockOperation.init(block:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *v5;
  char *v6;
  objc_super v7;

  v5 = (objc_class *)OUTLINED_FUNCTION_7_9();
  v6 = &v2[OBJC_IVAR____TtC13SiriInference25RestartableBlockOperation_block];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v7.receiver = v2;
  v7.super_class = v5;
  objc_msgSendSuper2(&v7, sel_init);
  OUTLINED_FUNCTION_36_0();
}

id RestartableBlockOperation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void RestartableBlockOperation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RestartableBlockOperation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_7_9();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for RestartableBlockOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RestartableBlockOperation.__allocating_init(block:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t DateTime.Date.Holiday.Religion.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 7;
  if (result < 7)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t DateTime.Date.Holiday.Religion.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1C017F138()
{
  unint64_t result;

  result = qword_1EF5BDEF8;
  if (!qword_1EF5BDEF8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.Holiday.Religion, &type metadata for DateTime.Date.Holiday.Religion);
    atomic_store(result, (unint64_t *)&qword_1EF5BDEF8);
  }
  return result;
}

unint64_t sub_1C017F174@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return DateTime.Date.Holiday.Religion.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C017F17C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DateTime.Date.Holiday.Religion.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C017F1A0()
{
  sub_1C017F314();
  return sub_1C03040FC();
}

uint64_t sub_1C017F1FC()
{
  sub_1C017F314();
  return sub_1C03040D8();
}

uint64_t _s8ReligionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1C017F294 + 4 * byte_1C03114D5[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1C017F2C8 + 4 * byte_1C03114D0[v4]))();
}

uint64_t sub_1C017F2C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C017F2D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C017F2D8);
  return result;
}

uint64_t sub_1C017F2E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C017F2ECLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1C017F2F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C017F2F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DateTime.Date.Holiday.Religion()
{
  return &type metadata for DateTime.Date.Holiday.Religion;
}

unint64_t sub_1C017F314()
{
  unint64_t result;

  result = qword_1EF5BDF00;
  if (!qword_1EF5BDF00)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.Holiday.Religion, &type metadata for DateTime.Date.Holiday.Religion);
    atomic_store(result, (unint64_t *)&qword_1EF5BDF00);
  }
  return result;
}

uint64_t sub_1C017F350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  _QWORD v19[5];

  sub_1C006F164(v19);
  v5 = v19[0];
  v6 = v19[1];
  v7 = v19[3];
  v8 = v19[4];
  v9 = (unint64_t)(v19[2] + 64) >> 6;
  result = swift_bridgeObjectRetain();
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v7 << 6);
      goto LABEL_20;
    }
    v13 = v7 + 1;
    if (__OFADD__(v7, 1))
      break;
    if (v13 >= v9)
      goto LABEL_26;
    v14 = *(_QWORD *)(v6 + 8 * v13);
    v15 = v7 + 1;
    if (!v14)
    {
      v15 = v7 + 2;
      if (v7 + 2 >= v9)
        goto LABEL_26;
      v14 = *(_QWORD *)(v6 + 8 * v15);
      if (!v14)
      {
        v15 = v7 + 3;
        if (v7 + 3 >= v9)
          goto LABEL_26;
        v14 = *(_QWORD *)(v6 + 8 * v15);
        if (!v14)
        {
          v15 = v7 + 4;
          if (v7 + 4 >= v9)
            goto LABEL_26;
          v14 = *(_QWORD *)(v6 + 8 * v15);
          if (!v14)
          {
            v15 = v7 + 5;
            if (v7 + 5 >= v9)
              goto LABEL_26;
            v14 = *(_QWORD *)(v6 + 8 * v15);
            if (!v14)
            {
              v16 = v7 + 6;
              while (v16 < v9)
              {
                v14 = *(_QWORD *)(v6 + 8 * v16++);
                if (v14)
                {
                  v15 = v16 - 1;
                  goto LABEL_19;
                }
              }
LABEL_26:
              swift_bridgeObjectRelease();
              swift_release();
              return 0;
            }
          }
        }
      }
    }
LABEL_19:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v7 = v15;
LABEL_20:
    v17 = (_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v12);
    if (*v17 != a2 || v17[1] != a3)
    {
      result = sub_1C0304A08();
      if ((result & 1) == 0)
        continue;
    }
    swift_bridgeObjectRelease();
    swift_release();
    return 1;
  }
  __break(1u);
  return result;
}

void (*sub_1C017F4E0(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_1C0182920(v6, a2, a3);
  return sub_1C017F54C;
}

void sub_1C017F54C(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  OUTLINED_FUNCTION_24_18(*a1, *(uint64_t (**)(uint64_t, _QWORD))(*a1 + 40));
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_13_30(v1);
}

uint64_t sub_1C017F578(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRetain();
  v2 = sub_1C0303FF4();
  if (v3)
  {
    v4 = v2;
    v5 = v3;
    do
    {
      if ((sub_1C0303E2C() & 1) == 0)
        MEMORY[0x1C3B96EC0](v4, v5);
      swift_bridgeObjectRelease();
      v4 = sub_1C0303FF4();
      v5 = v6;
    }
    while (v6);
  }
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1C017F658(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = a1[2];
  if (!v1)
    return 0;
  result = a1[4];
  v4 = v1 - 1;
  if (v1 != 1)
  {
    v5 = a1 + 5;
    do
    {
      v7 = *v5++;
      v6 = v7;
      if (v7 < result)
        result = v6;
      --v4;
    }
    while (v4);
  }
  return result;
}

unint64_t sub_1C017F69C(uint64_t a1)
{
  uint64_t v1;
  float v2;
  uint64_t v3;
  float *v4;
  float v5;
  float v6;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = *(float *)(a1 + 32);
    v3 = v1 - 1;
    if (v1 != 1)
    {
      v4 = (float *)(a1 + 36);
      do
      {
        v5 = *v4++;
        v6 = v5;
        if (v5 < v2)
          v2 = v6;
        --v3;
      }
      while (v3);
    }
    v7 = LODWORD(v2);
  }
  else
  {
    v7 = 0;
  }
  return v7 | ((unint64_t)(v1 == 0) << 32);
}

uint64_t sub_1C017F6F4(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = a2(v6);
  v7 = *(_QWORD *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_1C017F76C(uint64_t a1, uint64_t a2, double a3, double a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  float v10;
  float v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v7 = v6;
  v8 = a2;
  v48 = *(_QWORD *)(a1 + 16);
  if (v48)
  {
    v9 = a1 + 32;
    v10 = a3;
    v11 = a4;
    swift_bridgeObjectRetain();
    v12 = 0;
    v13 = MEMORY[0x1E0DEE9D8];
    v47 = v9;
    while (1)
    {
      v50 = v12;
      v14 = (uint64_t *)(v9 + 16 * v12);
      v15 = *v14;
      v16 = v14[1];
      v51 = sub_1C0303F10();
      v52 = v17;
      v18 = a6[3];
      v19 = a6[4];
      __swift_project_boxed_opaque_existential_1(a6, v18);
      OUTLINED_FUNCTION_22();
      v20 = (_QWORD *)sub_1C00E59C4(v15, v16, v18, v19);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_74_1();
      sub_1C017F578(&v51);
      v21 = v7;
      v23 = v51;
      v22 = v52;
      LOBYTE(v19) = sub_1C01F1964(v51, v52, v20);
      OUTLINED_FUNCTION_55_0();
      if ((v19 & 1) != 0)
      {
        OUTLINED_FUNCTION_14();
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_35_23();
          v20 = v41;
        }
        v24 = v20[2];
        if (v24 >= v20[3] >> 1)
        {
          OUTLINED_FUNCTION_35_23();
          v20 = v42;
        }
        v20[2] = v24 + 1;
        v25 = &v20[2 * v24];
        v25[4] = v23;
        v25[5] = v22;
      }
      v26 = sub_1C01814C0();
      v7 = v21;
      if (v21)
      {
        v43 = a1;
        OUTLINED_FUNCTION_17_0();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_55_0();
        return v43;
      }
      v27 = (uint64_t)v26;
      OUTLINED_FUNCTION_55_0();
      v28 = sub_1C017FE20(v27);
      OUTLINED_FUNCTION_14();
      v53 = v28;
      v29 = *(_QWORD *)(v28 + 16);
      if (v29)
        break;
LABEL_29:
      v12 = v50 + 1;
      swift_bridgeObjectRelease();
      v9 = v47;
      if (v50 + 1 == v48)
      {
        swift_bridgeObjectRelease();
        v8 = a2;
        goto LABEL_32;
      }
    }
    v30 = 0;
    while (1)
    {
      OUTLINED_FUNCTION_74_1();
      v31 = sub_1C0180CC0(v10, v11);
      OUTLINED_FUNCTION_55_0();
      v32 = *(_QWORD *)(v31 + 16);
      v33 = *(_QWORD *)(v13 + 16);
      if (__OFADD__(v33, v32))
        break;
      if (!swift_isUniquelyReferenced_nonNull_native() || v33 + v32 > *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_1C00AC4E0();
        v13 = v34;
      }
      if (*(_QWORD *)(v31 + 16))
      {
        v35 = *(_QWORD *)(v13 + 16);
        if ((*(_QWORD *)(v13 + 24) >> 1) - v35 < v32)
          goto LABEL_39;
        v36 = v13 + 40 * v35 + 32;
        if (v31 + 32 < v36 + 40 * v32 && v36 < v31 + 32 + 40 * v32)
          goto LABEL_42;
        swift_arrayInitWithCopy();
        if (v32)
        {
          v38 = *(_QWORD *)(v13 + 16);
          v39 = __OFADD__(v38, v32);
          v40 = v38 + v32;
          if (v39)
            goto LABEL_40;
          *(_QWORD *)(v13 + 16) = v40;
        }
      }
      else if (v32)
      {
        goto LABEL_38;
      }
      ++v30;
      swift_bridgeObjectRelease();
      if (v29 == v30)
        goto LABEL_29;
    }
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
  }
  else
  {
    v13 = MEMORY[0x1E0DEE9D8];
LABEL_32:
    v43 = sub_1C017FB20(v13);
    OUTLINED_FUNCTION_17_0();
    if (*(_QWORD *)(v43 + 16) <= v8)
      return v43;
    if ((v8 & 0x8000000000000000) == 0)
      return sub_1C00FEAB8(v43, v43 + 32, 0, (2 * v8) | 1);
  }
  __break(1u);
LABEL_42:
  OUTLINED_FUNCTION_8_3();
  result = sub_1C0304828();
  __break(1u);
  return result;
}

uint64_t sub_1C017FB20(uint64_t a1)
{
  uint64_t v2;
  float *v3;
  uint64_t v4;
  uint64_t v5;
  float v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  float v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *);
  float v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void (*v33)(uint64_t *);
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  float v53;
  uint64_t v54;

  v43 = sub_1C0303DB4();
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
LABEL_22:
    swift_bridgeObjectRetain_n();
    sub_1C00B0FE4();
    v38 = v37;
    OUTLINED_FUNCTION_14();
    v41 = v38;
    sub_1C017F6F4(&v41, (uint64_t (*)(uint64_t))sub_1C020FB4C, (uint64_t (*)(_QWORD *))sub_1C01817D4);
    OUTLINED_FUNCTION_14();
    v39 = v41;
    OUTLINED_FUNCTION_14();
    return v39;
  }
  swift_bridgeObjectRetain();
  v3 = (float *)(a1 + 64);
  while (1)
  {
    v4 = *((_QWORD *)v3 - 3);
    v5 = *((_QWORD *)v3 - 2);
    v6 = *(v3 - 2);
    v7 = *(_QWORD *)v3;
    v50 = *((_QWORD *)v3 - 4);
    v51 = v4;
    v52 = v5;
    v53 = v6;
    v54 = v7;
    v8 = v43;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v9 = OUTLINED_FUNCTION_47();
    v10 = sub_1C017F350(v9, v4, v5);
    OUTLINED_FUNCTION_14();
    if ((v10 & 1) != 0)
      break;
    swift_isUniquelyReferenced_nonNull_native();
    v41 = v8;
    sub_1C00B5C88();
    v43 = v41;
    OUTLINED_FUNCTION_17_0();
LABEL_20:
    swift_bridgeObjectRelease();
    v3 += 10;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
  OUTLINED_FUNCTION_21();
  sub_1C00A9D84();
  OUTLINED_FUNCTION_17_0();
  sub_1C005578C((uint64_t)v44, (uint64_t)&v41, &qword_1EF5BE168);
  sub_1C005578C((uint64_t)v44, (uint64_t)&v45, &qword_1EF5BE168);
  if (v45)
  {
    v47 = v46;
    v48 = v45;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_47();
    sub_1C00CDCF0((uint64_t)&v48);
    v49 = v47;
    sub_1C0098780((uint64_t)&v49);
    v11 = *(float *)&v42;
    sub_1C0182CB4(v41);
  }
  else
  {
    v11 = 3.4028e38;
  }
  v12 = OUTLINED_FUNCTION_21();
  v16 = OUTLINED_FUNCTION_5_40(v12, v13, v14);
  if (*(_QWORD *)v15)
  {
    if (v6 >= v11)
      v17 = v11;
    else
      v17 = v6;
    *(float *)(v15 + 24) = v17;
  }
  OUTLINED_FUNCTION_24_18((uint64_t)&v41, (uint64_t (*)(uint64_t, _QWORD))v16);
  OUTLINED_FUNCTION_17_0();
  v18 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_5_40(v18, v19, v20);
  if (*v21)
  {
    v22 = swift_bridgeObjectRetain();
    sub_1C0289A88(v22);
    OUTLINED_FUNCTION_45_11(v23, v24, v25);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    OUTLINED_FUNCTION_17_0();
    v26 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_45_11(v26, v27, v28);
  }
  v29 = swift_bridgeObjectRelease();
  v33 = OUTLINED_FUNCTION_5_40(v29, v30, v31);
  if (!*v32)
  {
LABEL_19:
    OUTLINED_FUNCTION_24_18((uint64_t)&v41, (uint64_t (*)(uint64_t, _QWORD))v33);
    goto LABEL_20;
  }
  v34 = v32[4];
  v35 = __OFADD__(v34, 1);
  v36 = v34 + 1;
  if (!v35)
  {
    v32[4] = v36;
    goto LABEL_19;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C017FE20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  double v12;
  float v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v18 = MEMORY[0x1E0DEE9D8];
  sub_1C00B1DD0();
  v4 = 0;
  v5 = v18;
  v16 = v1;
  v17 = a1 + 32;
  do
  {
    v6 = *(_QWORD *)(v17 + 8 * v4);
    v7 = *(_QWORD *)(v6 + 16);
    if (v7)
    {
      v8 = v2;
      OUTLINED_FUNCTION_22();
      sub_1C00B1DFC();
      v9 = 0;
      v10 = v2;
      v11 = *(_QWORD *)(v2 + 16);
      do
      {
        v12 = *(double *)(v6 + 8 * v9 + 32);
        if (v11 >= *(_QWORD *)(v10 + 24) >> 1)
          OUTLINED_FUNCTION_37_17();
        ++v9;
        v13 = v12;
        *(_QWORD *)(v10 + 16) = v11 + 1;
        *(float *)(v10 + 4 * v11++ + 32) = v13;
      }
      while (v7 != v9);
      swift_bridgeObjectRelease();
      v2 = v8;
      v1 = v16;
    }
    else
    {
      v10 = v2;
    }
    v14 = *(_QWORD *)(v18 + 16);
    if (v14 >= *(_QWORD *)(v18 + 24) >> 1)
      sub_1C00B1DD0();
    ++v4;
    *(_QWORD *)(v18 + 16) = v14 + 1;
    *(_QWORD *)(v18 + 8 * v14 + 32) = v10;
  }
  while (v4 != v1);
  return v5;
}

uint64_t sub_1C017FFA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int *v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unsigned int v24;
  unsigned int v25;
  float v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_6_0();
  v46 = v7 - v6;
  v8 = (int *)type metadata accessor for InferenceEuclidDebugMetrics(0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_7_10();
  v10 = *(_QWORD *)(a1 + 16);
  if (HIDWORD(v10))
  {
    OUTLINED_FUNCTION_8_3();
    result = OUTLINED_FUNCTION_19_1();
    __break(1u);
  }
  else
  {
    v11 = MEMORY[0x1E0DEE9D8];
    v47 = MEMORY[0x1E0DEE9D8];
    v44 = *(_QWORD *)(a1 + 16);
    v45 = a2;
    if (v10)
    {
      OUTLINED_FUNCTION_74_1();
      v12 = 32;
      v13 = v10;
      do
      {
        v14 = swift_bridgeObjectRetain();
        sub_1C0289054(v14);
        v12 += 40;
        --v13;
      }
      while (v13);
      swift_bridgeObjectRelease();
      v15 = v47;
      v16 = v11;
      sub_1C00B1DFC();
      v17 = v11;
      v18 = *(_QWORD *)(v11 + 16);
      v19 = (int *)(a1 + 56);
      do
      {
        v20 = *v19;
        if (v18 >= *(_QWORD *)(v17 + 24) >> 1)
          OUTLINED_FUNCTION_37_17();
        *(_QWORD *)(v17 + 16) = v18 + 1;
        *(_DWORD *)(v17 + 4 * v18 + 32) = v20;
        v19 += 10;
        ++v18;
        --v10;
      }
      while (v10);
      v11 = v16;
    }
    else
    {
      v17 = MEMORY[0x1E0DEE9D8];
      v15 = MEMORY[0x1E0DEE9D8];
    }
    v21 = sub_1C0301D5C();
    __swift_storeEnumTagSinglePayload(v46, 1, 1, v21);
    v22 = sub_1C017F69C(v17);
    v23 = sub_1C020E740(v17);
    sub_1C0180344(v17);
    v25 = v24;
    v26 = sub_1C0180410(v17);
    OUTLINED_FUNCTION_14();
    v27 = sub_1C01816C0();
    v42 = v28;
    v43 = v27;
    v29 = *(_QWORD *)(v15 + 16);
    if (v29)
    {
      v41 = v22;
      sub_1C00B1E30(0, v29, 0);
      v30 = 0;
      v31 = v11;
      v32 = *(_QWORD *)(v11 + 16);
      do
      {
        v33 = *(_QWORD *)(v15 + 8 * v30 + 32);
        v34 = *(_QWORD *)(v31 + 24);
        if (v32 >= v34 >> 1)
          sub_1C00B1E30((char *)(v34 > 1), v32 + 1, 1);
        ++v30;
        *(_QWORD *)(v31 + 16) = v32 + 1;
        *(_QWORD *)(v31 + 8 * v32++ + 32) = v33;
      }
      while (v29 != v30);
      swift_bridgeObjectRelease();
      v11 = MEMORY[0x1E0DEE9D8];
      v22 = v41;
    }
    else
    {
      swift_bridgeObjectRelease();
      v31 = MEMORY[0x1E0DEE9D8];
    }
    v35 = sub_1C0181044();
    sub_1C005578C(v46, v2, &qword_1ED728070);
    *(_QWORD *)(v2 + v8[5]) = v11;
    v36 = v2 + v8[6];
    *(_QWORD *)v36 = v22 & 0x1FFFFFFFFLL;
    *(_QWORD *)(v36 + 8) = v23 & 0x1FFFFFFFFLL;
    *(_QWORD *)(v36 + 16) = v25;
    *(_WORD *)(v36 + 28) = 0;
    *(float *)(v36 + 24) = v26;
    v37 = v2 + v8[7];
    *(_QWORD *)v37 = v43;
    *(_QWORD *)(v37 + 8) = v42;
    *(_QWORD *)(v37 + 16) = 0x100000000;
    *(_BYTE *)(v37 + 28) = 1;
    *(_DWORD *)(v37 + 24) = 0;
    *(_QWORD *)(v2 + v8[8]) = v31;
    *(_BYTE *)(v2 + v8[9]) = 2;
    *(_QWORD *)(v2 + v8[10]) = v11;
    v38 = v2 + v8[11];
    *(_DWORD *)v38 = v35;
    *(_BYTE *)(v38 + 4) = BYTE4(v35) & 1;
    *(_BYTE *)v45 = 1;
    *(_DWORD *)(v45 + 4) = v44;
    *(_BYTE *)(v45 + 8) = 0;
    v39 = type metadata accessor for InferenceEuclidLog(0);
    return sub_1C01828DC(v2, v45 + *(int *)(v39 + 20));
  }
  return result;
}

uint64_t sub_1C0180344(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v3 = result;
    swift_bridgeObjectRetain();
    sub_1C017F6F4(&v3, (uint64_t (*)(uint64_t))sub_1C020FB5C, (uint64_t (*)(_QWORD *))sub_1C0181EC8);
    v2 = *(_QWORD *)(v3 + 16);
    if ((v1 & 1) != 0)
    {
      if (v1 >> 1 < v2)
        return swift_release();
    }
    else
    {
      if (v1 >> 1 < v2)
      {
        if (v1 >= 2)
          return swift_release();
        goto LABEL_11;
      }
      __break(1u);
    }
    __break(1u);
LABEL_11:
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  return result;
}

float sub_1C0180410(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  float v3;
  float v4;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0.0;
  v2 = 0;
  v3 = 0.0;
  do
  {
    v4 = *(float *)(a1 + 32 + 4 * v2++);
    v3 = v3 + v4;
  }
  while (v1 != v2);
  return v3 / (float)v1;
}

uint64_t sub_1C018044C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_27();
  OUTLINED_FUNCTION_19_0();
  return v0;
}

uint64_t sub_1C0180468()
{
  sub_1C018044C();
  OUTLINED_FUNCTION_2_2();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for E3Orchestrator()
{
  return objc_opt_self();
}

uint64_t sub_1C01804A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x7954797469746E65 && a2 == 0xEA00000000006570;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x79546C616E676973 && a2 == 0xEA00000000006570;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x80000001C0330040 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 1682531437 && a2 == 0xE400000000000000;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x7361696C61 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v9 = sub_1C0304A08();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_1C01806A8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C01806E0 + 4 * byte_1C0311600[a1]))(0x7954797469746E65, 0xEA00000000006570);
}

uint64_t sub_1C01806E0()
{
  return 0x79546C616E676973;
}

unint64_t sub_1C01806F4()
{
  return 0xD000000000000011;
}

uint64_t sub_1C0180710()
{
  return 1682531437;
}

uint64_t sub_1C0180720()
{
  return 0x7361696C61;
}

uint64_t sub_1C0180734@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE170);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_6_0();
  v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01830C4();
  sub_1C0304B88();
  if (v2)
    return OUTLINED_FUNCTION_10_0();
  v10 = OUTLINED_FUNCTION_8_33();
  v12 = v11;
  v24 = v10;
  swift_bridgeObjectRetain();
  v13 = OUTLINED_FUNCTION_8_33();
  v25 = v14;
  v23 = v13;
  OUTLINED_FUNCTION_32_19();
  v22 = sub_1C03048AC();
  OUTLINED_FUNCTION_32_19();
  v21 = sub_1C03048F4();
  v15 = OUTLINED_FUNCTION_8_33();
  v17 = v16;
  v18 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v19 = v15;
  v18(v9, v5);
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_74_1();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_14();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_55_0();
  result = OUTLINED_FUNCTION_17_0();
  *a2 = v24;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v25;
  a2[4] = v22;
  a2[5] = 0;
  a2[6] = v21;
  a2[7] = v19;
  a2[8] = v17;
  return result;
}

uint64_t sub_1C01809AC()
{
  unsigned __int8 *v0;

  return sub_1C01806A8(*v0);
}

uint64_t sub_1C01809B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C01804A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C01809D8()
{
  sub_1C01830C4();
  return sub_1C0304BAC();
}

uint64_t sub_1C0180A00()
{
  sub_1C01830C4();
  return sub_1C0304BB8();
}

void *sub_1C0180A28@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  void *result;
  uint64_t __src[9];

  result = (void *)sub_1C0180734(a1, __src);
  if (!v2)
    return memcpy(a2, __src, 0x48uLL);
  return result;
}

uint64_t sub_1C0180A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = v0;
  v2 = sub_1C030160C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_6_0();
  v6 = v5 - v4;
  *(_QWORD *)(v0 + 16) = 0;
  sub_1C030163C();
  OUTLINED_FUNCTION_38_6();
  v7 = sub_1C0301630();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = v7;
  swift_release();
  sub_1C03039D0();
  v8 = (void *)sub_1C03039C4();
  v9 = sub_1C03039B8();

  *(_QWORD *)(v1 + 16) = v9;
  swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E0CADFF8], v2);
  sub_1C0301618();
  return v1;
}

uint64_t sub_1C0180CC0(float a1, float a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  float v15;
  float v16;
  unint64_t v17;
  uint64_t inited;
  uint64_t v19;
  int v20;
  int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v7 = sub_1C03033D0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_39_2();
  v9 = *(_QWORD *)(v2 + 16);
  if (!v9)
    return MEMORY[0x1E0DEE9D8];
  swift_retain();
  v10 = sub_1C03033AC();
  swift_release();
  if (v3)
    return v9;
  v11 = v10;
  v12 = *(_QWORD *)(v10 + 16);
  if (!v12)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v13 = v11 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v14 = *(_QWORD *)(v8 + 72);
  v30 = *(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  v27 = v14;
  v28 = v7;
  while (1)
  {
    v30(v4, v13, v7);
    OUTLINED_FUNCTION_41_14();
    if (v15 > a1)
      break;
    OUTLINED_FUNCTION_41_14();
    if (v16 >= a2)
    {
      sub_1C03033C4();
      if (v17 >> 60 != 15)
      {
        sub_1C0181798();
        sub_1C0301624();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8E38);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
        *(_QWORD *)(inited + 32) = sub_1C01811C0(v31);
        sub_1C0120004();
        v29 = v19;
        OUTLINED_FUNCTION_22();
        OUTLINED_FUNCTION_41_14();
        v21 = v20;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_26();
        v7 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_34_22();
          v9 = v24;
        }
        v22 = *(_QWORD *)(v9 + 16);
        if (v22 >= *(_QWORD *)(v9 + 24) >> 1)
        {
          OUTLINED_FUNCTION_34_22();
          v9 = v25;
        }
        *(_QWORD *)(v9 + 16) = v22 + 1;
        v23 = v9 + 40 * v22;
        *(_QWORD *)(v23 + 32) = v29;
        *(_QWORD *)(v23 + 40) = v32;
        *(_QWORD *)(v23 + 48) = v33;
        *(_DWORD *)(v23 + 56) = v21;
        *(_QWORD *)(v23 + 64) = 1;
        OUTLINED_FUNCTION_44_16();
        v14 = v27;
      }
    }
    OUTLINED_FUNCTION_21_22();
    v13 += v14;
    if (!--v12)
      goto LABEL_18;
  }
  OUTLINED_FUNCTION_21_22();
LABEL_18:
  OUTLINED_FUNCTION_26();
  return v9;
}

uint64_t sub_1C0181044()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t result;

  if (!*(_QWORD *)(v0 + 16))
  {
    v1 = 0;
    LOBYTE(v2) = 1;
    return v1 | ((unint64_t)v2 << 32);
  }
  swift_retain();
  v1 = sub_1C03033A0();
  swift_release();
  if ((v1 & 0x8000000000000000) == 0)
  {
    v2 = HIDWORD(v1);
    if (!HIDWORD(v1))
      return v1 | ((unint64_t)v2 << 32);
  }
  OUTLINED_FUNCTION_8_3();
  result = OUTLINED_FUNCTION_19_1();
  __break(1u);
  return result;
}

uint64_t sub_1C01811C0(uint64_t a1)
{
  char v2;

  if (a1 == 0xD000000000000014)
  {
    OUTLINED_FUNCTION_2_56();
    if (v2)
      return 1;
  }
  if ((OUTLINED_FUNCTION_7_4() & 1) != 0)
    return 1;
  if (a1 == 0xD000000000000013)
  {
    OUTLINED_FUNCTION_2_56();
    if (v2)
      return 2;
  }
  if ((OUTLINED_FUNCTION_7_4() & 1) != 0)
    return 2;
  if (a1 == 0xD000000000000013)
  {
    OUTLINED_FUNCTION_2_56();
    if (v2)
      return 128;
  }
  if ((OUTLINED_FUNCTION_7_4() & 1) != 0)
    return 128;
  if (a1 == 0xD000000000000013)
  {
    OUTLINED_FUNCTION_2_56();
    if (v2)
      return 64;
  }
  if ((OUTLINED_FUNCTION_7_4() & 1) != 0)
    return 64;
  if (a1 == 0xD00000000000001ELL)
  {
    OUTLINED_FUNCTION_2_56();
    if (v2)
      return 128;
  }
  if ((OUTLINED_FUNCTION_7_4() & 1) != 0)
    return 128;
  if (a1 == 0xD000000000000012)
  {
    OUTLINED_FUNCTION_2_56();
    if (v2)
      return 64;
  }
  if ((OUTLINED_FUNCTION_7_4() & 1) != 0)
    return 64;
  if (a1 == 0xD000000000000017)
  {
    OUTLINED_FUNCTION_2_56();
    if (v2)
      return 16;
  }
  if ((OUTLINED_FUNCTION_7_4() & 1) != 0)
    return 16;
  return 0;
}

uint64_t type metadata accessor for EuclidVectorDb()
{
  return objc_opt_self();
}

uint64_t sub_1C0181380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v0;
  v3 = sub_1C0303C4C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_6_0();
  v7 = v6 - v5;
  v8 = sub_1C0303C34();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_7_10();
  sub_1C0301DB0();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_39_2();
  sub_1C0301D68();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v1, *MEMORY[0x1E0CD7B58], v8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E0CD7B80], v3);
  sub_1C0303C64();
  OUTLINED_FUNCTION_38_6();
  *(_QWORD *)(v2 + 16) = sub_1C0303C58();
  return v2;
}

void *sub_1C01814C0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  id v7;

  v1 = v0;
  v2 = OUTLINED_FUNCTION_16_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE158);
  v3 = OUTLINED_FUNCTION_16_0();
  *(_QWORD *)(v2 + 16) = v3;
  *(_OWORD *)(v3 + 16) = xmmword_1C0305B60;
  *(_QWORD *)(v3 + 32) = MEMORY[0x1E0DEE9D8];
  v4 = OUTLINED_FUNCTION_16_0();
  *(_QWORD *)(v4 + 16) = 0;
  v5 = (void **)(v4 + 16);
  v6 = OUTLINED_FUNCTION_16_0();
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v2;
  swift_retain();
  swift_retain();
  sub_1C0303C28();
  if (v0)
  {
    OUTLINED_FUNCTION_39_3();
    OUTLINED_FUNCTION_1_0();
    swift_release();
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_28_2();
    v1 = *v5;
    if (*v5)
    {
      v7 = v1;
      swift_willThrow();
    }
    else
    {
      OUTLINED_FUNCTION_28_2();
      v1 = *(void **)(v2 + 16);
      OUTLINED_FUNCTION_21();
    }
    OUTLINED_FUNCTION_39_3();
    OUTLINED_FUNCTION_1_0();
  }
  return v1;
}

void sub_1C0181624(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  id v9;

  swift_beginAccess();
  v8 = *(void **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = a2;
  v9 = a2;

  if (a1)
  {
    swift_beginAccess();
    *(_QWORD *)(a4 + 16) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C01816C0()
{
  sub_1C0303C40();
  return sub_1C03049E4();
}

uint64_t sub_1C0181704()
{
  OUTLINED_FUNCTION_19_27();
  OUTLINED_FUNCTION_22_25();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EuclidEmbeddingApi()
{
  return objc_opt_self();
}

uint64_t sub_1C018173C()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_22_25();
  return swift_deallocObject();
}

uint64_t sub_1C0181758()
{
  uint64_t v0;

  OUTLINED_FUNCTION_22_25();
  return swift_deallocObject();
}

uint64_t sub_1C0181774()
{
  OUTLINED_FUNCTION_19_27();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_2_2();
  return swift_deallocObject();
}

void sub_1C0181790(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1C0181624(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

unint64_t sub_1C0181798()
{
  unint64_t result;

  result = qword_1EF5BE160;
  if (!qword_1EF5BE160)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03116A4, &type metadata for VectorDbPayload);
    atomic_store(result, (unint64_t *)&qword_1EF5BE160);
  }
  return result;
}

void sub_1C01817D4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  float v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  __int128 v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  unint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;

  v3 = a1[1];
  v4 = sub_1C03049CC();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1C01824A8(0, v3, 1, a1);
      return;
    }
    goto LABEL_148;
  }
  v5 = v4;
  v110 = v1;
  sub_1C027E080(v3 / 2);
  v106 = v6;
  v107 = v3;
  v109 = v7;
  v104 = a1;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v47 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_114:
    v96 = v10;
    if (v47 < 2)
    {
LABEL_125:
      swift_bridgeObjectRelease();
      if (v107 >= -1)
      {
        *(_QWORD *)(v106 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_154;
    }
    v97 = *v104;
    while (1)
    {
      v98 = v47 - 2;
      if (v47 < 2)
        break;
      if (!v97)
        goto LABEL_157;
      v99 = v96;
      v100 = *(_QWORD *)&v96[16 * v98 + 32];
      v101 = *(_QWORD *)&v96[16 * v47 + 24];
      sub_1C018259C((char *)(v97 + 40 * v100), (char *)(v97 + 40 * *(_QWORD *)&v96[16 * v47 + 16]), v97 + 40 * v101, v109);
      if (v110)
        goto LABEL_110;
      if (v101 < v100)
        goto LABEL_143;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v99 = sub_1C020FAB8();
      if (v98 >= *((_QWORD *)v99 + 2))
        goto LABEL_144;
      v102 = &v99[16 * v98 + 32];
      *(_QWORD *)v102 = v100;
      *((_QWORD *)v102 + 1) = v101;
      v103 = *((_QWORD *)v99 + 2);
      if (v47 > v103)
        goto LABEL_145;
      memmove(&v99[16 * v47 + 16], &v99[16 * v47 + 32], 16 * (v103 - v47));
      v96 = v99;
      *((_QWORD *)v99 + 2) = v103 - 1;
      v47 = v103 - 1;
      if (v103 <= 2)
        goto LABEL_125;
    }
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
    return;
  }
  v105 = v5;
  v8 = 0;
  v9 = *a1;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v108 = *a1;
  while (1)
  {
    v11 = v8;
    v12 = v8 + 1;
    if (v8 + 1 >= v3)
    {
      ++v8;
      goto LABEL_37;
    }
    v13 = *(_QWORD *)(v9 + 40 * v12 + 32);
    v14 = *(_QWORD *)(v9 + 40 * v8 + 32);
    if (v14 >= v13)
    {
      v15 = *(float *)(v9 + 40 * v8 + 24);
      v8 += 2;
      if (v13 != v14 || *(float *)(v9 + 40 * v12 + 24) >= v15)
      {
        if (v8 >= v3)
          goto LABEL_37;
        v17 = 0;
        goto LABEL_16;
      }
    }
    else
    {
      v8 += 2;
    }
    if (v8 >= v3)
      goto LABEL_31;
    v17 = 1;
LABEL_16:
    v18 = v8;
    while (1)
    {
      while (1)
      {
        v19 = *(_QWORD *)(v9 + 40 * v18 + 32);
        if (v13 >= v19 && (v19 != v13 || *(float *)(v9 + 40 * v18 + 24) >= *(float *)(v9 + 40 * v12 + 24)))
          break;
        if ((v17 & 1) == 0)
        {
          v8 = v18;
          goto LABEL_37;
        }
        v8 = v18 + 1;
        v13 = *(_QWORD *)(v9 + 40 * v18 + 32);
        v12 = v18;
        v18 = v8;
        if (v8 >= v3)
          goto LABEL_30;
      }
      if ((v17 & 1) != 0)
        break;
      v8 = v18 + 1;
      v13 = *(_QWORD *)(v9 + 40 * v18 + 32);
      v12 = v18;
      v18 = v8;
      if (v8 >= v3)
        goto LABEL_37;
    }
    v8 = v18;
LABEL_30:
    if (v8 < v11)
      goto LABEL_149;
LABEL_31:
    if (v11 < v8)
    {
      v21 = 40 * v8;
      v22 = 40 * v11;
      v23 = v8;
      v24 = v11;
      do
      {
        if (v24 != --v23)
        {
          if (!v9)
            goto LABEL_156;
          v25 = v9 + v22;
          v26 = *(_OWORD *)(v9 + v22);
          v27 = v9 + v21;
          v28 = *(_QWORD *)(v9 + v22 + 16);
          v29 = *(_DWORD *)(v9 + v22 + 24);
          v30 = *(_QWORD *)(v9 + v22 + 32);
          v31 = *(_QWORD *)(v9 + v21 - 8);
          v32 = *(_OWORD *)(v9 + v21 - 24);
          *(_OWORD *)v25 = *(_OWORD *)(v9 + v21 - 40);
          *(_OWORD *)(v25 + 16) = v32;
          *(_QWORD *)(v25 + 32) = v31;
          *(_OWORD *)(v27 - 40) = v26;
          *(_QWORD *)(v27 - 24) = v28;
          *(_DWORD *)(v27 - 16) = v29;
          *(_QWORD *)(v27 - 8) = v30;
        }
        ++v24;
        v21 -= 40;
        v22 += 40;
      }
      while (v24 < v23);
    }
LABEL_37:
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_147;
      if (v8 - v11 < v105)
      {
        v33 = v11 + v105;
        if (__OFADD__(v11, v105))
          goto LABEL_151;
        if (v33 >= v3)
          v33 = v3;
        if (v33 < v11)
          goto LABEL_152;
        if (v8 != v33)
        {
          v34 = v9 + 40 * v8;
          do
          {
            v35 = *(_QWORD *)(v9 + 40 * v8 + 32);
            v36 = v34;
            v37 = v11;
            do
            {
              v38 = *(_QWORD *)(v36 - 8);
              if (v38 >= v35 && (v35 != v38 || *(float *)(v36 + 24) >= *(float *)(v36 - 16)))
                break;
              if (!v9)
                goto LABEL_153;
              v40 = *(_QWORD *)v36;
              v41 = *(_QWORD *)(v36 + 8);
              v42 = *(_QWORD *)(v36 + 16);
              v43 = *(_DWORD *)(v36 + 24);
              v44 = *(_OWORD *)(v36 - 24);
              *(_OWORD *)v36 = *(_OWORD *)(v36 - 40);
              *(_OWORD *)(v36 + 16) = v44;
              *(_QWORD *)(v36 + 32) = *(_QWORD *)(v36 - 8);
              *(_QWORD *)(v36 - 32) = v41;
              *(_QWORD *)(v36 - 24) = v42;
              *(_DWORD *)(v36 - 16) = v43;
              *(_QWORD *)(v36 - 8) = v35;
              *(_QWORD *)(v36 - 40) = v40;
              v36 -= 40;
              ++v37;
            }
            while (v8 != v37);
            ++v8;
            v34 += 40;
          }
          while (v8 != v33);
          v8 = v33;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1C00500C8(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v46 = *((_QWORD *)v10 + 2);
    v45 = *((_QWORD *)v10 + 3);
    v47 = v46 + 1;
    v9 = v108;
    if (v46 >= v45 >> 1)
    {
      v9 = v108;
      v10 = sub_1C00500C8((char *)(v45 > 1), v46 + 1, 1, v10);
    }
    *((_QWORD *)v10 + 2) = v47;
    v48 = v10 + 32;
    v49 = &v10[16 * v46 + 32];
    *(_QWORD *)v49 = v11;
    *((_QWORD *)v49 + 1) = v8;
    if (v46)
      break;
    v47 = 1;
LABEL_105:
    v3 = v107;
    if (v8 >= v107)
      goto LABEL_114;
  }
  while (1)
  {
    v50 = v47 - 1;
    if (v47 >= 4)
    {
      v55 = &v48[16 * v47];
      v56 = *((_QWORD *)v55 - 8);
      v57 = *((_QWORD *)v55 - 7);
      v61 = __OFSUB__(v57, v56);
      v58 = v57 - v56;
      if (v61)
        goto LABEL_131;
      v60 = *((_QWORD *)v55 - 6);
      v59 = *((_QWORD *)v55 - 5);
      v61 = __OFSUB__(v59, v60);
      v53 = v59 - v60;
      v54 = v61;
      if (v61)
        goto LABEL_132;
      v62 = v47 - 2;
      v63 = &v48[16 * v47 - 32];
      v65 = *(_QWORD *)v63;
      v64 = *((_QWORD *)v63 + 1);
      v61 = __OFSUB__(v64, v65);
      v66 = v64 - v65;
      if (v61)
        goto LABEL_133;
      v61 = __OFADD__(v53, v66);
      v67 = v53 + v66;
      if (v61)
        goto LABEL_135;
      if (v67 >= v58)
      {
        v85 = &v48[16 * v50];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        v61 = __OFSUB__(v86, v87);
        v88 = v86 - v87;
        if (v61)
          goto LABEL_141;
        v78 = v53 < v88;
        goto LABEL_94;
      }
    }
    else
    {
      if (v47 != 3)
      {
        v79 = *((_QWORD *)v10 + 4);
        v80 = *((_QWORD *)v10 + 5);
        v61 = __OFSUB__(v80, v79);
        v72 = v80 - v79;
        v73 = v61;
        goto LABEL_88;
      }
      v52 = *((_QWORD *)v10 + 4);
      v51 = *((_QWORD *)v10 + 5);
      v61 = __OFSUB__(v51, v52);
      v53 = v51 - v52;
      v54 = v61;
    }
    if ((v54 & 1) != 0)
      goto LABEL_134;
    v62 = v47 - 2;
    v68 = &v48[16 * v47 - 32];
    v70 = *(_QWORD *)v68;
    v69 = *((_QWORD *)v68 + 1);
    v71 = __OFSUB__(v69, v70);
    v72 = v69 - v70;
    v73 = v71;
    if (v71)
      goto LABEL_136;
    v74 = &v48[16 * v50];
    v76 = *(_QWORD *)v74;
    v75 = *((_QWORD *)v74 + 1);
    v61 = __OFSUB__(v75, v76);
    v77 = v75 - v76;
    if (v61)
      goto LABEL_138;
    if (__OFADD__(v72, v77))
      goto LABEL_140;
    if (v72 + v77 >= v53)
    {
      v78 = v53 < v77;
LABEL_94:
      if (v78)
        v50 = v62;
      goto LABEL_96;
    }
LABEL_88:
    if ((v73 & 1) != 0)
      goto LABEL_137;
    v81 = &v48[16 * v50];
    v83 = *(_QWORD *)v81;
    v82 = *((_QWORD *)v81 + 1);
    v61 = __OFSUB__(v82, v83);
    v84 = v82 - v83;
    if (v61)
      goto LABEL_139;
    if (v84 < v72)
      goto LABEL_105;
LABEL_96:
    v89 = v50 - 1;
    if (v50 - 1 >= v47)
    {
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
      goto LABEL_142;
    }
    if (!v9)
      goto LABEL_155;
    v90 = &v48[16 * v89];
    v91 = *(_QWORD *)v90;
    v92 = v48;
    v93 = &v48[16 * v50];
    v94 = *((_QWORD *)v93 + 1);
    sub_1C018259C((char *)(v9 + 40 * *(_QWORD *)v90), (char *)(v9 + 40 * *(_QWORD *)v93), v9 + 40 * v94, v109);
    if (v110)
      break;
    if (v94 < v91)
      goto LABEL_128;
    if (v50 > *((_QWORD *)v10 + 2))
      goto LABEL_129;
    *(_QWORD *)v90 = v91;
    *(_QWORD *)&v92[16 * v89 + 8] = v94;
    v95 = *((_QWORD *)v10 + 2);
    if (v50 >= v95)
      goto LABEL_130;
    v47 = v95 - 1;
    memmove(v93, v93 + 16, 16 * (v95 - 1 - v50));
    v48 = v92;
    *((_QWORD *)v10 + 2) = v95 - 1;
    v9 = v108;
    if (v95 <= 2)
      goto LABEL_105;
  }
LABEL_110:
  swift_bridgeObjectRelease();
  if (v107 < -1)
    goto LABEL_150;
  *(_QWORD *)(v106 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_1C0181EC8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  float v12;
  float v13;
  float v14;
  float v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  int v20;
  uint64_t v21;
  float *v22;
  float v23;
  uint64_t v24;
  float *v25;
  float v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;

  v3 = a1[1];
  v4 = sub_1C03049CC();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1C0182544(0, v3, 1, a1);
      return;
    }
    goto LABEL_124;
  }
  v5 = v4;
  sub_1C027E074(v3 / 2);
  v87 = a1;
  v88 = v6;
  v92 = v7;
  v90 = v3;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v29 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_90:
    if (v29 < 2)
    {
LABEL_101:
      swift_bridgeObjectRelease();
      if (v90 >= -1)
      {
        *(_QWORD *)(v88 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_129;
    }
    v80 = *v87;
    while (1)
    {
      v81 = v29 - 2;
      if (v29 < 2)
        break;
      if (!v80)
        goto LABEL_133;
      v82 = *(_QWORD *)&v10[16 * v81 + 32];
      v83 = *(_QWORD *)&v10[16 * v29 + 24];
      sub_1C0182764((char *)(v80 + 4 * v82), (char *)(v80 + 4 * *(_QWORD *)&v10[16 * v29 + 16]), v80 + 4 * v83, v92);
      if (v1)
        goto LABEL_86;
      if (v83 < v82)
        goto LABEL_119;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_1C020FAB8();
      if (v81 >= *((_QWORD *)v10 + 2))
        goto LABEL_120;
      v84 = &v10[16 * v81 + 32];
      *(_QWORD *)v84 = v82;
      *((_QWORD *)v84 + 1) = v83;
      v85 = *((_QWORD *)v10 + 2);
      if (v29 > v85)
        goto LABEL_121;
      memmove(&v10[16 * v29 + 16], &v10[16 * v29 + 32], 16 * (v85 - v29));
      *((_QWORD *)v10 + 2) = v85 - 1;
      v29 = v85 - 1;
      if (v85 <= 2)
        goto LABEL_101;
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v86 = *a1 - 4;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v89 = v5;
  v91 = *a1;
  while (1)
  {
    v11 = v8++;
    if (v8 < v3)
    {
      v12 = *(float *)(v9 + 4 * v8);
      v13 = *(float *)(v9 + 4 * v11);
      v8 = v11 + 2;
      if (v11 + 2 < v3)
      {
        v14 = v12;
        while (1)
        {
          v15 = v14;
          v14 = *(float *)(v9 + 4 * v8);
          if (v12 < v13 == v14 >= v15)
            break;
          if (++v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v12 < v13)
      {
        if (v8 < v11)
          goto LABEL_126;
        if (v11 < v8)
        {
          v16 = (int *)(v86 + 4 * v8);
          v17 = v8;
          v18 = v11;
          v19 = (int *)(v9 + 4 * v11);
          do
          {
            if (v18 != --v17)
            {
              if (!v9)
                goto LABEL_132;
              v20 = *v19;
              *v19 = *v16;
              *v16 = v20;
            }
            ++v18;
            --v16;
            ++v19;
          }
          while (v18 < v17);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_123;
      if (v8 - v11 < v5)
      {
        v21 = v11 + v5;
        if (__OFADD__(v11, v5))
          goto LABEL_127;
        if (v21 >= v3)
          v21 = v3;
        if (v21 < v11)
          goto LABEL_128;
        if (v8 != v21)
        {
          v22 = (float *)(v86 + 4 * v8);
          do
          {
            v23 = *(float *)(v9 + 4 * v8);
            v24 = v11;
            v25 = v22;
            do
            {
              v26 = *v25;
              if (v23 >= *v25)
                break;
              if (!v9)
                goto LABEL_130;
              *v25 = v23;
              v25[1] = v26;
              --v25;
              ++v24;
            }
            while (v8 != v24);
            ++v8;
            ++v22;
          }
          while (v8 != v21);
          v8 = v21;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_122;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1C00500C8(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v28 = *((_QWORD *)v10 + 2);
    v27 = *((_QWORD *)v10 + 3);
    v29 = v28 + 1;
    v9 = v91;
    if (v28 >= v27 >> 1)
    {
      v79 = sub_1C00500C8((char *)(v27 > 1), v28 + 1, 1, v10);
      v9 = v91;
      v10 = v79;
    }
    *((_QWORD *)v10 + 2) = v29;
    v30 = v10 + 32;
    v31 = &v10[16 * v28 + 32];
    *(_QWORD *)v31 = v11;
    *((_QWORD *)v31 + 1) = v8;
    if (v28)
      break;
    v29 = 1;
LABEL_81:
    v5 = v89;
    v3 = v90;
    if (v8 >= v90)
      goto LABEL_90;
  }
  while (1)
  {
    v32 = v29 - 1;
    if (v29 >= 4)
    {
      v37 = &v30[16 * v29];
      v38 = *((_QWORD *)v37 - 8);
      v39 = *((_QWORD *)v37 - 7);
      v43 = __OFSUB__(v39, v38);
      v40 = v39 - v38;
      if (v43)
        goto LABEL_107;
      v42 = *((_QWORD *)v37 - 6);
      v41 = *((_QWORD *)v37 - 5);
      v43 = __OFSUB__(v41, v42);
      v35 = v41 - v42;
      v36 = v43;
      if (v43)
        goto LABEL_108;
      v44 = v29 - 2;
      v45 = &v30[16 * v29 - 32];
      v47 = *(_QWORD *)v45;
      v46 = *((_QWORD *)v45 + 1);
      v43 = __OFSUB__(v46, v47);
      v48 = v46 - v47;
      if (v43)
        goto LABEL_109;
      v43 = __OFADD__(v35, v48);
      v49 = v35 + v48;
      if (v43)
        goto LABEL_111;
      if (v49 >= v40)
      {
        v67 = &v30[16 * v32];
        v69 = *(_QWORD *)v67;
        v68 = *((_QWORD *)v67 + 1);
        v43 = __OFSUB__(v68, v69);
        v70 = v68 - v69;
        if (v43)
          goto LABEL_117;
        v60 = v35 < v70;
        goto LABEL_70;
      }
    }
    else
    {
      if (v29 != 3)
      {
        v61 = *((_QWORD *)v10 + 4);
        v62 = *((_QWORD *)v10 + 5);
        v43 = __OFSUB__(v62, v61);
        v54 = v62 - v61;
        v55 = v43;
        goto LABEL_64;
      }
      v34 = *((_QWORD *)v10 + 4);
      v33 = *((_QWORD *)v10 + 5);
      v43 = __OFSUB__(v33, v34);
      v35 = v33 - v34;
      v36 = v43;
    }
    if ((v36 & 1) != 0)
      goto LABEL_110;
    v44 = v29 - 2;
    v50 = &v30[16 * v29 - 32];
    v52 = *(_QWORD *)v50;
    v51 = *((_QWORD *)v50 + 1);
    v53 = __OFSUB__(v51, v52);
    v54 = v51 - v52;
    v55 = v53;
    if (v53)
      goto LABEL_112;
    v56 = &v30[16 * v32];
    v58 = *(_QWORD *)v56;
    v57 = *((_QWORD *)v56 + 1);
    v43 = __OFSUB__(v57, v58);
    v59 = v57 - v58;
    if (v43)
      goto LABEL_114;
    if (__OFADD__(v54, v59))
      goto LABEL_116;
    if (v54 + v59 >= v35)
    {
      v60 = v35 < v59;
LABEL_70:
      if (v60)
        v32 = v44;
      goto LABEL_72;
    }
LABEL_64:
    if ((v55 & 1) != 0)
      goto LABEL_113;
    v63 = &v30[16 * v32];
    v65 = *(_QWORD *)v63;
    v64 = *((_QWORD *)v63 + 1);
    v43 = __OFSUB__(v64, v65);
    v66 = v64 - v65;
    if (v43)
      goto LABEL_115;
    if (v66 < v54)
      goto LABEL_81;
LABEL_72:
    v71 = v10;
    v72 = v32 - 1;
    if (v32 - 1 >= v29)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v9)
      goto LABEL_131;
    v73 = &v30[16 * v72];
    v74 = *(_QWORD *)v73;
    v75 = v30;
    v76 = &v30[16 * v32];
    v77 = *((_QWORD *)v76 + 1);
    sub_1C0182764((char *)(v9 + 4 * *(_QWORD *)v73), (char *)(v9 + 4 * *(_QWORD *)v76), v9 + 4 * v77, v92);
    if (v1)
      break;
    if (v77 < v74)
      goto LABEL_104;
    if (v32 > *((_QWORD *)v71 + 2))
      goto LABEL_105;
    *(_QWORD *)v73 = v74;
    *(_QWORD *)&v75[16 * v72 + 8] = v77;
    v78 = *((_QWORD *)v71 + 2);
    if (v32 >= v78)
      goto LABEL_106;
    v10 = v71;
    v29 = v78 - 1;
    memmove(v76, v76 + 16, 16 * (v78 - 1 - v32));
    v30 = v75;
    *((_QWORD *)v71 + 2) = v78 - 1;
    v9 = v91;
    if (v78 <= 2)
      goto LABEL_81;
  }
LABEL_86:
  swift_bridgeObjectRelease();
  if (v90 < -1)
    goto LABEL_125;
  *(_QWORD *)(v88 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_1C01824A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  __int128 v15;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 40 * a3;
    while (2)
    {
      v6 = *(_QWORD *)(v4 + 40 * a3 + 32);
      v7 = v5;
      v8 = result;
      do
      {
        v9 = *(_QWORD *)(v7 - 8);
        if (v9 >= v6 && (v6 != v9 || *(float *)(v7 + 24) >= *(float *)(v7 - 16)))
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        v11 = *(_QWORD *)v7;
        v12 = *(_QWORD *)(v7 + 8);
        v13 = *(_QWORD *)(v7 + 16);
        v14 = *(_DWORD *)(v7 + 24);
        v15 = *(_OWORD *)(v7 - 24);
        *(_OWORD *)v7 = *(_OWORD *)(v7 - 40);
        *(_OWORD *)(v7 + 16) = v15;
        *(_QWORD *)(v7 + 32) = *(_QWORD *)(v7 - 8);
        *(_QWORD *)(v7 - 32) = v12;
        *(_QWORD *)(v7 - 24) = v13;
        *(_DWORD *)(v7 - 16) = v14;
        *(_QWORD *)(v7 - 8) = v6;
        *(_QWORD *)(v7 - 40) = v11;
        v7 -= 40;
        ++v8;
      }
      while (a3 != v8);
      ++a3;
      v5 += 40;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1C0182544(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  float v6;
  uint64_t v7;
  float *v8;
  float v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 4 * a3 - 4;
    while (2)
    {
      v6 = *(float *)(v4 + 4 * a3);
      v7 = result;
      v8 = (float *)v5;
      do
      {
        v9 = *v8;
        if (v6 >= *v8)
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        *v8 = v6;
        v8[1] = v9;
        --v8;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 4;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1C018259C(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  char *v17;
  __int128 v20;
  __int128 v21;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  char *v28;
  BOOL v29;
  BOOL v30;
  __int128 v31;
  __int128 v32;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 40;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  if (v9 >= v11)
  {
    sub_1C00ADFD4(a2, (uint64_t)(a3 - (_QWORD)a2) / 40, a4);
    v12 = &v4[40 * v11];
    if (v7 >= v6 || v10 < 40)
      goto LABEL_49;
    v23 = a3 - 40;
    while (1)
    {
      v24 = (char *)(v23 + 40);
      v25 = *((_QWORD *)v12 - 1);
      v26 = *((_QWORD *)v6 - 1);
      if (v26 < v25 || (v25 == v26 ? (v27 = *((float *)v12 - 4) < *((float *)v6 - 4)) : (v27 = 0), v27))
      {
        v28 = v6 - 40;
        v30 = v24 != v6 || v23 >= (unint64_t)v6;
        v6 -= 40;
        if (!v30)
          goto LABEL_45;
      }
      else
      {
        v28 = v12 - 40;
        v29 = v24 != v12 || v23 >= (unint64_t)v12;
        v12 -= 40;
        if (!v29)
          goto LABEL_45;
      }
      v31 = *(_OWORD *)v28;
      v32 = *((_OWORD *)v28 + 1);
      *(_QWORD *)(v23 + 32) = *((_QWORD *)v28 + 4);
      *(_OWORD *)v23 = v31;
      *(_OWORD *)(v23 + 16) = v32;
LABEL_45:
      v23 -= 40;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_49;
    }
  }
  sub_1C00ADFD4(a1, (a2 - a1) / 40, a4);
  v12 = &v4[40 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 40)
  {
    do
    {
      v13 = *((_QWORD *)v6 + 4);
      v14 = *((_QWORD *)v4 + 4);
      if (v14 < v13 || (v13 == v14 ? (v15 = *((float *)v6 + 6) < *((float *)v4 + 6)) : (v15 = 0), v15))
      {
        v16 = v7 == v6;
        v17 = v6;
        v6 += 40;
        if (v16 && v7 < v6)
          goto LABEL_20;
      }
      else
      {
        v16 = v7 == v4;
        v17 = v4;
        v4 += 40;
        if (v16 && v7 < v4)
          goto LABEL_20;
      }
      v20 = *(_OWORD *)v17;
      v21 = *((_OWORD *)v17 + 1);
      *((_QWORD *)v7 + 4) = *((_QWORD *)v17 + 4);
      *(_OWORD *)v7 = v20;
      *((_OWORD *)v7 + 1) = v21;
LABEL_20:
      v7 += 40;
    }
    while (v4 < v12 && (unint64_t)v6 < a3);
  }
  v6 = v7;
LABEL_49:
  sub_1C00ADFD4(v4, (v12 - v4) / 40, v6);
  return 1;
}

uint64_t sub_1C0182764(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  float v14;
  BOOL v15;
  float *v18;
  char *v19;
  float v20;
  BOOL v21;
  BOOL v22;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 4;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 4;
  if (v9 >= v11)
  {
    sub_1C00ADD44(a2, (uint64_t)(a3 - (_QWORD)a2) / 4, a4);
    v12 = &v4[4 * v11];
    if (v7 >= v6 || v10 < 4)
      goto LABEL_39;
    v18 = (float *)(a3 - 4);
    while (1)
    {
      v19 = (char *)(v18 + 1);
      v20 = *((float *)v6 - 1);
      if (*((float *)v12 - 1) >= v20)
      {
        v22 = v19 != v12 || v18 >= (float *)v12;
        v20 = *((float *)v12 - 1);
        v12 -= 4;
        if (!v22)
          goto LABEL_35;
      }
      else
      {
        v21 = v19 != v6 || v18 >= (float *)v6;
        v6 -= 4;
        if (!v21)
          goto LABEL_35;
      }
      *v18 = v20;
LABEL_35:
      --v18;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_39;
    }
  }
  sub_1C00ADD44(a1, (a2 - a1) / 4, a4);
  v12 = &v4[4 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 4)
  {
    while (1)
    {
      v14 = *(float *)v6;
      if (*(float *)v6 < *(float *)v4)
        break;
      v14 = *(float *)v4;
      v15 = v7 == v4;
      v4 += 4;
      if (!v15)
        goto LABEL_11;
LABEL_12:
      v7 += 4;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_17;
    }
    v15 = v7 == v6;
    v6 += 4;
    if (v15)
      goto LABEL_12;
LABEL_11:
    *(float *)v7 = v14;
    goto LABEL_12;
  }
LABEL_17:
  v6 = v7;
LABEL_39:
  sub_1C00ADD44(v4, (v12 - v4) / 4, v6);
  return 1;
}

uint64_t sub_1C01828DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InferenceEuclidDebugMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void (*sub_1C0182920(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v6;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1C0182B7C(v6);
  v6[10] = sub_1C01829F8(v6 + 4, a2, a3);
  return sub_1C01829B0;
}

void sub_1C01829B0(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  OUTLINED_FUNCTION_24_18(*(_QWORD *)a1 + 32, *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80));
  OUTLINED_FUNCTION_14();
  v2(v1, 0);
  free(v1);
}

void (*sub_1C01829F8(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*result)(uint64_t **);

  v4 = v3;
  v8 = malloc(0x50uLL);
  *a1 = v8;
  v8[6] = a3;
  v8[7] = v4;
  v8[5] = a2;
  v9 = *v4;
  v10 = sub_1C00B3C3C(a2, a3);
  *((_BYTE *)v8 + 72) = v11 & 1;
  if (__OFADD__(*(_QWORD *)(v9 + 16), (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v12 = v10;
  v13 = v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5B8E50);
  if ((sub_1C03047BC() & 1) != 0)
  {
    v14 = sub_1C00B3C3C(a2, a3);
    if ((v13 & 1) == (v15 & 1))
    {
      v12 = v14;
      goto LABEL_5;
    }
LABEL_10:
    result = (void (*)(uint64_t **))sub_1C0304A68();
    __break(1u);
    return result;
  }
LABEL_5:
  v8[8] = v12;
  if ((v13 & 1) != 0)
  {
    v16 = *(_QWORD *)(*v4 + 56) + 40 * v12;
    v17 = *(_QWORD *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = *(_QWORD *)(v16 + 16);
    v20 = *(unsigned int *)(v16 + 24);
    v21 = *(_QWORD *)(v16 + 32);
  }
  else
  {
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0;
  }
  *v8 = v17;
  v8[1] = v18;
  v8[2] = v19;
  v8[3] = v20;
  v8[4] = v21;
  return sub_1C0182B3C;
}

void sub_1C0182B3C(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_1C0182BA8(*a1, *((_BYTE *)*a1 + 72), (_QWORD **)(*a1)[7], (*a1)[8], (*a1)[5], (*a1)[6]);
  sub_1C0182CB4(*v1);
  OUTLINED_FUNCTION_13_30(v1);
}

uint64_t (*sub_1C0182B7C(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1C0182B9C;
}

uint64_t sub_1C0182B9C(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_1C0182BA8(uint64_t *a1, char a2, _QWORD **a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v6 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v8 = a1[3];
  v10 = a1[4];
  if (*a1)
  {
    *(_QWORD *)&v14 = *a1;
    *((_QWORD *)&v14 + 1) = v7;
    *(_QWORD *)&v15 = v9;
    DWORD2(v15) = v8;
    v16 = v10;
    if ((a2 & 1) != 0)
    {
      v11 = (*a3)[7] + 40 * a4;
      v12 = v15;
      *(_OWORD *)v11 = v14;
      *(_OWORD *)(v11 + 16) = v12;
      *(_QWORD *)(v11 + 32) = v16;
    }
    else
    {
      sub_1C00B6DC8(a4, a5, a6, (uint64_t)&v14, *a3);
      swift_bridgeObjectRetain();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_1C03047D4();
  }
  return sub_1C0182CE0(v6);
}

uint64_t sub_1C0182CB4(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0182CE0(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for VectorDbPayload()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VectorDbPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for VectorDbPayload(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy72_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t assignWithTake for VectorDbPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VectorDbPayload(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VectorDbPayload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VectorDbPayload()
{
  return &type metadata for VectorDbPayload;
}

uint64_t destroy for RetrievalResult()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RetrievalResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RetrievalResult(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for RetrievalResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for RetrievalResult()
{
  return &type metadata for RetrievalResult;
}

unint64_t sub_1C01830C4()
{
  unint64_t result;

  result = qword_1EF5BE178;
  if (!qword_1EF5BE178)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0311790, &type metadata for VectorDbPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE178);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for VectorDbPayload.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C018314C + 4 * byte_1C031160A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C0183180 + 4 * byte_1C0311605[v4]))();
}

uint64_t sub_1C0183180(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0183188(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0183190);
  return result;
}

uint64_t sub_1C018319C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C01831A4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C01831A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C01831B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VectorDbPayload.CodingKeys()
{
  return &type metadata for VectorDbPayload.CodingKeys;
}

unint64_t sub_1C01831D0()
{
  unint64_t result;

  result = qword_1EF5BE180;
  if (!qword_1EF5BE180)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0311768, &type metadata for VectorDbPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE180);
  }
  return result;
}

unint64_t sub_1C0183210()
{
  unint64_t result;

  result = qword_1EF5BE188;
  if (!qword_1EF5BE188)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03116D8, &type metadata for VectorDbPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE188);
  }
  return result;
}

unint64_t sub_1C0183250()
{
  unint64_t result;

  result = qword_1EF5BE190;
  if (!qword_1EF5BE190)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0311700, &type metadata for VectorDbPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE190);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_52()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

void (*OUTLINED_FUNCTION_5_40(uint64_t a1, uint64_t a2, uint64_t a3, ...))(uint64_t *a1)
{
  uint64_t v3;
  uint64_t v4;
  va_list va;

  va_start(va, a3);
  return sub_1C017F4E0(va, v4, v3);
}

uint64_t OUTLINED_FUNCTION_8_33()
{
  return sub_1C03048AC();
}

void OUTLINED_FUNCTION_13_30(void *a1)
{
  free(a1);
}

uint64_t OUTLINED_FUNCTION_19_27()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_21_22()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_22_25()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_24_18@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  return a2(a1, 0);
}

uint64_t OUTLINED_FUNCTION_25_18()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_32_19()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_34_22()
{
  sub_1C00AC4E0();
}

void OUTLINED_FUNCTION_35_23()
{
  sub_1C00500A0();
}

void OUTLINED_FUNCTION_37_17()
{
  sub_1C00B1DFC();
}

uint64_t OUTLINED_FUNCTION_41_14()
{
  return sub_1C03033B8();
}

uint64_t OUTLINED_FUNCTION_45_11(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t (*v3)(char *, _QWORD);
  va_list va;

  va_start(va, a3);
  return v3(va, 0);
}

uint64_t *sub_1C0183354(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C0301DB0();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    v12 = *(int *)(type metadata accessor for StringTokenizer() + 20);
    v13 = &v10[v12];
    v14 = &v11[v12];
    swift_retain();
    v8((uint64_t *)v13, (uint64_t *)v14, v7);
    v15 = *(int *)(a3 + 24);
    v16 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)a1 + v15) = (uint64_t)v16;
    v17 = v16;
  }
  return a1;
}

void sub_1C0183434(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1C0301DB0();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  swift_release();
  v7 = type metadata accessor for StringTokenizer();
  v5(v6 + *(int *)(v7 + 20), v4);

}

uint64_t sub_1C01834B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;

  v6 = sub_1C0301DB0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v11 = *(int *)(type metadata accessor for StringTokenizer() + 20);
  v12 = v9 + v11;
  v13 = v10 + v11;
  swift_retain();
  v7(v12, v13, v6);
  v14 = *(int *)(a3 + 24);
  v15 = *(void **)(a2 + v14);
  *(_QWORD *)(a1 + v14) = v15;
  v16 = v15;
  return a1;
}

uint64_t sub_1C0183568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;

  v6 = sub_1C0301DB0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_retain();
  swift_release();
  v11 = type metadata accessor for StringTokenizer();
  v7(v9 + *(int *)(v11 + 20), v10 + *(int *)(v11 + 20), v6);
  v12 = *(int *)(a3 + 24);
  v13 = *(void **)(a2 + v12);
  v14 = *(void **)(a1 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  v15 = v13;

  return a1;
}

uint64_t sub_1C0183624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1C0301DB0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v11 = type metadata accessor for StringTokenizer();
  v7(v9 + *(int *)(v11 + 20), v10 + *(int *)(v11 + 20), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1C01836C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v6 = sub_1C0301DB0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_release();
  v11 = type metadata accessor for StringTokenizer();
  v7(v9 + *(int *)(v11 + 20), v10 + *(int *)(v11 + 20), v6);
  v12 = *(int *)(a3 + 24);
  v13 = *(void **)(a1 + v12);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);

  return a1;
}

uint64_t sub_1C0183774()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0183780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;

  v6 = OUTLINED_FUNCTION_1_53();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  v9 = OUTLINED_FUNCTION_38_9();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v8 = v4 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  v11 = *(_QWORD *)(v4 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1C0183810()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C018381C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = OUTLINED_FUNCTION_1_53();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
    return __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
  }
  result = OUTLINED_FUNCTION_38_9();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5 + *(int *)(a4 + 20);
    return __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
  }
  *(_QWORD *)(v5 + *(int *)(a4 + 24)) = (v4 - 1);
  return result;
}

uint64_t type metadata accessor for EmojiQueryExpander()
{
  uint64_t result;

  result = qword_1EF5BE1F0;
  if (!qword_1EF5BE1F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C01838E0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1C0301DB0();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for StringTokenizer();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_1C0183970(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 >> 62)
    goto LABEL_20;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1764();
    if (v2 < 0)
    {
      __break(1u);
      return;
    }
    v3 = 0;
    while (v2 != v3)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v4 = (id)MEMORY[0x1C3B975EC](v3, a1);
      else
        v4 = *(id *)(a1 + 8 * v3 + 32);
      v5 = v4;
      v6 = objc_msgSend(v5, sel_string);
      if (v6)
      {
        v7 = v6;
        v8 = sub_1C0303EB0();
        v10 = v9;

      }
      else
      {
        v8 = 0;
        v10 = 0;
      }

      if (!v10)
        goto LABEL_19;
      v11 = *(_QWORD *)(v13 + 16);
      if (v11 >= *(_QWORD *)(v13 + 24) >> 1)
        sub_1C00B1764();
      ++v3;
      *(_QWORD *)(v13 + 16) = v11 + 1;
      v12 = v13 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v8;
      *(_QWORD *)(v12 + 40) = v10;
      if (v2 == v3)
        return;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    v2 = sub_1C03047F8();
    swift_bridgeObjectRelease();
  }
}

id sub_1C0183B08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  id v12;

  v6 = sub_1C0301DB0();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a3, a1, v6);
  v8 = OUTLINED_FUNCTION_6_42();
  sub_1C01579F0(a2, a3 + *(int *)(v8 + 20));
  sub_1C00447B0(0, (unint64_t *)&qword_1EF5C3180);
  v9 = sub_1C0301D74();
  result = sub_1C02A655C(v9, v10);
  if (result)
  {
    v12 = result;
    sub_1C0157A34(a2);
    result = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    *(_QWORD *)(a3 + *(int *)(v8 + 24)) = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0183BD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  unint64_t v38;
  unint64_t v39;
  int64_t v40;
  unint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  int64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t aBlock;
  uint64_t v95;
  uint64_t (*v96)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v97;
  uint64_t (*v98)(unint64_t);
  _QWORD *v99;
  uint64_t v100;

  v100 = MEMORY[0x1E0DEE9E8];
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v1 = a1;
    v3 = 0;
    v88 = (2 * v2) | 1;
    v81 = v2 - 1;
    v73 = MEMORY[0x1E0DEE9D8];
    v83 = *(_QWORD *)(a1 + 16);
    v4 = a1 + 32;
    do
    {
      v85 = v3 + 1;
      v5 = v81;
      v6 = v88;
      do
      {
        OUTLINED_FUNCTION_44();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE230);
        sub_1C01849E4();
        v7 = OUTLINED_FUNCTION_0_65();
        v90 = v8;
        v92 = v7;
        OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_44();
        v89 = OUTLINED_FUNCTION_0_65();
        v10 = v9;
        OUTLINED_FUNCTION_33();
        aBlock = v1;
        v95 = v4;
        v96 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 1);
        v97 = (void *)v88;
        OUTLINED_FUNCTION_44();
        v11 = OUTLINED_FUNCTION_0_65();
        v13 = v12;
        OUTLINED_FUNCTION_33();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C004FE5C();
          v73 = v17;
        }
        v14 = *(_QWORD *)(v73 + 16);
        if (v14 >= *(_QWORD *)(v73 + 24) >> 1)
        {
          sub_1C004FE5C();
          v73 = v18;
        }
        *(_QWORD *)(v73 + 16) = v14 + 1;
        v15 = (_QWORD *)(v73 + 48 * v14);
        v15[4] = v92;
        v15[5] = v90;
        v15[6] = v89;
        v15[7] = v10;
        v15[8] = v11;
        v15[9] = v13;
        v6 -= 2;
        if (v5)
          v16 = v5 <= v3;
        else
          v16 = 1;
        --v5;
      }
      while (!v16);
      ++v3;
    }
    while (v85 != v83);
    v69 = v14 + 1;
  }
  else
  {
    v73 = MEMORY[0x1E0DEE9D8];
    if (!*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
      goto LABEL_58;
    v69 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  }
  v19 = OUTLINED_FUNCTION_6_42();
  v20 = 0;
  v70 = *(int *)(v19 + 24);
  v21 = MEMORY[0x1E0DEA968];
  while (2)
  {
    if (v20 >= *(_QWORD *)(v73 + 16))
    {
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    v22 = (uint64_t *)(v73 + 32 + 48 * v20);
    v23 = *v22;
    v24 = v22[1];
    v78 = *v22;
    v25 = v22[2];
    v26 = v22[3];
    v27 = v22[4];
    v28 = v22[5];
    v72 = v20 + 1;
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = MEMORY[0x1E0DEE9E0];
    v93 = *(void **)(v71 + v70);
    swift_bridgeObjectRetain_n();
    OUTLINED_FUNCTION_2_1();
    swift_bridgeObjectRetain();
    v91 = sub_1C0303F94();
    v30 = (_QWORD *)swift_allocObject();
    v30[2] = v23;
    v30[3] = v24;
    v30[4] = v25;
    v30[5] = v26;
    v30[6] = v27;
    v30[7] = v28;
    v30[8] = v29;
    v98 = sub_1C0184B18;
    v99 = v30;
    aBlock = MEMORY[0x1E0C809B0];
    v95 = 1107296256;
    v96 = sub_1C018457C;
    v97 = &block_descriptor_11;
    v31 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_2_1();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    sub_1C0184A28(v25, v26, 0, v91, 0, 1, (uint64_t)v31, v93);
    _Block_release(v31);
    swift_beginAccess();
    v1 = *(_QWORD *)(v29 + 16);
    v79 = v1 + 64;
    v32 = 1 << *(_BYTE *)(v1 + 32);
    if (v32 < 64)
      v33 = ~(-1 << v32);
    else
      v33 = -1;
    v34 = v33 & *(_QWORD *)(v1 + 64);
    v80 = (unint64_t)(v32 + 63) >> 6;
    v77 = v24;
    if ((v24 & 0x2000000000000000) != 0)
      v35 = HIBYTE(v24) & 0xF;
    else
      v35 = v78 & 0xFFFFFFFFFFFFLL;
    v36 = HIBYTE(v28) & 0xF;
    if ((v28 & 0x2000000000000000) == 0)
      v36 = v27 & 0xFFFFFFFFFFFFLL;
    v74 = v36;
    v75 = v35;
    OUTLINED_FUNCTION_44();
    v37 = 0;
    v76 = v1;
    if (v34)
    {
LABEL_28:
      v38 = __clz(__rbit64(v34));
      v34 &= v34 - 1;
      v39 = v38 | (v37 << 6);
      goto LABEL_43;
    }
    while (1)
    {
      v40 = v37 + 1;
      if (__OFADD__(v37, 1))
      {
        __break(1u);
        goto LABEL_58;
      }
      if (v40 >= v80)
        break;
      v41 = *(_QWORD *)(v79 + 8 * v40);
      ++v37;
      if (v41)
        goto LABEL_42;
      v37 = v40 + 1;
      if (v40 + 1 >= v80)
        break;
      v41 = *(_QWORD *)(v79 + 8 * v37);
      if (v41)
        goto LABEL_42;
      v37 = v40 + 2;
      if (v40 + 2 >= v80)
        break;
      v41 = *(_QWORD *)(v79 + 8 * v37);
      if (v41)
        goto LABEL_42;
      v42 = v40 + 3;
      if (v42 >= v80)
        break;
      v41 = *(_QWORD *)(v79 + 8 * v42);
      if (!v41)
      {
        while (1)
        {
          v37 = v42 + 1;
          if (__OFADD__(v42, 1))
            break;
          if (v37 >= v80)
            goto LABEL_57;
          v41 = *(_QWORD *)(v79 + 8 * v37);
          ++v42;
          if (v41)
            goto LABEL_42;
        }
        __break(1u);
        goto LABEL_65;
      }
      v37 = v42;
LABEL_42:
      v34 = (v41 - 1) & v41;
      v39 = __clz(__rbit64(v41)) + (v37 << 6);
LABEL_43:
      v43 = v1;
      v44 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v39);
      v45 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v39);
      aBlock = v25;
      v95 = v26;
      v86 = v44;
      v46 = sub_1C004F408();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_2_1();
      if ((sub_1C030454C() & 1) != 0)
      {
        if (v75)
        {
          aBlock = v78;
          v95 = v77;
          swift_bridgeObjectRetain();
          sub_1C0303FD0();
          v48 = aBlock;
          v47 = v95;
        }
        else
        {
          v48 = v78;
          v47 = swift_bridgeObjectRetain();
        }
        v82 = v34;
        v84 = v37;
        if (v74)
        {
          aBlock = 32;
          v95 = 0xE100000000000000;
          sub_1C0303FD0();
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        v49 = *(_QWORD *)(v45 + 16);
        v50 = v86;
        if (v49)
        {
          v51 = v45 + 40;
          v87 = v46;
          do
          {
            aBlock = v25;
            v95 = v26;
            v68 = v46;
            v52 = v50;
            sub_1C0304504();
            aBlock = v48;
            v95 = v47;
            swift_bridgeObjectRetain();
            sub_1C0303FD0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_1C0303FD0();
            swift_bridgeObjectRelease();
            sub_1C022D204((uint64_t)&aBlock, aBlock, v95, v53, v54, v55, v56, v57, v21, v68);
            swift_bridgeObjectRelease();
            v50 = v52;
            v46 = v87;
            v51 += 16;
            --v49;
          }
          while (v49);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v1 = v76;
        v34 = v82;
        v37 = v84;
      }
      else
      {
        v1 = v43;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v34)
        goto LABEL_28;
    }
LABEL_57:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = v72;
    if (v72 != v69)
      continue;
    break;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_1C00B0D9C();
  v1 = v58;
  swift_bridgeObjectRelease();
  if (qword_1ED727970 != -1)
LABEL_66:
    swift_once();
  v59 = sub_1C0303B98();
  __swift_project_value_buffer(v59, (uint64_t)&unk_1ED7295C8);
  swift_retain_n();
  v60 = sub_1C0303B80();
  v61 = sub_1C03042E8();
  if (os_log_type_enabled(v60, v61))
  {
    v62 = (uint8_t *)swift_slowAlloc();
    aBlock = swift_slowAlloc();
    *(_DWORD *)v62 = 136315138;
    v63 = swift_retain();
    v64 = MEMORY[0x1C3B97040](v63, MEMORY[0x1E0DEA968]);
    v66 = v65;
    swift_release();
    sub_1C003E6D8(v64, v66, &aBlock);
    sub_1C03044B0();
    OUTLINED_FUNCTION_24_7();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v60, v61, "Expansions generated by the EmojiResolver: %s", v62, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_24_7();
  return v1;
}

uint64_t sub_1C0184498(unint64_t a1)
{
  uint64_t result;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = sub_1C03042B8();
  if ((v3 & 1) == 0)
  {
    v4 = sub_1C0304090();
    v5 = MEMORY[0x1C3B96E30](v4);
    v7 = v6;
    swift_bridgeObjectRelease();
    if (a1)
      v8 = a1;
    else
      v8 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1C0183970(v8);
    v10 = v9;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1C00B52F8(v10, v5, v7);
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C018457C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);

  v8 = a2;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    sub_1C00447B0(0, &qword_1EF5BE240);
    v8 = sub_1C0304138();
  }
  swift_retain();
  v9(v8, a3, a4, a5);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0184610(const void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  _QWORD v27[5];
  _BYTE v28[264];
  _QWORD v29[34];

  v3 = OUTLINED_FUNCTION_38_9();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[1] = a1;
  memcpy(v29, a1, 0x108uLL);
  v6 = *(int *)(OUTLINED_FUNCTION_6_42() + 20);
  v27[0] = v1;
  sub_1C01579F0(v1 + v6, (uint64_t)v5);
  memcpy(v28, v29, sizeof(v28));
  sub_1C003F648(v29);
  v7 = sub_1C004EDE0();
  v8 = *(_QWORD *)(v7 + 16);
  v27[2] = v7;
  if (v8)
  {
    v9 = (uint64_t *)(v7 + 40);
    v10 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v11 = *(v9 - 1);
      v12 = *v9;
      swift_bridgeObjectRetain();
      v13 = StringTokenizer.tokenize(_:useMorphun:removeEmojis:)(v11, v12, 1, 1);
      swift_bridgeObjectRelease();
      v14 = *(_QWORD *)(v13 + 16);
      v15 = *(_QWORD *)(v10 + 16);
      if (__OFADD__(v15, v14))
        break;
      if (!swift_isUniquelyReferenced_nonNull_native() || v15 + v14 > *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_1C00500A0();
        v10 = v16;
      }
      if (*(_QWORD *)(v13 + 16))
      {
        v17 = *(_QWORD *)(v10 + 16);
        if ((*(_QWORD *)(v10 + 24) >> 1) - v17 < v14)
          goto LABEL_27;
        v18 = v10 + 16 * v17 + 32;
        if (v13 + 32 < v18 + 16 * v14 && v18 < v13 + 32 + 16 * v14)
          goto LABEL_29;
        swift_arrayInitWithCopy();
        if (v14)
        {
          v20 = *(_QWORD *)(v10 + 16);
          v21 = __OFADD__(v20, v14);
          v22 = v20 + v14;
          if (v21)
            goto LABEL_28;
          *(_QWORD *)(v10 + 16) = v22;
        }
      }
      else if (v14)
      {
        goto LABEL_26;
      }
      v9 += 2;
      swift_bridgeObjectRelease();
      if (!--v8)
        goto LABEL_21;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    result = sub_1C0304828();
    __break(1u);
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
LABEL_21:
    swift_bridgeObjectRelease();
    sub_1C0040644(v29);
    sub_1C0157A34((uint64_t)v5);
    if (*(_QWORD *)(v10 + 16))
    {
      sub_1C0183BD8(v10);
      v23 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v23);
      sub_1C01F0E00();
      v25 = v24;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E0DEE9D8];
    }
    return v25;
  }
  return result;
}

uint64_t sub_1C01848E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;

  v5 = *a1;
  v4 = a1[1];
  sub_1C01579A8(a2, (uint64_t)a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a3[3] = v5;
  a3[4] = v4;
  swift_bridgeObjectRelease();
  a3[5] = 0;
  a3[6] = 0xE000000000000000;
  swift_bridgeObjectRelease();
  a3[7] = 0;
  a3[8] = 0xE000000000000000;
  swift_bridgeObjectRelease();
  a3[9] = 0;
  a3[10] = 0xE000000000000000;
  swift_bridgeObjectRelease();
  a3[11] = 0;
  a3[12] = 0xE000000000000000;
  swift_bridgeObjectRelease();
  a3[13] = 0;
  a3[14] = 0xE000000000000000;
  swift_bridgeObjectRelease();
  a3[15] = 0;
  a3[16] = 0xE000000000000000;
  swift_bridgeObjectRelease();
  a3[17] = 0;
  a3[18] = 0xE000000000000000;
  swift_bridgeObjectRelease();
  a3[19] = 0;
  a3[20] = 0xE000000000000000;
  v6 = (char *)a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98) + 36);
  result = type metadata accessor for ContactResolver.SignalSet(0);
  v6[*(int *)(result + 156)] = 1;
  return result;
}

uint64_t sub_1C01849C8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1C01848E8(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_1C01849E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF5BE238;
  if (!qword_1EF5BE238)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF5BE230);
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0DEBF68], v1);
    atomic_store(result, (unint64_t *)&qword_1EF5BE238);
  }
  return result;
}

void sub_1C0184A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  id v14;

  v14 = (id)sub_1C0303E8C();
  swift_bridgeObjectRelease();
  objc_msgSend(a8, sel_enumerateSearchResultsInText_range_options_searchType_usingBlock_, v14, a3, a4, a5, a6, a7);

}

uint64_t sub_1C0184AB8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0184ADC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0184B18(unint64_t a1)
{
  return sub_1C0184498(a1);
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_0_65()
{
  return sub_1C0303E50();
}

uint64_t OUTLINED_FUNCTION_1_53()
{
  return sub_1C0301DB0();
}

uint64_t OUTLINED_FUNCTION_6_42()
{
  return type metadata accessor for EmojiQueryExpander();
}

uint64_t sub_1C0184B90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1764();
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
        sub_1C00B1764();
      v4 += 3;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void ContactResolverConfig.actionType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t (*ContactResolverConfig.actionType.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ContactResolverConfig.requestId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  OUTLINED_FUNCTION_47();
  return v1;
}

uint64_t (*ContactResolverConfig.requestId.modify())(_QWORD)
{
  return nullsub_1;
}

void ContactResolverConfig.init(intentId:intentTypeName:locale:logRunTimeData:processNLv3SpeechAlternatives:bundleIds:domainsToSearchForHistory:searchSuggestedContacts:handleTypePreference:recommender:customGenerator:includeResolutionSignals:commsHasForcePrompted:crrCommsAppSelectionJointId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,char a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  void (*v31)(_QWORD *@<X0>, _QWORD *@<X8>);
  uint64_t v32;
  int *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  _QWORD *v49;

  OUTLINED_FUNCTION_18_0();
  v43 = OUTLINED_FUNCTION_2_57(v37, v38, v39, v40, v41, v42);
  v44 = OUTLINED_FUNCTION_32_20(v43);
  MEMORY[0x1E0C80A78](v44);
  OUTLINED_FUNCTION_4_51();
  OUTLINED_FUNCTION_30_18();
  if (v45)
  {
    OUTLINED_FUNCTION_58_9();
    *(_QWORD *)(v30 + 24) = v36;
    *(_QWORD *)(v30 + 32) = v32;
  }
  else
  {
    OUTLINED_FUNCTION_17_0();
  }
  OUTLINED_FUNCTION_40_16();
  sub_1C0078D04(&qword_1EF5BE248, MEMORY[0x1E0CB0E60]);
  OUTLINED_FUNCTION_12_32();
  OUTLINED_FUNCTION_7_45();
  if ((v36 & 1) == 0)
    OUTLINED_FUNCTION_6_43();
  OUTLINED_FUNCTION_36_20();
  OUTLINED_FUNCTION_1_54();
  if (v32)
  {
    v46 = OUTLINED_FUNCTION_9_39();
    OUTLINED_FUNCTION_90_7(v46);
    v31 = sub_1C018637C;
  }
  else
  {
    OUTLINED_FUNCTION_87_8();
  }
  OUTLINED_FUNCTION_0_66();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_84_4();
  if (!v31)
  {
    OUTLINED_FUNCTION_18();
    OUTLINED_FUNCTION_5_41(v34);
    LOBYTE(v47) = 1;
LABEL_21:
    *(_BYTE *)(v30 + v33[12]) = v47 & 1;
    *(_BYTE *)(v30 + v33[18]) = a27 & 1;
    *(_BYTE *)(v30 + v33[19]) = a28 & 1;
    v49 = (_QWORD *)(v30 + v33[20]);
    swift_bridgeObjectRelease();
    *v49 = a29;
    v49[1] = a30;
    OUTLINED_FUNCTION_1();
    return;
  }
  OUTLINED_FUNCTION_23_21();
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_8_34();
  OUTLINED_FUNCTION_10_43();
  if ((v35 & 1) != 0)
  {
    LOBYTE(v47) = 1;
LABEL_20:
    OUTLINED_FUNCTION_18();
    OUTLINED_FUNCTION_5_41(v34);
    OUTLINED_FUNCTION_18();
    goto LABEL_21;
  }
  if (v31 == (void (*)(_QWORD *@<X0>, _QWORD *@<X8>))1)
  {
    LOBYTE(v47) = 0;
    goto LABEL_20;
  }
  OUTLINED_FUNCTION_97_2();
  while (!__OFADD__(v34, 1))
  {
    v47 = *(_QWORD *)(v36 - 8);
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_8_34();
    OUTLINED_FUNCTION_10_43();
    if ((v47 & 1) == 0)
    {
      OUTLINED_FUNCTION_55_10();
      if (!v48)
        continue;
    }
    goto LABEL_20;
  }
  __break(1u);
}

void ContactResolverConfig.init(intentId:intentTypeName:locale:logRunTimeData:processNLv3SpeechAlternatives:bundleIds:domainsToSearchForHistory:searchSuggestedContacts:handleTypePreference:recommender:customGenerator:commsHasForcePrompted:)()
{
  uint64_t v0;
  uint64_t (*v1)();
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;

  OUTLINED_FUNCTION_18_0();
  v13 = OUTLINED_FUNCTION_2_57(v7, v8, v9, v10, v11, v12);
  v14 = OUTLINED_FUNCTION_32_20(v13);
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_4_51();
  OUTLINED_FUNCTION_30_18();
  if (v15)
  {
    OUTLINED_FUNCTION_58_9();
    *(_QWORD *)(v0 + 24) = v6;
    *(_QWORD *)(v0 + 32) = v2;
  }
  else
  {
    OUTLINED_FUNCTION_17_0();
  }
  OUTLINED_FUNCTION_40_16();
  sub_1C0078D04(&qword_1EF5BE248, MEMORY[0x1E0CB0E60]);
  OUTLINED_FUNCTION_12_32();
  OUTLINED_FUNCTION_7_45();
  if ((v6 & 1) == 0)
    OUTLINED_FUNCTION_6_43();
  OUTLINED_FUNCTION_36_20();
  OUTLINED_FUNCTION_1_54();
  if (v2)
  {
    v16 = OUTLINED_FUNCTION_9_39();
    OUTLINED_FUNCTION_90_7(v16);
    v1 = sub_1C0187DEC;
  }
  else
  {
    OUTLINED_FUNCTION_87_8();
  }
  OUTLINED_FUNCTION_0_66();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_84_4();
  if (!v1)
  {
    OUTLINED_FUNCTION_18();
    OUTLINED_FUNCTION_5_41(v4);
LABEL_20:
    OUTLINED_FUNCTION_80_4();
    *(_BYTE *)(v0 + v19) = 0;
    *(_BYTE *)(v0 + *(int *)(v3 + 76)) = v20 & 1;
    OUTLINED_FUNCTION_1();
    return;
  }
  OUTLINED_FUNCTION_23_21();
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_8_34();
  OUTLINED_FUNCTION_10_43();
  if ((v5 & 1) != 0 || v1 == (uint64_t (*)())1)
  {
LABEL_19:
    OUTLINED_FUNCTION_18();
    OUTLINED_FUNCTION_5_41(v4);
    OUTLINED_FUNCTION_18();
    goto LABEL_20;
  }
  OUTLINED_FUNCTION_97_2();
  while (!__OFADD__(v4, 1))
  {
    v17 = *(_QWORD *)(v6 - 8);
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_8_34();
    OUTLINED_FUNCTION_10_43();
    if ((v17 & 1) == 0)
    {
      OUTLINED_FUNCTION_55_10();
      if (!v18)
        continue;
    }
    goto LABEL_19;
  }
  __break(1u);
}

void ContactResolverConfig.init(intentId:intentTypeName:locale:logRunTimeData:processNLv3SpeechAlternatives:bundleIds:domainsToSearchForHistory:searchSuggestedContacts:handleTypePreference:recommender:customGenerator:includeResolutionSignals:commsHasForcePrompted:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,char a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_18_0();
  v31 = v30;
  v33 = v32;
  v34 = OUTLINED_FUNCTION_14_4();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_32_0();
  v36 = type metadata accessor for ContactResolverConfig(0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_1_3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v29, v31, v34);
  ContactResolverConfig.init(intentId:intentTypeName:locale:logRunTimeData:processNLv3SpeechAlternatives:bundleIds:domainsToSearchForHistory:searchSuggestedContacts:handleTypePreference:recommender:customGenerator:includeResolutionSignals:)();
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v31, v34);
  sub_1C003DE2C(v28, v33);
  *(_BYTE *)(v33 + *(int *)(v36 + 76)) = a28;
  OUTLINED_FUNCTION_1();
}

void ContactResolverConfig.init(intentId:intentTypeName:locale:logRunTimeData:processNLv3SpeechAlternatives:searchFirstPartyContacts:bundleIdsForThirdPartyContactSearch:domainsToSearchForHistory:searchSuggestedContacts:recommender:customGenerator:includeResolutionSignals:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  char v29;
  char v30;
  char v31;
  char v32;
  NSObject *v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  os_log_type_t v44;
  uint8_t *v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)();
  uint64_t *v50;

  OUTLINED_FUNCTION_9_30();
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v40 = v39;
  swift_bridgeObjectRelease();
  v41 = OUTLINED_FUNCTION_14_4();
  OUTLINED_FUNCTION_25_19(v41);
  v42 = *a24;
  if (qword_1ED727970 != -1)
    swift_once();
  v43 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_7(v43, (uint64_t)&unk_1ED7295C8);
  v44 = OUTLINED_FUNCTION_34();
  if (os_log_type_enabled(v34, v44))
  {
    v45 = (uint8_t *)OUTLINED_FUNCTION_6();
    *(_WORD *)v45 = 0;
    OUTLINED_FUNCTION_10_3(&dword_1C0039000, v34, v44, "do not use the deprecated ContactResolverConfig initializer!", v45);
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_31_17();
  OUTLINED_FUNCTION_36_20();
  *(_QWORD *)(v40 + 40) = v38;
  *(_QWORD *)(v40 + 48) = v36;
  v46 = (int *)type metadata accessor for ContactResolverConfig(0);
  *(_BYTE *)(v40 + v46[9]) = v32 & 1;
  v47 = v46[11];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v40 + v47) = a23;
  *(_BYTE *)(v40 + v46[12]) = v30 & 1;
  *(_QWORD *)(v40 + v46[13]) = v42;
  if (a27)
  {
    v48 = OUTLINED_FUNCTION_9_39();
    *(_QWORD *)(v48 + 16) = a27;
    *(_QWORD *)(v48 + 24) = a28;
    v49 = sub_1C0187DEC;
  }
  else
  {
    v49 = 0;
    v48 = 0;
  }
  v50 = (uint64_t *)(v40 + v46[16]);
  sub_1C003D798(*v50);
  *v50 = (uint64_t)v49;
  v50[1] = v48;
  *(_BYTE *)(v40 + v46[18]) = a29 & 1;
  OUTLINED_FUNCTION_2_0();
}

void ContactResolverConfig.init(intentId:intentTypeName:locale:logRunTimeData:processNLv3SpeechAlternatives:searchFirstPartyContacts:bundleIdsForThirdPartyContactSearch:domainsToSearchForHistory:searchSuggestedContacts:recommender:customGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t *a26,uint64_t a27,uint64_t a28,uint64_t (*a29)(),uint64_t a30)
{
  NSObject *v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t (*v45)();
  uint64_t v46;
  os_log_type_t v47;
  uint8_t *v48;
  int *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  char v56;
  uint64_t v57;
  char v58;

  OUTLINED_FUNCTION_73_6();
  v58 = v31;
  v56 = v32;
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v57 = *a26;
  if (qword_1ED727970 != -1)
    swift_once();
  v45 = a29;
  v46 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_7(v46, (uint64_t)&unk_1ED7295C8);
  v47 = OUTLINED_FUNCTION_34();
  if (os_log_type_enabled(v30, v47))
  {
    v48 = (uint8_t *)OUTLINED_FUNCTION_6();
    *(_WORD *)v48 = 0;
    OUTLINED_FUNCTION_10_3(&dword_1C0039000, v30, v47, "do not use the deprecated ContactResolverConfig initializer!", v48);
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_31_17();
  OUTLINED_FUNCTION_58_9();
  v44[3] = v42;
  v44[4] = v40;
  OUTLINED_FUNCTION_36_20();
  v44[5] = v38;
  v44[6] = v36;
  v49 = (int *)type metadata accessor for ContactResolverConfig(0);
  v50 = (char *)v44 + v49[8];
  v51 = OUTLINED_FUNCTION_14_4();
  v52 = *(_QWORD *)(v51 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 24))(v50, v34, v51);
  *((_BYTE *)v44 + v49[9]) = v56 & 1;
  v53 = v49[11];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v44 + v53) = a25;
  *((_BYTE *)v44 + v49[12]) = v58 & 1;
  *(_QWORD *)((char *)v44 + v49[13]) = v57;
  if (a29)
  {
    v54 = OUTLINED_FUNCTION_9_39();
    *(_QWORD *)(v54 + 16) = a29;
    *(_QWORD *)(v54 + 24) = a30;
    v45 = sub_1C0187DEC;
  }
  else
  {
    v54 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v34, v51);
  v55 = (_QWORD *)((char *)v44 + v49[16]);
  sub_1C003D798(*v55);
  *v55 = (uint64_t)v45;
  v55[1] = v54;
  *((_BYTE *)v44 + v49[18]) = 0;
  OUTLINED_FUNCTION_3_12();
}

void sub_1C018543C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;

  OUTLINED_FUNCTION_73_6();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  if (qword_1ED727970 != -1)
    goto LABEL_25;
  while (1)
  {
    v7 = OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7(v7, (uint64_t)&unk_1ED7295C8);
    v8 = OUTLINED_FUNCTION_34();
    if (os_log_type_enabled((os_log_t)v0, v8))
    {
      v9 = (uint8_t *)OUTLINED_FUNCTION_6();
      *(_WORD *)v9 = 0;
      OUTLINED_FUNCTION_10_3(&dword_1C0039000, v0, v8, "do not use the deprecated ContactResolverConfig initializer!", v9);
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_31_17();
    v11 = *(_QWORD *)(v4 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_intent);
    v10 = *(_QWORD *)(v4 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_intent + 8);
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_29();
    *(_QWORD *)(v6 + 40) = v11;
    *(_QWORD *)(v6 + 48) = v10;
    v12 = OUTLINED_FUNCTION_47();
    v13 = (_QWORD *)sub_1C0184B90(v12);
    swift_bridgeObjectRelease();
    v0 = type metadata accessor for ContactResolverConfig(0);
    v14 = *(int *)(v0 + 44);
    OUTLINED_FUNCTION_65();
    OUTLINED_FUNCTION_55_0();
    *(_QWORD *)(v6 + v14) = v13;
    v15 = v13[2];
    if (!v15)
    {
      LOBYTE(v17) = 1;
      goto LABEL_16;
    }
    v16 = v13[4];
    OUTLINED_FUNCTION_65();
    OUTLINED_FUNCTION_45_0();
    OUTLINED_FUNCTION_21_23();
    OUTLINED_FUNCTION_19_28();
    v21 = v2;
    if ((v16 & 1) != 0)
    {
      LOBYTE(v17) = 1;
      goto LABEL_15;
    }
    if (v15 == 1)
      break;
    v2 = v13 + 7;
    while (!__OFADD__(1, 1))
    {
      v17 = v13[6];
      OUTLINED_FUNCTION_45_0();
      OUTLINED_FUNCTION_21_23();
      OUTLINED_FUNCTION_19_28();
      if ((v17 & 1) == 0)
      {
        OUTLINED_FUNCTION_78_7();
        if (!v18)
          continue;
      }
      goto LABEL_15;
    }
    __break(1u);
LABEL_25:
    swift_once();
  }
  LOBYTE(v17) = 0;
LABEL_15:
  OUTLINED_FUNCTION_29();
  v2 = v21;
LABEL_16:
  OUTLINED_FUNCTION_29();
  *(_BYTE *)(v6 + *(int *)(v0 + 48)) = v17 & 1;
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_domain))
  {
    if (*(_BYTE *)(v4 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_domain) == 1)
    {
      v19 = 1;
    }
    else
    {
      if (qword_1ED7267B8 != -1)
        swift_once();
      v19 = qword_1ED7267A8;
    }
  }
  else
  {
    v19 = 4;
  }
  swift_release();
  *(_QWORD *)(v6 + *(int *)(v0 + 52)) = v19;
  v20 = *((_BYTE *)v2 + 17);
  swift_release();
  *(_BYTE *)(v6 + *(int *)(v0 + 56)) = v20;
  OUTLINED_FUNCTION_3_12();
}

void static ContactResolverConfig.== infix(_:_:)(char *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  BOOL v8;
  char v9;
  BOOL v10;
  char v11;

  OUTLINED_FUNCTION_60_4(a1);
  if ((v3 & 1) == 0)
    goto LABEL_22;
  v4 = v2[2];
  v5 = v1[2];
  if (v4)
  {
    if (!v5)
      goto LABEL_22;
    if (v2[1] != v1[1] || v4 != v5)
    {
      OUTLINED_FUNCTION_176();
      OUTLINED_FUNCTION_23_1();
      if ((v7 & 1) == 0)
        goto LABEL_22;
    }
  }
  else if (v5)
  {
    goto LABEL_22;
  }
  v8 = v2[3] == v1[3] && v2[4] == v1[4];
  if (v8 || (OUTLINED_FUNCTION_176(), OUTLINED_FUNCTION_23_1(), (v9 & 1) != 0))
  {
    v10 = v2[5] == v1[5] && v2[6] == v1[6];
    if (v10 || (OUTLINED_FUNCTION_176(), OUTLINED_FUNCTION_23_1(), (v11 & 1) != 0))
    {
      type metadata accessor for ContactResolverConfig(0);
      OUTLINED_FUNCTION_59_9();
    }
  }
LABEL_22:
  OUTLINED_FUNCTION_37_0();
}

void sub_1C018583C(char *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  char v3;
  BOOL v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  BOOL v10;
  char v11;

  OUTLINED_FUNCTION_60_4(a1);
  if ((v3 & 1) != 0)
  {
    v4 = v2[1] == v1[1] && v2[2] == v1[2];
    if (v4 || (OUTLINED_FUNCTION_176(), OUTLINED_FUNCTION_23_1(), (v5 & 1) != 0))
    {
      v6 = v2[4];
      v7 = v1[4];
      if (v6)
      {
        if (!v7)
          goto LABEL_22;
        if (v2[3] != v1[3] || v6 != v7)
        {
          OUTLINED_FUNCTION_176();
          OUTLINED_FUNCTION_23_1();
          if ((v9 & 1) == 0)
            goto LABEL_22;
        }
      }
      else if (v7)
      {
        goto LABEL_22;
      }
      v10 = v2[5] == v1[5] && v2[6] == v1[6];
      if (v10 || (OUTLINED_FUNCTION_176(), OUTLINED_FUNCTION_23_1(), (v11 & 1) != 0))
      {
        type metadata accessor for PrivatizedContactResolverConfig(0);
        OUTLINED_FUNCTION_59_9();
      }
    }
  }
LABEL_22:
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C0185958(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v12;

  v2 = a1 == 0x79546E6F69746361 && a2 == 0xEA00000000006570;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7463617265746E69 && a2 == 0xED000064496E6F69;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x4974736575716572 && a2 == 0xE900000000000064;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x7954746E65746E69 && a2 == 0xEE00656D614E6570;
        if (v8 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000;
          if (v9 || (sub_1C0304A08() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x69546E7552676F6CLL && a2 == 0xEE0061746144656DLL;
            if (v10 || (sub_1C0304A08() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x6449656C646E7562 && a2 == 0xE900000000000073;
              if (v11 || (sub_1C0304A08() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else if (a1 == 0xD000000000000018 && a2 == 0x80000001C0330090 || (sub_1C0304A08() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else if (a1 == 0xD000000000000019 && a2 == 0x80000001C03300B0 || (sub_1C0304A08() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else if (a1 == 0xD000000000000017 && a2 == 0x80000001C03300D0 || (sub_1C0304A08() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else if (a1 == 0xD000000000000012 && a2 == 0x80000001C03300F0)
              {
                swift_bridgeObjectRelease();
                return 10;
              }
              else
              {
                v12 = sub_1C0304A08();
                swift_bridgeObjectRelease();
                if ((v12 & 1) != 0)
                  return 10;
                else
                  return 11;
              }
            }
          }
        }
      }
    }
  }
}

void sub_1C0185E0C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;

  v7 = sub_1C0301DB0();
  v18 = *(_QWORD *)(v7 - 8);
  v19 = v7;
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_32_0();
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE2B8);
  v8 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_6_0();
  v20 = (int *)type metadata accessor for PrivatizedContactResolverConfig(0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_1_3();
  *(_QWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0069934();
  sub_1C0304B88();
  if (v2)
  {
    OUTLINED_FUNCTION_172();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C0187B4C();
    OUTLINED_FUNCTION_27_22();
    *(_BYTE *)v3 = v21;
    *(_QWORD *)(v3 + 8) = OUTLINED_FUNCTION_47_18(1);
    *(_QWORD *)(v3 + 16) = v10;
    *(_QWORD *)(v3 + 24) = sub_1C0304870();
    *(_QWORD *)(v3 + 32) = v11;
    *(_QWORD *)(v3 + 40) = OUTLINED_FUNCTION_47_18(3);
    *(_QWORD *)(v3 + 48) = v12;
    sub_1C0078D04(&qword_1EF5BE2D0, MEMORY[0x1E0CB0E68]);
    OUTLINED_FUNCTION_27_22();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v3 + v20[8], v4, v19);
    LOBYTE(v21) = 5;
    *(_BYTE *)(v3 + v20[9]) = sub_1C03048B8() & 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
    sub_1C0187C80(&qword_1EF5BD988, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    OUTLINED_FUNCTION_27_22();
    *(_QWORD *)(v3 + v20[10]) = v21;
    OUTLINED_FUNCTION_70_6(7);
    *(_BYTE *)(v3 + v20[11]) = sub_1C03048B8() & 1;
    sub_1C0069DA0();
    OUTLINED_FUNCTION_27_22();
    *(_QWORD *)(v3 + v20[12]) = v21;
    sub_1C0187B88();
    OUTLINED_FUNCTION_27_22();
    *(_BYTE *)(v3 + v20[13]) = 5;
    OUTLINED_FUNCTION_70_6(10);
    v13 = sub_1C03048AC();
    v15 = v14;
    OUTLINED_FUNCTION_56_12(*(uint64_t (**)(uint64_t, _QWORD))(v8 + 8));
    v16 = (uint64_t *)(v3 + v20[14]);
    *v16 = v13;
    v16[1] = v15;
    sub_1C0187BC4(v3, a2);
    OUTLINED_FUNCTION_172();
    sub_1C0187C08(v3);
  }
  OUTLINED_FUNCTION_28_0();
}

uint64_t sub_1C0186294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0185958(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C01862B8()
{
  sub_1C0069934();
  return sub_1C0304BAC();
}

uint64_t sub_1C01862E0()
{
  sub_1C0069934();
  return sub_1C0304BB8();
}

void sub_1C0186308(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0185E0C(a1, a2);
}

SiriInference::ContactResolverDomain __swiftcall ContactResolverDomain.init(rawValue:)(SiriInference::ContactResolverDomain rawValue)
{
  SiriInference::ContactResolverDomain *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static ContactResolverDomain.messages.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void sub_1C0186334()
{
  qword_1ED7267A8 = 5;
}

uint64_t sub_1C0186358()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C018637C(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  *a2 = (*(uint64_t (**)(_QWORD))(v2 + 16))(*a1);
  OUTLINED_FUNCTION_9();
}

SiriInference::ContactResolverDomain sub_1C01863A4(Swift::Int *a1)
{
  return ContactResolverDomain.init(rawValue:)(*a1);
}

uint64_t sub_1C01863AC()
{
  sub_1C0069E18();
  return sub_1C03040FC();
}

void sub_1C018640C(_QWORD *a1@<X8>)
{
  sub_1C01C19F0(a1);
}

void sub_1C0186418(_QWORD *a1@<X8>)
{
  sub_1C028A5A4(a1);
}

void sub_1C0186424(_QWORD *a1@<X8>)
{
  sub_1C01C19FC(a1);
}

uint64_t sub_1C0186430(_QWORD *a1)
{
  return sub_1C01C1A04(*a1);
}

uint64_t sub_1C0186438(_QWORD *a1)
{
  return sub_1C01C1A4C(*a1);
}

uint64_t sub_1C0186440(_QWORD *a1)
{
  return j__OUTLINED_FUNCTION_178_2(*a1);
}

uint64_t sub_1C0186448(_QWORD *a1)
{
  return j__OUTLINED_FUNCTION_179_1(*a1);
}

void sub_1C0186450(uint64_t *a1)
{
  sub_1C01C1A80(*a1);
}

void sub_1C0186458(_QWORD *a1@<X8>)
{
  sub_1C01C1A8C(a1);
}

void sub_1C0186464(uint64_t *a1)
{
  sub_1C01C1AB4(*a1);
}

SiriInference::ContactResolverDomain sub_1C018646C@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  SiriInference::ContactResolverDomain result;

  result.rawValue = ContactResolverDomain.init(rawValue:)(*a1).rawValue;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

SiriInference::SearchSuggestedContacts_optional __swiftcall SearchSuggestedContacts.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  SiriInference::SearchSuggestedContacts_optional result;

  sub_1C0186540(v1);
  return result;
}

void sub_1C01864A4(unsigned __int8 *a1, char *a2)
{
  sub_1C025D1A8(*a1, *a2);
}

void sub_1C01864B0()
{
  sub_1C00CE960();
}

uint64_t sub_1C01864B8()
{
  return sub_1C00C1A60();
}

void sub_1C01864C0()
{
  sub_1C02EB214();
}

SiriInference::SearchSuggestedContacts_optional sub_1C01864C8(Swift::String *a1)
{
  return SearchSuggestedContacts.init(rawValue:)(*a1);
}

uint64_t sub_1C01864D8()
{
  sub_1C0187D94();
  return sub_1C03040F0();
}

SiriInference::RecommenderType_optional __swiftcall RecommenderType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  SiriInference::RecommenderType_optional result;

  sub_1C0186540(v1);
  return result;
}

void sub_1C0186540(char *a1@<X8>)
{
  unint64_t v1;
  char v3;

  sub_1C030484C();
  OUTLINED_FUNCTION_6_2();
  v3 = 3;
  if (v1 < 3)
    v3 = v1;
  *a1 = v3;
  OUTLINED_FUNCTION_37_0();
}

uint64_t RecommenderType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6D6D6F6365526C6DLL;
  if (*v0 != 1)
    v1 = 0x6369736162;
  if (*v0)
    return v1;
  else
    return 0x53656E4F69726973;
}

void sub_1C01865F0(unsigned __int8 *a1, char *a2)
{
  sub_1C025E338(*a1, *a2);
}

void sub_1C01865FC()
{
  sub_1C00CE96C();
}

uint64_t sub_1C0186604()
{
  return sub_1C00C246C();
}

void sub_1C018660C()
{
  sub_1C02EAC1C();
}

SiriInference::RecommenderType_optional sub_1C0186614(Swift::String *a1)
{
  return RecommenderType.init(rawValue:)(*a1);
}

void sub_1C0186620(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = RecommenderType.rawValue.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C0186640()
{
  sub_1C0187D58();
  return sub_1C03040F0();
}

uint64_t sub_1C018669C()
{
  sub_1C0187D58();
  return sub_1C03040CC();
}

SiriInference::ContactActionType_optional __swiftcall ContactActionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  unint64_t v2;
  char *v3;
  char v4;
  SiriInference::ContactActionType_optional result;

  v3 = v1;
  sub_1C030484C();
  OUTLINED_FUNCTION_6_2();
  v4 = 5;
  if (v2 < 5)
    v4 = v2;
  *v3 = v4;
  OUTLINED_FUNCTION_37_0();
  return result;
}

void sub_1C0186730(char *a1)
{
  sub_1C025D038(*a1);
}

void sub_1C018673C()
{
  unsigned __int8 *v0;

  sub_1C00CE978(*v0);
}

void sub_1C0186744(uint64_t a1)
{
  char *v1;

  sub_1C00C221C(a1, *v1);
}

void sub_1C018674C(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EADCC(a1, *v1);
}

SiriInference::ContactActionType_optional sub_1C0186754(Swift::String *a1)
{
  return ContactActionType.init(rawValue:)(*a1);
}

uint64_t sub_1C0186760()
{
  sub_1C0187D1C();
  return sub_1C03040F0();
}

void static ContactHandleTypePreference.preferEmail.getter(_WORD *a1@<X8>)
{
  OUTLINED_FUNCTION_77_4(a1);
}

void static ContactHandleTypePreference.requireEmail.getter(_WORD *a1@<X8>)
{
  OUTLINED_FUNCTION_77_4(a1);
}

BOOL static ContactHandleTypePreference.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_1C01867F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7269757165527369 && a2 == 0xEA00000000006465;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C01868E0(char a1)
{
  if ((a1 & 1) != 0)
    return 1701869940;
  else
    return 0x7269757165527369;
}

uint64_t sub_1C0186914()
{
  char *v0;

  return sub_1C01868E0(*v0);
}

uint64_t sub_1C018691C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C01867F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0186940()
{
  sub_1C0186BF0();
  return sub_1C0304BAC();
}

uint64_t sub_1C0186968()
{
  sub_1C0186BF0();
  return sub_1C0304BB8();
}

void ContactHandleTypePreference.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE250);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_3();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0186BF0();
  sub_1C0304BA0();
  OUTLINED_FUNCTION_41_3();
  if (!v1)
  {
    sub_1C0170374();
    OUTLINED_FUNCTION_169();
  }
  OUTLINED_FUNCTION_75_5(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_28_0();
}

void ContactHandleTypePreference.init(from:)(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  char v7;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE260);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0186BF0();
  sub_1C0304B88();
  if (!v2)
  {
    v6 = sub_1C03048B8();
    sub_1C01703B0();
    sub_1C03048E8();
    OUTLINED_FUNCTION_3_27();
    *a2 = v6 & 1;
    a2[1] = v7;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  OUTLINED_FUNCTION_28_0();
}

void sub_1C0186BC8(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  ContactHandleTypePreference.init(from:)(a1, a2);
}

void sub_1C0186BDC(_QWORD *a1)
{
  ContactHandleTypePreference.encode(to:)(a1);
}

unint64_t sub_1C0186BF0()
{
  unint64_t result;

  result = qword_1EF5BE258;
  if (!qword_1EF5BE258)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03120FC, &type metadata for ContactHandleTypePreference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE258);
  }
  return result;
}

unint64_t sub_1C0186C40()
{
  unint64_t result;

  result = qword_1EF5BE288;
  if (!qword_1EF5BE288)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for SearchSuggestedContacts, &type metadata for SearchSuggestedContacts);
    atomic_store(result, (unint64_t *)&qword_1EF5BE288);
  }
  return result;
}

unint64_t sub_1C0186C80()
{
  unint64_t result;

  result = qword_1EF5BE290;
  if (!qword_1EF5BE290)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for RecommenderType, &type metadata for RecommenderType);
    atomic_store(result, (unint64_t *)&qword_1EF5BE290);
  }
  return result;
}

unint64_t sub_1C0186CC0()
{
  unint64_t result;

  result = qword_1EF5BE298;
  if (!qword_1EF5BE298)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactActionType, &type metadata for ContactActionType);
    atomic_store(result, (unint64_t *)&qword_1EF5BE298);
  }
  return result;
}

uint64_t assignWithCopy for ContactResolverConfig(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_WORD *)(a1 + a3[15]) = *(_WORD *)(a2 + a3[15]);
  v10 = a3[16];
  v11 = (_QWORD *)(a1 + v10);
  v12 = a2 + v10;
  v13 = *(_QWORD *)(a1 + v10);
  v14 = *(_QWORD *)(a2 + v10);
  if (!v13)
  {
    if (v14)
    {
      v16 = *(_QWORD *)(v12 + 8);
      *v11 = v14;
      v11[1] = v16;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v11 = *(_OWORD *)v12;
    goto LABEL_8;
  }
  if (!v14)
  {
    swift_release();
    goto LABEL_7;
  }
  v15 = *(_QWORD *)(v12 + 8);
  *v11 = v14;
  v11[1] = v15;
  swift_retain();
  swift_release();
LABEL_8:
  v17 = a3[17];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  v20 = a3[20];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ContactResolverConfig(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  v11 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v13 = a3[16];
  *(_WORD *)(a1 + a3[15]) = *(_WORD *)(a2 + a3[15]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  v14 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  return a1;
}

uint64_t assignWithTake for ContactResolverConfig(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = a3[8];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  v14 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v15 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_WORD *)(a1 + v15) = *(_WORD *)(a2 + v15);
  v16 = a3[16];
  v17 = (_QWORD *)(a1 + v16);
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a1 + v16);
  v20 = *(_QWORD *)(a2 + v16);
  if (!v19)
  {
    if (v20)
    {
      v22 = *(_QWORD *)(v18 + 8);
      *v17 = v20;
      v17[1] = v22;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v17 = *(_OWORD *)v18;
    goto LABEL_8;
  }
  if (!v20)
  {
    swift_release();
    goto LABEL_7;
  }
  v21 = *(_QWORD *)(v18 + 8);
  *v17 = v20;
  v17[1] = v21;
  swift_release();
LABEL_8:
  v23 = a3[17];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  v28 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_BYTE *)(a1 + v28) = *(_BYTE *)(a2 + v28);
  v29 = a3[20];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1C018717C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_33_15(*(_QWORD *)(a1 + 32));
    OUTLINED_FUNCTION_37_0();
  }
  else
  {
    OUTLINED_FUNCTION_14_4();
    v2 = OUTLINED_FUNCTION_88_3();
    OUTLINED_FUNCTION_46(v2, v3, v4);
  }
}

uint64_t storeEnumTagSinglePayload for ContactResolverConfig()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C01871D0()
{
  int v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_73_0();
  if (v2)
  {
    *(_QWORD *)(v1 + 32) = (v0 - 1);
    OUTLINED_FUNCTION_37_0();
  }
  else
  {
    OUTLINED_FUNCTION_14_4();
    v3 = OUTLINED_FUNCTION_71_8();
    OUTLINED_FUNCTION_49_3(v3, v4, v5, v6);
  }
}

uint64_t sub_1C018720C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C0301DB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C01872E8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0187334 + 4 * byte_1C0311823[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0187368 + 4 * byte_1C031181E[v4]))();
}

uint64_t sub_1C0187368(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0187370(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0187378);
  return result;
}

uint64_t sub_1C0187384(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C018738CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0187390(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0187398(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for ContactActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C01873F0 + 4 * byte_1C031182D[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C0187424 + 4 * byte_1C0311828[v4]))();
}

uint64_t sub_1C0187424(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C018742C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0187434);
  return result;
}

uint64_t sub_1C0187440(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0187448);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C018744C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0187454(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_QWORD *sub_1C0187460(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v8 = a2[4];
    a1[3] = a2[3];
    a1[4] = v8;
    v9 = a2[6];
    v10 = a3[8];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    a1[5] = a2[5];
    a1[6] = v9;
    v13 = sub_1C0301DB0();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v15 = a3[10];
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *(_QWORD *)((char *)v4 + v15) = *(_QWORD *)((char *)a2 + v15);
    v16 = a3[12];
    *((_BYTE *)v4 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    *(_QWORD *)((char *)v4 + v16) = *(_QWORD *)((char *)a2 + v16);
    v17 = a3[14];
    *((_BYTE *)v4 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    v18 = (_QWORD *)((char *)v4 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C018758C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v10 = a3[14];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C01876D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  v11 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t sub_1C0187790(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = a3[8];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_bridgeObjectRelease();
  v14 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v15 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1C0187880(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_33_15(*(_QWORD *)(a1 + 16));
    OUTLINED_FUNCTION_37_0();
  }
  else
  {
    OUTLINED_FUNCTION_14_4();
    v2 = OUTLINED_FUNCTION_88_3();
    OUTLINED_FUNCTION_46(v2, v3, v4);
  }
}

void sub_1C01878C8()
{
  int v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_73_0();
  if (v2)
  {
    *(_QWORD *)(v1 + 16) = (v0 - 1);
    OUTLINED_FUNCTION_37_0();
  }
  else
  {
    OUTLINED_FUNCTION_14_4();
    v3 = OUTLINED_FUNCTION_71_8();
    OUTLINED_FUNCTION_49_3(v3, v4, v5, v6);
  }
}

uint64_t sub_1C0187904()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C0301DB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ContactHandleTypePreference.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0187A0C + 4 * byte_1C0311841[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0187A40 + 4 * byte_1C031183C[v4]))();
}

uint64_t sub_1C0187A40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0187A48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0187A50);
  return result;
}

uint64_t sub_1C0187A5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0187A64);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0187A68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0187A70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContactHandleTypePreference.CodingKeys()
{
  return &type metadata for ContactHandleTypePreference.CodingKeys;
}

unint64_t sub_1C0187A90()
{
  unint64_t result;

  result = qword_1EF5BE2A0;
  if (!qword_1EF5BE2A0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031205C, &type metadata for ContactHandleTypePreference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE2A0);
  }
  return result;
}

unint64_t sub_1C0187AD0()
{
  unint64_t result;

  result = qword_1EF5BE2A8;
  if (!qword_1EF5BE2A8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0311FCC, &type metadata for ContactHandleTypePreference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE2A8);
  }
  return result;
}

unint64_t sub_1C0187B10()
{
  unint64_t result;

  result = qword_1EF5BE2B0;
  if (!qword_1EF5BE2B0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0311FF4, &type metadata for ContactHandleTypePreference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE2B0);
  }
  return result;
}

unint64_t sub_1C0187B4C()
{
  unint64_t result;

  result = qword_1EF5BE2C8;
  if (!qword_1EF5BE2C8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactActionType, &type metadata for ContactActionType);
    atomic_store(result, (unint64_t *)&qword_1EF5BE2C8);
  }
  return result;
}

unint64_t sub_1C0187B88()
{
  unint64_t result;

  result = qword_1EF5BE2E0;
  if (!qword_1EF5BE2E0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for SearchSuggestedContacts, &type metadata for SearchSuggestedContacts);
    atomic_store(result, (unint64_t *)&qword_1EF5BE2E0);
  }
  return result;
}

uint64_t sub_1C0187BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PrivatizedContactResolverConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0187C08(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PrivatizedContactResolverConfig(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C0187C44()
{
  unint64_t result;

  result = qword_1EF5BE2F0;
  if (!qword_1EF5BE2F0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactActionType, &type metadata for ContactActionType);
    atomic_store(result, (unint64_t *)&qword_1EF5BE2F0);
  }
  return result;
}

uint64_t sub_1C0187C80(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED7283A0);
    v8 = a2;
    result = MEMORY[0x1C3B9827C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0187CE0()
{
  unint64_t result;

  result = qword_1EF5BE308;
  if (!qword_1EF5BE308)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for SearchSuggestedContacts, &type metadata for SearchSuggestedContacts);
    atomic_store(result, (unint64_t *)&qword_1EF5BE308);
  }
  return result;
}

unint64_t sub_1C0187D1C()
{
  unint64_t result;

  result = qword_1EF5BE310;
  if (!qword_1EF5BE310)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactActionType, &type metadata for ContactActionType);
    atomic_store(result, (unint64_t *)&qword_1EF5BE310);
  }
  return result;
}

unint64_t sub_1C0187D58()
{
  unint64_t result;

  result = qword_1EF5BE318;
  if (!qword_1EF5BE318)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for RecommenderType, &type metadata for RecommenderType);
    atomic_store(result, (unint64_t *)&qword_1EF5BE318);
  }
  return result;
}

unint64_t sub_1C0187D94()
{
  unint64_t result;

  result = qword_1EF5BE320;
  if (!qword_1EF5BE320)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for SearchSuggestedContacts, &type metadata for SearchSuggestedContacts);
    atomic_store(result, (unint64_t *)&qword_1EF5BE320);
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivatizedContactResolverConfig.CodingKeys()
{
  return &type metadata for PrivatizedContactResolverConfig.CodingKeys;
}

uint64_t OUTLINED_FUNCTION_0_66()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v0 + *(int *)(v2 + 64));
  v6 = *v5;
  sub_1C003D788(v3);
  sub_1C003D798(v6);
  *v5 = v1;
  v5[1] = v4;
  return swift_bridgeObjectRetain();
}

int *OUTLINED_FUNCTION_1_54()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *result;

  v5 = *(_QWORD *)(v4 - 112);
  *(_QWORD *)(v0 + 40) = v3;
  *(_QWORD *)(v0 + 48) = v5;
  result = (int *)type metadata accessor for ContactResolverConfig(0);
  *(_BYTE *)(v0 + result[9]) = *(_DWORD *)(v4 - 104) & 1;
  *(_QWORD *)(v0 + result[13]) = v2;
  *(_WORD *)(v0 + result[15]) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_57(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;

  *(_DWORD *)(v6 - 104) = a6;
  *(_QWORD *)(v6 - 88) = a5;
  *(_QWORD *)(v6 - 112) = a4;
  return sub_1C0301DB0();
}

void OUTLINED_FUNCTION_4_51()
{
  sub_1C003D46C();
}

uint64_t OUTLINED_FUNCTION_5_41(uint64_t a1)
{
  uint64_t v1;

  sub_1C003D798(a1);
  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 - 120))(*(_QWORD *)(v1 - 88), *(_QWORD *)(v1 - 96));
}

uint64_t OUTLINED_FUNCTION_6_43()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = type metadata accessor for ContactResolverConfig(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v1 + 24))(v0 + *(int *)(v3 + 32), *(_QWORD *)(v2 - 88), *(_QWORD *)(v2 - 96));
}

uint64_t OUTLINED_FUNCTION_7_45()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
  *(_QWORD *)(v3 - 120) = v4;
  return v4(v2, v0);
}

uint64_t OUTLINED_FUNCTION_8_34()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C003D7A8(v0, v1);
}

uint64_t OUTLINED_FUNCTION_9_39()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_10_43()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_12_32()
{
  return sub_1C0303E80();
}

uint64_t OUTLINED_FUNCTION_16_27()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v0 + *(int *)(v2 + 64));
  v6 = *v5;
  sub_1C003D788(v4);
  sub_1C003D798(v6);
  *v5 = v1;
  v5[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_19_28()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_21_23()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C003D7A8(v0, v1);
}

uint64_t OUTLINED_FUNCTION_22_26@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 80) = a1;
  return sub_1C0304960();
}

uint64_t OUTLINED_FUNCTION_23_21()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = v0;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_25_19(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_27_22()
{
  return sub_1C03048E8();
}

uint64_t OUTLINED_FUNCTION_32_20(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_40_16()
{
  return sub_1C0301DA4();
}

uint64_t OUTLINED_FUNCTION_45_12()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  *(_QWORD *)(v0 + 40) = v3;
  *(_QWORD *)(v0 + 48) = v1;
  result = type metadata accessor for ContactResolverConfig(0);
  *(_BYTE *)(v0 + *(int *)(result + 36)) = v2 & 1;
  *(_QWORD *)(v0 + *(int *)(result + 52)) = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_47_18@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 88) = a1;
  return sub_1C03048AC();
}

uint64_t OUTLINED_FUNCTION_56_12@<X0>(uint64_t (*a1)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, *(_QWORD *)(v2 - 128));
}

void OUTLINED_FUNCTION_60_4(char *a1)
{
  sub_1C025D038(*a1);
}

uint64_t OUTLINED_FUNCTION_61_6@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_70_6@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 88) = a1;
  return v1 - 88;
}

void OUTLINED_FUNCTION_84_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + v1) = v2;
}

uint64_t OUTLINED_FUNCTION_90_7(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 24) = v1;
  return result;
}

void OUTLINED_FUNCTION_94_6()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + *(int *)(v1 + 48)) = v2 & 1;
}

uint64_t destroy for DatabaseError()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DatabaseError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DatabaseError(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DatabaseError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DatabaseError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabaseError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabaseError()
{
  return &type metadata for DatabaseError;
}

uint64_t sub_1C0188368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  BOOL v18;

  if (!*(_QWORD *)(a5 + 16))
    return 0;
  OUTLINED_FUNCTION_119();
  swift_bridgeObjectRetain();
  sub_1C0303E20();
  OUTLINED_FUNCTION_17_0();
  sub_1C0304B10();
  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_1C0303E20();
    swift_bridgeObjectRelease();
  }
  v10 = OUTLINED_FUNCTION_78_0();
  v11 = -1 << *(_BYTE *)(a5 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(a5 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
    return 0;
  v13 = ~v11;
  while (1)
  {
    v14 = (_QWORD *)(*(_QWORD *)(a5 + 48) + 32 * v12);
    v16 = v14[2];
    v15 = v14[3];
    v17 = *v14 == a1 && v14[1] == a2;
    if (!v17 && (OUTLINED_FUNCTION_176() & 1) == 0)
      goto LABEL_20;
    if (!v15)
      break;
    if (a4)
    {
      v18 = v16 == a3 && v15 == a4;
      if (v18 || (OUTLINED_FUNCTION_176() & 1) != 0)
        return 1;
    }
LABEL_20:
    v12 = (v12 + 1) & v13;
    if (((*(_QWORD *)(a5 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      return 0;
  }
  if (a4)
    goto LABEL_20;
  swift_bridgeObjectRelease_n();
  return 1;
}

void sub_1C01884E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  if (*(_QWORD *)(a2 + 16))
  {
    OUTLINED_FUNCTION_119();
    sub_1C0304B10();
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_15_29();
    if ((v5 & 1) != 0 && *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v4) != a1)
    {
      OUTLINED_FUNCTION_0_67();
      if ((v8 & 1) != 0)
      {
        do
        {
          if (*(_QWORD *)(v6 + 8 * v7) == a1)
            break;
          OUTLINED_FUNCTION_0_67();
        }
        while ((v9 & 1) != 0);
      }
    }
  }
}

uint64_t sub_1C0188598(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  char v18;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1C0303EB0();
    sub_1C0304B04();
    sub_1C0303E20();
    v3 = OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_17_0();
    v4 = -1 << *(_BYTE *)(a2 + 32);
    v5 = v3 & ~v4;
    OUTLINED_FUNCTION_7_46();
    if ((v6 & 1) != 0)
    {
      v7 = OUTLINED_FUNCTION_17_26();
      if (v7 == OUTLINED_FUNCTION_20_18() && v3 == v8)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      v10 = OUTLINED_FUNCTION_176();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) != 0)
      {
LABEL_18:
        v17 = 1;
        return v17 & 1;
      }
      v11 = ~v4;
      v12 = (v5 + 1) & v11;
      OUTLINED_FUNCTION_7_46();
      if ((v13 & 1) != 0)
      {
        while (1)
        {
          v14 = OUTLINED_FUNCTION_17_26();
          if (v14 == OUTLINED_FUNCTION_20_18() && v3 == v15)
            break;
          v17 = OUTLINED_FUNCTION_176();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_17_0();
          if ((v17 & 1) == 0)
          {
            v12 = (v12 + 1) & v11;
            OUTLINED_FUNCTION_7_46();
            if ((v18 & 1) != 0)
              continue;
          }
          return v17 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  v17 = 0;
  return v17 & 1;
}

void sub_1C0188704()
{
  uint64_t v0;

  sub_1C011F2A8();
  qword_1ED7273A8 = v0;
}

void sub_1C0188728(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v12;
  char v13;
  id v14;
  uint64_t v15;

  swift_bridgeObjectRelease();
  v12 = sub_1C01887D4(a1);
  if (v12 == 92)
    v13 = 1;
  else
    v13 = v12;
  v14 = objc_msgSend((id)objc_opt_self(), sel_callStackSymbols);
  v15 = sub_1C0304138();

  *(_BYTE *)a6 = v13;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(_QWORD *)(a6 + 32) = a5;
  *(_QWORD *)(a6 + 40) = v15;
}

uint64_t sub_1C01887D4(int a1)
{
  uint64_t result;
  uint64_t v3;

  v3 = 0;
  result = 11;
  switch(a1)
  {
    case 0:
      goto LABEL_107;
    case 1:
      v3 = 1;
      goto LABEL_107;
    case 2:
      v3 = 2;
      goto LABEL_107;
    case 3:
      v3 = 3;
      goto LABEL_107;
    case 4:
      v3 = 4;
      goto LABEL_107;
    case 5:
      v3 = 5;
      goto LABEL_107;
    case 6:
      v3 = 6;
      goto LABEL_107;
    case 7:
      v3 = 7;
      goto LABEL_107;
    case 8:
      v3 = 8;
      goto LABEL_107;
    case 9:
      v3 = 9;
      goto LABEL_107;
    case 10:
      v3 = 10;
LABEL_107:
      result = v3;
      break;
    case 11:
      return result;
    case 12:
      result = 12;
      break;
    case 13:
      result = 13;
      break;
    case 14:
      result = 14;
      break;
    case 15:
      result = 15;
      break;
    case 16:
      result = 16;
      break;
    case 17:
      result = 17;
      break;
    case 18:
      result = 18;
      break;
    case 19:
      result = 19;
      break;
    case 20:
      result = 20;
      break;
    case 21:
      result = 21;
      break;
    case 22:
      result = 22;
      break;
    case 23:
      result = 23;
      break;
    case 24:
      result = 24;
      break;
    case 25:
      result = 25;
      break;
    case 26:
      result = 26;
      break;
    case 27:
      result = 27;
      break;
    case 28:
      result = 28;
      break;
    default:
      switch(a1)
      {
        case 256:
          result = 31;
          break;
        case 257:
          result = 32;
          break;
        case 258:
        case 259:
        case 260:
        case 263:
        case 265:
        case 268:
        case 269:
        case 271:
        case 272:
        case 273:
        case 274:
LABEL_133:
          result = 92;
          break;
        case 261:
          result = 33;
          break;
        case 262:
          result = 34;
          break;
        case 264:
          result = 35;
          break;
        case 266:
          result = 36;
          break;
        case 267:
          result = 37;
          break;
        case 270:
          result = 38;
          break;
        case 275:
          result = 39;
          break;
        default:
          switch(a1)
          {
            case 513:
              return 42;
            case 514:
            case 515:
            case 519:
            case 521:
            case 524:
            case 525:
            case 527:
            case 528:
            case 529:
            case 530:
              goto LABEL_133;
            case 516:
              return 43;
            case 517:
              return 44;
            case 518:
              return 45;
            case 520:
              return 46;
            case 522:
              return 47;
            case 523:
              return 48;
            case 526:
              return 49;
            case 531:
              return 50;
            default:
              switch(a1)
              {
                case 100:
                  result = 29;
                  break;
                case 101:
                  result = 30;
                  break;
                case 283:
                  result = 40;
                  break;
                case 284:
                  result = 41;
                  break;
                case 539:
                  result = 51;
                  break;
                case 769:
                  result = 52;
                  break;
                case 776:
                  result = 53;
                  break;
                case 778:
                  result = 54;
                  break;
                case 782:
                  result = 55;
                  break;
                case 787:
                  result = 56;
                  break;
                case 1032:
                  result = 57;
                  break;
                case 1034:
                  result = 58;
                  break;
                case 1038:
                  result = 59;
                  break;
                case 1043:
                  result = 60;
                  break;
                case 1288:
                  result = 61;
                  break;
                case 1290:
                  result = 62;
                  break;
                case 1294:
                  result = 63;
                  break;
                case 1299:
                  result = 64;
                  break;
                case 1544:
                  result = 65;
                  break;
                case 1546:
                  result = 66;
                  break;
                case 1555:
                  result = 67;
                  break;
                case 1802:
                  result = 68;
                  break;
                case 1811:
                  result = 69;
                  break;
                case 2058:
                  result = 70;
                  break;
                case 2067:
                  result = 71;
                  break;
                case 2314:
                  result = 72;
                  break;
                case 2323:
                  result = 73;
                  break;
                case 2570:
                  result = 74;
                  break;
                case 2579:
                  result = 75;
                  break;
                case 2826:
                  result = 76;
                  break;
                case 3082:
                  result = 77;
                  break;
                case 3338:
                  result = 78;
                  break;
                case 3594:
                  result = 79;
                  break;
                case 3850:
                  result = 80;
                  break;
                case 4106:
                  result = 81;
                  break;
                case 4362:
                  result = 82;
                  break;
                case 4618:
                  result = 83;
                  break;
                case 4874:
                  result = 84;
                  break;
                case 5130:
                  result = 85;
                  break;
                case 5386:
                  result = 86;
                  break;
                case 5642:
                  result = 87;
                  break;
                case 5898:
                  result = 88;
                  break;
                case 6154:
                  result = 89;
                  break;
                case 6410:
                  result = 90;
                  break;
                case 6666:
                  result = 91;
                  break;
                default:
                  goto LABEL_133;
              }
              break;
          }
          break;
      }
      break;
  }
  return result;
}

uint64_t sub_1C0188CBC()
{
  sub_1C0189090();
  return sub_1C0304A80();
}

uint64_t sub_1C0188CE4()
{
  sub_1C0189090();
  return sub_1C0304A74();
}

uint64_t sub_1C0188D10()
{
  uint64_t v0;
  _BYTE v2[16];
  _QWORD v3[2];

  sub_1C00F7F8C(v0 + 24, (uint64_t)v2);
  sub_1C00F7F8C((uint64_t)v2, (uint64_t)v3);
  if (v3[1])
  {
    sub_1C03046CC();
    swift_bridgeObjectRetain();
    sub_1C0303FD0();
    swift_bridgeObjectRelease();
    sub_1C0303FD0();
    sub_1C0303FD0();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1C0303FD0();
    swift_bridgeObjectRelease();
  }
  sub_1C0303FD0();
  sub_1C03047B0();
  sub_1C0303FD0();
  return 0;
}

uint64_t sub_1C0188E80()
{
  return sub_1C0188D10();
}

unint64_t sub_1C0188EB8()
{
  return 0xD000000000000014;
}

uint64_t sub_1C0188ED4()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7256A8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
  *(_QWORD *)(inited + 32) = sub_1C0303EB0();
  *(_QWORD *)(inited + 40) = v2;
  v4 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  if (!v3)
    v4 = 0;
  v5 = 0xE000000000000000;
  if (v3)
    v5 = v3;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v5;
  swift_bridgeObjectRetain();
  return sub_1C0303DB4();
}

unint64_t sub_1C0188F74()
{
  sub_1C0188EB8();
  return 0xD000000000000014;
}

uint64_t sub_1C0188F98(char a1)
{
  return dword_1C0312408[a1];
}

BOOL sub_1C0188FAC(char *a1, char *a2)
{
  return sub_1C025F620(*a1, *a2);
}

void sub_1C0188FB8()
{
  sub_1C00CE984();
}

void sub_1C0188FC0()
{
  sub_1C00C2E3C();
}

void sub_1C0188FC8()
{
  sub_1C02EA984();
}

uint64_t sub_1C0188FD0@<X0>(int *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1C01887D4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C0188FF8@<X0>(_DWORD *a1@<X8>)
{
  char *v1;
  uint64_t result;

  result = sub_1C0188F98(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1C0189024()
{
  uint64_t v0;

  sub_1C0303EB0();
  sub_1C0304B04();
  sub_1C0303E20();
  v0 = OUTLINED_FUNCTION_78_0();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_1C0189090()
{
  unint64_t result;

  result = qword_1EF5BE348;
  if (!qword_1EF5BE348)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03122F4, &type metadata for DatabaseError);
    atomic_store(result, (unint64_t *)&qword_1EF5BE348);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ResultCode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xA5)
  {
    if (a2 + 91 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 91) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 92;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x5C;
  v5 = v6 - 92;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ResultCode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 91 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 91) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xA5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xA4)
    return ((uint64_t (*)(void))((char *)&loc_1C01891A0 + 4 * byte_1C031229D[v4]))();
  *a1 = a2 + 91;
  return ((uint64_t (*)(void))((char *)sub_1C01891D4 + 4 * byte_1C0312298[v4]))();
}

uint64_t sub_1C01891D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C01891DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C01891E4);
  return result;
}

uint64_t sub_1C01891F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C01891F8);
  *(_BYTE *)result = a2 + 91;
  return result;
}

uint64_t sub_1C01891FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0189204(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResultCode()
{
  return &type metadata for ResultCode;
}

unint64_t sub_1C0189224()
{
  unint64_t result;

  result = qword_1EF5BE350;
  if (!qword_1EF5BE350)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03123E0, &type metadata for ResultCode);
    atomic_store(result, (unint64_t *)&qword_1EF5BE350);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_66()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 88) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_52()
{
  return sub_1C0303E80();
}

uint64_t OUTLINED_FUNCTION_10_44()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return v1(v3, *(_QWORD *)(v0 + 48) + v5 * v4, v2);
}

uint64_t OUTLINED_FUNCTION_12_33()
{
  return sub_1C0303DF0();
}

uint64_t OUTLINED_FUNCTION_13_31(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = *(_QWORD *)(result - 8);
  return result;
}

uint64_t OUTLINED_FUNCTION_17_26()
{
  return sub_1C0303EB0();
}

uint64_t OUTLINED_FUNCTION_20_18()
{
  return sub_1C0303EB0();
}

uint64_t UserSelection.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1C01893C8(v2, v3, v4);
}

uint64_t sub_1C01893C8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 - 1 <= 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t UserSelection.encodedPayload.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 UserSelection.init(type:encodedPayload:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  unsigned __int8 v4;
  __n128 result;

  v4 = a1[1].n128_u8[0];
  result = *a1;
  *a4 = *a1;
  a4[1].n128_u8[0] = v4;
  a4[1].n128_u64[1] = a2;
  a4[2].n128_u64[0] = a3;
  return result;
}

uint64_t destroy for UserSelection(uint64_t a1)
{
  sub_1C0189458(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0189458(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 - 1 <= 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for UserSelection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1C01893C8(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UserSelection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1C01893C8(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_1C0189458(v7, v8, v9);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UserSelection(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v7 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  sub_1C0189458(v5, v6, v7);
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UserSelection(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserSelection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserSelection()
{
  return &type metadata for UserSelection;
}

uint64_t destroy for UserSelection.SelectionType(uint64_t a1)
{
  return sub_1C0189458(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s13SiriInference13UserSelectionV13SelectionTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C01893C8(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for UserSelection.SelectionType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C01893C8(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1C0189458(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for UserSelection.SelectionType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1C0189458(v4, v5, v6);
  return a1;
}

uint64_t sub_1C0189734(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1C018973C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for UserSelection.SelectionType()
{
  return &type metadata for UserSelection.SelectionType;
}

uint64_t _s7MeasureOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1C01897A0 + 4 * byte_1C03125B1[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1C01897D4 + 4 * byte_1C03125AC[v4]))();
}

uint64_t sub_1C01897D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C01897DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C01897E4);
  return result;
}

uint64_t sub_1C01897F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C01897F8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1C01897FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0189804(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7MeasureOMa()
{
  return &_s7MeasureON;
}

unint64_t sub_1C0189824()
{
  unint64_t result;

  result = qword_1EF5BE358;
  if (!qword_1EF5BE358)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0312600, &_s7MeasureON);
    atomic_store(result, (unint64_t *)&qword_1EF5BE358);
  }
  return result;
}

uint64_t sub_1C0189860()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v3;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 24) + 24);
  os_unfair_lock_lock(v1);
  sub_1C018A368(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_1C01898BC()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void sub_1C0189904(uint64_t a1@<X8>)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t *v4;
  os_unfair_lock_s *v5;

  v3 = *(os_unfair_lock_s **)(v1 + 24);
  v4 = (uint64_t *)&v3[4];
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_1C018995C(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1C018995C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _BYTE v17[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1C0301D5C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *a1;
  swift_beginAccess();
  v12 = *(_QWORD *)(v11 + 16);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v8 + 16))(v6, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * (v13 - 1), v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
    if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) != 1)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v10, v6, v7);
      swift_beginAccess();
      v14 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      sub_1C00A9E3C((uint64_t)v10, v14);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v7);
  }
  sub_1C0044B78((uint64_t)v6, &qword_1ED728070);
  v16 = type metadata accessor for AppRankEvent(0);
  return __swift_storeEnumTagSinglePayload(a2, 1, 1, v16);
}

_QWORD *sub_1C0189B30()
{
  _QWORD *result;

  result = sub_1C0189B4C();
  qword_1EF5BE360 = (uint64_t)result;
  return result;
}

_QWORD *sub_1C0189B4C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;

  if (qword_1EF5B7EB8 != -1)
    swift_once();
  v0 = *((_QWORD *)off_1EF5BA6D0 + 6);
  type metadata accessor for AppRankerSELFRecorder();
  swift_retain();
  v1 = sub_1C02CB64C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE420);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C03084B0;
  *(_QWORD *)(v2 + 32) = sub_1C018A390;
  *(_QWORD *)(v2 + 40) = v1;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1C0189C3C;
  *(_QWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v2 + 48) = sub_1C018A3B8;
  *(_QWORD *)(v2 + 56) = v3;
  type metadata accessor for SearchTermAppsRankerDataCollector();
  result = (_QWORD *)swift_allocObject();
  result[2] = v0;
  result[3] = sub_1C0101110;
  result[4] = 0;
  result[5] = v2;
  return result;
}

void sub_1C0189C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  void *v6;
  _QWORD v7[6];

  v4 = (void *)sub_1C0303E8C();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a3;
  v7[4] = sub_1C018A3E4;
  v7[5] = v5;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 1107296256;
  v7[2] = sub_1C0189CF8;
  v7[3] = &block_descriptor_12;
  v6 = _Block_copy(v7);
  swift_bridgeObjectRetain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v6);

}

id sub_1C0189CF8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1C0071A20();
    v4 = (void *)sub_1C0303D84();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t static SearchTermAppsRankerDataCollector.shared.getter()
{
  if (qword_1EF5B7F68 != -1)
    swift_once();
  return swift_retain();
}

void sub_1C0189DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v59 = a5;
  v57 = a2;
  v58 = a4;
  v61 = a3;
  v56 = type metadata accessor for AppRankSelectionEvent(0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_6_0();
  v9 = v8 - v7;
  v10 = type metadata accessor for AppRankEvent(0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_6_0();
  v62 = v13 - v12;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
  OUTLINED_FUNCTION_12_0();
  v15 = MEMORY[0x1E0C80A78](v14);
  v54 = (uint64_t)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v63 = (uint64_t)&v53 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v53 - v19;
  v21 = sub_1C0301D5C();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_6_0();
  v25 = v24 - v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8B20);
  OUTLINED_FUNCTION_12_0();
  v27 = MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v53 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v53 - v30;
  v60 = a1;
  sub_1C003E938(a1, (uint64_t)v20, &qword_1ED728070);
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21) == 1)
  {
    sub_1C0044B78((uint64_t)v20, &qword_1ED728070);
    v32 = v64;
    sub_1C0189904((uint64_t)v31);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v25, v20, v21);
    v33 = v64;
    v34 = sub_1C0189860();
    sub_1C00A9E3C(v25, v34);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v25, v21);
    v32 = v33;
  }
  sub_1C003E938((uint64_t)v31, (uint64_t)v29, &qword_1EF5B8B20);
  if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v10) == 1)
  {
    sub_1C0044B78((uint64_t)v29, &qword_1EF5B8B20);
    if (qword_1ED728430 != -1)
      swift_once();
    v35 = sub_1C0303B98();
    __swift_project_value_buffer(v35, (uint64_t)qword_1ED729650);
    v36 = v63;
    sub_1C003E938(v60, v63, &qword_1ED728070);
    v37 = sub_1C0303B80();
    v38 = sub_1C03042F4();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v66 = swift_slowAlloc();
      *(_DWORD *)v39 = 136315138;
      sub_1C003E938(v36, v54, &qword_1ED728070);
      v40 = sub_1C0303EF8();
      v65 = sub_1C003E6D8(v40, v41, &v66);
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      sub_1C0044B78(v36, &qword_1ED728070);
      _os_log_impl(&dword_1C0039000, v37, v38, "SearchTermAppsRankerDataCollector could not find event for ID %s", v39, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }

    sub_1C0044B78(v36, &qword_1ED728070);
  }
  else
  {
    v42 = (uint64_t)v29;
    v43 = v62;
    sub_1C018A2E8(v42, v62);
    v44 = sub_1C0104624(v43, v9);
    v45 = v56;
    (*(void (**)(uint64_t))(v32 + 24))(v44);
    v46 = (_QWORD *)(v9 + *(int *)(v45 + 24));
    v47 = v61;
    *v46 = v57;
    v46[1] = v47;
    v48 = v9 + *(int *)(v45 + 28);
    *(_QWORD *)v48 = v58;
    *(_BYTE *)(v48 + 8) = v59 & 1;
    v49 = *(_QWORD *)(v32 + 40);
    v50 = *(_QWORD *)(v49 + 16);
    if (v50)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v51 = v49 + 40;
      do
      {
        v52 = *(void (**)(uint64_t))(v51 - 8);
        swift_retain();
        v52(v9);
        swift_release();
        v51 += 16;
        --v50;
      }
      while (v50);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_1C003DD84(v9, type metadata accessor for AppRankSelectionEvent);
    sub_1C003DD84(v43, type metadata accessor for AppRankEvent);
  }
  sub_1C0044B78((uint64_t)v31, &qword_1EF5B8B20);
}

uint64_t SearchTermAppsRankerDataCollector.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SearchTermAppsRankerDataCollector.__deallocating_deinit()
{
  SearchTermAppsRankerDataCollector.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C018A2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppRankEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SearchTermAppsRankerDataCollector()
{
  return objc_opt_self();
}

uint64_t method lookup function for SearchTermAppsRankerDataCollector()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SearchTermAppsRankerDataCollector.appSelectedForSearchTerm(rankEventId:selectedAppBundleId:numberOfAppsShown:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v5 + 112))(a1, a2, a3, a4, a5 & 1);
}

uint64_t sub_1C018A368@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1C01898BC();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1C018A394()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C018A3B8(uint64_t a1)
{
  uint64_t v1;

  return sub_1C02CE760(a1, *(void (**)(unint64_t, unint64_t, uint64_t))(v1 + 16));
}

uint64_t sub_1C018A3C0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C018A3E4()
{
  return swift_bridgeObjectRetain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

NSObject __swiftcall CoreAnalyticsValue.toNSObject()()
{
  NSObject result;

  __asm { BR              X10 }
  return result;
}

id sub_1C018A438()
{
  uint64_t v0;

  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v0);
}

id sub_1C018A464()
{
  double v0;

  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v0);
}

id sub_1C018A494()
{
  char v0;

  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, v0 & 1);
}

uint64_t sub_1C018A4C4()
{
  OUTLINED_FUNCTION_8_36();
  return sub_1C0303E8C();
}

uint64_t sub_1C018A4DC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v0 = OUTLINED_FUNCTION_8_36();
  sub_1C00C83C0(v0, v1);
  OUTLINED_FUNCTION_8_36();
  v2 = sub_1C0301BE8();
  v3 = OUTLINED_FUNCTION_8_36();
  sub_1C00FA494(v3, v4, 4);
  return v2;
}

uint64_t sub_1C018A514()
{
  uint64_t v0;
  unsigned int v1;

  sub_1C030484C();
  OUTLINED_FUNCTION_10_2();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_1C018A560(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65756C6176;
  else
    return 1701869940;
}

uint64_t sub_1C018A58C()
{
  unint64_t v0;

  sub_1C030484C();
  OUTLINED_FUNCTION_10_2();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

void sub_1C018A5CC(char *a1, char *a2)
{
  sub_1C025DFDC(*a1, *a2);
}

void sub_1C018A5D8()
{
  sub_1C00CE9C0();
}

uint64_t sub_1C018A5E0()
{
  return sub_1C00C2194();
}

void sub_1C018A5E8()
{
  sub_1C02EAE08();
}

uint64_t sub_1C018A5F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C018A514();
  *a1 = result;
  return result;
}

uint64_t sub_1C018A61C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1C018A560(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C018A644()
{
  char *v0;

  return sub_1C018A560(*v0);
}

uint64_t sub_1C018A64C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C018A55C();
  *a1 = result;
  return result;
}

void sub_1C018A670(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1C018A67C()
{
  sub_1C018A8F8();
  return sub_1C0304BAC();
}

uint64_t sub_1C018A6A4()
{
  sub_1C018A8F8();
  return sub_1C0304BB8();
}

uint64_t CoreAnalyticsValue.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE428);
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C018A8F8();
  sub_1C0304B88();
  if (!v1)
  {
    sub_1C03048AC();
    v5 = (char *)sub_1C018A7F4 + 4 * byte_1C031269A[sub_1C018A58C()];
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

void sub_1C018A7F4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  OUTLINED_FUNCTION_1_56();
  v3 = sub_1C03048D0();
  OUTLINED_FUNCTION_10_5();
  if (!v0)
  {
    *(_QWORD *)v1 = v3;
    *(_QWORD *)(v1 + 8) = 0;
    *(_BYTE *)(v1 + 16) = v2;
  }
  JUMPOUT(0x1C018A7A0);
}

void sub_1C018A8CC()
{
  sub_1C018A934();
  swift_allocError();
  swift_willThrow();
  JUMPOUT(0x1C018A79CLL);
}

unint64_t sub_1C018A8F8()
{
  unint64_t result;

  result = qword_1EF5BE430;
  if (!qword_1EF5BE430)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0312918, &unk_1E7999138);
    atomic_store(result, (unint64_t *)&qword_1EF5BE430);
  }
  return result;
}

unint64_t sub_1C018A934()
{
  unint64_t result;

  result = qword_1EF5BE438;
  if (!qword_1EF5BE438)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03128D8, &unk_1E79990A8);
    atomic_store(result, (unint64_t *)&qword_1EF5BE438);
  }
  return result;
}

unint64_t sub_1C018A970()
{
  unint64_t result;

  result = qword_1EF5BE440;
  if (!qword_1EF5BE440)
  {
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EF5BE440);
  }
  return result;
}

void CoreAnalyticsValue.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE448);
  MEMORY[0x1E0C80A78](v3);
  v4 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C018A8F8();
  sub_1C0304BA0();
  __asm { BR              X9 }
}

uint64_t sub_1C018AA6C()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 96) = 1;
  OUTLINED_FUNCTION_3_67();
  sub_1C0304984();
  if (!v0)
  {
    OUTLINED_FUNCTION_5_42();
    OUTLINED_FUNCTION_28_16();
  }
  return OUTLINED_FUNCTION_4_53();
}

void sub_1C018AB88()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 96) = v2;
  *(_QWORD *)(v3 - 88) = v0;
  *(_BYTE *)(v3 - 65) = 1;
  sub_1C00C83C0(v2, v0);
  sub_1C018ABFC();
  OUTLINED_FUNCTION_3_67();
  sub_1C030499C();
  if (!v1)
  {
    OUTLINED_FUNCTION_5_42();
    OUTLINED_FUNCTION_28_16();
  }
  OUTLINED_FUNCTION_4_53();
  sub_1C00FA494(v2, v0, 4);
  JUMPOUT(0x1C018AB64);
}

unint64_t sub_1C018ABFC()
{
  unint64_t result;

  result = qword_1EF5BE450;
  if (!qword_1EF5BE450)
  {
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EF5BE450);
  }
  return result;
}

void static CoreAnalyticsValue.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X9 }
}

BOOL sub_1C018AC78()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  char v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  if (v4)
  {
    sub_1C00FA470(v0, v1, v4);
    v10 = OUTLINED_FUNCTION_7_47();
    v12 = OUTLINED_FUNCTION_2_58(v10, v11, v3);
    sub_1C00FA494(v12, v13, v4);
    return 0;
  }
  else
  {
    v5 = OUTLINED_FUNCTION_7_47();
    v7 = OUTLINED_FUNCTION_2_58(v5, v6, 0);
    sub_1C00FA494(v7, v8, 0);
    return v2 == v0;
  }
}

uint64_t sub_1C018AE08(_QWORD *a1)
{
  return CoreAnalyticsValue.init(from:)(a1);
}

void sub_1C018AE1C(_QWORD *a1)
{
  CoreAnalyticsValue.encode(to:)(a1);
}

uint64_t destroy for CoreAnalyticsValue(uint64_t a1)
{
  return sub_1C00FA494(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s13SiriInference18CoreAnalyticsValueOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C00FA470(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CoreAnalyticsValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C00FA470(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1C00FA494(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CoreAnalyticsValue(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1C00FA494(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreAnalyticsValue(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 4)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreAnalyticsValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

void type metadata accessor for CoreAnalyticsValue()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C018AFB8(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C018AFF8 + 4 * byte_1C03126AA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C018B018 + 4 * byte_1C03126AF[v4]))();
}

_BYTE *sub_1C018AFF8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C018B018(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C018B020(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C018B028(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C018B030(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C018B038(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for CoreAnalyticsValue.DecoderError()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C018B050(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C018B09C + 4 * byte_1C03126B9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C018B0D0 + 4 * byte_1C03126B4[v4]))();
}

uint64_t sub_1C018B0D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C018B0D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C018B0E0);
  return result;
}

uint64_t sub_1C018B0EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C018B0F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C018B0F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C018B100(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for CoreAnalyticsValue.CodingKeys()
{
  OUTLINED_FUNCTION_17_2();
}

unint64_t sub_1C018B11C()
{
  unint64_t result;

  result = qword_1EF5BE458;
  if (!qword_1EF5BE458)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0312848, &unk_1E7999138);
    atomic_store(result, (unint64_t *)&qword_1EF5BE458);
  }
  return result;
}

unint64_t sub_1C018B15C()
{
  unint64_t result;

  result = qword_1EF5BE460;
  if (!qword_1EF5BE460)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03128B0, &unk_1E79990A8);
    atomic_store(result, (unint64_t *)&qword_1EF5BE460);
  }
  return result;
}

unint64_t sub_1C018B19C()
{
  unint64_t result;

  result = qword_1EF5BE468;
  if (!qword_1EF5BE468)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0312780, &unk_1E7999138);
    atomic_store(result, (unint64_t *)&qword_1EF5BE468);
  }
  return result;
}

unint64_t sub_1C018B1DC()
{
  unint64_t result;

  result = qword_1EF5BE470;
  if (!qword_1EF5BE470)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03127A8, &unk_1E7999138);
    atomic_store(result, (unint64_t *)&qword_1EF5BE470);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_56()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 96) = 1;
  return v0 - 96;
}

uint64_t OUTLINED_FUNCTION_2_58(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v3;

  sub_1C00FA494(a1, a2, a3);
  return v3;
}

uint64_t OUTLINED_FUNCTION_4_53()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 112) + 8))(v1, v0);
}

void OUTLINED_FUNCTION_5_42()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 96) = 0;
}

uint64_t OUTLINED_FUNCTION_7_47()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_8_36()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_9_41()
{
  uint64_t v0;

  return v0;
}

uint64_t SlotResolutionTask.eraseToAnySlotResolutionTask()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  return sub_1C018B328((uint64_t)v5, a1, a2);
}

uint64_t sub_1C018B328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t *boxed_opaque_existential_0;

  swift_getDynamicType();
  swift_getMetatypeMetadata();
  *a3 = sub_1C0303EF8();
  a3[1] = v6;
  a3[5] = a2;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a3 + 2);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(boxed_opaque_existential_0, a1, a2);
}

uint64_t dispatch thunk of UnarySlotResolutionTask.run(withAlreadyResolvedSlots:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of NArySlotResolutionTask.run(withAlreadyResolvedSlots:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t destroy for AnySlotResolutionTask(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0Tm(a1 + 16);
}

_QWORD *initializeWithCopy for AnySlotResolutionTask(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void (*v6)(_QWORD *, _QWORD *, uint64_t);

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2 + 2;
  v5 = a2[5];
  a1[5] = v5;
  v6 = **(void (***)(_QWORD *, _QWORD *, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  v6(a1 + 2, v4, v5);
  return a1;
}

_QWORD *assignWithCopy for AnySlotResolutionTask(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_0(a1 + 2, a2 + 2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for AnySlotResolutionTask(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for AnySlotResolutionTask(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnySlotResolutionTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnySlotResolutionTask()
{
  return &type metadata for AnySlotResolutionTask;
}

uint64_t sub_1C018B6F8()
{
  sub_1C018B80C();
  return sub_1C0304BAC();
}

uint64_t sub_1C018B720()
{
  sub_1C018B80C();
  return sub_1C0304BB8();
}

uint64_t LocationResolutionSpec.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE478);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C018B80C();
  sub_1C0304BA0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1C018B80C()
{
  unint64_t result;

  result = qword_1EF5BE480;
  if (!qword_1EF5BE480)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0312AD4, &type metadata for LocationResolutionSpec.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE480);
  }
  return result;
}

uint64_t LocationResolutionSpec.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

uint64_t sub_1C018B86C(uint64_t a1)
{
  return LocationResolutionSpec.init(from:)(a1);
}

uint64_t sub_1C018B880(_QWORD *a1)
{
  return LocationResolutionSpec.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for LocationResolutionSpec()
{
  return &type metadata for LocationResolutionSpec;
}

ValueMetadata *type metadata accessor for LocationResolutionSpec.CodingKeys()
{
  return &type metadata for LocationResolutionSpec.CodingKeys;
}

unint64_t sub_1C018B8B8()
{
  unint64_t result;

  result = qword_1EF5BE488;
  if (!qword_1EF5BE488)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0312A84, &type metadata for LocationResolutionSpec.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE488);
  }
  return result;
}

unint64_t sub_1C018B8F8()
{
  unint64_t result;

  result = qword_1EF5BE490;
  if (!qword_1EF5BE490)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0312AAC, &type metadata for LocationResolutionSpec.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE490);
  }
  return result;
}

uint64_t SiriRemembersV1API.AggregationCategory.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_4_54 + 4
                                                                                                * byte_1C0312B30[*v0]))(7105633, 0xE300000000000000);
}

unint64_t sub_1C018B974()
{
  return 0xD000000000000014;
}

uint64_t SiriRemembersV1API.AggregationCategory.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_4_54_0
                                                            + 4 * byte_1C0312B38[*v0]))(7105633, 0xE300000000000000);
}

unint64_t sub_1C018B9D0()
{
  return 0xD000000000000014;
}

uint64_t SiriRemembersV1API.AggregationCategory.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1C030484C();
  result = swift_bridgeObjectRelease();
  v4 = 8;
  if (v2 < 8)
    v4 = v2;
  *a1 = v4;
  return result;
}

void sub_1C018BA44(char *a1)
{
  sub_1C025F6B4(*a1);
}

void sub_1C018BA50()
{
  unsigned __int8 *v0;

  sub_1C00CE9CC(*v0);
}

void sub_1C018BA58(uint64_t a1)
{
  char *v1;

  sub_1C00C2E9C(a1, *v1);
}

void sub_1C018BA60(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EA96C(a1, *v1);
}

uint64_t sub_1C018BA68@<X0>(char *a1@<X8>)
{
  return SiriRemembersV1API.AggregationCategory.init(rawValue:)(a1);
}

uint64_t sub_1C018BA74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = SiriRemembersV1API.AggregationCategory.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C018BA98()
{
  sub_1C018BC50();
  return sub_1C03040F0();
}

uint64_t sub_1C018BAF4()
{
  sub_1C018BC50();
  return sub_1C03040CC();
}

unint64_t sub_1C018BB48()
{
  unint64_t result;

  result = qword_1EF5BE498;
  if (!qword_1EF5BE498)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for SiriRemembersV1API.AggregationCategory, &type metadata for SiriRemembersV1API.AggregationCategory);
    atomic_store(result, (unint64_t *)&qword_1EF5BE498);
  }
  return result;
}

uint64_t _s19AggregationCategoryOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1C018BBD0 + 4 * byte_1C0312B45[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1C018BC04 + 4 * byte_1C0312B40[v4]))();
}

uint64_t sub_1C018BC04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C018BC0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C018BC14);
  return result;
}

uint64_t sub_1C018BC20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C018BC28);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1C018BC2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C018BC34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SiriRemembersV1API.AggregationCategory()
{
  return &type metadata for SiriRemembersV1API.AggregationCategory;
}

unint64_t sub_1C018BC50()
{
  unint64_t result;

  result = qword_1EF5BE4A0;
  if (!qword_1EF5BE4A0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for SiriRemembersV1API.AggregationCategory, &type metadata for SiriRemembersV1API.AggregationCategory);
    atomic_store(result, (unint64_t *)&qword_1EF5BE4A0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_68()
{
  return 0x6574616E6F447369;
}

uint64_t OUTLINED_FUNCTION_1_57()
{
  return 0x6F69746365726964;
}

uint64_t OUTLINED_FUNCTION_2_59()
{
  return 0x6449656C646E7562;
}

uint64_t OUTLINED_FUNCTION_3_68()
{
  return 0x737574617473;
}

uint64_t OUTLINED_FUNCTION_4_54()
{
  return 0x6E69616D6F64;
}

uint64_t OUTLINED_FUNCTION_5_43()
{
  return 1651664246;
}

_QWORD *sub_1C018BD1C(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  char *v30;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *v9 = *((_BYTE *)a2 + v8);
    v11 = *(_QWORD *)((char *)a2 + v8 + 16);
    *((_QWORD *)v9 + 1) = *(_QWORD *)((char *)a2 + v8 + 8);
    *((_QWORD *)v9 + 2) = v11;
    v12 = *(_QWORD *)((char *)a2 + v8 + 32);
    *((_QWORD *)v9 + 3) = *(_QWORD *)((char *)a2 + v8 + 24);
    *((_QWORD *)v9 + 4) = v12;
    v13 = *(_QWORD *)((char *)a2 + v8 + 48);
    *((_QWORD *)v9 + 5) = *(_QWORD *)((char *)a2 + v8 + 40);
    *((_QWORD *)v9 + 6) = v13;
    v14 = (int *)type metadata accessor for PrivatizedContactResolverConfig(0);
    v15 = v14[8];
    v29 = &v10[v15];
    v30 = &v9[v15];
    v16 = sub_1C0301DB0();
    v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28(v30, v29, v16);
    v9[v14[9]] = v10[v14[9]];
    *(_QWORD *)&v9[v14[10]] = *(_QWORD *)&v10[v14[10]];
    v9[v14[11]] = v10[v14[11]];
    *(_QWORD *)&v9[v14[12]] = *(_QWORD *)&v10[v14[12]];
    v9[v14[13]] = v10[v14[13]];
    v17 = v14[14];
    v18 = &v9[v17];
    v19 = &v10[v17];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = a3[7];
    *(_QWORD *)((char *)v4 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    v22 = (char *)v4 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_1C0301CFC();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25(v22, v23, v24);
  }
  return v4;
}

_QWORD *sub_1C018BED4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (_QWORD *)((char *)a2 + v6);
  *v7 = *((_BYTE *)a2 + v6);
  *((_QWORD *)v7 + 1) = *(_QWORD *)((char *)a2 + v6 + 8);
  *((_QWORD *)v7 + 2) = *(_QWORD *)((char *)a2 + v6 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v7 + 3) = v8[3];
  *((_QWORD *)v7 + 4) = v8[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v7 + 5) = v8[5];
  *((_QWORD *)v7 + 6) = v8[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (int *)type metadata accessor for PrivatizedContactResolverConfig(0);
  v10 = v9[8];
  v11 = &v7[v10];
  v12 = (char *)v8 + v10;
  v13 = sub_1C0301DB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v7[v9[9]] = *((_BYTE *)v8 + v9[9]);
  *(_QWORD *)&v7[v9[10]] = *(_QWORD *)((char *)v8 + v9[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v9[11]] = *((_BYTE *)v8 + v9[11]);
  *(_QWORD *)&v7[v9[12]] = *(_QWORD *)((char *)v8 + v9[12]);
  v7[v9[13]] = *((_BYTE *)v8 + v9[13]);
  v14 = v9[14];
  v15 = &v7[v14];
  v16 = (_QWORD *)((char *)v8 + v14);
  *(_QWORD *)v15 = *v16;
  *((_QWORD *)v15 + 1) = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_1C0301CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

_OWORD *sub_1C018C0A0(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *v7 = *((_BYTE *)a2 + v6);
  *(_OWORD *)(v7 + 8) = *(_OWORD *)((char *)a2 + v6 + 8);
  *(_OWORD *)(v7 + 24) = *(_OWORD *)((char *)a2 + v6 + 24);
  *(_OWORD *)(v7 + 40) = *(_OWORD *)((char *)a2 + v6 + 40);
  v9 = (int *)type metadata accessor for PrivatizedContactResolverConfig(0);
  v10 = v9[8];
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_1C0301DB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v7[v9[9]] = v8[v9[9]];
  *(_QWORD *)&v7[v9[10]] = *(_QWORD *)&v8[v9[10]];
  v7[v9[11]] = v8[v9[11]];
  *(_QWORD *)&v7[v9[12]] = *(_QWORD *)&v8[v9[12]];
  v7[v9[13]] = v8[v9[13]];
  *(_OWORD *)&v7[v9[14]] = *(_OWORD *)&v8[v9[14]];
  v14 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1C0301CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

_QWORD *sub_1C018C1C8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (_QWORD *)((char *)a2 + v7);
  *v8 = *((_BYTE *)a2 + v7);
  v10 = *(_QWORD *)((char *)a2 + v7 + 16);
  *((_QWORD *)v8 + 1) = *(_QWORD *)((char *)a2 + v7 + 8);
  *((_QWORD *)v8 + 2) = v10;
  swift_bridgeObjectRelease();
  v11 = v9[4];
  *((_QWORD *)v8 + 3) = v9[3];
  *((_QWORD *)v8 + 4) = v11;
  swift_bridgeObjectRelease();
  v12 = v9[6];
  *((_QWORD *)v8 + 5) = v9[5];
  *((_QWORD *)v8 + 6) = v12;
  swift_bridgeObjectRelease();
  v13 = (int *)type metadata accessor for PrivatizedContactResolverConfig(0);
  v14 = v13[8];
  v15 = &v8[v14];
  v16 = (char *)v9 + v14;
  v17 = sub_1C0301DB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  v8[v13[9]] = *((_BYTE *)v9 + v13[9]);
  *(_QWORD *)&v8[v13[10]] = *(_QWORD *)((char *)v9 + v13[10]);
  swift_bridgeObjectRelease();
  v8[v13[11]] = *((_BYTE *)v9 + v13[11]);
  *(_QWORD *)&v8[v13[12]] = *(_QWORD *)((char *)v9 + v13[12]);
  v8[v13[13]] = *((_BYTE *)v9 + v13[13]);
  v18 = v13[14];
  v19 = &v8[v18];
  v20 = (_QWORD *)((char *)v9 + v18);
  v22 = *v20;
  v21 = v20[1];
  *(_QWORD *)v19 = v22;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  v23 = a3[7];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_1C0301CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t sub_1C018C334()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C018C340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for PrivatizedContactResolverConfig(0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v9 = sub_1C0301CFC();
      v10 = *(int *)(a3 + 28);
    }
    return __swift_getEnumTagSinglePayload(a1 + v10, a2, v9);
  }
}

uint64_t sub_1C018C3D8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C018C3E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for PrivatizedContactResolverConfig(0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = sub_1C0301CFC();
      v10 = *(int *)(a4 + 28);
    }
    return __swift_storeEnumTagSinglePayload(v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C018C478()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for PrivatizedContactResolverConfig(319);
  if (v1 <= 0x3F)
  {
    result = sub_1C0301CFC();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C018C514(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x7265766C6F736572 && a2 == 0xEC000000656D614ELL;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6769666E6F63 && a2 == 0xE600000000000000;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x44656D69546E7572 && a2 == 0xEB00000000617461;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 1702125924 && a2 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1C0304A08();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1C018C6D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v16 = sub_1C0301CFC();
  v14 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_6_0();
  v17 = v4 - v3;
  v18 = type metadata accessor for PrivatizedContactResolverConfig(0);
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_6_0();
  v7 = v6 - v5;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE4A8);
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_6_0();
  v8 = (int *)type metadata accessor for RunTimeDataRecord();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_6_0();
  v11 = (uint64_t *)(v10 - v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C00693A0();
  sub_1C0304B88();
  if (v20)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  *v11 = sub_1C03048AC();
  v11[1] = v12;
  sub_1C0068358(&qword_1EF5BE4B8, type metadata accessor for PrivatizedContactResolverConfig, (uint64_t)&unk_1C03120D4);
  sub_1C03048E8();
  sub_1C018CAE0(v7, (uint64_t)v11 + v8[5]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE4C0);
  sub_1C0069F70(&qword_1EF5BE4C8, &qword_1EF5BE4D0, (uint64_t)&unk_1C030FA50, MEMORY[0x1E0DEAF40]);
  sub_1C03048E8();
  *(uint64_t *)((char *)v11 + v8[6]) = v21;
  sub_1C0068358(&qword_1ED725908, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1C03048E8();
  OUTLINED_FUNCTION_3_69();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))((char *)v11 + v8[7], v17, v16);
  sub_1C018CB24((uint64_t)v11, a2);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return sub_1C0045840((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for RunTimeDataRecord);
}

uint64_t sub_1C018CA58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C018C514(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C018CA7C()
{
  sub_1C00693A0();
  return sub_1C0304BAC();
}

uint64_t sub_1C018CAA4()
{
  sub_1C00693A0();
  return sub_1C0304BB8();
}

uint64_t sub_1C018CACC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C018C6D8(a1, a2);
}

uint64_t sub_1C018CAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PrivatizedContactResolverConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C018CB24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RunTimeDataRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for RunTimeDataRecord.CodingKeys()
{
  return &type metadata for RunTimeDataRecord.CodingKeys;
}

uint64_t OUTLINED_FUNCTION_0_69()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 160) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_3_69()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 104), v1);
}

SiriInference::NeighborhoodPlaceName::Prefix_optional __swiftcall NeighborhoodPlaceName.Prefix.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (SiriInference::NeighborhoodPlaceName::Prefix_optional)sub_1C018CD28(v1);
}

uint64_t NeighborhoodPlaceName.Prefix.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C018CBD8 + 4 * byte_1C0312E60[*v0]))(28265, 0xE200000000000000);
}

uint64_t sub_1C018CBD8()
{
  return 0x7463697274736964;
}

uint64_t sub_1C018CBF0()
{
  return 1918985582;
}

uint64_t sub_1C018CC00()
{
  return 0x726F62686769656ELL;
}

uint64_t sub_1C018CC20(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C025DA24(*a1, *a2);
}

void sub_1C018CC2C()
{
  unsigned __int8 *v0;

  sub_1C00CE9D8(*v0);
}

uint64_t sub_1C018CC34(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1C00C1B5C(a1, *v1);
}

void sub_1C018CC3C(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EB164(a1, *v1);
}

SiriInference::NeighborhoodPlaceName::Prefix_optional sub_1C018CC44(Swift::String *a1)
{
  return NeighborhoodPlaceName.Prefix.init(rawValue:)(*a1);
}

uint64_t sub_1C018CC50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = NeighborhoodPlaceName.Prefix.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C018CC74()
{
  sub_1C018D728();
  return sub_1C03040F0();
}

uint64_t sub_1C018CCD0()
{
  sub_1C018D728();
  return sub_1C03040CC();
}

SiriInference::NeighborhoodPlaceName::Suffix_optional __swiftcall NeighborhoodPlaceName.Suffix.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (SiriInference::NeighborhoodPlaceName::Suffix_optional)sub_1C018CD28(v1);
}

uint64_t sub_1C018CD28@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1C030484C();
  result = swift_bridgeObjectRelease();
  v4 = 4;
  if (v2 < 4)
    v4 = v2;
  *a1 = v4;
  return result;
}

SiriInference::NeighborhoodPlaceName::Suffix_optional sub_1C018CD7C(Swift::String *a1)
{
  return NeighborhoodPlaceName.Suffix.init(rawValue:)(*a1);
}

uint64_t sub_1C018CD88()
{
  sub_1C018D6EC();
  return sub_1C03040F0();
}

uint64_t sub_1C018CDE4()
{
  sub_1C018D6EC();
  return sub_1C03040CC();
}

uint64_t NeighborhoodPlaceName.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void NeighborhoodPlaceName.prefix.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

void NeighborhoodPlaceName.suffix.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

SiriInference::NeighborhoodPlaceName __swiftcall NeighborhoodPlaceName.init(name:prefix:suffix:)(Swift::String name, SiriInference::NeighborhoodPlaceName::Prefix_optional prefix, SiriInference::NeighborhoodPlaceName::Suffix_optional suffix)
{
  uint64_t v3;
  char v4;
  char v5;
  SiriInference::NeighborhoodPlaceName result;

  v4 = *(_BYTE *)prefix.value;
  v5 = *(_BYTE *)suffix.value;
  *(Swift::String *)v3 = name;
  *(_BYTE *)(v3 + 16) = v4;
  *(_BYTE *)(v3 + 17) = v5;
  result.name = name;
  result.prefix = prefix;
  return result;
}

uint64_t static NeighborhoodPlaceName.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a1 + 17);
  v4 = *(unsigned __int8 *)(a2 + 16);
  v5 = *(unsigned __int8 *)(a2 + 17);
  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v6 || (v7 = sub_1C0304A08(), result = 0, (v7 & 1) != 0))
  {
    if ((_DWORD)v2 == 4)
    {
      if ((_DWORD)v4 != 4)
        return 0;
    }
    else if ((_DWORD)v4 == 4 || (sub_1C025DA24(v2, v4) & 1) == 0)
    {
      return 0;
    }
    result = (_DWORD)v5 == 4 && (_DWORD)v3 == 4;
    if ((_DWORD)v3 != 4 && (_DWORD)v5 != 4)
      return sub_1C025DA24(v3, v5);
  }
  return result;
}

uint64_t sub_1C018CF54()
{
  sub_1C018D2D0();
  return sub_1C0304BAC();
}

uint64_t sub_1C018CF7C()
{
  sub_1C018D2D0();
  return sub_1C0304BB8();
}

void NeighborhoodPlaceName.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  int v15;
  int v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE510);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 *)(v1 + 16);
  v15 = *(unsigned __int8 *)(v1 + 17);
  v16 = v8;
  v9 = a1[3];
  v10 = a1;
  v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_1C018D2D0();
  sub_1C0304BA0();
  v21 = 0;
  sub_1C0304960();
  if (!v2)
  {
    v13 = v15;
    v20 = v16;
    v19 = 1;
    sub_1C018D30C();
    OUTLINED_FUNCTION_2_30();
    v18 = v13;
    v17 = 2;
    sub_1C018D348();
    OUTLINED_FUNCTION_2_30();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  OUTLINED_FUNCTION_28_0();
}

void NeighborhoodPlaceName.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE530);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C018D2D0();
  sub_1C0304B88();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    v6 = sub_1C03048AC();
    v8 = v7;
    v9 = sub_1C018D384();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_21();
    if (v9)
    {
      OUTLINED_FUNCTION_3_27();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C018D3C0();
      OUTLINED_FUNCTION_4_21();
      OUTLINED_FUNCTION_3_27();
      *(_QWORD *)a2 = v6;
      *(_QWORD *)(a2 + 8) = v8;
      *(_BYTE *)(a2 + 16) = v11;
      *(_BYTE *)(a2 + 17) = v10;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28_0();
}

void sub_1C018D2A4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  NeighborhoodPlaceName.init(from:)(a1, a2);
}

void sub_1C018D2B8(_QWORD *a1)
{
  NeighborhoodPlaceName.encode(to:)(a1);
}

unint64_t sub_1C018D2D0()
{
  unint64_t result;

  result = qword_1EF5BE518;
  if (!qword_1EF5BE518)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03131EC, &type metadata for NeighborhoodPlaceName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE518);
  }
  return result;
}

unint64_t sub_1C018D30C()
{
  unint64_t result;

  result = qword_1EF5BE520;
  if (!qword_1EF5BE520)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for NeighborhoodPlaceName.Prefix, &type metadata for NeighborhoodPlaceName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5BE520);
  }
  return result;
}

unint64_t sub_1C018D348()
{
  unint64_t result;

  result = qword_1EF5BE528;
  if (!qword_1EF5BE528)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for NeighborhoodPlaceName.Suffix, &type metadata for NeighborhoodPlaceName.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5BE528);
  }
  return result;
}

unint64_t sub_1C018D384()
{
  unint64_t result;

  result = qword_1EF5BE538;
  if (!qword_1EF5BE538)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for NeighborhoodPlaceName.Prefix, &type metadata for NeighborhoodPlaceName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5BE538);
  }
  return result;
}

unint64_t sub_1C018D3C0()
{
  unint64_t result;

  result = qword_1EF5BE540;
  if (!qword_1EF5BE540)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for NeighborhoodPlaceName.Suffix, &type metadata for NeighborhoodPlaceName.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5BE540);
  }
  return result;
}

unint64_t sub_1C018D400()
{
  unint64_t result;

  result = qword_1EF5BE548;
  if (!qword_1EF5BE548)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for NeighborhoodPlaceName.Prefix, &type metadata for NeighborhoodPlaceName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5BE548);
  }
  return result;
}

unint64_t sub_1C018D440()
{
  unint64_t result;

  result = qword_1EF5BE550;
  if (!qword_1EF5BE550)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for NeighborhoodPlaceName.Suffix, &type metadata for NeighborhoodPlaceName.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5BE550);
  }
  return result;
}

void type metadata accessor for NeighborhoodPlaceName()
{
  OUTLINED_FUNCTION_17_2();
}

void type metadata accessor for NeighborhoodPlaceName.Prefix()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t _s13SiriInference21NeighborhoodPlaceNameV6PrefixOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C018D4E4 + 4 * byte_1C0312E69[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C018D518 + 4 * byte_1C0312E64[v4]))();
}

uint64_t sub_1C018D518(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C018D520(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C018D528);
  return result;
}

uint64_t sub_1C018D534(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C018D53CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C018D540(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C018D548(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for NeighborhoodPlaceName.Suffix()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t storeEnumTagSinglePayload for NeighborhoodPlaceName.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C018D5AC + 4 * byte_1C0312E73[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C018D5E0 + 4 * byte_1C0312E6E[v4]))();
}

uint64_t sub_1C018D5E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C018D5E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C018D5F0);
  return result;
}

uint64_t sub_1C018D5FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C018D604);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C018D608(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C018D610(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NeighborhoodPlaceName.CodingKeys()
{
  return &type metadata for NeighborhoodPlaceName.CodingKeys;
}

unint64_t sub_1C018D630()
{
  unint64_t result;

  result = qword_1EF5BE558;
  if (!qword_1EF5BE558)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03131C4, &type metadata for NeighborhoodPlaceName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE558);
  }
  return result;
}

unint64_t sub_1C018D670()
{
  unint64_t result;

  result = qword_1EF5BE560;
  if (!qword_1EF5BE560)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0313134, &type metadata for NeighborhoodPlaceName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE560);
  }
  return result;
}

unint64_t sub_1C018D6B0()
{
  unint64_t result;

  result = qword_1EF5BE568;
  if (!qword_1EF5BE568)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031315C, &type metadata for NeighborhoodPlaceName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE568);
  }
  return result;
}

unint64_t sub_1C018D6EC()
{
  unint64_t result;

  result = qword_1EF5BE570;
  if (!qword_1EF5BE570)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for NeighborhoodPlaceName.Suffix, &type metadata for NeighborhoodPlaceName.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5BE570);
  }
  return result;
}

unint64_t sub_1C018D728()
{
  unint64_t result;

  result = qword_1EF5BE578;
  if (!qword_1EF5BE578)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for NeighborhoodPlaceName.Prefix, &type metadata for NeighborhoodPlaceName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5BE578);
  }
  return result;
}

void sub_1C018D76C(unint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  if (a1 >> 62)
    goto LABEL_14;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v12 = MEMORY[0x1E0DEE9D8];
      sub_1C00B1824();
      if (v3 < 0)
        break;
      v4 = 0;
      while (v3 != v4)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v5 = (id)MEMORY[0x1C3B975EC](v4, a1);
        else
          v5 = *(id *)(a1 + 8 * v4 + 32);
        v6 = v5;
        v7 = v5;
        v8 = objc_msgSend(a2, sel_mediaSearch);

        v9 = *(_QWORD *)(v12 + 16);
        if (v9 >= *(_QWORD *)(v12 + 24) >> 1)
          sub_1C00B1824();
        ++v4;
        *(_QWORD *)(v12 + 16) = v9 + 1;
        v10 = (_QWORD *)(v12 + 32 * v9);
        v10[4] = 0x616553616964654DLL;
        v10[5] = 0xEF6D657449686372;
        v10[6] = v6;
        v10[7] = v8;
        if (v3 == v4)
          goto LABEL_12;
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      v3 = sub_1C03047F8();
      swift_bridgeObjectRelease();
      if (!v3)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_12:

  }
}

Swift::Bool __swiftcall INPlayMediaIntent.canPersistInSiriRemembers()()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  unsigned int v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  v1 = objc_msgSend(v0, sel_privatePlayMediaIntentData);
  if (!v1)
    return 1;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_appInferred);

  if (!v3)
    return 1;
  v4 = objc_msgSend(v3, sel_BOOLValue);

  if (!v4)
    return 1;
  if (qword_1ED728298 != -1)
    swift_once();
  v5 = sub_1C0303B98();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED729610);
  v6 = sub_1C0303B80();
  v7 = sub_1C03042DC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1C0039000, v6, v7, "INPlayMediaIntent is inferred", v8, 2u);
    MEMORY[0x1C3B98378](v8, -1, -1);
  }

  return 0;
}

uint64_t INPlayMediaIntent.memorableParameters()()
{
  void *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v1 = sub_1C018E250(v0);
  if (v1)
  {
    v2 = v1;
    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      v8 = sub_1C03047F8();
      OUTLINED_FUNCTION_33();
      if (v8)
        goto LABEL_4;
    }
    else if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      sub_1C018D76C(v2, v0);
      v4 = v3;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7256A8);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C03084B0;
      *(_QWORD *)(inited + 32) = 0xD000000000000010;
      *(_QWORD *)(inited + 40) = 0x80000001C03301C0;
      v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725690);
      *(_QWORD *)(inited + 48) = v4;
      *(_QWORD *)(inited + 72) = v6;
      *(_QWORD *)(inited + 80) = 0x657449616964656DLL;
      *(_QWORD *)(inited + 88) = 0xEA0000000000736DLL;
      *(_QWORD *)(inited + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE580);
      *(_QWORD *)(inited + 96) = v2;
      return sub_1C0303DB4();
    }
    OUTLINED_FUNCTION_33();
  }
  v9 = objc_msgSend(v0, sel_mediaSearch);
  if (v9)
  {
    v10 = v9;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7256A8);
    v11 = swift_initStackObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C0305B60;
    *(_QWORD *)(v11 + 32) = 0xD000000000000010;
    *(_QWORD *)(v11 + 40) = 0x80000001C03301C0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7256A0);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C0305B60;
    *(_QWORD *)(v12 + 32) = 0x616553616964654DLL;
    *(_QWORD *)(v12 + 40) = 0xEF6D657449686372;
    *(_QWORD *)(v12 + 48) = 0;
    *(_QWORD *)(v12 + 56) = v10;
    *(_QWORD *)(v11 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725690);
    *(_QWORD *)(v11 + 48) = v12;
    v13 = v10;
    v7 = sub_1C0303DB4();

    return v7;
  }
  return sub_1C0303DB4();
}

BOOL sub_1C018DCCC()
{
  return INPlayMediaIntent.canPersistInSiriRemembers()();
}

uint64_t sub_1C018DCF0()
{
  return INPlayMediaIntent.memorableParameters()();
}

void sub_1C018DD10(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4;
  unint64_t v5;

  v4 = sub_1C018DD48(a1, a2, a3, a4);
  sub_1C01FCDA4(v4, v5);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C018DD48(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;

  if (!a3)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    if (!a4)
      goto LABEL_61;
    goto LABEL_23;
  }
  v6 = a3;
  sub_1C01AEA80(v6);
  if (v8)
  {
    v9 = v7;
    v10 = v8;
    sub_1C00500A0();
    v12 = v11;
    v13 = *(_QWORD *)(v11 + 16);
    if (v13 >= *(_QWORD *)(v11 + 24) >> 1)
    {
      OUTLINED_FUNCTION_4_10();
      v12 = v42;
    }
    *(_QWORD *)(v12 + 16) = v13 + 1;
    v14 = v12 + 16 * v13;
    *(_QWORD *)(v14 + 32) = v9;
    *(_QWORD *)(v14 + 40) = v10;
  }
  else
  {
    v12 = MEMORY[0x1E0DEE9D8];
  }
  sub_1C01AEA8C(v6);
  if (v16)
  {
    v17 = v15;
    v18 = v16;
    if ((OUTLINED_FUNCTION_116() & 1) == 0)
    {
      OUTLINED_FUNCTION_0_70();
      v12 = v43;
    }
    v19 = *(_QWORD *)(v12 + 16);
    if (v19 >= *(_QWORD *)(v12 + 24) >> 1)
    {
      OUTLINED_FUNCTION_4_10();
      v12 = v44;
    }
    *(_QWORD *)(v12 + 16) = v19 + 1;
    v20 = v12 + 16 * v19;
    *(_QWORD *)(v20 + 32) = v17;
    *(_QWORD *)(v20 + 40) = v18;
  }
  if (OUTLINED_FUNCTION_12_34())
  {
    OUTLINED_FUNCTION_12_34();
    v21 = (id)INMediaItemTypeGetName();
    if (v21)
    {
      v22 = v21;
      sub_1C0303EB0();

      v55 = 0x707954616964656DLL;
      v56 = 0xEA00000000003D65;
      OUTLINED_FUNCTION_3_70();
      OUTLINED_FUNCTION_28();
      if ((OUTLINED_FUNCTION_116() & 1) == 0)
      {
        OUTLINED_FUNCTION_0_70();
        v12 = v51;
      }
      v23 = *(_QWORD *)(v12 + 16);
      if (v23 >= *(_QWORD *)(v12 + 24) >> 1)
      {
        OUTLINED_FUNCTION_4_10();
        v12 = v52;
      }
      *(_QWORD *)(v12 + 16) = v23 + 1;
      v24 = v12 + 16 * v23;
      *(_QWORD *)(v24 + 32) = 0x707954616964656DLL;
      *(_QWORD *)(v24 + 40) = 0xEA00000000003D65;
    }
  }

  if (a4)
  {
LABEL_23:
    v25 = a4;
    sub_1C018E3F8(v25, (SEL *)&selRef_mediaName);
    if (v26)
    {
      if ((OUTLINED_FUNCTION_116() & 1) == 0)
      {
        OUTLINED_FUNCTION_0_70();
        v12 = v45;
      }
      OUTLINED_FUNCTION_8_37();
      if (v27)
      {
        OUTLINED_FUNCTION_4_10();
        v12 = v46;
      }
      OUTLINED_FUNCTION_7_48();
    }
    sub_1C018E3F8(v25, (SEL *)&selRef_artistName);
    if (v28)
    {
      if ((OUTLINED_FUNCTION_116() & 1) == 0)
      {
        OUTLINED_FUNCTION_0_70();
        v12 = v47;
      }
      OUTLINED_FUNCTION_8_37();
      if (v27)
      {
        OUTLINED_FUNCTION_4_10();
        v12 = v48;
      }
      OUTLINED_FUNCTION_7_48();
    }
    sub_1C018E3F8(v25, (SEL *)&selRef_albumName);
    if (v29)
    {
      if ((OUTLINED_FUNCTION_116() & 1) == 0)
      {
        OUTLINED_FUNCTION_0_70();
        v12 = v49;
      }
      OUTLINED_FUNCTION_8_37();
      if (v27)
      {
        OUTLINED_FUNCTION_4_10();
        v12 = v50;
      }
      OUTLINED_FUNCTION_7_48();
    }
    v30 = sub_1C018E44C(v25, (SEL *)&selRef_genreNames);
    if (v30)
    {
      if (*(_QWORD *)(v30 + 16))
      {
        do
        {
          OUTLINED_FUNCTION_6_45();
          OUTLINED_FUNCTION_3_70();
          OUTLINED_FUNCTION_28();
          if ((OUTLINED_FUNCTION_116() & 1) == 0)
          {
            OUTLINED_FUNCTION_0_70();
            v12 = v32;
          }
          OUTLINED_FUNCTION_5_44();
          if (v27)
          {
            OUTLINED_FUNCTION_4_10();
            v12 = v33;
          }
          OUTLINED_FUNCTION_9_42();
        }
        while (!v31);
      }
      OUTLINED_FUNCTION_17_0();
    }
    v34 = sub_1C018E44C(v25, (SEL *)&selRef_moodNames);
    if (v34)
    {
      if (*(_QWORD *)(v34 + 16))
      {
        do
        {
          OUTLINED_FUNCTION_6_45();
          OUTLINED_FUNCTION_3_70();
          OUTLINED_FUNCTION_28();
          if ((OUTLINED_FUNCTION_116() & 1) == 0)
          {
            OUTLINED_FUNCTION_0_70();
            v12 = v35;
          }
          OUTLINED_FUNCTION_5_44();
          if (v27)
          {
            OUTLINED_FUNCTION_4_10();
            v12 = v36;
          }
          OUTLINED_FUNCTION_9_42();
        }
        while (!v31);
      }
      OUTLINED_FUNCTION_17_0();
    }
    if (!a3)
    {
      if (OUTLINED_FUNCTION_14_36())
      {
        OUTLINED_FUNCTION_14_36();
        v39 = (id)INMediaItemTypeGetName();
        if (v39)
        {
          v40 = v39;
          sub_1C0303EB0();

          v55 = 0x707954616964656DLL;
          v56 = 0xEA00000000003D65;
          sub_1C0303FD0();
          OUTLINED_FUNCTION_17_0();
          if ((OUTLINED_FUNCTION_116() & 1) == 0)
          {
            OUTLINED_FUNCTION_0_70();
            v12 = v53;
          }
          OUTLINED_FUNCTION_5_44();
          if (v27)
          {
            OUTLINED_FUNCTION_4_10();
            v12 = v54;
          }
          *(_QWORD *)(v12 + 16) = &v55;
          v41 = v12 + 16 * (_QWORD)a4;
          *(_QWORD *)(v41 + 32) = 0x707954616964656DLL;
          *(_QWORD *)(v41 + 40) = 0xEA00000000003D65;
        }
      }
    }

  }
LABEL_61:
  v55 = v12;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
  sub_1C004B224();
  v37 = sub_1C0303E50();
  OUTLINED_FUNCTION_33();
  return v37;
}

void sub_1C018E23C()
{
  uint64_t v0;

  sub_1C018DD10(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1C018E248(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C018DD48(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1C018E250(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_mediaItems);
  if (!v1)
    return 0;
  v2 = v1;
  sub_1C018E49C();
  v3 = sub_1C0304138();

  return v3;
}

void destroy for MediaSearchItem(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for MediaSearchItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  v6 = v4;
  v7 = v5;
  return a1;
}

_QWORD *assignWithCopy for MediaSearchItem(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[2];
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = v5;

  v7 = (void *)a1[3];
  v8 = (void *)a2[3];
  a1[3] = v8;
  v9 = v8;

  return a1;
}

uint64_t assignWithTake for MediaSearchItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for MediaSearchItem()
{
  return &type metadata for MediaSearchItem;
}

void sub_1C018E3F8(void *a1, SEL *a2)
{
  id v2;
  void *v3;

  v2 = objc_msgSend(a1, *a2);
  if (v2)
  {
    v3 = v2;
    sub_1C0303EB0();

  }
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C018E44C(void *a1, SEL *a2)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(a1, *a2);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_1C0304138();

  return v4;
}

unint64_t sub_1C018E49C()
{
  unint64_t result;

  result = qword_1ED725698;
  if (!qword_1ED725698)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED725698);
  }
  return result;
}

void OUTLINED_FUNCTION_0_70()
{
  sub_1C00500A0();
}

uint64_t OUTLINED_FUNCTION_3_70()
{
  return sub_1C0303FD0();
}

uint64_t OUTLINED_FUNCTION_6_45()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_7_48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v0 + 16) = v4;
  v5 = v0 + 16 * v2;
  *(_QWORD *)(v5 + 32) = v1;
  *(_QWORD *)(v5 + 40) = v3;
}

void OUTLINED_FUNCTION_9_42()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v0 + 16) = v1;
  v5 = v0 + 16 * v2;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v4;
}

id OUTLINED_FUNCTION_12_34()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 72));
}

id OUTLINED_FUNCTION_14_36()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 3912));
}

void sub_1C018E570()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  os_log_type_t v51;
  _DWORD *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[12];
  int v65;
  id v66;
  uint64_t v67;
  uint64_t v68;

  OUTLINED_FUNCTION_55_11();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v6);
  v64[5] = (uint64_t)v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_42();
  v9 = MEMORY[0x1E0C80A78](v8);
  v17 = OUTLINED_FUNCTION_28_22(v9, v10, v11, v12, v13, v14, v15, v16, v64[0]);
  v18 = OUTLINED_FUNCTION_53_11(v17);
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_5_45(v19, v64[0]);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v21);
  v64[9] = OUTLINED_FUNCTION_14_37();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_21_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_6_10();
  OUTLINED_FUNCTION_58_10();
  MEMORY[0x1E0C80A78](v24);
  v64[7] = (uint64_t)v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v26);
  v64[4] = (uint64_t)v64 - v27;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v28);
  v64[8] = (uint64_t)v64 - v29;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_51_11();
  if (!v5 && v3 == 0xE000000000000000 || (OUTLINED_FUNCTION_27_23() & 1) != 0)
  {
    if (qword_1ED728430 != -1)
      swift_once();
    v31 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED729650);
    v66 = (id)sub_1C0303B80();
    v32 = sub_1C03042E8();
    if (OUTLINED_FUNCTION_39_14(v32))
    {
      *(_WORD *)OUTLINED_FUNCTION_4_0() = 0;
      OUTLINED_FUNCTION_36_21(&dword_1C0039000, v33, v34, "[SELFTaskSuccessLogger] taskMetadata.id is empty, not logging any success metrics");
      OUTLINED_FUNCTION_5();
    }
    OUTLINED_FUNCTION_0_18(v66);
  }
  else
  {
    OUTLINED_FUNCTION_54_11();
    OUTLINED_FUNCTION_22_27();
    v35 = sub_1C0056888();
    OUTLINED_FUNCTION_57_7(v35);
    v68 = MEMORY[0x1E0DEE9D8];
    v36 = sub_1C0068358((unint64_t *)&qword_1ED7283D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
    v64[3] = v1;
    v37 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7283C0);
    OUTLINED_FUNCTION_56_13();
    v38 = OUTLINED_FUNCTION_10_45();
    OUTLINED_FUNCTION_32_21(v38, *MEMORY[0x1E0DEF8D0]);
    v39 = OUTLINED_FUNCTION_6_46();
    OUTLINED_FUNCTION_11_43(v39);
    sub_1C0045840(v2, (uint64_t (*)(_QWORD))type metadata accessor for SELFLoggingService);
    if (__swift_getEnumTagSinglePayload((uint64_t)v0, 1, v4) == 1)
    {
      sub_1C0044B38((uint64_t)v0);
      if (qword_1ED728430 != -1)
        swift_once();
      v40 = OUTLINED_FUNCTION_9_0();
      __swift_project_value_buffer(v40, (uint64_t)qword_1ED729650);
      OUTLINED_FUNCTION_35_24();
      sub_1C0303B80();
      v41 = OUTLINED_FUNCTION_42_0();
      if (OUTLINED_FUNCTION_20_7(v41))
      {
        OUTLINED_FUNCTION_4_0();
        v68 = OUTLINED_FUNCTION_4_0();
        OUTLINED_FUNCTION_29_22(4.8149e-34);
        v43 = OUTLINED_FUNCTION_29_12(v5, v42, &v68);
        OUTLINED_FUNCTION_17_27(v43);
        v44 = OUTLINED_FUNCTION_8_1();
        OUTLINED_FUNCTION_44_18(v44, (uint64_t (*)(_QWORD))type metadata accessor for TaskMetadata);
        OUTLINED_FUNCTION_15_25(&dword_1C0039000, v45, v46, "Could not find a resolutionId for taskId:%s");
        OUTLINED_FUNCTION_24_15();
        OUTLINED_FUNCTION_5();
      }

      OUTLINED_FUNCTION_44_18(v62, (uint64_t (*)(_QWORD))type metadata accessor for TaskMetadata);
      OUTLINED_FUNCTION_50_15();
    }
    else
    {
      OUTLINED_FUNCTION_21_24();
      v47 = OUTLINED_FUNCTION_48_15();

      v48 = OUTLINED_FUNCTION_48_15();
      v49 = OUTLINED_FUNCTION_46_0(v48);
      OUTLINED_FUNCTION_16_28();

      if (qword_1ED728430 != -1)
        swift_once();
      v50 = OUTLINED_FUNCTION_9_0();
      __swift_project_value_buffer(v50, (uint64_t)qword_1ED729650);
      OUTLINED_FUNCTION_15_30();
      OUTLINED_FUNCTION_30_19();
      OUTLINED_FUNCTION_37_18();
      sub_1C0303B80();
      v51 = OUTLINED_FUNCTION_42_0();
      if (OUTLINED_FUNCTION_4_1(v51))
      {
        v52 = (_DWORD *)OUTLINED_FUNCTION_4_0();
        v66 = (id)OUTLINED_FUNCTION_4_0();
        v68 = (uint64_t)v66;
        *v52 = 136315650;
        sub_1C0068358((unint64_t *)&qword_1EF5BE588, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v65 = -213049344;
        v53 = OUTLINED_FUNCTION_19_29();
        v67 = OUTLINED_FUNCTION_53_0(v53, v54);
        OUTLINED_FUNCTION_2_60();
        OUTLINED_FUNCTION_14();
        OUTLINED_FUNCTION_8_38(v5);
        v55 = OUTLINED_FUNCTION_7_49();
        v67 = OUTLINED_FUNCTION_53_0(v55, v56);
        OUTLINED_FUNCTION_2_60();
        OUTLINED_FUNCTION_14();
        OUTLINED_FUNCTION_8_38(v2);
        OUTLINED_FUNCTION_25_20();
        v58 = OUTLINED_FUNCTION_29_12((uint64_t)(v52 + 1), v57, &v68);
        OUTLINED_FUNCTION_23_22(v58);
        v59 = OUTLINED_FUNCTION_8_1();
        OUTLINED_FUNCTION_40_17(v59, (uint64_t (*)(_QWORD))type metadata accessor for TaskMetadata);
        OUTLINED_FUNCTION_33_17(&dword_1C0039000, v60, v61, "Logged success to SELF for resolutionId:%s inferenceId:%s taskId:%s");
        OUTLINED_FUNCTION_31_18();
        OUTLINED_FUNCTION_5();
      }

      OUTLINED_FUNCTION_40_17(v63, (uint64_t (*)(_QWORD))type metadata accessor for TaskMetadata);
      OUTLINED_FUNCTION_9_43(v4);
      OUTLINED_FUNCTION_9_43(v5);
      OUTLINED_FUNCTION_9_43(v3);
      OUTLINED_FUNCTION_9_43(v37);
    }
    OUTLINED_FUNCTION_1();
  }
}

uint64_t sub_1C018EAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TaskMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C018EB14()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  os_log_type_t v51;
  _DWORD *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[12];
  int v65;
  id v66;
  uint64_t v67;
  uint64_t v68;

  OUTLINED_FUNCTION_55_11();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v6);
  v64[5] = (uint64_t)v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_42();
  v9 = MEMORY[0x1E0C80A78](v8);
  v17 = OUTLINED_FUNCTION_28_22(v9, v10, v11, v12, v13, v14, v15, v16, v64[0]);
  v18 = OUTLINED_FUNCTION_53_11(v17);
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_5_45(v19, v64[0]);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v21);
  v64[9] = OUTLINED_FUNCTION_14_37();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_21_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_6_10();
  OUTLINED_FUNCTION_58_10();
  MEMORY[0x1E0C80A78](v24);
  v64[7] = (uint64_t)v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v26);
  v64[4] = (uint64_t)v64 - v27;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v28);
  v64[8] = (uint64_t)v64 - v29;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_51_11();
  if (!v5 && v3 == 0xE000000000000000 || (OUTLINED_FUNCTION_27_23() & 1) != 0)
  {
    if (qword_1ED728430 != -1)
      swift_once();
    v31 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED729650);
    v66 = (id)sub_1C0303B80();
    v32 = sub_1C03042E8();
    if (OUTLINED_FUNCTION_39_14(v32))
    {
      *(_WORD *)OUTLINED_FUNCTION_4_0() = 0;
      OUTLINED_FUNCTION_36_21(&dword_1C0039000, v33, v34, "[SELFTaskSuccessLogger] taskMetadata.id is empty, not logging any success metrics");
      OUTLINED_FUNCTION_5();
    }
    OUTLINED_FUNCTION_0_18(v66);
  }
  else
  {
    OUTLINED_FUNCTION_54_11();
    OUTLINED_FUNCTION_22_27();
    v35 = sub_1C0056888();
    OUTLINED_FUNCTION_57_7(v35);
    v68 = MEMORY[0x1E0DEE9D8];
    v36 = sub_1C0068358((unint64_t *)&qword_1ED7283D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
    v64[3] = v1;
    v37 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7283C0);
    OUTLINED_FUNCTION_56_13();
    v38 = OUTLINED_FUNCTION_10_45();
    OUTLINED_FUNCTION_32_21(v38, *MEMORY[0x1E0DEF8D0]);
    v39 = OUTLINED_FUNCTION_6_46();
    OUTLINED_FUNCTION_11_43(v39);
    sub_1C0045840(v2, (uint64_t (*)(_QWORD))type metadata accessor for SELFLoggingService);
    if (__swift_getEnumTagSinglePayload((uint64_t)v0, 1, v4) == 1)
    {
      sub_1C0044B38((uint64_t)v0);
      if (qword_1ED728430 != -1)
        swift_once();
      v40 = OUTLINED_FUNCTION_9_0();
      __swift_project_value_buffer(v40, (uint64_t)qword_1ED729650);
      OUTLINED_FUNCTION_35_24();
      sub_1C0303B80();
      v41 = OUTLINED_FUNCTION_42_0();
      if (OUTLINED_FUNCTION_20_7(v41))
      {
        OUTLINED_FUNCTION_4_0();
        v68 = OUTLINED_FUNCTION_4_0();
        OUTLINED_FUNCTION_29_22(4.8149e-34);
        v43 = OUTLINED_FUNCTION_29_12(v5, v42, &v68);
        OUTLINED_FUNCTION_17_27(v43);
        v44 = OUTLINED_FUNCTION_8_1();
        OUTLINED_FUNCTION_44_18(v44, (uint64_t (*)(_QWORD))type metadata accessor for TaskMetadata);
        OUTLINED_FUNCTION_15_25(&dword_1C0039000, v45, v46, "Could not find a resolutionId for taskId:%s");
        OUTLINED_FUNCTION_24_15();
        OUTLINED_FUNCTION_5();
      }

      OUTLINED_FUNCTION_44_18(v62, (uint64_t (*)(_QWORD))type metadata accessor for TaskMetadata);
      OUTLINED_FUNCTION_50_15();
    }
    else
    {
      OUTLINED_FUNCTION_21_24();
      v47 = OUTLINED_FUNCTION_48_15();

      v48 = OUTLINED_FUNCTION_48_15();
      v49 = OUTLINED_FUNCTION_46_0(v48);
      OUTLINED_FUNCTION_16_28();

      if (qword_1ED728430 != -1)
        swift_once();
      v50 = OUTLINED_FUNCTION_9_0();
      __swift_project_value_buffer(v50, (uint64_t)qword_1ED729650);
      OUTLINED_FUNCTION_15_30();
      OUTLINED_FUNCTION_30_19();
      OUTLINED_FUNCTION_37_18();
      sub_1C0303B80();
      v51 = OUTLINED_FUNCTION_42_0();
      if (OUTLINED_FUNCTION_4_1(v51))
      {
        v52 = (_DWORD *)OUTLINED_FUNCTION_4_0();
        v66 = (id)OUTLINED_FUNCTION_4_0();
        v68 = (uint64_t)v66;
        *v52 = 136315650;
        sub_1C0068358((unint64_t *)&qword_1EF5BE588, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v65 = -213049344;
        v53 = OUTLINED_FUNCTION_19_29();
        v67 = OUTLINED_FUNCTION_53_0(v53, v54);
        OUTLINED_FUNCTION_2_60();
        OUTLINED_FUNCTION_14();
        OUTLINED_FUNCTION_8_38(v5);
        v55 = OUTLINED_FUNCTION_7_49();
        v67 = OUTLINED_FUNCTION_53_0(v55, v56);
        OUTLINED_FUNCTION_2_60();
        OUTLINED_FUNCTION_14();
        OUTLINED_FUNCTION_8_38(v2);
        OUTLINED_FUNCTION_25_20();
        v58 = OUTLINED_FUNCTION_29_12((uint64_t)(v52 + 1), v57, &v68);
        OUTLINED_FUNCTION_23_22(v58);
        v59 = OUTLINED_FUNCTION_8_1();
        OUTLINED_FUNCTION_40_17(v59, (uint64_t (*)(_QWORD))type metadata accessor for TaskMetadata);
        OUTLINED_FUNCTION_33_17(&dword_1C0039000, v60, v61, "Logged failure to SELF for resolutionId:%s inferenceId:%s taskId:%s");
        OUTLINED_FUNCTION_31_18();
        OUTLINED_FUNCTION_5();
      }

      OUTLINED_FUNCTION_40_17(v63, (uint64_t (*)(_QWORD))type metadata accessor for TaskMetadata);
      OUTLINED_FUNCTION_9_43(v4);
      OUTLINED_FUNCTION_9_43(v5);
      OUTLINED_FUNCTION_9_43(v3);
      OUTLINED_FUNCTION_9_43(v37);
    }
    OUTLINED_FUNCTION_1();
  }
}

ValueMetadata *type metadata accessor for SELFTaskSuccessLogger()
{
  return &type metadata for SELFTaskSuccessLogger;
}

uint64_t OUTLINED_FUNCTION_2_60()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_5_45@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_1C030436C();
}

uint64_t OUTLINED_FUNCTION_6_46()
{
  return sub_1C03043C0();
}

uint64_t OUTLINED_FUNCTION_7_49()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2080;
  return sub_1C03049E4();
}

uint64_t OUTLINED_FUNCTION_8_38(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_9_43(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_10_45()
{
  return sub_1C0304588();
}

uint64_t OUTLINED_FUNCTION_11_43(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + *(int *)(*(_QWORD *)(v3 - 136) + 20)) = a1;
  return sub_1C021EB90(v1);
}

uint64_t OUTLINED_FUNCTION_12_35()
{
  return sub_1C0303D00();
}

uint64_t OUTLINED_FUNCTION_14_37()
{
  return type metadata accessor for SELFLoggingService();
}

uint64_t OUTLINED_FUNCTION_15_30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v0 + 16))(*(_QWORD *)(v3 - 176), v1, v2);
}

void OUTLINED_FUNCTION_16_28()
{
  sub_1C00CA904();
}

uint64_t OUTLINED_FUNCTION_17_27(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_19_29()
{
  return sub_1C03049E4();
}

uint64_t OUTLINED_FUNCTION_21_24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 32))(*(_QWORD *)(v2 - 144), v0, v1);
}

uint64_t OUTLINED_FUNCTION_22_27()
{
  return sub_1C0303574();
}

uint64_t OUTLINED_FUNCTION_23_22(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_25_20()
{
  uint64_t v0;

  *(_WORD *)(v0 + 22) = 2080;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_27_23()
{
  return sub_1C0304A08();
}

uint64_t OUTLINED_FUNCTION_29_22(float a1)
{
  float *v1;

  *v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_30_19()
{
  uint64_t (*v0)(_QWORD, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(*(_QWORD *)(v3 - 152), v1, v2);
}

uint64_t OUTLINED_FUNCTION_32_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v2 - 128) + 104))(*(_QWORD *)(v2 - 112), a2, *(_QWORD *)(v2 - 120));
}

uint64_t OUTLINED_FUNCTION_35_24()
{
  uint64_t v0;

  return sub_1C018EAD0(*(_QWORD *)(v0 - 104), *(_QWORD *)(v0 - 168));
}

uint64_t OUTLINED_FUNCTION_37_18()
{
  uint64_t v0;

  return sub_1C018EAD0(*(_QWORD *)(v0 - 104), *(_QWORD *)(v0 - 160));
}

uint64_t OUTLINED_FUNCTION_40_17(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  return sub_1C0045840(v2, a2);
}

id OUTLINED_FUNCTION_48_15()
{
  uint64_t v0;

  return objc_allocWithZone(*(Class *)(v0 + 2088));
}

unint64_t OUTLINED_FUNCTION_56_13()
{
  return sub_1C00683D8();
}

uint64_t OUTLINED_FUNCTION_57_7(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 200) = a1;
  return sub_1C0303CD0();
}

uint64_t DisambiguationEntityResolution.useCase.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C018F310()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C03046CC();
  sub_1C0303FD0();
  OUTLINED_FUNCTION_22();
  sub_1C0303FD0();
  OUTLINED_FUNCTION_18();
  sub_1C0303FD0();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
  sub_1C03049F0();
  sub_1C0303FD0();
  OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_44();
  v1 = OUTLINED_FUNCTION_10_11();
  sub_1C00A84B8(v1);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_29();
  sub_1C0303FD0();
  return 0;
}

_QWORD *DisambiguationEntityResolution.__allocating_init(useCase:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD v41[5];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47[5];
  _BYTE v48[128];
  uint64_t v49;
  uint64_t v50;

  OUTLINED_FUNCTION_18_0();
  v49 = v1;
  v50 = v2;
  v4 = v3;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE590);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_7_10();
  v44 = type metadata accessor for LearnedDisambiguationPersistentStorage();
  OUTLINED_FUNCTION_12_0();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v41 - v12;
  type metadata accessor for PervasiveConfiguration();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_27();
  v42 = v15;
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v41 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v41 - v20;
  sub_1C02BD878((uint64_t)v48);
  sub_1C00D5B40((uint64_t)v48, (uint64_t)v21);
  if (qword_1EF5B7F30 != -1)
    swift_once();
  v22 = OUTLINED_FUNCTION_9_0();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1EF5FC710);
  sub_1C00A3910((uint64_t)v21, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for PervasiveConfiguration);
  v43 = v23;
  v24 = sub_1C0303B80();
  v25 = sub_1C03042E8();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = OUTLINED_FUNCTION_4_0();
    v41[3] = v13;
    v27 = (uint8_t *)v26;
    v28 = OUTLINED_FUNCTION_4_0();
    v41[1] = v0;
    v47[0] = v28;
    v41[4] = v6;
    v41[2] = v21;
    *(_DWORD *)v27 = 136315138;
    v29 = sub_1C00D584C();
    *(_QWORD *)&v45 = sub_1C003E6D8(v29, v30, v47);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    sub_1C003DD84((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for PervasiveConfiguration);
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v24, v25, "DisambiguationEntityResolution: configured %s", v27);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }
  sub_1C003DD84((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for PervasiveConfiguration);

  OUTLINED_FUNCTION_45_0();
  sub_1C01689CC(v6, v4, v0);
  if (__swift_getEnumTagSinglePayload(v0, 1, v44) == 1)
  {
    OUTLINED_FUNCTION_28();
    sub_1C0044B78(v0, &qword_1EF5BE590);
    v31 = sub_1C0303B80();
    v32 = sub_1C03042F4();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      *(_WORD *)v33 = 0;
      OUTLINED_FUNCTION_10_3(&dword_1C0039000, v31, v32, "DisambiguationEntityResolution: Could not be created", v33);
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_67_4(v34, (uint64_t (*)(_QWORD))type metadata accessor for PervasiveConfiguration);
    return 0;
  }
  sub_1C0045508(v0, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguationPersistentStorage);
  sub_1C00D5EB4((uint64_t *)&v45);
  if (!v46)
  {
    OUTLINED_FUNCTION_28();
    sub_1C003DD84((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguationPersistentStorage);
    OUTLINED_FUNCTION_67_4(v39, (uint64_t (*)(_QWORD))type metadata accessor for PervasiveConfiguration);
    sub_1C0044B78((uint64_t)&v45, &qword_1EF5BE598);
    return 0;
  }
  sub_1C004CD5C(&v45, (uint64_t)v47);
  sub_1C0049024((uint64_t)v47, (uint64_t)&v45);
  type metadata accessor for LoggingDataEmitter();
  v35 = sub_1C01B88E8();
  type metadata accessor for ExperimentationTriggerLogger();
  v36 = swift_allocObject();
  v37 = v42;
  sub_1C00A3910((uint64_t)v21, v42, (uint64_t (*)(_QWORD))type metadata accessor for PervasiveConfiguration);
  sub_1C00A3910((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguationPersistentStorage);
  v38 = sub_1C019325C(v6, v4, v37, (uint64_t)v11, (uint64_t)&v45, (uint64_t)v35, v36);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
  sub_1C003DD84((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguationPersistentStorage);
  sub_1C003DD84((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for PervasiveConfiguration);
  return v38;
}

void sub_1C018F89C()
{
  objc_class *v0;
  uint64_t v1;
  objc_class *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  void (*v39)(uint64_t, uint64_t);
  int *v40;
  uint64_t v41;
  os_log_type_t v42;
  _BOOL4 v43;
  uint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  NSObject *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  objc_class *v55;
  int v56;
  uint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  unint64_t v60;
  NSObject *v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  os_log_type_t v65;
  _WORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)();
  NSObject *v71;
  uint64_t v72;
  os_log_type_t v73;
  _WORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  int v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  NSObject *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  NSObject *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  OUTLINED_FUNCTION_18_0();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE5A0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_53();
  v108 = v8;
  v9 = sub_1C0301D5C();
  v104 = *(_QWORD *)(v9 - 8);
  v105 = v9;
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_53();
  v103 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727600);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_53();
  v112 = v12;
  v13 = OUTLINED_FUNCTION_46_14();
  v14 = *(_QWORD *)(v13 - 8);
  v109 = v13;
  v110 = v14;
  v15 = *(NSObject **)(v14 + 64);
  v16 = MEMORY[0x1E0C80A78](v13);
  v111 = (uint64_t)&v95 - (((unint64_t)&v15[1].isa + 7) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v17 = OUTLINED_FUNCTION_45_13();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_6_0();
  v21 = v20 - v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD008);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_27();
  v107 = v23;
  MEMORY[0x1E0C80A78](v24);
  v26 = (uint64_t *)((char *)&v95 - v25);
  v27 = OUTLINED_FUNCTION_5_23();
  v100 = *(_QWORD *)(v27 - 8);
  v28 = MEMORY[0x1E0C80A78](v27);
  v101 = (uint64_t)&v95 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x1E0C80A78](v28);
  v102 = (char *)&v95 - v31;
  v99 = v32;
  MEMORY[0x1E0C80A78](v30);
  v33 = *v4;
  v34 = *((_QWORD *)v2 + 10);
  v35 = *((_QWORD *)v2 + 2);
  v36 = *((_QWORD *)v2 + 3);
  v113 = ((char *)&v95 - v37);
  v114 = v35;
  v115 = v36;
  if ((sub_1C019602C(v35, v36, v34) & 1) != 0)
  {
    v98 = v1;
    v106 = (_QWORD *)v6;
    __swift_project_boxed_opaque_existential_1((_QWORD *)v2 + 5, *((_QWORD *)v2 + 8));
    v96 = v33;
    sub_1C00EFD68(v33);
    swift_bridgeObjectRetain();
    sub_1C03023F8();
    v38 = sub_1C03023D4();
    v39 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v97 = v17;
    v39(v21, v17);
    OUTLINED_FUNCTION_18();
    sub_1C016926C(v38, v26);
    v40 = (int *)v27;
    if (OUTLINED_FUNCTION_44_10((uint64_t)v26) == 1)
    {
      sub_1C0044B78((uint64_t)v26, &qword_1EF5BD008);
      if (qword_1EF5B7F30 != -1)
        swift_once();
      v41 = OUTLINED_FUNCTION_9_0();
      __swift_project_value_buffer(v41, (uint64_t)qword_1EF5FC710);
      swift_retain();
      sub_1C0303B80();
      v42 = OUTLINED_FUNCTION_42_0();
      v43 = OUTLINED_FUNCTION_20_7(v42);
      v44 = (uint64_t)v106;
      if (v43)
      {
        v45 = (uint8_t *)OUTLINED_FUNCTION_4_0();
        v116 = OUTLINED_FUNCTION_4_0();
        OUTLINED_FUNCTION_42_13(4.8149e-34);
        v46 = OUTLINED_FUNCTION_55_12();
        OUTLINED_FUNCTION_28_23(v46);
        OUTLINED_FUNCTION_22_2();
        OUTLINED_FUNCTION_55_0();
        OUTLINED_FUNCTION_13_0(&dword_1C0039000, v15, (os_log_type_t)v17, "DisambiguationEntityResolution: No history found for %s, bypassing pervasive", v45);
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_5();
      }

      OUTLINED_FUNCTION_22_2();
      v52 = v44;
    }
    else
    {
      v51 = v113;
      sub_1C0045508((uint64_t)v26, (uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguation);
      if ((sub_1C0190570(v51) & 1) != 0)
      {
        sub_1C003DD84((uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguation);
        v52 = (uint64_t)v106;
      }
      else
      {
        sub_1C00EFD68(v96);
        v55 = v2;
        swift_bridgeObjectRetain();
        sub_1C03023F8();
        v56 = sub_1C03023D4();
        v39(v21, v97);
        OUTLINED_FUNCTION_18();
        v57 = v98;
        sub_1C019086C(v56);
        v58 = (uint8_t *)sub_1C03041EC();
        OUTLINED_FUNCTION_34_23();
        v59 = v111;
        sub_1C00A3910(v57, v111, (uint64_t (*)(_QWORD))type metadata accessor for LearningResult);
        v60 = (*(unsigned __int8 *)(v110 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
        v61 = swift_allocObject();
        v61[2].isa = 0;
        v61[3].isa = 0;
        v61[4].isa = v55;
        sub_1C0045508(v59, (uint64_t)v61 + v60, (uint64_t (*)(_QWORD))type metadata accessor for LearningResult);
        swift_retain();
        sub_1C00E185C((uint64_t)v39, (uint64_t)&unk_1EF5BE5B0, (uint64_t)v61);
        swift_release();
        sub_1C0191EA4(2);
        v62 = __swift_project_boxed_opaque_existential_1((_QWORD *)v55 + 17, *((_QWORD *)v55 + 20));
        v63 = v106;
        if ((v62[3] & 1) != 0)
        {
          if (qword_1EF5B7F30 != -1)
            swift_once();
          v64 = OUTLINED_FUNCTION_9_0();
          OUTLINED_FUNCTION_7(v64, (uint64_t)qword_1EF5FC710);
          v65 = OUTLINED_FUNCTION_42_0();
          if (OUTLINED_FUNCTION_4_1(v65))
          {
            v66 = (_WORD *)OUTLINED_FUNCTION_4_0();
            OUTLINED_FUNCTION_13(v66);
            OUTLINED_FUNCTION_10_3(&dword_1C0039000, v61, (os_log_type_t)v55, "DisambiguationEntityResolution: Forcing disambiguation", v58);
            OUTLINED_FUNCTION_5();
          }

          v67 = v108;
          sub_1C00A3910(v98, v108, (uint64_t (*)(_QWORD))type metadata accessor for LearningResult);
          __swift_storeEnumTagSinglePayload(v67, 0, 1, v109);
          v68 = (uint64_t)v55 + OBJC_IVAR____TtC13SiriInference30DisambiguationEntityResolution_unusedPrediction;
          OUTLINED_FUNCTION_55_1();
          sub_1C0193628(v67, v68);
          swift_endAccess();
          v69 = OUTLINED_FUNCTION_10_11();
        }
        else
        {
          v71 = v107;
          sub_1C0044B0C(v57, (uint64_t)v107, &qword_1EF5BD008);
          if (__swift_getEnumTagSinglePayload((uint64_t)v71, 1, (uint64_t)v40) != 1)
          {
            sub_1C0045508((uint64_t)v71, (uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguation);
            v81 = *v63;
            v80 = v63[1];
            v115 = (uint64_t)v55;
            OUTLINED_FUNCTION_22();
            OUTLINED_FUNCTION_78_8();
            v82 = v63;
            v83 = sub_1C0301D14();
            v85 = v84;
            OUTLINED_FUNCTION_76_8(v104);
            v86 = v102;
            sub_1C0301CF0();
            v87 = *(_QWORD *)((char *)v82 + v40[7]);
            v88 = *(_DWORD *)((char *)v82 + v40[8]);
            *v86 = v81;
            v86[1] = v80;
            v86[2] = v83;
            v86[3] = v85;
            *(_QWORD *)((char *)v86 + v40[7]) = v87;
            *(_DWORD *)((char *)v86 + v40[8]) = v88;
            v89 = (_QWORD *)((char *)v86 + v40[9]);
            *v89 = 0;
            v89[1] = 0xE000000000000000;
            v90 = (_QWORD *)((char *)v86 + v40[10]);
            v90[1] = -1;
            v90[2] = -1;
            *v90 = -1;
            OUTLINED_FUNCTION_34_23();
            v91 = v101;
            sub_1C00A3910((uint64_t)v86, v101, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguation);
            v92 = (*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
            v93 = (v99 + v92 + 7) & 0xFFFFFFFFFFFFFFF8;
            v94 = swift_allocObject();
            *(_QWORD *)(v94 + 16) = 0;
            *(_QWORD *)(v94 + 24) = 0;
            OUTLINED_FUNCTION_73_7(v91, v94 + v92);
            *(_QWORD *)(v94 + v93) = v115;
            swift_retain();
            swift_bridgeObjectRetain();
            sub_1C00E185C(v83, (uint64_t)&unk_1EF5BE5C8, v94);
            swift_release();
            OUTLINED_FUNCTION_70_7((uint64_t)v86);
            sub_1C003DD84(v57, (uint64_t (*)(_QWORD))type metadata accessor for LearningResult);
            OUTLINED_FUNCTION_70_7((uint64_t)v113);
            v52 = (uint64_t)v106;
            v53 = 0;
            goto LABEL_31;
          }
          sub_1C0044B78((uint64_t)v71, &qword_1EF5BD008);
          if (qword_1EF5B7F30 != -1)
            swift_once();
          v72 = OUTLINED_FUNCTION_9_0();
          OUTLINED_FUNCTION_7(v72, (uint64_t)qword_1EF5FC710);
          v73 = OUTLINED_FUNCTION_42_0();
          if (OUTLINED_FUNCTION_4_1(v73))
          {
            v74 = (_WORD *)OUTLINED_FUNCTION_4_0();
            OUTLINED_FUNCTION_13(v74);
            OUTLINED_FUNCTION_10_3(&dword_1C0039000, v71, (os_log_type_t)v55, "DisambiguationEntityResolution: No confident prediction", v58);
            OUTLINED_FUNCTION_5();
          }

          v75 = v109;
          v76 = v98;
          if (*(_BYTE *)(v98 + *(int *)(v109 + 24)) == 1)
          {
            v77 = v108;
            sub_1C00A3910(v98, v108, (uint64_t (*)(_QWORD))type metadata accessor for LearningResult);
            __swift_storeEnumTagSinglePayload(v77, 0, 1, v75);
            OUTLINED_FUNCTION_55_1();
            v78 = OUTLINED_FUNCTION_10_11();
            sub_1C0193628(v78, v79);
            swift_endAccess();
          }
          v70 = type metadata accessor for LearningResult;
          v69 = v76;
        }
        sub_1C003DD84(v69, (uint64_t (*)(_QWORD))v70);
        sub_1C003DD84((uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguation);
        v52 = (uint64_t)v63;
      }
    }
    v53 = 1;
LABEL_31:
    v54 = (uint64_t)v40;
    goto LABEL_32;
  }
  if (qword_1EF5B7F30 != -1)
    swift_once();
  v47 = OUTLINED_FUNCTION_9_0();
  __swift_project_value_buffer(v47, (uint64_t)qword_1EF5FC710);
  swift_retain();
  sub_1C0303B80();
  v48 = OUTLINED_FUNCTION_42_0();
  if (OUTLINED_FUNCTION_20_7(v48))
  {
    v49 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v116 = OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_42_13(4.8149e-34);
    v50 = OUTLINED_FUNCTION_55_12();
    OUTLINED_FUNCTION_28_23(v50);
    OUTLINED_FUNCTION_22_2();
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v15, (os_log_type_t)v17, "DisambiguationEntityResolution: Unsupported use case: %s", v49);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }

  swift_release();
  v52 = v6;
  v53 = 1;
  v54 = v27;
LABEL_32:
  __swift_storeEnumTagSinglePayload(v52, v53, 1, v54);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C0190218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_1C0190230()
{
  uint64_t v0;

  sub_1C0191970(*(_QWORD *)(v0 + 24));
  return OUTLINED_FUNCTION_1_11(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0190258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[3] = a4;
  v5[4] = a5;
  v6 = sub_1C0303694();
  v5[5] = v6;
  v5[6] = *(_QWORD *)(v6 - 8);
  v5[7] = swift_task_alloc();
  type metadata accessor for LearnedDisambiguation();
  v5[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C01902D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL8 v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  _WORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  if (qword_1EF5B7F30 != -1)
    swift_once();
  v1 = v0[3];
  v2 = v0[8];
  v3 = OUTLINED_FUNCTION_9_0();
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EF5FC710);
  sub_1C00A3910(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguation);
  v5 = sub_1C0303B80();
  v6 = sub_1C03042E8();
  v7 = os_log_type_enabled(v5, v6);
  if (v7)
  {
    v8 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v17 = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v8 = 136315138;
    v9 = LearnedDisambiguation.description.getter();
    v0[2] = sub_1C003E6D8(v9, v10, &v17);
    sub_1C03044B0();
    v11 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_67_4(v11, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguation);
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v5, v6, "DisambiguationEntityResolution: Storing current learning to memory now: %s", v8);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_67_4(v7, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguation);

  sub_1C0303B80();
  v12 = OUTLINED_FUNCTION_9_1();
  if (OUTLINED_FUNCTION_17(v4))
  {
    v13 = (_WORD *)OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_13(v13);
    OUTLINED_FUNCTION_10_3(&dword_1C0039000, v4, v12, "DisambiguationEntityResolution: Saving as an outgoing interaction", (uint8_t *)v5);
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_64_8(v14, *MEMORY[0x1E0DA42A0]);
  v15 = (_QWORD *)swift_task_alloc();
  v0[9] = v15;
  *v15 = v0;
  v15[1] = sub_1C019050C;
  return sub_1C0191C7C(v0[3], v0[7]);
}

uint64_t sub_1C019050C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_25_21();
  v3 = v1[6];
  v2 = v1[7];
  v4 = v1[5];
  OUTLINED_FUNCTION_9_44();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0190570(NSObject *a1)
{
  uint8_t *v1;
  os_log_type_t v3;
  double *v4;
  uint64_t v5;
  os_log_type_t v6;
  _WORD *v7;
  const char *v8;
  uint64_t v9;
  os_log_type_t v10;
  _WORD *v11;
  uint64_t v12;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  os_log_type_t v20;
  uint8_t *v21;
  os_log_type_t v22;
  uint8_t *v23;
  double v24;
  _QWORD v25[5];

  v25[3] = &type metadata for PERFeatures;
  v25[4] = sub_1C00BD110();
  v3 = sub_1C0302428();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
  if ((v3 & 1) == 0)
  {
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v9 = OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7(v9, (uint64_t)qword_1EF5FC710);
    v10 = OUTLINED_FUNCTION_42_0();
    if (OUTLINED_FUNCTION_20_7(v10))
    {
      v11 = (_WORD *)OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_22_1(v11);
      v8 = "DisambiguationEntityResolution: restatement is disabled";
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  v4 = (double *)OUTLINED_FUNCTION_75_8();
  if (((_BYTE)v4[7] & 1) != 0)
  {
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v5 = OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7(v5, (uint64_t)qword_1EF5FC710);
    v6 = OUTLINED_FUNCTION_42_0();
    if (OUTLINED_FUNCTION_20_7(v6))
    {
      v7 = (_WORD *)OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_22_1(v7);
      v8 = "DisambiguationEntityResolution: bypassing the restatement check";
LABEL_11:
      OUTLINED_FUNCTION_10_3(&dword_1C0039000, a1, v3, v8, v1);
      goto LABEL_12;
    }
LABEL_13:
    v12 = 0;
    goto LABEL_14;
  }
  v14 = v4[6];
  OUTLINED_FUNCTION_5_23();
  sub_1C0301C9C();
  if (qword_1EF5B7F30 != -1)
  {
    v24 = v15;
    swift_once();
    v15 = v24;
  }
  v16 = -v15;
  v17 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_7(v17, (uint64_t)qword_1EF5FC710);
  v18 = OUTLINED_FUNCTION_42_0();
  if (OUTLINED_FUNCTION_20_7(v18))
  {
    v19 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v19 = 134217984;
    *(double *)v25 = v16;
    OUTLINED_FUNCTION_29_23();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, a1, v3, "DisambiguationEntityResolution: last occurrence of this disambiguation was %f seconds ago", v19);
    OUTLINED_FUNCTION_5();
  }

  sub_1C0303B80();
  v20 = OUTLINED_FUNCTION_42_0();
  if (OUTLINED_FUNCTION_20_7(v20))
  {
    v21 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v21 = 134217984;
    *(double *)v25 = v14;
    OUTLINED_FUNCTION_29_23();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, a1, v3, "DisambiguationEntityResolution: restatement window is set to %f seconds", v21);
    OUTLINED_FUNCTION_5();
  }

  if (v14 <= v16)
    return 0;
  sub_1C0303B80();
  v22 = OUTLINED_FUNCTION_42_0();
  if (OUTLINED_FUNCTION_20_7(v22))
  {
    v23 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v23 = 134217984;
    *(double *)v25 = v16;
    OUTLINED_FUNCTION_29_23();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, a1, v3, "DisambiguationEntityResolution: Restatement detected because last occurrence of this disambiguation was %f seconds ago ", v23);
LABEL_12:
    OUTLINED_FUNCTION_5();
  }
  v12 = 1;
LABEL_14:

  return v12;
}

uint64_t sub_1C019086C(int a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = v1[16];
  __swift_project_boxed_opaque_existential_1(v1 + 12, v1[15]);
  __swift_project_boxed_opaque_existential_1(v1 + 5, v1[8]);
  sub_1C0168BA4(a1);
  (*(void (**)(void))(v3 + 16))();
  return swift_bridgeObjectRelease();
}

void sub_1C01908E8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _WORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26[2];

  v2 = *a1;
  if (*a1)
  {
    v3 = v1;
    v4 = a1[1];
    v5 = qword_1EF5B7F30;
    OUTLINED_FUNCTION_65();
    OUTLINED_FUNCTION_22();
    if (v5 != -1)
      swift_once();
    v6 = OUTLINED_FUNCTION_9_0();
    v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1EF5FC710);
    OUTLINED_FUNCTION_51_12();
    OUTLINED_FUNCTION_51_12();
    OUTLINED_FUNCTION_51_12();
    OUTLINED_FUNCTION_65();
    OUTLINED_FUNCTION_22();
    sub_1C0303B80();
    v8 = OUTLINED_FUNCTION_9_1();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = OUTLINED_FUNCTION_4_0();
      v26[0] = OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v9 = 136315394;
      v10 = OUTLINED_FUNCTION_65();
      v11 = MEMORY[0x1E0DEA968];
      v12 = MEMORY[0x1C3B97040](v10, MEMORY[0x1E0DEA968]);
      v14 = v13;
      OUTLINED_FUNCTION_29();
      sub_1C003E6D8(v12, v14, v26);
      OUTLINED_FUNCTION_58_11();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_14_38();
      OUTLINED_FUNCTION_14_38();
      *(_WORD *)(v9 + 12) = 2080;
      v15 = OUTLINED_FUNCTION_22();
      v16 = MEMORY[0x1C3B97040](v15, v11);
      v18 = v17;
      OUTLINED_FUNCTION_18();
      sub_1C003E6D8(v16, v18, v26);
      OUTLINED_FUNCTION_58_11();
      OUTLINED_FUNCTION_28();
      OUTLINED_FUNCTION_14_38();
      OUTLINED_FUNCTION_14_38();
      _os_log_impl(&dword_1C0039000, v7, v8, "DisambiguationEntityResolution: PervasiveEntityResolution extracted choices (%s)\n and associated identifiers: %s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }
    OUTLINED_FUNCTION_14_38();
    OUTLINED_FUNCTION_14_38();

    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_2();
    v22 = *(_QWORD *)(v3 + 16);
    v23 = *(_QWORD *)(v3 + 24);
    v26[0] = v2;
    v26[1] = v4;
    type metadata accessor for OngoingLearning();
    v24 = swift_allocObject();
    OUTLINED_FUNCTION_21();
    sub_1C01922E8(v22, v23, v26);
    sub_1C0152388(v24);
  }
  else
  {
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v19 = OUTLINED_FUNCTION_9_0();
    v25 = OUTLINED_FUNCTION_7(v19, (uint64_t)qword_1EF5FC710);
    sub_1C03042F4();
    if (OUTLINED_FUNCTION_17(v25))
    {
      v20 = (_WORD *)OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_22_1(v20);
      OUTLINED_FUNCTION_7_15(&dword_1C0039000, v25, v21, "DisambiguationEntityResolution: PervasiveEntityResolution no choices extracted");
      OUTLINED_FUNCTION_5();
    }

  }
}

void sub_1C0190BCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 *v3;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _WORD *v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  _WORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  __int128 v29;
  char v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_18_0();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727600);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_7_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD008);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_65_0();
  v7 = OUTLINED_FUNCTION_5_23();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - v12;
  v14 = *((_QWORD *)v4 + 4);
  if (!v14)
  {
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v17 = OUTLINED_FUNCTION_9_0();
    v28 = OUTLINED_FUNCTION_7(v17, (uint64_t)qword_1EF5FC710);
    sub_1C03042F4();
    if (OUTLINED_FUNCTION_17(v28))
    {
      v18 = (_WORD *)OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_22_1(v18);
      v20 = "DisambiguationEntityResolution: PervasiveEntityResolution no user select found";
      goto LABEL_13;
    }
LABEL_14:
    OUTLINED_FUNCTION_0_18(v28);
    return;
  }
  if (!*(_QWORD *)(v0 + 32))
  {
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v21 = OUTLINED_FUNCTION_9_0();
    v28 = OUTLINED_FUNCTION_7(v21, (uint64_t)qword_1EF5FC710);
    sub_1C03042F4();
    if (OUTLINED_FUNCTION_17(v28))
    {
      v22 = (_WORD *)OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_22_1(v22);
      v20 = "DisambiguationEntityResolution: PervasiveEntityResolution got the user selection but did not capture the choices";
LABEL_13:
      OUTLINED_FUNCTION_7_15(&dword_1C0039000, v28, v19, v20);
      OUTLINED_FUNCTION_5();
    }
    goto LABEL_14;
  }
  v16 = *((_QWORD *)v4 + 2);
  v15 = *((_QWORD *)v4 + 3);
  v29 = *v4;
  v30 = v16;
  v31 = v15;
  v32 = v14;
  swift_retain();
  sub_1C0192528();
  if (__swift_getEnumTagSinglePayload(v2, 1, v7) == 1)
  {
    OUTLINED_FUNCTION_5_3();
    sub_1C0044B78(v2, &qword_1EF5BD008);
  }
  else
  {
    OUTLINED_FUNCTION_73_7(v2, (uint64_t)v13);
    v23 = sub_1C03041EC();
    __swift_storeEnumTagSinglePayload(v1, 1, 1, v23);
    sub_1C00A3910((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguation);
    v24 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v25 = (v9 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = 0;
    *(_QWORD *)(v26 + 24) = 0;
    OUTLINED_FUNCTION_73_7((uint64_t)v11, v26 + v24);
    *(_QWORD *)(v26 + v25) = v0;
    OUTLINED_FUNCTION_14_0();
    sub_1C00E185C(v1, (uint64_t)&unk_1EF5BE5D8, v26);
    swift_release();
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_70_7((uint64_t)v13);
  }
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C0190E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5[9] = a4;
  v5[10] = a5;
  v6 = sub_1C0303694();
  v5[11] = v6;
  v5[12] = *(_QWORD *)(v6 - 8);
  v5[13] = swift_task_alloc();
  v7 = sub_1C0301D5C();
  v5[14] = v7;
  v5[15] = *(_QWORD *)(v7 - 8);
  v5[16] = swift_task_alloc();
  v5[17] = type metadata accessor for LearnedDisambiguation();
  v5[18] = swift_task_alloc();
  v8 = (_QWORD *)swift_task_alloc();
  v5[19] = v8;
  *v8 = v5;
  v8[1] = sub_1C0190F60;
  return sub_1C00F37F4((uint64_t)(v5 + 2));
}

uint64_t sub_1C0190F60()
{
  OUTLINED_FUNCTION_25_21();
  OUTLINED_FUNCTION_9_44();
  return swift_task_switch();
}

uint64_t sub_1C0190FA0()
{
  _QWORD *v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  os_log_type_t v25;
  _WORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  if (qword_1EF5B7F30 != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_9_0();
  v37 = __swift_project_value_buffer(v5, (uint64_t)qword_1EF5FC710);
  sub_1C0303B80();
  v6 = OUTLINED_FUNCTION_9_1();
  v35 = v3;
  v36 = v2;
  v34 = v4;
  if (OUTLINED_FUNCTION_37_1(v6))
  {
    v7 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v8 = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v7 = 136315138;
    v38 = v8;
    v0[5] = v2;
    v0[6] = v3;
    v0[7] = v4;
    v9 = sub_1C0303EF8();
    v0[8] = sub_1C003E6D8(v9, v10, &v38);
    sub_1C03044B0();
    OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v37, v1, "Collected signal values: %s", v7);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }

  v12 = (int *)v0[17];
  v11 = v0[18];
  v14 = v0[15];
  v13 = v0[16];
  v15 = (uint64_t *)v0[9];
  v16 = v15[1];
  v30 = v0[14];
  v31 = *v15;
  v17 = *(uint64_t *)((char *)v15 + v12[7]);
  v33 = *(_DWORD *)((char *)v15 + v12[8]);
  v18 = (uint64_t *)((char *)v15 + v12[9]);
  v19 = v18[1];
  v32 = *v18;
  OUTLINED_FUNCTION_45_0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_78_8();
  v20 = sub_1C0301D14();
  v22 = v21;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v30);
  sub_1C0301CF0();
  *(_QWORD *)v11 = v31;
  *(_QWORD *)(v11 + 8) = v16;
  *(_QWORD *)(v11 + 16) = v20;
  *(_QWORD *)(v11 + 24) = v22;
  *(_QWORD *)(v11 + v12[7]) = v17;
  *(_DWORD *)(v11 + v12[8]) = v33;
  v23 = (_QWORD *)(v11 + v12[9]);
  *v23 = v32;
  v23[1] = v19;
  v24 = (_QWORD *)(v11 + v12[10]);
  *v24 = v36;
  v24[1] = v35;
  v24[2] = v34;
  sub_1C0191348();
  sub_1C0191A7C();
  sub_1C0303B80();
  v25 = OUTLINED_FUNCTION_9_1();
  if (OUTLINED_FUNCTION_17(v37))
  {
    v26 = (_WORD *)OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_13(v26);
    OUTLINED_FUNCTION_10_3(&dword_1C0039000, v37, v25, "DisambiguationEntityResolution: Saving as an incoming interaction", (uint8_t *)v11);
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_64_8(v27, *MEMORY[0x1E0DA4298]);
  v28 = (_QWORD *)swift_task_alloc();
  v0[20] = v28;
  *v28 = v0;
  v28[1] = sub_1C0191284;
  return sub_1C0191C7C(v0[18], v0[13]);
}

uint64_t sub_1C0191284()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_25_21();
  v2 = v0[12];
  v1 = v0[13];
  v3 = v0[11];
  OUTLINED_FUNCTION_9_44();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_1C01912E4()
{
  uint64_t v0;

  sub_1C003DD84(*(_QWORD *)(v0 + 144), (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguation);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1C0191348()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  _WORD *v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  _WORD *v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  NSObject *v40;
  int v41;
  uint8_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  NSObject *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  OUTLINED_FUNCTION_18_0();
  v57 = v3;
  v58 = v4;
  v5 = v0;
  v7 = v6;
  OUTLINED_FUNCTION_46_14();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_65_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD008);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_6_0();
  v12 = v11 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE5A0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_27();
  v54 = v14;
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v49 - v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = OUTLINED_FUNCTION_45_13();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_1_1();
  if (qword_1EF5B7E68 != -1)
    swift_once();
  OUTLINED_FUNCTION_59_10();
  if (!v21)
  {
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v30 = OUTLINED_FUNCTION_9_0();
    v54 = OUTLINED_FUNCTION_7(v30, (uint64_t)qword_1EF5FC710);
    sub_1C03042E8();
    if (OUTLINED_FUNCTION_17(v54))
    {
      v31 = (_WORD *)OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_22_1(v31);
      v33 = "DisambiguationEntityResolution: Skipping training data emission because D&U not allowed.";
      goto LABEL_19;
    }
LABEL_20:
    OUTLINED_FUNCTION_0_18(v54);
    return;
  }
  v22 = v0[20];
  v53 = v0 + 17;
  if (*((_BYTE *)__swift_project_boxed_opaque_existential_1(v0 + 17, v22) + 8) != 1)
  {
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v34 = OUTLINED_FUNCTION_9_0();
    v54 = OUTLINED_FUNCTION_7(v34, (uint64_t)qword_1EF5FC710);
    sub_1C03042E8();
    if (OUTLINED_FUNCTION_17(v54))
    {
      v35 = (_WORD *)OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_22_1(v35);
      v33 = "DisambiguationEntityResolution: Skipping training data emission because of rate limit.";
LABEL_19:
      OUTLINED_FUNCTION_7_15(&dword_1C0039000, v54, v32, v33);
      OUTLINED_FUNCTION_5();
    }
    goto LABEL_20;
  }
  v52 = v7;
  v23 = v0[10];
  v24 = v0[11];
  v25 = v0[3];
  v51 = v0[2];
  if ((sub_1C01962A4(v51, v25, v23, v24) & 1) == 0)
  {
    v51 = (uint64_t)__swift_project_boxed_opaque_existential_1(v0 + 5, v0[8]);
    v50 = OUTLINED_FUNCTION_5_23();
    swift_bridgeObjectRetain();
    sub_1C03023F8();
    v36 = sub_1C03023D4();
    (*(void (**)(_QWORD *, uint64_t))(v20 + 8))(v0, v19);
    v51 = sub_1C0168BA4(v36);
    v37 = (uint64_t)v0 + OBJC_IVAR____TtC13SiriInference30DisambiguationEntityResolution_unusedPrediction;
    OUTLINED_FUNCTION_55_1();
    sub_1C0044B0C(v37, v2, &qword_1EF5BE5A0);
    v38 = OUTLINED_FUNCTION_44_10(v2);
    sub_1C0044B78(v2, &qword_1EF5BE5A0);
    if (v38 != 1 && *((_BYTE *)OUTLINED_FUNCTION_77_5() + 24) == 1)
    {
      if (qword_1EF5B7F30 != -1)
        swift_once();
      v39 = OUTLINED_FUNCTION_9_0();
      v40 = __swift_project_value_buffer(v39, (uint64_t)qword_1EF5FC710);
      OUTLINED_FUNCTION_14_0();
      sub_1C0303B80();
      v41 = OUTLINED_FUNCTION_9_1();
      if (OUTLINED_FUNCTION_47_0((os_log_type_t)v41))
      {
        HIDWORD(v49) = v41;
        v42 = (uint8_t *)OUTLINED_FUNCTION_4_0();
        *(_DWORD *)v42 = 67109120;
        sub_1C0044B0C(v37, (uint64_t)v18, &qword_1EF5BE5A0);
        if (OUTLINED_FUNCTION_44_10((uint64_t)v18))
        {
          v43 = &qword_1EF5BE5A0;
          v44 = (uint64_t)v18;
        }
        else
        {
          sub_1C00A3910((uint64_t)v18, v1, (uint64_t (*)(_QWORD))type metadata accessor for LearningResult);
          sub_1C0044B78((uint64_t)v18, &qword_1EF5BE5A0);
          sub_1C0044B0C(v1, v12, &qword_1EF5BD008);
          sub_1C003DD84(v1, (uint64_t (*)(_QWORD))type metadata accessor for LearningResult);
          v45 = v50;
          if (__swift_getEnumTagSinglePayload(v12, 1, v50) != 1)
          {
            v46 = *(_DWORD *)(v12 + *(int *)(v45 + 32));
            sub_1C003DD84(v12, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguation);
LABEL_33:
            LODWORD(v55) = v46;
            sub_1C03044B0();
            OUTLINED_FUNCTION_39_3();
            _os_log_impl(&dword_1C0039000, v40, BYTE4(v49), "DisambiguationEntityResolution: Forced disambiguation ignoring prediction %u.", v42, 8u);
            OUTLINED_FUNCTION_5();
          }
          v43 = &qword_1EF5BD008;
          v44 = v12;
        }
        sub_1C0044B78(v44, v43);
        v46 = 0;
        goto LABEL_33;
      }

      OUTLINED_FUNCTION_39_3();
    }
    __swift_project_boxed_opaque_existential_1(v5 + 22, v5[25]);
    v47 = v37;
    v48 = v54;
    sub_1C0044B0C(v47, (uint64_t)v54, &qword_1EF5BE5A0);
    OUTLINED_FUNCTION_77_5();
    sub_1C01B8A00();
    OUTLINED_FUNCTION_33();
    sub_1C0044B78((uint64_t)v48, &qword_1EF5BE5A0);
    OUTLINED_FUNCTION_1();
    return;
  }
  if (qword_1EF5B7F30 != -1)
    swift_once();
  v26 = OUTLINED_FUNCTION_9_0();
  v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1EF5FC710);
  OUTLINED_FUNCTION_14_0();
  sub_1C0303B80();
  v28 = OUTLINED_FUNCTION_9_1();
  if (OUTLINED_FUNCTION_37_1(v28))
  {
    v29 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v56 = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v29 = 136315138;
    OUTLINED_FUNCTION_65();
    v55 = sub_1C003E6D8(v51, v25, &v56);
    sub_1C03044B0();
    OUTLINED_FUNCTION_39_3();
    OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v27, (os_log_type_t)v19, "Excluding use case %s for logging.", v29);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }

  swift_release();
}

void sub_1C0191970(uint64_t a1)
{
  char v2;
  _QWORD *v3;
  uint64_t v4;
  _WORD *v5;
  uint64_t v6;
  NSObject *v7;

  if (qword_1EF5B7E68 != -1)
    swift_once();
  OUTLINED_FUNCTION_59_10();
  if (v2)
  {
    OUTLINED_FUNCTION_69_8();
    v3 = OUTLINED_FUNCTION_75_8();
    sub_1C01BA1FC(a1, *((_BYTE *)v3 + 24));
  }
  else
  {
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v4 = OUTLINED_FUNCTION_9_0();
    v7 = OUTLINED_FUNCTION_7(v4, (uint64_t)qword_1EF5FC710);
    sub_1C03042E8();
    if (OUTLINED_FUNCTION_17(v7))
    {
      v5 = (_WORD *)OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_22_1(v5);
      OUTLINED_FUNCTION_7_15(&dword_1C0039000, v7, v6, "DisambiguationEntityResolution: Skipping model triggered emission because D&U not allowed.");
      OUTLINED_FUNCTION_5();
    }

  }
}

void sub_1C0191A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _WORD *v11;
  uint64_t v12;
  NSObject *v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE5A0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_6_0();
  v5 = v4 - v3;
  v6 = OUTLINED_FUNCTION_46_14();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_7_10();
  if (qword_1EF5B7E68 != -1)
    swift_once();
  OUTLINED_FUNCTION_59_10();
  if (v8)
  {
    v9 = v0 + OBJC_IVAR____TtC13SiriInference30DisambiguationEntityResolution_unusedPrediction;
    OUTLINED_FUNCTION_55_1();
    sub_1C0044B0C(v9, v5, &qword_1EF5BE5A0);
    if (__swift_getEnumTagSinglePayload(v5, 1, v6) == 1)
    {
      sub_1C0044B78(v5, &qword_1EF5BE5A0);
    }
    else
    {
      sub_1C0045508(v5, v1, (uint64_t (*)(_QWORD))type metadata accessor for LearningResult);
      if (*(_QWORD *)(v1 + *(int *)(v6 + 20) + 8))
      {
        OUTLINED_FUNCTION_22();
        sub_1C0191EA4(3);
        OUTLINED_FUNCTION_69_8();
        sub_1C01B9F2C();
        OUTLINED_FUNCTION_18();
      }
      sub_1C003DD84(v1, (uint64_t (*)(_QWORD))type metadata accessor for LearningResult);
    }
  }
  else
  {
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v10 = OUTLINED_FUNCTION_9_0();
    v13 = OUTLINED_FUNCTION_7(v10, (uint64_t)qword_1EF5FC710);
    sub_1C03042E8();
    if (OUTLINED_FUNCTION_17(v13))
    {
      v11 = (_WORD *)OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_22_1(v11);
      OUTLINED_FUNCTION_7_15(&dword_1C0039000, v13, v12, "DisambiguationEntityResolution: Skipping model evaluation emission because D&U not allowed.");
      OUTLINED_FUNCTION_5();
    }

  }
}

uint64_t sub_1C0191C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1C0191C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;

  v1 = OUTLINED_FUNCTION_10_11();
  if ((sub_1C019602C(v1, v2, v3) & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 40) + 40), *(_QWORD *)(*(_QWORD *)(v0 + 40) + 64));
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v4;
    *v4 = v0;
    v4[1] = sub_1C0191E78;
    return sub_1C0169B64(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  }
  else
  {
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v6 = OUTLINED_FUNCTION_9_0();
    v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1EF5FC710);
    swift_retain();
    sub_1C0303B80();
    v8 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_37_1(v8))
    {
      v9 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v9 = 136315138;
      OUTLINED_FUNCTION_44();
      v10 = OUTLINED_FUNCTION_10_11();
      *(_QWORD *)(v0 + 16) = sub_1C003E6D8(v10, v11, v12);
      sub_1C03044B0();
      OUTLINED_FUNCTION_33();
      swift_release();
      OUTLINED_FUNCTION_13_0(&dword_1C0039000, v7, (os_log_type_t)v7, "Unsupported use case %s, not storing.", v9);
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_5();
    }
    swift_release();

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1C0191E78()
{
  uint64_t v0;

  OUTLINED_FUNCTION_25_21();
  OUTLINED_FUNCTION_9_44();
  return OUTLINED_FUNCTION_1_11(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1C0191EA4(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  os_log_type_t v4;
  _DWORD *v5;
  uint64_t v6;
  _WORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  _QWORD v13[3];
  uint64_t v14;

  if (qword_1EF5B7E68 != -1)
    swift_once();
  if (byte_1EF5FC660 == 1)
  {
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v3 = OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7(v3, (uint64_t)qword_1EF5FC710);
    v4 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_47_0(v4))
    {
      v5 = (_DWORD *)OUTLINED_FUNCTION_4_0();
      v13[0] = OUTLINED_FUNCTION_4_0();
      *v5 = 136315138;
      __asm { BR              X10 }
    }

    sub_1C0044B0C((uint64_t)v1 + OBJC_IVAR____TtC13SiriInference30DisambiguationEntityResolution_triggerLogger, (uint64_t)v13, &qword_1EF5BA420);
    if (v14)
    {
      __swift_project_boxed_opaque_existential_1(v13, v14);
      sub_1C0303748();
      if (sub_1C0303730())
      {
        sub_1C0303718();
        OUTLINED_FUNCTION_5_3();
        v9 = sub_1C0303988();
        v11 = v10;
        swift_release();
      }
      else
      {
        v9 = 0;
        v11 = 0;
      }
      sub_1C004DB18(a1, v9, v11);
      OUTLINED_FUNCTION_18();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
    }
    else
    {
      sub_1C0044B78((uint64_t)v13, &qword_1EF5BA420);
    }
  }
  else
  {
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v6 = OUTLINED_FUNCTION_9_0();
    v12 = OUTLINED_FUNCTION_7(v6, (uint64_t)qword_1EF5FC710);
    sub_1C03042E8();
    if (OUTLINED_FUNCTION_17(v12))
    {
      v7 = (_WORD *)OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_22_1(v7);
      OUTLINED_FUNCTION_7_15(&dword_1C0039000, v12, v8, "DisambiguationEntityResolution: Skipping trigger logging because D&U not allowed.");
      OUTLINED_FUNCTION_5();
    }

  }
}

void DisambiguationEntityResolution.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 40);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 96);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 136);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 176);
  sub_1C0044B78(v0 + OBJC_IVAR____TtC13SiriInference30DisambiguationEntityResolution_unusedPrediction, &qword_1EF5BE5A0);
  sub_1C0044B78(v0 + OBJC_IVAR____TtC13SiriInference30DisambiguationEntityResolution_triggerLogger, &qword_1EF5BA420);
  OUTLINED_FUNCTION_9();
}

uint64_t DisambiguationEntityResolution.__deallocating_deinit()
{
  DisambiguationEntityResolution.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0192248()
{
  return DisambiguationEntityResolution.useCase.getter();
}

void sub_1C0192268()
{
  sub_1C018F89C();
}

void sub_1C0192288(uint64_t *a1)
{
  sub_1C01908E8(a1);
}

void sub_1C01922A8()
{
  sub_1C0190BCC();
}

uint64_t sub_1C01922C8()
{
  return sub_1C018F310();
}

uint64_t sub_1C01922E8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = *a3;
  v5 = a3[1];
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = v4;
  v3[5] = v5;
  if (*(_QWORD *)(v5 + 16) != *(_QWORD *)(v4 + 16))
  {
    v6 = (_QWORD *)sub_1C0303DB4();
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_44();
  swift_bridgeObjectRetain_n();
  v6 = (_QWORD *)sub_1C0303DB4();
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
  {
LABEL_15:
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_33();
LABEL_17:
    v3[6] = v6;
    return (uint64_t)v3;
  }
  if (v7 <= *(_QWORD *)(v4 + 16))
  {
    OUTLINED_FUNCTION_74_1();
    v8 = 0;
    v25 = v5;
    v26 = v4;
    while (1)
    {
      v10 = *(_QWORD *)(v5 + v8 + 32);
      v9 = *(_QWORD *)(v5 + v8 + 40);
      v11 = *(_QWORD *)(v4 + v8 + 40);
      v27 = *(_QWORD *)(v4 + v8 + 32);
      OUTLINED_FUNCTION_74_1();
      OUTLINED_FUNCTION_45_0();
      swift_isUniquelyReferenced_nonNull_native();
      v12 = sub_1C00B3C3C(v10, v9);
      if (__OFADD__(v6[2], (v13 & 1) == 0))
        break;
      v14 = v12;
      v15 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8E08);
      if ((sub_1C03047BC() & 1) != 0)
      {
        v16 = sub_1C00B3C3C(v10, v9);
        if ((v15 & 1) != (v17 & 1))
          goto LABEL_21;
        v14 = v16;
      }
      if ((v15 & 1) != 0)
      {
        v18 = (_QWORD *)(v6[7] + 16 * v14);
        swift_bridgeObjectRelease();
        *v18 = v27;
        v18[1] = v11;
      }
      else
      {
        v6[(v14 >> 6) + 8] |= 1 << v14;
        v19 = (uint64_t *)(v6[6] + 16 * v14);
        *v19 = v10;
        v19[1] = v9;
        v20 = (_QWORD *)(v6[7] + 16 * v14);
        *v20 = v27;
        v20[1] = v11;
        v21 = v6[2];
        v22 = __OFADD__(v21, 1);
        v23 = v21 + 1;
        if (v22)
          goto LABEL_19;
        v6[2] = v23;
        OUTLINED_FUNCTION_74_1();
      }
      OUTLINED_FUNCTION_55_0();
      swift_bridgeObjectRelease();
      v8 += 16;
      --v7;
      v5 = v25;
      v4 = v26;
      if (!v7)
      {
        OUTLINED_FUNCTION_55_0();
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
  }
  __break(1u);
LABEL_21:
  result = sub_1C0304A68();
  __break(1u);
  return result;
}

void sub_1C0192528()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  OUTLINED_FUNCTION_18_0();
  v93 = v1;
  v94 = v2;
  v3 = v0;
  v5 = v4;
  v7 = v6;
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_6_0();
  v11 = v10 - v9;
  v12 = sub_1C0301D5C();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_1_1();
  v15 = *(_QWORD *)v5;
  v16 = *(_QWORD *)(v5 + 24);
  v17 = *(_QWORD *)(v5 + 32);
  if (!*(_BYTE *)(v5 + 16))
  {
    if ((v15 & 0x8000000000000000) != 0 || (v37 = v0[4], v15 >= *(_QWORD *)(v37 + 16)))
    {
      v53 = OUTLINED_FUNCTION_5_23();
      __swift_storeEnumTagSinglePayload(v7, 1, 1, v53);
      return;
    }
    v38 = v37 + 16 * v15;
    v39 = *(_QWORD *)(v38 + 40);
    v83 = *(_QWORD *)(v38 + 32);
    v85 = v13;
    v40 = v0[3];
    v78 = v16;
    v80 = v0[2];
    v41 = v14;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_74_1();
    OUTLINED_FUNCTION_44();
    OUTLINED_FUNCTION_45_0();
    OUTLINED_FUNCTION_78_8();
    v42 = sub_1C0301D14();
    v43 = v17;
    v45 = v44;
    (*(void (**)(_QWORD *, uint64_t))(v41 + 8))(v0, v85);
    sub_1C0301CF0();
    v69 = v43;
    v68 = v78;
    v29 = v80;
    v30 = v83;
    v31 = v40;
    v32 = v42;
    v33 = v45;
    v34 = v11;
    v35 = v37;
    v36 = v39;
    goto LABEL_8;
  }
  v18 = *(_QWORD *)(v5 + 8);
  if (*(_BYTE *)(v5 + 16) != 1)
  {
    v77 = v11;
    v48 = v0[4];
    v49 = *(_QWORD *)(v48 + 16);
    if (v49)
    {
      v71 = (uint64_t)v0;
      v73 = v17;
      v84 = v14;
      v86 = v13;
      v79 = v16;
      v81 = v7;
      OUTLINED_FUNCTION_44();
      sub_1C01893C8(v15, v18, 2u);
      OUTLINED_FUNCTION_44();
      sub_1C004F408();
      v75 = v48;
      v50 = (uint64_t *)(v48 + 40);
      while (1)
      {
        v52 = *(v50 - 1);
        v51 = *v50;
        v91 = v52;
        v92 = v51;
        v88 = v15;
        v90 = v18;
        OUTLINED_FUNCTION_44();
        if (!sub_1C0304510())
          break;
        v50 += 2;
        OUTLINED_FUNCTION_33();
        if (!--v49)
        {
          OUTLINED_FUNCTION_2();
          OUTLINED_FUNCTION_62_8();
          v7 = v81;
          goto LABEL_14;
        }
      }
      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_62_8();
      v61 = v0[2];
      v62 = v0[3];
      OUTLINED_FUNCTION_45_0();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_22();
      sub_1C0301D50();
      v63 = sub_1C0301D14();
      v65 = v64;
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v71, v86);
      sub_1C0301CF0();
      v66 = v81;
      LearnedDisambiguation.init(useCase:id:timestamp:choices:selection:encodedPayload:)(v61, v62, v63, v65, v77, v75, v52, v51, v79, v73, v71, v73, v75, v77, v79, v81, v84, v86, v88,
        v90,
        v91,
        v92);
      v46 = OUTLINED_FUNCTION_5_23();
      v47 = v66;
      goto LABEL_21;
    }
LABEL_14:
    v46 = OUTLINED_FUNCTION_5_23();
    v47 = v7;
LABEL_23:
    v67 = 1;
    goto LABEL_24;
  }
  v83 = v14;
  v85 = v13;
  v19 = v0[6];
  OUTLINED_FUNCTION_61_7();
  OUTLINED_FUNCTION_21();
  sub_1C00A9DF8(v15, v18, v19);
  v80 = v20;
  v22 = v21;
  OUTLINED_FUNCTION_16_29();
  if (!v22)
  {
    v82 = v7;
    v54 = sub_1C0303D9C();
    v56 = v55;
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v57 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v57, (uint64_t)qword_1EF5FC710);
    OUTLINED_FUNCTION_61_7();
    OUTLINED_FUNCTION_65();
    v58 = sub_1C0303B80();
    v59 = sub_1C03042F4();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = OUTLINED_FUNCTION_4_0();
      v91 = OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v60 = 136315394;
      OUTLINED_FUNCTION_21();
      sub_1C003E6D8(v15, v18, &v91);
      OUTLINED_FUNCTION_56_14();
      sub_1C0189458(v15, v18, 1u);
      OUTLINED_FUNCTION_16_29();
      swift_bridgeObjectRelease();
      *(_WORD *)(v60 + 12) = 2080;
      OUTLINED_FUNCTION_65();
      sub_1C003E6D8(v54, v56, &v91);
      OUTLINED_FUNCTION_56_14();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0039000, v58, v59, "DisambiguationEntityResolution: PervasiveEntityResolution No match to identifier [%s] in %s.", (uint8_t *)v60, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }
    sub_1C0189458(v15, v18, 1u);
    OUTLINED_FUNCTION_16_29();

    OUTLINED_FUNCTION_2();
    v46 = OUTLINED_FUNCTION_5_23();
    v47 = v82;
    goto LABEL_23;
  }
  OUTLINED_FUNCTION_16_29();
  v23 = v3[3];
  v78 = v3[2];
  v24 = v3[4];
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_21();
  sub_1C0301D50();
  v25 = sub_1C0301D14();
  v26 = v17;
  v28 = v27;
  OUTLINED_FUNCTION_76_8(v83);
  sub_1C0301CF0();
  v68 = v16;
  v69 = v26;
  v29 = v78;
  v30 = v80;
  v31 = v23;
  v32 = v25;
  v33 = v28;
  v34 = v11;
  v35 = v24;
  v36 = v22;
LABEL_8:
  LearnedDisambiguation.init(useCase:id:timestamp:choices:selection:encodedPayload:)(v29, v31, v32, v33, v34, v35, v30, v36, v68, v69, v70, v72, v74, v76, v78, v80, v83, v85, v87,
    v89,
    v91,
    v92);
  v46 = OUTLINED_FUNCTION_5_23();
  v47 = v7;
LABEL_21:
  v67 = 0;
LABEL_24:
  __swift_storeEnumTagSinglePayload(v47, v67, 1, v46);
  OUTLINED_FUNCTION_1();
}

void sub_1C0192A64()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C0192A98()
{
  sub_1C0192A64();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0192AB8(uint64_t a1)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[3];
  uint64_t v46;
  _UNKNOWN **v47;

  v46 = type metadata accessor for PervasiveConfiguration();
  v47 = &off_1E7990F40;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v45);
  sub_1C0045508(a1, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for PervasiveConfiguration);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727E60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0313400;
  *(_QWORD *)(inited + 32) = 0xD000000000000012;
  *(_QWORD *)(inited + 40) = 0x80000001C0330430;
  *(_QWORD *)(inited + 48) = 0xD000000000000014;
  *(_QWORD *)(inited + 56) = 0x80000001C0330450;
  *(_QWORD *)(inited + 64) = 0xD000000000000011;
  *(_QWORD *)(inited + 72) = 0x80000001C0330470;
  *(_QWORD *)(inited + 80) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 88) = 0x80000001C0330490;
  *(_QWORD *)(inited + 96) = 0xD000000000000014;
  *(_QWORD *)(inited + 104) = 0x80000001C03304B0;
  v4 = MEMORY[0x1E0DEE9D8];
  v44 = MEMORY[0x1E0DEE9D8];
  sub_1C00B1764();
  v5 = v44;
  v6 = sub_1C0303F10();
  v8 = v7;
  v9 = *(_QWORD *)(v44 + 16);
  if (v9 >= *(_QWORD *)(v44 + 24) >> 1)
  {
    sub_1C00B1764();
    v5 = v44;
  }
  *(_QWORD *)(v5 + 16) = v9 + 1;
  v10 = v5 + 16 * v9;
  *(_QWORD *)(v10 + 32) = v6;
  *(_QWORD *)(v10 + 40) = v8;
  v11 = sub_1C0303F10();
  v13 = v12;
  v14 = *(_QWORD *)(v5 + 16);
  if (v14 >= *(_QWORD *)(v5 + 24) >> 1)
  {
    sub_1C00B1764();
    v5 = v44;
  }
  *(_QWORD *)(v5 + 16) = v14 + 1;
  v15 = v5 + 16 * v14;
  *(_QWORD *)(v15 + 32) = v11;
  *(_QWORD *)(v15 + 40) = v13;
  v16 = sub_1C0303F10();
  v18 = v17;
  v19 = *(_QWORD *)(v5 + 16);
  if (v19 >= *(_QWORD *)(v5 + 24) >> 1)
    sub_1C00B1764();
  v20 = v44;
  *(_QWORD *)(v44 + 16) = v19 + 1;
  v21 = v44 + 16 * v19;
  *(_QWORD *)(v21 + 32) = v16;
  *(_QWORD *)(v21 + 40) = v18;
  v22 = sub_1C0303F10();
  v24 = v23;
  v25 = *(_QWORD *)(v44 + 16);
  if (v25 >= *(_QWORD *)(v44 + 24) >> 1)
  {
    sub_1C00B1764();
    v20 = v44;
  }
  *(_QWORD *)(v20 + 16) = v25 + 1;
  v26 = v20 + 16 * v25;
  *(_QWORD *)(v26 + 32) = v22;
  *(_QWORD *)(v26 + 40) = v24;
  v27 = sub_1C0303F10();
  v29 = v28;
  v30 = *(_QWORD *)(v20 + 16);
  if (v30 >= *(_QWORD *)(v20 + 24) >> 1)
  {
    sub_1C00B1764();
    v20 = v44;
  }
  *(_QWORD *)(v20 + 16) = v30 + 1;
  v31 = v20 + 16 * v30;
  *(_QWORD *)(v31 + 32) = v27;
  *(_QWORD *)(v31 + 40) = v29;
  swift_setDeallocating();
  sub_1C004F004();
  v32 = __swift_project_boxed_opaque_existential_1(v45, v46);
  v33 = v32[4] == 5000257 && v32[5] == 0xE300000000000000;
  if (v33 || (sub_1C0304A08() & 1) != 0)
  {
    v34 = 0;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v45, v46);
    sub_1C004F408();
    v36 = sub_1C03044D4();
    v37 = *(_QWORD *)(v36 + 16);
    if (v37)
    {
      sub_1C00B1764();
      v34 = v4;
      v38 = v36 + 40;
      do
      {
        v39 = sub_1C0303F10();
        v41 = v40;
        v42 = *(_QWORD *)(v4 + 16);
        if (v42 >= *(_QWORD *)(v4 + 24) >> 1)
          sub_1C00B1764();
        v38 += 16;
        *(_QWORD *)(v4 + 16) = v42 + 1;
        v43 = v4 + 16 * v42;
        *(_QWORD *)(v43 + 32) = v39;
        *(_QWORD *)(v43 + 40) = v41;
        --v37;
      }
      while (v37);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v34 = MEMORY[0x1E0DEE9D8];
    }
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
  return v34;
}

_QWORD *sub_1C0192EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD v36[2];
  uint64_t v37[5];
  _QWORD v38[5];
  _QWORD v39[5];
  uint64_t v40[5];
  uint64_t v41[6];

  v41[3] = type metadata accessor for PervasiveConfiguration();
  v41[4] = (uint64_t)&off_1E7990F40;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v41);
  sub_1C0045508(a3, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for PervasiveConfiguration);
  v40[3] = type metadata accessor for LearnedDisambiguationPersistentStorage();
  v40[4] = (uint64_t)&off_1E7997478;
  v17 = __swift_allocate_boxed_opaque_existential_0(v40);
  sub_1C0045508(a4, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguationPersistentStorage);
  v39[3] = type metadata accessor for LoggingDataEmitter();
  v39[4] = &off_1E799C250;
  v39[0] = a6;
  v38[3] = type metadata accessor for ExperimentationTriggerLogger();
  v38[4] = &off_1E799C640;
  v38[0] = a7;
  a8[4] = 0;
  v18 = (uint64_t)a8 + OBJC_IVAR____TtC13SiriInference30DisambiguationEntityResolution_unusedPrediction;
  v19 = type metadata accessor for LearningResult();
  __swift_storeEnumTagSinglePayload(v18, 1, 1, v19);
  a8[2] = a1;
  a8[3] = a2;
  sub_1C0049024((uint64_t)v40, (uint64_t)(a8 + 5));
  sub_1C0049024((uint64_t)v41, (uint64_t)v37);
  v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v37[3]);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v23 + 16))(v22);
  v24 = sub_1C0192AB8((uint64_t)v22);
  v26 = v25;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v37);
  a8[10] = v24;
  a8[11] = v26;
  sub_1C0049024(a5, (uint64_t)(a8 + 12));
  sub_1C0049024((uint64_t)v41, (uint64_t)(a8 + 17));
  sub_1C0049024((uint64_t)v39, (uint64_t)(a8 + 22));
  sub_1C0049024((uint64_t)v38, (uint64_t)a8 + OBJC_IVAR____TtC13SiriInference30DisambiguationEntityResolution_triggerLogger);
  if (qword_1EF5B7F30 != -1)
    swift_once();
  v27 = sub_1C0303B98();
  __swift_project_value_buffer(v27, (uint64_t)qword_1EF5FC710);
  swift_retain_n();
  v28 = sub_1C0303B80();
  v29 = sub_1C03042E8();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v37[0] = v31;
    *(_DWORD *)v30 = 136315138;
    swift_retain();
    v32 = sub_1C018F310();
    v34 = v33;
    swift_release();
    v36[1] = sub_1C003E6D8(v32, v34, v37);
    sub_1C03044B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v28, v29, "DisambiguationEntityResolution: processing with %s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v31, -1, -1);
    MEMORY[0x1C3B98378](v30, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v38);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v39);
  __swift_destroy_boxed_opaque_existential_0Tm(a5);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v40);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v41);
  return a8;
}

_QWORD *sub_1C019325C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD v36[3];
  uint64_t v37;
  _UNKNOWN **v38;
  _QWORD v39[5];
  uint64_t v40[3];
  uint64_t v41;
  _UNKNOWN **v42;
  uint64_t v43[3];
  uint64_t v44;
  _UNKNOWN **v45;

  v44 = type metadata accessor for PervasiveConfiguration();
  v45 = &off_1E7990F40;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v43);
  sub_1C0045508(a3, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for PervasiveConfiguration);
  v41 = type metadata accessor for LearnedDisambiguationPersistentStorage();
  v42 = &off_1E7997478;
  v15 = __swift_allocate_boxed_opaque_existential_0(v40);
  sub_1C0045508(a4, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguationPersistentStorage);
  v16 = type metadata accessor for LoggingDataEmitter();
  v39[3] = v16;
  v39[4] = &off_1E799C250;
  v39[0] = a6;
  v37 = type metadata accessor for ExperimentationTriggerLogger();
  v38 = &off_1E799C640;
  v36[0] = a7;
  type metadata accessor for DisambiguationEntityResolution();
  v17 = (_QWORD *)swift_allocObject();
  v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v43, v44);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v21 + 16))(v20);
  v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v36 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v25 + 16))(v24);
  v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, v16);
  MEMORY[0x1E0C80A78](v26);
  v28 = (_QWORD *)((char *)v36 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v29 + 16))(v28);
  v30 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v37);
  MEMORY[0x1E0C80A78](v30);
  v32 = (_QWORD *)((char *)v36 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v33 + 16))(v32);
  v34 = sub_1C0192EC8(a1, a2, (uint64_t)v20, (uint64_t)v24, a5, *v28, *v32, v17);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v36);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v39);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v40);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v43);
  return v34;
}

uint64_t sub_1C01934F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_46_14() - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  v2 = OUTLINED_FUNCTION_5_23();
  if (!__swift_getEnumTagSinglePayload(v0 + ((v1 + 40) & ~v1), 1, v2))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_49(v3);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_68_6();
  }
  OUTLINED_FUNCTION_68_6();
  return OUTLINED_FUNCTION_2_9();
}

uint64_t sub_1C01935B0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_46_14();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_11_44(v1);
  return sub_1C0190218(v2, v3, v4, v5, v6);
}

uint64_t sub_1C0193628(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0193674()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_5_23();
  OUTLINED_FUNCTION_15_31();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_11_44(v1);
  return sub_1C0190258(v2, v3, v4, v5, v6);
}

uint64_t sub_1C01936D4(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C0193700(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for OngoingLearning()
{
  return objc_opt_self();
}

uint64_t objectdestroy_3Tm_0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_5_23();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_49(v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return OUTLINED_FUNCTION_2_9();
}

uint64_t sub_1C01937FC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_5_23();
  OUTLINED_FUNCTION_15_31();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_11_44(v1);
  return sub_1C0190E98(v2, v3, v4, v5, v6);
}

uint64_t sub_1C019385C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_25_21();
  OUTLINED_FUNCTION_9_44();
  return OUTLINED_FUNCTION_1_11(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0193888()
{
  return type metadata accessor for DisambiguationEntityResolution();
}

uint64_t type metadata accessor for DisambiguationEntityResolution()
{
  uint64_t result;

  result = qword_1EF5BE610;
  if (!qword_1EF5BE610)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C01938C8()
{
  unint64_t v0;

  sub_1C01939AC();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for DisambiguationEntityResolution()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DisambiguationEntityResolution.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DisambiguationEntityResolution.learnedSelection(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DisambiguationEntityResolution.beginLearning(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DisambiguationEntityResolution.finishLearning(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

void sub_1C01939AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF5BE628[0])
  {
    type metadata accessor for LearningResult();
    v0 = sub_1C030448C();
    if (!v1)
      atomic_store(v0, qword_1EF5BE628);
  }
}

uint64_t OUTLINED_FUNCTION_9_44()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_11_44(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_14_38()
{
  uint64_t v0;

  return sub_1C0193700(v0);
}

uint64_t OUTLINED_FUNCTION_16_29()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C0189458(v0, v1, 1u);
}

void OUTLINED_FUNCTION_25_21()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_29_23()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_34_23()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(*(_QWORD *)(v1 - 152), 1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_42_13(float a1)
{
  float *v1;

  *v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_45_13()
{
  return sub_1C03023E0();
}

uint64_t OUTLINED_FUNCTION_46_14()
{
  return type metadata accessor for LearningResult();
}

uint64_t OUTLINED_FUNCTION_56_14()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_61_7()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C01893C8(v0, v1, 1u);
}

void OUTLINED_FUNCTION_67_4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1C003DD84(v2, a2);
}

uint64_t OUTLINED_FUNCTION_68_6()
{
  return swift_bridgeObjectRelease();
}

_QWORD *OUTLINED_FUNCTION_69_8()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 200));
}

void OUTLINED_FUNCTION_70_7(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1C003DD84(a1, v1);
}

void OUTLINED_FUNCTION_73_7(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C0045508(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_78_8()
{
  return sub_1C0301D50();
}

uint64_t SearchForSportsIntent.memorableParameters()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v79 = MEMORY[0x1E0DEE9E0];
  v1 = OUTLINED_FUNCTION_0_35(a1, (SEL *)&selRef_sportName);
  if (v2)
  {
    v8 = OUTLINED_FUNCTION_8_39(v1, v2, 0xE900000000000065, v3, v4, v5, v6, v7, v66, v67, v69, v71, v73, v75, v77, v1);
    v1 = sub_1C006EBFC((uint64_t)v8);
  }
  v9 = OUTLINED_FUNCTION_0_35(v1, (SEL *)&selRef_leagueName);
  if (v10)
  {
    OUTLINED_FUNCTION_11_45();
    v9 = sub_1C006EBFC(v11);
  }
  v12 = OUTLINED_FUNCTION_0_35(v9, (SEL *)&selRef_teamName);
  if (v13)
  {
    OUTLINED_FUNCTION_9_45();
    v12 = sub_1C006EBFC(v14);
  }
  v15 = OUTLINED_FUNCTION_0_35(v12, (SEL *)&selRef_athleteName);
  if (v16)
  {
    OUTLINED_FUNCTION_7_50();
    v15 = sub_1C006EBFC(v17);
  }
  v18 = OUTLINED_FUNCTION_0_35(v15, (SEL *)&selRef_sportQId);
  if (v19)
  {
    v26 = OUTLINED_FUNCTION_8_39(v18, v19, v20, v21, v22, v23, v24, v25, v66, v67, v69, v71, v73, v75, v77, v18);
    v18 = sub_1C006EBFC((uint64_t)v26);
  }
  v27 = OUTLINED_FUNCTION_0_35(v18, (SEL *)&selRef_leagueQId);
  if (v28)
  {
    OUTLINED_FUNCTION_11_45();
    v27 = sub_1C006EBFC(v29);
  }
  v30 = OUTLINED_FUNCTION_0_35(v27, (SEL *)&selRef_teamQId);
  if (v31)
  {
    OUTLINED_FUNCTION_9_45();
    v30 = sub_1C006EBFC(v32);
  }
  v33 = OUTLINED_FUNCTION_0_35(v30, (SEL *)&selRef_athleteQId);
  if (v34)
  {
    OUTLINED_FUNCTION_7_50();
    v33 = sub_1C006EBFC(v35);
  }
  v36 = OUTLINED_FUNCTION_0_35(v33, (SEL *)&selRef_sportName);
  v76 = v37;
  v78 = v36;
  v38 = OUTLINED_FUNCTION_0_35(v36, (SEL *)&selRef_leagueName);
  v72 = v39;
  v74 = v38;
  v40 = OUTLINED_FUNCTION_0_35(v38, (SEL *)&selRef_teamName);
  v68 = v41;
  v70 = v40;
  v42 = OUTLINED_FUNCTION_0_35(v40, (SEL *)&selRef_athleteName);
  v44 = v43;
  v45 = OUTLINED_FUNCTION_0_35(v42, (SEL *)&selRef_sportQId);
  v47 = v46;
  v48 = OUTLINED_FUNCTION_0_35(v45, (SEL *)&selRef_leagueQId);
  v50 = v49;
  v51 = OUTLINED_FUNCTION_0_35(v48, (SEL *)&selRef_teamQId);
  v53 = v52;
  v54 = OUTLINED_FUNCTION_0_35(v51, (SEL *)&selRef_athleteQId);
  v56 = v55;
  v57 = (_QWORD *)swift_allocObject();
  v57[2] = v78;
  v57[3] = v76;
  v57[4] = v74;
  v57[5] = v72;
  v57[6] = v70;
  v57[7] = v68;
  v57[8] = v42;
  v57[9] = v44;
  v57[10] = v45;
  v57[11] = v47;
  v57[12] = v48;
  v57[13] = v50;
  v57[14] = v51;
  v57[15] = v53;
  v57[16] = v54;
  v57[17] = v56;
  v64 = OUTLINED_FUNCTION_8_39((uint64_t)v57, v58, 0xEA00000000006D65, v59, v60, v61, v62, v63, v66, v68, v70, v72, v74, v76, v78, (char)v57);
  sub_1C006EBFC((uint64_t)v64);
  return v79;
}

uint64_t sub_1C0193DF4(uint64_t a1)
{
  return SearchForSportsIntent.memorableParameters()(a1);
}

unint64_t SportsSearchItem.inType.getter()
{
  return 0xD000000000000010;
}

uint64_t SportsSearchItem.memorableTokenString.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v1 = v0[1];
  v2 = v0[3];
  v3 = v0[7];
  v4 = v0[9];
  v51 = v0[5];
  v52 = v0[13];
  v53 = v0[11];
  v5 = v0[15];
  v6 = MEMORY[0x1E0DEE9D8];
  v56 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    OUTLINED_FUNCTION_6_47();
    sub_1C0303FD0();
    v7 = v54;
    v8 = v55;
    sub_1C00500A0();
    v6 = v9;
    v10 = *(_QWORD *)(v9 + 16);
    if (v10 >= *(_QWORD *)(v9 + 24) >> 1)
    {
      OUTLINED_FUNCTION_2_13();
      v6 = v38;
    }
    *(_QWORD *)(v6 + 16) = v10 + 1;
    v11 = v6 + 16 * v10;
    *(_QWORD *)(v11 + 32) = v7;
    *(_QWORD *)(v11 + 40) = v8;
    v56 = v6;
  }
  if (v2)
  {
    OUTLINED_FUNCTION_6_47();
    sub_1C0303FD0();
    v12 = v54;
    v13 = v55;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_0_70();
      v6 = v39;
    }
    v14 = *(_QWORD *)(v6 + 16);
    if (v14 >= *(_QWORD *)(v6 + 24) >> 1)
    {
      OUTLINED_FUNCTION_2_13();
      v6 = v40;
    }
    *(_QWORD *)(v6 + 16) = v14 + 1;
    v15 = v6 + 16 * v14;
    *(_QWORD *)(v15 + 32) = v12;
    *(_QWORD *)(v15 + 40) = v13;
    v56 = v6;
  }
  v16 = v53;
  if (v51)
  {
    v17 = v3;
    OUTLINED_FUNCTION_6_47();
    sub_1C0303FD0();
    v18 = v54;
    v19 = v55;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_0_70();
      v6 = v41;
    }
    v20 = *(_QWORD *)(v6 + 16);
    if (v20 >= *(_QWORD *)(v6 + 24) >> 1)
    {
      OUTLINED_FUNCTION_2_13();
      v6 = v42;
    }
    *(_QWORD *)(v6 + 16) = v20 + 1;
    v21 = v6 + 16 * v20;
    *(_QWORD *)(v21 + 32) = v18;
    *(_QWORD *)(v21 + 40) = v19;
    v56 = v6;
    v3 = v17;
  }
  v22 = v52;
  if (v3)
  {
    OUTLINED_FUNCTION_6_47();
    sub_1C0303FD0();
    if ((OUTLINED_FUNCTION_4_55() & 1) == 0)
    {
      OUTLINED_FUNCTION_0_70();
      v6 = v43;
    }
    OUTLINED_FUNCTION_5_46();
    if (v23)
    {
      OUTLINED_FUNCTION_2_13();
      v6 = v44;
    }
    OUTLINED_FUNCTION_3_71();
    v22 = v52;
    v16 = v53;
  }
  if (v4)
  {
    OUTLINED_FUNCTION_6_47();
    sub_1C0303FD0();
    if ((OUTLINED_FUNCTION_4_55() & 1) == 0)
    {
      OUTLINED_FUNCTION_0_70();
      v6 = v45;
    }
    OUTLINED_FUNCTION_5_46();
    if (v23)
    {
      OUTLINED_FUNCTION_2_13();
      v6 = v46;
    }
    OUTLINED_FUNCTION_3_71();
  }
  if (v16)
  {
    OUTLINED_FUNCTION_6_47();
    sub_1C0303FD0();
    if ((OUTLINED_FUNCTION_4_55() & 1) == 0)
    {
      OUTLINED_FUNCTION_0_70();
      v6 = v47;
    }
    OUTLINED_FUNCTION_5_46();
    if (v23)
    {
      OUTLINED_FUNCTION_2_13();
      v6 = v48;
    }
    OUTLINED_FUNCTION_3_71();
  }
  if (v22)
  {
    OUTLINED_FUNCTION_6_47();
    sub_1C0303FD0();
    if ((OUTLINED_FUNCTION_4_55() & 1) == 0)
    {
      OUTLINED_FUNCTION_0_70();
      v6 = v49;
    }
    OUTLINED_FUNCTION_5_46();
    if (v23)
    {
      OUTLINED_FUNCTION_2_13();
      v6 = v50;
    }
    OUTLINED_FUNCTION_3_71();
  }
  if (v5)
  {
    OUTLINED_FUNCTION_6_47();
    sub_1C0303FD0();
    if ((OUTLINED_FUNCTION_4_55() & 1) == 0)
      OUTLINED_FUNCTION_0_70();
    OUTLINED_FUNCTION_5_46();
    if (v23)
      OUTLINED_FUNCTION_2_13();
    OUTLINED_FUNCTION_3_71();
    goto LABEL_48;
  }
  if (*(_QWORD *)(v6 + 16))
  {
LABEL_48:
    if (qword_1ED728298 != -1)
      swift_once();
    v24 = sub_1C0303B98();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED729610);
    swift_bridgeObjectRetain_n();
    v25 = sub_1C0303B80();
    v26 = sub_1C03042E8();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      v54 = OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v27 = 136315138;
      v28 = swift_bridgeObjectRetain();
      v29 = MEMORY[0x1C3B97040](v28, MEMORY[0x1E0DEA968]);
      v31 = v30;
      swift_bridgeObjectRelease();
      sub_1C003E6D8(v29, v31, &v54);
      sub_1C03044B0();
      OUTLINED_FUNCTION_53_2();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0039000, v25, v26, "SearchForSportsIntent+MemorableIntent. memorableTokenString = %s", v27, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_53_2();
    goto LABEL_58;
  }
  if (qword_1ED728298 != -1)
    swift_once();
  v32 = sub_1C0303B98();
  __swift_project_value_buffer(v32, (uint64_t)qword_1ED729610);
  v33 = sub_1C0303B80();
  v34 = sub_1C03042F4();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    *(_WORD *)v35 = 0;
    _os_log_impl(&dword_1C0039000, v33, v34, "SearchForSportsIntent+MemorableIntent. memorableTokenString = Empty.", v35, 2u);
    OUTLINED_FUNCTION_5();
  }

LABEL_58:
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
  sub_1C004B224();
  v36 = sub_1C0303E50();
  swift_bridgeObjectRelease();
  return v36;
}

unint64_t sub_1C0194494()
{
  SportsSearchItem.inType.getter();
  return 0xD000000000000010;
}

uint64_t sub_1C01944B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t destroy for SportsItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SportsItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SportsItem(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy128_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x80uLL);
}

_QWORD *assignWithTake for SportsItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsItem(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 128))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 128) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsSearchItem()
{
  return &type metadata for SportsSearchItem;
}

void OUTLINED_FUNCTION_3_71()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v0 + 16) = v1;
  v6 = v0 + 16 * v4;
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = v3;
  *(_QWORD *)(v5 - 88) = v0;
}

uint64_t OUTLINED_FUNCTION_4_55()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

char *OUTLINED_FUNCTION_8_39(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  return &a16;
}

_QWORD *OUTLINED_FUNCTION_0_71(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  return sub_1C0040644(&a43);
}

SiriInference::PersonPlaceName::Prefix_optional __swiftcall PersonPlaceName.Prefix.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  SiriInference::PersonPlaceName::Prefix_optional result;

  sub_1C0194AE4(v1);
  return result;
}

uint64_t PersonPlaceName.Prefix.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6973736573736F70;
  if (*v0 != 1)
    v1 = 1918985582;
  if (*v0)
    return v1;
  else
    return 28265;
}

uint64_t sub_1C01949DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C025F230(*a1, *a2);
}

uint64_t sub_1C01949E8()
{
  unsigned __int8 *v0;

  return sub_1C00CE9E4(*v0);
}

uint64_t sub_1C01949F0(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1C00C24EC(a1, *v1);
}

uint64_t sub_1C01949F8(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1C02EABAC(a1, *v1);
}

SiriInference::PersonPlaceName::Prefix_optional sub_1C0194A00(Swift::String *a1)
{
  return PersonPlaceName.Prefix.init(rawValue:)(*a1);
}

uint64_t sub_1C0194A0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PersonPlaceName.Prefix.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0194A30()
{
  sub_1C0195EB4();
  return sub_1C03040F0();
}

uint64_t sub_1C0194A8C()
{
  sub_1C0195EB4();
  return sub_1C03040CC();
}

SiriInference::PersonPlaceName::Suffix_optional __swiftcall PersonPlaceName.Suffix.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  SiriInference::PersonPlaceName::Suffix_optional result;

  sub_1C0194AE4(v1);
  return result;
}

void sub_1C0194AE4(char *a1@<X8>)
{
  unint64_t v2;
  char v3;

  v2 = sub_1C030484C();
  OUTLINED_FUNCTION_33();
  v3 = 3;
  if (v2 < 3)
    v3 = v2;
  *a1 = v3;
  OUTLINED_FUNCTION_37_0();
}

SiriInference::PersonPlaceName::Suffix_optional sub_1C0194B2C(Swift::String *a1)
{
  return PersonPlaceName.Suffix.init(rawValue:)(*a1);
}

uint64_t sub_1C0194B38()
{
  sub_1C0195E78();
  return sub_1C03040F0();
}

uint64_t sub_1C0194B94()
{
  sub_1C0195E78();
  return sub_1C03040CC();
}

uint64_t sub_1C0194BE0()
{
  char *v0;
  unint64_t v1;

  v1 = *v0;
  if (v1 > 6)
    return MEMORY[0x1E0DEE9D8];
  else
    return (uint64_t)*(&off_1E7999E78 + v1);
}

void sub_1C0194C08()
{
  OUTLINED_FUNCTION_5_47();
  __asm { BR              X11 }
}

uint64_t sub_1C0194C50()
{
  return 1802661719;
}

uint64_t PersonPlaceName.BoundedValue.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0194D60 + 4 * byte_1C0313461[*v0]))(0x64646120656D6F68, 0xEC00000073736572);
}

uint64_t sub_1C0194D60()
{
  return 0x646461206B726F77;
}

unint64_t sub_1C0194D74()
{
  return 0xD000000000000010;
}

SiriInference::PersonPlaceName::BoundedValue_optional __swiftcall PersonPlaceName.BoundedValue.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  SiriInference::PersonPlaceName::BoundedValue_optional result;

  v2 = v1;
  v3 = sub_1C030484C();
  OUTLINED_FUNCTION_33();
  v4 = 9;
  if (v3 < 9)
    v4 = v3;
  *v2 = v4;
  OUTLINED_FUNCTION_37_0();
  return result;
}

void sub_1C0194E70(char *a1)
{
  sub_1C025E444(*a1);
}

void sub_1C0194E7C()
{
  unsigned __int8 *v0;

  sub_1C00CE9F0(*v0);
}

void sub_1C0194E84(uint64_t a1)
{
  char *v1;

  sub_1C00C254C(a1, *v1);
}

void sub_1C0194E8C(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EABA0(a1, *v1);
}

SiriInference::PersonPlaceName::BoundedValue_optional sub_1C0194E94(Swift::String *a1)
{
  return PersonPlaceName.BoundedValue.init(rawValue:)(*a1);
}

uint64_t sub_1C0194EA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PersonPlaceName.BoundedValue.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0194EC4()
{
  sub_1C0195E3C();
  return sub_1C03040F0();
}

uint64_t sub_1C0194F20()
{
  sub_1C0195E3C();
  return sub_1C03040CC();
}

uint64_t PersonPlaceName.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void PersonPlaceName.boundedValue.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_8_20(a1);
}

void PersonPlaceName.suffix.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_8_20(a1);
}

void PersonPlaceName.prefix.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_8_20(a1);
}

SiriInference::PersonPlaceName __swiftcall PersonPlaceName.init(name:suffix:prefix:)(Swift::String name, SiriInference::PersonPlaceName::Suffix_optional suffix, SiriInference::PersonPlaceName::Prefix_optional prefix)
{
  uint64_t v3;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v6;
  char v7;
  char v8;
  Swift::String v9;
  uint64_t v10;
  void *v11;
  int v12;
  char v13;
  SiriInference::PersonPlaceName result;

  object = name._object;
  countAndFlagsBits = name._countAndFlagsBits;
  v6 = v3;
  v7 = *(_BYTE *)suffix.value;
  v8 = *(_BYTE *)prefix.value;
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = countAndFlagsBits;
  v9._object = object;
  LOBYTE(v10) = PersonPlaceName.BoundedValue.init(rawValue:)(v9);
  *(_QWORD *)v6 = countAndFlagsBits;
  *(_QWORD *)(v6 + 8) = object;
  *(_BYTE *)(v6 + 16) = v13;
  *(_BYTE *)(v6 + 17) = v7;
  *(_BYTE *)(v6 + 18) = v8;
  result.name._object = v11;
  result.name._countAndFlagsBits = v10;
  result.boundedValue = (SiriInference::PersonPlaceName::BoundedValue_optional)v12;
  result.suffix = (SiriInference::PersonPlaceName::Suffix_optional)SBYTE1(v12);
  result.prefix = (SiriInference::PersonPlaceName::Prefix_optional)SBYTE2(v12);
  return result;
}

uint64_t static PersonPlaceName.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 17);
  v3 = *(unsigned __int8 *)(a1 + 18);
  v4 = *(unsigned __int8 *)(a2 + 17);
  v5 = *(unsigned __int8 *)(a2 + 18);
  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v6 || (v7 = sub_1C0304A08(), result = 0, (v7 & 1) != 0))
  {
    if ((_DWORD)v3 == 3)
    {
      if ((_DWORD)v5 != 3)
        return 0;
    }
    else if ((_DWORD)v5 == 3 || (sub_1C025F230(v3, v5) & 1) == 0)
    {
      return 0;
    }
    result = (_DWORD)v4 == 3 && (_DWORD)v2 == 3;
    if ((_DWORD)v2 != 3 && (_DWORD)v4 != 3)
      return sub_1C025F230(v2, v4);
  }
  return result;
}

uint64_t sub_1C01950E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x566465646E756F62 && a2 == 0xEC00000065756C61;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x786966667573 && a2 == 0xE600000000000000;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x786966657270 && a2 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1C0304A08();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1C0195294(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C01952C0 + 4 * byte_1C031346A[a1]))(1701667182, 0xE400000000000000);
}

uint64_t sub_1C01952C0()
{
  return 0x566465646E756F62;
}

uint64_t sub_1C01952E0()
{
  return 0x786966667573;
}

uint64_t sub_1C01952F4()
{
  return 0x786966657270;
}

uint64_t sub_1C0195308()
{
  unsigned __int8 *v0;

  return sub_1C0195294(*v0);
}

uint64_t sub_1C0195310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C01950E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0195334()
{
  sub_1C0195730();
  return sub_1C0304BAC();
}

uint64_t sub_1C019535C()
{
  sub_1C0195730();
  return sub_1C0304BB8();
}

void PersonPlaceName.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  int v16;
  int v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE828);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[16];
  v16 = v1[17];
  v17 = v8;
  HIDWORD(v15) = v1[18];
  v9 = a1[3];
  v10 = a1;
  v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_1C0195730();
  sub_1C0304BA0();
  v24 = 0;
  sub_1C0304960();
  if (!v2)
  {
    v13 = BYTE4(v15);
    v14 = v16;
    v23 = v17;
    v22 = 1;
    sub_1C019576C();
    OUTLINED_FUNCTION_2_30();
    v21 = v14;
    v20 = 2;
    sub_1C01957A8();
    OUTLINED_FUNCTION_2_30();
    v19 = v13;
    v18 = 3;
    sub_1C01957E4();
    OUTLINED_FUNCTION_2_30();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  OUTLINED_FUNCTION_28_0();
}

void PersonPlaceName.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  char v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE850);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0195730();
  sub_1C0304B88();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    v6 = sub_1C03048AC();
    v8 = v7;
    v9 = sub_1C0195820();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_21();
    if (v9)
    {
      OUTLINED_FUNCTION_3_27();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C019585C();
      OUTLINED_FUNCTION_4_21();
      sub_1C0195898();
      OUTLINED_FUNCTION_4_21();
      OUTLINED_FUNCTION_3_27();
      *(_QWORD *)a2 = v6;
      *(_QWORD *)(a2 + 8) = v8;
      *(_BYTE *)(a2 + 16) = v12;
      *(_BYTE *)(a2 + 17) = v11;
      *(_BYTE *)(a2 + 18) = v10;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28_0();
}

void sub_1C0195704(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  PersonPlaceName.init(from:)(a1, a2);
}

void sub_1C0195718(_QWORD *a1)
{
  PersonPlaceName.encode(to:)(a1);
}

unint64_t sub_1C0195730()
{
  unint64_t result;

  result = qword_1EF5BE830;
  if (!qword_1EF5BE830)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031391C, &type metadata for PersonPlaceName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE830);
  }
  return result;
}

unint64_t sub_1C019576C()
{
  unint64_t result;

  result = qword_1EF5BE838;
  if (!qword_1EF5BE838)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for PersonPlaceName.BoundedValue, &type metadata for PersonPlaceName.BoundedValue);
    atomic_store(result, (unint64_t *)&qword_1EF5BE838);
  }
  return result;
}

unint64_t sub_1C01957A8()
{
  unint64_t result;

  result = qword_1EF5BE840;
  if (!qword_1EF5BE840)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for PersonPlaceName.Suffix, &type metadata for PersonPlaceName.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5BE840);
  }
  return result;
}

unint64_t sub_1C01957E4()
{
  unint64_t result;

  result = qword_1EF5BE848;
  if (!qword_1EF5BE848)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for PersonPlaceName.Prefix, &type metadata for PersonPlaceName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5BE848);
  }
  return result;
}

unint64_t sub_1C0195820()
{
  unint64_t result;

  result = qword_1EF5BE858;
  if (!qword_1EF5BE858)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for PersonPlaceName.BoundedValue, &type metadata for PersonPlaceName.BoundedValue);
    atomic_store(result, (unint64_t *)&qword_1EF5BE858);
  }
  return result;
}

unint64_t sub_1C019585C()
{
  unint64_t result;

  result = qword_1EF5BE860;
  if (!qword_1EF5BE860)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for PersonPlaceName.Suffix, &type metadata for PersonPlaceName.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5BE860);
  }
  return result;
}

unint64_t sub_1C0195898()
{
  unint64_t result;

  result = qword_1EF5BE868;
  if (!qword_1EF5BE868)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for PersonPlaceName.Prefix, &type metadata for PersonPlaceName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5BE868);
  }
  return result;
}

unint64_t sub_1C01958D8()
{
  unint64_t result;

  result = qword_1EF5BE870;
  if (!qword_1EF5BE870)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for PersonPlaceName.Prefix, &type metadata for PersonPlaceName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5BE870);
  }
  return result;
}

unint64_t sub_1C0195918()
{
  unint64_t result;

  result = qword_1EF5BE878;
  if (!qword_1EF5BE878)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for PersonPlaceName.Suffix, &type metadata for PersonPlaceName.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5BE878);
  }
  return result;
}

unint64_t sub_1C0195958()
{
  unint64_t result;

  result = qword_1EF5BE880;
  if (!qword_1EF5BE880)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for PersonPlaceName.BoundedValue, &type metadata for PersonPlaceName.BoundedValue);
    atomic_store(result, (unint64_t *)&qword_1EF5BE880);
  }
  return result;
}

uint64_t sub_1C0195998(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PersonPlaceName(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  return a1;
}

uint64_t assignWithTake for PersonPlaceName(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  return a1;
}

void type metadata accessor for PersonPlaceName()
{
  OUTLINED_FUNCTION_17_2();
}

void type metadata accessor for PersonPlaceName.Prefix()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t _s13SiriInference15PersonPlaceNameV6SuffixOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0195AE4 + 4 * byte_1C0313473[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0195B18 + 4 * byte_1C031346E[v4]))();
}

uint64_t sub_1C0195B18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0195B20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0195B28);
  return result;
}

uint64_t sub_1C0195B34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0195B3CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0195B40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0195B48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PersonPlaceName.Suffix()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t getEnumTagSinglePayload for PersonPlaceName.BoundedValue(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 8) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v5 = v6 - 9;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonPlaceName.BoundedValue(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1C0195C34 + 4 * byte_1C031347D[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1C0195C68 + 4 * byte_1C0313478[v4]))();
}

uint64_t sub_1C0195C68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0195C70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0195C78);
  return result;
}

uint64_t sub_1C0195C84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0195C8CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1C0195C90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0195C98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PersonPlaceName.BoundedValue()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t storeEnumTagSinglePayload for PersonPlaceName.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C0195CFC + 4 * byte_1C0313487[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C0195D30 + 4 * byte_1C0313482[v4]))();
}

uint64_t sub_1C0195D30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0195D38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0195D40);
  return result;
}

uint64_t sub_1C0195D4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0195D54);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C0195D58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0195D60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PersonPlaceName.CodingKeys()
{
  return &type metadata for PersonPlaceName.CodingKeys;
}

unint64_t sub_1C0195D80()
{
  unint64_t result;

  result = qword_1EF5BE888;
  if (!qword_1EF5BE888)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03138F4, &type metadata for PersonPlaceName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE888);
  }
  return result;
}

unint64_t sub_1C0195DC0()
{
  unint64_t result;

  result = qword_1EF5BE890;
  if (!qword_1EF5BE890)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0313864, &type metadata for PersonPlaceName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE890);
  }
  return result;
}

unint64_t sub_1C0195E00()
{
  unint64_t result;

  result = qword_1EF5BE898;
  if (!qword_1EF5BE898)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031388C, &type metadata for PersonPlaceName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE898);
  }
  return result;
}

unint64_t sub_1C0195E3C()
{
  unint64_t result;

  result = qword_1EF5BE8A0;
  if (!qword_1EF5BE8A0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for PersonPlaceName.BoundedValue, &type metadata for PersonPlaceName.BoundedValue);
    atomic_store(result, (unint64_t *)&qword_1EF5BE8A0);
  }
  return result;
}

unint64_t sub_1C0195E78()
{
  unint64_t result;

  result = qword_1EF5BE8A8;
  if (!qword_1EF5BE8A8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for PersonPlaceName.Suffix, &type metadata for PersonPlaceName.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5BE8A8);
  }
  return result;
}

unint64_t sub_1C0195EB4()
{
  unint64_t result;

  result = qword_1EF5BE8B0;
  if (!qword_1EF5BE8B0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for PersonPlaceName.Prefix, &type metadata for PersonPlaceName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5BE8B0);
  }
  return result;
}

_QWORD *sub_1C0195F10(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for UseCaseFilter(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UseCaseFilter(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UseCaseFilter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UseCaseFilter()
{
  return &type metadata for UseCaseFilter;
}

uint64_t sub_1C019602C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;

  if (!a3)
    return 1;
  v4 = sub_1C0303F10();
  v6 = v5;
  v7 = *(_QWORD *)(a3 + 16);
  if (v7)
  {
    OUTLINED_FUNCTION_44();
    v8 = a3 + 40;
    while (1)
    {
      swift_bridgeObjectRetain();
      if ((sub_1C0304054() & 1) != 0)
        break;
      v8 += 16;
      OUTLINED_FUNCTION_14();
      if (!--v7)
      {
        OUTLINED_FUNCTION_33();
        goto LABEL_7;
      }
    }
    OUTLINED_FUNCTION_18();
    OUTLINED_FUNCTION_14();
    OUTLINED_FUNCTION_33();
    return 1;
  }
  else
  {
LABEL_7:
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v9 = sub_1C0303B98();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EF5FC710);
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_22();
    v10 = sub_1C0303B80();
    v11 = sub_1C03042E8();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = OUTLINED_FUNCTION_4_0();
      v16 = OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v12 = 136315394;
      OUTLINED_FUNCTION_22();
      sub_1C003E6D8(v4, v6, &v16);
      OUTLINED_FUNCTION_7_51();
      sub_1C03044B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 12) = 2080;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
      sub_1C004B224();
      v13 = sub_1C0303E50();
      sub_1C003E6D8(v13, v14, &v16);
      sub_1C03044B0();
      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_14();
      _os_log_impl(&dword_1C0039000, v10, v11, "PervasiveEntityResolution rejected use case \"%s, allowed=%s\"", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_2();
    return 0;
  }
}

uint64_t sub_1C01962A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v15;

  v5 = sub_1C0303F10();
  v7 = v6;
  v8 = *(_QWORD *)(a4 + 16);
  if (v8)
  {
    OUTLINED_FUNCTION_9_2();
    v9 = a4 + 40;
    while (1)
    {
      OUTLINED_FUNCTION_22();
      if ((sub_1C0304054() & 1) != 0)
        break;
      v9 += 16;
      OUTLINED_FUNCTION_18();
      if (!--v8)
      {
        OUTLINED_FUNCTION_2();
        goto LABEL_6;
      }
    }
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_18();
    OUTLINED_FUNCTION_2();
    return 1;
  }
  else
  {
LABEL_6:
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v10 = sub_1C0303B98();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EF5FC710);
    OUTLINED_FUNCTION_44();
    v11 = sub_1C0303B80();
    v12 = sub_1C03042E8();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      v15 = OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v13 = 136315138;
      OUTLINED_FUNCTION_44();
      sub_1C003E6D8(v5, v7, &v15);
      OUTLINED_FUNCTION_7_51();
      sub_1C03044B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0039000, v11, v12, "PervasiveEntityResolution will log for use case \"%s", v13, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_2();
    return 0;
  }
}

uint64_t sub_1C019647C(uint64_t a1)
{
  if (!a1)
    return 5000257;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
  sub_1C004B224();
  return sub_1C0303E50();
}

uint64_t sub_1C01964E0()
{
  uint64_t *v0;

  return sub_1C019647C(*v0);
}

uint64_t sub_1C01964FC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  char v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE8B8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C03032A4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v15 - v10;
  sub_1C0302C2C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    result = sub_1C0196718((uint64_t)v4);
LABEL_3:
    v13 = 20;
    goto LABEL_14;
  }
  v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v14(v11, v4, v5);
  v14(v9, v11, v5);
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  if ((_DWORD)result == *MEMORY[0x1E0DA2648])
  {
    v13 = 6;
    goto LABEL_14;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DA2650])
  {
    v13 = 7;
    goto LABEL_14;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DA2628])
  {
    v13 = 1;
    goto LABEL_14;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DA2638])
  {
    v13 = 3;
    goto LABEL_14;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DA2620])
  {
    v13 = 4;
    goto LABEL_14;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DA2640])
    goto LABEL_3;
  if ((_DWORD)result == *MEMORY[0x1E0DA2630])
  {
    *a1 = 0;
    return result;
  }
  if ((_DWORD)result != *MEMORY[0x1E0DA2658])
  {
    *a1 = 20;
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  v13 = 5;
LABEL_14:
  *a1 = v13;
  return result;
}

uint64_t sub_1C0196718(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE8B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

Swift::String_optional __swiftcall SportsItem.toSportsSearchQuery()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::String_optional result;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v6 = v0[4];
  v5 = v0[5];
  v8 = v0[6];
  v7 = v0[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727D78);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0309BD0;
  *(_QWORD *)(inited + 32) = v2;
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v3;
  *(_QWORD *)(inited + 64) = v6;
  *(_QWORD *)(inited + 72) = v5;
  *(_QWORD *)(inited + 80) = v8;
  *(_QWORD *)(inited + 88) = v7;
  if (!v1)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_65();
    swift_bridgeObjectRetain();
    v11 = MEMORY[0x1E0DEE9D8];
    if (!v3)
      goto LABEL_12;
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  OUTLINED_FUNCTION_65();
  swift_bridgeObjectRetain();
  sub_1C00500A0();
  v11 = v10;
  v12 = *(_QWORD *)(v10 + 16);
  if (v12 >= *(_QWORD *)(v10 + 24) >> 1)
  {
    OUTLINED_FUNCTION_4_10();
    v11 = v29;
  }
  *(_QWORD *)(v11 + 16) = v12 + 1;
  v13 = v11 + 16 * v12;
  *(_QWORD *)(v13 + 32) = v2;
  *(_QWORD *)(v13 + 40) = v1;
  v4 = *(_QWORD *)(inited + 48);
  v3 = *(_QWORD *)(inited + 56);
  if (v3)
  {
LABEL_7:
    OUTLINED_FUNCTION_65();
    if ((OUTLINED_FUNCTION_116() & 1) == 0)
    {
      OUTLINED_FUNCTION_4_10();
      v11 = v30;
    }
    v14 = *(_QWORD *)(v11 + 16);
    if (v14 >= *(_QWORD *)(v11 + 24) >> 1)
    {
      OUTLINED_FUNCTION_4_10();
      v11 = v31;
    }
    *(_QWORD *)(v11 + 16) = v14 + 1;
    v15 = v11 + 16 * v14;
    *(_QWORD *)(v15 + 32) = v4;
    *(_QWORD *)(v15 + 40) = v3;
  }
LABEL_12:
  v16 = *(_QWORD *)(inited + 72);
  if (v16)
  {
    v17 = *(_QWORD *)(inited + 64);
    OUTLINED_FUNCTION_65();
    if ((OUTLINED_FUNCTION_116() & 1) == 0)
    {
      OUTLINED_FUNCTION_4_10();
      v11 = v32;
    }
    v18 = *(_QWORD *)(v11 + 16);
    if (v18 >= *(_QWORD *)(v11 + 24) >> 1)
    {
      OUTLINED_FUNCTION_4_10();
      v11 = v33;
    }
    *(_QWORD *)(v11 + 16) = v18 + 1;
    v19 = v11 + 16 * v18;
    *(_QWORD *)(v19 + 32) = v17;
    *(_QWORD *)(v19 + 40) = v16;
  }
  v20 = *(_QWORD *)(inited + 88);
  if (v20)
  {
    v21 = *(_QWORD *)(inited + 80);
    OUTLINED_FUNCTION_65();
    if ((OUTLINED_FUNCTION_116() & 1) == 0)
    {
      OUTLINED_FUNCTION_4_10();
      v11 = v34;
    }
    v22 = *(_QWORD *)(v11 + 16);
    if (v22 >= *(_QWORD *)(v11 + 24) >> 1)
    {
      OUTLINED_FUNCTION_4_10();
      v11 = v35;
    }
    *(_QWORD *)(v11 + 16) = v22 + 1;
    v23 = v11 + 16 * v22;
    *(_QWORD *)(v23 + 32) = v21;
    *(_QWORD *)(v23 + 40) = v20;
  }
  swift_setDeallocating();
  sub_1C004F02C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
  sub_1C004B224();
  v24 = sub_1C0303E50();
  v26 = v25;
  swift_bridgeObjectRelease();
  v27 = v24;
  v28 = v26;
  result.value._object = v28;
  result.value._countAndFlagsBits = v27;
  return result;
}

unint64_t DateTime.TimeUnit.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 13;
  if (result < 0xD)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t DateTime.TimeUnit.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1C0196A1C()
{
  unint64_t result;

  result = qword_1EF5BE8C0;
  if (!qword_1EF5BE8C0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.TimeUnit, &type metadata for DateTime.TimeUnit);
    atomic_store(result, (unint64_t *)&qword_1EF5BE8C0);
  }
  return result;
}

unint64_t sub_1C0196A58@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return DateTime.TimeUnit.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C0196A60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DateTime.TimeUnit.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C0196A84()
{
  sub_1C0196BF8();
  return sub_1C03040FC();
}

uint64_t sub_1C0196AE0()
{
  sub_1C0196BF8();
  return sub_1C03040D8();
}

uint64_t _s8TimeUnitOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1C0196B78 + 4 * byte_1C03139B9[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1C0196BAC + 4 * asc_1C03139B4[v4]))();
}

uint64_t sub_1C0196BAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0196BB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0196BBCLL);
  return result;
}

uint64_t sub_1C0196BC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0196BD0);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1C0196BD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0196BDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DateTime.TimeUnit()
{
  return &type metadata for DateTime.TimeUnit;
}

unint64_t sub_1C0196BF8()
{
  unint64_t result;

  result = qword_1EF5BE8C8;
  if (!qword_1EF5BE8C8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.TimeUnit, &type metadata for DateTime.TimeUnit);
    atomic_store(result, (unint64_t *)&qword_1EF5BE8C8);
  }
  return result;
}

id sub_1C0196C34(uint64_t a1, uint64_t a2, double a3)
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBDAA0]), sel_initWithInterval_frequency_weeklyRecurrenceDays_, sub_1C0196C84(a3), a1, a2);
}

uint64_t sub_1C0196C84(double a1)
{
  uint64_t result;

  if ((~*(_QWORD *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a1 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a1 < 9.22337204e18)
    return (uint64_t)a1;
LABEL_7:
  __break(1u);
  return result;
}

SiriInference::StreetNumber::Prefix_optional __swiftcall StreetNumber.Prefix.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SiriInference::StreetNumber::Prefix_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1C030484C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t StreetNumber.Prefix.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0196D4C + 4 * byte_1C0313AF4[*v0]))(0x7265626D756ELL, 0xE600000000000000);
}

uint64_t sub_1C0196D4C()
{
  return 0x7954746565727473;
}

uint64_t sub_1C0196D68()
{
  return 28265;
}

uint64_t sub_1C0196D74()
{
  return 1918985582;
}

uint64_t sub_1C0196D84()
{
  return 28271;
}

void sub_1C0196D90(char *a1)
{
  sub_1C025EF70(*a1);
}

void sub_1C0196D9C()
{
  unsigned __int8 *v0;

  sub_1C00CE9FC(*v0);
}

void sub_1C0196DA4(uint64_t a1)
{
  char *v1;

  sub_1C00C2AE0(a1, *v1);
}

void sub_1C0196DAC(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EAAA8(a1, *v1);
}

SiriInference::StreetNumber::Prefix_optional sub_1C0196DB4(Swift::String *a1)
{
  return StreetNumber.Prefix.init(rawValue:)(*a1);
}

uint64_t sub_1C0196DC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = StreetNumber.Prefix.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0196DE4()
{
  sub_1C0197704();
  return sub_1C03040F0();
}

uint64_t sub_1C0196E40()
{
  sub_1C0197704();
  return sub_1C03040CC();
}

uint64_t StreetNumber.value.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void StreetNumber.prefix.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

SiriInference::StreetNumber __swiftcall StreetNumber.init(value:prefix:)(Swift::String value, SiriInference::StreetNumber::Prefix_optional prefix)
{
  uint64_t v2;
  char v3;
  SiriInference::StreetNumber result;

  v3 = *(_BYTE *)prefix.value;
  *(Swift::String *)v2 = value;
  *(_BYTE *)(v2 + 16) = v3;
  result.value = value;
  result.prefix = prefix;
  return result;
}

void static StreetNumber.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if ((v4 || (sub_1C0304A08() & 1) != 0) && v2 != 5 && v3 != 5)
    sub_1C025EF70(v2);
}

uint64_t sub_1C0196F58(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x786966657270 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C0197034(char a1)
{
  if ((a1 & 1) != 0)
    return 0x786966657270;
  else
    return 0x65756C6176;
}

uint64_t sub_1C0197064()
{
  char *v0;

  return sub_1C0197034(*v0);
}

uint64_t sub_1C019706C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0196F58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0197090()
{
  sub_1C01973A8();
  return sub_1C0304BAC();
}

uint64_t sub_1C01970B8()
{
  sub_1C01973A8();
  return sub_1C0304BB8();
}

void StreetNumber.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE8D0);
  v8 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01973A8();
  sub_1C0304BA0();
  v12 = 0;
  sub_1C0304960();
  if (!v2)
  {
    v11 = v9;
    v10 = 1;
    sub_1C01973E4();
    sub_1C0304954();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v4);
  OUTLINED_FUNCTION_28_0();
}

void StreetNumber.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BE8E8);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01973A8();
  sub_1C0304B88();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    v6 = sub_1C03048AC();
    v8 = v7;
    sub_1C0197420();
    swift_bridgeObjectRetain();
    sub_1C03048A0();
    OUTLINED_FUNCTION_10_5();
    *(_QWORD *)a2 = v6;
    *(_QWORD *)(a2 + 8) = v8;
    *(_BYTE *)(a2 + 16) = v9;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28_0();
}

void sub_1C019737C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  StreetNumber.init(from:)(a1, a2);
}

void sub_1C0197390(_QWORD *a1)
{
  StreetNumber.encode(to:)(a1);
}

unint64_t sub_1C01973A8()
{
  unint64_t result;

  result = qword_1EF5BE8D8;
  if (!qword_1EF5BE8D8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0313D74, &type metadata for StreetNumber.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE8D8);
  }
  return result;
}

unint64_t sub_1C01973E4()
{
  unint64_t result;

  result = qword_1EF5BE8E0;
  if (!qword_1EF5BE8E0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetNumber.Prefix, &type metadata for StreetNumber.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5BE8E0);
  }
  return result;
}

unint64_t sub_1C0197420()
{
  unint64_t result;

  result = qword_1EF5BE8F0;
  if (!qword_1EF5BE8F0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetNumber.Prefix, &type metadata for StreetNumber.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5BE8F0);
  }
  return result;
}

unint64_t sub_1C0197460()
{
  unint64_t result;

  result = qword_1EF5BE8F8;
  if (!qword_1EF5BE8F8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetNumber.Prefix, &type metadata for StreetNumber.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5BE8F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for StreetNumber()
{
  return &type metadata for StreetNumber;
}

uint64_t storeEnumTagSinglePayload for StreetNumber.Prefix(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C01974F8 + 4 * byte_1C0313AFE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C019752C + 4 * byte_1C0313AF9[v4]))();
}

uint64_t sub_1C019752C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0197534(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C019753CLL);
  return result;
}

uint64_t sub_1C0197548(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0197550);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C0197554(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C019755C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StreetNumber.Prefix()
{
  return &type metadata for StreetNumber.Prefix;
}

uint64_t storeEnumTagSinglePayload for StreetNumber.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C01975C4 + 4 * byte_1C0313B08[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C01975F8 + 4 * byte_1C0313B03[v4]))();
}

uint64_t sub_1C01975F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0197600(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0197608);
  return result;
}

uint64_t sub_1C0197614(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C019761CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0197620(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0197628(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StreetNumber.CodingKeys()
{
  return &type metadata for StreetNumber.CodingKeys;
}

unint64_t sub_1C0197648()
{
  unint64_t result;

  result = qword_1EF5BE900;
  if (!qword_1EF5BE900)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0313D4C, &type metadata for StreetNumber.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE900);
  }
  return result;
}

unint64_t sub_1C0197688()
{
  unint64_t result;

  result = qword_1EF5BE908;
  if (!qword_1EF5BE908)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0313CBC, &type metadata for StreetNumber.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE908);
  }
  return result;
}

unint64_t sub_1C01976C8()
{
  unint64_t result;

  result = qword_1EF5BE910;
  if (!qword_1EF5BE910)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0313CE4, &type metadata for StreetNumber.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BE910);
  }
  return result;
}

unint64_t sub_1C0197704()
{
  unint64_t result;

  result = qword_1EF5BE918;
  if (!qword_1EF5BE918)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetNumber.Prefix, &type metadata for StreetNumber.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5BE918);
  }
  return result;
}

uint64_t ContactSlotResolutionTask.run(withAlreadyResolvedSlots:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  int v36;
  _BOOL4 v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v79;
  uint64_t v80;
  uint8_t *v81;
  uint64_t v82;
  os_log_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99[9];
  uint64_t v100;
  uint64_t v101;

  OUTLINED_FUNCTION_40_0();
  v100 = v2;
  v101 = v3;
  v97 = v1;
  v4 = v0;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B9170);
  v91 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_53();
  v90 = v6;
  v7 = type metadata accessor for ContactSlotResolutionTask();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_53();
  v89 = v8;
  v9 = type metadata accessor for ContactResolverRunTimeData(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v79 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  v21 = (uint64_t)v4 + *(int *)(v7 + 24);
  v22 = *v20;
  v23 = v97;
  sub_1C0041BA4(v4[5], v21, v24, v25, v26, v27, v28, v29, v79, v80, (uint64_t)v81, v82, (uint64_t)v83, v84, v85, v86, (uint64_t)v87, v88, v89,
    v90);
  v96 = v23;
  if (!v23)
  {
    v94 = (uint64_t)v15;
    v95 = v13;
    v85 = v16;
    v31 = v30;
    v87 = v4;
    v88 = v10;
    if (qword_1ED727970 != -1)
      swift_once();
    v32 = sub_1C0303B98();
    v33 = __swift_project_value_buffer(v32, (uint64_t)&unk_1ED7295C8);
    v34 = v31;
    swift_bridgeObjectRetain_n();
    v35 = sub_1C0303B80();
    v36 = sub_1C03042E8();
    v37 = os_log_type_enabled(v35, (os_log_type_t)v36);
    v97 = v9;
    v38 = v90;
    if (v37)
    {
      HIDWORD(v82) = v36;
      v83 = v35;
      v39 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      v80 = OUTLINED_FUNCTION_4_0();
      v99[0] = v80;
      v81 = v39;
      *(_DWORD *)v39 = 136315138;
      v40 = *(_QWORD *)(v34 + 16);
      v41 = MEMORY[0x1E0DEE9D8];
      v86 = v34;
      v84 = v33;
      if (v40)
      {
        v98 = MEMORY[0x1E0DEE9D8];
        sub_1C00B18E4();
        OUTLINED_FUNCTION_153();
        v43 = v34 + v42;
        v45 = *(_QWORD *)(v44 + 72);
        v92 = v19;
        v93 = v45;
        v41 = v98;
        v46 = &qword_1ED7261A8;
        do
        {
          v47 = v94;
          sub_1C00638BC(v43, v94, type metadata accessor for ContactResolverRunTimeData);
          v48 = v46;
          sub_1C00607B8(v47 + *(int *)(v9 + 40), (uint64_t)v19, v46);
          sub_1C006395C(v47, type metadata accessor for ContactResolverRunTimeData);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C00B18E4();
            v41 = v98;
          }
          v49 = *(_QWORD *)(v41 + 16);
          if (v49 >= *(_QWORD *)(v41 + 24) >> 1)
          {
            sub_1C00B18E4();
            v41 = v98;
          }
          *(_QWORD *)(v41 + 16) = v49 + 1;
          OUTLINED_FUNCTION_153();
          v51 = v41 + v50 + *(_QWORD *)(v17 + 72) * v49;
          v19 = v92;
          v46 = v48;
          sub_1C005A744((uint64_t)v92, v51, v48);
          v43 += v93;
          --v40;
          v9 = v97;
        }
        while (v40);
      }
      v54 = v81;
      v55 = MEMORY[0x1C3B97040](v41, v85);
      v57 = v56;
      swift_bridgeObjectRelease();
      v98 = sub_1C003E6D8(v55, v57, v99);
      sub_1C03044B0();
      OUTLINED_FUNCTION_20_0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0039000, v83, BYTE4(v82), "Contact recommendations: %s", v54, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_20_0();
    v52 = (uint64_t)v95;
    v53 = v88;
    v58 = MEMORY[0x1E0DEE9D8];
    v59 = *(_QWORD *)(v87[5] + 16);
    v60 = *(_QWORD *)(v34 + 16);
    if (v59 == v60)
    {
      if (v59)
      {
        v99[0] = MEMORY[0x1E0DEE9D8];
        sub_1C00B18B8();
        OUTLINED_FUNCTION_153();
        v86 = v34;
        v62 = v34 + v61;
        v94 = *(_QWORD *)(v53 + 72);
        while (1)
        {
          sub_1C00638BC(v62, v52, type metadata accessor for ContactResolverRunTimeData);
          v63 = v97;
          sub_1C0067574();
          v65 = v64;
          v66 = sub_1C0067C1C();
          v67 = v96;
          sub_1C0197F94(v65, v66, v95[*(int *)(v63 + 52)], v38);
          v52 = (uint64_t)v95;
          swift_bridgeObjectRelease();
          sub_1C006395C(v52, type metadata accessor for ContactResolverRunTimeData);
          v22 = v99[0];
          v96 = v67;
          if (v67)
            break;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C00B18B8();
            v22 = v99[0];
          }
          v68 = *(_QWORD *)(v22 + 16);
          if (v68 >= *(_QWORD *)(v22 + 24) >> 1)
          {
            sub_1C00B18B8();
            v22 = v99[0];
          }
          *(_QWORD *)(v22 + 16) = v68 + 1;
          OUTLINED_FUNCTION_153();
          sub_1C005A744(v38, v22 + v69 + *(_QWORD *)(v70 + 72) * v68, &qword_1EF5B9170);
          v62 += v94;
          if (!--v59)
          {
            swift_bridgeObjectRelease();
            return v22;
          }
        }
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        OUTLINED_FUNCTION_18();
        return MEMORY[0x1E0DEE9D8];
      }
    }
    else
    {
      v71 = v89;
      sub_1C00638BC((uint64_t)v87, v89, (uint64_t (*)(_QWORD))type metadata accessor for ContactSlotResolutionTask);
      swift_bridgeObjectRetain();
      v72 = sub_1C0303B80();
      v73 = sub_1C03042F4();
      if (os_log_type_enabled(v72, v73))
      {
        v74 = OUTLINED_FUNCTION_4_0();
        *(_DWORD *)v74 = 134218240;
        v75 = *(_QWORD *)(*(_QWORD *)(v71 + 40) + 16);
        sub_1C006395C(v71, (uint64_t (*)(_QWORD))type metadata accessor for ContactSlotResolutionTask);
        v99[0] = v75;
        sub_1C03044B0();
        *(_WORD *)(v74 + 12) = 2048;
        swift_bridgeObjectRelease();
        v99[0] = v60;
        sub_1C03044B0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C0039000, v72, v73, "Original query count (%ld) doesn't match recommendations count (%ld). Results may be truncated.", (uint8_t *)v74, 0x16u);
        OUTLINED_FUNCTION_5();
      }
      OUTLINED_FUNCTION_18();
      sub_1C006395C(v71, (uint64_t (*)(_QWORD))type metadata accessor for ContactSlotResolutionTask);

      OUTLINED_FUNCTION_18();
      type metadata accessor for InferenceError();
      swift_allocObject();
      v22 = sub_1C026A508(30, 0, 0xE000000000000000, 0xD00000000000007FLL, 0x80000001C03304D0, 0xD00000000000001ELL, 0x80000001C0330550, 49, v58, 1);
      sub_1C00A3930();
      v76 = swift_allocError();
      *v77 = v22;
      v96 = v76;
      swift_willThrow();
    }
  }
  return v22;
}

uint64_t ContactSlotResolutionTask.init(queries:config:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  _UNKNOWN **v11;

  *(_QWORD *)(a3 + 40) = a1;
  v5 = type metadata accessor for ContactSlotResolutionTask();
  sub_1C00638BC(a2, a3 + *(int *)(v5 + 24), type metadata accessor for ContactResolverConfig);
  v6 = type metadata accessor for ContactResolver();
  swift_allocObject();
  ContactResolver.init()();
  v10 = v6;
  v11 = &off_1E7995A88;
  *(_QWORD *)&v9 = v7;
  sub_1C006395C(a2, type metadata accessor for ContactResolverConfig);
  return sub_1C004CD5C(&v9, a3);
}

void sub_1C0197F94(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD v25[8];
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v27 = a1;
  v28 = a3;
  v29 = a4;
  v30 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726E50);
  v5 = MEMORY[0x1E0C80A78](v4);
  v25[4] = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v25[6] = (char *)v25 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v25[3] = (char *)v25 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v25[7] = (char *)v25 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v13);
  v32 = type metadata accessor for Contact();
  v25[1] = *(_QWORD *)(v32 - 8);
  v14 = MEMORY[0x1E0C80A78](v32);
  v25[5] = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v17 = MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  v33 = (char *)v25 - v18;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8AD8);
  v19 = MEMORY[0x1E0C80A78](v26);
  v20 = MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  v25[2] = (char *)v25 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  MEMORY[0x1E0C80A78](v22);
  sub_1C00607B8(v31, (uint64_t)v25 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1ED7261A8);
  v24 = (char *)sub_1C0198220 + 4 * byte_1C0313DD0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1C0198220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1C0045588(v0, v2);
  v4 = *(_QWORD *)(v3 - 152);
  sub_1C00638BC(v2, v4, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
  v5 = *(_QWORD *)(v3 - 96);
  __swift_storeEnumTagSinglePayload(v4, 0, 1, v5);
  v6 = *(_QWORD *)(v3 - 184);
  sub_1C00607B8(v4, v6, &qword_1ED726E50);
  if (__swift_getEnumTagSinglePayload(v6, 1, v5) == 1)
  {
    sub_1C0049BD0(v6);
    type metadata accessor for InferenceError();
    swift_allocObject();
    v7 = sub_1C026A508(66, 0, 0xE000000000000000, 0xD000000000000086, 0x80000001C032C720, 0xD000000000000023, 0x80000001C0330570, 17, MEMORY[0x1E0DEE9D8], 2);
    sub_1C026A340(0, 0xE000000000000000);
    sub_1C00A3930();
    swift_allocError();
    *v8 = v7;
    swift_willThrow();
    sub_1C006395C(v2, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
    return sub_1C0049BD0(v4);
  }
  else
  {
    sub_1C0045588(v6, v1);
    sub_1C006395C(v2, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
    sub_1C0049BD0(v4);
    swift_storeEnumTagMultiPayload();
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B9170);
    v11 = *(_QWORD *)(v3 - 128);
    v12 = *(_QWORD *)(v3 - 120);
    v13 = v11 + *(int *)(v10 + 36);
    *(_DWORD *)v13 = *(_DWORD *)(v3 - 136);
    *(_QWORD *)(v13 + 8) = v12;
    *(_BYTE *)(v13 + 16) = *(_DWORD *)(v3 - 132);
    sub_1C005A744(v1, v11, &qword_1EF5B8AD8);
    return swift_bridgeObjectRetain();
  }
}

void sub_1C01988C8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _BYTE v3[136];
  _BYTE v4[136];
  uint64_t v5;

  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_1_58(v0, (uint64_t)v3);
  sub_1C005A744((uint64_t)v3, (uint64_t)&v5, &qword_1EF5BE9D0);
  OUTLINED_FUNCTION_1_58(v1, (uint64_t)v4);
  v2 = (char *)sub_1C0198938 + 4 * byte_1C0313DD4[sub_1C0199960((uint64_t)v4)];
  __asm { BR              X10 }
}

void sub_1C0198938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  void *v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[17];
  char v53[544];

  OUTLINED_FUNCTION_3_72(a1, a2, &qword_1EF5BE9D0, a4, a5, a6, a7, a8, v18, v20, v22, v24, v26, v28, v30, v32, v34, v36, v38,
    v40,
    v42,
    v44,
    v46,
    v48,
    v50,
    v52[0]);
  v9 = (void *)nullsub_1(v52);
  OUTLINED_FUNCTION_5_48(v9, v10, v11, v12, v13, v14, v15, v16, v19, v21, v23, v25, v27, v29, v31, v33, v35, v37, v39,
    v41,
    v43,
    v45,
    v47,
    v49,
    v51,
    v52[0],
    v52[1],
    v52[2],
    v52[3],
    v52[4],
    v52[5],
    v52[6],
    v52[7],
    v52[8],
    v52[9],
    v52[10],
    v52[11],
    v52[12],
    v52[13],
    v52[14],
    v52[15],
    v52[16],
    v53[0]);
  sub_1C0199A10((uint64_t)v53);
  OUTLINED_FUNCTION_10_46((uint64_t)v53, v17, &qword_1EF5BE9D8);
  sub_1C00C7588(v8);
  OUTLINED_FUNCTION_28_0();
}

uint64_t sub_1C0198AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_40_0();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_1C0198AD0 + dword_1C0198C0C[v12]))(v13, v12, v14, v15, v16, v17, v18, v19, a9, a10, a11, a12);
}

void sub_1C0198AE0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)v0 = v1;
  *(_BYTE *)(v0 + 8) = 0;
  swift_retain();
  OUTLINED_FUNCTION_28_0();
}

void sub_1C0198C1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _BYTE v4[720];
  _BYTE v5[720];
  _BYTE v6[728];

  OUTLINED_FUNCTION_40_0();
  v1 = MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_1_58(v1, (uint64_t)v4);
  sub_1C005A744((uint64_t)v4, (uint64_t)v6, &qword_1EF5BE9E0);
  OUTLINED_FUNCTION_1_58(v2, (uint64_t)v5);
  v3 = (char *)sub_1C0198CA0 + 4 * byte_1C0313DD8[sub_1C0199A18((uint64_t)v5)];
  __asm { BR              X10 }
}

void sub_1C0198CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  const void *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[2888];

  OUTLINED_FUNCTION_6_48(a1, a2, &qword_1EF5BE9E0);
  v3 = (const void *)nullsub_1(&v5);
  OUTLINED_FUNCTION_4_56(v3);
  sub_1C019A268((uint64_t)v6);
  OUTLINED_FUNCTION_10_46((uint64_t)v6, v4, &qword_1EF5BE9E8);
  sub_1C0199A5C(v2);
  OUTLINED_FUNCTION_28_0();
}

uint64_t sub_1C0198E14()
{
  return ContactSlotResolutionTask.run(withAlreadyResolvedSlots:)();
}

_QWORD *initializeBufferWithCopyOfBuffer for ContactSlotResolutionTask(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v4[5] = a2[5];
    v8 = *(int *)(a3 + 24);
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    *v9 = *((_BYTE *)a2 + v8);
    v11 = *(uint64_t *)((char *)a2 + v8 + 16);
    *((_QWORD *)v9 + 1) = *(uint64_t *)((char *)a2 + v8 + 8);
    *((_QWORD *)v9 + 2) = v11;
    v12 = *(uint64_t *)((char *)a2 + v8 + 32);
    *((_QWORD *)v9 + 3) = *(uint64_t *)((char *)a2 + v8 + 24);
    *((_QWORD *)v9 + 4) = v12;
    v13 = *(uint64_t *)((char *)a2 + v8 + 48);
    *((_QWORD *)v9 + 5) = *(uint64_t *)((char *)a2 + v8 + 40);
    *((_QWORD *)v9 + 6) = v13;
    v14 = (int *)type metadata accessor for ContactResolverConfig(0);
    v15 = v14[8];
    v33 = v10 + v15;
    v34 = &v9[v15];
    v16 = sub_1C0301DB0();
    v17 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17(v34, v33, v16);
    v9[v14[9]] = *(_BYTE *)(v10 + v14[9]);
    v9[v14[10]] = *(_BYTE *)(v10 + v14[10]);
    *(_QWORD *)&v9[v14[11]] = *(_QWORD *)(v10 + v14[11]);
    v9[v14[12]] = *(_BYTE *)(v10 + v14[12]);
    *(_QWORD *)&v9[v14[13]] = *(_QWORD *)(v10 + v14[13]);
    v9[v14[14]] = *(_BYTE *)(v10 + v14[14]);
    *(_WORD *)&v9[v14[15]] = *(_WORD *)(v10 + v14[15]);
    v18 = v14[16];
    v19 = &v9[v18];
    v20 = v10 + v18;
    v21 = *(_QWORD *)(v10 + v18);
    swift_bridgeObjectRetain();
    if (v21)
    {
      v22 = *(_QWORD *)(v20 + 8);
      *(_QWORD *)v19 = v21;
      *((_QWORD *)v19 + 1) = v22;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v19 = *(_OWORD *)v20;
    }
    v24 = v14[17];
    v25 = &v9[v24];
    v26 = (_QWORD *)(v10 + v24);
    v27 = v26[1];
    *(_QWORD *)v25 = *v26;
    *((_QWORD *)v25 + 1) = v27;
    v9[v14[18]] = *(_BYTE *)(v10 + v14[18]);
    v9[v14[19]] = *(_BYTE *)(v10 + v14[19]);
    v28 = v14[20];
    v29 = &v9[v28];
    v30 = (_QWORD *)(v10 + v28);
    v31 = v30[1];
    *(_QWORD *)v29 = *v30;
    *((_QWORD *)v29 + 1) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ContactSlotResolutionTask(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for ContactResolverConfig(0);
  v6 = v4 + *(int *)(v5 + 32);
  v7 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v4 + *(int *)(v5 + 64)))
    swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContactSlotResolutionTask(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(uint64_t, char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = *(int *)(a3 + 24);
  v34 = a1;
  v8 = a1 + v7;
  v9 = (_QWORD *)(a2 + v7);
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  v11 = v9[2];
  *(_QWORD *)(v8 + 8) = v10;
  *(_QWORD *)(v8 + 16) = v11;
  v12 = v9[4];
  *(_QWORD *)(v8 + 24) = v9[3];
  *(_QWORD *)(v8 + 32) = v12;
  v13 = v9[6];
  *(_QWORD *)(v8 + 40) = v9[5];
  *(_QWORD *)(v8 + 48) = v13;
  v14 = (int *)type metadata accessor for ContactResolverConfig(0);
  v15 = v14[8];
  v33 = v8 + v15;
  v16 = (char *)v9 + v15;
  v17 = sub_1C0301DB0();
  v18 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18(v33, v16, v17);
  *(_BYTE *)(v8 + v14[9]) = *((_BYTE *)v9 + v14[9]);
  *(_BYTE *)(v8 + v14[10]) = *((_BYTE *)v9 + v14[10]);
  *(_QWORD *)(v8 + v14[11]) = *(_QWORD *)((char *)v9 + v14[11]);
  *(_BYTE *)(v8 + v14[12]) = *((_BYTE *)v9 + v14[12]);
  *(_QWORD *)(v8 + v14[13]) = *(_QWORD *)((char *)v9 + v14[13]);
  *(_BYTE *)(v8 + v14[14]) = *((_BYTE *)v9 + v14[14]);
  *(_WORD *)(v8 + v14[15]) = *(_WORD *)((char *)v9 + v14[15]);
  v19 = v14[16];
  v20 = (_QWORD *)(v8 + v19);
  v21 = (char *)v9 + v19;
  v22 = *(_QWORD *)((char *)v9 + v19);
  swift_bridgeObjectRetain();
  if (v22)
  {
    v23 = *((_QWORD *)v21 + 1);
    *v20 = v22;
    v20[1] = v23;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
  }
  v24 = v14[17];
  v25 = (_QWORD *)(v8 + v24);
  v26 = (_QWORD *)((char *)v9 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  *(_BYTE *)(v8 + v14[18]) = *((_BYTE *)v9 + v14[18]);
  *(_BYTE *)(v8 + v14[19]) = *((_BYTE *)v9 + v14[19]);
  v28 = v14[20];
  v29 = (_QWORD *)(v8 + v28);
  v30 = (_QWORD *)((char *)v9 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v34;
}

uint64_t *assignWithCopy for ContactSlotResolutionTask(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (uint64_t *)((char *)a2 + v6);
  *v7 = *((_BYTE *)a2 + v6);
  *((_QWORD *)v7 + 1) = *(uint64_t *)((char *)a2 + v6 + 8);
  *((_QWORD *)v7 + 2) = *(uint64_t *)((char *)a2 + v6 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v7 + 3) = v8[3];
  *((_QWORD *)v7 + 4) = v8[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v7 + 5) = v8[5];
  *((_QWORD *)v7 + 6) = v8[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (int *)type metadata accessor for ContactResolverConfig(0);
  v10 = v9[8];
  v11 = &v7[v10];
  v12 = (char *)v8 + v10;
  v13 = sub_1C0301DB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v7[v9[9]] = *((_BYTE *)v8 + v9[9]);
  v7[v9[10]] = *((_BYTE *)v8 + v9[10]);
  *(_QWORD *)&v7[v9[11]] = *(_QWORD *)((char *)v8 + v9[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v9[12]] = *((_BYTE *)v8 + v9[12]);
  *(_QWORD *)&v7[v9[13]] = *(_QWORD *)((char *)v8 + v9[13]);
  v7[v9[14]] = *((_BYTE *)v8 + v9[14]);
  *(_WORD *)&v7[v9[15]] = *(_WORD *)((char *)v8 + v9[15]);
  v14 = v9[16];
  v15 = &v7[v14];
  v16 = (char *)v8 + v14;
  v17 = *(_QWORD *)&v7[v14];
  v18 = *(_QWORD *)((char *)v8 + v14);
  if (!v17)
  {
    if (v18)
    {
      v20 = *((_QWORD *)v16 + 1);
      *(_QWORD *)v15 = v18;
      *((_QWORD *)v15 + 1) = v20;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v15 = *(_OWORD *)v16;
    goto LABEL_8;
  }
  if (!v18)
  {
    swift_release();
    goto LABEL_7;
  }
  v19 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v15 = v18;
  *((_QWORD *)v15 + 1) = v19;
  swift_retain();
  swift_release();
LABEL_8:
  v21 = v9[17];
  v22 = &v7[v21];
  v23 = (_QWORD *)((char *)v8 + v21);
  *(_QWORD *)v22 = *v23;
  *((_QWORD *)v22 + 1) = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v9[18]] = *((_BYTE *)v8 + v9[18]);
  v7[v9[19]] = *((_BYTE *)v8 + v9[19]);
  v24 = v9[20];
  v25 = &v7[v24];
  v26 = (_QWORD *)((char *)v8 + v24);
  *(_QWORD *)v25 = *v26;
  *((_QWORD *)v25 + 1) = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ContactSlotResolutionTask(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_BYTE *)v7 = *(_BYTE *)(a2 + v6);
  *(_OWORD *)(v7 + 8) = *(_OWORD *)(a2 + v6 + 8);
  *(_OWORD *)(v7 + 24) = *(_OWORD *)(a2 + v6 + 24);
  *(_OWORD *)(v7 + 40) = *(_OWORD *)(a2 + v6 + 40);
  v9 = (int *)type metadata accessor for ContactResolverConfig(0);
  v10 = v9[8];
  v11 = v7 + v10;
  v12 = v8 + v10;
  v13 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *(_BYTE *)(v7 + v9[9]) = *(_BYTE *)(v8 + v9[9]);
  *(_BYTE *)(v7 + v9[10]) = *(_BYTE *)(v8 + v9[10]);
  *(_QWORD *)(v7 + v9[11]) = *(_QWORD *)(v8 + v9[11]);
  *(_BYTE *)(v7 + v9[12]) = *(_BYTE *)(v8 + v9[12]);
  *(_QWORD *)(v7 + v9[13]) = *(_QWORD *)(v8 + v9[13]);
  *(_BYTE *)(v7 + v9[14]) = *(_BYTE *)(v8 + v9[14]);
  *(_WORD *)(v7 + v9[15]) = *(_WORD *)(v8 + v9[15]);
  *(_OWORD *)(v7 + v9[16]) = *(_OWORD *)(v8 + v9[16]);
  *(_OWORD *)(v7 + v9[17]) = *(_OWORD *)(v8 + v9[17]);
  *(_BYTE *)(v7 + v9[18]) = *(_BYTE *)(v8 + v9[18]);
  *(_BYTE *)(v7 + v9[19]) = *(_BYTE *)(v8 + v9[19]);
  *(_OWORD *)(v7 + v9[20]) = *(_OWORD *)(v8 + v9[20]);
  return a1;
}

uint64_t assignWithTake for ContactSlotResolutionTask(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;

  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = (_QWORD *)(a2 + v8);
  *(_BYTE *)v9 = *(_BYTE *)(a2 + v8);
  v11 = *(_QWORD *)(a2 + v8 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(a2 + v8 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  swift_bridgeObjectRelease();
  v12 = v10[4];
  *(_QWORD *)(v9 + 24) = v10[3];
  *(_QWORD *)(v9 + 32) = v12;
  swift_bridgeObjectRelease();
  v13 = v10[6];
  *(_QWORD *)(v9 + 40) = v10[5];
  *(_QWORD *)(v9 + 48) = v13;
  swift_bridgeObjectRelease();
  v14 = (int *)type metadata accessor for ContactResolverConfig(0);
  v15 = v14[8];
  v16 = v9 + v15;
  v17 = (char *)v10 + v15;
  v18 = sub_1C0301DB0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  *(_BYTE *)(v9 + v14[9]) = *((_BYTE *)v10 + v14[9]);
  *(_BYTE *)(v9 + v14[10]) = *((_BYTE *)v10 + v14[10]);
  *(_QWORD *)(v9 + v14[11]) = *(_QWORD *)((char *)v10 + v14[11]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + v14[12]) = *((_BYTE *)v10 + v14[12]);
  *(_QWORD *)(v9 + v14[13]) = *(_QWORD *)((char *)v10 + v14[13]);
  *(_BYTE *)(v9 + v14[14]) = *((_BYTE *)v10 + v14[14]);
  *(_WORD *)(v9 + v14[15]) = *(_WORD *)((char *)v10 + v14[15]);
  v19 = v14[16];
  v20 = (_QWORD *)(v9 + v19);
  v21 = (char *)v10 + v19;
  v22 = *(_QWORD *)(v9 + v19);
  v23 = *(_QWORD *)((char *)v10 + v19);
  if (!v22)
  {
    if (v23)
    {
      v25 = *((_QWORD *)v21 + 1);
      *v20 = v23;
      v20[1] = v25;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v20 = *(_OWORD *)v21;
    goto LABEL_8;
  }
  if (!v23)
  {
    swift_release();
    goto LABEL_7;
  }
  v24 = *((_QWORD *)v21 + 1);
  *v20 = v23;
  v20[1] = v24;
  swift_release();
LABEL_8:
  v26 = v14[17];
  v27 = (_QWORD *)(v9 + v26);
  v28 = (_QWORD *)((char *)v10 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + v14[18]) = *((_BYTE *)v10 + v14[18]);
  *(_BYTE *)(v9 + v14[19]) = *((_BYTE *)v10 + v14[19]);
  v31 = v14[20];
  v32 = (_QWORD *)(v9 + v31);
  v33 = (_QWORD *)((char *)v10 + v31);
  v35 = *v33;
  v34 = v33[1];
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactSlotResolutionTask()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C01997F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContactResolverConfig(0);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ContactSlotResolutionTask()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0199874(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContactResolverConfig(0);
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C01998E0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ContactResolverConfig(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0199960(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 128) <= 2u)
    return *(unsigned __int8 *)(a1 + 128);
  else
    return (*(_DWORD *)a1 + 3);
}

double sub_1C0199978(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 128) = 3;
  return result;
}

uint64_t sub_1C0199998(uint64_t a1)
{
  sub_1C00D8E98(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_BYTE *)(a1 + 128));
  return a1;
}

uint64_t sub_1C01999F8(uint64_t result)
{
  *(_BYTE *)(result + 128) = 2;
  return result;
}

uint64_t sub_1C0199A04(uint64_t result)
{
  *(_BYTE *)(result + 128) = 1;
  return result;
}

uint64_t sub_1C0199A10(uint64_t result)
{
  *(_BYTE *)(result + 128) = 0;
  return result;
}

uint64_t sub_1C0199A18(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 712) <= 2u)
    return *(unsigned __int8 *)(a1 + 712);
  else
    return (*(_DWORD *)a1 + 3);
}

void sub_1C0199A30(_BYTE *a1)
{
  bzero(a1, 0x2C8uLL);
  a1[712] = 3;
}

uint64_t sub_1C0199A5C(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v3 = *(_QWORD *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 88);
  v18 = *(_QWORD *)(a1 + 128);
  v19 = *(_QWORD *)(a1 + 120);
  v16 = *(_QWORD *)(a1 + 144);
  v17 = *(_QWORD *)(a1 + 136);
  v14 = *(_QWORD *)(a1 + 160);
  v15 = *(_QWORD *)(a1 + 152);
  v12 = *(_QWORD *)(a1 + 176);
  v13 = *(_QWORD *)(a1 + 168);
  v9 = *(_OWORD *)(a1 + 184);
  v8 = *(_OWORD *)(a1 + 200);
  v7 = *(_OWORD *)(a1 + 216);
  v10 = *(_QWORD *)(a1 + 416);
  v11 = *(_QWORD *)(a1 + 408);
  v5 = *(_QWORD *)(a1 + 512);
  v6 = *(_QWORD *)(a1 + 520);
  v20 = *(_QWORD *)(a1 + 696);
  v21 = *(_QWORD *)(a1 + 704);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C0199D10(v4, v3);
  sub_1C0199D40(v19, v18, v17, v16, v15, v14, v13, v12, v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1));
  swift_bridgeObjectRetain();
  sub_1C019A028(v11, v10);
  sub_1C019A088(v5, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C019A0DC(v20, v21);
  return a1;
}

uint64_t sub_1C0199D10(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1C0199D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C0199EE4(a8, a9, a10, a11, a12, a13, a14);
  }
}

uint64_t sub_1C0199EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1C00B8810(a6, a7);
  }
  return result;
}

uint64_t sub_1C019A028(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C019A088(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C019A0DC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1C00C83C0(a1, a2);
  return a1;
}

uint64_t sub_1C019A0F0(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v18 = *(_OWORD *)(a1 + 480);
  v16 = *(_OWORD *)(a1 + 448);
  v17 = *(_OWORD *)(a1 + 464);
  v14 = *(_OWORD *)(a1 + 416);
  v15 = *(_OWORD *)(a1 + 432);
  v12 = *(_OWORD *)(a1 + 384);
  v13 = *(_OWORD *)(a1 + 400);
  v10 = *(_OWORD *)(a1 + 352);
  v11 = *(_OWORD *)(a1 + 368);
  v8 = *(_OWORD *)(a1 + 320);
  v9 = *(_OWORD *)(a1 + 336);
  v6 = *(_OWORD *)(a1 + 288);
  v7 = *(_OWORD *)(a1 + 304);
  v4 = *(_OWORD *)(a1 + 256);
  v5 = *(_OWORD *)(a1 + 272);
  v3 = *(_OWORD *)(a1 + 224);
  sub_1C00D90A4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    *(_QWORD *)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    *(_QWORD *)(a1 + 496));
  return a1;
}

uint64_t sub_1C019A250(uint64_t result)
{
  *(_BYTE *)(result + 712) = 2;
  return result;
}

uint64_t sub_1C019A25C(uint64_t result)
{
  *(_BYTE *)(result + 712) = 1;
  return result;
}

uint64_t sub_1C019A268(uint64_t result)
{
  *(_BYTE *)(result + 712) = 0;
  return result;
}

void OUTLINED_FUNCTION_1_58(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  sub_1C005A744(v3, a2, v2);
}

void OUTLINED_FUNCTION_3_72(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;

  sub_1C005A744(v26 - 216, (uint64_t)&a26, a3);
}

void *OUTLINED_FUNCTION_4_56(const void *a1)
{
  return memcpy(&STACK[0x598], a1, 0x2C8uLL);
}

void *OUTLINED_FUNCTION_5_48(void *__src, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char __dst)
{
  return memcpy(&__dst, __src, 0x80uLL);
}

void OUTLINED_FUNCTION_6_48(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1C005A744((uint64_t)&STACK[0xE08], (uint64_t)&STACK[0x2C8], a3);
}

void OUTLINED_FUNCTION_10_46(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1C005A744(a1, v3, a3);
}

BOOL OUTLINED_FUNCTION_11_46@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_14_39()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_16_30()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_17_28()
{
  uint64_t v0;

  return sub_1C00873C0(v0, 2u);
}

uint64_t OUTLINED_FUNCTION_0_72()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_1_59()
{
  return swift_release_n();
}

ValueMetadata *type metadata accessor for MeridiemConstraintSolver()
{
  return &type metadata for MeridiemConstraintSolver;
}

uint64_t sub_1C019A334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = sub_1C0301EC4();
  v10 = *(_QWORD *)(v9 - 8);
  result = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 48) == 1)
  {
    v14 = *(_BYTE *)(a1 + 24);
    v15 = a3 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_calendar;
    swift_beginAccess();
    v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v15, v9);
    MEMORY[0x1E0C80A78](v16);
    *(&v19 - 4) = a1;
    *(&v19 - 3) = (uint64_t)v13;
    *((_BYTE *)&v19 - 16) = v14 & 1;
    swift_bridgeObjectRetain();
    sub_1C0270B34();
    v18 = v17;
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    *a6 = v18;
  }
  return result;
}

BOOL sub_1C019A480(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;

  v23 = a4;
  v22 = a3;
  v6 = sub_1C0301EAC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C0301CFC();
  v20 = *(_QWORD *)(v10 - 8);
  v21 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C03016E4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, *a1 + OBJC_IVAR____TtC13SiriInference21RecurringDateInterval_interval, v13);
  if (*(_BYTE *)(a2 + 49))
  {
    v17 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      sub_1C03016B4();
      goto LABEL_6;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C03016CC();
LABEL_6:
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0CB1140], v6);
  v18 = sub_1C0301EB8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v21);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if ((v23 & 1) != 0)
    return v18 > 11;
  else
    return v18 < 12;
}

uint64_t sub_1C019A6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  return sub_1C019A334(a1, a2, a3, a4, 0, a6);
}

BOOL sub_1C019A6B8(_QWORD *a1)
{
  uint64_t v1;

  return sub_1C019A480(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

ValueMetadata *type metadata accessor for PLUSRequestSupportStatus()
{
  return &type metadata for PLUSRequestSupportStatus;
}

unint64_t sub_1C019A6EC()
{
  unint64_t result;

  result = qword_1EF5BEAC0;
  if (!qword_1EF5BEAC0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0313F3C, &type metadata for PLUSRequestSupportStatus);
    atomic_store(result, (unint64_t *)&qword_1EF5BEAC0);
  }
  return result;
}

uint64_t sub_1C019A728(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001C03305F0 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C0330610 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F707075736E75 && a2 == 0xEB00000000646574)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1C019A888(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BEAC8);
  v34 = *(_QWORD *)(v31 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_53();
  v33 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BEAD0);
  v29 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_53();
  v32 = v7;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BEAD8);
  v8 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_21_0();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BEAE0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_6_0();
  v13 = v12 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C006BE5C();
  sub_1C0304B88();
  if (v35)
    goto LABEL_11;
  v27 = v13;
  v36 = (uint64_t)a1;
  v14 = sub_1C0304900();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
LABEL_8:
    v21 = sub_1C0304714();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC278);
    *v23 = &type metadata for PLUSRequestSupportStatus;
    sub_1C0304864();
    sub_1C0304708();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x1E0DEC450], v21);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v27, v9);
    a1 = (_QWORD *)v36;
LABEL_11:
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    return v9;
  }
  v16 = v9;
  v9 = *(unsigned __int8 *)(v14 + 32);
  sub_1C012B614(1, v15, v14, v14 + 32, 0, (2 * v15) | 1);
  v18 = v17;
  v20 = v19;
  swift_bridgeObjectRelease();
  if (v18 != v20 >> 1)
  {
    v9 = v16;
    goto LABEL_8;
  }
  if ((_DWORD)v9)
  {
    if ((_DWORD)v9 == 1)
    {
      sub_1C006BF10();
      OUTLINED_FUNCTION_2_61();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v30);
    }
    else
    {
      OUTLINED_FUNCTION_6_49();
      OUTLINED_FUNCTION_2_61();
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v31);
    }
  }
  else
  {
    sub_1C008EDE0();
    sub_1C0304858();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v28);
  }
  swift_unknownObjectRelease();
  v25 = OUTLINED_FUNCTION_7_52();
  v26(v25);
  __swift_destroy_boxed_opaque_existential_0Tm(v36);
  return v9;
}

uint64_t sub_1C019AC2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C019A728(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C019AC50()
{
  sub_1C006BE5C();
  return sub_1C0304BAC();
}

uint64_t sub_1C019AC78()
{
  sub_1C006BE5C();
  return sub_1C0304BB8();
}

uint64_t sub_1C019ACA0()
{
  sub_1C006BF10();
  return sub_1C0304BAC();
}

uint64_t sub_1C019ACC8()
{
  sub_1C006BF10();
  return sub_1C0304BB8();
}

uint64_t sub_1C019ACF0()
{
  sub_1C008EDE0();
  return sub_1C0304BAC();
}

uint64_t sub_1C019AD18()
{
  sub_1C008EDE0();
  return sub_1C0304BB8();
}

uint64_t sub_1C019AD40()
{
  sub_1C019ADB8();
  return sub_1C0304BAC();
}

uint64_t sub_1C019AD68()
{
  sub_1C019ADB8();
  return sub_1C0304BB8();
}

uint64_t sub_1C019AD90@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1C019A888(a1);
  if (!v2)
    *a2 = result;
  return result;
}

unint64_t sub_1C019ADB8()
{
  unint64_t result;

  result = qword_1EF5BEAF0;
  if (!qword_1EF5BEAF0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0314260, &type metadata for PLUSRequestSupportStatus.UnsupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BEAF0);
  }
  return result;
}

uint64_t _s13SiriInference24PLUSRequestSupportStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C019AE40 + 4 * byte_1C0313ED5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C019AE74 + 4 * byte_1C0313ED0[v4]))();
}

uint64_t sub_1C019AE74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C019AE7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C019AE84);
  return result;
}

uint64_t sub_1C019AE90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C019AE98);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C019AE9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C019AEA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PLUSRequestSupportStatus.CodingKeys()
{
  return &type metadata for PLUSRequestSupportStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for PLUSRequestSupportStatus.SupportedPhoneCallCodingKeys()
{
  return &type metadata for PLUSRequestSupportStatus.SupportedPhoneCallCodingKeys;
}

ValueMetadata *type metadata accessor for PLUSRequestSupportStatus.SupportedMessagesCodingKeys()
{
  return &type metadata for PLUSRequestSupportStatus.SupportedMessagesCodingKeys;
}

ValueMetadata *type metadata accessor for PLUSRequestSupportStatus.UnsupportedCodingKeys()
{
  return &type metadata for PLUSRequestSupportStatus.UnsupportedCodingKeys;
}

unint64_t sub_1C019AF08()
{
  unint64_t result;

  result = qword_1EF5BEB50;
  if (!qword_1EF5BEB50)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0314018, &type metadata for PLUSRequestSupportStatus.UnsupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BEB50);
  }
  return result;
}

unint64_t sub_1C019AF48()
{
  unint64_t result;

  result = qword_1EF5BEB58;
  if (!qword_1EF5BEB58)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0314040, &type metadata for PLUSRequestSupportStatus.UnsupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BEB58);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_73()
{
  return sub_1C0304918();
}

uint64_t OUTLINED_FUNCTION_2_61()
{
  return sub_1C0304858();
}

unint64_t OUTLINED_FUNCTION_6_49()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_1C019ADB8();
}

uint64_t OUTLINED_FUNCTION_7_52()
{
  uint64_t v0;

  return v0;
}

uint64_t DateTime.Date.Holiday.Emotion.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if (result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!result)
    v2 = 0;
  *a2 = v2;
  return result;
}

uint64_t DateTime.Date.Holiday.Emotion.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1C019AFF8()
{
  unint64_t result;

  result = qword_1EF5BEB70;
  if (!qword_1EF5BEB70)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.Holiday.Emotion, &type metadata for DateTime.Date.Holiday.Emotion);
    atomic_store(result, (unint64_t *)&qword_1EF5BEB70);
  }
  return result;
}

uint64_t sub_1C019B034@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return DateTime.Date.Holiday.Emotion.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C019B03C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DateTime.Date.Holiday.Emotion.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C019B060()
{
  sub_1C019B1D4();
  return sub_1C03040FC();
}

uint64_t sub_1C019B0BC()
{
  sub_1C019B1D4();
  return sub_1C03040D8();
}

uint64_t _s7EmotionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C019B154 + 4 * byte_1C0314305[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C019B188 + 4 * byte_1C0314300[v4]))();
}

uint64_t sub_1C019B188(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C019B190(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C019B198);
  return result;
}

uint64_t sub_1C019B1A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C019B1ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C019B1B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C019B1B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DateTime.Date.Holiday.Emotion()
{
  return &type metadata for DateTime.Date.Holiday.Emotion;
}

unint64_t sub_1C019B1D4()
{
  unint64_t result;

  result = qword_1EF5BEB78;
  if (!qword_1EF5BEB78)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.Holiday.Emotion, &type metadata for DateTime.Date.Holiday.Emotion);
    atomic_store(result, (unint64_t *)&qword_1EF5BEB78);
  }
  return result;
}

uint64_t sub_1C019B210()
{
  __CFString *v0;
  __CFString *v1;
  CFPropertyListRef v2;
  char v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  _BOOL8 v15;
  char v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v0 = (__CFString *)sub_1C0303E8C();
  v1 = (__CFString *)sub_1C0303E8C();
  v2 = CFPreferencesCopyAppValue(v0, v1);

  if (!v2 || (v26 = (uint64_t)v2, (swift_dynamicCast() & 1) == 0))
  {
    if (qword_1EF5B7F08 != -1)
      swift_once();
    v10 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EF5FC6B0);
    v11 = sub_1C0303B80();
    v12 = sub_1C03042E8();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      v14 = OUTLINED_FUNCTION_4_0();
      v25 = v14;
      *(_DWORD *)v13 = 136315138;
      v26 = OUTLINED_FUNCTION_1_60(v14);
      sub_1C03044B0();
      _os_log_impl(&dword_1C0039000, v11, v12, "no value found in CFPreferences, using default: %s", v13, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }

    return 1;
  }
  OUTLINED_FUNCTION_44();
  v3 = sub_1C019B6BC();
  if (v3 == 2)
  {
    if (qword_1EF5B7F08 != -1)
      swift_once();
    v4 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EF5FC6B0);
    OUTLINED_FUNCTION_44();
    v5 = sub_1C0303B80();
    v6 = sub_1C03042E8();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = OUTLINED_FUNCTION_4_0();
      v25 = OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v7 = 136315394;
      v8 = OUTLINED_FUNCTION_44();
      OUTLINED_FUNCTION_4_57(v8);
      OUTLINED_FUNCTION_5_49();
      sub_1C03044B0();
      v9 = OUTLINED_FUNCTION_6_37();
      *(_WORD *)(v7 + 12) = 2080;
      v26 = OUTLINED_FUNCTION_1_60(v9);
      sub_1C03044B0();
      _os_log_impl(&dword_1C0039000, v5, v6, "invalid search strategy value %s, using default: %s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_53_2();
    return 1;
  }
  v17 = v3;
  v15 = v3 != 0;
  if (qword_1EF5B7F08 != -1)
    swift_once();
  v18 = OUTLINED_FUNCTION_9_0();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EF5FC6B0);
  OUTLINED_FUNCTION_44();
  v19 = sub_1C0303B80();
  v20 = sub_1C03042E8();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = OUTLINED_FUNCTION_4_0();
    v25 = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v21 = 136315394;
    v22 = OUTLINED_FUNCTION_44();
    OUTLINED_FUNCTION_4_57(v22);
    OUTLINED_FUNCTION_5_49();
    sub_1C03044B0();
    OUTLINED_FUNCTION_6_37();
    *(_WORD *)(v21 + 12) = 2080;
    if (v17)
      v23 = 0x73757361676570;
    else
      v23 = 0x74696B70616DLL;
    if (v17)
      v24 = 0xE700000000000000;
    else
      v24 = 0xE600000000000000;
    v26 = sub_1C003E6D8(v23, v24, &v25);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v19, v20, "found value %s, using: %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_53_2();
  return v15;
}

uint64_t sub_1C019B6BC()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1C030484C();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t OUTLINED_FUNCTION_1_60(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return sub_1C003E6D8(0x73757361676570, 0xE700000000000000, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_4_57(uint64_t a1, ...)
{
  unint64_t v1;
  uint64_t v2;
  va_list va;

  va_start(va, a1);
  return sub_1C003E6D8(v2, v1, (uint64_t *)va);
}

uint64_t DateTime.DefinedDateTime.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 0;
  return result;
}

uint64_t DateTime.DefinedDateTime.rawValue.getter()
{
  return 0;
}

unint64_t sub_1C019B76C()
{
  unint64_t result;

  result = qword_1EF5BEB80;
  if (!qword_1EF5BEB80)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.DefinedDateTime, &type metadata for DateTime.DefinedDateTime);
    atomic_store(result, (unint64_t *)&qword_1EF5BEB80);
  }
  return result;
}

uint64_t sub_1C019B7B4@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  return DateTime.DefinedDateTime.init(rawValue:)(*a1, a2);
}

void sub_1C019B7BC(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1C019B7C4()
{
  sub_1C019B908();
  return sub_1C03040FC();
}

uint64_t sub_1C019B820()
{
  sub_1C019B908();
  return sub_1C03040D8();
}

uint64_t _s15DefinedDateTimeOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C019B8AC + 4 * byte_1C0314410[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C019B8CC + 4 * byte_1C0314415[v4]))();
}

_BYTE *sub_1C019B8AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C019B8CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C019B8D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C019B8DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C019B8E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C019B8EC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DateTime.DefinedDateTime()
{
  return &type metadata for DateTime.DefinedDateTime;
}

unint64_t sub_1C019B908()
{
  unint64_t result;

  result = qword_1EF5BEB88;
  if (!qword_1EF5BEB88)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.DefinedDateTime, &type metadata for DateTime.DefinedDateTime);
    atomic_store(result, (unint64_t *)&qword_1EF5BEB88);
  }
  return result;
}

SiriInference::ContinentName::Value_optional __swiftcall ContinentName.Value.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  unint64_t v2;
  char *v3;
  char v4;
  SiriInference::ContinentName::Value_optional result;

  v3 = v1;
  sub_1C030484C();
  OUTLINED_FUNCTION_6_2();
  v4 = 8;
  if (v2 < 8)
    v4 = v2;
  *v3 = v4;
  OUTLINED_FUNCTION_37_0();
  return result;
}

uint64_t ContinentName.Value.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C019B9C8
                                                            + 4 * asc_1C0314524[*v0]))(0x6D41206874726F4ELL, 0xED00006163697265);
}

uint64_t sub_1C019B9C8()
{
  return 0x6D41206874756F53;
}

uint64_t sub_1C019B9DC()
{
  return 0x6369747261746E41;
}

uint64_t sub_1C019B9F8()
{
  return 0x616369726641;
}

uint64_t sub_1C019BA0C()
{
  return 0x65706F727545;
}

uint64_t sub_1C019BA20()
{
  return 1634300737;
}

uint64_t sub_1C019BA30()
{
  return 0x61697361727545;
}

uint64_t sub_1C019BA48()
{
  return 0x61696E6165634FLL;
}

void sub_1C019BA60()
{
  sub_1C025EDA0();
}

void sub_1C019BA6C()
{
  unsigned __int8 *v0;

  sub_1C00CEA34(*v0);
}

void sub_1C019BA74()
{
  sub_1C00C29FC();
}

void sub_1C019BA7C(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EAAB4(a1, *v1);
}

SiriInference::ContinentName::Value_optional sub_1C019BA84(Swift::String *a1)
{
  return ContinentName.Value.init(rawValue:)(*a1);
}

uint64_t sub_1C019BA90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ContinentName.Value.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C019BAB4()
{
  sub_1C019C6D0();
  return sub_1C03040F0();
}

uint64_t sub_1C019BB10()
{
  sub_1C019C6D0();
  return sub_1C03040CC();
}

SiriInference::ContinentName::Prefix_optional __swiftcall ContinentName.Prefix.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  unint64_t v2;
  char *v3;
  char v4;
  SiriInference::ContinentName::Prefix_optional result;

  v3 = v1;
  sub_1C030484C();
  OUTLINED_FUNCTION_6_2();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *v3 = v4;
  OUTLINED_FUNCTION_37_0();
  return result;
}

uint64_t ContinentName.Prefix.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 28265;
  if (*v0 != 1)
    v1 = 1918985582;
  if (*v0)
    return v1;
  else
    return 0x6E656E69746E6F63;
}

void sub_1C019BBF0(char *a1, char *a2)
{
  sub_1C025ECD8(*a1, *a2);
}

void sub_1C019BBFC()
{
  sub_1C00CEA40();
}

uint64_t sub_1C019BC04(uint64_t a1)
{
  char *v1;

  return sub_1C00C29A0(a1, *v1);
}

void sub_1C019BC0C()
{
  sub_1C02EAAC0();
}

SiriInference::ContinentName::Prefix_optional sub_1C019BC14(Swift::String *a1)
{
  return ContinentName.Prefix.init(rawValue:)(*a1);
}

uint64_t sub_1C019BC20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ContinentName.Prefix.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C019BC44()
{
  sub_1C019C694();
  return sub_1C03040F0();
}

uint64_t sub_1C019BCA0()
{
  sub_1C019C694();
  return sub_1C03040CC();
}

void ContinentName.value.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void ContinentName.prefix.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

SiriInference::ContinentName __swiftcall ContinentName.init(value:prefix:)(SiriInference::ContinentName::Value value, SiriInference::ContinentName::Prefix_optional prefix)
{
  _BYTE *v2;
  char v3;
  SiriInference::ContinentName result;

  v3 = *(_BYTE *)prefix.value;
  *v2 = *(_BYTE *)value;
  v2[1] = v3;
  result.value = value;
  return result;
}

void static ContinentName.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v4;

  v2 = *(unsigned __int8 *)(a1 + 1);
  v3 = *(unsigned __int8 *)(a2 + 1);
  sub_1C025EDA0();
  if ((v4 & 1) != 0 && v2 != 3 && v3 != 3)
    sub_1C025ECD8(v2, v3);
}

uint64_t sub_1C019BD7C()
{
  sub_1C019C068();
  return sub_1C0304BAC();
}

uint64_t sub_1C019BDA4()
{
  sub_1C019C068();
  return sub_1C0304BB8();
}

void ContinentName.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;
  char v13;
  char v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BEB90);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C019C068();
  sub_1C0304BA0();
  v14 = v8;
  v13 = 0;
  sub_1C019C0A4();
  sub_1C030499C();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    sub_1C019C0E0();
    sub_1C0304954();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  OUTLINED_FUNCTION_28_0();
}

void ContinentName.init(from:)(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  char v7;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BEBB0);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C019C068();
  sub_1C0304B88();
  if (!v2)
  {
    sub_1C019C11C();
    OUTLINED_FUNCTION_3_51();
    sub_1C03048E8();
    sub_1C019C158();
    OUTLINED_FUNCTION_3_51();
    sub_1C03048A0();
    OUTLINED_FUNCTION_3_27();
    *a2 = v7;
    a2[1] = v6;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  OUTLINED_FUNCTION_28_0();
}

void sub_1C019C03C(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  ContinentName.init(from:)(a1, a2);
}

void sub_1C019C050(_QWORD *a1)
{
  ContinentName.encode(to:)(a1);
}

unint64_t sub_1C019C068()
{
  unint64_t result;

  result = qword_1EF5BEB98;
  if (!qword_1EF5BEB98)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03148C8, &type metadata for ContinentName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BEB98);
  }
  return result;
}

unint64_t sub_1C019C0A4()
{
  unint64_t result;

  result = qword_1EF5BEBA0;
  if (!qword_1EF5BEBA0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContinentName.Value, &type metadata for ContinentName.Value);
    atomic_store(result, (unint64_t *)&qword_1EF5BEBA0);
  }
  return result;
}

unint64_t sub_1C019C0E0()
{
  unint64_t result;

  result = qword_1EF5BEBA8;
  if (!qword_1EF5BEBA8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContinentName.Prefix, &type metadata for ContinentName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5BEBA8);
  }
  return result;
}

unint64_t sub_1C019C11C()
{
  unint64_t result;

  result = qword_1EF5BEBB8;
  if (!qword_1EF5BEBB8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContinentName.Value, &type metadata for ContinentName.Value);
    atomic_store(result, (unint64_t *)&qword_1EF5BEBB8);
  }
  return result;
}

unint64_t sub_1C019C158()
{
  unint64_t result;

  result = qword_1EF5BEBC0;
  if (!qword_1EF5BEBC0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContinentName.Prefix, &type metadata for ContinentName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5BEBC0);
  }
  return result;
}

unint64_t sub_1C019C198()
{
  unint64_t result;

  result = qword_1EF5BEBC8;
  if (!qword_1EF5BEBC8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContinentName.Value, &type metadata for ContinentName.Value);
    atomic_store(result, (unint64_t *)&qword_1EF5BEBC8);
  }
  return result;
}

unint64_t sub_1C019C1D8()
{
  unint64_t result;

  result = qword_1EF5BEBD0;
  if (!qword_1EF5BEBD0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContinentName.Prefix, &type metadata for ContinentName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5BEBD0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContinentName(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 65283 <= 0xFFFEFFFF)
      v2 = 2;
    else
      v2 = 4;
    if (a2 + 65283 < 0xFF0000)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (v4)
        goto LABEL_15;
    }
    else
    {
      if (v3 == 2)
      {
        v4 = a1[1];
        if (!a1[1])
          goto LABEL_17;
LABEL_15:
        v5 = (*a1 | (v4 << 16)) - 65284;
        return (v5 + 1);
      }
      v4 = *((unsigned __int8 *)a1 + 2);
      if (*((_BYTE *)a1 + 2))
        goto LABEL_15;
    }
  }
LABEL_17:
  if (*((unsigned __int8 *)a1 + 1) <= 3u)
    v6 = 3;
  else
    v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 - 4;
  if (*((unsigned __int8 *)a1 + 1) < 3u)
    v5 = -1;
  else
    v5 = v7;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ContinentName(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65283 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65283 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C019C2FC + 4 * byte_1C0314531[v4]))();
  *a1 = a2 - 253;
  return ((uint64_t (*)(void))((char *)sub_1C019C330 + 4 * byte_1C031452C[v4]))();
}

uint64_t sub_1C019C330(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1C019C338(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1C019C340);
  return result;
}

uint64_t sub_1C019C34C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1C019C354);
  *(_BYTE *)(result + 1) = a2 + 3;
  return result;
}

uint64_t sub_1C019C358(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1C019C360(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

void type metadata accessor for ContinentName()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t storeEnumTagSinglePayload for ContinentName.Value(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1C019C3C4 + 4 * byte_1C031453B[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1C019C3F8 + 4 * byte_1C0314536[v4]))();
}

uint64_t sub_1C019C3F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C019C400(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C019C408);
  return result;
}

uint64_t sub_1C019C414(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C019C41CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1C019C420(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C019C428(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ContinentName.Value()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t storeEnumTagSinglePayload for ContinentName.Prefix(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C019C48C + 4 * byte_1C0314545[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C019C4C0 + 4 * byte_1C0314540[v4]))();
}

uint64_t sub_1C019C4C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C019C4C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C019C4D0);
  return result;
}

uint64_t sub_1C019C4DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C019C4E4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C019C4E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C019C4F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ContinentName.Prefix()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t storeEnumTagSinglePayload for ContinentName.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C019C554 + 4 * byte_1C031454F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C019C588 + 4 * byte_1C031454A[v4]))();
}

uint64_t sub_1C019C588(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C019C590(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C019C598);
  return result;
}

uint64_t sub_1C019C5A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C019C5ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C019C5B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C019C5B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContinentName.CodingKeys()
{
  return &type metadata for ContinentName.CodingKeys;
}

unint64_t sub_1C019C5D8()
{
  unint64_t result;

  result = qword_1EF5BEBD8;
  if (!qword_1EF5BEBD8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03148A0, &type metadata for ContinentName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BEBD8);
  }
  return result;
}

unint64_t sub_1C019C618()
{
  unint64_t result;

  result = qword_1EF5BEBE0;
  if (!qword_1EF5BEBE0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0314810, &type metadata for ContinentName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BEBE0);
  }
  return result;
}

unint64_t sub_1C019C658()
{
  unint64_t result;

  result = qword_1EF5BEBE8;
  if (!qword_1EF5BEBE8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0314838, &type metadata for ContinentName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BEBE8);
  }
  return result;
}

unint64_t sub_1C019C694()
{
  unint64_t result;

  result = qword_1EF5BEBF0;
  if (!qword_1EF5BEBF0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContinentName.Prefix, &type metadata for ContinentName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5BEBF0);
  }
  return result;
}

unint64_t sub_1C019C6D0()
{
  unint64_t result;

  result = qword_1EF5BEBF8;
  if (!qword_1EF5BEBF8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContinentName.Value, &type metadata for ContinentName.Value);
    atomic_store(result, (unint64_t *)&qword_1EF5BEBF8);
  }
  return result;
}

uint64_t sub_1C019C70C()
{
  sub_1C019C820();
  return sub_1C0304BAC();
}

uint64_t sub_1C019C734()
{
  sub_1C019C820();
  return sub_1C0304BB8();
}

uint64_t Empty.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BEC00);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C019C820();
  sub_1C0304BA0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1C019C820()
{
  unint64_t result;

  result = qword_1EF5BEC08;
  if (!qword_1EF5BEC08)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0314A64, &type metadata for Empty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BEC08);
  }
  return result;
}

uint64_t Empty.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

uint64_t sub_1C019C880(uint64_t a1)
{
  return Empty.init(from:)(a1);
}

uint64_t sub_1C019C894(_QWORD *a1)
{
  return Empty.encode(to:)(a1);
}

uint64_t sub_1C019C8A8()
{
  swift_getAssociatedTypeWitness();
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1C019C90C()
{
  swift_getAssociatedTypeWitness();
  return swift_getAssociatedConformanceWitness();
}

uint64_t dispatch thunk of static ValueResolver.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of SingleValueResolver.findMatches(value:context:spec:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of SingleValueResolver.makeRecommendation(value:context:spec:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of MultiValueResolver.findMatches(values:context:spec:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of MultiValueResolver.makeRecommendations(values:context:spec:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

ValueMetadata *type metadata accessor for Empty()
{
  return &type metadata for Empty;
}

ValueMetadata *type metadata accessor for Empty.CodingKeys()
{
  return &type metadata for Empty.CodingKeys;
}

unint64_t sub_1C019C9FC()
{
  unint64_t result;

  result = qword_1EF5BEC10;
  if (!qword_1EF5BEC10)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0314A14, &type metadata for Empty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BEC10);
  }
  return result;
}

unint64_t sub_1C019CA3C()
{
  unint64_t result;

  result = qword_1EF5BEC18;
  if (!qword_1EF5BEC18)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0314A3C, &type metadata for Empty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5BEC18);
  }
  return result;
}

uint64_t static SearchResultsAppRanker.rank(searchTerm:maxResults:excludeAppBundleIds:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 112) = a4;
  *(_QWORD *)(v6 + 120) = a6;
  *(_BYTE *)(v6 + 160) = a5;
  *(_QWORD *)(v6 + 96) = a2;
  *(_QWORD *)(v6 + 104) = a3;
  *(_QWORD *)(v6 + 88) = a1;
  *(_QWORD *)(v6 + 128) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BEC28);
  *(_QWORD *)(v6 + 136) = OUTLINED_FUNCTION_1_61();
  *(_QWORD *)(v6 + 144) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BEC30);
  *(_QWORD *)(v6 + 152) = OUTLINED_FUNCTION_1_61();
  return OUTLINED_FUNCTION_8_6();
}

uint64_t sub_1C019CAE4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  int EnumTagSinglePayload;
  _QWORD *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 144);
  v22 = *(_QWORD *)(v0 + 152);
  v23 = *(_QWORD *)(v0 + 136);
  v2 = *(_BYTE *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = swift_allocBox();
  v6 = v5;
  __swift_storeEnumTagSinglePayload(v5, 1, 1, v1);
  v7 = (void *)sub_1C009130C(0, (void (*)())sub_1C019CD30, 0);
  v8 = (void *)sub_1C0303E8C();
  v9 = (void *)sub_1C0304234();
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0C809B0];
  if ((v2 & 1) != 0)
    v10 = -1;
  else
    v10 = v3;
  *(_QWORD *)(v0 + 48) = sub_1C019D004;
  *(_QWORD *)(v0 + 56) = v4;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_1C019D00C;
  *(_QWORD *)(v0 + 40) = &block_descriptor_13;
  v11 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_rankAppsForSearchTermWithSearchTerm_maxResults_excludeAppBundleIds_completionHandler_, v8, v10, v9, v11);

  _Block_release(v11);
  v12 = v22 + *(int *)(v1 + 48);
  OUTLINED_FUNCTION_28_2();
  sub_1C019D0F8(v6, v23);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v23, 1, v1);
  v14 = *(_QWORD **)(v0 + 152);
  v15 = *(_QWORD **)(v0 + 136);
  if (EnumTagSinglePayload == 1)
  {
    *v14 = MEMORY[0x1E0DEE9D8];
    sub_1C0301D50();
    swift_unknownObjectRelease();
    sub_1C019D140((uint64_t)v15);
  }
  else
  {
    swift_unknownObjectRelease();
    v16 = (char *)v15 + *(int *)(v1 + 48);
    *v14 = *v15;
    v17 = OUTLINED_FUNCTION_40_1();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v12, v16, v17);
  }
  v18 = *(_QWORD *)(v0 + 88);
  v19 = **(_QWORD **)(v0 + 152);
  v20 = OUTLINED_FUNCTION_40_1();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v12, v20);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v19);
}

void sub_1C019CD30(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  NSObject *oslog;
  uint64_t v12;

  if (qword_1ED728430 != -1)
    swift_once();
  v2 = sub_1C0303B98();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED729650);
  v3 = a1;
  v4 = a1;
  oslog = sub_1C0303B80();
  v5 = sub_1C03042F4();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7281B0);
    v9 = sub_1C0303EF8();
    sub_1C003E6D8(v9, v10, &v12);
    sub_1C03044B0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C0039000, oslog, v5, "SearchResultsAppRanker rank XPC error, %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v7, -1, -1);
    MEMORY[0x1C3B98378](v6, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_1C019CF0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BEC28);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = swift_projectBox();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BEC30);
  v9 = (char *)v6 + *(int *)(v8 + 48);
  *v6 = a1;
  v10 = sub_1C0301D5C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, a2, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  return sub_1C019D710((uint64_t)v6, v7);
}

uint64_t sub_1C019D004(uint64_t a1, uint64_t a2)
{
  return sub_1C019CF0C(a1, a2);
}

uint64_t sub_1C019D00C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(uint64_t, char *);
  uint64_t v7;
  uint64_t v9;

  v2 = sub_1C0301D5C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(uint64_t, char *))(a1 + 32);
  v7 = sub_1C0304138();
  sub_1C0301D44();
  swift_retain();
  v6(v7, v5);
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t sub_1C019D0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BEC28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C019D140(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BEC28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static SearchResultsAppRanker.rank(searchTerm:maxResults:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v8 = a4 & 1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BEC30);
  *(_QWORD *)(v4 + 16) = v9;
  *(_QWORD *)(v4 + 24) = swift_task_alloc();
  v10 = swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v10;
  v11 = *(int *)(v9 + 48);
  *(_DWORD *)(v4 + 56) = v11;
  v12 = v10 + v11;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 40) = v13;
  *v13 = v4;
  v13[1] = sub_1C019D24C;
  return static SearchResultsAppRanker.rank(searchTerm:maxResults:excludeAppBundleIds:)(v12, a1, a2, a3, v8, MEMORY[0x1E0DEE9E8]);
}

uint64_t sub_1C019D24C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_8_6();
}

uint64_t sub_1C019D2A0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD **)(v0 + 24);
  v3 = *(_QWORD **)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = (char *)v3 + *(int *)(v0 + 56);
  *v3 = v1;
  v6 = (char *)v2 + *(int *)(v4 + 48);
  *v2 = v1;
  v7 = OUTLINED_FUNCTION_40_1();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v6, v5, v7);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 48));
}

void static SearchResultsAppRanker.appSelected(rankEventId:selectedAppBundleId:numberOfAppsShown:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  void *v6;
  char v7;
  void *v8;
  void *v9;

  v5 = OUTLINED_FUNCTION_4_58();
  *(_BYTE *)(v5 + 16) = 1;
  swift_retain();
  v6 = (void *)sub_1C009130C(0, (void (*)())j__OUTLINED_FUNCTION_3_73, v5);
  swift_release();
  OUTLINED_FUNCTION_28_2();
  v7 = *(_BYTE *)(v5 + 16);
  swift_release();
  if ((v7 & 1) != 0)
  {
    v8 = (void *)sub_1C0301D2C();
    v9 = (void *)sub_1C0303E8C();
    objc_msgSend(v6, sel_appSelectedForSearchTermWithRankEventId_selectedAppBundleId_numberOfAppsShown_, v8, v9, a4);
    swift_unknownObjectRelease();

  }
  else
  {
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1C019D434()
{
  return swift_deallocObject();
}

void static SearchResultsAppRanker.appSelected(searchTerm:appBundleId:)()
{
  uint64_t v0;
  void *v1;
  char v2;
  void *v3;

  v0 = OUTLINED_FUNCTION_4_58();
  *(_BYTE *)(v0 + 16) = 1;
  swift_retain();
  v1 = (void *)sub_1C009130C(0, (void (*)())j__OUTLINED_FUNCTION_3_73, v0);
  swift_release();
  OUTLINED_FUNCTION_28_2();
  v2 = *(_BYTE *)(v0 + 16);
  swift_release();
  if ((v2 & 1) != 0)
  {
    v3 = (void *)sub_1C0303E8C();
    objc_msgSend(v1, sel_appSelectedForSearchTermWithRankEventId_selectedAppBundleId_numberOfAppsShown_, 0, v3, -1);
    swift_unknownObjectRelease();

  }
  else
  {
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1C019D51C(void *a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v15[3];

  if (qword_1ED728430 != -1)
    swift_once();
  v4 = sub_1C0303B98();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED729650);
  v5 = a1;
  v6 = a1;
  v7 = sub_1C0303B80();
  v8 = sub_1C03042F4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7281B0);
    v12 = sub_1C0303EF8();
    sub_1C003E6D8(v12, v13, v15);
    sub_1C03044B0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C0039000, v7, v8, "SearchResultsAppRanker createXpc XPC error, %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v10, -1, -1);
    MEMORY[0x1C3B98378](v9, -1, -1);
  }
  else
  {

  }
  result = swift_beginAccess();
  *(_BYTE *)(a2 + 16) = 0;
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsAppRanker()
{
  return &type metadata for SearchResultsAppRanker;
}

uint64_t sub_1C019D710(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BEC28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_1_61()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_3_73(void *a1)
{
  uint64_t v1;

  return sub_1C019D51C(a1, v1);
}

uint64_t OUTLINED_FUNCTION_4_58()
{
  return swift_allocObject();
}

Swift::Bool __swiftcall INSearchForMediaIntent.canPersistInSiriRemembers()()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  unsigned int v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  v1 = objc_msgSend(v0, sel_privateSearchForMediaIntentData);
  if (!v1)
    return 1;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_appInferred);

  if (!v3)
    return 1;
  v4 = objc_msgSend(v3, sel_BOOLValue);

  if (!v4)
    return 1;
  if (qword_1ED728298 != -1)
    swift_once();
  v5 = sub_1C0303B98();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED729610);
  v6 = sub_1C0303B80();
  v7 = sub_1C03042DC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1C0039000, v6, v7, "INSearchForMediaIntent is inferred", v8, 2u);
    MEMORY[0x1C3B98378](v8, -1, -1);
  }

  return 0;
}

uint64_t INSearchForMediaIntent.memorableParameters()()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  __n128 *inited;
  uint64_t v6;
  id v7;
  id v8;
  __n128 *v9;
  _QWORD *v10;

  v1 = sub_1C018E250(v0);
  if (v1)
    v2 = v1;
  else
    v2 = MEMORY[0x1E0DEE9D8];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1C03047F8();
    OUTLINED_FUNCTION_33();
    if (v6)
      goto LABEL_6;
  }
  else if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_6:
    sub_1C018D76C(v2, v0);
    v4 = v3;
    OUTLINED_FUNCTION_33();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7256A8);
    inited = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_0_74(inited, (__n128)xmmword_1C0305B60);
    inited[4].n128_u64[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725690);
    inited[3].n128_u64[0] = v4;
    return sub_1C0303DB4();
  }
  v7 = OUTLINED_FUNCTION_2_62();

  OUTLINED_FUNCTION_33();
  if (v7)
  {
    v8 = OUTLINED_FUNCTION_2_62();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7256A8);
    v9 = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_0_74(v9, (__n128)xmmword_1C0305B60)[4].n128_u64[1] = (unint64_t)&type metadata for MediaSearchItem;
    v10 = (_QWORD *)swift_allocObject();
    v9[3].n128_u64[0] = (unint64_t)v10;
    v10[2] = 0x616553616964654DLL;
    v10[3] = 0xEF6D657449686372;
    v10[4] = 0;
    v10[5] = v8;
  }
  return sub_1C0303DB4();
}

BOOL sub_1C019DAA8()
{
  return INSearchForMediaIntent.canPersistInSiriRemembers()();
}

uint64_t sub_1C019DACC()
{
  return INSearchForMediaIntent.memorableParameters()();
}

uint64_t sub_1C019DAEC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

__n128 *OUTLINED_FUNCTION_0_74(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x736D657469;
  result[2].n128_u64[1] = 0xE500000000000000;
  return result;
}

id OUTLINED_FUNCTION_2_62()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 718));
}

void sub_1C019DB48(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = (void *)sub_1C0301B10();
  objc_msgSend(v2, sel_initWithURL_, v3);

  v4 = OUTLINED_FUNCTION_14_14();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  OUTLINED_FUNCTION_37_0();
}

void static BiomeInteractionProcessor.metricName.getter()
{
  OUTLINED_FUNCTION_29_11();
}

void BiomeInteractionProcessor.__allocating_init(appIntentEvent:eventReceivedAt:databaseURL:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  BiomeInteractionProcessor.init(appIntentEvent:eventReceivedAt:databaseURL:)(a1, a2, a3);
  OUTLINED_FUNCTION_37_0();
}

id BiomeInteractionProcessor.init(appIntentEvent:eventReceivedAt:databaseURL:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  objc_super v18;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC13SiriInference25BiomeInteractionProcessor_appIntentEvent] = a1;
  v9 = &v4[OBJC_IVAR____TtC13SiriInference25BiomeInteractionProcessor_eventReceivedAt];
  v10 = OUTLINED_FUNCTION_8_0();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a2, v10);
  v12 = &v4[OBJC_IVAR____TtC13SiriInference25BiomeInteractionProcessor_databaseURL];
  v13 = OUTLINED_FUNCTION_14_14();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a3, v13);
  v15 = &v4[OBJC_IVAR____TtC13SiriInference25BiomeInteractionProcessor_siriTasksEvaluator];
  *((_QWORD *)v15 + 3) = &type metadata for SiriTasksEvaluator;
  *((_QWORD *)v15 + 4) = &off_1E799C5E8;
  v18.receiver = v4;
  v18.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v18, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a3, v13);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
  return v16;
}

id sub_1C019DD20()
{
  uint64_t v0;
  uint64_t v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v2 = (objc_class *)OUTLINED_FUNCTION_7_9();
  v3 = OUTLINED_FUNCTION_14_14();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_3();
  v5 = OUTLINED_FUNCTION_8_0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)(v0 + OBJC_IVAR____TtC13SiriInference25BiomeInteractionProcessor_appIntentEvent);
  (*(void (**)(char *, uint64_t))(v9 + 16))(v7, v0 + OBJC_IVAR____TtC13SiriInference25BiomeInteractionProcessor_eventReceivedAt);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v0 + OBJC_IVAR____TtC13SiriInference25BiomeInteractionProcessor_databaseURL, v3);
  v10 = objc_allocWithZone(v2);
  return BiomeInteractionProcessor.init(appIntentEvent:eventReceivedAt:databaseURL:)((uint64_t)v8, (uint64_t)v7, v1);
}

Swift::Void __swiftcall BiomeInteractionProcessor.main()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_7_9();
  if ((objc_msgSend(v0, sel_isCancelled) & 1) == 0)
  {
    v1 = sub_1C03046E4();
    sub_1C01D25AC(v1, v2, (uint64_t)v0);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C019DEA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t result;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  _QWORD v18[2];

  v3 = v0;
  v4 = sub_1C0301B70();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v18 - v9;
  v11 = type metadata accessor for SiriRemembersDB();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_1_3();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, v3 + OBJC_IVAR____TtC13SiriInference25BiomeInteractionProcessor_databaseURL, v4);
  result = SiriRemembersDB.init(url:readOnly:)((uint64_t)v10, 0, v2);
  if (!v1)
  {
    sub_1C019EA48();
    v12(v8, v2, v4);
    sub_1C019DB48((uint64_t)v8);
    v15 = v14;
    v16 = (void *)MEMORY[0x1C3B97BB0]();
    v17 = *(void **)(v3 + OBJC_IVAR____TtC13SiriInference25BiomeInteractionProcessor_appIntentEvent);
    sub_1C00CF960(v17, v2, v15);
    objc_autoreleasePoolPop(v16);
    objc_msgSend((id)objc_opt_self(), sel__resetCache);
    sub_1C025F90C(0, v3 + OBJC_IVAR____TtC13SiriInference25BiomeInteractionProcessor_eventReceivedAt);
    if ((sub_1C019E090(v17) & 1) != 0)
    {
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR____TtC13SiriInference25BiomeInteractionProcessor_siriTasksEvaluator), *(_QWORD *)(v3 + OBJC_IVAR____TtC13SiriInference25BiomeInteractionProcessor_siriTasksEvaluator + 24));
      sub_1C01C00B8();
    }

    return sub_1C008F7B8(v2);
  }
  return result;
}

uint64_t sub_1C019E090(void *a1)
{
  NSObject *v2;
  NSObject *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  NSObject *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33[2];
  __int128 v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  __int128 v38;

  v2 = objc_msgSend(a1, sel_eventBody);
  if (!v2)
  {
    if (qword_1ED728298 != -1)
      swift_once();
    v8 = sub_1C0303B98();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED729610);
    v9 = a1;
    v3 = sub_1C0303B80();
    v10 = sub_1C03042F4();
    if (!os_log_type_enabled(v3, v10))
    {

      return 0;
    }
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    *(_QWORD *)&v34 = v12;
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)&v38 = v9;
    v13 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727938);
    v14 = sub_1C0303F1C();
    *(_QWORD *)&v38 = sub_1C003E6D8(v14, v15, (uint64_t *)&v34);
    sub_1C03044B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v3, v10, "biome event lacks eventBody: %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v12, -1, -1);
    MEMORY[0x1C3B98378](v11, -1, -1);
    goto LABEL_14;
  }
  v3 = v2;
  if (-[NSObject donatedBySiri](v2, sel_donatedBySiri))
  {
    if (qword_1ED728298 != -1)
      swift_once();
    v4 = sub_1C0303B98();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED729610);
    v5 = sub_1C0303B80();
    v6 = sub_1C03042E8();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1C0039000, v5, v6, "Skipping BMIntentEvent donated by Siri.", v7, 2u);
      MEMORY[0x1C3B98378](v7, -1, -1);

      return 0;
    }

LABEL_14:
    return 0;
  }
  v16 = v3;
  sub_1C02E8928(v16, (uint64_t *)&v34);
  v18 = v35;
  v17 = v36;
  if (v35 == 0xD000000000000011 && v36 == 0x80000001C0330740 || (sub_1C0304A08() & 1) != 0)
  {

    v38 = v34;
    sub_1C0098780((uint64_t)&v38);
    swift_bridgeObjectRelease();

    return 1;
  }
  if (qword_1ED728298 != -1)
    swift_once();
  v20 = sub_1C0303B98();
  __swift_project_value_buffer(v20, (uint64_t)qword_1ED729610);
  v38 = v34;
  v21 = v37;
  v22 = a1;
  sub_1C0098758((uint64_t)&v38);
  swift_bridgeObjectRetain();
  v23 = v21;
  v24 = v22;
  sub_1C0098758((uint64_t)&v38);
  swift_bridgeObjectRetain();
  v25 = v23;
  v26 = sub_1C0303B80();
  v27 = sub_1C03042E8();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v33[0] = v32;
    *(_DWORD *)v28 = 136315394;
    v29 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727938);
    v30 = sub_1C0303EF8();
    sub_1C003E6D8(v30, v31, v33);
    sub_1C03044B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1C003E6D8(v18, v17, v33);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    sub_1C0098780((uint64_t)&v38);

    swift_bridgeObjectRelease();
    sub_1C0098780((uint64_t)&v38);

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v26, v27, "Skip ineligible InteractionDonation. biomeEvent=%s, intentClass=%s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v32, -1, -1);
    MEMORY[0x1C3B98378](v28, -1, -1);

    sub_1C0098780((uint64_t)&v38);
  }
  else
  {

    sub_1C0098780((uint64_t)&v38);
    swift_bridgeObjectRelease();
    sub_1C0098780((uint64_t)&v38);

    swift_bridgeObjectRelease();
    sub_1C0098780((uint64_t)&v38);

  }
  swift_bridgeObjectRelease();
  return 0;
}

id BiomeInteractionProcessor.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BiomeInteractionProcessor.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BiomeInteractionProcessor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_7_9();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C019E948()
{
  OUTLINED_FUNCTION_29_11();
}

uint64_t sub_1C019E954()
{
  return type metadata accessor for BiomeInteractionProcessor();
}

uint64_t type metadata accessor for BiomeInteractionProcessor()
{
  uint64_t result;

  result = qword_1ED725ED8;
  if (!qword_1ED725ED8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C019E994()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1C0301B70();
  if (v1 <= 0x3F)
  {
    result = sub_1C0301CFC();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for BiomeInteractionProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BiomeInteractionProcessor.__allocating_init(appIntentEvent:eventReceivedAt:databaseURL:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

unint64_t sub_1C019EA48()
{
  unint64_t result;

  result = qword_1ED727608;
  if (!qword_1ED727608)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED727608);
  }
  return result;
}

uint64_t sub_1C019EA84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v5;
  char v6;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;

  v11 = a1 + *(int *)(type metadata accessor for StitchedContactResolverRecommendation(0) + 20);
  v12 = *(_QWORD *)(v11 + 16);
  v13 = *(unsigned __int8 *)(v11 + 24);
  v40 = a3;
  v41 = a4;
  v39 = a2;
  if (!*(_BYTE *)(v11 + 24))
  {
    v37 = 0;
    v38 = 0;
    OUTLINED_FUNCTION_1_62();
    OUTLINED_FUNCTION_6_50();
    v31 = 1;
    goto LABEL_26;
  }
  v15 = *(_QWORD **)v11;
  v14 = *(_QWORD *)(v11 + 8);
  if (v13 != 1)
  {
    if (v13 == 2)
    {
      v16 = v15[2];
      if (v12)
      {
        v17 = sub_1C0173780(v14, v12, v15);
        v19 = v18;
        result = OUTLINED_FUNCTION_3_74();
        v21 = v16;
        if ((v19 & 1) != 0)
        {
          v24 = 0;
          v27 = 0;
          v29 = 0;
          v22 = 0;
          LOBYTE(v12) = 4;
          a4 = 5;
          v25 = 1;
          v28 = 3;
          a3 = 2;
          v6 = 1;
          v26 = 1;
          v30 = 1;
          v5 = 2;
          LOBYTE(a2) = 3;
          v31 = 3;
        }
        else
        {
          v22 = v17;
          if ((unint64_t)v17 < 3)
            v23 = 1;
          else
            v23 = 2;
          result = 5;
          v24 = 0;
          v25 = 0;
          v6 = 1;
          v26 = 1;
          a3 = 0;
          v27 = 0;
          if (v17 >= 1)
            v28 = v23;
          else
            v28 = 0;
          v29 = 0;
          v30 = 1;
          v5 = 2;
          a4 = 5;
          LOBYTE(a2) = 3;
          LOBYTE(v12) = 4;
          v31 = 3;
        }
        goto LABEL_27;
      }
      v36 = 0;
      v37 = v15[2];
      v38 = 0;
      LOBYTE(a2) = 3;
      a4 = 5;
      v5 = 2;
      v35 = 4;
      v6 = 1;
      a3 = 1;
      LOBYTE(v12) = 4;
      v31 = 3;
    }
    else
    {
      v37 = 0;
      v38 = 0;
      v31 = 0;
      LOBYTE(v12) = 4;
      v35 = 5;
      a3 = 3;
      v36 = 0x200000001;
      OUTLINED_FUNCTION_6_50();
    }
LABEL_26:
    result = OUTLINED_FUNCTION_3_74();
    v29 = 0;
    v22 = 0;
    v25 = 1;
    v26 = 1;
    v21 = v37;
    v27 = v38;
    v28 = v35;
    v24 = v36;
    v30 = BYTE4(v36);
    goto LABEL_27;
  }
  v38 = v15[2];
  if (!v12)
  {
    v6 = 0;
    v5 = 0;
    v37 = 0;
    a4 = 4;
    OUTLINED_FUNCTION_1_62();
    LOBYTE(a2) = 1;
    LOBYTE(v12) = 4;
    v31 = 2;
    goto LABEL_26;
  }
  v29 = sub_1C0173780(v14, v12, v15);
  v33 = v32;
  result = OUTLINED_FUNCTION_3_74();
  if ((v33 & 1) != 0)
  {
    v6 = 0;
    v29 = 0;
    v22 = 0;
    v21 = 0;
    LOBYTE(v12) = 4;
    v24 = 1;
    v30 = 2;
    v28 = 5;
    a3 = 3;
    v25 = 1;
    v26 = 1;
    v5 = 1;
    a4 = 3;
    LOBYTE(a2) = 2;
    v31 = 2;
  }
  else
  {
    if ((unint64_t)v29 < 3)
      v34 = 1;
    else
      v34 = 2;
    result = 5;
    v24 = 1;
    v25 = 1;
    v6 = 0;
    v26 = 0;
    a3 = 3;
    v28 = 5;
    v30 = 2;
    v5 = 1;
    if (v29 >= 1)
      a4 = v34;
    else
      a4 = 0;
    LOBYTE(a2) = 0;
    v22 = 0;
    v21 = 0;
    LOBYTE(v12) = 4;
    v31 = 2;
  }
  v27 = v38;
LABEL_27:
  *(_BYTE *)a5 = v31;
  *(_QWORD *)(a5 + 8) = v39;
  *(_BYTE *)(a5 + 16) = v40 & 1;
  *(_BYTE *)(a5 + 17) = v41 & 1;
  *(_BYTE *)(a5 + 18) = a2;
  *(_BYTE *)(a5 + 19) = a4;
  *(_BYTE *)(a5 + 20) = v5;
  *(_QWORD *)(a5 + 24) = v29;
  *(_BYTE *)(a5 + 32) = v26;
  *(_QWORD *)(a5 + 40) = v27;
  *(_BYTE *)(a5 + 48) = v6;
  *(_BYTE *)(a5 + 49) = a3;
  *(_BYTE *)(a5 + 50) = v28;
  *(_BYTE *)(a5 + 51) = v30;
  *(_QWORD *)(a5 + 56) = v22;
  *(_BYTE *)(a5 + 64) = v25;
  *(_QWORD *)(a5 + 72) = v21;
  *(_BYTE *)(a5 + 80) = v24;
  *(_BYTE *)(a5 + 81) = v12;
  return result;
}

uint64_t sub_1C019EDD0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StitchedContactResolverRecommendation(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *__swift_memcpy82_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x52uLL);
}

uint64_t sub_1C019EE14(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 82))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 17);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C019EE60(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 80) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 82) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 82) = 0;
    if (a2)
      *(_BYTE *)(result + 17) = a2 + 1;
  }
  return result;
}

void type metadata accessor for ContactResolverUserPromptMetrics()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C019EEC8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C019EF14 + 4 * byte_1C0314B85[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C019EF48 + 4 * byte_1C0314B80[v4]))();
}

uint64_t sub_1C019EF48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C019EF50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C019EF58);
  return result;
}

uint64_t sub_1C019EF64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C019EF6CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C019EF70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C019EF78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ContactResolverUserPromptMetrics.SelectionBucket()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C019EF90(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C019EFDC + 4 * byte_1C0314B8F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C019F010 + 4 * byte_1C0314B8A[v4]))();
}

uint64_t sub_1C019F010(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C019F018(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C019F020);
  return result;
}

uint64_t sub_1C019F02C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C019F034);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C019F038(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C019F040(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ContactResolverUserPromptMetrics.DisambiguationUserAction()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C019F058(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C019F0A4 + 4 * byte_1C0314B99[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C019F0D8 + 4 * byte_1C0314B94[v4]))();
}

uint64_t sub_1C019F0D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C019F0E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C019F0E8);
  return result;
}

uint64_t sub_1C019F0F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C019F0FCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C019F100(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C019F108(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ContactResolverUserPromptMetrics.RecommendationType()
{
  OUTLINED_FUNCTION_17_2();
}

void sub_1C019F120()
{
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_10_2();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C019F158(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C019F198 + 4 * byte_1C0314B9E[a1]))(0x656C65736F747561, 0xED00006E6F697463);
}

uint64_t sub_1C019F198()
{
  return 0x616D7269666E6F63;
}

unint64_t sub_1C019F1B8()
{
  return 0xD000000000000015;
}

unint64_t sub_1C019F1D8()
{
  return 0xD000000000000014;
}

void sub_1C019F1F4()
{
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_10_2();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C019F22C(char a1)
{
  uint64_t result;

  result = 0x64657463656C6573;
  if (a1 == 1)
    return 0x656E6F646E616261;
  return result;
}

void sub_1C019F288()
{
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_10_2();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C019F2C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C019F2F0 + 4 * byte_1C0314BA2[a1]))(0x7473726966, 0xE500000000000000);
}

uint64_t sub_1C019F2F0()
{
  return 0x327478656ELL;
}

uint64_t sub_1C019F300()
{
  return 0x337265766FLL;
}

uint64_t sub_1C019F310()
{
  return 0x64657463656C6573;
}

uint64_t sub_1C019F334()
{
  return 0x656E6F646E616261;
}

void sub_1C019F350(char *a1)
{
  sub_1C025CD1C(*a1);
}

void sub_1C019F35C()
{
  unsigned __int8 *v0;

  sub_1C00CEA4C(*v0);
}

void sub_1C019F364(uint64_t a1)
{
  char *v1;

  sub_1C00C17A4(a1, *v1);
}

void sub_1C019F36C(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EB334(a1, *v1);
}

void sub_1C019F374(_BYTE *a1@<X8>)
{
  char v2;

  sub_1C019F120();
  *a1 = v2;
}

void sub_1C019F3A0(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_1C019F158(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C019F3C4()
{
  unsigned __int8 *v0;

  return sub_1C019F158(*v0);
}

unint64_t sub_1C019F3D0()
{
  unint64_t result;

  result = qword_1EF5BEC48;
  if (!qword_1EF5BEC48)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0314CBC, &unk_1E799AF78);
    atomic_store(result, (unint64_t *)&qword_1EF5BEC48);
  }
  return result;
}

void sub_1C019F40C()
{
  sub_1C025CF68();
}

void sub_1C019F418()
{
  sub_1C00CEA58();
}

uint64_t sub_1C019F420()
{
  return sub_1C00C18C0();
}

void sub_1C019F428()
{
  sub_1C02EB298();
}

void sub_1C019F430(_BYTE *a1@<X8>)
{
  char v2;

  sub_1C019F1F4();
  *a1 = v2;
}

void sub_1C019F45C(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;

  *a1 = sub_1C019F22C(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C019F480()
{
  char *v0;

  return sub_1C019F22C(*v0);
}

unint64_t sub_1C019F48C()
{
  unint64_t result;

  result = qword_1EF5BEC50;
  if (!qword_1EF5BEC50)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0314D6C, &unk_1E799AEE8);
    atomic_store(result, (unint64_t *)&qword_1EF5BEC50);
  }
  return result;
}

void sub_1C019F4C8(char *a1)
{
  sub_1C025CE58(*a1);
}

void sub_1C019F4D4()
{
  unsigned __int8 *v0;

  sub_1C00CEA64(*v0);
}

void sub_1C019F4DC(uint64_t a1)
{
  char *v1;

  sub_1C00C1830(a1, *v1);
}

void sub_1C019F4E4(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EB328(a1, *v1);
}

void sub_1C019F4EC(_BYTE *a1@<X8>)
{
  char v2;

  sub_1C019F288();
  *a1 = v2;
}

void sub_1C019F518(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_1C019F2C0(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C019F53C()
{
  unsigned __int8 *v0;

  return sub_1C019F2C0(*v0);
}

unint64_t sub_1C019F548()
{
  unint64_t result;

  result = qword_1EF5BEC58;
  if (!qword_1EF5BEC58)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0314E1C, &unk_1E799AE58);
    atomic_store(result, (unint64_t *)&qword_1EF5BEC58);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_74()
{
  uint64_t v0;

  return sub_1C019EDD0(v0);
}

uint64_t sub_1C019F5B8()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[7];
  char v34;
  int v35;
  char v36;
  __int16 v37;
  char v38;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B87E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = 0;
  *(_BYTE *)(inited + 48) = 2;
  type metadata accessor for DateTime.Date();
  v1 = OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_3_75(v1, v2, v3, v4, v5, v6, v7, v8, v29, *(int *)v33, *(__int16 *)&v33[4], v33[6], 0);
  type metadata accessor for DateTime.Time();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_1_63();
  DateTime.Time.init(withHour:minute:second:meridiem:definedValue:occurringIn:setByUser:)(0, 0, 0, 0, 0, 0, v9, v10, v30, v34);
  type metadata accessor for DateTime();
  OUTLINED_FUNCTION_16_0();
  v11 = OUTLINED_FUNCTION_2_63();
  DateTime.init(withDate:time:)(v11, v12);
  v13 = OUTLINED_FUNCTION_16_0();
  v21 = OUTLINED_FUNCTION_3_75(v13, v14, v15, v16, v17, v18, v19, v20, v31, v35, v37, v38, 4);
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_1_63();
  v24 = DateTime.Time.init(withHour:minute:second:meridiem:definedValue:occurringIn:setByUser:)(11, 0, 59, 0, 59, 0, v22, v23, v32, v36);
  OUTLINED_FUNCTION_16_0();
  DateTime.init(withDate:time:)(v21, v24);
  type metadata accessor for DateTime.DateTimeRange();
  OUTLINED_FUNCTION_16_0();
  v25 = OUTLINED_FUNCTION_2_63();
  v27 = DateTime.DateTimeRange.init(withStartDateTime:endDateTime:)(v25, v26);
  OUTLINED_FUNCTION_16_0();
  *(_QWORD *)(inited + 56) = DateTime.init(occurringIn:)(v27);
  sub_1C0099A4C();
  return sub_1C0303DB4();
}

uint64_t OUTLINED_FUNCTION_2_63()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_3_75(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  return DateTime.Date.init(withDayOfWeek:)(&a13);
}

uint64_t sub_1C019F7B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  unint64_t v35;
  void (*v36)(char *, uint64_t);
  uint8_t *v37;
  uint8_t *v38;
  uint64_t v39;
  os_log_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45[2];

  v41 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728340);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C0301B70();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v37 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v37 - v16;
  sub_1C019FD10(a1, a2, (uint64_t)v7);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1)
  {
    sub_1C0056C9C((uint64_t)v7, &qword_1ED728340);
    if (qword_1EF5B7F18 != -1)
      swift_once();
    v18 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EF5FC6E0);
    v19 = sub_1C0303B80();
    v20 = sub_1C03042E8();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_1C0039000, v19, v20, "AppSelectionModelManaging#model: No Trial override, using default model", v21, 2u);
      OUTLINED_FUNCTION_5();
    }

    return OUTLINED_FUNCTION_1_64();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v7, v8);
    v23 = sub_1C019FCC8();
    (*(void (**)(__int128 *__return_ptr, char *, id, uint64_t, uint64_t))(a2 + 32))(&v43, v17, v23, a1, a2);

    if (v44)
    {
      sub_1C004CD5C(&v43, (uint64_t)v45);
      if (qword_1EF5B7F18 != -1)
        swift_once();
      v24 = OUTLINED_FUNCTION_9_0();
      __swift_project_value_buffer(v24, (uint64_t)qword_1EF5FC6E0);
      OUTLINED_FUNCTION_6_51((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
      v25 = sub_1C0303B80();
      v26 = sub_1C03042E8();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = OUTLINED_FUNCTION_4_0();
        *(_QWORD *)&v43 = OUTLINED_FUNCTION_4_0();
        *(_DWORD *)v27 = 136446210;
        v40 = (os_log_t)(v27 + 4);
        sub_1C00A2298();
        v28 = sub_1C03049E4();
        v42 = sub_1C003E6D8(v28, v29, (uint64_t *)&v43);
        sub_1C03044B0();
        OUTLINED_FUNCTION_14();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
        _os_log_impl(&dword_1C0039000, v25, v26, "AppSelectionModelManaging#model: Loaded model from Trial-override; %{public}s",
          (uint8_t *)v27,
          0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_5();
      }

      v36 = *(void (**)(char *, uint64_t))(v9 + 8);
      v36(v15, v8);
      v36(v17, v8);
      return sub_1C004CD5C(v45, v41);
    }
    else
    {
      sub_1C0056C9C((uint64_t)&v43, &qword_1EF5B9B68);
      if (qword_1EF5B7F18 != -1)
        swift_once();
      v30 = OUTLINED_FUNCTION_9_0();
      __swift_project_value_buffer(v30, (uint64_t)qword_1EF5FC6E0);
      OUTLINED_FUNCTION_6_51((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
      v31 = sub_1C0303B80();
      v32 = sub_1C03042F4();
      if (os_log_type_enabled(v31, v32))
      {
        v40 = v31;
        v33 = (uint8_t *)OUTLINED_FUNCTION_4_0();
        v39 = OUTLINED_FUNCTION_4_0();
        *(_QWORD *)&v45[0] = v39;
        v38 = v33;
        *(_DWORD *)v33 = 136446210;
        v37 = v33 + 4;
        sub_1C00A2298();
        v34 = sub_1C03049E4();
        *(_QWORD *)&v43 = sub_1C003E6D8(v34, v35, (uint64_t *)v45);
        sub_1C03044B0();
        OUTLINED_FUNCTION_14();
        OUTLINED_FUNCTION_3_76();
        _os_log_impl(&dword_1C0039000, v40, v32, "AppSelectionModelManaging#model: Failed to load Trial-overridden model from %{public}s, reverting to default model", v38, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_5();
      }
      OUTLINED_FUNCTION_3_76();

      OUTLINED_FUNCTION_1_64();
      return ((uint64_t (*)(char *, uint64_t))v15)(v17, v8);
    }
  }
}

id sub_1C019FCC8()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E958]), sel_init);
  objc_msgSend(v0, sel_setComputeUnits_, 0);
  return v0;
}

void sub_1C019FD10(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;

  (*(void (**)(void))(a2 + 8))();
  v6 = sub_1C0150F18();
  swift_release();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  sub_1C00A9B48(v7, v8, v6);
  v11 = v9;
  OUTLINED_FUNCTION_14();
  swift_bridgeObjectRelease();
  if (v11)
  {
    sub_1C0150E70(a3);

  }
  else
  {
    v10 = sub_1C0301B70();
    __swift_storeEnumTagSinglePayload(a3, 1, 1, v10);
  }
}

uint64_t OUTLINED_FUNCTION_1_64()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 24))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_3_76()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_6_51@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t sub_1C019FE18()
{
  uint64_t inited;
  uint64_t v1;
  char v3;
  char v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B87E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = 0;
  *(_BYTE *)(inited + 48) = 2;
  v4 = 0;
  v3 = 1;
  type metadata accessor for DateTime();
  swift_allocObject();
  DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(6, 0, 0, &v4, 9, 0, 0, &v3);
  *(_QWORD *)(inited + 56) = v1;
  sub_1C0099A4C();
  return sub_1C0303DB4();
}

uint64_t sub_1C019FEDC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  char v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BEC60);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C0302F2C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v15 - v10;
  sub_1C0302C2C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    result = sub_1C01A0170((uint64_t)v4);
    v13 = 12;
  }
  else
  {
    v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v14(v11, v4, v5);
    v14(v9, v11, v5);
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
    if ((_DWORD)result == *MEMORY[0x1E0DA1880])
    {
      v13 = 3;
    }
    else if ((_DWORD)result == *MEMORY[0x1E0DA18A8])
    {
      v13 = 11;
    }
    else
    {
      if ((_DWORD)result == *MEMORY[0x1E0DA1898])
      {
        *a1 = 0;
        return result;
      }
      if ((_DWORD)result == *MEMORY[0x1E0DA18B8])
      {
        v13 = 10;
      }
      else if ((_DWORD)result == *MEMORY[0x1E0DA1878])
      {
        v13 = 5;
      }
      else if ((_DWORD)result == *MEMORY[0x1E0DA18B0])
      {
        v13 = 1;
      }
      else if ((_DWORD)result == *MEMORY[0x1E0DA1860])
      {
        v13 = 8;
      }
      else if ((_DWORD)result == *MEMORY[0x1E0DA1888])
      {
        v13 = 2;
      }
      else if ((_DWORD)result == *MEMORY[0x1E0DA1870])
      {
        v13 = 6;
      }
      else if ((_DWORD)result == *MEMORY[0x1E0DA1868])
      {
        v13 = 4;
      }
      else if ((_DWORD)result == *MEMORY[0x1E0DA1890])
      {
        v13 = 7;
      }
      else
      {
        if ((_DWORD)result != *MEMORY[0x1E0DA18A0])
        {
          *a1 = 12;
          return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
        }
        v13 = 9;
      }
    }
  }
  *a1 = v13;
  return result;
}

uint64_t sub_1C01A0170(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BEC60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C01A01B0(void (*a1)(void))
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;
  _BYTE *v7;

  if (qword_1ED728430 != -1)
    swift_once();
  v2 = sub_1C0303B98();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED729650);
  v3 = sub_1C0303B80();
  v4 = sub_1C03042F4();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1C0039000, v3, v4, "XPC connection interrupted", v5, 2u);
    MEMORY[0x1C3B98378](v5, -1, -1);
  }

  sub_1C01A05E4();
  v6 = (void *)swift_allocError();
  *v7 = 0;
  a1();

}

void sub_1C01A02BC()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_1ED728430 != -1)
    swift_once();
  v0 = sub_1C0303B98();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED729650);
  oslog = sub_1C0303B80();
  v1 = sub_1C03042F4();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_1C0039000, oslog, v1, "XPC connection invalidated", v2, 2u);
    MEMORY[0x1C3B98378](v2, -1, -1);
  }

}

SiriInference::XPCError_optional __swiftcall XPCError.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (SiriInference::XPCError_optional)rawValue;
}

uint64_t XPCError.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1C01A03B0()
{
  unint64_t result;

  result = qword_1EF5BEC68;
  if (!qword_1EF5BEC68)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for XPCError, &type metadata for XPCError);
    atomic_store(result, (unint64_t *)&qword_1EF5BEC68);
  }
  return result;
}

SiriInference::XPCError_optional sub_1C01A03EC(Swift::Int *a1)
{
  return XPCError.init(rawValue:)(*a1);
}

uint64_t sub_1C01A03F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = XPCError.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C01A0418()
{
  sub_1C01A0528();
  sub_1C01A0564();
  return sub_1C0304AC8();
}

uint64_t storeEnumTagSinglePayload for XPCError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C01A04A8 + 4 * byte_1C0314E75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C01A04DC + 4 * asc_1C0314E70[v4]))();
}

uint64_t sub_1C01A04DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C01A04E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C01A04ECLL);
  return result;
}

uint64_t sub_1C01A04F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C01A0500);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C01A0504(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C01A050C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCError()
{
  return &type metadata for XPCError;
}

unint64_t sub_1C01A0528()
{
  unint64_t result;

  result = qword_1EF5BEC70;
  if (!qword_1EF5BEC70)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for XPCError, &type metadata for XPCError);
    atomic_store(result, (unint64_t *)&qword_1EF5BEC70);
  }
  return result;
}

unint64_t sub_1C01A0564()
{
  unint64_t result;

  result = qword_1EF5BEC78;
  if (!qword_1EF5BEC78)
  {
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0DEB470], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1EF5BEC78);
  }
  return result;
}

uint64_t sub_1C01A05A0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C01A05C4()
{
  uint64_t v0;

  sub_1C01A01B0(*(void (**)(void))(v0 + 16));
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

unint64_t sub_1C01A05E4()
{
  unint64_t result;

  result = qword_1EF5BEC90;
  if (!qword_1EF5BEC90)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for XPCError, &type metadata for XPCError);
    atomic_store(result, (unint64_t *)&qword_1EF5BEC90);
  }
  return result;
}

id OUTLINED_FUNCTION_0_75(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

void *OUTLINED_FUNCTION_1_65(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char aBlock)
{
  return _Block_copy(&aBlock);
}

uint64_t OUTLINED_FUNCTION_2_64()
{
  return swift_retain();
}

uint64_t sub_1C01A065C(_QWORD *a1)
{
  uint64_t v1;
  id v2;
  _QWORD *v3;

  if (!a1)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 112);
    type metadata accessor for TrialManager();
    v3 = (_QWORD *)swift_allocObject();
    a1 = sub_1C008CF1C((uint64_t)v2, 0xD000000000000032, 0x80000001C032D730, v3);
  }
  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

id sub_1C01A06E0()
{
  return sub_1C008E4B0(0x7031737961776C61, 0xE800000000000000);
}

id sub_1C01A06F8()
{
  return sub_1C008E4B0(0x65646F4D73616573, 0xE90000000000006CLL);
}

id sub_1C01A0714()
{
  return sub_1C008E4B0(0xD000000000000012, 0x80000001C03307C0);
}

id OUTLINED_FUNCTION_0_76(uint64_t a1, uint64_t a2)
{
  return sub_1C008E4B0(a1, a2 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000);
}

void DateTime.Date.__allocating_init(withDay:month:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_66();
  v0 = OUTLINED_FUNCTION_17_29();
  DateTime.Date.init(withDay:month:)(v0, v1);
  OUTLINED_FUNCTION_37_0();
}

void DateTime.Date.__allocating_init(withHoliday:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_66();
  v0 = OUTLINED_FUNCTION_23_23();
  DateTime.Date.init(withHoliday:)(v0);
  OUTLINED_FUNCTION_9();
}

void DateTime.Date.__allocating_init(withDayOfWeek:)()
{
  _BYTE *v0;

  OUTLINED_FUNCTION_1_66();
  v0 = (_BYTE *)OUTLINED_FUNCTION_23_23();
  DateTime.Date.init(withDayOfWeek:)(v0);
  OUTLINED_FUNCTION_9();
}

void DateTime.Date.__allocating_init(withDay:month:year:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_66();
  v0 = OUTLINED_FUNCTION_48();
  DateTime.Date.init(withDay:month:year:)(v0, v1, v2);
  OUTLINED_FUNCTION_37_0();
}

uint64_t DateTime.Date.__allocating_init(withDay:month:year:definedValue:holiday:monthOfYear:weekOfYear:dayOfWeek:dayOfWeekOrdinal:calendarEra:occurringIn:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, uint64_t a8, char *a9, uint64_t a10, uint64_t a11, char *a12, uint64_t a13, uint64_t a14, char *a15, uint64_t a16)
{
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;

  OUTLINED_FUNCTION_32_22();
  v20 = v19 & 1;
  v22 = v21 & 1;
  v23 = OUTLINED_FUNCTION_1_66();
  DateTime.Date.init(withDay:month:year:definedValue:holiday:monthOfYear:weekOfYear:dayOfWeek:dayOfWeekOrdinal:calendarEra:occurringIn:)(a1, v16, a3, v17, a5, v18, a7, a8, a9, a10, v20, a12, a13, v22, a15, a16);
  return v23;
}

void static DateTime.Date.> infix(_:_:)()
{
  OUTLINED_FUNCTION_24_19();
  static DateTime.Date.<= infix(_:_:)();
  OUTLINED_FUNCTION_9();
}

uint64_t DateTime.Date.day.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t DateTime.Date.month.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t DateTime.Date.year.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

void DateTime.Date.definedValue.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_8_20(a1);
}

uint64_t DateTime.Date.holiday.getter()
{
  return swift_retain();
}

void DateTime.Date.monthOfYear.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_8_20(a1);
}

uint64_t DateTime.Date.weekOfYear.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

void DateTime.Date.dayOfWeek.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_8_20(a1);
}

uint64_t DateTime.Date.dayOfWeekOrdinal.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

void DateTime.Date.calendarEra.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_8_20(a1);
}

uint64_t DateTime.Date.occurringIn.getter()
{
  return swift_retain();
}

uint64_t sub_1C01A0938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B88D0);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_6_0();
  v3 = v2 - v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B88D8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_6_0();
  v7 = v6 - v5;
  v8 = sub_1C0301EC4();
  OUTLINED_FUNCTION_22_0(v7, v9, v10, v8);
  v11 = sub_1C0301F00();
  OUTLINED_FUNCTION_22_0(v3, v12, v13, v11);
  sub_1C0301918();
  sub_1C0301888();
  sub_1C03018A0();
  sub_1C0301834();
  sub_1C030190C();
  return sub_1C03017EC();
}

void DateTime.Date.__allocating_init(withDay:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_66();
  v0 = OUTLINED_FUNCTION_23_23();
  DateTime.Date.init(withDay:)(v0);
  OUTLINED_FUNCTION_9();
}

uint64_t DateTime.Date.init(withDay:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  *(_BYTE *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 40) = 1;
  *(_QWORD *)(v1 + 48) = 0;
  *(_WORD *)(v1 + 56) = 1793;
  *(_QWORD *)(v1 + 64) = 0;
  *(_BYTE *)(v1 + 72) = 12;
  *(_QWORD *)(v1 + 80) = 0;
  return OUTLINED_FUNCTION_0_77(1793);
}

uint64_t DateTime.Date.init(withDay:month:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_BYTE *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = a2;
  *(_BYTE *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  *(_WORD *)(v2 + 56) = 1793;
  *(_QWORD *)(v2 + 64) = 0;
  *(_BYTE *)(v2 + 72) = 12;
  *(_QWORD *)(v2 + 80) = 0;
  return OUTLINED_FUNCTION_0_77(1793);
}

void DateTime.Date.__allocating_init(withDay:monthOfYear:)()
{
  uint64_t v0;
  char *v1;

  OUTLINED_FUNCTION_1_66();
  v0 = OUTLINED_FUNCTION_17_29();
  DateTime.Date.init(withDay:monthOfYear:)(v0, v1);
  OUTLINED_FUNCTION_37_0();
}

uint64_t DateTime.Date.init(withDay:monthOfYear:)(uint64_t a1, char *a2)
{
  uint64_t v2;
  char v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 16) = a1;
  *(_BYTE *)(v2 + 24) = 0;
  *(_BYTE *)(v2 + 72) = v3;
  *(_QWORD *)(v2 + 48) = 0;
  *(_WORD *)(v2 + 56) = 1793;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 32) = 0;
  *(_BYTE *)(v2 + 40) = 1;
  *(_QWORD *)(v2 + 80) = 0;
  return OUTLINED_FUNCTION_0_77(1793);
}

void DateTime.Date.__allocating_init(withDay:monthOfYear:year:)()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_66();
  v0 = OUTLINED_FUNCTION_48();
  DateTime.Date.init(withDay:monthOfYear:year:)(v0, v1, v2);
  OUTLINED_FUNCTION_37_0();
}

uint64_t DateTime.Date.init(withDay:monthOfYear:year:)(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  v4 = *a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_BYTE *)(v3 + 24) = 0;
  *(_BYTE *)(v3 + 72) = v4;
  *(_QWORD *)(v3 + 48) = a3;
  *(_WORD *)(v3 + 56) = 1792;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *(_BYTE *)(v3 + 40) = 1;
  *(_QWORD *)(v3 + 80) = 0;
  return OUTLINED_FUNCTION_0_77(1793);
}

void DateTime.Date.__allocating_init(withYear:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_66();
  v0 = OUTLINED_FUNCTION_23_23();
  DateTime.Date.init(withYear:)(v0);
  OUTLINED_FUNCTION_9();
}

uint64_t DateTime.Date.init(withYear:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  *(_WORD *)(v1 + 56) = 1792;
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  *(_BYTE *)(v1 + 72) = 12;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 40) = 1;
  *(_QWORD *)(v1 + 80) = 0;
  return OUTLINED_FUNCTION_0_77(1793);
}

void DateTime.Date.__allocating_init(withMonth:year:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_66();
  v0 = OUTLINED_FUNCTION_17_29();
  DateTime.Date.init(withMonth:year:)(v0, v1);
  OUTLINED_FUNCTION_37_0();
}

uint64_t DateTime.Date.init(withMonth:year:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_BYTE *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 48) = a2;
  *(_WORD *)(v2 + 56) = 1792;
  *(_QWORD *)(v2 + 16) = 0;
  *(_BYTE *)(v2 + 24) = 1;
  *(_QWORD *)(v2 + 64) = 0;
  *(_BYTE *)(v2 + 72) = 12;
  *(_QWORD *)(v2 + 80) = 0;
  return OUTLINED_FUNCTION_0_77(1793);
}

void DateTime.Date.__allocating_init(withDefinedValue:)()
{
  _BYTE *v0;

  OUTLINED_FUNCTION_1_66();
  v0 = (_BYTE *)OUTLINED_FUNCTION_23_23();
  DateTime.Date.init(withDefinedValue:)(v0);
  OUTLINED_FUNCTION_9();
}

uint64_t DateTime.Date.init(withDefinedValue:)(_BYTE *a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 57) = *a1;
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 40) = 1;
  *(_QWORD *)(v1 + 48) = 0;
  *(_BYTE *)(v1 + 56) = 1;
  *(_QWORD *)(v1 + 64) = 0;
  *(_BYTE *)(v1 + 72) = 12;
  *(_QWORD *)(v1 + 80) = 0;
  return OUTLINED_FUNCTION_0_77(1793);
}

uint64_t DateTime.Date.init(withHoliday:)(uint64_t a1)
{
  uint64_t v1;
  __int16 v2;

  *(_QWORD *)(v1 + 64) = a1;
  OUTLINED_FUNCTION_33_18();
  *(_BYTE *)(v1 + 72) = 12;
  *(_QWORD *)(v1 + 80) = 0;
  return OUTLINED_FUNCTION_0_77(v2);
}

uint64_t DateTime.Date.init(withDayOfWeek:)(_BYTE *a1)
{
  uint64_t v1;
  char v2;
  __int16 v3;

  *(_BYTE *)(v1 + 89) = *a1;
  OUTLINED_FUNCTION_27_24();
  *(_BYTE *)(v1 + 72) = 12;
  *(_QWORD *)(v1 + 80) = 0;
  *(_BYTE *)(v1 + 88) = v2;
  *(_QWORD *)(v1 + 96) = 0;
  *(_WORD *)(v1 + 104) = v3;
  return OUTLINED_FUNCTION_3_77();
}

void DateTime.Date.__allocating_init(withDayOfWeek:dayOfWeekOrdinal:)()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_66();
  v0 = (_BYTE *)OUTLINED_FUNCTION_17_29();
  DateTime.Date.init(withDayOfWeek:dayOfWeekOrdinal:)(v0, v1);
  OUTLINED_FUNCTION_37_0();
}

uint64_t DateTime.Date.init(withDayOfWeek:dayOfWeekOrdinal:)(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;
  char v3;

  *(_BYTE *)(v2 + 89) = *a1;
  *(_QWORD *)(v2 + 96) = a2;
  *(_WORD *)(v2 + 104) = 1792;
  OUTLINED_FUNCTION_27_24();
  *(_BYTE *)(v2 + 72) = 12;
  *(_QWORD *)(v2 + 80) = 0;
  *(_BYTE *)(v2 + 88) = v3;
  return OUTLINED_FUNCTION_3_77();
}

void DateTime.Date.__allocating_init(withMonthOfYear:)()
{
  _BYTE *v0;

  OUTLINED_FUNCTION_1_66();
  v0 = (_BYTE *)OUTLINED_FUNCTION_23_23();
  DateTime.Date.init(withMonthOfYear:)(v0);
  OUTLINED_FUNCTION_9();
}

uint64_t DateTime.Date.init(withMonthOfYear:)(_BYTE *a1)
{
  uint64_t v1;
  __int16 v2;

  *(_BYTE *)(v1 + 72) = *a1;
  OUTLINED_FUNCTION_33_18();
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 80) = 0;
  return OUTLINED_FUNCTION_0_77(v2);
}

void DateTime.Date.__allocating_init(withMonthOfYear:year:)()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_66();
  v0 = (_BYTE *)OUTLINED_FUNCTION_17_29();
  DateTime.Date.init(withMonthOfYear:year:)(v0, v1);
  OUTLINED_FUNCTION_37_0();
}

uint64_t DateTime.Date.init(withMonthOfYear:year:)(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 72) = *a1;
  *(_QWORD *)(v2 + 48) = a2;
  *(_WORD *)(v2 + 56) = 1792;
  *(_QWORD *)(v2 + 16) = 0;
  *(_BYTE *)(v2 + 24) = 1;
  *(_QWORD *)(v2 + 32) = 0;
  *(_BYTE *)(v2 + 40) = 1;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 80) = 0;
  return OUTLINED_FUNCTION_0_77(1793);
}

uint64_t DateTime.Date.__allocating_init(withDay:month:year:definedValue:holiday:monthOfYear:weekOfYear:dayOfWeek:dayOfWeekOrdinal:calendarEra:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, uint64_t a8, char *a9, uint64_t a10, uint64_t a11, char *a12, uint64_t a13, uint64_t a14, char *a15)
{
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;

  OUTLINED_FUNCTION_32_22();
  v19 = v18 & 1;
  v21 = v20 & 1;
  v22 = OUTLINED_FUNCTION_1_66();
  DateTime.Date.init(withDay:month:year:definedValue:holiday:monthOfYear:weekOfYear:dayOfWeek:dayOfWeekOrdinal:calendarEra:)(a1, v15, a3, v16, a5, v17, a7, a8, a9, a10, v19, a12, a13, v21, a15);
  return v22;
}

uint64_t DateTime.Date.init(withDay:month:year:definedValue:holiday:monthOfYear:weekOfYear:dayOfWeek:dayOfWeekOrdinal:calendarEra:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6, char *a7, uint64_t a8, char *a9, uint64_t a10, char a11, char *a12, uint64_t a13, char a14, char *a15)
{
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char v19;

  v16 = *a7;
  v17 = *a9;
  v18 = *a12;
  v19 = *a15;
  *(_QWORD *)(v15 + 16) = a1;
  *(_BYTE *)(v15 + 24) = a2 & 1;
  *(_QWORD *)(v15 + 32) = a3;
  *(_BYTE *)(v15 + 40) = a4 & 1;
  *(_QWORD *)(v15 + 48) = a5;
  *(_BYTE *)(v15 + 56) = a6 & 1;
  *(_BYTE *)(v15 + 57) = v16;
  *(_QWORD *)(v15 + 64) = a8;
  *(_BYTE *)(v15 + 72) = v17;
  *(_QWORD *)(v15 + 80) = a10;
  *(_BYTE *)(v15 + 88) = a11 & 1;
  *(_BYTE *)(v15 + 89) = v18;
  *(_QWORD *)(v15 + 96) = a13;
  *(_BYTE *)(v15 + 104) = a14 & 1;
  *(_BYTE *)(v15 + 105) = v19;
  return OUTLINED_FUNCTION_3_77();
}

uint64_t sub_1C01A0FE4()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 40) == 1)
  {
    OUTLINED_FUNCTION_62();
  }
  else
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_16_31();
  }
  if (*(_BYTE *)(v0 + 24) == 1)
  {
    OUTLINED_FUNCTION_62();
  }
  else
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_16_31();
  }
  if (*(_BYTE *)(v0 + 56) == 1)
  {
    OUTLINED_FUNCTION_62();
  }
  else
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_16_31();
  }
  if (*(_BYTE *)(v0 + 88) == 1)
  {
    OUTLINED_FUNCTION_62();
  }
  else
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_16_31();
  }
  if (*(_BYTE *)(v0 + 105) == 7)
  {
    OUTLINED_FUNCTION_62();
  }
  else
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_16_31();
  }
  if (*(_BYTE *)(v0 + 89) == 7)
  {
    OUTLINED_FUNCTION_62();
  }
  else
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_16_31();
  }
  if (*(_BYTE *)(v0 + 104) == 1)
  {
    OUTLINED_FUNCTION_62();
  }
  else
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_16_31();
  }
  if (*(_BYTE *)(v0 + 72) == 12)
  {
    OUTLINED_FUNCTION_62();
  }
  else
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_16_31();
  }
  if (*(_BYTE *)(v0 + 57) == 7)
  {
    OUTLINED_FUNCTION_62();
  }
  else
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_16_31();
  }
  if (*(_QWORD *)(v0 + 64))
  {
    OUTLINED_FUNCTION_62();
    swift_retain();
    sub_1C014488C();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_62();
  }
  if (!*(_QWORD *)(v0 + 112))
    return OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_44_7();
  sub_1C0256BE0();
  return swift_release();
}

void static DateTime.Date.<= infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_24_19();
  if (!OUTLINED_FUNCTION_40_18())
    static DateTime.Date.== infix(_:_:)(v1, v0);
  OUTLINED_FUNCTION_9();
}

void static DateTime.Date.>= infix(_:_:)()
{
  OUTLINED_FUNCTION_24_19();
  OUTLINED_FUNCTION_40_18();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C01A1234(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  char v15;

  v2 = a1 == 7954788 && a2 == 0xE300000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x68746E6F6DLL && a2 == 0xE500000000000000;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1918985593 && a2 == 0xE400000000000000;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x5664656E69666564 && a2 == 0xEC00000065756C61;
        if (v8 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x796164696C6F68 && a2 == 0xE700000000000000;
          if (v9 || (sub_1C0304A08() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x59664F68746E6F6DLL && a2 == 0xEB00000000726165;
            if (v10 || (sub_1C0304A08() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x6559664F6B656577 && a2 == 0xEA00000000007261;
              if (v11 || (sub_1C0304A08() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x656557664F796164 && a2 == 0xE90000000000006BLL;
                if (v12 || (sub_1C0304A08() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 0xD000000000000010 && a2 == 0x80000001C0330850 || (sub_1C0304A08() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  v13 = a1 == 0x7261646E656C6163 && a2 == 0xEB00000000617245;
                  if (v13 || (sub_1C0304A08() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 9;
                  }
                  else if (a1 == 0x6E6972727563636FLL && a2 == 0xEB000000006E4967)
                  {
                    swift_bridgeObjectRelease();
                    return 10;
                  }
                  else
                  {
                    v15 = sub_1C0304A08();
                    swift_bridgeObjectRelease();
                    if ((v15 & 1) != 0)
                      return 10;
                    else
                      return 11;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C01A16CC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C01A16F8 + 4 * byte_1C0314FC0[a1]))(7954788, 0xE300000000000000);
}

uint64_t sub_1C01A16F8()
{
  return 0x68746E6F6DLL;
}

uint64_t sub_1C01A170C()
{
  return 1918985593;
}

uint64_t sub_1C01A171C()
{
  return 0x5664656E69666564;
}

uint64_t sub_1C01A173C()
{
  return 0x796164696C6F68;
}

uint64_t sub_1C01A1754()
{
  return 0x59664F68746E6F6DLL;
}

uint64_t sub_1C01A1774()
{
  return 0x6559664F6B656577;
}

uint64_t sub_1C01A1790()
{
  return 0x656557664F796164;
}

uint64_t sub_1C01A17AC()
{
  return 0x7261646E656C6163;
}

uint64_t sub_1C01A17CC()
{
  return 0x6E6972727563636FLL;
}

unint64_t sub_1C01A17EC()
{
  return 0xD000000000000010;
}

uint64_t sub_1C01A1808()
{
  unsigned __int8 *v0;

  return sub_1C01A16CC(*v0);
}

uint64_t sub_1C01A1810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C01A1234(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C01A1834()
{
  sub_1C01A2044();
  return sub_1C0304BAC();
}

uint64_t sub_1C01A185C()
{
  sub_1C01A2044();
  return sub_1C0304BB8();
}

uint64_t sub_1C01A1884(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BED68);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_6_0();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01A2044();
  sub_1C0304BA0();
  OUTLINED_FUNCTION_8_40();
  if (!v1)
  {
    OUTLINED_FUNCTION_8_40();
    OUTLINED_FUNCTION_8_40();
    sub_1C01A2080();
    OUTLINED_FUNCTION_9_46();
    type metadata accessor for DateTime.Date.Holiday();
    OUTLINED_FUNCTION_29_24(&qword_1EF5BED80, v8, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.Date.Holiday, (uint64_t)&protocol conformance descriptor for DateTime.Date.Holiday);
    OUTLINED_FUNCTION_14_40();
    sub_1C01A20BC();
    OUTLINED_FUNCTION_9_46();
    OUTLINED_FUNCTION_8_40();
    sub_1C01A20F8();
    OUTLINED_FUNCTION_9_46();
    OUTLINED_FUNCTION_8_40();
    sub_1C01A2134();
    OUTLINED_FUNCTION_9_46();
    type metadata accessor for DateTime.DateTimeRange();
    OUTLINED_FUNCTION_29_24(&qword_1EF5B9478, v9, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.DateTimeRange, (uint64_t)&protocol conformance descriptor for DateTime.DateTimeRange);
    OUTLINED_FUNCTION_14_40();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1C01A1B2C()
{
  sub_1C0304B04();
  sub_1C01A0FE4();
  return sub_1C0304B40();
}

uint64_t DateTime.Date.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DateTime.Date.init(from:)(a1);
  return v2;
}

uint64_t DateTime.Date.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BEDA0);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_6_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01A2044();
  sub_1C0304B88();
  if (v2)
  {
    type metadata accessor for DateTime.Date();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v1 + 16) = OUTLINED_FUNCTION_7_53();
    *(_BYTE *)(v1 + 24) = v5 & 1;
    *(_QWORD *)(v1 + 32) = OUTLINED_FUNCTION_7_53();
    *(_BYTE *)(v1 + 40) = v6 & 1;
    LOBYTE(v13) = 2;
    *(_QWORD *)(v1 + 48) = OUTLINED_FUNCTION_7_53();
    *(_BYTE *)(v1 + 56) = v7 & 1;
    sub_1C01A2170();
    OUTLINED_FUNCTION_6_52();
    *(_BYTE *)(v1 + 57) = 2;
    type metadata accessor for DateTime.Date.Holiday();
    OUTLINED_FUNCTION_29_24(&qword_1EF5BEDB0, v8, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.Date.Holiday, (uint64_t)&protocol conformance descriptor for DateTime.Date.Holiday);
    OUTLINED_FUNCTION_12_36();
    *(_QWORD *)(v1 + 64) = v13;
    sub_1C01A21AC();
    OUTLINED_FUNCTION_6_52();
    *(_BYTE *)(v1 + 72) = 2;
    *(_QWORD *)(v1 + 80) = OUTLINED_FUNCTION_7_53();
    *(_BYTE *)(v1 + 88) = v10 & 1;
    sub_1C01A21E8();
    OUTLINED_FUNCTION_6_52();
    *(_BYTE *)(v1 + 89) = 6;
    LOBYTE(v13) = 8;
    *(_QWORD *)(v1 + 96) = OUTLINED_FUNCTION_7_53();
    *(_BYTE *)(v1 + 104) = v11 & 1;
    sub_1C01A2224();
    OUTLINED_FUNCTION_6_52();
    *(_BYTE *)(v1 + 105) = 8;
    type metadata accessor for DateTime.DateTimeRange();
    OUTLINED_FUNCTION_29_24(&qword_1EF5B9498, v12, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.DateTimeRange, (uint64_t)&protocol conformance descriptor for DateTime.DateTimeRange);
    OUTLINED_FUNCTION_12_36();
    OUTLINED_FUNCTION_10_5();
    *(_QWORD *)(v1 + 112) = v13;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return v1;
}

uint64_t sub_1C01A1EC0()
{
  return sub_1C01A1B2C();
}

uint64_t sub_1C01A1EE0()
{
  return sub_1C01A0FE4();
}

uint64_t sub_1C01A1F00()
{
  sub_1C0304B04();
  sub_1C01A0FE4();
  return sub_1C0304B40();
}

BOOL sub_1C01A1F3C(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.Date.== infix(_:_:)(*a1, *a2);
}

BOOL sub_1C01A1F5C(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.Date.< infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C01A1F7C()
{
  char v0;

  static DateTime.Date.<= infix(_:_:)();
  return v0 & 1;
}

uint64_t sub_1C01A1F9C()
{
  char v0;

  static DateTime.Date.>= infix(_:_:)();
  return v0 & 1;
}

uint64_t sub_1C01A1FBC()
{
  char v0;

  static DateTime.Date.> infix(_:_:)();
  return v0 & 1;
}

uint64_t sub_1C01A1FDC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = DateTime.Date.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1C01A2004(_QWORD *a1)
{
  return sub_1C01A1884(a1);
}

uint64_t sub_1C01A2024()
{
  return sub_1C0084C10();
}

unint64_t sub_1C01A2044()
{
  unint64_t result;

  result = qword_1EF5BED70;
  if (!qword_1EF5BED70)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0315264, &_s4DateC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5BED70);
  }
  return result;
}

unint64_t sub_1C01A2080()
{
  unint64_t result;

  result = qword_1EF5BED78;
  if (!qword_1EF5BED78)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.DefinedDate, &type metadata for DateTime.Date.DefinedDate);
    atomic_store(result, (unint64_t *)&qword_1EF5BED78);
  }
  return result;
}

unint64_t sub_1C01A20BC()
{
  unint64_t result;

  result = qword_1EF5BED88;
  if (!qword_1EF5BED88)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.MonthOfYear, &type metadata for DateTime.Date.MonthOfYear);
    atomic_store(result, (unint64_t *)&qword_1EF5BED88);
  }
  return result;
}

unint64_t sub_1C01A20F8()
{
  unint64_t result;

  result = qword_1EF5BED90;
  if (!qword_1EF5BED90)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.DayOfWeek, &type metadata for DateTime.Date.DayOfWeek);
    atomic_store(result, (unint64_t *)&qword_1EF5BED90);
  }
  return result;
}

unint64_t sub_1C01A2134()
{
  unint64_t result;

  result = qword_1EF5BED98;
  if (!qword_1EF5BED98)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.CalendarEra, &type metadata for DateTime.Date.CalendarEra);
    atomic_store(result, (unint64_t *)&qword_1EF5BED98);
  }
  return result;
}

unint64_t sub_1C01A2170()
{
  unint64_t result;

  result = qword_1EF5BEDA8;
  if (!qword_1EF5BEDA8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.DefinedDate, &type metadata for DateTime.Date.DefinedDate);
    atomic_store(result, (unint64_t *)&qword_1EF5BEDA8);
  }
  return result;
}

unint64_t sub_1C01A21AC()
{
  unint64_t result;

  result = qword_1EF5BEDB8;
  if (!qword_1EF5BEDB8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.MonthOfYear, &type metadata for DateTime.Date.MonthOfYear);
    atomic_store(result, (unint64_t *)&qword_1EF5BEDB8);
  }
  return result;
}

unint64_t sub_1C01A21E8()
{
  unint64_t result;

  result = qword_1EF5BEDC0;
  if (!qword_1EF5BEDC0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.DayOfWeek, &type metadata for DateTime.Date.DayOfWeek);
    atomic_store(result, (unint64_t *)&qword_1EF5BEDC0);
  }
  return result;
}

unint64_t sub_1C01A2224()
{
  unint64_t result;

  result = qword_1EF5BEDC8;
  if (!qword_1EF5BEDC8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.CalendarEra, &type metadata for DateTime.Date.CalendarEra);
    atomic_store(result, (unint64_t *)&qword_1EF5BEDC8);
  }
  return result;
}

void sub_1C01A2260(uint64_t a1, uint64_t a2)
{
  sub_1C00C43F4(&qword_1EF5BEDD0, a2, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.Date, (uint64_t)&protocol conformance descriptor for DateTime.Date);
}

uint64_t method lookup function for DateTime.Date()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withDay:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withDay:month:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withDay:monthOfYear:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withDay:monthOfYear:year:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withYear:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withDay:month:year:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withMonth:year:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withDefinedValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withHoliday:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withDayOfWeek:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withDayOfWeek:dayOfWeekOrdinal:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withMonthOfYear:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withMonthOfYear:year:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withDay:month:year:definedValue:holiday:monthOfYear:weekOfYear:dayOfWeek:dayOfWeekOrdinal:calendarEra:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD))(v6 + 280))(a1, a2 & 1, a3, a4 & 1, a5, a6 & 1);
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(withDay:month:year:definedValue:holiday:monthOfYear:weekOfYear:dayOfWeek:dayOfWeekOrdinal:calendarEra:occurringIn:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD))(v6 + 288))(a1, a2 & 1, a3, a4 & 1, a5, a6 & 1);
}

uint64_t dispatch thunk of DateTime.Date.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of DateTime.Date.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of DateTime.Date.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of DateTime.Date.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of DateTime.Date.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 336))();
}

uint64_t _s4DateC10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1C01A242C + 4 * byte_1C0314FD0[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1C01A2460 + 4 * byte_1C0314FCB[v4]))();
}

uint64_t sub_1C01A2460(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C01A2468(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C01A2470);
  return result;
}

uint64_t sub_1C01A247C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C01A2484);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1C01A2488(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C01A2490(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4DateC10CodingKeysOMa()
{
  return &_s4DateC10CodingKeysON;
}

unint64_t sub_1C01A24B0()
{
  unint64_t result;

  result = qword_1EF5BEF70;
  if (!qword_1EF5BEF70)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031523C, &_s4DateC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5BEF70);
  }
  return result;
}

unint64_t sub_1C01A24F0()
{
  unint64_t result;

  result = qword_1EF5BEF78;
  if (!qword_1EF5BEF78)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03151AC, &_s4DateC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5BEF78);
  }
  return result;
}

unint64_t sub_1C01A2530()
{
  unint64_t result;

  result = qword_1EF5BEF80;
  if (!qword_1EF5BEF80)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03151D4, &_s4DateC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5BEF80);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_77@<X0>(__int16 a1@<W8>)
{
  uint64_t v1;

  *(_WORD *)(v1 + 88) = a1;
  *(_QWORD *)(v1 + 96) = 0;
  *(_WORD *)(v1 + 104) = a1;
  *(_QWORD *)(v1 + 112) = 0;
  return v1;
}

uint64_t OUTLINED_FUNCTION_1_66()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_3_77()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 112) = 0;
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_52()
{
  return sub_1C03048A0();
}

uint64_t OUTLINED_FUNCTION_7_53()
{
  return sub_1C0304894();
}

uint64_t OUTLINED_FUNCTION_8_40()
{
  return sub_1C0304948();
}

uint64_t OUTLINED_FUNCTION_9_46()
{
  return sub_1C0304954();
}

uint64_t OUTLINED_FUNCTION_12_36()
{
  return sub_1C03048A0();
}

uint64_t OUTLINED_FUNCTION_14_40()
{
  return sub_1C0304954();
}

uint64_t OUTLINED_FUNCTION_16_31()
{
  return sub_1C0304B10();
}

uint64_t OUTLINED_FUNCTION_17_29()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_23_23()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_24_19()
{
  return type metadata accessor for DateTime.Date();
}

void OUTLINED_FUNCTION_27_24()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 24) = 1;
  *(_QWORD *)(v0 + 32) = 0;
  *(_BYTE *)(v0 + 40) = 1;
  *(_QWORD *)(v0 + 48) = 0;
  *(_WORD *)(v0 + 56) = 1793;
  *(_QWORD *)(v0 + 64) = 0;
}

void OUTLINED_FUNCTION_29_24(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  sub_1C00C43F4(a1, 255, a3, a4);
}

BOOL OUTLINED_FUNCTION_40_18()
{
  uint64_t v0;
  uint64_t v1;

  return static DateTime.Date.< infix(_:_:)(v1, v0);
}

uint64_t sub_1C01A2698@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C0303748();
  if (sub_1C0303730() && (sub_1C0303718(), swift_release(), sub_1C0303988(), v3 = v2, swift_release(), v3))
  {
    sub_1C0301D08();
  }
  else
  {
    v4 = sub_1C0301D5C();
    __swift_storeEnumTagSinglePayload(a1, 1, 1, v4);
  }
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for RequestUUIDProvider()
{
  return &type metadata for RequestUUIDProvider;
}

void static AppResolverResult.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1C01A2784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  int v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (v5)
  {
    sub_1C008ED10(v1, v0, v5);
    sub_1C008ED10(v3, v2, v4);
    v8 = OUTLINED_FUNCTION_1_67(v3, v2, v4);
    sub_1C008E7F8(v8, v9, v5);
    v7 = 0;
  }
  else
  {
    if (v3 == v1 && v2 == v0)
      v7 = 1;
    else
      v7 = OUTLINED_FUNCTION_0_78();
    sub_1C008ED10(v1, v0, 0);
    sub_1C008ED10(v3, v2, 0);
    v10 = OUTLINED_FUNCTION_1_67(v3, v2, 0);
    sub_1C008E7F8(v10, v11, 0);
  }
  return v7 & 1;
}

uint64_t _s13SiriInference17AppResolverResultOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C008ED10(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AppResolverResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C008ED10(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1C008E7F8(v6, v7, v8);
  return a1;
}

