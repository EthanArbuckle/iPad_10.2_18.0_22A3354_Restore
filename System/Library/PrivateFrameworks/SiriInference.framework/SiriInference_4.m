uint64_t sub_1C021610C()
{
  return INControlHomeIntent.memorableParameters()();
}

uint64_t INShowHomeIntent.memorableParameters()()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  __n128 *inited;
  __n128 *v5;
  uint64_t v6;

  v1 = sub_1C0216BB4(v0);
  if (v1)
    v2 = v1;
  else
    v2 = MEMORY[0x1E0DEE9D8];
  if (v2 >> 62)
  {
    OUTLINED_FUNCTION_44();
    if (sub_1C03047F8())
      goto LABEL_6;
LABEL_8:
    OUTLINED_FUNCTION_33();
    goto LABEL_9;
  }
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_44();
  if (!v3)
    goto LABEL_8;
LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7256A8);
  inited = (__n128 *)swift_initStackObject();
  v5 = OUTLINED_FUNCTION_11_64(inited, (__n128)xmmword_1C0305B60);
  v5[4].n128_u64[1] = (unint64_t)&type metadata for HomeTask;
  v5[3].n128_u64[0] = 0;
  v5[3].n128_u64[1] = v2;
LABEL_9:
  v6 = sub_1C0303DB4();
  OUTLINED_FUNCTION_33();
  return v6;
}

uint64_t sub_1C0216214()
{
  return INShowHomeIntent.memorableParameters()();
}

uint64_t sub_1C0216234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1C0301D5C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0301D50();
  v4 = sub_1C0301D14();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C02162C4(void *a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char **v28;
  id v29;
  void *v30;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  id v45;
  id v46;
  char v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int16 v56;
  _QWORD *v57;
  uint64_t v58;
  id v59;
  id v60;
  unsigned __int16 v61;
  _QWORD *v62;
  id v63;
  id v64;
  _QWORD *v65;
  id v66;
  id v67;
  _QWORD *v68;
  id v69;
  id v70;
  _QWORD *v71;
  id v72;
  id v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  unint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  id v103;
  uint64_t v104;
  _QWORD *v105;

  v3 = MEMORY[0x1E0DEE9D8];
  if (a1)
  {
    v4 = a1;
    v103 = objc_msgSend(v4, sel_taskType);
    sub_1C0216D64();
    v5 = OUTLINED_FUNCTION_16_50();
    v7 = v6;
    sub_1C004FAD8();
    v3 = v8;
    v9 = *(_QWORD *)(v8 + 16);
    if (v9 >= *(_QWORD *)(v8 + 24) >> 1)
    {
      OUTLINED_FUNCTION_1_93();
      v3 = v94;
    }
    *(_QWORD *)(v3 + 16) = v9 + 1;
    v10 = (_QWORD *)(v3 + 32 * v9);
    v10[4] = 0x657079546B736174;
    v10[5] = 0xE800000000000000;
    v10[6] = v5;
    v10[7] = v7;
    v103 = objc_msgSend(v4, sel_attribute);
    v11 = OUTLINED_FUNCTION_16_50();
    v13 = v12;
    v14 = *(_QWORD *)(v3 + 16);
    if (v14 >= *(_QWORD *)(v3 + 24) >> 1)
    {
      OUTLINED_FUNCTION_1_93();
      v3 = v95;
    }
    *(_QWORD *)(v3 + 16) = v14 + 1;
    v15 = (_QWORD *)(v3 + 32 * v14);
    v15[4] = 0x7475626972747461;
    v15[5] = 0xE900000000000065;
    v15[6] = v11;
    v15[7] = v13;
    v16 = objc_msgSend(v4, sel_value);
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v16, sel_description);
      v19 = sub_1C0303EB0();
      v21 = v20;

      v22 = *(_QWORD *)(v3 + 16);
      if (v22 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        OUTLINED_FUNCTION_1_93();
        v3 = v96;
      }
      *(_QWORD *)(v3 + 16) = v22 + 1;
      v23 = (_QWORD *)(v3 + 32 * v22);
      v23[4] = 0x65756C6176;
      v23[5] = 0xE500000000000000;
      v23[6] = v19;
      v23[7] = v21;

    }
    else
    {
      v17 = v4;
    }

    v24 = a2;
  }
  else
  {
    v24 = a2;
  }
  if (v24 >> 62)
    goto LABEL_74;
  v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v25; v25 = sub_1C03047F8())
  {
    v26 = 0;
    v27 = v24 & 0xC000000000000001;
    v99 = v24 + 32;
    v100 = v24 & 0xFFFFFFFFFFFFFF8;
    v28 = &selRef_setTimestampSec_;
    v101 = v24 & 0xC000000000000001;
    v97 = v25;
    while (1)
    {
      if (v27)
      {
        v29 = (id)MEMORY[0x1C3B975EC](v26, v24);
      }
      else
      {
        if (v26 >= *(_QWORD *)(v100 + 16))
          goto LABEL_73;
        v29 = *(id *)(v99 + 8 * v26);
      }
      v30 = v29;
      if (__OFADD__(v26++, 1))
        break;
      if (!objc_msgSend(v29, v28[83]))
      {
        v32 = objc_msgSend(v30, sel_hasAllQuantifier);
        if (v32)
          v33 = 1702195828;
        else
          v33 = 0x65736C6166;
        if (v32)
          v34 = 0xE400000000000000;
        else
          v34 = 0xE500000000000000;
        v102 = v26;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_1_93();
          v3 = v75;
        }
        v35 = *(_QWORD *)(v3 + 16);
        v36 = v35 + 1;
        if (v35 >= *(_QWORD *)(v3 + 24) >> 1)
        {
          OUTLINED_FUNCTION_1_93();
          v3 = v76;
        }
        *(_QWORD *)(v3 + 16) = v36;
        v37 = (_QWORD *)(v3 + 32 * v35);
        v37[4] = 0x75516C6C41736168;
        v37[5] = 0xEF72656966696C61;
        v37[6] = v33;
        v37[7] = v34;
        v38 = sub_1C0216D10(v30);
        if (v38)
        {
          v36 = v38;
          v39 = *(_QWORD *)(v38 + 16);
          if (v39)
          {
            v40 = (unint64_t *)(v38 + 40);
            do
            {
              v35 = *(v40 - 1);
              v34 = *v40;
              v42 = *(_QWORD *)(v3 + 16);
              v41 = *(_QWORD *)(v3 + 24);
              v2 = v42 + 1;
              swift_bridgeObjectRetain();
              if (v42 >= v41 >> 1)
              {
                OUTLINED_FUNCTION_1_93();
                v3 = v44;
              }
              v40 += 2;
              *(_QWORD *)(v3 + 16) = v2;
              v43 = (_QWORD *)(v3 + 32 * v42);
              v43[4] = 0xD000000000000010;
              v43[5] = 0x80000001C0332960;
              v43[6] = v35;
              v43[7] = v34;
              --v39;
            }
            while (v39);
          }
          v38 = swift_bridgeObjectRelease();
          v25 = v97;
          v24 = a2;
        }
        v45 = OUTLINED_FUNCTION_45_15(v38, sel_entityName);
        if (v45)
        {
          v46 = OUTLINED_FUNCTION_3_106(v45);
          OUTLINED_FUNCTION_12_48();
          OUTLINED_FUNCTION_10_64();
          OUTLINED_FUNCTION_4_82();
          OUTLINED_FUNCTION_2_97();
          if (v47)
          {
            OUTLINED_FUNCTION_0_114();
            v3 = v78;
          }
          OUTLINED_FUNCTION_14_53();
          v48[4] = 0x614E797469746E65;
          v48[5] = 0xEA0000000000656DLL;
          v48[6] = v36;
          v48[7] = v34;
        }
        v103 = OUTLINED_FUNCTION_45_15((uint64_t)v45, sel_entityType);
        sub_1C0216D64();
        OUTLINED_FUNCTION_15_45();
        OUTLINED_FUNCTION_13_49();
        if (v47)
        {
          OUTLINED_FUNCTION_1_93();
          v3 = v49;
        }
        *(_QWORD *)(v3 + 16) = 0x1F270C000;
        v50 = (_QWORD *)(v3 + 32 * v35);
        v50[4] = 0x7954797469746E65;
        v50[5] = 0xEA00000000006570;
        v50[6] = &v103;
        v50[7] = v2;
        v103 = OUTLINED_FUNCTION_45_15(v49, sel_deviceType);
        OUTLINED_FUNCTION_15_45();
        OUTLINED_FUNCTION_13_49();
        if (v47)
        {
          OUTLINED_FUNCTION_1_93();
          v3 = v51;
        }
        *(_QWORD *)(v3 + 16) = 0x1F270C000;
        v52 = (_QWORD *)(v3 + 32 * v35);
        v52[4] = 0x7954656369766564;
        v52[5] = 0xEA00000000006570;
        v52[6] = &v103;
        v52[7] = v2;
        v103 = OUTLINED_FUNCTION_45_15(v51, sel_outerDeviceType);
        v53 = OUTLINED_FUNCTION_15_45();
        v55 = v54;
        OUTLINED_FUNCTION_2_97();
        if (v47)
        {
          OUTLINED_FUNCTION_0_114();
          v3 = v77;
        }
        v28 = &selRef_setTimestampSec_;
        OUTLINED_FUNCTION_6_82();
        v57[5] = v56 | 0xEF65707954650000;
        v57[6] = v53;
        v57[7] = v55;
        v59 = OUTLINED_FUNCTION_45_15(v58, sel_outerDeviceName);
        if (v59)
        {
          v60 = OUTLINED_FUNCTION_3_106(v59);
          OUTLINED_FUNCTION_12_48();
          OUTLINED_FUNCTION_10_64();
          OUTLINED_FUNCTION_4_82();
          OUTLINED_FUNCTION_2_97();
          if (v47)
          {
            OUTLINED_FUNCTION_0_114();
            v3 = v79;
          }
          OUTLINED_FUNCTION_6_82();
          v62[5] = v61 | 0xEF656D614E650000;
          v62[6] = v53;
          v62[7] = v55;
        }
        v63 = OUTLINED_FUNCTION_45_15((uint64_t)v59, sel_home);
        if (v63)
        {
          v64 = OUTLINED_FUNCTION_3_106(v63);
          OUTLINED_FUNCTION_12_48();
          OUTLINED_FUNCTION_10_64();
          OUTLINED_FUNCTION_4_82();
          OUTLINED_FUNCTION_2_97();
          if (v47)
          {
            OUTLINED_FUNCTION_0_114();
            v3 = v80;
          }
          OUTLINED_FUNCTION_14_53();
          OUTLINED_FUNCTION_7_77(v65);
        }
        v66 = OUTLINED_FUNCTION_45_15((uint64_t)v63, sel_zone);
        if (v66)
        {
          v67 = OUTLINED_FUNCTION_3_106(v66);
          OUTLINED_FUNCTION_12_48();
          OUTLINED_FUNCTION_10_64();
          OUTLINED_FUNCTION_4_82();
          OUTLINED_FUNCTION_2_97();
          if (v47)
          {
            OUTLINED_FUNCTION_0_114();
            v3 = v81;
          }
          OUTLINED_FUNCTION_14_53();
          OUTLINED_FUNCTION_7_77(v68);
        }
        v69 = OUTLINED_FUNCTION_45_15((uint64_t)v66, sel_group);
        if (v69)
        {
          v70 = OUTLINED_FUNCTION_3_106(v69);
          OUTLINED_FUNCTION_12_48();
          OUTLINED_FUNCTION_10_64();
          OUTLINED_FUNCTION_4_82();
          OUTLINED_FUNCTION_2_97();
          if (v47)
          {
            OUTLINED_FUNCTION_0_114();
            v3 = v82;
          }
          OUTLINED_FUNCTION_14_53();
          v71[4] = 0x70756F7267;
          v71[5] = 0xE500000000000000;
          v71[6] = v53;
          v71[7] = v55;
        }
        v72 = OUTLINED_FUNCTION_45_15((uint64_t)v69, sel_room);
        if (v72)
        {
          v73 = OUTLINED_FUNCTION_3_106(v72);
          OUTLINED_FUNCTION_12_48();
          OUTLINED_FUNCTION_10_64();
          OUTLINED_FUNCTION_4_82();
          OUTLINED_FUNCTION_2_97();
          if (v47)
          {
            OUTLINED_FUNCTION_0_114();
            v3 = v83;
          }
          OUTLINED_FUNCTION_14_53();
          OUTLINED_FUNCTION_7_77(v74);
        }
        v27 = v101;
        v26 = v102;
      }

      if (v26 == v25)
        goto LABEL_75;
    }
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    swift_bridgeObjectRetain();
  }
LABEL_75:
  swift_bridgeObjectRelease();
  v84 = *(_QWORD *)(v3 + 16);
  if (v84)
  {
    v105 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_44();
    sub_1C00B1764();
    v85 = v105;
    v86 = v3 + 56;
    do
    {
      v87 = *(_QWORD *)(v86 - 16);
      v103 = *(id *)(v86 - 24);
      v104 = v87;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1C0303FD0();
      sub_1C0303FD0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v88 = v103;
      v89 = v104;
      v105 = v85;
      v90 = v85[2];
      if (v90 >= v85[3] >> 1)
      {
        sub_1C00B1764();
        v85 = v105;
      }
      v86 += 32;
      v85[2] = v90 + 1;
      v91 = &v85[2 * v90];
      v91[4] = v88;
      v91[5] = v89;
      --v84;
    }
    while (v84);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    OUTLINED_FUNCTION_33();
    v85 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v103 = v85;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
  sub_1C004B224();
  v92 = sub_1C0303E50();
  swift_bridgeObjectRelease();
  return v92;
}

uint64_t sub_1C0216B90()
{
  return 0x6B736154656D6F48;
}

uint64_t sub_1C0216BAC()
{
  uint64_t v0;

  return sub_1C02162C4(*(void **)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_1C0216BB4(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_filters);
  if (!v1)
    return 0;
  v2 = v1;
  sub_1C0216DA0();
  v3 = sub_1C0304138();

  return v3;
}

_QWORD *initializeBufferWithCopyOfBuffer for HomeTask(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for HomeTask(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for HomeTask(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for HomeTask(id *a1, _OWORD *a2)
{

  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for HomeTask()
{
  return &type metadata for HomeTask;
}

uint64_t sub_1C0216D10(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_entityIdentifiers);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C0304138();

  return v3;
}

unint64_t sub_1C0216D64()
{
  unint64_t result;

  result = qword_1ED7280E8;
  if (!qword_1ED7280E8)
  {
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0DEB460], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1ED7280E8);
  }
  return result;
}

unint64_t sub_1C0216DA0()
{
  unint64_t result;

  result = qword_1EF5C0E68;
  if (!qword_1EF5C0E68)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF5C0E68);
  }
  return result;
}

void OUTLINED_FUNCTION_0_114()
{
  sub_1C004FAD8();
}

void OUTLINED_FUNCTION_1_93()
{
  sub_1C004FAD8();
}

id OUTLINED_FUNCTION_3_106(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 31));
}

void OUTLINED_FUNCTION_4_82()
{
  void *v0;

}

void OUTLINED_FUNCTION_6_82()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 32 * v1 + 32) = 0x766544726574756FLL;
}

void OUTLINED_FUNCTION_7_77(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  a1[4] = v1;
  a1[5] = 0xE400000000000000;
  a1[6] = v2;
  a1[7] = v3;
}

uint64_t OUTLINED_FUNCTION_10_64()
{
  return sub_1C0303EB0();
}

__n128 *OUTLINED_FUNCTION_11_64(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x6B736154656D6F68;
  result[2].n128_u64[1] = 0xE800000000000000;
  return result;
}

void OUTLINED_FUNCTION_12_48()
{
  void *v0;

}

void OUTLINED_FUNCTION_14_53()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = v1;
}

uint64_t OUTLINED_FUNCTION_15_45()
{
  return sub_1C0304564();
}

uint64_t OUTLINED_FUNCTION_16_50()
{
  return sub_1C0304564();
}

uint64_t storeEnumTagSinglePayload for PLUSTrialFactors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0216F18 + 4 * byte_1C031BCA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0216F4C + 4 * byte_1C031BCA0[v4]))();
}

uint64_t sub_1C0216F4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0216F54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0216F5CLL);
  return result;
}

uint64_t sub_1C0216F68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0216F70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0216F74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0216F7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PLUSTrialFactors()
{
  return &type metadata for PLUSTrialFactors;
}

uint64_t sub_1C0216F98(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000021 && a2 == 0x80000001C0332980)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1C021701C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unsigned __int8 v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C0E70);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C006BB34();
  sub_1C0304B88();
  if (!v1)
  {
    v7 = sub_1C03048B8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return v7 & 1;
}

uint64_t sub_1C0217120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0216F98(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C0217148()
{
  sub_1C006BB34();
  return sub_1C0304BAC();
}

uint64_t sub_1C0217170()
{
  sub_1C006BB34();
  return sub_1C0304BB8();
}

uint64_t sub_1C0217198@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1C021701C(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

BOOL sub_1C02171C4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C0128FF8(*a1, *a2);
}

uint64_t storeEnumTagSinglePayload for PLUSTrialFactors.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C0217210 + 4 * byte_1C031BCAA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C0217230 + 4 * byte_1C031BCAF[v4]))();
}

_BYTE *sub_1C0217210(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C0217230(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0217238(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0217240(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0217248(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0217250(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PLUSTrialFactors.CodingKeys()
{
  return &type metadata for PLUSTrialFactors.CodingKeys;
}

uint64_t static Match<>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  if ((sub_1C0303E80() & 1) == 0)
    return 0;
  type metadata accessor for Match(0, a3, a4, v6);
  return sub_1C0303E80() & 1;
}

uint64_t type metadata accessor for Match(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Match);
}

uint64_t Match.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_0_115(*(_QWORD *)(a1 + 16), a2);
}

uint64_t Match.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_3_107(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*Match.value.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t Match.signals.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_0_115(*(_QWORD *)(a1 + 24), a2);
}

uint64_t Match.signals.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_3_107(v2 + *(int *)(a2 + 36), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40), a1);
}

uint64_t (*Match.signals.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C0217378(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736C616E676973 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C021745C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x736C616E676973;
  else
    return 0x65756C6176;
}

BOOL sub_1C0217490(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C00F9760(*a1, *a2);
}

uint64_t sub_1C02174A4()
{
  return sub_1C00F98A0();
}

uint64_t sub_1C02174B4()
{
  return sub_1C00F9770();
}

uint64_t sub_1C02174C4()
{
  sub_1C0304B04();
  sub_1C00F9770();
  return sub_1C0304B40();
}

uint64_t sub_1C0217508()
{
  char *v0;

  return sub_1C021745C(*v0);
}

uint64_t sub_1C0217518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0217378(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0217544()
{
  return sub_1C00AA4C8();
}

uint64_t sub_1C0217568@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C00F9898();
  *a1 = result;
  return result;
}

uint64_t sub_1C0217594(uint64_t a1)
{
  MEMORY[0x1C3B9827C](&unk_1C031C098, a1);
  return sub_1C0304BAC();
}

uint64_t sub_1C02175C8(uint64_t a1)
{
  MEMORY[0x1C3B9827C](&unk_1C031C098, a1);
  return sub_1C0304BB8();
}

void Match<>.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD v16[6];
  char v17;
  char v18;

  v16[4] = a4;
  v16[2] = a6;
  v9 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v16[0] = a2;
  v16[1] = v8;
  v10 = type metadata accessor for Match.CodingKeys(255, v9, v8, a4);
  MEMORY[0x1C3B9827C](&unk_1C031C098, v10);
  v11 = sub_1C03049B4();
  OUTLINED_FUNCTION_6_83();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v16 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0304BA0();
  v18 = 0;
  v15 = v16[5];
  sub_1C030499C();
  if (!v15)
  {
    v17 = 1;
    sub_1C030499C();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v11);
  OUTLINED_FUNCTION_28_0();
}

uint64_t type metadata accessor for Match.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Match.CodingKeys);
}

void Match<>.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;

  v33 = a6;
  v34 = a5;
  v39 = a4;
  v32 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_53();
  v37 = v10;
  v36 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_53();
  v40 = v13;
  v17 = type metadata accessor for Match.CodingKeys(255, v14, v15, v16);
  MEMORY[0x1C3B9827C](&unk_1C031C098, v17);
  v43 = sub_1C030490C();
  v35 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v19 = (char *)&v31 - v18;
  v41 = a2;
  v38 = a3;
  v21 = type metadata accessor for Match(0, a2, a3, v20);
  OUTLINED_FUNCTION_6_83();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v31 - v23;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v42 = v19;
  v25 = v44;
  sub_1C0304B88();
  if (v25)
  {
    OUTLINED_FUNCTION_4_83();
  }
  else
  {
    v26 = v36;
    v44 = v6;
    v27 = v24;
    v28 = v37;
    v29 = v38;
    v46 = 0;
    sub_1C03048E8();
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v27, v40, v41);
    v45 = 1;
    sub_1C03048E8();
    OUTLINED_FUNCTION_2_98();
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(&v27[*(int *)(v21 + 36)], v28, v29);
    v30 = v44;
    (*(void (**)(uint64_t, char *, uint64_t))(v44 + 16))(v33, v27, v21);
    OUTLINED_FUNCTION_4_83();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v21);
  }
  OUTLINED_FUNCTION_28_0();
}

void sub_1C0217998(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  Match<>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8), *(_QWORD *)(a3 - 24), a4);
}

void sub_1C02179BC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  Match<>.encode(to:)(a1, a2, a3, *(_QWORD *)(a3 - 16), a5, *(_QWORD *)(a3 - 32));
}

uint64_t sub_1C02179D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static Match<>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1C02179E8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1C02179F0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C0217A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C0217AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C0217B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C0217BC0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0217C0C + 4 * byte_1C031BE73[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0217C40 + 4 * byte_1C031BE6E[v4]))();
}

uint64_t sub_1C0217C40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0217C48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0217C50);
  return result;
}

uint64_t sub_1C0217C5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0217C64);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0217C68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0217C70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1C0217C7C()
{
  JUMPOUT(0x1C3B9827CLL);
}

void sub_1C0217C8C()
{
  JUMPOUT(0x1C3B9827CLL);
}

void sub_1C0217C9C()
{
  JUMPOUT(0x1C3B9827CLL);
}

uint64_t OUTLINED_FUNCTION_0_115@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2);
}

uint64_t OUTLINED_FUNCTION_2_98()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 104), *(_QWORD *)(v1 - 96));
}

uint64_t OUTLINED_FUNCTION_3_107@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t a3@<X8>)
{
  return a2(a1, a3);
}

uint64_t OUTLINED_FUNCTION_4_83()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_0Tm(v0);
}

uint64_t sub_1C0217CEC(char a1)
{
  return qword_1C031C240[a1];
}

void sub_1C0217D00(double a1)
{
  double v1;
  uint64_t v2;
  double v3;

  if ((*(_QWORD *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
  {
    v1 = log10(fabs(a1));
    v2 = *(_QWORD *)&v1 & 0x7FF0000000000000;
    if (v1 >= 0.0)
      goto LABEL_7;
    if (v2 == 0x7FF0000000000000)
    {
      __break(1u);
    }
    else if (v1 > -9.22337204e18)
    {
      v3 = -2.0;
      v2 = 0x43E0000000000000;
      if (v1 < 9.22337204e18)
      {
LABEL_10:
        __exp10(v3 + (double)(uint64_t)v1);
        return;
      }
      __break(1u);
LABEL_7:
      if (v2 != 0x7FF0000000000000)
      {
        if (v1 > -9.22337204e18)
        {
          v3 = -1.0;
          if (v1 < 9.22337204e18)
            goto LABEL_10;
LABEL_16:
          __break(1u);
          return;
        }
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_14;
  }
}

void sub_1C0217DD4(uint64_t a1)
{
  double v1;

  sub_1C0217D00((double)a1);
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 >= 9.22337204e18)
LABEL_7:
    __break(1u);
}

uint64_t sub_1C0217E2C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (result <= 0)
  {
    v3 = 0;
LABEL_9:
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    v1 = 0x21u;
    while (1)
    {
      v2 = v1 - 31;
      if (__OFADD__(v1 - 32, 1))
        break;
      if (qword_1C031C240[byte_1E7987CC8[v1]] >= result)
      {
        v3 = byte_1E7987CC8[v1];
        goto LABEL_9;
      }
      ++v1;
      if (v2 == 10)
      {
        v3 = 9;
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TimeIntervalBucket(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 9) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v5 = v6 - 10;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TimeIntervalBucket(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1C0217FA4 + 4 * byte_1C031C0F5[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1C0217FD8 + 4 * byte_1C031C0F0[v4]))();
}

uint64_t sub_1C0217FD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0217FE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0217FE8);
  return result;
}

uint64_t sub_1C0217FF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0217FFCLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1C0218000(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0218008(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TimeIntervalBucket()
{
  return &type metadata for TimeIntervalBucket;
}

unint64_t sub_1C0218028()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF5C0F20;
  if (!qword_1EF5C0F20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF5C0F28);
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF5C0F20);
  }
  return result;
}

uint64_t sub_1C021806C(uint64_t result)
{
  if (result)
  {
    switch(result)
    {
      case 0x1ELL:
        return 1;
      case 0x7FFFFFFFLL:
        return 9;
      case 0x258:
        return 3;
      case 0xE10:
        return 4;
      case 0x5460:
        return 5;
      case 0x15180:
        return 6;
      case 0x93A80:
        return 7;
      case 0x24EA00:
        return 8;
      case 0x78:
        return 2;
      default:
        return 10;
    }
  }
  return result;
}

BOOL sub_1C0218128(char *a1, char *a2)
{
  return sub_1C025D268(*a1, *a2);
}

void sub_1C0218134()
{
  sub_1C00CEB30();
}

void sub_1C021813C()
{
  sub_1C00C1F00();
}

void sub_1C0218144()
{
  sub_1C02EAF54();
}

uint64_t sub_1C021814C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1C021806C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C0218174@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;

  result = sub_1C0217CEC(*v1);
  *a1 = result;
  return result;
}

void sub_1C021819C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7987CC8;
}

unint64_t sub_1C02181B0()
{
  unint64_t result;

  result = qword_1EF5C0F30;
  if (!qword_1EF5C0F30)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031C1C4, &type metadata for TimeIntervalBucket);
    atomic_store(result, (unint64_t *)&qword_1EF5C0F30);
  }
  return result;
}

uint64_t sub_1C02181EC()
{
  sub_1C0218294();
  return sub_1C03040FC();
}

uint64_t sub_1C0218248()
{
  sub_1C0218294();
  return sub_1C03040D8();
}

unint64_t sub_1C0218294()
{
  unint64_t result;

  result = qword_1EF5C0F38;
  if (!qword_1EF5C0F38)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031C14C, &type metadata for TimeIntervalBucket);
    atomic_store(result, (unint64_t *)&qword_1EF5C0F38);
  }
  return result;
}

SiriInference::AddressReference::Value_optional __swiftcall AddressReference.Value.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (SiriInference::AddressReference::Value_optional)sub_1C0218428(v1);
}

SiriInference::AddressReference __swiftcall AddressReference.init(value:prefix:)(SiriInference::AddressReference::Value value, SiriInference::AddressReference::Prefix_optional prefix)
{
  _BYTE *v2;
  char v3;
  SiriInference::AddressReference result;

  v3 = *(_BYTE *)prefix.value;
  *v2 = *(_BYTE *)value;
  v2[1] = v3;
  result.value = value;
  return result;
}

uint64_t AddressReference.Value.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 6647407;
  else
    return 0x79627261656ELL;
}

void sub_1C0218320(char *a1, char *a2)
{
  sub_1C025E2C4(*a1, *a2);
}

void sub_1C021832C()
{
  sub_1C00CEB68();
}

uint64_t sub_1C0218334()
{
  return sub_1C00C2428();
}

void sub_1C021833C()
{
  sub_1C02EACA8();
}

SiriInference::AddressReference::Value_optional sub_1C0218344(Swift::String *a1)
{
  return AddressReference.Value.init(rawValue:)(*a1);
}

uint64_t sub_1C0218350@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = AddressReference.Value.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0218374()
{
  sub_1C0218E7C();
  return sub_1C03040F0();
}

uint64_t sub_1C02183D0()
{
  sub_1C0218E7C();
  return sub_1C03040CC();
}

SiriInference::AddressReference::Prefix_optional __swiftcall AddressReference.Prefix.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (SiriInference::AddressReference::Prefix_optional)sub_1C0218428(v1);
}

uint64_t sub_1C0218428@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1C030484C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t AddressReference.Prefix.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 1918985582;
  else
    return 28265;
}

void sub_1C02184AC(char *a1, char *a2)
{
  sub_1C025E258(*a1, *a2);
}

void sub_1C02184B8()
{
  sub_1C00CEB74();
}

uint64_t sub_1C02184C0()
{
  return sub_1C00C23EC();
}

void sub_1C02184C8()
{
  sub_1C02EACF8();
}

SiriInference::AddressReference::Prefix_optional sub_1C02184D0(Swift::String *a1)
{
  return AddressReference.Prefix.init(rawValue:)(*a1);
}

uint64_t sub_1C02184DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = AddressReference.Prefix.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0218500()
{
  sub_1C0218E40();
  return sub_1C03040F0();
}

uint64_t sub_1C021855C()
{
  sub_1C0218E40();
  return sub_1C03040CC();
}

void AddressReference.value.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void AddressReference.prefix.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

void static AddressReference.== infix(_:_:)(_BYTE *a1, _BYTE *a2)
{
  int v2;
  int v3;
  BOOL v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v10;

  v2 = a1[1];
  v3 = a2[1];
  v4 = *a1 == 0;
  if (*a1)
    v5 = 6647407;
  else
    v5 = 0x79627261656ELL;
  if (v4)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE300000000000000;
  if (*a2)
    v7 = 6647407;
  else
    v7 = 0x79627261656ELL;
  if (*a2)
    v8 = 0xE300000000000000;
  else
    v8 = 0xE600000000000000;
  if (v5 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
      return;
  }
  if (v2 != 2 && v3 != 2)
    sub_1C025E258(v2 & 1, v3 & 1);
}

uint64_t sub_1C02186AC()
{
  sub_1C0218998();
  return sub_1C0304BAC();
}

uint64_t sub_1C02186D4()
{
  sub_1C0218998();
  return sub_1C0304BB8();
}

void AddressReference.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;
  char v13;
  char v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C0F40);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0218998();
  sub_1C0304BA0();
  v14 = v8;
  v13 = 0;
  sub_1C02189D4();
  sub_1C030499C();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    sub_1C0218A10();
    sub_1C0304954();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  OUTLINED_FUNCTION_28_0();
}

void AddressReference.init(from:)(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  char v7;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C0F60);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0218998();
  sub_1C0304B88();
  if (!v2)
  {
    sub_1C0218A4C();
    OUTLINED_FUNCTION_3_51();
    sub_1C03048E8();
    sub_1C0218A88();
    OUTLINED_FUNCTION_3_51();
    sub_1C03048A0();
    OUTLINED_FUNCTION_3_27();
    *a2 = v7;
    a2[1] = v6;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  OUTLINED_FUNCTION_28_0();
}

void sub_1C021896C(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  AddressReference.init(from:)(a1, a2);
}

void sub_1C0218980(_QWORD *a1)
{
  AddressReference.encode(to:)(a1);
}

unint64_t sub_1C0218998()
{
  unint64_t result;

  result = qword_1EF5C0F48;
  if (!qword_1EF5C0F48)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031C604, &type metadata for AddressReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C0F48);
  }
  return result;
}

unint64_t sub_1C02189D4()
{
  unint64_t result;

  result = qword_1EF5C0F50;
  if (!qword_1EF5C0F50)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for AddressReference.Value, &type metadata for AddressReference.Value);
    atomic_store(result, (unint64_t *)&qword_1EF5C0F50);
  }
  return result;
}

unint64_t sub_1C0218A10()
{
  unint64_t result;

  result = qword_1EF5C0F58;
  if (!qword_1EF5C0F58)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for AddressReference.Prefix, &type metadata for AddressReference.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C0F58);
  }
  return result;
}

unint64_t sub_1C0218A4C()
{
  unint64_t result;

  result = qword_1EF5C0F68;
  if (!qword_1EF5C0F68)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for AddressReference.Value, &type metadata for AddressReference.Value);
    atomic_store(result, (unint64_t *)&qword_1EF5C0F68);
  }
  return result;
}

unint64_t sub_1C0218A88()
{
  unint64_t result;

  result = qword_1EF5C0F70;
  if (!qword_1EF5C0F70)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for AddressReference.Prefix, &type metadata for AddressReference.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C0F70);
  }
  return result;
}

unint64_t sub_1C0218AC8()
{
  unint64_t result;

  result = qword_1EF5C0F78;
  if (!qword_1EF5C0F78)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for AddressReference.Value, &type metadata for AddressReference.Value);
    atomic_store(result, (unint64_t *)&qword_1EF5C0F78);
  }
  return result;
}

unint64_t sub_1C0218B08()
{
  unint64_t result;

  result = qword_1EF5C0F80;
  if (!qword_1EF5C0F80)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for AddressReference.Prefix, &type metadata for AddressReference.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C0F80);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AddressReference(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 65281 <= 0xFFFEFFFF)
      v2 = 2;
    else
      v2 = 4;
    if (a2 + 65281 < 0xFF0000)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    else
    {
      v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((_BYTE *)a1 + 2))
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 16)) - 65282;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AddressReference(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0218C1C + 4 * byte_1C031C295[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1C0218C50 + 4 * byte_1C031C290[v4]))();
}

uint64_t sub_1C0218C50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1C0218C58(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1C0218C60);
  return result;
}

uint64_t sub_1C0218C6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1C0218C74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0218C78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1C0218C80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

void type metadata accessor for AddressReference()
{
  OUTLINED_FUNCTION_17_2();
}

void type metadata accessor for AddressReference.Value()
{
  OUTLINED_FUNCTION_17_2();
}

void type metadata accessor for AddressReference.Prefix()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t _s13SiriInference16AddressReferenceV5ValueOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0218D00 + 4 * byte_1C031C29F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0218D34 + 4 * byte_1C031C29A[v4]))();
}

uint64_t sub_1C0218D34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0218D3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0218D44);
  return result;
}

uint64_t sub_1C0218D50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0218D58);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0218D5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0218D64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AddressReference.CodingKeys()
{
  return &type metadata for AddressReference.CodingKeys;
}

unint64_t sub_1C0218D84()
{
  unint64_t result;

  result = qword_1EF5C0F88;
  if (!qword_1EF5C0F88)
  {
    result = MEMORY[0x1C3B9827C]("-Ch'", &type metadata for AddressReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C0F88);
  }
  return result;
}

unint64_t sub_1C0218DC4()
{
  unint64_t result;

  result = qword_1EF5C0F90;
  if (!qword_1EF5C0F90)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031C54C, &type metadata for AddressReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C0F90);
  }
  return result;
}

unint64_t sub_1C0218E04()
{
  unint64_t result;

  result = qword_1EF5C0F98;
  if (!qword_1EF5C0F98)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031C574, &type metadata for AddressReference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C0F98);
  }
  return result;
}

unint64_t sub_1C0218E40()
{
  unint64_t result;

  result = qword_1EF5C0FA0;
  if (!qword_1EF5C0FA0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for AddressReference.Prefix, &type metadata for AddressReference.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C0FA0);
  }
  return result;
}

unint64_t sub_1C0218E7C()
{
  unint64_t result;

  result = qword_1EF5C0FA8;
  if (!qword_1EF5C0FA8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for AddressReference.Value, &type metadata for AddressReference.Value);
    atomic_store(result, (unint64_t *)&qword_1EF5C0FA8);
  }
  return result;
}

uint64_t sub_1C0218EB8()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[6];
  int v41;
  __int16 v42;
  __int16 v43;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B87E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C030AAE0;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = 0;
  *(_BYTE *)(inited + 48) = 2;
  v43 = 0;
  type metadata accessor for DateTime();
  swift_allocObject();
  OUTLINED_FUNCTION_3_108(4, v1, v2, (char *)&v43 + 1, v3, v4, v5, (char *)&v43);
  *(_QWORD *)(inited + 56) = v6;
  *(_OWORD *)(inited + 64) = xmmword_1C0308540;
  *(_BYTE *)(inited + 80) = 0;
  OUTLINED_FUNCTION_0_116();
  OUTLINED_FUNCTION_3_23(0, 0, 0, (char *)&v43 + 1, 7, v7, v8, (char *)&v43);
  *(_QWORD *)(inited + 88) = v9;
  *(_OWORD *)(inited + 96) = xmmword_1C0308560;
  *(_BYTE *)(inited + 112) = 0;
  v10 = OUTLINED_FUNCTION_0_116();
  OUTLINED_FUNCTION_1_94(v10, v11, v12, v13, v14, v15, v16, v17, v38, *(int *)v40, *(__int16 *)&v40[4], v43, SHIBYTE(v43));
  *(_QWORD *)(inited + 120) = v18;
  *(_OWORD *)(inited + 128) = xmmword_1C0308590;
  *(_BYTE *)(inited + 144) = 0;
  OUTLINED_FUNCTION_0_116();
  OUTLINED_FUNCTION_3_23(4, 0, 0, (char *)&v43 + 1, 5, v19, v20, (char *)&v43);
  *(_QWORD *)(inited + 152) = v21;
  *(_OWORD *)(inited + 160) = xmmword_1C031C660;
  *(_BYTE *)(inited + 176) = 0;
  OUTLINED_FUNCTION_0_116();
  OUTLINED_FUNCTION_3_108(5, v22, v23, (char *)&v43 + 1, v24, v25, v26, (char *)&v43);
  *(_QWORD *)(inited + 184) = v27;
  *(_OWORD *)(inited + 192) = xmmword_1C03089A0;
  *(_BYTE *)(inited + 208) = 0;
  v28 = OUTLINED_FUNCTION_0_116();
  OUTLINED_FUNCTION_1_94(v28, v29, v30, v31, v32, v33, v34, v35, v39, v41, v42, v43, SHIBYTE(v43));
  *(_QWORD *)(inited + 216) = v36;
  sub_1C0099A4C();
  return sub_1C0303DB4();
}

uint64_t OUTLINED_FUNCTION_0_116()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_1_94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(5, 0, 0, &a13, 6, 59, 59, &a12);
}

void OUTLINED_FUNCTION_3_108(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(a1, 0, 0, a4, 6, 0, 0, a8);
}

INSpatialEvent __swiftcall Location.Event.toINSpatialEvent()()
{
  unsigned __int8 *v0;

  return (unint64_t)*v0;
}

BOOL static Location.Event.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Location.Event.hash(into:)()
{
  return sub_1C0304B10();
}

uint64_t sub_1C02190CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x657669727261 && a2 == 0xE600000000000000;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x747261706564 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1C0304A08();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1C0219210(char a1)
{
  if (!a1)
    return 0x6E776F6E6B6E75;
  if (a1 == 1)
    return 0x657669727261;
  return 0x747261706564;
}

uint64_t sub_1C0219260()
{
  sub_1C0219628();
  return sub_1C0304BAC();
}

uint64_t sub_1C0219288()
{
  sub_1C0219628();
  return sub_1C0304BB8();
}

uint64_t sub_1C02192B0()
{
  char *v0;

  return sub_1C0219210(*v0);
}

uint64_t sub_1C02192B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C02190CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C02192DC()
{
  sub_1C02195B0();
  return sub_1C0304BAC();
}

uint64_t sub_1C0219304()
{
  sub_1C02195B0();
  return sub_1C0304BB8();
}

uint64_t sub_1C021932C()
{
  sub_1C02195EC();
  return sub_1C0304BAC();
}

uint64_t sub_1C0219354()
{
  sub_1C02195EC();
  return sub_1C0304BB8();
}

uint64_t sub_1C021937C()
{
  sub_1C0219664();
  return sub_1C0304BAC();
}

uint64_t sub_1C02193A4()
{
  sub_1C0219664();
  return sub_1C0304BB8();
}

void Location.Event.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C0FB0);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_53();
  v23 = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C0FB8);
  v21 = *(_QWORD *)(v8 - 8);
  v22 = v8;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_30_3();
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C0FC0);
  v10 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_6_0();
  v13 = v12 - v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C0FC8);
  v26 = *(_QWORD *)(v14 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_6_0();
  v18 = v17 - v16;
  v19 = *v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02195B0();
  sub_1C0304BA0();
  if (v19)
  {
    if (v19 == 1)
    {
      OUTLINED_FUNCTION_11_65();
      OUTLINED_FUNCTION_0_73();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v2, v22);
    }
    else
    {
      OUTLINED_FUNCTION_9_70();
      OUTLINED_FUNCTION_0_73();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    }
  }
  else
  {
    sub_1C0219664();
    OUTLINED_FUNCTION_0_73();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v20);
  }
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v18, v14);
  OUTLINED_FUNCTION_28_0();
}

unint64_t sub_1C02195B0()
{
  unint64_t result;

  result = qword_1EF5C0FD0;
  if (!qword_1EF5C0FD0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031CA4C, &_s5EventO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C0FD0);
  }
  return result;
}

unint64_t sub_1C02195EC()
{
  unint64_t result;

  result = qword_1EF5C0FD8;
  if (!qword_1EF5C0FD8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031C9FC, &_s5EventO16DepartCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C0FD8);
  }
  return result;
}

unint64_t sub_1C0219628()
{
  unint64_t result;

  result = qword_1EF5C0FE0;
  if (!qword_1EF5C0FE0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031C9AC, &_s5EventO16ArriveCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C0FE0);
  }
  return result;
}

unint64_t sub_1C0219664()
{
  unint64_t result;

  result = qword_1EF5C0FE8;
  if (!qword_1EF5C0FE8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031C95C, &_s5EventO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C0FE8);
  }
  return result;
}

void Location.Event.hashValue.getter()
{
  sub_1C0304B04();
  OUTLINED_FUNCTION_27_3();
  sub_1C0304B40();
  OUTLINED_FUNCTION_1_2();
}

void Location.Event.init(from:)(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C0FF0);
  v28 = *(_QWORD *)(v31 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_53();
  v34 = v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C0FF8);
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_53();
  v33 = v8;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1000);
  v9 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_30_3();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1008);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_6_0();
  v14 = v13 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02195B0();
  sub_1C0304B88();
  if (v35)
    goto LABEL_10;
  v36 = (uint64_t)a1;
  v15 = v14;
  v16 = sub_1C0304900();
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17
    || (v18 = *(unsigned __int8 *)(v16 + 32),
        sub_1C012B614(1, v17, v16, v16 + 32, 0, (2 * v17) | 1),
        v20 = v19,
        v22 = v21,
        swift_bridgeObjectRelease(),
        v20 != v22 >> 1))
  {
    v24 = sub_1C0304714();
    swift_allocError();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC278);
    *v26 = &type metadata for Location.Event;
    sub_1C0304864();
    sub_1C0304708();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x1E0DEC450], v24);
    swift_willThrow();
    OUTLINED_FUNCTION_10_14();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v15, v10);
    a1 = (_QWORD *)v36;
LABEL_10:
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    goto LABEL_11;
  }
  if (v18)
  {
    v37 = v18;
    if (v18 == 1)
    {
      OUTLINED_FUNCTION_11_65();
      OUTLINED_FUNCTION_71_10();
      v23 = a2;
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v33, v30);
    }
    else
    {
      OUTLINED_FUNCTION_9_70();
      OUTLINED_FUNCTION_71_10();
      v23 = a2;
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v34, v31);
    }
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_4_84(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  }
  else
  {
    sub_1C0219664();
    OUTLINED_FUNCTION_71_10();
    v37 = 0;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v27);
    OUTLINED_FUNCTION_10_14();
    OUTLINED_FUNCTION_4_84(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    v23 = a2;
  }
  *v23 = v37;
  __swift_destroy_boxed_opaque_existential_0Tm(v36);
LABEL_11:
  OUTLINED_FUNCTION_28_0();
}

void sub_1C0219A94(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  Location.Event.init(from:)(a1, a2);
}

void sub_1C0219AA8(_QWORD *a1)
{
  Location.Event.encode(to:)(a1);
}

unint64_t sub_1C0219AC0()
{
  unint64_t result;

  result = qword_1EF5C1010;
  if (!qword_1EF5C1010)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Location.Event, &type metadata for Location.Event);
    atomic_store(result, (unint64_t *)&qword_1EF5C1010);
  }
  return result;
}

ValueMetadata *type metadata accessor for Location.Event()
{
  return &type metadata for Location.Event;
}

uint64_t _s5EventOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0219B5C + 4 * byte_1C031C675[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0219B90 + 4 * byte_1C031C670[v4]))();
}

uint64_t sub_1C0219B90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0219B98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0219BA0);
  return result;
}

uint64_t sub_1C0219BAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0219BB4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0219BB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0219BC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s5EventO10CodingKeysOMa()
{
  return &_s5EventO10CodingKeysON;
}

ValueMetadata *_s5EventO17UnknownCodingKeysOMa()
{
  return &_s5EventO17UnknownCodingKeysON;
}

ValueMetadata *_s5EventO16ArriveCodingKeysOMa()
{
  return &_s5EventO16ArriveCodingKeysON;
}

ValueMetadata *_s5EventO16DepartCodingKeysOMa()
{
  return &_s5EventO16DepartCodingKeysON;
}

unint64_t sub_1C0219C10()
{
  unint64_t result;

  result = qword_1EF5C1018;
  if (!qword_1EF5C1018)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031C934, &_s5EventO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1018);
  }
  return result;
}

unint64_t sub_1C0219C50()
{
  unint64_t result;

  result = qword_1EF5C1020;
  if (!qword_1EF5C1020)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031C854, &_s5EventO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1020);
  }
  return result;
}

unint64_t sub_1C0219C90()
{
  unint64_t result;

  result = qword_1EF5C1028;
  if (!qword_1EF5C1028)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031C87C, &_s5EventO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1028);
  }
  return result;
}

unint64_t sub_1C0219CD0()
{
  unint64_t result;

  result = qword_1EF5C1030;
  if (!qword_1EF5C1030)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031C804, &_s5EventO16ArriveCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1030);
  }
  return result;
}

unint64_t sub_1C0219D10()
{
  unint64_t result;

  result = qword_1EF5C1038;
  if (!qword_1EF5C1038)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031C82C, &_s5EventO16ArriveCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1038);
  }
  return result;
}

unint64_t sub_1C0219D50()
{
  unint64_t result;

  result = qword_1EF5C1040;
  if (!qword_1EF5C1040)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031C7B4, &_s5EventO16DepartCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1040);
  }
  return result;
}

unint64_t sub_1C0219D90()
{
  unint64_t result;

  result = qword_1EF5C1048;
  if (!qword_1EF5C1048)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031C7DC, &_s5EventO16DepartCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1048);
  }
  return result;
}

unint64_t sub_1C0219DD0()
{
  unint64_t result;

  result = qword_1EF5C1050;
  if (!qword_1EF5C1050)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031C8A4, &_s5EventO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1050);
  }
  return result;
}

unint64_t sub_1C0219E10()
{
  unint64_t result;

  result = qword_1EF5C1058;
  if (!qword_1EF5C1058)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031C8CC, &_s5EventO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1058);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_84@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

unint64_t OUTLINED_FUNCTION_9_70()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_1C02195EC();
}

unint64_t OUTLINED_FUNCTION_11_65()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_1C0219628();
}

SiriInference::County __swiftcall County.init(name:prefix:suffix:)(Swift::String name, SiriInference::County::Prefix_optional prefix, SiriInference::County::Suffix_optional suffix)
{
  uint64_t v3;
  char v4;
  char v5;
  SiriInference::County result;

  v4 = *(_BYTE *)prefix.value;
  v5 = *(_BYTE *)suffix.value;
  *(Swift::String *)v3 = name;
  *(_BYTE *)(v3 + 16) = v4;
  *(_BYTE *)(v3 + 17) = v5;
  result.name = name;
  result.prefix = prefix;
  return result;
}

SiriInference::County::Prefix_optional __swiftcall County.Prefix.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (SiriInference::County::Prefix_optional)sub_1C0105B44(v1);
}

uint64_t County.Prefix.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x79746E756F63;
  if (*v0 != 1)
    v1 = 1918985582;
  if (*v0)
    return v1;
  else
    return 28265;
}

uint64_t sub_1C0219ED8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C025C7C0(*a1, *a2);
}

uint64_t sub_1C0219EE4()
{
  unsigned __int8 *v0;

  return sub_1C00CEB80(*v0);
}

uint64_t sub_1C0219EEC(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1C00C14F0(a1, *v1);
}

uint64_t sub_1C0219EF4(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1C02EB494(a1, *v1);
}

SiriInference::County::Prefix_optional sub_1C0219EFC(Swift::String *a1)
{
  return County.Prefix.init(rawValue:)(*a1);
}

uint64_t sub_1C0219F08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = County.Prefix.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0219F2C()
{
  sub_1C021A8B8();
  return sub_1C03040F0();
}

uint64_t sub_1C0219F88()
{
  sub_1C021A8B8();
  return sub_1C03040CC();
}

SiriInference::County::Suffix_optional __swiftcall County.Suffix.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (SiriInference::County::Suffix_optional)sub_1C0105B44(v1);
}

SiriInference::County::Suffix_optional sub_1C0219FE0(Swift::String *a1)
{
  return County.Suffix.init(rawValue:)(*a1);
}

uint64_t sub_1C0219FEC()
{
  sub_1C021A87C();
  return sub_1C03040F0();
}

uint64_t sub_1C021A048()
{
  sub_1C021A87C();
  return sub_1C03040CC();
}

uint64_t County.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void County.prefix.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

void County.suffix.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

uint64_t static County.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a1 + 17);
  v4 = *(unsigned __int8 *)(a2 + 16);
  v5 = *(unsigned __int8 *)(a2 + 17);
  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v6 || (v7 = sub_1C0304A08(), result = 0, (v7 & 1) != 0))
  {
    if ((_DWORD)v2 == 3)
    {
      if ((_DWORD)v4 != 3)
        return 0;
    }
    else if ((_DWORD)v4 == 3 || (sub_1C025C7C0(v2, v4) & 1) == 0)
    {
      return 0;
    }
    result = (_DWORD)v5 == 3 && (_DWORD)v3 == 3;
    if ((_DWORD)v3 != 3 && (_DWORD)v5 != 3)
      return sub_1C025C7C0(v3, v5);
  }
  return result;
}

uint64_t sub_1C021A1A0()
{
  sub_1C021A51C();
  return sub_1C0304BAC();
}

uint64_t sub_1C021A1C8()
{
  sub_1C021A51C();
  return sub_1C0304BB8();
}

void County.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  int v15;
  int v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1060);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 *)(v1 + 16);
  v15 = *(unsigned __int8 *)(v1 + 17);
  v16 = v8;
  v9 = a1[3];
  v10 = a1;
  v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_1C021A51C();
  sub_1C0304BA0();
  v21 = 0;
  sub_1C0304960();
  if (!v2)
  {
    v13 = v15;
    v20 = v16;
    v19 = 1;
    sub_1C021A558();
    OUTLINED_FUNCTION_2_30();
    v18 = v13;
    v17 = 2;
    sub_1C021A594();
    OUTLINED_FUNCTION_2_30();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  OUTLINED_FUNCTION_28_0();
}

void County.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1080);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C021A51C();
  sub_1C0304B88();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    v6 = sub_1C03048AC();
    v8 = v7;
    v9 = sub_1C021A5D0();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_21();
    if (v9)
    {
      OUTLINED_FUNCTION_3_27();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C021A60C();
      OUTLINED_FUNCTION_4_21();
      OUTLINED_FUNCTION_3_27();
      *(_QWORD *)a2 = v6;
      *(_QWORD *)(a2 + 8) = v8;
      *(_BYTE *)(a2 + 16) = v11;
      *(_BYTE *)(a2 + 17) = v10;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28_0();
}

void sub_1C021A4F0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  County.init(from:)(a1, a2);
}

void sub_1C021A504(_QWORD *a1)
{
  County.encode(to:)(a1);
}

unint64_t sub_1C021A51C()
{
  unint64_t result;

  result = qword_1EF5C1068;
  if (!qword_1EF5C1068)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031CE04, &type metadata for County.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1068);
  }
  return result;
}

unint64_t sub_1C021A558()
{
  unint64_t result;

  result = qword_1EF5C1070;
  if (!qword_1EF5C1070)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for County.Prefix, &type metadata for County.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C1070);
  }
  return result;
}

unint64_t sub_1C021A594()
{
  unint64_t result;

  result = qword_1EF5C1078;
  if (!qword_1EF5C1078)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for County.Suffix, &type metadata for County.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5C1078);
  }
  return result;
}

unint64_t sub_1C021A5D0()
{
  unint64_t result;

  result = qword_1EF5C1088;
  if (!qword_1EF5C1088)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for County.Prefix, &type metadata for County.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C1088);
  }
  return result;
}

unint64_t sub_1C021A60C()
{
  unint64_t result;

  result = qword_1EF5C1090;
  if (!qword_1EF5C1090)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for County.Suffix, &type metadata for County.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5C1090);
  }
  return result;
}

unint64_t sub_1C021A64C()
{
  unint64_t result;

  result = qword_1EF5C1098;
  if (!qword_1EF5C1098)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for County.Prefix, &type metadata for County.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C1098);
  }
  return result;
}

unint64_t sub_1C021A68C()
{
  unint64_t result;

  result = qword_1EF5C10A0;
  if (!qword_1EF5C10A0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for County.Suffix, &type metadata for County.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5C10A0);
  }
  return result;
}

void type metadata accessor for County()
{
  OUTLINED_FUNCTION_17_2();
}

void type metadata accessor for County.Prefix()
{
  OUTLINED_FUNCTION_17_2();
}

void type metadata accessor for County.Suffix()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t _s13SiriInference6CountyV6PrefixOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C021A73C + 4 * byte_1C031CAA1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C021A770 + 4 * byte_1C031CA9C[v4]))();
}

uint64_t sub_1C021A770(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C021A778(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C021A780);
  return result;
}

uint64_t sub_1C021A78C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C021A794);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C021A798(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C021A7A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for County.CodingKeys()
{
  return &type metadata for County.CodingKeys;
}

unint64_t sub_1C021A7C0()
{
  unint64_t result;

  result = qword_1EF5C10A8;
  if (!qword_1EF5C10A8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031CDDC, &type metadata for County.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C10A8);
  }
  return result;
}

unint64_t sub_1C021A800()
{
  unint64_t result;

  result = qword_1EF5C10B0;
  if (!qword_1EF5C10B0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031CD4C, &type metadata for County.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C10B0);
  }
  return result;
}

unint64_t sub_1C021A840()
{
  unint64_t result;

  result = qword_1EF5C10B8;
  if (!qword_1EF5C10B8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031CD74, &type metadata for County.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C10B8);
  }
  return result;
}

unint64_t sub_1C021A87C()
{
  unint64_t result;

  result = qword_1EF5C10C0;
  if (!qword_1EF5C10C0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for County.Suffix, &type metadata for County.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5C10C0);
  }
  return result;
}

unint64_t sub_1C021A8B8()
{
  unint64_t result;

  result = qword_1EF5C10C8;
  if (!qword_1EF5C10C8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for County.Prefix, &type metadata for County.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C10C8);
  }
  return result;
}

void CommsAppResolutionFeature.isMessage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = OUTLINED_FUNCTION_6_84();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_6_0();
  v4 = v3 - v2;
  v5 = OUTLINED_FUNCTION_4_85();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_10_65(v6, *MEMORY[0x1E0DA4A30]);
  sub_1C008DDB4();
  OUTLINED_FUNCTION_1_95();
  OUTLINED_FUNCTION_1_95();
  OUTLINED_FUNCTION_9_71();
  v7 = sub_1C008CE0C(v0, v4);
  if (v9 != v8)
  {
    OUTLINED_FUNCTION_10_65(v7, *MEMORY[0x1E0DA4A18]);
    OUTLINED_FUNCTION_1_95();
    OUTLINED_FUNCTION_1_95();
    OUTLINED_FUNCTION_9_71();
  }
  sub_1C008DDF4(v4);
  OUTLINED_FUNCTION_1();
}

uint64_t CommsAppFeature.isFirstParty.getter()
{
  sub_1C004F444();
  sub_1C004F480();
  return sub_1C0303E44() & 1;
}

id CommsAppResolutionFeature.intent.getter()
{
  id *v0;

  return *v0;
}

uint64_t CommsAppResolutionFeature.nlContactCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t CommsAppResolutionFeature.appFeatures.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CommsAppResolutionFeature.communicationType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_6_84() + 28);
  v4 = OUTLINED_FUNCTION_4_85();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CommsAppResolutionFeature.siriLocale.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_6_84() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommsAppResolutionFeature.init(intent:nlContactCount:appFeatures:communicationType:siriLocale:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;

  v14 = OUTLINED_FUNCTION_6_84();
  v15 = (_QWORD *)((char *)a7 + *(int *)(v14 + 32));
  *v15 = a5;
  v15[1] = a6;
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  v16 = (char *)a7 + *(int *)(v14 + 28);
  v17 = OUTLINED_FUNCTION_4_85();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, a4, v17);
}

uint64_t CommsAppFeature.bundleID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommsAppFeature.isContactInApp.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

char *initializeBufferWithCopyOfBuffer for CommsAppResolutionFeature(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v8;
    v9 = *(int *)(a3 + 28);
    v10 = &a1[v9];
    v11 = (uint64_t)a2 + v9;
    v12 = sub_1C03022F0();
    v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v14 = v4;
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v15 = *(int *)(a3 + 32);
    v16 = &v7[v15];
    v17 = (char **)((char *)a2 + v15);
    v18 = v17[1];
    *(_QWORD *)v16 = *v17;
    *((_QWORD *)v16 + 1) = v18;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t assignWithCopy for CommsAppResolutionFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 28);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1C03022F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = *(int *)(a3 + 32);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for CommsAppResolutionFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1C03022F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)(a1 + *(int *)(a3 + 32)) = *(_OWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t assignWithTake for CommsAppResolutionFeature(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 28);
  v9 = a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C03022F0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(a3 + 32);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CommsAppResolutionFeature()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C021AEAC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_4_85();
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CommsAppResolutionFeature()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C021AF28(_QWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *a1 = (a2 - 1);
    OUTLINED_FUNCTION_37_0();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_4_85();
    __swift_storeEnumTagSinglePayload((uint64_t)a1 + *(int *)(a4 + 28), a2, a2, v7);
  }
}

uint64_t sub_1C021AF88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C03022F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_117()
{
  return sub_1C03040C0();
}

uint64_t OUTLINED_FUNCTION_1_95()
{
  return sub_1C03040C0();
}

uint64_t OUTLINED_FUNCTION_2_99(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 - 112))(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_3_109()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_4_85()
{
  return sub_1C03022F0();
}

uint64_t OUTLINED_FUNCTION_6_84()
{
  return type metadata accessor for CommsAppResolutionFeature();
}

uint64_t OUTLINED_FUNCTION_8_62()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C008CE0C(v0, *(_QWORD *)(v1 - 104));
}

uint64_t OUTLINED_FUNCTION_9_71()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_10_65(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_11_66()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C008CE0C(v0, v1);
}

SiriInference::LocationName __swiftcall LocationName.init(name:prefix:)(Swift::String name, SiriInference::LocationName::Prefix_optional prefix)
{
  uint64_t v2;
  char v3;
  SiriInference::LocationName result;

  v3 = *(_BYTE *)prefix.value;
  *(Swift::String *)v2 = name;
  *(_BYTE *)(v2 + 16) = v3;
  result.name = name;
  result.prefix = prefix;
  return result;
}

SiriInference::LocationName::Prefix_optional __swiftcall LocationName.Prefix.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SiriInference::LocationName::Prefix_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1C030484C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t LocationName.Prefix.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 28265;
  if (*v0 != 1)
    v1 = 28271;
  if (*v0)
    return v1;
  else
    return 0x7369206572656877;
}

void sub_1C021B148(char *a1, char *a2)
{
  sub_1C025F070(*a1, *a2);
}

void sub_1C021B154()
{
  sub_1C00CEB8C();
}

uint64_t sub_1C021B15C(uint64_t a1)
{
  char *v1;

  return sub_1C00C2B9C(a1, *v1);
}

void sub_1C021B164()
{
  sub_1C02EAA44();
}

SiriInference::LocationName::Prefix_optional sub_1C021B16C(Swift::String *a1)
{
  return LocationName.Prefix.init(rawValue:)(*a1);
}

uint64_t sub_1C021B178@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = LocationName.Prefix.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C021B19C()
{
  sub_1C021B974();
  return sub_1C03040F0();
}

uint64_t sub_1C021B1F8()
{
  sub_1C021B974();
  return sub_1C03040CC();
}

uint64_t LocationName.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void LocationName.prefix.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

void static LocationName.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if ((v4 || (sub_1C0304A08() & 1) != 0) && v2 != 3 && v3 != 3)
    sub_1C025F070(v2, v3);
}

uint64_t sub_1C021B300()
{
  sub_1C021B618();
  return sub_1C0304BAC();
}

uint64_t sub_1C021B328()
{
  sub_1C021B618();
  return sub_1C0304BB8();
}

void LocationName.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1178);
  v8 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C021B618();
  sub_1C0304BA0();
  v12 = 0;
  sub_1C0304960();
  if (!v2)
  {
    v11 = v9;
    v10 = 1;
    sub_1C021B654();
    sub_1C0304954();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v4);
  OUTLINED_FUNCTION_28_0();
}

void LocationName.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1190);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C021B618();
  sub_1C0304B88();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    v6 = sub_1C03048AC();
    v8 = v7;
    sub_1C021B690();
    swift_bridgeObjectRetain();
    sub_1C03048A0();
    OUTLINED_FUNCTION_10_5();
    *(_QWORD *)a2 = v6;
    *(_QWORD *)(a2 + 8) = v8;
    *(_BYTE *)(a2 + 16) = v9;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28_0();
}

void sub_1C021B5EC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  LocationName.init(from:)(a1, a2);
}

void sub_1C021B600(_QWORD *a1)
{
  LocationName.encode(to:)(a1);
}

unint64_t sub_1C021B618()
{
  unint64_t result;

  result = qword_1EF5C1180;
  if (!qword_1EF5C1180)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031D148, &type metadata for LocationName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1180);
  }
  return result;
}

unint64_t sub_1C021B654()
{
  unint64_t result;

  result = qword_1EF5C1188;
  if (!qword_1EF5C1188)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for LocationName.Prefix, &type metadata for LocationName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C1188);
  }
  return result;
}

unint64_t sub_1C021B690()
{
  unint64_t result;

  result = qword_1EF5C1198;
  if (!qword_1EF5C1198)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for LocationName.Prefix, &type metadata for LocationName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C1198);
  }
  return result;
}

unint64_t sub_1C021B6D0()
{
  unint64_t result;

  result = qword_1EF5C11A0;
  if (!qword_1EF5C11A0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for LocationName.Prefix, &type metadata for LocationName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C11A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationName()
{
  return &type metadata for LocationName;
}

uint64_t storeEnumTagSinglePayload for LocationName.Prefix(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C021B768 + 4 * byte_1C031CEDD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C021B79C + 4 * asc_1C031CED8[v4]))();
}

uint64_t sub_1C021B79C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C021B7A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C021B7ACLL);
  return result;
}

uint64_t sub_1C021B7B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C021B7C0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C021B7C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C021B7CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocationName.Prefix()
{
  return &type metadata for LocationName.Prefix;
}

uint64_t storeEnumTagSinglePayload for LocationName.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C021B834 + 4 * byte_1C031CEE7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C021B868 + 4 * byte_1C031CEE2[v4]))();
}

uint64_t sub_1C021B868(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C021B870(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C021B878);
  return result;
}

uint64_t sub_1C021B884(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C021B88CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C021B890(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C021B898(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocationName.CodingKeys()
{
  return &type metadata for LocationName.CodingKeys;
}

unint64_t sub_1C021B8B8()
{
  unint64_t result;

  result = qword_1EF5C11A8;
  if (!qword_1EF5C11A8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031D120, &type metadata for LocationName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C11A8);
  }
  return result;
}

unint64_t sub_1C021B8F8()
{
  unint64_t result;

  result = qword_1EF5C11B0;
  if (!qword_1EF5C11B0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031D090, &type metadata for LocationName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C11B0);
  }
  return result;
}

unint64_t sub_1C021B938()
{
  unint64_t result;

  result = qword_1EF5C11B8;
  if (!qword_1EF5C11B8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031D0B8, &type metadata for LocationName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C11B8);
  }
  return result;
}

unint64_t sub_1C021B974()
{
  unint64_t result;

  result = qword_1EF5C11C0;
  if (!qword_1EF5C11C0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for LocationName.Prefix, &type metadata for LocationName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C11C0);
  }
  return result;
}

uint64_t dispatch thunk of MemorableParameter.inType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MemorableParameter.memorableUUID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MemorableParameter.memorableTokenString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

void TerminalElement.DateTimePeriod.toDefinedTime()(_BYTE *a1@<X8>)
{
  sub_1C021BAB0(sub_1C022B1EC, 3, a1);
}

void TerminalElement.DateTimePeriod.toDefinedDateTimeRange(qualifier:)(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BBEC8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0302848();
  v7 = sub_1C0302944();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
    sub_1C011D46C((uint64_t)v6);
    *a2 = 38;
  }
  else
  {
    sub_1C022A708(a1, 0, a2);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  OUTLINED_FUNCTION_17_1();
}

void TerminalElement.DateTimePeriod.toDefinedDate()(_BYTE *a1@<X8>)
{
  sub_1C021BAB0(sub_1C022B0E0, 7, a1);
}

void sub_1C021BAB0(void (*a1)(void)@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BBEC8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0302848();
  v9 = sub_1C0302944();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    sub_1C011D46C((uint64_t)v8);
    *a3 = a2;
  }
  else
  {
    a1();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  OUTLINED_FUNCTION_17_1();
}

uint64_t sub_1C021BB70(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    sub_1C030475C();
    v4 = a1 + 32;
    do
    {
      v4 += 80;
      swift_retain();
      sub_1C0304738();
      sub_1C0304768();
      sub_1C0304774();
      sub_1C0304744();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

char *static DateTimeResolver.name.getter()
{
  OUTLINED_FUNCTION_55_1();
  return off_1EF5C11C8;
}

uint64_t static DateTimeResolver.name.setter(char *a1, uint64_t a2, char a3)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_55_1();
  off_1EF5C11C8 = a1;
  unk_1EF5C11D0 = a2;
  byte_1EF5C11D8 = a3;
  return result;
}

uint64_t (*static DateTimeResolver.name.modify())()
{
  OUTLINED_FUNCTION_55_1();
  return j__swift_endAccess;
}

uint64_t sub_1C021BCEC(uint64_t *a1, uint64_t *a2, char *a3)
{
  return DateTimeResolver.findMatches(value:context:spec:)(*a1, *a2, a3);
}

uint64_t sub_1C021BD08@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  return DateTimeResolver.makeRecommendation(value:context:spec:)(*a1, *a2, a3, a4);
}

unint64_t sub_1C021BD28(uint64_t a1)
{
  unint64_t result;

  result = sub_1C021BD4C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C021BD4C()
{
  unint64_t result;

  result = qword_1EF5C11E0;
  if (!qword_1EF5C11E0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTimeResolver, &type metadata for DateTimeResolver);
    atomic_store(result, (unint64_t *)&qword_1EF5C11E0);
  }
  return result;
}

uint64_t sub_1C021BD88()
{
  return sub_1C0068358(&qword_1EF5BA1D0, (uint64_t (*)(uint64_t))type metadata accessor for DateTime, (uint64_t)&protocol conformance descriptor for DateTime);
}

uint64_t sub_1C021BDB4()
{
  return sub_1C0068358(&qword_1EF5BA1A0, (uint64_t (*)(uint64_t))type metadata accessor for DateTime, (uint64_t)&protocol conformance descriptor for DateTime);
}

uint64_t sub_1C021BDE0()
{
  return sub_1C0068358(&qword_1EF5C11E8, (uint64_t (*)(uint64_t))type metadata accessor for DateTimeResolutionContext, (uint64_t)&protocol conformance descriptor for DateTimeResolutionContext);
}

uint64_t sub_1C021BE0C()
{
  return sub_1C0068358(&qword_1EF5C11F0, (uint64_t (*)(uint64_t))type metadata accessor for DateTimeResolutionContext, (uint64_t)&protocol conformance descriptor for DateTimeResolutionContext);
}

unint64_t sub_1C021BE3C()
{
  unint64_t result;

  result = qword_1EF5C11F8;
  if (!qword_1EF5C11F8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTimeSignalSet, &type metadata for DateTimeSignalSet);
    atomic_store(result, (unint64_t *)&qword_1EF5C11F8);
  }
  return result;
}

unint64_t sub_1C021BE7C()
{
  unint64_t result;

  result = qword_1EF5C1200;
  if (!qword_1EF5C1200)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTimeSignalSet, &type metadata for DateTimeSignalSet);
    atomic_store(result, (unint64_t *)&qword_1EF5C1200);
  }
  return result;
}

unint64_t sub_1C021BEBC()
{
  unint64_t result;

  result = qword_1EF5C1208;
  if (!qword_1EF5C1208)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTimeResolutionSpec, &type metadata for DateTimeResolutionSpec);
    atomic_store(result, (unint64_t *)&qword_1EF5C1208);
  }
  return result;
}

unint64_t sub_1C021BEFC()
{
  unint64_t result;

  result = qword_1EF5C1210;
  if (!qword_1EF5C1210)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTimeResolutionSpec, &type metadata for DateTimeResolutionSpec);
    atomic_store(result, (unint64_t *)&qword_1EF5C1210);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_6_85()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1C00873E4(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_9_72()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 200) + 8))(v0, *(_QWORD *)(v1 - 192));
}

id sub_1C021BF5C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BackgroundQueue()), sel_init);
  qword_1ED728388 = (uint64_t)result;
  return result;
}

id static BackgroundQueue.shared.getter()
{
  if (qword_1ED728460 != -1)
    swift_once();
  return (id)qword_1ED728388;
}

id sub_1C021BFC8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;

  v1 = sub_1C030439C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_6_0();
  v5 = v4 - v3;
  sub_1C030436C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_5_7();
  sub_1C0303D00();
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_5_1(v9, (unint64_t *)&qword_1ED7283E0);
  v10 = v0;
  sub_1C0303CD0();
  sub_1C0068358((unint64_t *)&qword_1ED7283D0, v6, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7283C0);
  sub_1C0073CA8((unint64_t *)&qword_1ED7283C8, &qword_1ED7283C0);
  sub_1C0304588();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x1E0DEF8D8], v1);
  v11 = sub_1C03043C0();

  v12 = objc_allocWithZone((Class)type metadata accessor for BackgroundQueue());
  v13 = sub_1C021C1C8(v11);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v13;
}

id sub_1C021C1C8(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  objc_super v8;
  id v9;
  char v10;

  v3 = OBJC_IVAR____TtC13SiriInference15BackgroundQueue_lock;
  v4 = v1;
  *(_QWORD *)&v1[v3] = dispatch_semaphore_create(1);
  *(_DWORD *)&v4[OBJC_IVAR____TtC13SiriInference15BackgroundQueue_pauseRequests] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC13SiriInference15BackgroundQueue_queue] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&dword_1ED728390);
  swift_allocObject();
  v5 = OUTLINED_FUNCTION_34_15();
  *(_QWORD *)&v4[OBJC_IVAR____TtC13SiriInference15BackgroundQueue_queueKey] = sub_1C0303C94();
  *(_QWORD *)&v4[OBJC_IVAR____TtC13SiriInference15BackgroundQueue_queueKeyValue] = v5;
  v9 = v5;
  v10 = 0;
  sub_1C0304390();

  v8.receiver = v4;
  v8.super_class = (Class)type metadata accessor for BackgroundQueue();
  v6 = objc_msgSendSuper2(&v8, sel_init);
  objc_msgSend(v6, sel_setMaxConcurrentOperationCount_, 1);
  objc_msgSend(v6, sel_setUnderlyingQueue_, v5);

  return v6;
}

void sub_1C021C2CC()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  int v9;
  BOOL v10;
  unsigned int v11;
  uint64_t v12;
  char *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t i;
  id v21;
  uint64_t v22;
  NSObject *v23;
  id v24;
  os_log_type_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t j;
  id v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  id v35;
  uint64_t v36;
  id v37;
  os_log_type_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t ObjectType;
  void *v42;
  uint64_t v43;
  void *v44;
  char *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;

  v2 = v0;
  v3 = OBJC_IVAR____TtC13SiriInference15BackgroundQueue_lock;
  v4 = *(id *)&v0[OBJC_IVAR____TtC13SiriInference15BackgroundQueue_lock];
  sub_1C03043FC();

  OUTLINED_FUNCTION_5_1(v5, (unint64_t *)&qword_1ED7283E0);
  sub_1C0304384();
  v6 = MEMORY[0x1E0DEE9D8];
  if ((v53 & 1) == 0 && v51 == *(_QWORD *)&v2[OBJC_IVAR____TtC13SiriInference15BackgroundQueue_queueKeyValue])
  {
    type metadata accessor for InferenceError();
    swift_initStackObject();
    v7 = (void *)sub_1C026A508(0, 0, 0xE000000000000000, 0xD000000000000078, 0x80000001C03329B0, 0x29286573756170, 0xE700000000000000, 52, v6, 2);
    if (qword_1ED728430 != -1)
      swift_once();
    v8 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED729650);
    sub_1C026A800();
    swift_release();
LABEL_50:
    v49 = *(id *)&v2[v3];
    OUTLINED_FUNCTION_12_49();

    return;
  }
  v9 = *(_DWORD *)&v2[OBJC_IVAR____TtC13SiriInference15BackgroundQueue_pauseRequests];
  v10 = __CFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
    goto LABEL_29;
  }
  *(_DWORD *)&v2[OBJC_IVAR____TtC13SiriInference15BackgroundQueue_pauseRequests] = v11;
  if (v11 >= 2)
  {
    if (qword_1ED728430 == -1)
    {
LABEL_9:
      v12 = OUTLINED_FUNCTION_9_0();
      v7 = (void *)__swift_project_value_buffer(v12, (uint64_t)qword_1ED729650);
      v13 = v2;
      OUTLINED_FUNCTION_14_54();
      v14 = OUTLINED_FUNCTION_6_86();
      if (OUTLINED_FUNCTION_13_2(v14))
      {
        *(_DWORD *)OUTLINED_FUNCTION_1_96() = 67109120;
        sub_1C03044B0();

        OUTLINED_FUNCTION_9_73(&dword_1C0039000, v15, v16, "background queue is already paused. count=%u");
        OUTLINED_FUNCTION_5();
      }

      goto LABEL_50;
    }
LABEL_29:
    swift_once();
    goto LABEL_9;
  }
  objc_msgSend(v2, sel_setSuspended_, 1);
  v52 = v6;
  v17 = objc_msgSend(v2, sel_operations);
  OUTLINED_FUNCTION_5_1((uint64_t)v17, &qword_1EF5C12D8);
  v18 = sub_1C0304138();

  v50 = v3;
  if (v18 >> 62)
  {
    OUTLINED_FUNCTION_7_78();
    v19 = sub_1C03047F8();
    OUTLINED_FUNCTION_29();
    if (!v19)
      goto LABEL_31;
  }
  else
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v19)
      goto LABEL_31;
  }
  if (v19 < 1)
  {
    __break(1u);
    goto LABEL_53;
  }
  for (i = 0; i != v19; ++i)
  {
    if ((v18 & 0xC000000000000001) != 0)
      OUTLINED_FUNCTION_17_48();
    v21 = OUTLINED_FUNCTION_16_51();
    if ((objc_msgSend(v21, sel_isExecuting) & 1) != 0)
    {
      if (qword_1ED728430 != -1)
        swift_once();
      v22 = OUTLINED_FUNCTION_9_0();
      v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED729650);
      v24 = v21;
      sub_1C0303B80();
      v25 = OUTLINED_FUNCTION_6_86();
      if (os_log_type_enabled(v23, v25))
      {
        v26 = OUTLINED_FUNCTION_4_0();
        v27 = (_QWORD *)OUTLINED_FUNCTION_1_96();
        *(_DWORD *)v26 = 138543362;
        *(_QWORD *)(v26 + 4) = v24;
        *v27 = v24;
        _os_log_impl(&dword_1C0039000, v23, v25, "cancelling operation %{public}@", (uint8_t *)v26, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727620);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_5();
      }

      objc_msgSend(v24, sel_cancel);
      v28 = v24;
      MEMORY[0x1C3B97010]();
      if (*(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1C030415C();
      sub_1C0304180();
      sub_1C0304150();
    }

  }
LABEL_31:
  OUTLINED_FUNCTION_29();
  if (v52 >> 62)
  {
    OUTLINED_FUNCTION_7_78();
    v29 = sub_1C03047F8();
    OUTLINED_FUNCTION_29();
  }
  else
  {
    v29 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v29)
  {
LABEL_45:
    OUTLINED_FUNCTION_29();
    if (qword_1ED728430 != -1)
      swift_once();
    v43 = OUTLINED_FUNCTION_9_0();
    v44 = (void *)__swift_project_value_buffer(v43, (uint64_t)qword_1ED729650);
    v45 = v2;
    OUTLINED_FUNCTION_14_54();
    v46 = OUTLINED_FUNCTION_6_86();
    if (OUTLINED_FUNCTION_13_2(v46))
    {
      *(_DWORD *)OUTLINED_FUNCTION_1_96() = 67240192;
      sub_1C03044B0();

      OUTLINED_FUNCTION_9_73(&dword_1C0039000, v47, v48, "paused background queue. count=%{public}u");
      OUTLINED_FUNCTION_5();
    }

    v7 = (void *)v52;
    v3 = v50;

    goto LABEL_50;
  }
  if (v29 >= 1)
  {
    for (j = 0; j != v29; ++j)
    {
      if ((v52 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_17_48();
      v31 = OUTLINED_FUNCTION_16_51();
      objc_msgSend(v31, sel_waitUntilFinished);
      swift_getObjectType();
      if (dynamic_cast_existential_1_conditional((uint64_t)v31))
      {
        v33 = v32;
        v34 = qword_1ED728430;
        v35 = v31;
        if (v34 != -1)
          swift_once();
        v36 = OUTLINED_FUNCTION_9_0();
        __swift_project_value_buffer(v36, (uint64_t)qword_1ED729650);
        v37 = OUTLINED_FUNCTION_34_15();
        sub_1C0303B80();
        v38 = OUTLINED_FUNCTION_6_86();
        if (os_log_type_enabled(v34, v38))
        {
          v39 = OUTLINED_FUNCTION_4_0();
          v40 = (_QWORD *)OUTLINED_FUNCTION_1_96();
          *(_DWORD *)v39 = 138543362;
          *(_QWORD *)(v39 + 4) = v37;
          *v40 = v37;
          _os_log_impl(&dword_1C0039000, v34, v38, "re-enqueuing cancelled operation %{public}@", (uint8_t *)v39, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727620);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_5();
        }

        ObjectType = swift_getObjectType();
        v42 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(ObjectType, v33);
        objc_msgSend(v2, sel_addOperation_, v42);

      }
    }
    goto LABEL_45;
  }
LABEL_53:
  __break(1u);
}

void sub_1C021CA20()
{
  char *v0;
  void *v1;
  os_log_type_t v2;
  char *v3;
  uint64_t v4;
  NSObject *v5;
  int v6;
  int v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  id v15;

  v3 = v0;
  v4 = OBJC_IVAR____TtC13SiriInference15BackgroundQueue_lock;
  v5 = *(id *)&v0[OBJC_IVAR____TtC13SiriInference15BackgroundQueue_lock];
  sub_1C03043FC();

  v6 = *(_DWORD *)&v3[OBJC_IVAR____TtC13SiriInference15BackgroundQueue_pauseRequests];
  if (v6)
  {
    v7 = v6 - 1;
    *(_DWORD *)&v3[OBJC_IVAR____TtC13SiriInference15BackgroundQueue_pauseRequests] = v7;
    if (v7)
    {
      if (qword_1ED728430 != -1)
        swift_once();
      v8 = OUTLINED_FUNCTION_9_0();
      __swift_project_value_buffer(v8, (uint64_t)qword_1ED729650);
      OUTLINED_FUNCTION_34_15();
      OUTLINED_FUNCTION_14_54();
      v9 = OUTLINED_FUNCTION_6_86();
      if (OUTLINED_FUNCTION_13_2(v9))
      {
        v10 = (uint8_t *)OUTLINED_FUNCTION_1_96();
        *(_DWORD *)v10 = 67240192;
        sub_1C03044B0();

        _os_log_impl(&dword_1C0039000, v5, v2, "BackgroundQueue still paused. count=%{public}u", v10, 8u);
        goto LABEL_12;
      }

    }
    else
    {
      objc_msgSend(v3, sel_setSuspended_, 0);
      if (qword_1ED728430 != -1)
        swift_once();
      v11 = OUTLINED_FUNCTION_9_0();
      v5 = __swift_project_value_buffer(v11, (uint64_t)qword_1ED729650);
      sub_1C0303B80();
      v12 = OUTLINED_FUNCTION_6_86();
      if (os_log_type_enabled(v5, v12))
      {
        v13 = (uint8_t *)OUTLINED_FUNCTION_4_0();
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_1C0039000, v5, v12, "resuming BackgroundQueue", v13, 2u);
LABEL_12:
        OUTLINED_FUNCTION_5();
      }

    }
    v14 = *(id *)&v3[v4];
    OUTLINED_FUNCTION_12_49();

  }
  else
  {
    v15 = *(id *)&v3[v4];
    OUTLINED_FUNCTION_12_49();

  }
}

uint64_t sub_1C021CC40(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v3 = v1;
  v29 = a1;
  v30 = sub_1C0303CB8();
  v33 = *(_QWORD *)(v30 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_6_0();
  v7 = v6 - v5;
  v8 = sub_1C0303D00();
  v31 = *(_QWORD *)(v8 - 8);
  v32 = v8;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_5_7();
  v10 = sub_1C0303CA0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_6_0();
  v14 = (_QWORD *)(v13 - v12);
  v15 = sub_1C0303D30();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v29 - v20;
  sub_1C0303D0C();
  *v14 = v29;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v14, *MEMORY[0x1E0DEF4A0], v10);
  sub_1C0303D18();
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v14, v10);
  v22 = *(void (**)(char *, uint64_t))(v16 + 8);
  v23 = v15;
  v22(v19, v15);
  v29 = *(_QWORD *)&v3[OBJC_IVAR____TtC13SiriInference15BackgroundQueue_queue];
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v3;
  aBlock[4] = sub_1C021CF98;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C007B870;
  aBlock[3] = &block_descriptor_21;
  v25 = _Block_copy(aBlock);
  v26 = v3;
  sub_1C0303CDC();
  v34 = MEMORY[0x1E0DEE9D8];
  sub_1C0068358((unint64_t *)&qword_1ED726EC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726EF0);
  sub_1C0073CA8((unint64_t *)&qword_1ED726EF8, &qword_1ED726EF0);
  v27 = v30;
  sub_1C0304588();
  MEMORY[0x1C3B97274](v21, v2, v7, v25);
  _Block_release(v25);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v7, v27);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v2, v32);
  v22(v21, v23);
  return swift_release();
}

id BackgroundQueue.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BackgroundQueue();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C021CF74()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C021CF98()
{
  sub_1C021CA20();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t type metadata accessor for BackgroundQueue()
{
  return objc_opt_self();
}

uint64_t method lookup function for BackgroundQueue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BackgroundQueue.pause()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of BackgroundQueue.resume()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of BackgroundQueue.resumeAfter(seconds:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t OUTLINED_FUNCTION_1_96()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_6_86()
{
  return sub_1C03042DC();
}

uint64_t OUTLINED_FUNCTION_7_78()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_9_73(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint8_t *v4;
  NSObject *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v5, v6, a4, v4, 8u);
}

uint64_t OUTLINED_FUNCTION_12_49()
{
  return sub_1C0304408();
}

uint64_t OUTLINED_FUNCTION_14_54()
{
  return sub_1C0303B80();
}

id OUTLINED_FUNCTION_16_51()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(v0 + 8 * v1 + 32);
}

void OUTLINED_FUNCTION_17_48()
{
  JUMPOUT(0x1C3B975ECLL);
}

void sub_1C021D0B4()
{
  qword_1ED729588 = (uint64_t)&unk_1E7987BB8;
}

uint64_t sub_1C021D0C8()
{
  uint64_t v0;

  v0 = swift_retain();
  return sub_1C0056128(v0);
}

uint64_t sub_1C021D0FC()
{
  uint64_t v0;
  uint64_t result;

  result = sub_1C006890C(0xD00000000000006FLL, 0x80000001C0332AC0, MEMORY[0x1E0DEE9D8]);
  if (!v0)
    return swift_release();
  return result;
}

uint64_t dispatch thunk of MemorableIntent.canPersistInSiriRemembers()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MemorableIntent.memorableParameters()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t destroy for PostSiriEngagementPublisher()
{
  swift_unknownObjectRelease();
  return swift_release();
}

_QWORD *_s13SiriInference27PostSiriEngagementPublisherVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for PostSiriEngagementPublisher(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for PostSiriEngagementPublisher(_OWORD *a1, _OWORD *a2)
{
  swift_unknownObjectRelease();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for PostSiriEngagementPublisher()
{
  return &type metadata for PostSiriEngagementPublisher;
}

uint64_t sub_1C021D268(uint64_t a1, uint64_t a2, uint64_t a3, uint8_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;

  v54 = a4;
  v6 = sub_1C0303964();
  v52 = *(_QWORD *)(v6 - 8);
  v53 = v6;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_53();
  v50 = v8;
  v9 = sub_1C0301CFC();
  v55 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_53();
  v51 = v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C12F0);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728360);
  OUTLINED_FUNCTION_121();
  v17 = MEMORY[0x1E0C80A78](v16);
  v56 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v48 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v48 - v22;
  v24 = swift_projectBox();
  v25 = sub_1C030394C() == 0;
  v49 = (_BYTE *)(a2 + 16);
  v26 = a1;
  OUTLINED_FUNCTION_25_27();
  *(_BYTE *)(a2 + 16) = v25;
  sub_1C0303958();
  OUTLINED_FUNCTION_1_97((uint64_t)v23);
  swift_beginAccess();
  v27 = (uint64_t)&v15[*(int *)(v12 + 48)];
  sub_1C0075A10((uint64_t)v23, (uint64_t)v15);
  sub_1C0075A10(v24, v27);
  OUTLINED_FUNCTION_2_100((uint64_t)v15);
  if (v28)
  {
    sub_1C0056C9C((uint64_t)v23, &qword_1ED728360);
    OUTLINED_FUNCTION_2_100(v27);
    if (v28)
    {
      sub_1C0056C9C((uint64_t)v15, &qword_1ED728360);
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  sub_1C0075A10((uint64_t)v15, (uint64_t)v21);
  OUTLINED_FUNCTION_2_100(v27);
  if (v28)
  {
    sub_1C0056C9C((uint64_t)v23, &qword_1ED728360);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v21, v9);
LABEL_9:
    sub_1C0056C9C((uint64_t)v15, &qword_1EF5C12F0);
LABEL_14:
    v43 = v54 + 16;
    v44 = sub_1C030394C();
    OUTLINED_FUNCTION_25_27();
    if (!__CFADD__(*v43, v44))
    {
      *v43 += v44;
      goto LABEL_18;
    }
    __break(1u);
    goto LABEL_20;
  }
  v29 = v55;
  v30 = v51;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 32))(v51, v27, v9);
  sub_1C021D72C();
  v31 = sub_1C0303E80();
  v32 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v32(v30, v9);
  sub_1C0056C9C((uint64_t)v23, &qword_1ED728360);
  v32((uint64_t)v21, v9);
  sub_1C0056C9C((uint64_t)v15, &qword_1ED728360);
  if ((v31 & 1) == 0)
    goto LABEL_14;
LABEL_11:
  if (qword_1ED728430 != -1)
LABEL_20:
    swift_once();
  v33 = sub_1C0303B98();
  __swift_project_value_buffer(v33, (uint64_t)qword_1ED729650);
  v35 = v52;
  v34 = v53;
  v36 = v50;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v50, v26, v53);
  v37 = sub_1C0303B80();
  v38 = sub_1C03042F4();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v39 = 134217984;
    v54 = v39 + 4;
    v40 = v51;
    sub_1C0303958();
    sub_1C0301C18();
    v42 = v41;
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v40, v9);
    v57 = v42;
    sub_1C03044B0();
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v36, v53);
    _os_log_impl(&dword_1C0039000, v37, v38, "The PSE returned lastSessionEndDate does not change: %f", v39, 0xCu);
    MEMORY[0x1C3B98378](v39, -1, -1);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v34);
  }

  v45 = v49;
  OUTLINED_FUNCTION_25_27();
  *v45 = 1;
LABEL_18:
  v46 = (uint64_t)v56;
  sub_1C0303958();
  OUTLINED_FUNCTION_1_97(v46);
  OUTLINED_FUNCTION_25_27();
  return sub_1C0075EB8(v46, v24);
}

unint64_t sub_1C021D72C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED725F60;
  if (!qword_1ED725F60)
  {
    v1 = sub_1C0301CFC();
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0CB08B8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED725F60);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_97(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_2_100(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

int64_t sub_1C021D798(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t result;
  int64_t v15;
  int v16;
  int v17;
  char v18;
  char v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;

  v34 = a3;
  v33 = sub_1C03016E4();
  v5 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v32 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v7);
  v31 = (char *)v27 - v8;
  v9 = sub_1C0301CFC();
  v29 = *(_QWORD *)(v9 - 8);
  v30 = v9;
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_6_0();
  v35 = v11 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  v13 = MEMORY[0x1E0DEE9D8];
  if (!v12)
    return v13;
  v27[1] = v3;
  v36 = MEMORY[0x1E0DEE9D8];
  sub_1C00B2014();
  result = sub_1C00824B4(a1);
  v15 = result;
  v17 = v16;
  v19 = v18 & 1;
  v28 = a1 + 56;
  while ((v15 & 0x8000000000000000) == 0 && v15 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(v28 + (((unint64_t)v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
      goto LABEL_15;
    if (*(_DWORD *)(a1 + 36) != v17)
      goto LABEL_16;
    v20 = v31;
    v21 = v33;
    (*(void (**)(char *, int64_t, uint64_t))(v5 + 16))(v31, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v5 + 72) * v15, v33);
    v22 = v32;
    v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v32, v20, v21);
    v34(v23);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v22, v21);
    v13 = v36;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C00B2014();
      v13 = v36;
    }
    v24 = *(_QWORD *)(v13 + 16);
    if (v24 >= *(_QWORD *)(v13 + 24) >> 1)
    {
      sub_1C00B2014();
      v13 = v36;
    }
    *(_QWORD *)(v13 + 16) = v24 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v29 + 32))(v13+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v29 + 72) * v24, v35, v30);
    v36 = v13;
    result = sub_1C0082610(v15, v17, v19 & 1, a1);
    v15 = result;
    v17 = v25;
    v19 = v26 & 1;
    if (!--v12)
    {
      sub_1C00A6E5C(result, v25, v26 & 1);
      return v13;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1C021DA28(uint64_t a1, _BYTE *a2)
{
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  char v8;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char v13;

  if (*(unsigned __int8 *)(a1 + 16) != a2[16])
    goto LABEL_6;
  if (*(unsigned __int8 *)(a1 + 50) != a2[50])
    goto LABEL_6;
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_BYTE *)(a1 + 48);
  v11 = *(_OWORD *)(a1 + 24);
  v12 = v4;
  v13 = v5;
  OUTLINED_FUNCTION_22_43();
  sub_1C022CB64((uint64_t)&v11, (uint64_t)&v10);
  if ((v6 & 1) == 0)
    goto LABEL_6;
  sub_1C025DF14(*(_BYTE *)(a1 + 49), a2[49]);
  if ((v7 & 1) != 0)
    v8 = *(_BYTE *)(a1 + 54) ^ a2[54] ^ 1;
  else
LABEL_6:
    v8 = 0;
  return v8 & 1;
}

uint64_t sub_1C021DAF4()
{
  sub_1C0304B04();
  sub_1C0078A80();
  return sub_1C0304B40();
}

uint64_t sub_1C021DB30()
{
  return sub_1C021DAF4();
}

uint64_t sub_1C021DB50()
{
  return sub_1C0078A80();
}

uint64_t sub_1C021DB70()
{
  sub_1C0304B04();
  sub_1C0078A80();
  return sub_1C0304B40();
}

uint64_t sub_1C021DBAC(uint64_t *a1, _BYTE **a2)
{
  return sub_1C021DA28(*a1, *a2) & 1;
}

uint64_t OUTLINED_FUNCTION_0_118()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_1_98()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_2_101(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
  return sub_1C0301F00();
}

uint64_t OUTLINED_FUNCTION_3_110()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_5_79(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
}

uint64_t OUTLINED_FUNCTION_6_87()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_7_79(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return sub_1C0301EC4();
}

uint64_t OUTLINED_FUNCTION_10_66()
{
  return sub_1C0301EAC();
}

uint64_t OUTLINED_FUNCTION_12_50()
{
  return sub_1C0301954();
}

uint64_t OUTLINED_FUNCTION_13_50()
{
  return sub_1C03047B0();
}

uint64_t OUTLINED_FUNCTION_14_55()
{
  return sub_1C0301918();
}

uint64_t OUTLINED_FUNCTION_16_52()
{
  return sub_1C0301EAC();
}

char *OUTLINED_FUNCTION_18_38(__n128 *a1, __n128 a2)
{
  uint64_t v2;

  a1[1] = a2;
  return (char *)a1 + v2;
}

__n128 OUTLINED_FUNCTION_22_43()
{
  uint64_t v0;

  return *(__n128 *)(v0 + 24);
}

uint64_t OUTLINED_FUNCTION_23_37()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_30_31(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_35_37()
{
  return swift_allocObject();
}

ValueMetadata *type metadata accessor for RemindersDateTimeTaskSuccessEvaluable()
{
  return &type metadata for RemindersDateTimeTaskSuccessEvaluable;
}

uint64_t sub_1C021DF54(void *a1, uint64_t a2)
{
  uint64_t p_base_props;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t i;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v24;
  id v25;
  void *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;

  p_base_props = (uint64_t)&ContactRankerInput.base_props;
  v5 = objc_msgSend(a1, sel_intent);
  objc_opt_self();
  v6 = (void *)swift_dynamicCastObjCClass();
  if (v6 && (v7 = objc_msgSend(v6, sel_temporalEventTrigger), v7, v7))
  {
    v8 = sub_1C012A588(a1);
    if (v9)
    {
      v29 = v8;
      v30 = v9;
      v10 = sub_1C012A6B0(a2);
      v27 = v5;
      if (v10 >> 62)
        goto LABEL_32;
      for (i = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = sub_1C03047F8())
      {
        v12 = v10 & 0xC000000000000001;
        v13 = 4;
        v28 = v10;
        while (1)
        {
          v14 = v12 ? (id)MEMORY[0x1C3B975EC](v13 - 4, v10) : *(id *)(v10 + 8 * v13);
          v15 = v14;
          v16 = v13 - 3;
          if (__OFADD__(v13 - 4, 1))
            break;
          v17 = objc_msgSend(v14, *(SEL *)(p_base_props + 1776));
          objc_opt_self();
          v18 = (void *)swift_dynamicCastObjCClass();
          if (!v18)
          {
            v24 = v15;
            goto LABEL_23;
          }
          v19 = v18;
          v20 = objc_msgSend(v18, sel_targetTask);
          if (!v20)
          {
            v24 = v17;
            v17 = v15;
            goto LABEL_23;
          }
          v21 = sub_1C013221C(v20);
          if (!v22)
          {
            v24 = v17;
            v17 = v15;
            goto LABEL_23;
          }
          v10 = i;
          i = v12;
          v12 = p_base_props;
          if (v21 == v29 && v22 == v30)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            p_base_props = sub_1C0304A08();
            swift_bridgeObjectRelease();
            if ((p_base_props & 1) == 0)
            {
              v17 = v15;
              OUTLINED_FUNCTION_0_80();
LABEL_23:

              goto LABEL_24;
            }
          }
          v25 = objc_msgSend(v19, sel_temporalEventTrigger, v27, v28);

          OUTLINED_FUNCTION_0_80();
          if (v25)
          {
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            return 2;
          }
LABEL_24:
          ++v13;
          if (v16 == i)
            goto LABEL_33;
        }
        __break(1u);
LABEL_32:
        ;
      }
LABEL_33:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

    }
    return 1;
  }
  else
  {

    return 0;
  }
}

uint64_t sub_1C021E1E0(void *a1, uint64_t a2)
{
  return sub_1C021DF54(a1, a2);
}

uint64_t sub_1C021E1F4(uint64_t a1, uint64_t a2, char *a3, double a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  double v30;
  __int128 v31;
  char v32;
  uint64_t v33;
  uint64_t v34;

  v7 = *a3;
  v8 = MEMORY[0x1E0DEE9E8];
  v9 = MEMORY[0x1E0DEE9E8];
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
  {
    if (sub_1C03047F8())
    {
      sub_1C011F678(MEMORY[0x1E0DEE9D8]);
      v9 = v28;
    }
    else
    {
      v9 = MEMORY[0x1E0DEE9E8];
    }
  }
  v34 = v9;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v11 = *(unsigned __int8 *)(v10 + 89);
    if (v11 != 7)
    {
      v12 = *(_QWORD *)(a2 + 16);
      if (v12)
      {
        v13 = *(unsigned __int8 *)(v12 + 89);
        if (v13 != 7)
        {
          v33 = v8;
          if (v13 < v11)
            v13 += 7;
          v14 = v13 >= v11;
          v15 = v13 - v11;
          if (v14)
          {
            v16 = v15 + 1;
            v17 = v11;
            do
            {
              sub_1C022DF80((unsigned __int8 *)&v30, v17 % 7);
              ++v17;
              --v16;
            }
            while (v16);
            v8 = v33;
          }
          if (*(_QWORD *)(v8 + 16))
          {
            v30 = a4;
            *(_QWORD *)&v31 = 11;
            *((_QWORD *)&v31 + 1) = v8;
            v32 = 5;
            v29 = v7;
            OUTLINED_FUNCTION_41_5();
            v18 = OUTLINED_FUNCTION_7_14();
            v21 = OUTLINED_FUNCTION_0_119(v18, (uint64_t)&v30, v19, v20, &v29);
            OUTLINED_FUNCTION_2_102(v21, v22, v23);
            swift_release();
            v30 = dbl_1C031D410[(char)v11];
            v31 = xmmword_1C0307CF0;
            v32 = 2;
            v29 = v7;
            OUTLINED_FUNCTION_7_14();
            v24 = sub_1C0078A30(6, (uint64_t)&v30, 0, 0, &v29, 1, 1, 0);
            OUTLINED_FUNCTION_2_102(v24, v25, v26);
            swift_release();
            return v34;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
      }
    }
  }
  return v9;
}

void sub_1C021E3CC(_BYTE *a1, uint64_t a2, char *a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  uint64_t v10;
  char v11;

  v3 = *a3;
  if (*a1)
  {
    sub_1C011F69C();
    v9 = xmmword_1C0307D00;
    v10 = v4;
  }
  else
  {
    v9 = xmmword_1C031D400;
    v10 = MEMORY[0x1E0DEE9E8];
  }
  v11 = 5;
  v8 = v3;
  OUTLINED_FUNCTION_41_5();
  v5 = OUTLINED_FUNCTION_7_14();
  OUTLINED_FUNCTION_0_119(v5, (uint64_t)&v9, v6, v7, &v8);
  OUTLINED_FUNCTION_48_4();
}

void sub_1C021E460(uint64_t a1, char *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD v9[3];
  char v10;

  v2 = *(unsigned __int8 *)(a1 + 25);
  if (v2 != 13)
  {
    v3 = *a2;
    v4 = *(_QWORD *)(a1 + 16);
    if (*(_BYTE *)(a1 + 24))
      v4 = 0x3FF0000000000000;
    v9[0] = v4;
    v9[1] = v2;
    v9[2] = MEMORY[0x1E0DEE9E8];
    v10 = 5;
    v8 = v3;
    OUTLINED_FUNCTION_41_5();
    v5 = OUTLINED_FUNCTION_7_14();
    OUTLINED_FUNCTION_0_119(v5, (uint64_t)v9, v6, v7, &v8);
  }
  OUTLINED_FUNCTION_48_4();
}

void sub_1C021E4D8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, int a5, __int16 a6, uint64_t a7, int a8, uint64_t a9, _QWORD *a10)
{
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v49;
  uint64_t v50;
  char v51;
  char v52;

  v13 = a2[2];
  if (v13)
  {
    v14 = *(unsigned __int8 *)(v13 + 89);
    if (v14 != 7)
    {
      sub_1C022DF80((unsigned __int8 *)&v49, v14);
      goto LABEL_22;
    }
  }
  v15 = a2[7];
  if (v15 && ((v16 = *(unsigned __int8 *)(v15 + 56), v16 == 21) || v16 == 35)
    || v13
    && (v17 = *(_QWORD *)(v13 + 112)) != 0
    && ((v18 = *(unsigned __int8 *)(v17 + 56), v18 != 35) ? (v19 = v18 == 21) : (v19 = 1), v19)
    || v15 && *(_BYTE *)(v15 + 56) == 19
    || v13 && (v20 = *(_QWORD *)(v13 + 112)) != 0 && *(_BYTE *)(v20 + 56) == 19)
  {
    sub_1C011F69C();
    v49 = xmmword_1C0307D00;
    v50 = v21;
    v51 = 5;
    v52 = a5;
    OUTLINED_FUNCTION_41_5();
    v22 = OUTLINED_FUNCTION_7_14();
    v25 = OUTLINED_FUNCTION_0_119(v22, (uint64_t)&v49, v23, v24, &v52);
    sub_1C022DCFC((uint64_t *)&v49, v25);
LABEL_21:
    swift_release();
    goto LABEL_22;
  }
  if (v15)
  {
    v38 = *(_QWORD *)(v15 + 24);
    if (v38)
    {
      v39 = *(_QWORD *)(v15 + 32);
      if (v39)
      {
        LOBYTE(v49) = a5;
        swift_retain();
        swift_retain();
        swift_retain();
        v40 = sub_1C021E1F4(v38, v39, (char *)&v49, 1.0);
        OUTLINED_FUNCTION_5_80(v40);
        swift_release();
LABEL_40:
        swift_release();
        goto LABEL_21;
      }
    }
  }
  if (v13)
  {
    v41 = *(_QWORD *)(v13 + 112);
    if (v41)
    {
      v42 = *(_QWORD *)(v41 + 24);
      if (v42)
      {
        v43 = *(_QWORD *)(v41 + 32);
        if (v43)
        {
          LOBYTE(v49) = a5;
          swift_retain();
          swift_retain();
          swift_retain();
          v44 = sub_1C021E1F4(v42, v43, (char *)&v49, 1.0);
          OUTLINED_FUNCTION_5_80(v44);
          swift_release();
          goto LABEL_40;
        }
      }
    }
  }
LABEL_22:
  v26 = a2[3];
  if (v26)
  {
    v27 = a2[7];
    if (v27 && (v28 = *(unsigned __int8 *)(v27 + 56), v28 != 38))
    {
      v45 = *(_QWORD *)(v26 + 16);
      v46 = a7;
      v29 = *(_BYTE *)(v26 + 24);
      v30 = *(_QWORD *)(v26 + 32);
      v31 = *(_BYTE *)(v26 + 40);
      v32 = *(_QWORD *)(v26 + 48);
      v33 = *(_BYTE *)(v26 + 56);
      v52 = v28;
      sub_1C021E810(&v52, (char *)&v49);
      v34 = v49;
      if (v49 == 2)
        v34 = *(_BYTE *)(v26 + 57);
      LOBYTE(v49) = v34;
      v52 = *(_BYTE *)(v26 + 58);
      v35 = *(_QWORD *)(v26 + 64);
      v36 = *(_BYTE *)(v26 + 72);
      type metadata accessor for DateTime.Time();
      swift_allocObject();
      v26 = DateTime.Time.init(withHour:minute:second:meridiem:definedValue:occurringIn:setByUser:)(v45, v29, v30, v31, v32, v33, (char *)&v49, &v52, v35, v36);
      swift_retain();
      a7 = v46;
    }
    else
    {
      swift_retain();
    }
    __swift_project_boxed_opaque_existential_1(a10, a10[3]);
    sub_1C00C98E8(v26, a6 & 0x1FF, a7, a8 & 0x10101, a9, 0, a5);
    OUTLINED_FUNCTION_5_80(v37);
    swift_release();
  }
}

char *sub_1C021E810@<X0>(char *result@<X0>, char *a2@<X8>)
{
  unint64_t v2;
  char v3;

  v2 = *result;
  if (v2 > 0x18)
    v3 = 2;
  else
    v3 = byte_1C031D448[v2];
  *a2 = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_0_119(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  return sub_1C0078A30(13, a2, 2, 3, a5, 1, 1, 0);
}

void OUTLINED_FUNCTION_2_102(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1C022DCFC((uint64_t *)va, a1);
}

uint64_t OUTLINED_FUNCTION_5_80(uint64_t result)
{
  return sub_1C007901C(result);
}

uint64_t *sub_1C021E86C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C0303580();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    v10 = v9;
  }
  return a1;
}

uint64_t sub_1C021E8F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = sub_1C0303580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  return a1;
}

uint64_t sub_1C021E960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C0303580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1C021E9BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = sub_1C0303580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  return a1;
}

uint64_t sub_1C021EA20()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C021EA2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_2_103();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_1C021EAA0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C021EAAC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_2_103();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1C021EB1C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C0303580();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C021EB90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_1C0303FD0();
  sub_1C030355C();
  swift_bridgeObjectRelease();
  if (v4)
  {
    sub_1C0301D08();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v2 = OUTLINED_FUNCTION_40_1();
    return __swift_storeEnumTagSinglePayload(a1, 1, 1, v2);
  }
}

uint64_t sub_1C021EC64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = OUTLINED_FUNCTION_1_99();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = OUTLINED_FUNCTION_40_1();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v0 + v3;
  v9 = OUTLINED_FUNCTION_2_103();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_1_99()
{
  return type metadata accessor for SELFLoggingService();
}

uint64_t OUTLINED_FUNCTION_2_103()
{
  return sub_1C0303580();
}

void type metadata accessor for BiomeNowPlayingEntitySignal.PartialMatch()
{
  OUTLINED_FUNCTION_17_2();
}

void type metadata accessor for BiomeNowPlayingEntitySignal.ExactMatch()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C021ED80()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1C021EDC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1C021EE44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C021EF08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  return a1;
}

void type metadata accessor for BiomeNowPlayingEntitySignal()
{
  OUTLINED_FUNCTION_17_2();
}

int64_t sub_1C021EF94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t result;
  int64_t v7;
  int v8;
  int v9;
  char v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  double v18;
  uint64_t v19;
  double v20;
  double v21;
  BOOL v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v3 = a1;
  v35 = MEMORY[0x1E0DEE9D8];
  sub_1C00B1AF4();
  v4 = a2;
  v5 = v35;
  result = sub_1C00824B4(v3);
  v7 = result;
  v9 = v8;
  v11 = v10 & 1;
  v32 = v3 + 56;
  v31 = v3;
  while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(_BYTE *)(v3 + 32))
  {
    if (((*(_QWORD *)(v32 + (((unint64_t)v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
      goto LABEL_29;
    if (*(_DWORD *)(v3 + 36) != v9)
      goto LABEL_30;
    v34 = v11;
    v12 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v7);
    v14 = *v12;
    v13 = v12[1];
    v15 = *(_QWORD *)(v4 + 16);
    swift_bridgeObjectRetain();
    v33 = v14;
    if (v15)
    {
      swift_bridgeObjectRetain();
      v16 = sub_1C00B3C3C(v14, v13);
      if ((v17 & 1) != 0)
      {
        v18 = *(double *)(*(_QWORD *)(v4 + 56) + 8 * v16);
        swift_bridgeObjectRelease();
        v19 = qword_1EF5B7FF8;
        swift_bridgeObjectRetain();
        if (v19 != -1)
          swift_once();
        v20 = *(double *)&qword_1EF5C14F8;
        swift_bridgeObjectRelease();
        v21 = round(v18 * v20);
        v23 = v21 >= 9.22337204e18 || v21 <= -9.22337204e18;
        v24 = llround(v18 * v20);
        if (v23)
          v25 = 0;
        else
          v25 = v24;
        goto LABEL_22;
      }
      swift_bridgeObjectRelease();
    }
    v25 = 0;
LABEL_22:
    v26 = *(_QWORD *)(v35 + 16);
    if (v26 >= *(_QWORD *)(v35 + 24) >> 1)
    {
      sub_1C00B1AF4();
      v4 = a2;
    }
    *(_QWORD *)(v35 + 16) = v26 + 1;
    v27 = (_QWORD *)(v35 + 24 * v26);
    v27[4] = v33;
    v27[5] = v13;
    v27[6] = v25;
    v3 = v31;
    result = sub_1C0082610(v7, v9, v34 & 1, v31);
    v7 = result;
    v9 = v28;
    v11 = v29 & 1;
    if (!--v2)
    {
      sub_1C00A6E5C(result, v28, v11);
      swift_bridgeObjectRelease();
      return v5;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C021F20C()
{
  swift_bridgeObjectRetain();
  sub_1C0303E20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C0170110();
  return swift_bridgeObjectRelease();
}

void sub_1C021F274(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  BOOL v8;

  v8 = a1 == a4 && a2 == a5;
  if (v8 || (sub_1C0304A08() & 1) != 0)
    sub_1C00F03F4(a3, a6);
}

uint64_t sub_1C021F2CC()
{
  sub_1C0304B04();
  swift_bridgeObjectRetain();
  sub_1C0303E20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C0170110();
  swift_bridgeObjectRelease();
  return sub_1C0304B40();
}

uint64_t sub_1C021F350()
{
  return sub_1C021F2CC();
}

uint64_t sub_1C021F35C()
{
  return sub_1C021F20C();
}

uint64_t sub_1C021F368()
{
  sub_1C0304B04();
  swift_bridgeObjectRetain();
  sub_1C0303E20();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_47();
  sub_1C0170110();
  swift_bridgeObjectRelease();
  return sub_1C0304B40();
}

void sub_1C021F3E0(uint64_t a1, uint64_t a2)
{
  sub_1C021F274(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD **)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD **)(a2 + 16));
}

double sub_1C021F3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double result;
  char v6;

  result = 1.0;
  if (a3 != a1 || a4 != a2)
  {
    v6 = sub_1C0304A08();
    result = 0.0;
    if ((v6 & 1) != 0)
      return 1.0;
  }
  return result;
}

uint64_t sub_1C021F44C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = nullsub_1(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

double sub_1C021F470(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1C021F3FC(a1, a2, *v2, v2[1]);
}

uint64_t sub_1C021F478()
{
  uint64_t result;

  type metadata accessor for StopwordsRemover();
  swift_allocObject();
  result = sub_1C02CE26C(300, 0);
  qword_1EF5C14F0 = result;
  return result;
}

uint64_t sub_1C021F4BC()
{
  uint64_t v0;

  if (qword_1EF5B7FF0 != -1)
    swift_once();
  v0 = sub_1C02CE2D0();
  swift_bridgeObjectRelease();
  return sub_1C01AACEC(v0);
}

uint64_t sub_1C021F530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  if (qword_1EF5B7FF0 != -1)
    swift_once();
  v4 = sub_1C02CE2D0();
  v5 = sub_1C01AACEC(v4);
  swift_bridgeObjectRetain();
  sub_1C02207D4(v5, a3);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1C021F604@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1C021F4BC();
  *a1 = result;
  return result;
}

uint64_t sub_1C021F628(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1C021F530(a1, a2, *v2);
}

void sub_1C021F630()
{
  qword_1EF5C14F8 = 0x408F400000000000;
}

uint64_t sub_1C021F644()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  OUTLINED_FUNCTION_47();
  return v1;
}

uint64_t sub_1C021F66C(uint64_t a1, uint64_t a2)
{
  void (**v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v17 = a1;
  v18 = a2;
  v3 = OUTLINED_FUNCTION_8_0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  v2[8](v8);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v10, v3);
  v11 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v12 = (v5 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v13 + v11, v7, v3);
  memcpy((void *)(v13 + v12), v2, 0x58uLL);
  v14 = (_QWORD *)(v13 + ((v12 + 95) & 0xFFFFFFFFFFFFFFF8));
  v15 = v18;
  *v14 = v17;
  v14[1] = v15;
  sub_1C0220FE4((uint64_t)v2);
  swift_retain();
  sub_1C03023C8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
}

uint64_t sub_1C021F7C8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;

  v7 = sub_1C030205C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)&v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = a2;
  v18 = a3;
  swift_bridgeObjectRetain();
  sub_1C0270EF4();
  v12 = sub_1C021FAEC(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v13 = swift_bridgeObjectRetain();
  v14 = sub_1C021EF94(v13, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v10 = sub_1C02CA948(v14);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DA4720], v7);
  a4(v10);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

BOOL sub_1C021F908(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  void *v16;
  void (*v17)(char *, char *, uint64_t);
  double v18;
  double v19;
  uint64_t v21;
  uint64_t v22;

  v22 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728360);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C0301CFC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v21 - v12;
  v14 = *a1;
  v15 = objc_msgSend(v14, sel_absoluteTimestamp);
  if (!v15)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v7);
    goto LABEL_6;
  }
  v16 = v15;
  sub_1C0301CD8();

  v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v6, v11, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
LABEL_6:
    sub_1C00CF854((uint64_t)v6);
    return 0;
  }
  v17(v13, v6, v7);
  if (objc_msgSend(v14, sel_playbackState) == 1)
  {
    sub_1C0301C48();
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return v19 < *(double *)(v22 + 40);
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  return 0;
}

uint64_t sub_1C021FAEC(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  unint64_t v65;
  uint64_t v66;
  _BOOL8 v67;
  char v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t result;
  _QWORD v85[5];
  unint64_t v86;
  __int128 v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  __int128 v92;
  _QWORD *v93;
  uint64_t v94[6];

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_47;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_1C03047F8())
  {
    v86 = v1;
    v91 = v2 & 0xC000000000000001;
    v4 = MEMORY[0x1E0DEE9D8];
    v5 = 4;
    v87 = xmmword_1C03067E0;
    v89 = v2;
    v88 = v3;
    while (1)
    {
      v6 = v91 ? (id)MEMORY[0x1C3B975EC](v5 - 4, v2) : *(id *)(v2 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = sub_1C00D8030(v6);
      if (v10)
      {
        v11 = v9;
        v12 = v10;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727D78);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v87;
        *(_QWORD *)(inited + 32) = sub_1C009F8D4(v7, (SEL *)&selRef_title);
        *(_QWORD *)(inited + 40) = v14;
        *(_QWORD *)(inited + 48) = sub_1C009F8D4(v7, (SEL *)&selRef_artist);
        *(_QWORD *)(inited + 56) = v15;
        *(_QWORD *)(inited + 64) = sub_1C009F8D4(v7, (SEL *)&selRef_album);
        *(_QWORD *)(inited + 72) = v16;
        v17 = *(_QWORD *)(inited + 40);
        *(_QWORD *)&v92 = v4;
        v90 = v11;
        if (!v17)
          goto LABEL_16;
        v18 = HIBYTE(v17) & 0xF;
        if ((v17 & 0x2000000000000000) == 0)
          v18 = *(_QWORD *)(inited + 32) & 0xFFFFFFFFFFFFLL;
        if (v18)
        {
          v19 = sub_1C0303F10();
          v21 = v20;
          sub_1C00500A0();
          v23 = v22;
          v24 = *(_QWORD *)(v22 + 16);
          if (v24 >= *(_QWORD *)(v22 + 24) >> 1)
          {
            sub_1C00500A0();
            v23 = v44;
          }
          *(_QWORD *)(v23 + 16) = v24 + 1;
          v25 = v23 + 16 * v24;
          *(_QWORD *)(v25 + 32) = v19;
          *(_QWORD *)(v25 + 40) = v21;
          v4 = v92;
        }
        else
        {
LABEL_16:
          v23 = MEMORY[0x1E0DEE9D8];
        }
        v26 = *(_QWORD *)(inited + 56);
        if (v26)
        {
          v27 = HIBYTE(v26) & 0xF;
          if ((v26 & 0x2000000000000000) == 0)
            v27 = *(_QWORD *)(inited + 48) & 0xFFFFFFFFFFFFLL;
          if (v27)
          {
            v28 = sub_1C0303F10();
            v30 = v29;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C00500A0();
              v23 = v45;
            }
            v31 = *(_QWORD *)(v23 + 16);
            if (v31 >= *(_QWORD *)(v23 + 24) >> 1)
            {
              sub_1C00500A0();
              v23 = v46;
            }
            *(_QWORD *)(v23 + 16) = v31 + 1;
            v32 = v23 + 16 * v31;
            *(_QWORD *)(v32 + 32) = v28;
            *(_QWORD *)(v32 + 40) = v30;
            v4 = v92;
          }
        }
        v33 = *(_QWORD *)(inited + 72);
        if (v33)
        {
          v34 = HIBYTE(v33) & 0xF;
          if ((v33 & 0x2000000000000000) == 0)
            v34 = *(_QWORD *)(inited + 64) & 0xFFFFFFFFFFFFLL;
          if (v34)
          {
            v35 = sub_1C0303F10();
            v37 = v36;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C00500A0();
              v23 = v47;
            }
            v38 = *(_QWORD *)(v23 + 16);
            if (v38 >= *(_QWORD *)(v23 + 24) >> 1)
            {
              sub_1C00500A0();
              v23 = v48;
            }
            *(_QWORD *)(v23 + 16) = v38 + 1;
            v39 = v23 + 16 * v38;
            *(_QWORD *)(v39 + 32) = v35;
            *(_QWORD *)(v39 + 40) = v37;
            v4 = v92;
          }
        }
        swift_setDeallocating();
        sub_1C004F02C();
        v1 = *(_QWORD *)(v23 + 16);

        if (v1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C00AC7A8();
            v4 = v42;
          }
          v40 = *(_QWORD *)(v4 + 16);
          v1 = v40 + 1;
          if (v40 >= *(_QWORD *)(v4 + 24) >> 1)
          {
            sub_1C00AC7A8();
            v4 = v43;
          }
          *(_QWORD *)(v4 + 16) = v1;
          v41 = (_QWORD *)(v4 + 24 * v40);
          v41[4] = v90;
          v41[5] = v12;
          v41[6] = v23;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v2 = v89;
        v3 = v88;
      }
      else
      {

      }
      ++v5;
      if (v8 == v3)
      {
        swift_bridgeObjectRelease();
        v1 = v86;
        goto LABEL_49;
      }
    }
    __break(1u);
LABEL_47:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v4 = MEMORY[0x1E0DEE9D8];
LABEL_49:
  v50 = *(_QWORD *)(v1 + 48);
  v49 = *(_QWORD *)(v1 + 56);
  v51 = sub_1C0303F10();
  v53 = v52;
  v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8);
  v94[3] = v50;
  v94[4] = v49;
  __swift_allocate_boxed_opaque_existential_0(v94);
  v54(v51, v53, v50, v49);
  v55 = sub_1C01AB574(v4);
  MEMORY[0x1E0C80A78](v55);
  v85[2] = v94;
  sub_1C00E5280((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1C0221064, (uint64_t)v85, v55);
  v57 = v56;
  v91 = 0;
  swift_bridgeObjectRelease();
  v58 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v93 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v59 = *(_QWORD *)(v57 + 16);
  v90 = v57;
  if (v59)
  {
    v60 = (uint64_t *)(v57 + 48);
    v92 = xmmword_1C0305B60;
    while (1)
    {
      v62 = *(v60 - 2);
      v61 = *(v60 - 1);
      v63 = *v60;
      swift_bridgeObjectRetain_n();
      v65 = sub_1C00B3C3C(v62, v61);
      v66 = v58[2];
      v67 = (v64 & 1) == 0;
      if (__OFADD__(v66, v67))
        break;
      v68 = v64;
      if (v58[3] < v66 + v67)
      {
        sub_1C0128BBC();
        v58 = v93;
        v69 = sub_1C00B3C3C(v62, v61);
        if ((v68 & 1) != (v70 & 1))
          goto LABEL_67;
        v65 = v69;
      }
      if ((v68 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v71 = v58[7];
        v72 = *(_QWORD *)(v71 + 8 * v65);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v71 + 8 * v65) = v72;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C00AC78C();
          v72 = v81;
          *(_QWORD *)(v71 + 8 * v65) = v81;
        }
        v74 = *(_QWORD *)(v72 + 16);
        if (v74 >= *(_QWORD *)(v72 + 24) >> 1)
        {
          sub_1C00AC78C();
          v72 = v82;
          *(_QWORD *)(v71 + 8 * v65) = v82;
        }
        *(_QWORD *)(v72 + 16) = v74 + 1;
        v75 = (_QWORD *)(v72 + 24 * v74);
        v75[4] = v62;
        v75[5] = v61;
        v75[6] = v63;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B9058);
        v76 = swift_allocObject();
        *(_OWORD *)(v76 + 16) = v92;
        *(_QWORD *)(v76 + 32) = v62;
        *(_QWORD *)(v76 + 40) = v61;
        *(_QWORD *)(v76 + 48) = v63;
        v58[(v65 >> 6) + 8] |= 1 << v65;
        v77 = (uint64_t *)(v58[6] + 16 * v65);
        *v77 = v62;
        v77[1] = v61;
        *(_QWORD *)(v58[7] + 8 * v65) = v76;
        v78 = v58[2];
        v79 = __OFADD__(v78, 1);
        v80 = v78 + 1;
        if (v79)
          goto LABEL_66;
        v58[2] = v80;
      }
      v60 += 3;
      if (!--v59)
        goto LABEL_64;
    }
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    result = sub_1C0304A68();
    __break(1u);
  }
  else
  {
LABEL_64:
    swift_bridgeObjectRelease();
    v83 = sub_1C02202E4();
    swift_release();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v94);
    return v83;
  }
  return result;
}

uint64_t sub_1C02201C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t result;
  _QWORD v12[4];

  v5 = *a1;
  v4 = a1[1];
  v6 = a1[2];
  v12[2] = a2;
  swift_bridgeObjectRetain();
  v7 = sub_1C01F12C8((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1C022107C, (uint64_t)v12, v6);
  swift_bridgeObjectRelease();
  v8 = sub_1C020E918(v7);
  v10 = v9;
  result = swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    v5 = 0;
    v4 = 0;
    v8 = 0;
  }
  else
  {
    result = swift_bridgeObjectRetain();
  }
  *a3 = v5;
  a3[1] = v4;
  a3[2] = v8;
  return result;
}

void sub_1C0220278(uint64_t *a1@<X0>, _QWORD *a2@<X1>, double *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[3];
  v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  *a3 = (*(double (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16))(v4, v5, v6, v7);
}

uint64_t sub_1C02202E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  double v23;
  unint64_t v24;
  double *v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[6];

  v0 = MEMORY[0x1E0DEE9E0];
  v44 = MEMORY[0x1E0DEE9E0];
  sub_1C006F164(v45);
  v2 = v45[0];
  v1 = v45[1];
  v3 = v45[4];
  v41 = (unint64_t)(v45[2] + 64) >> 6;
  v42 = v45[3];
  result = swift_bridgeObjectRetain();
  v5 = MEMORY[0x1E0DEE9D8];
  v40 = v1;
  v38 = v2;
  while (1)
  {
    while (1)
    {
      if (v3)
      {
        v6 = __clz(__rbit64(v3));
        v3 &= v3 - 1;
        v7 = v6 | (v42 << 6);
      }
      else
      {
        v8 = v42 + 1;
        if (__OFADD__(v42, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v8 >= v41)
          goto LABEL_47;
        v9 = *(_QWORD *)(v1 + 8 * v8);
        v10 = v42 + 1;
        if (!v9)
        {
          v10 = v42 + 2;
          if (v42 + 2 >= v41)
            goto LABEL_47;
          v9 = *(_QWORD *)(v1 + 8 * v10);
          if (!v9)
          {
            v10 = v42 + 3;
            if (v42 + 3 >= v41)
              goto LABEL_47;
            v9 = *(_QWORD *)(v1 + 8 * v10);
            if (!v9)
            {
              v10 = v42 + 4;
              if (v42 + 4 >= v41)
                goto LABEL_47;
              v9 = *(_QWORD *)(v1 + 8 * v10);
              if (!v9)
              {
                v10 = v42 + 5;
                if (v42 + 5 >= v41)
                  goto LABEL_47;
                v9 = *(_QWORD *)(v1 + 8 * v10);
                if (!v9)
                {
                  v11 = v42 + 6;
                  while (v11 < v41)
                  {
                    v9 = *(_QWORD *)(v1 + 8 * v11++);
                    if (v9)
                    {
                      v10 = v11 - 1;
                      goto LABEL_19;
                    }
                  }
LABEL_47:
                  sub_1C00B7078();
                  return v0;
                }
              }
            }
          }
        }
LABEL_19:
        v3 = (v9 - 1) & v9;
        v7 = __clz(__rbit64(v9)) + (v10 << 6);
        v42 = v10;
      }
      v12 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v7);
      v14 = *v12;
      v13 = v12[1];
      v15 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v7);
      v16 = *(_QWORD *)(v15 + 16);
      if (v16)
        break;
      v17 = v5;
      v18 = *(_QWORD *)(v5 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v18)
      {
        v19 = v17;
        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v5 = v17;
    }
    v39 = v0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C00B1F5C();
    v19 = v5;
    v20 = (uint64_t *)(v15 + 48);
    do
    {
      v21 = *v20;
      v43 = v19;
      v22 = *(_QWORD *)(v19 + 16);
      v18 = v22 + 1;
      if (v22 >= *(_QWORD *)(v19 + 24) >> 1)
      {
        sub_1C00B1F5C();
        v19 = v43;
      }
      *(_QWORD *)(v19 + 16) = v18;
      *(_QWORD *)(v19 + 8 * v22 + 32) = v21;
      v20 += 3;
      --v16;
    }
    while (v16);
    v2 = v38;
    v0 = v39;
LABEL_29:
    v23 = *(double *)(v19 + 32);
    v24 = v18 - 1;
    if (v18 == 1)
    {
      v5 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v25 = (double *)(v19 + 40);
      v5 = MEMORY[0x1E0DEE9D8];
      do
      {
        v26 = *v25++;
        v27 = v26;
        if (v23 < v26)
          v23 = v27;
        --v24;
      }
      while (v24);
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 24) <= *(_QWORD *)(v0 + 16))
      sub_1C0090F28();
    v0 = v44;
    sub_1C0304B04();
    sub_1C0303E20();
    result = sub_1C0304B40();
    v28 = v44 + 64;
    v29 = -1 << *(_BYTE *)(v44 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v44 + 64 + 8 * (v30 >> 6))) == 0)
      break;
    v32 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v44 + 64 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    v1 = v40;
LABEL_46:
    *(_QWORD *)(v28 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
    v37 = (_QWORD *)(*(_QWORD *)(v44 + 48) + 16 * v32);
    *v37 = v14;
    v37[1] = v13;
    *(double *)(*(_QWORD *)(v44 + 56) + 8 * v32) = v23;
    ++*(_QWORD *)(v44 + 16);
    result = swift_bridgeObjectRelease();
  }
  v33 = 0;
  v34 = (unint64_t)(63 - v29) >> 6;
  v1 = v40;
  while (++v31 != v34 || (v33 & 1) == 0)
  {
    v35 = v31 == v34;
    if (v31 == v34)
      v31 = 0;
    v33 |= v35;
    v36 = *(_QWORD *)(v28 + 8 * v31);
    if (v36 != -1)
    {
      v32 = __clz(__rbit64(~v36)) + (v31 << 6);
      goto LABEL_46;
    }
  }
LABEL_49:
  __break(1u);
  return result;
}

unint64_t sub_1C02206C8()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C02206E4(uint64_t a1, uint64_t a2)
{
  const void *v2;
  _BYTE __dst[88];

  memcpy(__dst, v2, sizeof(__dst));
  return sub_1C021F66C(a1, a2);
}

uint64_t sub_1C0220734()
{
  sub_1C0220E9C();
  return sub_1C0302104();
}

uint64_t sub_1C0220784()
{
  sub_1C0220E9C();
  return sub_1C03020D4();
}

uint64_t sub_1C02207D4(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  _QWORD v12[2];

  v3 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v6 = (_QWORD *)((char *)v12 - ((8 * v5 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1C007A70C(0, v5, v6);
    sub_1C0220960(v6, v5, a2, v3);
    v8 = v7;
    swift_release();
  }
  else
  {
    v9 = (unint64_t *)swift_slowAlloc();
    sub_1C007A70C(0, v5, v9);
    sub_1C0220960(v9, v5, a2, v3);
    v8 = v10;
    swift_release();
    MEMORY[0x1C3B98378](v9, -1, -1);
  }
  return v8;
}

void sub_1C0220960(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  _QWORD *v31;
  BOOL v32;
  BOOL v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  BOOL v55;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;

  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) >= *(_QWORD *)(a3 + 16))
  {
    v34 = 0;
    v60 = a3 + 56;
    v61 = 0;
    v35 = 1 << *(_BYTE *)(a3 + 32);
    if (v35 < 64)
      v36 = ~(-1 << v35);
    else
      v36 = -1;
    v37 = v36 & *(_QWORD *)(a3 + 56);
    v63 = (unint64_t)(v35 + 63) >> 6;
    v38 = a4 + 56;
    while (1)
    {
      while (1)
      {
        if (v37)
        {
          v39 = __clz(__rbit64(v37));
          v37 &= v37 - 1;
          v40 = v39 | (v34 << 6);
        }
        else
        {
          v41 = v34 + 1;
          if (__OFADD__(v34, 1))
          {
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
            goto LABEL_84;
          }
          if (v41 >= v63)
            goto LABEL_79;
          v42 = *(_QWORD *)(v60 + 8 * v41);
          ++v34;
          if (!v42)
          {
            v34 = v41 + 1;
            if (v41 + 1 >= v63)
              goto LABEL_79;
            v42 = *(_QWORD *)(v60 + 8 * v34);
            if (!v42)
            {
              v34 = v41 + 2;
              if (v41 + 2 >= v63)
                goto LABEL_79;
              v42 = *(_QWORD *)(v60 + 8 * v34);
              if (!v42)
              {
                v43 = v41 + 3;
                if (v43 >= v63)
                  goto LABEL_79;
                v42 = *(_QWORD *)(v60 + 8 * v43);
                if (!v42)
                {
                  while (1)
                  {
                    v34 = v43 + 1;
                    if (__OFADD__(v43, 1))
                      goto LABEL_85;
                    if (v34 >= v63)
                      break;
                    v42 = *(_QWORD *)(v60 + 8 * v34);
                    ++v43;
                    if (v42)
                      goto LABEL_61;
                  }
LABEL_79:
                  swift_retain();
                  sub_1C01585A0(a1, a2, v61, v5);
                  return;
                }
                v34 = v43;
              }
            }
          }
LABEL_61:
          v37 = (v42 - 1) & v42;
          v40 = __clz(__rbit64(v42)) + (v34 << 6);
        }
        v44 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v40);
        v46 = *v44;
        v45 = v44[1];
        sub_1C0304B04();
        swift_bridgeObjectRetain();
        sub_1C0303E20();
        v47 = sub_1C0304B40();
        v48 = -1 << *(_BYTE *)(v4 + 32);
        v49 = v47 & ~v48;
        if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) != 0)
          break;
LABEL_78:
        swift_bridgeObjectRelease();
        v5 = a3;
        v4 = a4;
      }
      v50 = *(_QWORD *)(a4 + 48);
      v51 = (_QWORD *)(v50 + 16 * v49);
      v52 = *v51 == v46 && v51[1] == v45;
      if (!v52 && (sub_1C0304A08() & 1) == 0)
      {
        v53 = ~v48;
        do
        {
          v49 = (v49 + 1) & v53;
          if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
            goto LABEL_78;
          v54 = (_QWORD *)(v50 + 16 * v49);
          v55 = *v54 == v46 && v54[1] == v45;
        }
        while (!v55 && (sub_1C0304A08() & 1) == 0);
      }
      swift_bridgeObjectRelease();
      *(unint64_t *)((char *)a1 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v33 = __OFADD__(v61++, 1);
      v5 = a3;
      v4 = a4;
      if (v33)
        goto LABEL_83;
    }
  }
  v6 = 0;
  v58 = a4 + 56;
  v7 = 1 << *(_BYTE *)(a4 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  v59 = (unint64_t)(v7 + 63) >> 6;
  v61 = 0;
  v10 = a3 + 56;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v62 = v6;
      v12 = v11 | (v6 << 6);
      goto LABEL_22;
    }
    v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_81;
    }
    if (v13 >= v59)
      goto LABEL_79;
    v14 = *(_QWORD *)(v58 + 8 * v13);
    v15 = v6 + 1;
    if (!v14)
    {
      v15 = v6 + 2;
      if (v6 + 2 >= v59)
        goto LABEL_79;
      v14 = *(_QWORD *)(v58 + 8 * v15);
      if (!v14)
      {
        v15 = v6 + 3;
        if (v6 + 3 >= v59)
          goto LABEL_79;
        v14 = *(_QWORD *)(v58 + 8 * v15);
        if (!v14)
          break;
      }
    }
LABEL_21:
    v9 = (v14 - 1) & v14;
    v62 = v15;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_22:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1C0304B04();
    swift_bridgeObjectRetain();
    sub_1C0303E20();
    v20 = sub_1C0304B40();
    v21 = -1 << *(_BYTE *)(v5 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    v24 = 1 << v22;
    if (((1 << v22) & *(_QWORD *)(v10 + 8 * (v22 >> 6))) == 0)
      goto LABEL_36;
    v25 = *(_QWORD *)(a3 + 48);
    v26 = (_QWORD *)(v25 + 16 * v22);
    v27 = *v26 == v19 && v26[1] == v18;
    if (v27 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
LABEL_38:
      v6 = v62;
      v5 = a3;
      a1[v23] |= v24;
      v33 = __OFADD__(v61++, 1);
      v4 = a4;
      if (v33)
        goto LABEL_82;
    }
    else
    {
      v28 = ~v21;
      for (i = v22 + 1; ; i = v30 + 1)
      {
        v30 = i & v28;
        if (((*(_QWORD *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0)
          break;
        v31 = (_QWORD *)(v25 + 16 * v30);
        v32 = *v31 == v19 && v31[1] == v18;
        if (v32 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v23 = v30 >> 6;
          v24 = 1 << v30;
          goto LABEL_38;
        }
      }
LABEL_36:
      swift_bridgeObjectRelease();
      v6 = v62;
      v5 = a3;
      v4 = a4;
    }
  }
  v16 = v6 + 4;
  if (v6 + 4 >= v59)
    goto LABEL_79;
  v14 = *(_QWORD *)(v58 + 8 * v16);
  if (v14)
  {
    v15 = v6 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v59)
      goto LABEL_79;
    v14 = *(_QWORD *)(v58 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_21;
  }
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
}

unint64_t sub_1C0220E9C()
{
  unint64_t result;

  result = qword_1EF5C1500;
  if (!qword_1EF5C1500)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031D4E4, &unk_1E79A15A8);
    atomic_store(result, (unint64_t *)&qword_1EF5C1500);
  }
  return result;
}

uint64_t sub_1C0220ED8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_8_0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0220F88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(OUTLINED_FUNCTION_8_0() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1C021F7C8(a1, v1 + v4, v1 + v5, *(void (**)(uint64_t *))(v1 + ((v5 + 95) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1C0220FE4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

BOOL sub_1C0221048(void **a1)
{
  uint64_t v1;

  return sub_1C021F908(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C0221064@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1C02201C0(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_1C022107C(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;

  sub_1C0220278(a1, *(_QWORD **)(v2 + 16), a2);
}

_QWORD *sub_1C022109C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_47();
  return a1;
}

ValueMetadata *type metadata accessor for AppEventValues()
{
  return &type metadata for AppEventValues;
}

unint64_t sub_1C02210E8()
{
  unint64_t result;

  result = qword_1EF5C1508;
  if (!qword_1EF5C1508)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031D60C, &type metadata for AppEventValues);
    atomic_store(result, (unint64_t *)&qword_1EF5C1508);
  }
  return result;
}

uint64_t sub_1C0221124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  _QWORD v24[6];
  __int128 v25;
  uint64_t v26;

  sub_1C007073C();
  if (v4)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = v6;
    v7 = MEMORY[0x1E0DEE9D8];
    v21 = a3;
    while (v9)
    {
      OUTLINED_FUNCTION_21();
      sub_1C02D75E8(v9, a3, a4, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v24[0];
      v11 = v24[1];
      v13 = v24[2];
      v12 = v24[3];
      v14 = v24[4];
      v26 = v24[5];
      v23 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_2_104();
        v7 = v19;
      }
      v15 = *(_QWORD *)(v7 + 16);
      if (v15 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        OUTLINED_FUNCTION_2_104();
        v7 = v20;
      }
      *(_QWORD *)(v7 + 16) = v15 + 1;
      v16 = v7 + (v15 << 6);
      *(_QWORD *)(v16 + 32) = v10;
      *(_QWORD *)(v16 + 40) = v11;
      *(_QWORD *)(v16 + 48) = v13;
      *(_QWORD *)(v16 + 56) = v12;
      v17 = v26;
      *(_QWORD *)(v16 + 64) = v14;
      *(_QWORD *)(v16 + 72) = v17;
      *(_OWORD *)(v16 + 80) = v23;
      sub_1C007073C();
      v9 = v18;
      a3 = v21;
    }
  }
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t OUTLINED_FUNCTION_1_100()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C00B3C3C(v1, v0);
}

void OUTLINED_FUNCTION_2_104()
{
  sub_1C00AC444();
}

uint64_t StreetAddress.CrossStreetJoin.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1C030484C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

__n128 StreetAddress.init(streetName:streetNumber:streetType:crossStreetName:crossStreetType:crossStreetJoin:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 *a3@<X2>, __n128 *a4@<X3>, __int16 *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  __int16 v7;
  char v8;
  __int16 v9;
  unsigned __int8 v10;
  __int16 v11;
  char v12;
  __n128 result;

  v7 = *(_WORD *)(a1 + 16);
  v8 = *(_BYTE *)(a2 + 16);
  v9 = *a3;
  v10 = a4[1].n128_u8[0];
  v11 = *a5;
  v12 = *a6;
  *(_OWORD *)a7 = *(_OWORD *)a1;
  *(_WORD *)(a7 + 16) = v7;
  *(_OWORD *)(a7 + 24) = *(_OWORD *)a2;
  *(_BYTE *)(a7 + 40) = v8;
  *(_WORD *)(a7 + 41) = v9;
  result = *a4;
  *(__n128 *)(a7 + 48) = *a4;
  *(_BYTE *)(a7 + 64) = v10;
  *(_WORD *)(a7 + 65) = v11;
  *(_BYTE *)(a7 + 67) = v12;
  *(_QWORD *)(a7 + 72) = 0;
  *(_QWORD *)(a7 + 80) = 0;
  return result;
}

uint64_t StreetAddress.CrossStreetJoin.rawValue.getter()
{
  return 0x72745373736F7263;
}

uint64_t sub_1C022139C@<X0>(BOOL *a1@<X8>)
{
  return StreetAddress.CrossStreetJoin.init(rawValue:)(a1);
}

void sub_1C02213A8(_QWORD *a1@<X8>)
{
  *a1 = 0x72745373736F7263;
  a1[1] = 0xEF6E696F4A746565;
}

uint64_t sub_1C02213D0()
{
  sub_1C0222B64();
  return sub_1C03040F0();
}

uint64_t sub_1C022142C()
{
  sub_1C0222B64();
  return sub_1C03040CC();
}

uint64_t StreetAddress.streetName.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_WORD *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t StreetAddress.streetNumber.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_7_80(*(_QWORD *)(v1 + 32), a1);
}

void StreetAddress.streetType.getter(_WORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_WORD *)(v1 + 41);
}

uint64_t StreetAddress.crossStreetName.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_7_80(*(_QWORD *)(v1 + 56), a1);
}

void StreetAddress.crossStreetType.getter(_WORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_WORD *)(v1 + 65);
}

void StreetAddress.crossStreetJoin.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 67);
}

uint64_t StreetAddress.fullThoroughfare.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static StreetAddress.== infix(_:_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  __int16 v21;
  __int16 v22;
  uint64_t v23;
  char v24;
  char v26;
  uint64_t result;
  char v28;
  char v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v35;
  char v36;
  char v37;
  char v38;
  BOOL v39;
  char v40;
  int v41;
  int v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  _QWORD v53[2];
  __int16 v54;
  _QWORD v55[2];
  __int16 v56;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(unsigned __int8 *)(a1 + 40);
  v6 = *(unsigned __int16 *)(a1 + 41);
  v7 = *(_QWORD *)(a1 + 48);
  v52 = *(_QWORD *)(a1 + 56);
  v8 = *(unsigned __int8 *)(a1 + 64);
  v51 = *(unsigned __int16 *)(a1 + 65);
  v9 = *(_BYTE *)(a1 + 67);
  v10 = a2[1];
  v11 = a2[3];
  v12 = a2[4];
  v13 = *((unsigned __int8 *)a2 + 40);
  v14 = *(unsigned __int16 *)((char *)a2 + 41);
  v15 = a2[6];
  v16 = a2[7];
  v17 = *((unsigned __int8 *)a2 + 64);
  v18 = *(unsigned __int16 *)((char *)a2 + 65);
  v19 = *((unsigned __int8 *)a2 + 67);
  if (v2)
  {
    v20 = *a2;
    v21 = *((_WORD *)a2 + 8);
    v22 = *(_WORD *)(a1 + 16);
    v55[0] = *(_QWORD *)a1;
    v55[1] = v2;
    v56 = v22;
    if (!v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    v44 = v14;
    v48 = v18;
    v49 = v6;
    v45 = v15;
    v46 = v7;
    v50 = v16;
    v47 = v17;
    v42 = v8;
    v53[0] = v20;
    v53[1] = v10;
    v54 = v21;
    v43 = v3;
    v23 = v11;
    swift_bridgeObjectRetain_n();
    v24 = static StreetName.== infix(_:_:)((uint64_t)v55, (uint64_t)v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = v23;
    v3 = v43;
    if ((v24 & 1) == 0)
      return 0;
  }
  else
  {
    v44 = *(unsigned __int16 *)((char *)a2 + 41);
    v48 = *(unsigned __int16 *)((char *)a2 + 65);
    v49 = *(unsigned __int16 *)(a1 + 41);
    v45 = a2[6];
    v46 = *(_QWORD *)(a1 + 48);
    v50 = a2[7];
    v47 = *((unsigned __int8 *)a2 + 64);
    v42 = *(unsigned __int8 *)(a1 + 64);
    if (v10)
      goto LABEL_20;
  }
  if (v4)
  {
    if (!v12)
    {
LABEL_19:
      swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    if (v3 != v11 || v4 != v12)
    {
      v26 = sub_1C0304A08();
      result = 0;
      if ((v26 & 1) == 0)
        return result;
    }
    if (v5 == 5)
    {
      if (v13 != 5)
        return 0;
    }
    else
    {
      if (v13 == 5)
        return 0;
      swift_bridgeObjectRetain_n();
      sub_1C025EF70(v5);
      v29 = v28;
      swift_bridgeObjectRelease_n();
      if ((v29 & 1) == 0)
        return 0;
    }
  }
  else if (v12)
  {
    goto LABEL_20;
  }
  if ((v49 & 0xFF00) == 0x900)
  {
    v30 = v47;
    v31 = v48;
    v33 = v45;
    v32 = v46;
    if ((v44 & 0xFF00) != 0x900)
      return 0;
  }
  else
  {
    v30 = v47;
    v31 = v48;
    v33 = v45;
    v32 = v46;
    if ((v44 & 0xFF00) == 0x900 || (sub_1C025F4E4(v49, v44) & 1) == 0)
      return 0;
    if (v49 >> 8 == 8)
    {
      if (v44 >> 8 != 8)
        return 0;
    }
    else
    {
      if (v44 >> 8 == 8)
        return 0;
      sub_1C025F36C();
      if ((v36 & 1) == 0)
        return 0;
    }
  }
  if (!v52)
  {
    if (!v50)
      goto LABEL_50;
LABEL_20:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!v50)
    goto LABEL_19;
  if (v32 != v33 || v52 != v50)
  {
    v35 = sub_1C0304A08();
    result = 0;
    if ((v35 & 1) == 0)
      return result;
  }
  if (v42 == 5)
  {
    if (v30 != 5)
      return 0;
  }
  else
  {
    if (v30 == 5)
      return 0;
    swift_bridgeObjectRetain_n();
    sub_1C025E8F4();
    v38 = v37;
    swift_bridgeObjectRelease_n();
    if ((v38 & 1) == 0)
      return 0;
  }
LABEL_50:
  if ((v51 & 0xFF00) == 0x900)
  {
    v39 = (v31 & 0xFF00) == 2304;
    goto LABEL_52;
  }
  if ((v31 & 0xFF00) == 0x900 || (sub_1C025F4E4(v51, v31) & 1) == 0)
    return 0;
  if (v51 >> 8 != 8)
  {
    if (v31 >> 8 != 8)
    {
      sub_1C025F36C();
      if (v9 & 1 | ((v41 & 1) == 0))
        return v41 & v19;
      return v19 ^ 1;
    }
    return 0;
  }
  v39 = v31 >> 8 == 8;
LABEL_52:
  if (v39)
    v40 = v9;
  else
    v40 = 1;
  if (v39)
    result = v19;
  else
    result = 0;
  if ((v40 & 1) == 0)
    return v19 ^ 1;
  return result;
}

uint64_t sub_1C02218A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v11;

  v2 = a1 == 0x614E746565727473 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x754E746565727473 && a2 == 0xEC0000007265626DLL;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7954746565727473 && a2 == 0xEA00000000006570;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x72745373736F7263 && a2 == 0xEF656D614E746565;
        if (v8 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x72745373736F7263 && a2 == 0xEF65707954746565;
          if (v9 || (sub_1C0304A08() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x72745373736F7263 && a2 == 0xEF6E696F4A746565;
            if (v10 || (sub_1C0304A08() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0xD000000000000010 && a2 == 0x80000001C0333930)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v11 = sub_1C0304A08();
              swift_bridgeObjectRelease();
              if ((v11 & 1) != 0)
                return 6;
              else
                return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C0221BE8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0221C20 + 4 * byte_1C031D674[a1]))(0x614E746565727473, 0xEA0000000000656DLL);
}

uint64_t sub_1C0221C20()
{
  return 0x754E746565727473;
}

uint64_t sub_1C0221C40()
{
  return 0x7954746565727473;
}

uint64_t sub_1C0221C58()
{
  return 0x72745373736F7263;
}

unint64_t sub_1C0221CA0()
{
  return 0xD000000000000010;
}

uint64_t sub_1C0221CBC()
{
  unsigned __int8 *v0;

  return sub_1C0221BE8(*v0);
}

uint64_t sub_1C0221CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C02218A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0221CE8()
{
  sub_1C0222358();
  return sub_1C0304BAC();
}

uint64_t sub_1C0221D10()
{
  sub_1C0222358();
  return sub_1C0304BB8();
}

void StreetAddress.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __int16 v14;
  char v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int16 v33;
  int v34;
  char v35;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1510);
  v29 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = v1[1];
  v8 = *((_WORD *)v1 + 8);
  v9 = v1[3];
  v27 = v1[4];
  v28 = v9;
  v34 = *((unsigned __int8 *)v1 + 40);
  v26 = *(unsigned __int16 *)((char *)v1 + 41);
  v10 = v1[6];
  v24 = v1[7];
  v25 = v10;
  LODWORD(v10) = *((unsigned __int8 *)v1 + 64);
  v22 = *(unsigned __int16 *)((char *)v1 + 65);
  v23 = v10;
  v21 = *((unsigned __int8 *)v1 + 67);
  v11 = v1[9];
  v20[0] = v1[10];
  v20[1] = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0222358();
  sub_1C0304BA0();
  v31 = v6;
  v32 = v7;
  v12 = v5;
  v33 = v8;
  v35 = 0;
  sub_1C0222394();
  v13 = v30;
  sub_1C0304954();
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v3);
  }
  else
  {
    v14 = v26;
    v16 = v22;
    v15 = v23;
    v18 = v24;
    v17 = v25;
    v19 = v29;
    v31 = v28;
    v32 = v27;
    LOBYTE(v33) = v34;
    v35 = 1;
    sub_1C02223D0();
    OUTLINED_FUNCTION_3_111();
    LOWORD(v31) = v14;
    v35 = 2;
    sub_1C022240C();
    OUTLINED_FUNCTION_5_81();
    v31 = v17;
    v32 = v18;
    LOBYTE(v33) = v15;
    v35 = 3;
    sub_1C0222448();
    OUTLINED_FUNCTION_3_111();
    LOWORD(v31) = v16;
    v35 = 4;
    OUTLINED_FUNCTION_5_81();
    LOBYTE(v31) = v21;
    v35 = 5;
    sub_1C0222484();
    OUTLINED_FUNCTION_3_111();
    LOBYTE(v31) = 6;
    sub_1C0304924();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v3);
  }
  OUTLINED_FUNCTION_28_0();
}

void StreetAddress.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  __int16 v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  unint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unsigned __int16 v36;
  int v37;
  char v38;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1548);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0222358();
  sub_1C0304B88();
  if (v2)
  {
    v9 = 0;
  }
  else
  {
    v38 = 0;
    sub_1C02224C0();
    OUTLINED_FUNCTION_1_101();
    v10 = v35;
    v32 = v34;
    v11 = v36;
    v38 = 1;
    v12 = sub_1C02224FC();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_8_64();
    OUTLINED_FUNCTION_2_105();
    v33 = v10;
    if (!v12)
    {
      v37 = v11;
      v13 = v35;
      v30 = v34;
      v31 = v36;
      v38 = 2;
      v14 = sub_1C0222538();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_8_64();
      OUTLINED_FUNCTION_2_105();
      v29 = v14;
      v28 = (unsigned __int16)v34;
      v38 = 3;
      sub_1C0222574();
      OUTLINED_FUNCTION_1_101();
      v27 = v34;
      v26 = v36;
      v38 = 4;
      v15 = v35;
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_8_64();
      OUTLINED_FUNCTION_2_105();
      v29 = v15;
      LOWORD(v15) = v34;
      v38 = 5;
      sub_1C02225B0();
      OUTLINED_FUNCTION_1_101();
      v25 = v34;
      LOBYTE(v34) = 6;
      v16 = sub_1C0304870();
      v18 = v17;
      v19 = *(void (**)(char *, uint64_t))(v6 + 8);
      v20 = v16;
      v19(v8, v5);
      swift_bridgeObjectRetain();
      v21 = v15;
      v22 = v33;
      *(_QWORD *)a2 = v32;
      *(_QWORD *)(a2 + 8) = v22;
      *(_WORD *)(a2 + 16) = v37;
      v23 = v29;
      *(_QWORD *)(a2 + 24) = v30;
      *(_QWORD *)(a2 + 32) = v13;
      *(_BYTE *)(a2 + 40) = v31;
      *(_WORD *)(a2 + 41) = v28;
      *(_QWORD *)(a2 + 48) = v27;
      *(_QWORD *)(a2 + 56) = v23;
      *(_BYTE *)(a2 + 64) = v26;
      *(_WORD *)(a2 + 65) = v21;
      *(_BYTE *)(a2 + 67) = v25;
      *(_QWORD *)(a2 + 72) = v20;
      *(_QWORD *)(a2 + 80) = v18;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_55_0();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    OUTLINED_FUNCTION_0_120();
    OUTLINED_FUNCTION_55_0();
    v9 = 1;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  if (v9)
    swift_bridgeObjectRelease();
LABEL_6:
  OUTLINED_FUNCTION_28_0();
}

void sub_1C022232C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  StreetAddress.init(from:)(a1, a2);
}

void sub_1C0222340(_QWORD *a1)
{
  StreetAddress.encode(to:)(a1);
}

unint64_t sub_1C0222358()
{
  unint64_t result;

  result = qword_1EF5C1518;
  if (!qword_1EF5C1518)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031D900, &type metadata for StreetAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1518);
  }
  return result;
}

unint64_t sub_1C0222394()
{
  unint64_t result;

  result = qword_1EF5C1520;
  if (!qword_1EF5C1520)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetName, &type metadata for StreetName);
    atomic_store(result, (unint64_t *)&qword_1EF5C1520);
  }
  return result;
}

unint64_t sub_1C02223D0()
{
  unint64_t result;

  result = qword_1EF5C1528;
  if (!qword_1EF5C1528)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetNumber, &type metadata for StreetNumber);
    atomic_store(result, (unint64_t *)&qword_1EF5C1528);
  }
  return result;
}

unint64_t sub_1C022240C()
{
  unint64_t result;

  result = qword_1EF5C1530;
  if (!qword_1EF5C1530)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetType, &type metadata for StreetType);
    atomic_store(result, (unint64_t *)&qword_1EF5C1530);
  }
  return result;
}

unint64_t sub_1C0222448()
{
  unint64_t result;

  result = qword_1EF5C1538;
  if (!qword_1EF5C1538)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for CrossStreetName, &type metadata for CrossStreetName);
    atomic_store(result, (unint64_t *)&qword_1EF5C1538);
  }
  return result;
}

unint64_t sub_1C0222484()
{
  unint64_t result;

  result = qword_1EF5C1540;
  if (!qword_1EF5C1540)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetAddress.CrossStreetJoin, &type metadata for StreetAddress.CrossStreetJoin);
    atomic_store(result, (unint64_t *)&qword_1EF5C1540);
  }
  return result;
}

unint64_t sub_1C02224C0()
{
  unint64_t result;

  result = qword_1EF5C1550;
  if (!qword_1EF5C1550)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetName, &type metadata for StreetName);
    atomic_store(result, (unint64_t *)&qword_1EF5C1550);
  }
  return result;
}

unint64_t sub_1C02224FC()
{
  unint64_t result;

  result = qword_1EF5C1558;
  if (!qword_1EF5C1558)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetNumber, &type metadata for StreetNumber);
    atomic_store(result, (unint64_t *)&qword_1EF5C1558);
  }
  return result;
}

unint64_t sub_1C0222538()
{
  unint64_t result;

  result = qword_1EF5C1560;
  if (!qword_1EF5C1560)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetType, &type metadata for StreetType);
    atomic_store(result, (unint64_t *)&qword_1EF5C1560);
  }
  return result;
}

unint64_t sub_1C0222574()
{
  unint64_t result;

  result = qword_1EF5C1568;
  if (!qword_1EF5C1568)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for CrossStreetName, &type metadata for CrossStreetName);
    atomic_store(result, (unint64_t *)&qword_1EF5C1568);
  }
  return result;
}

unint64_t sub_1C02225B0()
{
  unint64_t result;

  result = qword_1EF5C1570;
  if (!qword_1EF5C1570)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetAddress.CrossStreetJoin, &type metadata for StreetAddress.CrossStreetJoin);
    atomic_store(result, (unint64_t *)&qword_1EF5C1570);
  }
  return result;
}

unint64_t sub_1C02225F0()
{
  unint64_t result;

  result = qword_1EF5C1578;
  if (!qword_1EF5C1578)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetAddress.CrossStreetJoin, &type metadata for StreetAddress.CrossStreetJoin);
    atomic_store(result, (unint64_t *)&qword_1EF5C1578);
  }
  return result;
}

uint64_t destroy for StreetAddress()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StreetAddress(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_WORD *)(a1 + 65) = *(_WORD *)(a2 + 65);
  *(_BYTE *)(a1 + 67) = *(_BYTE *)(a2 + 67);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StreetAddress(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_WORD *)(a1 + 65) = *(_WORD *)(a2 + 65);
  *(_BYTE *)(a1 + 67) = *(_BYTE *)(a2 + 67);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StreetAddress(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_WORD *)(a1 + 65) = *(_WORD *)(a2 + 65);
  *(_BYTE *)(a1 + 67) = *(_BYTE *)(a2 + 67);
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StreetAddress(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 88))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StreetAddress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 88) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for StreetAddress()
{
  return &type metadata for StreetAddress;
}

uint64_t storeEnumTagSinglePayload for StreetAddress.CrossStreetJoin(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C022297C + 4 * byte_1C031D67B[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C022299C + 4 * byte_1C031D680[v4]))();
}

_BYTE *sub_1C022297C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C022299C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C02229A4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C02229AC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C02229B4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C02229BC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StreetAddress.CrossStreetJoin()
{
  return &type metadata for StreetAddress.CrossStreetJoin;
}

uint64_t storeEnumTagSinglePayload for StreetAddress.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1C0222A24 + 4 * byte_1C031D68A[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1C0222A58 + 4 * byte_1C031D685[v4]))();
}

uint64_t sub_1C0222A58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0222A60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0222A68);
  return result;
}

uint64_t sub_1C0222A74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0222A7CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1C0222A80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0222A88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StreetAddress.CodingKeys()
{
  return &type metadata for StreetAddress.CodingKeys;
}

unint64_t sub_1C0222AA8()
{
  unint64_t result;

  result = qword_1EF5C1580;
  if (!qword_1EF5C1580)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031D8D8, &type metadata for StreetAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1580);
  }
  return result;
}

unint64_t sub_1C0222AE8()
{
  unint64_t result;

  result = qword_1EF5C1588;
  if (!qword_1EF5C1588)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031D848, &type metadata for StreetAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1588);
  }
  return result;
}

unint64_t sub_1C0222B28()
{
  unint64_t result;

  result = qword_1EF5C1590;
  if (!qword_1EF5C1590)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031D870, &type metadata for StreetAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1590);
  }
  return result;
}

unint64_t sub_1C0222B64()
{
  unint64_t result;

  result = qword_1EF5C1598;
  if (!qword_1EF5C1598)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StreetAddress.CrossStreetJoin, &type metadata for StreetAddress.CrossStreetJoin);
    atomic_store(result, (unint64_t *)&qword_1EF5C1598);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_1_101()
{
  return sub_1C03048A0();
}

uint64_t OUTLINED_FUNCTION_2_105()
{
  return sub_1C03048A0();
}

uint64_t OUTLINED_FUNCTION_3_111()
{
  return sub_1C0304954();
}

uint64_t OUTLINED_FUNCTION_5_81()
{
  return sub_1C0304954();
}

uint64_t OUTLINED_FUNCTION_7_80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;

  *(_QWORD *)a2 = v2;
  *(_QWORD *)(a2 + 8) = a1;
  *(_BYTE *)(a2 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_9_75()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0222C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v18;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1C00B22BC();
    v6 = v18;
    v7 = (uint64_t *)(a1 + 48);
    v16 = a2;
    do
    {
      v8 = *(v7 - 2);
      v9 = *(v7 - 1);
      v10 = *v7;
      sub_1C00A9F44(v8, a2);
      if (v11)
        v12 = v11;
      else
        v12 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_1C00AADE0(v12, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v18 + 16);
      if (v13 >= *(_QWORD *)(v18 + 24) >> 1)
        sub_1C00B22BC();
      *(_QWORD *)(v18 + 16) = v13 + 1;
      v14 = (_QWORD *)(v18 + 24 * v13);
      v14[4] = v8;
      v14[5] = v9;
      v14[6] = v10;
      v7 += 3;
      --v4;
      a2 = v16;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1C0222DB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1C00B22F0();
    v3 = v12;
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4;
      swift_bridgeObjectRetain();
      v6 = sub_1C011FAA4();
      swift_bridgeObjectRetain();
      sub_1C011E37C();
      v8 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v9 = sub_1C011E0E4(v5, v8, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(v12 + 16);
      if (v10 >= *(_QWORD *)(v12 + 24) >> 1)
        sub_1C00B22F0();
      *(_QWORD *)(v12 + 16) = v10 + 1;
      *(_QWORD *)(v12 + 8 * v10 + 32) = v9;
      ++v4;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1C0222F10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1764();
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      OUTLINED_FUNCTION_21();
      if (v8 >= v7 >> 1)
        sub_1C00B1764();
      v4 += 7;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0222FE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  _QWORD v36[2];
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;

  v3 = _s11InteractionVMa();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v42 = (uint64_t)v36 - v8;
  v43 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v36[0] = a1;
    v36[1] = v1;
    v10 = *(unsigned __int8 *)(v7 + 80);
    v11 = (v10 + 32) & ~v10;
    v12 = a1 + v11;
    v13 = *(_QWORD *)(v7 + 72);
    v39 = v13 + v11;
    v14 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v38 = v10 | 7;
    v37 = xmmword_1C0305B60;
    v40 = v11;
    v41 = v6;
    while (1)
    {
      v15 = v42;
      sub_1C00638E8(v12, v42, (uint64_t (*)(_QWORD))_s11InteractionVMa);
      v16 = *(_QWORD *)(v15 + 32);
      v18 = sub_1C00B40A8(v16);
      v19 = v14[2];
      v20 = (v17 & 1) == 0;
      if (__OFADD__(v19, v20))
        break;
      v21 = v17;
      if (v14[3] < v19 + v20)
      {
        sub_1C0128814();
        v14 = v43;
        v22 = sub_1C00B40A8(v16);
        if ((v21 & 1) != (v23 & 1))
          goto LABEL_21;
        v18 = v22;
      }
      if ((v21 & 1) != 0)
      {
        v24 = v14[7];
        sub_1C004555C(v42, (uint64_t)v6, (uint64_t (*)(_QWORD))_s11InteractionVMa);
        v25 = *(_QWORD *)(v24 + 8 * v18);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v24 + 8 * v18) = v25;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C00ABF3C();
          v25 = v33;
          *(_QWORD *)(v24 + 8 * v18) = v33;
        }
        v27 = *(_QWORD *)(v25 + 16);
        if (v27 >= *(_QWORD *)(v25 + 24) >> 1)
        {
          sub_1C00ABF3C();
          v25 = v34;
          *(_QWORD *)(v24 + 8 * v18) = v34;
        }
        *(_QWORD *)(v25 + 16) = v27 + 1;
        v11 = v40;
        v28 = v25 + v40 + v27 * v13;
        v6 = v41;
        sub_1C004555C((uint64_t)v41, v28, (uint64_t (*)(_QWORD))_s11InteractionVMa);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5B90A8);
        v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = v37;
        sub_1C004555C(v42, v29 + v11, (uint64_t (*)(_QWORD))_s11InteractionVMa);
        v14[(v18 >> 6) + 8] |= 1 << v18;
        *(_QWORD *)(v14[6] + 8 * v18) = v16;
        *(_QWORD *)(v14[7] + 8 * v18) = v29;
        v30 = v14[2];
        v31 = __OFADD__(v30, 1);
        v32 = v30 + 1;
        if (v31)
          goto LABEL_20;
        v14[2] = v32;
      }
      v12 += v13;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v14;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    result = sub_1C0304A68();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

uint64_t sub_1C02232B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  double v29[3];
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C15D0);
  v2 = MEMORY[0x1E0C80A78](v25);
  v24 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (uint64_t *)((char *)&v22 - v5);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v22 - v7);
  v32 = MEMORY[0x1E0DEE9D8];
  sub_1C00B231C();
  v9 = v32;
  v10 = *(_QWORD *)(a1 + 16);
  v26 = a1;
  swift_bridgeObjectRetain();
  v23 = v10;
  if (v10)
  {
    v11 = 0;
    do
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B90D0);
      v13 = v25;
      v14 = (uint64_t)&v24[*(int *)(v25 + 48)];
      sub_1C0045DFC(v26+ ((*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v11, v14, &qword_1EF5B90D0);
      v15 = (uint64_t)v6 + *(int *)(v13 + 48);
      *v6 = v11;
      sub_1C005A718(v14, v15, &qword_1EF5B90D0);
      sub_1C005A718((uint64_t)v6, (uint64_t)v8, &qword_1EF5C15D0);
      sub_1C02246A8(*v8, *(uint64_t *)((char *)v8 + *(int *)(v13 + 48)), *(uint64_t *)((char *)v8 + *(int *)(v13 + 48) + 8), (uint64_t)v8 + *(int *)(v13 + 48) + *(int *)(v12 + 48), v29);
      sub_1C0044B78((uint64_t)v8, &qword_1EF5C15D0);
      v16 = v29[0];
      v17 = v29[1];
      v18 = v29[2];
      v27 = v31;
      v28 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C00B231C();
        v9 = v32;
      }
      v19 = *(_QWORD *)(v9 + 16);
      if (v19 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_1C00B231C();
        v9 = v32;
      }
      ++v11;
      *(_QWORD *)(v9 + 16) = v19 + 1;
      v20 = v9 + 56 * v19;
      *(double *)(v20 + 32) = v16;
      *(double *)(v20 + 40) = v17;
      *(double *)(v20 + 48) = v18;
      *(_OWORD *)(v20 + 56) = v28;
      *(_OWORD *)(v20 + 72) = v27;
    }
    while (v23 != v11);
  }
  swift_bridgeObjectRelease();
  return v9;
}

void sub_1C0223514(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C020FBDC();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_1C02254C0(v5);
  *a1 = v2;
}

void sub_1C022357C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B90D0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C020FBEC();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1C0225B40(v6);
  *a1 = v3;
}

uint64_t AppMatcher.init(url:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = sub_1C0301B70();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_6_0();
  v9 = v8 - v7;
  OUTLINED_FUNCTION_12(v8 - v7, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727C38);
  OUTLINED_FUNCTION_38_6();
  sub_1C006CAA8(v9);
  if (v2)
    return OUTLINED_FUNCTION_51_7(a1, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  v12 = v10;
  result = OUTLINED_FUNCTION_51_7(a1, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  *a2 = v12;
  return result;
}

uint64_t sub_1C02236CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = a1[2];
  v9 = a1[3];
  v10 = sub_1C006FBBC(a1[6]);
  v12 = sub_1C02D6848(a2, v10, v11, v8, v9);
  if (v4)
  {
    result = swift_bridgeObjectRelease();
    *a3 = v4;
  }
  else
  {
    v14 = v12;
    result = swift_bridgeObjectRelease();
    *a4 = v14;
  }
  return result;
}

void sub_1C022376C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v16;

  sub_1C0303B74();
  OUTLINED_FUNCTION_123_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_6_0();
  v7 = v6 - v5;
  if (qword_1ED728440 != -1)
    swift_once();
  v8 = (id)qword_1ED729668;
  sub_1C0303B68();
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v9 = OUTLINED_FUNCTION_7_3();
  *(_OWORD *)(v9 + 16) = xmmword_1C0305B60;
  v10 = sub_1C03046E4();
  v12 = v11;
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v9 + 32) = v10;
  *(_QWORD *)(v9 + 40) = v12;
  sub_1C0303B50();
  OUTLINED_FUNCTION_17_0();
  sub_1C0223938(a2, a1, a3, &v16);
  sub_1C03043D8();
  OUTLINED_FUNCTION_12_51();
  OUTLINED_FUNCTION_19_40(v7, *(uint64_t (**)(uint64_t, _QWORD))(v3 + 8));

  OUTLINED_FUNCTION_28_0();
}

void sub_1C0223938(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  _QWORD *v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD v60[2];
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v62 = a4;
  v67 = a3;
  v61 = type metadata accessor for SiriRemembersV1API.Aggregation();
  v69 = *(_QWORD *)(v61 - 8);
  v6 = MEMORY[0x1E0C80A78](v61);
  v8 = (char *)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v60 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    if (qword_1ED728430 != -1)
      swift_once();
    v12 = sub_1C0303B98();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED729650);
    v13 = sub_1C0303B80();
    v14 = sub_1C03042DC();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1C0039000, v13, v14, "making group-based decision", v15, 2u);
      MEMORY[0x1C3B98378](v15, -1, -1);
    }

    v71 = a1 + 32;
    v68 = a1;
    swift_bridgeObjectRetain();
    v16 = 0;
    v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v70 = v11;
    while (v16 != v11)
    {
      v18 = *(_QWORD *)(v71 + 24 * v16 + 16);
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        v72 = *(uint8_t **)(v71 + 24 * v16 + 16);
        v73 = v16;
        v20 = v69;
        v21 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
        v22 = v18 + v21;
        swift_bridgeObjectRetain();
        v23 = *(_QWORD *)(v20 + 72);
        do
        {
          sub_1C00638E8(v22, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C00ABF28();
            v17 = v25;
          }
          v24 = v17[2];
          if (v24 >= v17[3] >> 1)
          {
            sub_1C00ABF28();
            v17 = v26;
          }
          v17[2] = v24 + 1;
          sub_1C004555C((uint64_t)v10, (uint64_t)v17 + v21 + v24 * v23, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
          v22 += v23;
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease();
        v11 = v70;
        v16 = v73;
      }
      if (++v16 == v11)
        goto LABEL_38;
    }
LABEL_52:
    __break(1u);
LABEL_53:
    swift_once();
LABEL_46:
    v49 = sub_1C0303B98();
    __swift_project_value_buffer(v49, (uint64_t)qword_1ED729650);
    v50 = v17;
    v51 = sub_1C0303B80();
    v52 = sub_1C03042DC();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      v73 = swift_slowAlloc();
      v75 = v73;
      *(_DWORD *)v53 = 136315138;
      v72 = v53 + 4;
      v54 = v50;
      v55 = objc_msgSend(v54, sel_description);
      v56 = sub_1C0303EB0();
      v58 = v57;

      v74 = sub_1C003E6D8(v56, v58, &v75);
      sub_1C03044B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0039000, v51, v52, "app matcher decision: %s", v53, 0xCu);
      v59 = v73;
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v59, -1, -1);
      MEMORY[0x1C3B98378](v53, -1, -1);

    }
    else
    {

    }
    *v62 = v50;
    return;
  }
  if (qword_1ED728430 != -1)
    swift_once();
  v27 = sub_1C0303B98();
  __swift_project_value_buffer(v27, (uint64_t)qword_1ED729650);
  v28 = sub_1C0303B80();
  v29 = sub_1C03042DC();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v30 = 0;
    _os_log_impl(&dword_1C0039000, v28, v29, "making entity-based decision", v30, 2u);
    MEMORY[0x1C3B98378](v30, -1, -1);
  }

  v65 = *(_QWORD *)(a2 + 16);
  if (v65)
  {
    v64 = a2 + 32;
    v60[1] = a2;
    swift_bridgeObjectRetain();
    v31 = 0;
    v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v32 = *(_QWORD *)(v64 + 8 * v31);
      v71 = *(_QWORD *)(v32 + 16);
      if (v71)
        break;
LABEL_37:
      if (++v31 == v65)
      {
LABEL_38:
        swift_bridgeObjectRelease();
        goto LABEL_39;
      }
    }
    v66 = v31;
    v70 = v32 + 32;
    v33 = swift_bridgeObjectRetain();
    v34 = 0;
    v68 = v33;
    while (v34 < *(_QWORD *)(v33 + 16))
    {
      v35 = *(_QWORD *)(v70 + (v34 << 6) + 56);
      v36 = *(_QWORD *)(v35 + 16);
      if (v36)
      {
        v72 = *(uint8_t **)(v70 + (v34 << 6) + 56);
        v73 = v34;
        v37 = v69;
        v38 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
        v39 = v35 + v38;
        swift_bridgeObjectRetain();
        v40 = *(_QWORD *)(v37 + 72);
        do
        {
          sub_1C00638E8(v39, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C00ABF28();
            v17 = v42;
          }
          v41 = v17[2];
          if (v41 >= v17[3] >> 1)
          {
            sub_1C00ABF28();
            v17 = v43;
          }
          v17[2] = v41 + 1;
          sub_1C004555C((uint64_t)v8, (uint64_t)v17 + v38 + v41 * v40, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
          v39 += v40;
          --v36;
        }
        while (v36);
        swift_bridgeObjectRelease();
        v33 = v68;
        v34 = v73;
      }
      if (++v34 == v71)
      {
        swift_bridgeObjectRelease();
        v31 = v66;
        goto LABEL_37;
      }
    }
    __break(1u);
    goto LABEL_52;
  }
  v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_39:
  v75 = sub_1C0303DB4();
  v44 = v17[2];
  if (!v44)
  {
    swift_bridgeObjectRelease();
LABEL_45:
    v48 = sub_1C0224058();
    swift_bridgeObjectRelease();
    v17 = sub_1C00708FC(v48);
    swift_bridgeObjectRelease();
    if (qword_1ED728430 == -1)
      goto LABEL_46;
    goto LABEL_53;
  }
  v45 = (uint64_t)v17 + ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80));
  v46 = *(_QWORD *)(v69 + 72);
  swift_bridgeObjectRetain();
  v47 = v63;
  while (1)
  {
    sub_1C0224278((uint64_t)&v75, v45);
    if (v47)
      break;
    v45 += v46;
    if (!--v44)
    {
      v63 = 0;
      swift_bridgeObjectRelease_n();
      goto LABEL_45;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __break(1u);
}

uint64_t sub_1C0224058()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  if (qword_1ED728430 != -1)
    swift_once();
  v0 = sub_1C0303B98();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED729650);
  swift_bridgeObjectRetain_n();
  v1 = sub_1C0303B80();
  v2 = sub_1C03042E8();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    *(_DWORD *)v3 = 136315138;
    type metadata accessor for SiriRemembersV1API.Aggregation();
    OUTLINED_FUNCTION_44();
    v4 = sub_1C0303D9C();
    v6 = v5;
    OUTLINED_FUNCTION_33();
    sub_1C003E6D8(v4, v6, &v11);
    sub_1C03044B0();
    OUTLINED_FUNCTION_53_2();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v1, v2, "per-app aggregations: %s", v3, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_44();
  sub_1C00B1524();
  v8 = v7;
  OUTLINED_FUNCTION_33();
  v11 = v8;
  sub_1C022357C(&v11);
  v9 = sub_1C02232B8(v11);
  OUTLINED_FUNCTION_5_3();
  v11 = v9;
  OUTLINED_FUNCTION_44();
  sub_1C0223514(&v11);
  OUTLINED_FUNCTION_33();
  return v11;
}

void sub_1C0224278(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5B8B40);
  v4 = MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for SiriRemembersV1API.Aggregation();
  MEMORY[0x1E0C80A78](v5);
  __asm { BR              X10 }
}

void sub_1C022435C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v8 = sub_1C0304A08();
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
    v9 = *(_QWORD *)(v2 + 16);
    *(_QWORD *)(v7 - 96) = *(_QWORD *)(v2 + 8);
    *(_QWORD *)(v7 - 88) = v9;
    sub_1C004F408();
    swift_bridgeObjectRetain();
    v10 = (_QWORD *)sub_1C0304558();
    swift_bridgeObjectRelease();
    if (v10[2])
    {
      *(_QWORD *)(v7 - 112) = v6;
      *(_QWORD *)(v7 - 104) = v0;
      v12 = v10[4];
      v11 = v10[5];
      v13 = v10[6];
      v14 = v10[7];
      swift_bridgeObjectRetain();
      v15 = MEMORY[0x1C3B96E30](v12, v11, v13, v14);
      v17 = v16;
      swift_bridgeObjectRelease();
      if ((sub_1C01F1964(v15, v17, *(_QWORD **)(v7 - 72)) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      if (v10[2] >= 2uLL)
      {
        *(_QWORD *)(v7 - 128) = v4;
        *(_QWORD *)(v7 - 120) = v3;
        *(_QWORD *)(v7 - 72) = v1;
        v19 = v10[8];
        v18 = v10[9];
        v20 = v10[10];
        v21 = v10[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v22 = sub_1C02274C4(v19, v18, v20, v21, 0x676E696F6774756FLL, 0xE800000000000000);
        swift_bridgeObjectRelease();
        if ((v22 & 1) != 0)
        {
          swift_bridgeObjectRetain();
          sub_1C00A9AF4();
          swift_bridgeObjectRelease();
          v23 = *(_QWORD *)(v7 - 104);
          if (__swift_getEnumTagSinglePayload(v5, 1, v23) == 1)
          {
            sub_1C0044B78(v5, (uint64_t *)&unk_1EF5B8B40);
            v24 = *(_QWORD *)(v7 - 128);
            sub_1C00638E8(v2, v24, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
            __swift_storeEnumTagSinglePayload(v24, 0, 1, v23);
            sub_1C00A6E68(v24);
          }
          else
          {
            v25 = v5;
            v26 = *(_QWORD *)(v7 - 112);
            sub_1C004555C(v25, v26, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
            v27 = *(_QWORD *)(v7 - 128);
            sub_1C00A91D0();
            __swift_storeEnumTagSinglePayload(v27, 0, 1, v23);
            sub_1C00A6E68(v27);
            sub_1C003DD84(v26, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    JUMPOUT(0x1C0224688);
  }
}

void sub_1C02246A8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, double *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double *v51;
  uint64_t v52;
  double *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v57 = a1;
  v53 = a5;
  v56 = sub_1C0301CFC();
  v8 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B90D0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (uint64_t *)((char *)&v52 - v16);
  v18 = (char *)&v52 + *(int *)(v15 + 48) - v16;
  *v17 = a2;
  v17[1] = a3;
  v54 = (uint64_t)&v52 - v16;
  sub_1C00638E8(a4, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
  v19 = (uint64_t)v14 + *(int *)(v11 + 48);
  *v14 = a2;
  v14[1] = a3;
  sub_1C00638E8((uint64_t)v18, v19, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
  swift_bridgeObjectRetain_n();
  sub_1C003DD84(v19, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
  v20 = (uint64_t)v14 + *(int *)(v11 + 48);
  v55 = a2;
  *v14 = a2;
  v14[1] = a3;
  sub_1C00638E8((uint64_t)v18, v20, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
  v21 = (int *)type metadata accessor for SiriRemembersV1API.Aggregation();
  v22 = v8;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v24 = v56;
  v23(v10, v20 + v21[6], v56);
  v25 = v20;
  v26 = v57;
  sub_1C003DD84(v25, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
  sub_1C0301C9C();
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v24);
  if (__OFADD__(v26, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  v29 = (uint64_t)v14 + *(int *)(v11 + 48);
  v30 = v55;
  *v14 = v55;
  v14[1] = a3;
  sub_1C00638E8((uint64_t)v18, v29, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
  v31 = *(_QWORD *)(v29 + v21[7]);
  v32 = *(_QWORD *)(v29 + v21[8]);
  v33 = __OFADD__(v31, v32);
  v34 = v31 + v32;
  if (v33)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v35 = *(_QWORD *)(v29 + v21[9]);
  v33 = __OFADD__(v34, v35);
  v36 = v34 + v35;
  if (v33)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v37 = *(_QWORD *)(v29 + v21[10]);
  v33 = __OFADD__(v36, v37);
  v38 = v36 + v37;
  if (v33)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v39 = *(_QWORD *)(v29 + v21[11]);
  v33 = __OFADD__(v38, v39);
  v40 = v38 + v39;
  if (v33)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v41 = *(_QWORD *)(v29 + v21[12]);
  v33 = __OFADD__(v40, v41);
  v42 = v40 + v41;
  if (v33)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v43 = *(_QWORD *)(v29 + v21[13]);
  v33 = __OFADD__(v42, v43);
  v44 = v42 + v43;
  if (v33)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v45 = *(_QWORD *)(v29 + v21[14]);
  v46 = v44 + v45;
  if (__OFADD__(v44, v45))
  {
LABEL_20:
    __break(1u);
    return;
  }
  v47 = fabs(v28);
  v48 = 1.0 / (fmin((double)(v26 + 1), 10.0) * sqrt(v47 / 60.0));
  sub_1C003DD84(v29, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
  v49 = log10((double)v46) / 0.477121255;
  if (v49 > 0.1)
    v50 = v49;
  else
    v50 = 0.1;
  sub_1C0044B78(v54, &qword_1EF5B90D0);
  v51 = v53;
  *(_QWORD *)v53 = v30;
  *((_QWORD *)v51 + 1) = a3;
  *((_QWORD *)v51 + 2) = v26;
  v51[3] = v47;
  v51[4] = v48;
  v51[5] = v49;
  v51[6] = v48 * v50;
}

void __swiftcall AppSignals.init(bundleId:recencyOrder:secondsAgo:recencyScore:frequencyScore:overallScore:)(SiriInference::AppSignals *__return_ptr retstr, Swift::String bundleId, Swift::Int recencyOrder, Swift::Double secondsAgo, Swift::Double recencyScore, Swift::Double frequencyScore, Swift::Double overallScore)
{
  retstr->bundleId = bundleId;
  retstr->recencyOrder = recencyOrder;
  retstr->secondsAgo = secondsAgo;
  retstr->recencyScore = recencyScore;
  retstr->frequencyScore = frequencyScore;
  retstr->overallScore = overallScore;
}

uint64_t AppSignals.bundleId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppSignals.recencyOrder.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

double AppSignals.secondsAgo.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double AppSignals.recencyScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double AppSignals.frequencyScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

double AppSignals.overallScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

uint64_t sub_1C0224A20(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x4F79636E65636572 && a2 == 0xEC00000072656472;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x4173646E6F636573 && a2 == 0xEA00000000006F67;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x5379636E65636572 && a2 == 0xEC00000065726F63;
        if (v8 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x636E657571657266 && a2 == 0xEE0065726F635379;
          if (v9 || (sub_1C0304A08() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x536C6C617265766FLL && a2 == 0xEC00000065726F63)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v11 = sub_1C0304A08();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_1C0224D00(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0224D34 + 4 * byte_1C031D960[a1]))(0x6449656C646E7562, 0xE800000000000000);
}

uint64_t sub_1C0224D34()
{
  return 0x4F79636E65636572;
}

uint64_t sub_1C0224D54()
{
  return 0x4173646E6F636573;
}

uint64_t sub_1C0224D70()
{
  return 0x5379636E65636572;
}

uint64_t sub_1C0224DC8()
{
  unsigned __int8 *v0;

  return sub_1C0224D00(*v0);
}

uint64_t sub_1C0224DD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0224A20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0224DF4()
{
  sub_1C02251D0();
  return sub_1C0304BAC();
}

uint64_t sub_1C0224E1C()
{
  sub_1C02251D0();
  return sub_1C0304BB8();
}

void AppSignals.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C15A0);
  OUTLINED_FUNCTION_123_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_6_0();
  v7 = v6 - v5;
  v8 = a1[3];
  v9 = a1;
  v11 = v10;
  __swift_project_boxed_opaque_existential_1(v9, v8);
  sub_1C02251D0();
  sub_1C0304BA0();
  sub_1C0304960();
  if (!v2)
  {
    sub_1C0304984();
    OUTLINED_FUNCTION_1_102();
    OUTLINED_FUNCTION_1_102();
    OUTLINED_FUNCTION_1_102();
    OUTLINED_FUNCTION_1_102();
  }
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v7, v11);
  OUTLINED_FUNCTION_4_87();
}

void AppSignals.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C15B0);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_6_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02251D0();
  sub_1C0304B88();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    v6 = sub_1C03048AC();
    v8 = v7;
    swift_bridgeObjectRetain();
    v17 = sub_1C03048D0();
    OUTLINED_FUNCTION_5_17();
    v10 = v9;
    OUTLINED_FUNCTION_5_17();
    v12 = v11;
    OUTLINED_FUNCTION_5_17();
    v14 = v13;
    OUTLINED_FUNCTION_5_17();
    v16 = v15;
    OUTLINED_FUNCTION_0_31();
    *a2 = v6;
    a2[1] = v8;
    a2[2] = v17;
    a2[3] = v10;
    a2[4] = v12;
    a2[5] = v14;
    a2[6] = v16;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    OUTLINED_FUNCTION_17_0();
  }
  OUTLINED_FUNCTION_4_87();
}

void sub_1C02251A8(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  AppSignals.init(from:)(a1, a2);
}

void sub_1C02251BC(_QWORD *a1)
{
  AppSignals.encode(to:)(a1);
}

unint64_t sub_1C02251D0()
{
  unint64_t result;

  result = qword_1EF5C15A8;
  if (!qword_1EF5C15A8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031DAB4, &type metadata for AppSignals.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C15A8);
  }
  return result;
}

uint64_t initializeWithCopy for AppSignals(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AppSignals(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

uint64_t assignWithTake for AppSignals(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for AppSignals()
{
  return &type metadata for AppSignals;
}

uint64_t storeEnumTagSinglePayload for AppSignals.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1C0225364 + 4 * byte_1C031D96B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1C0225398 + 4 * byte_1C031D966[v4]))();
}

uint64_t sub_1C0225398(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02253A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02253A8);
  return result;
}

uint64_t sub_1C02253B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02253BCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1C02253C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02253C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppSignals.CodingKeys()
{
  return &type metadata for AppSignals.CodingKeys;
}

unint64_t sub_1C02253E8()
{
  unint64_t result;

  result = qword_1EF5C15B8;
  if (!qword_1EF5C15B8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031DA8C, &type metadata for AppSignals.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C15B8);
  }
  return result;
}

unint64_t sub_1C0225428()
{
  unint64_t result;

  result = qword_1EF5C15C0;
  if (!qword_1EF5C15C0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031D9FC, &type metadata for AppSignals.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C15C0);
  }
  return result;
}

unint64_t sub_1C0225468()
{
  unint64_t result;

  result = qword_1EF5C15C8;
  if (!qword_1EF5C15C8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031DA24, &type metadata for AppSignals.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C15C8);
  }
  return result;
}

uint64_t sub_1C02254A4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1C02236CC(a1, *(_QWORD *)(v3 + 16), a2, a3);
}

void sub_1C02254C0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double *v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  double v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _OWORD *v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;

  v3 = a1[1];
  v4 = sub_1C03049CC();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1C022684C(0, v3, 1, a1);
      return;
    }
    goto LABEL_125;
  }
  v5 = v4;
  sub_1C027E0BC(v3 / 2);
  v101 = a1;
  v102 = v6;
  v104 = v3;
  v105 = v7;
  if (v3 <= 0)
  {
    v106 = (char *)MEMORY[0x1E0DEE9D8];
    v33 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_91:
    if (v33 < 2)
    {
LABEL_102:
      swift_bridgeObjectRelease();
      if (v104 >= -1)
      {
        *(_QWORD *)(v102 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_130;
    }
    v94 = *v101;
    while (1)
    {
      v95 = v33 - 2;
      if (v33 < 2)
        break;
      if (!v94)
        goto LABEL_134;
      v96 = v106;
      v97 = *(_QWORD *)&v106[16 * v95 + 32];
      v98 = *(_QWORD *)&v106[16 * v33 + 24];
      sub_1C0226C9C((char *)(v94 + 56 * v97), (char *)(v94 + 56 * *(_QWORD *)&v106[16 * v33 + 16]), v94 + 56 * v98, v105);
      if (v1)
        goto LABEL_87;
      if (v98 < v97)
        goto LABEL_120;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v96 = sub_1C020FAB8();
      if (v95 >= *((_QWORD *)v96 + 2))
        goto LABEL_121;
      v99 = &v96[16 * v95 + 32];
      *(_QWORD *)v99 = v97;
      *((_QWORD *)v99 + 1) = v98;
      v100 = *((_QWORD *)v96 + 2);
      if (v33 > v100)
        goto LABEL_122;
      memmove(&v96[16 * v33 + 16], &v96[16 * v33 + 32], 16 * (v100 - v33));
      v106 = v96;
      *((_QWORD *)v96 + 2) = v100 - 1;
      v33 = v100 - 1;
      if (v100 <= 2)
        goto LABEL_102;
    }
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v106 = (char *)MEMORY[0x1E0DEE9D8];
  v103 = v5;
  while (1)
  {
    v10 = v8++;
    if (v8 < v3)
    {
      v11 = *(double *)(v9 + 56 * v8 + 48);
      v12 = *(double *)(v9 + 56 * v10 + 48);
      v8 = v10 + 2;
      if (v10 + 2 < v3)
      {
        v13 = (double *)(v9 + 160 + 56 * v10);
        v14 = v11;
        while (1)
        {
          v15 = v14;
          v14 = *v13;
          if (v12 < v11 == v15 >= *v13)
            break;
          ++v8;
          v13 += 7;
          if (v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v12 < v11)
      {
        if (v8 < v10)
          goto LABEL_127;
        if (v10 < v8)
        {
          v16 = 56 * v8;
          v17 = v8;
          v18 = v10;
          v19 = 56 * v10;
          do
          {
            if (v18 != --v17)
            {
              if (!v9)
                goto LABEL_133;
              v20 = v9 + v19;
              v21 = *(_OWORD *)(v9 + v19);
              v22 = v9 + v16;
              v23 = *(_QWORD *)(v9 + v19 + 16);
              v24 = *(_OWORD *)(v9 + v19 + 24);
              v25 = *(_OWORD *)(v9 + v19 + 40);
              v26 = *(_OWORD *)(v9 + v16 - 40);
              v27 = *(_OWORD *)(v9 + v16 - 24);
              v28 = *(_OWORD *)(v9 + v16 - 56);
              *(_QWORD *)(v20 + 48) = *(_QWORD *)(v9 + v16 - 8);
              *(_OWORD *)(v20 + 16) = v26;
              *(_OWORD *)(v20 + 32) = v27;
              *(_OWORD *)v20 = v28;
              *(_OWORD *)(v22 - 56) = v21;
              *(_QWORD *)(v22 - 40) = v23;
              *(_OWORD *)(v22 - 32) = v24;
              *(_OWORD *)(v22 - 16) = v25;
            }
            ++v18;
            v16 -= 56;
            v19 += 56;
          }
          while (v18 < v17);
        }
      }
    }
    if (v8 >= v3)
      goto LABEL_26;
    if (__OFSUB__(v8, v10))
      goto LABEL_124;
    if (v8 - v10 >= v5)
      goto LABEL_26;
    v29 = v10 + v5;
    if (__OFADD__(v10, v5))
      goto LABEL_128;
    if (v29 >= v3)
      v29 = v3;
    if (v29 < v10)
      goto LABEL_129;
    if (v8 == v29)
    {
LABEL_26:
      v30 = v106;
    }
    else
    {
      v81 = v9 + 40 + 56 * v8;
      v30 = v106;
      do
      {
        v82 = *(double *)(v9 + 56 * v8 + 48);
        v83 = v10;
        v84 = v81;
        do
        {
          if (*(double *)(v84 - 48) >= v82)
            break;
          if (!v9)
            goto LABEL_131;
          v85 = v84 - 40;
          v86 = (_OWORD *)(v84 - 96);
          v87 = *(_QWORD *)(v84 - 48);
          v89 = *(_OWORD *)(v84 - 80);
          v88 = *(_OWORD *)(v84 - 64);
          *(_QWORD *)(v84 - 56) = *(_QWORD *)v84;
          v84 -= 56;
          v90 = *(_QWORD *)(v84 + 16);
          v91 = *(_QWORD *)(v84 + 24);
          v92 = *(_QWORD *)(v84 + 32);
          v93 = *(_OWORD *)(v84 + 40);
          *(_OWORD *)v85 = *v86;
          *(_OWORD *)(v85 + 16) = v89;
          *(_OWORD *)(v85 + 32) = v88;
          *(_QWORD *)(v85 + 48) = v87;
          *(_QWORD *)(v84 - 40) = v90;
          *(_QWORD *)(v84 - 32) = v91;
          *(_QWORD *)(v84 - 24) = v92;
          *(_OWORD *)(v84 - 16) = v93;
          *(double *)(v84 + 8) = v82;
          ++v83;
        }
        while (v8 != v83);
        ++v8;
        v81 += 56;
      }
      while (v8 != v29);
      v8 = v29;
    }
    if (v8 < v10)
      goto LABEL_123;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v30 = sub_1C00500C8(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
    v32 = *((_QWORD *)v30 + 2);
    v31 = *((_QWORD *)v30 + 3);
    v33 = v32 + 1;
    if (v32 >= v31 >> 1)
      v30 = sub_1C00500C8((char *)(v31 > 1), v32 + 1, 1, v30);
    *((_QWORD *)v30 + 2) = v33;
    v34 = v30 + 32;
    v35 = &v30[16 * v32 + 32];
    *(_QWORD *)v35 = v10;
    *((_QWORD *)v35 + 1) = v8;
    v106 = v30;
    if (v32)
      break;
    v33 = 1;
LABEL_75:
    v5 = v103;
    v3 = v104;
    if (v8 >= v104)
      goto LABEL_91;
  }
  while (1)
  {
    v36 = v33 - 1;
    if (v33 >= 4)
    {
      v41 = &v34[16 * v33];
      v42 = *((_QWORD *)v41 - 8);
      v43 = *((_QWORD *)v41 - 7);
      v47 = __OFSUB__(v43, v42);
      v44 = v43 - v42;
      if (v47)
        goto LABEL_108;
      v46 = *((_QWORD *)v41 - 6);
      v45 = *((_QWORD *)v41 - 5);
      v47 = __OFSUB__(v45, v46);
      v39 = v45 - v46;
      v40 = v47;
      if (v47)
        goto LABEL_109;
      v48 = v33 - 2;
      v49 = &v34[16 * v33 - 32];
      v51 = *(_QWORD *)v49;
      v50 = *((_QWORD *)v49 + 1);
      v47 = __OFSUB__(v50, v51);
      v52 = v50 - v51;
      if (v47)
        goto LABEL_110;
      v47 = __OFADD__(v39, v52);
      v53 = v39 + v52;
      if (v47)
        goto LABEL_112;
      if (v53 >= v44)
      {
        v71 = &v34[16 * v36];
        v73 = *(_QWORD *)v71;
        v72 = *((_QWORD *)v71 + 1);
        v47 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v47)
          goto LABEL_118;
        v64 = v39 < v74;
        goto LABEL_64;
      }
    }
    else
    {
      if (v33 != 3)
      {
        v65 = *((_QWORD *)v30 + 4);
        v66 = *((_QWORD *)v30 + 5);
        v47 = __OFSUB__(v66, v65);
        v58 = v66 - v65;
        v59 = v47;
        goto LABEL_58;
      }
      v38 = *((_QWORD *)v30 + 4);
      v37 = *((_QWORD *)v30 + 5);
      v47 = __OFSUB__(v37, v38);
      v39 = v37 - v38;
      v40 = v47;
    }
    if ((v40 & 1) != 0)
      goto LABEL_111;
    v48 = v33 - 2;
    v54 = &v34[16 * v33 - 32];
    v56 = *(_QWORD *)v54;
    v55 = *((_QWORD *)v54 + 1);
    v57 = __OFSUB__(v55, v56);
    v58 = v55 - v56;
    v59 = v57;
    if (v57)
      goto LABEL_113;
    v60 = &v34[16 * v36];
    v62 = *(_QWORD *)v60;
    v61 = *((_QWORD *)v60 + 1);
    v47 = __OFSUB__(v61, v62);
    v63 = v61 - v62;
    if (v47)
      goto LABEL_115;
    if (__OFADD__(v58, v63))
      goto LABEL_117;
    if (v58 + v63 >= v39)
    {
      v64 = v39 < v63;
LABEL_64:
      if (v64)
        v36 = v48;
      goto LABEL_66;
    }
LABEL_58:
    if ((v59 & 1) != 0)
      goto LABEL_114;
    v67 = &v34[16 * v36];
    v69 = *(_QWORD *)v67;
    v68 = *((_QWORD *)v67 + 1);
    v47 = __OFSUB__(v68, v69);
    v70 = v68 - v69;
    if (v47)
      goto LABEL_116;
    if (v70 < v58)
      goto LABEL_75;
LABEL_66:
    v75 = v36 - 1;
    if (v36 - 1 >= v33)
    {
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
    if (!v9)
      goto LABEL_132;
    v76 = &v34[16 * v75];
    v77 = *(_QWORD *)v76;
    v78 = &v34[16 * v36];
    v79 = *((_QWORD *)v78 + 1);
    sub_1C0226C9C((char *)(v9 + 56 * *(_QWORD *)v76), (char *)(v9 + 56 * *(_QWORD *)v78), v9 + 56 * v79, v105);
    if (v1)
      break;
    if (v79 < v77)
      goto LABEL_105;
    if (v36 > *((_QWORD *)v106 + 2))
      goto LABEL_106;
    *(_QWORD *)v76 = v77;
    *(_QWORD *)&v34[16 * v75 + 8] = v79;
    v80 = *((_QWORD *)v106 + 2);
    if (v36 >= v80)
      goto LABEL_107;
    v30 = v106;
    v33 = v80 - 1;
    memmove(&v34[16 * v36], v78 + 16, 16 * (v80 - 1 - v36));
    *((_QWORD *)v106 + 2) = v80 - 1;
    if (v80 <= 2)
      goto LABEL_75;
  }
LABEL_87:
  swift_bridgeObjectRelease();
  if (v104 < -1)
    goto LABEL_126;
  *(_QWORD *)(v102 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_1C0225B40(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  void (*v100)(char *, uint64_t, uint64_t);
  char *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  BOOL v132;
  unint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  BOOL v142;
  uint64_t v143;
  char v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  BOOL v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void (*v186)(char *, uint64_t);
  void (*v187)(char *, uint64_t, uint64_t);
  _QWORD *v188;
  _QWORD *v189;
  _QWORD *v190;
  char *v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  _QWORD *v202;

  v2 = v1;
  v192 = sub_1C0301CFC();
  v201 = *(_QWORD *)(v192 - 8);
  v4 = MEMORY[0x1E0C80A78](v192);
  v191 = (char *)&v173 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v193 = (char *)&v173 - v6;
  v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B90D0);
  v184 = *(_QWORD *)(v195 - 8);
  v7 = MEMORY[0x1E0C80A78](v195);
  v181 = (uint64_t)&v173 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v196 = (uint64_t)&v173 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v190 = (uint64_t *)((char *)&v173 - v12);
  v13 = MEMORY[0x1E0C80A78](v11);
  v189 = (uint64_t *)((char *)&v173 - v14);
  v15 = MEMORY[0x1E0C80A78](v13);
  v188 = (uint64_t *)((char *)&v173 - v16);
  MEMORY[0x1E0C80A78](v15);
  v202 = (uint64_t *)((char *)&v173 - v17);
  v176 = a1;
  v18 = a1[1];
  v19 = sub_1C03049CC();
  if (v19 >= v18)
  {
    if ((v18 & 0x8000000000000000) == 0)
    {
      if (v18)
        sub_1C02268EC(0, v18, 1, v176);
      return;
    }
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
    goto LABEL_144;
  }
  v20 = v19;
  sub_1C027E244(v18 / 2);
  v174 = v21;
  v183 = v22;
  v175 = v18;
  if (v18 <= 0)
  {
    v24 = (char *)MEMORY[0x1E0DEE9D8];
    v117 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    v26 = v176;
LABEL_102:
    if (v117 < 2)
      goto LABEL_116;
    v167 = *v26;
    while (1)
    {
      v168 = v117 - 2;
      if (v117 < 2)
        break;
      if (!v167)
        goto LABEL_148;
      v169 = *(_QWORD *)&v24[16 * v168 + 32];
      v170 = *(_QWORD *)&v24[16 * v117 + 24];
      sub_1C0226E4C(v167 + *(_QWORD *)(v184 + 72) * v169, v167 + *(_QWORD *)(v184 + 72) * *(_QWORD *)&v24[16 * v117 + 16], v167 + *(_QWORD *)(v184 + 72) * v170, v183);
      if (v2)
        goto LABEL_114;
      if (v170 < v169)
        goto LABEL_135;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v24 = sub_1C020FAB8();
      if (v168 >= *((_QWORD *)v24 + 2))
        goto LABEL_136;
      v171 = &v24[16 * v168 + 32];
      *(_QWORD *)v171 = v169;
      *((_QWORD *)v171 + 1) = v170;
      v172 = *((_QWORD *)v24 + 2);
      if (v117 > v172)
        goto LABEL_137;
      memmove(&v24[16 * v117 + 16], &v24[16 * v117 + 32], 16 * (v172 - v117));
      *((_QWORD *)v24 + 2) = v172 - 1;
      v117 = v172 - 1;
      if (v172 <= 2)
        goto LABEL_116;
    }
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  v173 = v20;
  v23 = 0;
  v24 = (char *)MEMORY[0x1E0DEE9D8];
  v25 = v18;
  v26 = v176;
  while (1)
  {
    v177 = v24;
    v27 = v23;
    v28 = v23 + 1;
    if (v23 + 1 >= v25)
    {
      v24 = v177;
    }
    else
    {
      v178 = *v26;
      v29 = v178;
      v30 = *(char **)(v184 + 72);
      v200 = v30;
      v194 = v23 + 1;
      v31 = v178 + (_QWORD)v30 * v28;
      v32 = v202;
      sub_1C0045DFC(v31, (uint64_t)v202, &qword_1EF5B90D0);
      v33 = v29 + (_QWORD)v30 * v27;
      v34 = v188;
      sub_1C0045DFC(v33, (uint64_t)v188, &qword_1EF5B90D0);
      v35 = v195;
      v36 = *(int *)(v195 + 48);
      v37 = v189;
      v38 = (uint64_t)v189 + v36;
      v39 = v32[1];
      *v189 = *v32;
      v37[1] = v39;
      sub_1C00638E8((uint64_t)v32 + v36, v38, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
      v40 = type metadata accessor for SiriRemembersV1API.Aggregation();
      v41 = v38 + *(int *)(v40 + 24);
      v199 = (char *)v25;
      v42 = *(void (**)(char *, uint64_t, uint64_t))(v201 + 16);
      v182 = (char *)v27;
      v43 = v192;
      v42(v193, v41, v192);
      sub_1C003DD84(v38, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
      v44 = *(int *)(v35 + 48);
      v45 = v190;
      v46 = (uint64_t)v190 + v44;
      v47 = v34[1];
      *v190 = *v34;
      v45[1] = v47;
      sub_1C00638E8((uint64_t)v34 + v44, v46, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
      v197 = v40;
      v48 = v46 + *(int *)(v40 + 24);
      v49 = v191;
      v187 = v42;
      v42(v191, v48, v43);
      sub_1C003DD84(v46, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
      v50 = v193;
      LODWORD(v198) = sub_1C0301C6C();
      v51 = *(void (**)(char *, uint64_t))(v201 + 8);
      v25 = (uint64_t)v199;
      v52 = v49;
      v53 = v178;
      v51(v52, v43);
      v54 = v43;
      v27 = (uint64_t)v182;
      v186 = v51;
      v51(v50, v54);
      sub_1C0044B78((uint64_t)v34, &qword_1EF5B90D0);
      sub_1C0044B78((uint64_t)v202, &qword_1EF5B90D0);
      v55 = v200;
      v28 = v27 + 2;
      if (v27 + 2 < v25)
      {
        v180 = v2;
        v185 = (_QWORD)v200 * v194;
        v179 = (_QWORD)v200 * v28;
        while (1)
        {
          v194 = v28;
          v56 = v202;
          sub_1C0045DFC(v53 + v179, (uint64_t)v202, &qword_1EF5B90D0);
          v57 = v188;
          sub_1C0045DFC(v53 + v185, (uint64_t)v188, &qword_1EF5B90D0);
          v58 = v195;
          v59 = *(int *)(v195 + 48);
          v60 = v189;
          v61 = (uint64_t)v189 + v59;
          v62 = v56[1];
          *v189 = *v56;
          v60[1] = v62;
          sub_1C00638E8((uint64_t)v56 + v59, v61, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
          v63 = v197;
          v64 = v192;
          v65 = v193;
          v66 = v187;
          v187(v193, v61 + *(int *)(v197 + 24), v192);
          sub_1C003DD84(v61, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
          v67 = *(int *)(v58 + 48);
          v68 = v190;
          v69 = (uint64_t)v190 + v67;
          v70 = v57[1];
          *v190 = *v57;
          v68[1] = v70;
          sub_1C00638E8((uint64_t)v57 + v67, v69, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
          v71 = v191;
          v66(v191, v69 + *(int *)(v63 + 24), v64);
          sub_1C003DD84(v69, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
          LODWORD(v69) = sub_1C0301C6C();
          v72 = v71;
          v73 = v186;
          v186(v72, v64);
          v73(v65, v64);
          sub_1C0044B78((uint64_t)v57, &qword_1EF5B90D0);
          sub_1C0044B78((uint64_t)v56, &qword_1EF5B90D0);
          if (((v198 ^ v69) & 1) != 0)
            break;
          v28 = v194 + 1;
          v25 = (uint64_t)v199;
          v55 = v200;
          v53 += (uint64_t)v200;
          if (v194 + 1 >= (uint64_t)v199)
          {
            v28 = (uint64_t)v199;
            v2 = v180;
            v26 = v176;
            v27 = (uint64_t)v182;
            goto LABEL_12;
          }
        }
        v2 = v180;
        v26 = v176;
        v28 = v194;
        v27 = (uint64_t)v182;
        v25 = (uint64_t)v199;
        v55 = v200;
      }
LABEL_12:
      v24 = v177;
      if ((v198 & 1) != 0)
      {
        if (v28 < v27)
          goto LABEL_141;
        if (v27 < v28)
        {
          v74 = 0;
          v75 = (_QWORD)v55 * (v28 - 1);
          v76 = v27;
          v77 = v28 * (_QWORD)v55;
          v78 = v76;
          v79 = v76 * (_QWORD)v55;
          do
          {
            if (v78 != v28 + v74 - 1)
            {
              v180 = v2;
              v80 = v178;
              if (!v178)
                goto LABEL_147;
              v81 = v178 + v79;
              v198 = v178 + v75;
              sub_1C005A718(v178 + v79, v181, &qword_1EF5B90D0);
              if (v79 < v75 || v81 >= v80 + v77)
              {
                v83 = v198;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                v83 = v198;
                if (v79 != v75)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_1C005A718(v181, v83, &qword_1EF5B90D0);
              v2 = v180;
              v55 = v200;
            }
            ++v78;
            --v74;
            v75 -= (uint64_t)v55;
            v77 -= (uint64_t)v55;
            v79 += (uint64_t)v55;
          }
          while (v78 < v28 + v74);
          v24 = v177;
          v27 = (uint64_t)v182;
          v25 = (uint64_t)v199;
        }
      }
    }
    if (v28 < v25)
    {
      if (__OFSUB__(v28, v27))
        goto LABEL_139;
      if (v28 - v27 < v173)
      {
        if (__OFADD__(v27, v173))
          goto LABEL_142;
        if (v27 + v173 >= v25)
          v84 = v25;
        else
          v84 = v27 + v173;
        if (v84 < v27)
          goto LABEL_143;
        if (v28 != v84)
        {
          v182 = (char *)v27;
          v180 = v2;
          v85 = *(_QWORD *)(v184 + 72);
          v86 = v85 * (v28 - 1);
          v185 = v85;
          v87 = v28 * v85;
          v179 = v84;
          do
          {
            v88 = 0;
            v89 = v182;
            v194 = v28;
            v186 = (void (*)(char *, uint64_t))v87;
            v187 = (void (*)(char *, uint64_t, uint64_t))v86;
            while (1)
            {
              v200 = v89;
              v90 = *v26;
              v199 = (char *)(v87 + v88);
              v91 = v202;
              sub_1C0045DFC(v87 + v88 + v90, (uint64_t)v202, &qword_1EF5B90D0);
              v197 = v88;
              v198 = v86 + v88;
              v92 = v188;
              sub_1C0045DFC(v86 + v88 + v90, (uint64_t)v188, &qword_1EF5B90D0);
              v93 = v195;
              v94 = *(int *)(v195 + 48);
              v95 = v189;
              v96 = (uint64_t)v189 + v94;
              v97 = v91[1];
              *v189 = *v91;
              v95[1] = v97;
              sub_1C00638E8((uint64_t)v91 + v94, v96, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
              v98 = type metadata accessor for SiriRemembersV1API.Aggregation();
              v99 = v26;
              v100 = *(void (**)(char *, uint64_t, uint64_t))(v201 + 16);
              v102 = v192;
              v101 = v193;
              v100(v193, v96 + *(int *)(v98 + 24), v192);
              sub_1C003DD84(v96, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
              v103 = *(int *)(v93 + 48);
              v104 = v190;
              v105 = (uint64_t)v190 + v103;
              v106 = v92[1];
              *v190 = *v92;
              v104[1] = v106;
              sub_1C00638E8((uint64_t)v92 + v103, v105, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
              v107 = v105 + *(int *)(v98 + 24);
              v108 = v191;
              v100(v191, v107, v102);
              sub_1C003DD84(v105, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
              LOBYTE(v105) = sub_1C0301C6C();
              v109 = *(void (**)(char *, uint64_t))(v201 + 8);
              v109(v108, v102);
              v109(v101, v102);
              sub_1C0044B78((uint64_t)v92, &qword_1EF5B90D0);
              sub_1C0044B78((uint64_t)v202, &qword_1EF5B90D0);
              if ((v105 & 1) == 0)
                break;
              v110 = *v99;
              if (!*v99)
                goto LABEL_145;
              v26 = v99;
              v87 = (uint64_t)v186;
              v86 = (uint64_t)v187;
              v111 = v197;
              v112 = (uint64_t)v187 + v110 + v197;
              sub_1C005A718((uint64_t)v186 + v110 + v197, v196, &qword_1EF5B90D0);
              swift_arrayInitWithTakeFrontToBack();
              sub_1C005A718(v196, v112, &qword_1EF5B90D0);
              v88 = v111 - v185;
              v89 = v200 + 1;
              v113 = v194;
              if ((char *)v194 == v200 + 1)
                goto LABEL_45;
            }
            v26 = v99;
            v113 = v194;
            v87 = (uint64_t)v186;
            v86 = (uint64_t)v187;
LABEL_45:
            v28 = v113 + 1;
            v86 += v185;
            v87 += v185;
          }
          while (v28 != v179);
          v28 = v179;
          v2 = v180;
          v24 = v177;
          v27 = (uint64_t)v182;
        }
      }
    }
    if (v28 < v27)
      goto LABEL_138;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v194 = v28;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v24 = sub_1C00500C8(0, *((_QWORD *)v24 + 2) + 1, 1, v24);
    v116 = *((_QWORD *)v24 + 2);
    v115 = *((_QWORD *)v24 + 3);
    v117 = v116 + 1;
    if (v116 >= v115 >> 1)
      v24 = sub_1C00500C8((char *)(v115 > 1), v116 + 1, 1, v24);
    *((_QWORD *)v24 + 2) = v117;
    v200 = v24 + 32;
    v118 = &v24[16 * v116 + 32];
    v119 = v194;
    *(_QWORD *)v118 = v27;
    *((_QWORD *)v118 + 1) = v119;
    if (v116)
      break;
    v117 = 1;
LABEL_96:
    v25 = v26[1];
    v23 = v194;
    if (v194 >= v25)
      goto LABEL_102;
  }
  v120 = v200;
  while (1)
  {
    v121 = v117 - 1;
    if (v117 >= 4)
    {
      v126 = &v120[16 * v117];
      v127 = *((_QWORD *)v126 - 8);
      v128 = *((_QWORD *)v126 - 7);
      v132 = __OFSUB__(v128, v127);
      v129 = v128 - v127;
      if (v132)
        goto LABEL_123;
      v131 = *((_QWORD *)v126 - 6);
      v130 = *((_QWORD *)v126 - 5);
      v132 = __OFSUB__(v130, v131);
      v124 = v130 - v131;
      v125 = v132;
      if (v132)
        goto LABEL_124;
      v133 = v117 - 2;
      v134 = &v120[16 * v117 - 32];
      v136 = *(_QWORD *)v134;
      v135 = *((_QWORD *)v134 + 1);
      v132 = __OFSUB__(v135, v136);
      v137 = v135 - v136;
      if (v132)
        goto LABEL_125;
      v132 = __OFADD__(v124, v137);
      v138 = v124 + v137;
      if (v132)
        goto LABEL_127;
      if (v138 >= v129)
      {
        v156 = &v120[16 * v121];
        v158 = *(_QWORD *)v156;
        v157 = *((_QWORD *)v156 + 1);
        v132 = __OFSUB__(v157, v158);
        v159 = v157 - v158;
        if (v132)
          goto LABEL_133;
        v149 = v124 < v159;
        goto LABEL_85;
      }
    }
    else
    {
      if (v117 != 3)
      {
        v150 = *((_QWORD *)v24 + 4);
        v151 = *((_QWORD *)v24 + 5);
        v132 = __OFSUB__(v151, v150);
        v143 = v151 - v150;
        v144 = v132;
        goto LABEL_79;
      }
      v123 = *((_QWORD *)v24 + 4);
      v122 = *((_QWORD *)v24 + 5);
      v132 = __OFSUB__(v122, v123);
      v124 = v122 - v123;
      v125 = v132;
    }
    if ((v125 & 1) != 0)
      goto LABEL_126;
    v133 = v117 - 2;
    v139 = &v120[16 * v117 - 32];
    v141 = *(_QWORD *)v139;
    v140 = *((_QWORD *)v139 + 1);
    v142 = __OFSUB__(v140, v141);
    v143 = v140 - v141;
    v144 = v142;
    if (v142)
      goto LABEL_128;
    v145 = &v120[16 * v121];
    v147 = *(_QWORD *)v145;
    v146 = *((_QWORD *)v145 + 1);
    v132 = __OFSUB__(v146, v147);
    v148 = v146 - v147;
    if (v132)
      goto LABEL_130;
    if (__OFADD__(v143, v148))
      goto LABEL_132;
    if (v143 + v148 >= v124)
    {
      v149 = v124 < v148;
LABEL_85:
      if (v149)
        v121 = v133;
      goto LABEL_87;
    }
LABEL_79:
    if ((v144 & 1) != 0)
      goto LABEL_129;
    v152 = &v120[16 * v121];
    v154 = *(_QWORD *)v152;
    v153 = *((_QWORD *)v152 + 1);
    v132 = __OFSUB__(v153, v154);
    v155 = v153 - v154;
    if (v132)
      goto LABEL_131;
    if (v155 < v143)
      goto LABEL_96;
LABEL_87:
    v160 = v121 - 1;
    if (v121 - 1 >= v117)
    {
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    if (!*v26)
      goto LABEL_146;
    v161 = &v120[16 * v160];
    v162 = v120;
    v163 = *(_QWORD *)v161;
    v164 = &v162[16 * v121];
    v165 = *((_QWORD *)v164 + 1);
    sub_1C0226E4C(*v26 + *(_QWORD *)(v184 + 72) * *(_QWORD *)v161, *v26 + *(_QWORD *)(v184 + 72) * *(_QWORD *)v164, *v26 + *(_QWORD *)(v184 + 72) * v165, v183);
    if (v2)
      break;
    if (v165 < v163)
      goto LABEL_120;
    if (v121 > *((_QWORD *)v24 + 2))
      goto LABEL_121;
    *(_QWORD *)v161 = v163;
    v120 = v200;
    *(_QWORD *)&v200[16 * v160 + 8] = v165;
    v166 = *((_QWORD *)v24 + 2);
    if (v121 >= v166)
      goto LABEL_122;
    v117 = v166 - 1;
    memmove(v164, v164 + 16, 16 * (v166 - 1 - v121));
    *((_QWORD *)v24 + 2) = v166 - 1;
    if (v166 <= 2)
      goto LABEL_96;
  }
LABEL_114:
  swift_bridgeObjectRelease();
  if (v175 >= -1)
    goto LABEL_117;
  __break(1u);
LABEL_116:
  swift_bridgeObjectRelease();
  if (v175 >= -1)
  {
LABEL_117:
    *(_QWORD *)(v174 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
}

uint64_t sub_1C022684C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 56 * a3 + 40;
    while (2)
    {
      v6 = *(double *)(v4 + 56 * a3 + 48);
      v7 = result;
      v8 = v5;
      do
      {
        if (*(double *)(v8 - 48) >= v6)
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        v9 = v8 - 40;
        v10 = (_OWORD *)(v8 - 96);
        v11 = *(_QWORD *)(v8 - 48);
        v13 = *(_OWORD *)(v8 - 80);
        v12 = *(_OWORD *)(v8 - 64);
        *(_QWORD *)(v8 - 56) = *(_QWORD *)v8;
        v8 -= 56;
        v14 = *(_QWORD *)(v8 + 16);
        v15 = *(_QWORD *)(v8 + 24);
        v16 = *(_QWORD *)(v8 + 32);
        v17 = *(_OWORD *)(v8 + 40);
        *(_OWORD *)v9 = *v10;
        *(_OWORD *)(v9 + 16) = v13;
        *(_OWORD *)(v9 + 32) = v12;
        *(_QWORD *)(v9 + 48) = v11;
        *(_QWORD *)(v8 - 40) = v14;
        *(_QWORD *)(v8 - 32) = v15;
        *(_QWORD *)(v8 - 24) = v16;
        *(_OWORD *)(v8 - 16) = v17;
        *(double *)(v8 + 8) = v6;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 56;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

void sub_1C02268EC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;

  v50 = a1;
  v57 = sub_1C0301CFC();
  v68 = *(_QWORD *)(v57 - 8);
  v7 = MEMORY[0x1E0C80A78](v57);
  v56 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v55 = (char *)&v48 - v9;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B90D0);
  v10 = MEMORY[0x1E0C80A78](v62);
  v63 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v54 = (uint64_t *)((char *)&v48 - v13);
  v14 = MEMORY[0x1E0C80A78](v12);
  v53 = (uint64_t *)((char *)&v48 - v15);
  v16 = MEMORY[0x1E0C80A78](v14);
  v52 = (uint64_t *)((char *)&v48 - v17);
  MEMORY[0x1E0C80A78](v16);
  v67 = (uint64_t *)((char *)&v48 - v19);
  v61 = a3;
  v49 = a2;
  if (a3 != a2)
  {
    v20 = *(_QWORD *)(v18 + 72);
    v21 = v20 * (v61 - 1);
    v58 = v20;
    v22 = v20 * v61;
    v51 = a4;
    v23 = v55;
    while (2)
    {
      v24 = 0;
      v66 = v50;
      v59 = v22;
      v60 = v21;
      do
      {
        v25 = *a4;
        v65 = v22 + v24;
        v26 = v67;
        sub_1C0045DFC(v22 + v24 + v25, (uint64_t)v67, &qword_1EF5B90D0);
        v64 = v21 + v24;
        v27 = v21 + v24 + v25;
        v28 = v52;
        sub_1C0045DFC(v27, (uint64_t)v52, &qword_1EF5B90D0);
        v29 = v62;
        v30 = *(int *)(v62 + 48);
        v31 = v53;
        v32 = (uint64_t)v53 + v30;
        v33 = v26[1];
        *v53 = *v26;
        v31[1] = v33;
        sub_1C00638E8((uint64_t)v26 + v30, v32, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
        v34 = type metadata accessor for SiriRemembersV1API.Aggregation();
        v35 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
        v36 = v57;
        v35(v23, v32 + *(int *)(v34 + 24), v57);
        sub_1C003DD84(v32, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
        v37 = *(int *)(v29 + 48);
        v38 = v54;
        v39 = (uint64_t)v54 + v37;
        v40 = v28[1];
        *v54 = *v28;
        v38[1] = v40;
        sub_1C00638E8((uint64_t)v28 + v37, v39, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
        v41 = v39 + *(int *)(v34 + 24);
        v42 = v56;
        v35(v56, v41, v36);
        sub_1C003DD84(v39, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
        LOBYTE(v39) = sub_1C0301C6C();
        v43 = *(void (**)(char *, uint64_t))(v68 + 8);
        v43(v42, v36);
        v44 = v36;
        v22 = v59;
        v43(v23, v44);
        a4 = v51;
        v45 = (uint64_t)v28;
        v21 = v60;
        sub_1C0044B78(v45, &qword_1EF5B90D0);
        sub_1C0044B78((uint64_t)v67, &qword_1EF5B90D0);
        if ((v39 & 1) == 0)
          break;
        v46 = *a4;
        if (!*a4)
        {
          __break(1u);
          return;
        }
        v47 = v46 + v21 + v24;
        sub_1C005A718(v46 + v22 + v24, v63, &qword_1EF5B90D0);
        swift_arrayInitWithTakeFrontToBack();
        sub_1C005A718(v63, v47, &qword_1EF5B90D0);
        v24 -= v58;
        ++v66;
      }
      while (v61 != v66);
      v21 += v58;
      v22 += v58;
      if (++v61 != v49)
        continue;
      break;
    }
  }
}

uint64_t sub_1C0226C9C(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  char *v14;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  unint64_t v21;
  char *v22;
  char *v23;
  BOOL v24;
  BOOL v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 56;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 56;
  if (v9 >= v11)
  {
    sub_1C00ADD9C(a2, (uint64_t)(a3 - (_QWORD)a2) / 56, a4);
    v12 = &v4[56 * v11];
    if (v7 >= v6 || v10 < 56)
      goto LABEL_41;
    v21 = a3 - 56;
    while (1)
    {
      v22 = (char *)(v21 + 56);
      if (*((double *)v6 - 1) >= *((double *)v12 - 1))
      {
        v23 = v12 - 56;
        v25 = v22 != v12 || v21 >= (unint64_t)v12;
        v12 -= 56;
        if (!v25)
          goto LABEL_37;
      }
      else
      {
        v23 = v6 - 56;
        v24 = v22 != v6 || v21 >= (unint64_t)v6;
        v6 -= 56;
        if (!v24)
          goto LABEL_37;
      }
      v26 = *(_OWORD *)v23;
      v27 = *((_OWORD *)v23 + 1);
      v28 = *((_OWORD *)v23 + 2);
      *(_QWORD *)(v21 + 48) = *((_QWORD *)v23 + 6);
      *(_OWORD *)(v21 + 16) = v27;
      *(_OWORD *)(v21 + 32) = v28;
      *(_OWORD *)v21 = v26;
LABEL_37:
      v21 -= 56;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_41;
    }
  }
  sub_1C00ADD9C(a1, (a2 - a1) / 56, a4);
  v12 = &v4[56 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 56)
  {
    do
    {
      if (*((double *)v4 + 6) >= *((double *)v6 + 6))
      {
        v13 = v7 == v4;
        v14 = v4;
        v4 += 56;
        if (v13 && v7 < v4)
          goto LABEL_16;
      }
      else
      {
        v13 = v7 == v6;
        v14 = v6;
        v6 += 56;
        if (v13 && v7 < v6)
          goto LABEL_16;
      }
      v17 = *(_OWORD *)v14;
      v18 = *((_OWORD *)v14 + 1);
      v19 = *((_OWORD *)v14 + 2);
      *((_QWORD *)v7 + 6) = *((_QWORD *)v14 + 6);
      *((_OWORD *)v7 + 1) = v18;
      *((_OWORD *)v7 + 2) = v19;
      *(_OWORD *)v7 = v17;
LABEL_16:
      v7 += 56;
    }
    while (v4 < v12 && (unint64_t)v6 < a3);
  }
  v6 = v7;
LABEL_41:
  sub_1C00ADD9C(v4, (v12 - v4) / 56, v6);
  return 1;
}

void sub_1C0226E4C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v48;
  BOOL v50;
  int64_t v52;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  char *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  void (*v72)(char *, uint64_t);
  unint64_t v73;
  unint64_t v75;
  unint64_t v76;
  unint64_t v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  _QWORD *v88;
  _QWORD *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;

  v99 = a3;
  v92 = sub_1C0301CFC();
  v98 = *(_QWORD *)(v92 - 8);
  v7 = MEMORY[0x1E0C80A78](v92);
  v91 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v90 = (char *)&v80 - v9;
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B90D0);
  v10 = MEMORY[0x1E0C80A78](v96);
  v89 = (uint64_t *)((char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x1E0C80A78](v10);
  v88 = (uint64_t *)((char *)&v80 - v13);
  v14 = MEMORY[0x1E0C80A78](v12);
  v87 = (uint64_t *)((char *)&v80 - v15);
  MEMORY[0x1E0C80A78](v14);
  v86 = (uint64_t *)((char *)&v80 - v17);
  v18 = *(_QWORD *)(v16 + 72);
  if (!v18)
  {
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v19 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v18 == -1)
    goto LABEL_77;
  v21 = v99 - a2;
  if (v99 - a2 == 0x8000000000000000 && v18 == -1)
    goto LABEL_78;
  v23 = v19 / v18;
  v24 = v21 / v18;
  v82 = *(_QWORD *)(v16 + 72);
  if (v19 / v18 >= v21 / v18)
  {
    sub_1C00AE480(a2, v21 / v18);
    v25 = a4 + v24 * v18;
    if (v24 * v18 < 1 || a1 >= a2)
      goto LABEL_45;
    v81 = -v18;
    v94 = a1;
    v95 = a4;
    v54 = v92;
    while (1)
    {
      v97 = a2;
      v93 = v25;
      v55 = v81;
      v85 = v99;
      v99 += v81;
      v84 = v25 + v81;
      v56 = v86;
      sub_1C0045DFC(v25 + v81, (uint64_t)v86, &qword_1EF5B90D0);
      v83 = a2 + v55;
      v57 = v87;
      sub_1C0045DFC(a2 + v55, (uint64_t)v87, &qword_1EF5B90D0);
      v58 = v96;
      v59 = *(int *)(v96 + 48);
      v60 = v88;
      v61 = (uint64_t)v88 + v59;
      v62 = v56[1];
      *v88 = *v56;
      v60[1] = v62;
      sub_1C00638E8((uint64_t)v56 + v59, v61, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
      v63 = type metadata accessor for SiriRemembersV1API.Aggregation();
      v64 = *(void (**)(char *, uint64_t, uint64_t))(v98 + 16);
      v65 = v90;
      v64(v90, v61 + *(int *)(v63 + 24), v54);
      sub_1C003DD84(v61, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
      v66 = *(int *)(v58 + 48);
      v67 = v89;
      v68 = (uint64_t)v89 + v66;
      v69 = v57[1];
      *v89 = *v57;
      v67[1] = v69;
      sub_1C00638E8((uint64_t)v57 + v66, v68, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
      v70 = v68 + *(int *)(v63 + 24);
      v71 = v91;
      v64(v91, v70, v54);
      sub_1C003DD84(v68, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
      LOBYTE(v68) = sub_1C0301C6C();
      v72 = *(void (**)(char *, uint64_t))(v98 + 8);
      v72(v71, v54);
      v72(v65, v54);
      sub_1C0044B78((uint64_t)v57, &qword_1EF5B90D0);
      sub_1C0044B78((uint64_t)v56, &qword_1EF5B90D0);
      if ((v68 & 1) != 0)
        break;
      v76 = v97;
      if (v85 >= v93 && v99 < v93)
      {
        v75 = v94;
        a4 = v95;
        a2 = v97;
        if (v85 == v93)
        {
          v25 = v84;
          goto LABEL_70;
        }
        v73 = v84;
LABEL_67:
        swift_arrayInitWithTakeBackToFront();
        goto LABEL_69;
      }
      v78 = v84;
      swift_arrayInitWithTakeFrontToBack();
      v25 = v78;
      v75 = v94;
      a4 = v95;
      a2 = v76;
LABEL_70:
      if (v25 <= a4 || a2 <= v75)
        goto LABEL_45;
    }
    v73 = v93;
    if (v85 < v97 || v99 >= v97)
    {
      a2 = v83;
      swift_arrayInitWithTakeFrontToBack();
      v75 = v94;
      a4 = v95;
    }
    else
    {
      v75 = v94;
      a4 = v95;
      if (v85 != v97)
      {
        a2 = v83;
        goto LABEL_67;
      }
      a2 = v83;
    }
LABEL_69:
    v25 = v73;
    goto LABEL_70;
  }
  sub_1C00AE480(a1, v19 / v18);
  v25 = a4 + v23 * v18;
  if (v23 * v18 >= 1 && a2 < v99)
  {
    v93 = a4 + v23 * v18;
    v27 = v92;
    do
    {
      v97 = a2;
      v94 = a1;
      v95 = a4;
      v28 = v86;
      sub_1C0045DFC(a2, (uint64_t)v86, &qword_1EF5B90D0);
      v29 = v87;
      sub_1C0045DFC(a4, (uint64_t)v87, &qword_1EF5B90D0);
      v30 = v96;
      v31 = *(int *)(v96 + 48);
      v32 = v88;
      v33 = (uint64_t)v88 + v31;
      v34 = v28[1];
      *v88 = *v28;
      v32[1] = v34;
      sub_1C00638E8((uint64_t)v28 + v31, v33, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
      v35 = type metadata accessor for SiriRemembersV1API.Aggregation();
      v36 = *(void (**)(char *, uint64_t, uint64_t))(v98 + 16);
      v37 = v90;
      v36(v90, v33 + *(int *)(v35 + 24), v27);
      sub_1C003DD84(v33, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
      v38 = *(int *)(v30 + 48);
      v39 = v89;
      v40 = (uint64_t)v89 + v38;
      v41 = v29[1];
      *v89 = *v29;
      v39[1] = v41;
      sub_1C00638E8((uint64_t)v29 + v38, v40, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
      v42 = v91;
      v36(v91, v40 + *(int *)(v35 + 24), v27);
      sub_1C003DD84(v40, (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersV1API.Aggregation);
      LOBYTE(v40) = sub_1C0301C6C();
      v43 = *(void (**)(char *, uint64_t))(v98 + 8);
      v43(v42, v27);
      v43(v37, v27);
      sub_1C0044B78((uint64_t)v29, &qword_1EF5B90D0);
      sub_1C0044B78((uint64_t)v28, &qword_1EF5B90D0);
      if ((v40 & 1) != 0)
      {
        v44 = v82;
        v45 = v97 + v82;
        v46 = v94;
        a4 = v95;
        if (v94 < v97 || v94 >= v45)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v94 != v97)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        v48 = v97;
        v44 = v82;
        v46 = v94;
        a4 = v95 + v82;
        if (v94 < v95 || v94 >= a4)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v94 != v95)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v45 = v48;
      }
      v25 = v93;
      a1 = v46 + v44;
      v50 = a4 >= v93 || v45 >= v99;
      a2 = v45;
    }
    while (!v50);
  }
LABEL_45:
  v52 = v25 - a4;
  if (v82 != -1 || v52 != 0x8000000000000000)
  {
    sub_1C00AE480(a4, v52 / v82);
    return;
  }
LABEL_79:
  __break(1u);
}

uint64_t sub_1C02274C4(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  BOOL v7;

  if ((a6 & 0x2000000000000000) != 0)
    v6 = HIBYTE(a6) & 0xF;
  else
    v6 = a5 & 0xFFFFFFFFFFFFLL;
  v7 = a3 == a5 && a4 == a6;
  if (v7 && !(a1 >> 16) && a2 >> 16 == v6)
    return 1;
  else
    return sub_1C03049D8() & 1;
}

uint64_t OUTLINED_FUNCTION_1_102()
{
  return sub_1C0304978();
}

void OUTLINED_FUNCTION_9_76()
{
  sub_1C00B231C();
}

uint64_t OUTLINED_FUNCTION_12_51()
{
  return sub_1C0303B5C();
}

uint64_t OUTLINED_FUNCTION_13_51()
{
  return sub_1C0303B5C();
}

uint64_t OUTLINED_FUNCTION_19_40@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 88));
}

uint64_t OUTLINED_FUNCTION_21_38()
{
  return type metadata accessor for AppMatches();
}

uint64_t sub_1C02275B4@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C15D8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - v6;
  sub_1C0302C2C();
  v8 = sub_1C0302E30();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1)
    goto LABEL_7;
  sub_1C022771C((uint64_t)v7, (uint64_t)v5);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v5, v8);
  if (v10 != *MEMORY[0x1E0DA13C8])
  {
    if (v10 == *MEMORY[0x1E0DA13C0])
    {
      v11 = 0;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v8);
LABEL_7:
    v11 = 2;
    goto LABEL_8;
  }
  v11 = 1;
LABEL_8:
  *a1 = v11;
  return sub_1C02276DC((uint64_t)v7);
}

uint64_t sub_1C02276DC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C15D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C022771C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C15D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t initializeWithCopy for HolidayConstraintSolver(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for HolidayConstraintSolver(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t assignWithTake for HolidayConstraintSolver(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for HolidayConstraintSolver(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HolidayConstraintSolver(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HolidayConstraintSolver()
{
  return &type metadata for HolidayConstraintSolver;
}

uint64_t sub_1C0227890(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C03045C4();
    type metadata accessor for DateTimeConstraint();
    sub_1C007BC44();
    result = sub_1C0304270();
    v2 = v33;
    v31 = v34;
    v4 = v35;
    v5 = v36;
    v6 = v37;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v31 = a1 + 56;
    v8 = ~v7;
    v9 = -v7;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v6 = v10 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v4 = v8;
    v5 = 0;
  }
  v30 = (unint64_t)(v4 + 64) >> 6;
  if (v2 < 0)
    goto LABEL_10;
LABEL_8:
  if (v6)
  {
    v11 = (v6 - 1) & v6;
    v12 = __clz(__rbit64(v6)) | (v5 << 6);
    v13 = v5;
    goto LABEL_29;
  }
  v15 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  if (v15 >= v30)
    goto LABEL_64;
  v16 = *(_QWORD *)(v31 + 8 * v15);
  v13 = v5 + 1;
  if (!v16)
  {
    v13 = v5 + 2;
    if (v5 + 2 >= v30)
      goto LABEL_64;
    v16 = *(_QWORD *)(v31 + 8 * v13);
    if (!v16)
    {
      v13 = v5 + 3;
      if (v5 + 3 >= v30)
        goto LABEL_64;
      v16 = *(_QWORD *)(v31 + 8 * v13);
      if (!v16)
      {
        v13 = v5 + 4;
        if (v5 + 4 >= v30)
          goto LABEL_64;
        v16 = *(_QWORD *)(v31 + 8 * v13);
        if (!v16)
        {
          v13 = v5 + 5;
          if (v5 + 5 < v30)
          {
            v16 = *(_QWORD *)(v31 + 8 * v13);
            if (!v16)
            {
              v17 = v5 + 6;
              do
              {
                if (v17 >= v30)
                  goto LABEL_64;
                v16 = *(_QWORD *)(v31 + 8 * v17++);
              }
              while (!v16);
              v13 = v17 - 1;
            }
            goto LABEL_28;
          }
LABEL_64:
          sub_1C00B7078();
          swift_release();
          return 0;
        }
      }
    }
  }
LABEL_28:
  v11 = (v16 - 1) & v16;
  v12 = __clz(__rbit64(v16)) + (v13 << 6);
LABEL_29:
  v14 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v12);
  swift_retain();
  if (!v14)
    goto LABEL_64;
  while (1)
  {
    if (*(_BYTE *)(v14 + 16) != 11)
      goto LABEL_60;
    v18 = *(unsigned __int8 *)(v14 + 49);
    v19 = *(unsigned __int8 *)(a2 + 49);
    v20 = v18 == 1 ? 6581861 : 0x746573746F6ELL;
    v21 = v18 == 1 ? 0xE300000000000000 : 0xE600000000000000;
    v22 = *(_BYTE *)(v14 + 49) ? v20 : 0x7472617473;
    v23 = *(_BYTE *)(v14 + 49) ? v21 : 0xE500000000000000;
    v24 = v19 == 1 ? 6581861 : 0x746573746F6ELL;
    v25 = v19 == 1 ? 0xE300000000000000 : 0xE600000000000000;
    v26 = *(_BYTE *)(a2 + 49) ? v24 : 0x7472617473;
    v27 = *(_BYTE *)(a2 + 49) ? v25 : 0xE500000000000000;
    if (v22 == v26 && v23 == v27)
      break;
    v29 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v29 & 1) != 0)
      goto LABEL_63;
LABEL_60:
    result = swift_release();
    v5 = v13;
    v6 = v11;
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_8;
LABEL_10:
    if (sub_1C0304624())
    {
      type metadata accessor for DateTimeConstraint();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v14 = v38;
      swift_unknownObjectRelease();
      v13 = v5;
      v11 = v6;
      if (v38)
        continue;
    }
    goto LABEL_64;
  }
  swift_bridgeObjectRelease_n();
LABEL_63:
  sub_1C00B7078();
  swift_release();
  return v14;
}

uint64_t sub_1C0227C30(unint64_t a1, uint64_t a2, char *a3, uint64_t a4, int a5, unint64_t *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  int v52;
  _BOOL4 v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  BOOL v72;
  unint64_t v73;
  char v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  unint64_t v80;
  char *v81;
  char v82;
  char v83;
  uint64_t v84;
  int *v85;
  _BYTE *v86;
  uint64_t v87;
  void (*v88)(uint64_t, char *);
  uint64_t v89;
  void (*v90)(uint64_t, char *);
  _BYTE *v91;
  _BYTE *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  void (*v101)(unint64_t, _QWORD, uint64_t);
  int v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  void (*v121)(uint64_t, uint64_t);
  char *v122;
  uint64_t v123;
  char v124;
  int v125;
  uint64_t v126;
  int64_t v127;
  void (*v128)(char *, int64_t, uint64_t);
  char *v129;
  uint64_t v130;
  int64_t v131;
  uint64_t v132;
  char v133;
  unint64_t v134;
  unint64_t *v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  int v139;
  unint64_t *v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  char *v149;
  _QWORD *v150;
  char *v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  unint64_t v157;
  unint64_t v158;
  _BYTE *v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  unint64_t v163;
  __int128 v164;
  unsigned int v165;
  unsigned int v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  unint64_t v170;
  int v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  char *v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  int v186;
  void (*v187)(_BYTE *, char *, uint64_t);
  void (*v188)(unint64_t, uint64_t, uint64_t);
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  NSObject *v198;
  char *v199;
  unint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  _QWORD *v206;

  v143 = a4;
  v199 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725930);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_53();
  v185 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728360);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_6_0();
  v14 = v13 - v12;
  _s19ConvergenceStrategyOMa();
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_53();
  v202 = v16;
  v17 = sub_1C0301EC4();
  v190 = *(_QWORD *)(v17 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_6_0();
  v21 = v20 - v19;
  v184 = sub_1C0301954();
  v183 = *(_QWORD *)(v184 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_53();
  v201 = v23;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED728050);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_6_0();
  v27 = v26 - v25;
  v155 = type metadata accessor for HolidayResolutionContext();
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_53();
  v159 = (_BYTE *)v29;
  v30 = sub_1C03016E4();
  v176 = *(_QWORD *)(v30 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_35_16();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_35_16();
  v34 = MEMORY[0x1E0C80A78](v33);
  v36 = (char *)&v136 - v35;
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_35_16();
  MEMORY[0x1E0C80A78](v37);
  v175 = (char *)&v136 - v38;
  v191 = sub_1C0301CFC();
  v178 = *(_QWORD *)(v191 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_35_16();
  result = MEMORY[0x1E0C80A78](v40);
  v192 = (char *)&v136 - v42;
  if (*(_BYTE *)(a1 + 48) != 3)
    return result;
  LODWORD(v197) = a5;
  v147 = v36;
  v182 = v14;
  v43 = *(_QWORD *)(a1 + 24);
  v44 = *(_QWORD **)(a1 + 32);
  v157 = *(_QWORD *)(a1 + 40);
  v140 = a6;
  v45 = type metadata accessor for RecurringDateInterval();
  v46 = swift_bridgeObjectRetain();
  v145 = v45;
  v195 = MEMORY[0x1C3B97040](v46, v45);
  v200 = v47;
  OUTLINED_FUNCTION_14();
  if (qword_1EF5B7F10 != -1)
    goto LABEL_68;
  while (1)
  {
    v48 = sub_1C0303B98();
    __swift_project_value_buffer(v48, (uint64_t)qword_1EF5FC6C8);
    OUTLINED_FUNCTION_16_53(v43, (uint64_t)v44);
    OUTLINED_FUNCTION_16_53(v43, (uint64_t)v44);
    swift_bridgeObjectRetain();
    v49 = sub_1C0303B80();
    v50 = sub_1C03042E8();
    v51 = v43;
    v52 = v50;
    v198 = v49;
    v53 = os_log_type_enabled(v49, v50);
    v196 = a1;
    v177 = v21;
    v181 = v27;
    v154 = v51;
    v153 = v44;
    if (v53)
    {
      v54 = swift_slowAlloc();
      v194 = swift_slowAlloc();
      v205 = v194;
      *(_DWORD *)v54 = 136315394;
      OUTLINED_FUNCTION_31_6();
      v55 = OUTLINED_FUNCTION_13_52();
      v203 = sub_1C003E6D8(v55, v56, v57);
      sub_1C03044B0();
      v58 = OUTLINED_FUNCTION_13_52();
      LODWORD(v193) = v52;
      OUTLINED_FUNCTION_8_65(v58, v59);
      OUTLINED_FUNCTION_8_65(v51, (uint64_t)v44);
      OUTLINED_FUNCTION_8_1();
      *(_WORD *)(v54 + 12) = 2080;
      v60 = v200;
      swift_bridgeObjectRetain();
      v203 = sub_1C003E6D8(v195, v60, &v205);
      sub_1C03044B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0039000, v198, (os_log_type_t)v193, "going to solve holidayId %s, inputs: %s", (uint8_t *)v54, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }
    v61 = a1;
    v62 = OUTLINED_FUNCTION_13_52();
    v21 = v157;
    OUTLINED_FUNCTION_10_67(v62, v63);
    v64 = OUTLINED_FUNCTION_13_52();
    OUTLINED_FUNCTION_10_67(v64, v65);

    swift_bridgeObjectRelease_n();
    v206 = (_QWORD *)MEMORY[0x1E0DEE9E8];
    v66 = *v140;
    v141 = v66;
    v67 = v197;
    if (v66 >> 62)
    {
      swift_bridgeObjectRetain();
      v69 = sub_1C03047F8();
      v66 = v141;
    }
    else
    {
      v68 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v69 = v68;
    }
    v43 = v61;
    if (v69)
    {
      v70 = 0;
      v149 = &v199[OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_language];
      v148 = &v199[OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_timeZone];
      v189 = &v199[OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_calendar];
      v139 = *(unsigned __int8 *)(v43 + 49);
      v71 = v66 & 0xC000000000000001;
      v136 = v66 + 32;
      v166 = *MEMORY[0x1E0CB0FE0];
      v165 = *MEMORY[0x1E0CB0FD8];
      v164 = xmmword_1C03084B0;
      v171 = v67 & 1;
      v179 = v17;
      v138 = v69;
      v137 = v66 & 0xC000000000000001;
      while (1)
      {
        a1 = v66;
        v27 = v71;
        sub_1C02CFE78(v70, v71 == 0, v66);
        if (v27)
        {
          v144 = MEMORY[0x1C3B975EC](v70, v66);
        }
        else
        {
          v144 = *(_QWORD *)(v136 + 8 * v70);
          swift_retain();
        }
        v72 = __OFADD__(v70, 1);
        v73 = v70 + 1;
        if (v72)
          goto LABEL_67;
        v142 = v73;
        if (v139)
        {
          v74 = sub_1C0304A08();
          swift_bridgeObjectRelease();
          v27 = *(_QWORD *)(v176 + 16);
          if ((v74 & 1) == 0)
          {
            v75 = v175;
            ((void (*)(char *, uint64_t, uint64_t))v27)(v175, v144 + OBJC_IVAR____TtC13SiriInference21RecurringDateInterval_interval, v30);
            sub_1C03016B4();
            goto LABEL_18;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          v27 = *(_QWORD *)(v176 + 16);
        }
        v75 = v175;
        ((void (*)(void))v27)();
        sub_1C03016CC();
LABEL_18:
        v199 = *(char **)(v176 + 8);
        ((void (*)(char *, uint64_t))v199)(v75, v30);
        swift_retain();
        v76 = v160;
        v77 = sub_1C0227890(v143, v43);
        v160 = v76;
        if (v77)
        {
          OUTLINED_FUNCTION_28_2();
          v78 = swift_bridgeObjectRetain();
          sub_1C00A77F8(v78);
          v44 = v79;
          swift_release();
          OUTLINED_FUNCTION_14();
        }
        else
        {
          v44 = &unk_1E7988A80;
        }
        v152 = v44[2];
        if (v152)
        {
          v180 = v144 + OBJC_IVAR____TtC13SiriInference21RecurringDateInterval_interval;
          v151 = (char *)(v44 + 4);
          OUTLINED_FUNCTION_28_2();
          a1 = 0;
          v188 = (void (*)(unint64_t, uint64_t, uint64_t))v27;
          v150 = v44;
          while (a1 < v44[2])
          {
            v80 = v21 >> 8;
            v158 = a1;
            v81 = &v151[16 * a1];
            v82 = v21;
            v83 = v81[8];
            v84 = *(_QWORD *)v81;
            v85 = (int *)v155;
            v86 = v159;
            (*(void (**)(_BYTE *, char *, uint64_t))(v178 + 16))(&v159[*(int *)(v155 + 20)], v192, v191);
            sub_1C0301DB0();
            v87 = OUTLINED_FUNCTION_17_50();
            v88(v87, v149);
            sub_1C0301F00();
            v89 = OUTLINED_FUNCTION_17_50();
            v90(v89, v148);
            v91 = &v86[v85[8]];
            v187 = *(void (**)(_BYTE *, char *, uint64_t))(v190 + 16);
            v187(v91, v189, v17);
            *v86 = v82;
            v92 = &v86[v85[9]];
            *(_QWORD *)v92 = v84;
            v92[8] = v83;
            v86[v85[10]] = v80;
            __swift_project_boxed_opaque_existential_1(v156, v156[3]);
            v93 = v160;
            sub_1C01534EC();
            v160 = v93;
            if (v93)
            {
              OUTLINED_FUNCTION_12_52();
              sub_1C0228D28((uint64_t)v159, (uint64_t (*)(_QWORD))type metadata accessor for HolidayResolutionContext);
              OUTLINED_FUNCTION_26();
              OUTLINED_FUNCTION_3_112();
              OUTLINED_FUNCTION_26();
              return swift_bridgeObjectRelease();
            }
            v43 = v196;
            v163 = v94;
            if (v94 >> 62)
            {
              swift_bridgeObjectRetain();
              v95 = sub_1C03047F8();
              swift_bridgeObjectRelease();
            }
            else
            {
              v95 = *(_QWORD *)((v94 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            v21 = v177;
            v44 = v147;
            v27 = (int64_t)v188;
            if (v95)
            {
              a1 = 0;
              v186 = *(unsigned __int8 *)(v43 + 52);
              v168 = v163 & 0xC000000000000001;
              v162 = v163 & 0xFFFFFFFFFFFFFF8;
              v161 = v163 + 32;
              v167 = v95;
              while (1)
              {
                if (v168)
                {
                  v198 = MEMORY[0x1C3B975EC](a1, v163);
                }
                else
                {
                  if (a1 >= *(_QWORD *)(v162 + 16))
                    goto LABEL_62;
                  v198 = *(NSObject **)(v161 + 8 * a1);
                  swift_retain();
                }
                v72 = __OFADD__(a1++, 1);
                if (v72)
                  break;
                v170 = a1;
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C15E0);
                v96 = sub_1C0301E34();
                v97 = *(_QWORD *)(v96 - 8);
                v197 = *(_QWORD *)(v97 + 72);
                v98 = (*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
                v99 = swift_allocObject();
                *(_OWORD *)(v99 + 16) = v164;
                v169 = v99;
                v100 = v99 + v98;
                v43 = v196;
                v194 = v97;
                v101 = *(void (**)(unint64_t, _QWORD, uint64_t))(v97 + 104);
                v101(v100, v166, v96);
                v193 = v100;
                v195 = v96;
                v101(v100 + v197, v165, v96);
                v102 = 0;
                v103 = 0;
                do
                {
                  LODWORD(v200) = v102;
                  v104 = v193 + v103 * v197;
                  ((void (*)(_QWORD *, uint64_t, uint64_t))v27)(v44, v180, v30);
                  v105 = (uint64_t)v201;
                  sub_1C01A0938();
                  v187((_BYTE *)v21, v189, v17);
                  v106 = v195;
                  v107 = v30;
                  v108 = v202;
                  (*(void (**)(uint64_t, unint64_t, uint64_t))(v194 + 16))(v202, v104, v195);
                  __swift_storeEnumTagSinglePayload(v108, 0, 3, v106);
                  v109 = v185;
                  sub_1C0080508(v185);
                  v110 = v44;
                  v111 = v21;
                  v112 = v182;
                  sub_1C02EA3B0(v105, v108, v186, v111, v109, v182);
                  v113 = v112;
                  sub_1C00A8370(v109, &qword_1ED725930);
                  v114 = v112;
                  v115 = v191;
                  if (__swift_getEnumTagSinglePayload(v114, 1, v191) == 1)
                  {
                    sub_1C00A8370(v113, &qword_1ED728360);
                    v116 = v181;
                    __swift_storeEnumTagSinglePayload(v181, 1, 1, v107);
                  }
                  else
                  {
                    v117 = v178;
                    v118 = v172;
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(v178 + 32))(v172, v113, v115);
                    v116 = v181;
                    sub_1C0080D30(v118, v111, v43, v171, v181);
                    (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v118, v115);
                  }
                  v30 = v107;
                  v21 = v111;
                  sub_1C0228D28(v202, (uint64_t (*)(_QWORD))_s19ConvergenceStrategyOMa);
                  v17 = v179;
                  (*(void (**)(uint64_t, uint64_t))(v190 + 8))(v111, v179);
                  (*(void (**)(char *, uint64_t))(v183 + 8))(v201, v184);
                  ((void (*)(_QWORD *, uint64_t))v199)(v110, v30);
                  v44 = v110;
                  if (__swift_getEnumTagSinglePayload(v116, 1, v30) == 1)
                  {
                    sub_1C00A8370(v116, (uint64_t *)&unk_1ED728050);
                    v43 = v196;
                    v27 = (int64_t)v188;
                  }
                  else
                  {
                    v119 = v173;
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(v176 + 32))(v173, v116, v30);
                    v27 = (int64_t)v188;
                    v188(v174, v119, v30);
                    v120 = v175;
                    sub_1C022DF94();
                    v121 = (void (*)(uint64_t, uint64_t))v199;
                    v122 = v120;
                    v21 = v177;
                    v43 = v196;
                    ((void (*)(char *, uint64_t))v199)(v122, v30);
                    v121(v119, v30);
                  }
                  v102 = 1;
                  v103 = 1;
                }
                while ((v200 & 1) == 0);
                swift_release();
                OUTLINED_FUNCTION_26();
                a1 = v170;
                if (v170 == v167)
                  goto LABEL_43;
              }
              __break(1u);
LABEL_62:
              __break(1u);
              break;
            }
LABEL_43:
            a1 = v158 + 1;
            OUTLINED_FUNCTION_26();
            sub_1C0228D28((uint64_t)v159, (uint64_t (*)(_QWORD))type metadata accessor for HolidayResolutionContext);
            v21 = v157;
            v44 = v150;
            if (a1 == v152)
              goto LABEL_46;
          }
          __break(1u);
          goto LABEL_64;
        }
LABEL_46:
        OUTLINED_FUNCTION_8_1();
        OUTLINED_FUNCTION_12_52();
        OUTLINED_FUNCTION_3_112();
        v70 = v142;
        v66 = v141;
        v71 = v137;
        if (v142 == v138)
        {
          swift_bridgeObjectRelease();
          v44 = v206;
          goto LABEL_50;
        }
      }
    }
    swift_bridgeObjectRelease();
    v44 = (_QWORD *)MEMORY[0x1E0DEE9E8];
LABEL_50:
    v21 = v44[2];
    if (!v21)
      break;
    v204 = MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_31_6();
    sub_1C030475C();
    v27 = sub_1C00824B4(v44);
    v43 = v123;
    v125 = v124 & 1;
    v201 = (char *)(v44 + 7);
    a1 = v174;
    while ((v27 & 0x8000000000000000) == 0 && v27 < 1 << *((_BYTE *)v44 + 32))
    {
      if (((*(_QWORD *)&v201[((unint64_t)v27 >> 3) & 0xFFFFFFFFFFFFF8] >> v27) & 1) == 0)
        goto LABEL_65;
      if (*((_DWORD *)v44 + 9) != (_DWORD)v43)
        goto LABEL_66;
      v126 = v176;
      v127 = v44[6] + *(_QWORD *)(v176 + 72) * v27;
      v128 = *(void (**)(char *, int64_t, uint64_t))(v176 + 16);
      v129 = v175;
      LODWORD(v202) = v125;
      v128(v175, v127, v30);
      (*(void (**)(unint64_t, char *, uint64_t))(v126 + 32))(a1, v129, v30);
      v130 = v146;
      v128((char *)v146, a1, v30);
      swift_allocObject();
      v17 = sub_1C0079B00(v130, 0);
      (*(void (**)(unint64_t, uint64_t))(v126 + 8))(a1, v30);
      sub_1C0304738();
      sub_1C0304768();
      sub_1C0304774();
      sub_1C0304744();
      v131 = sub_1C0082610(v27, v43, v202 & 1, (uint64_t)v44);
      v27 = v131;
      v43 = v132;
      v125 = v133 & 1;
      if (!--v21)
      {
        sub_1C00A6E5C(v131, v132, v125);
        v134 = v204;
        goto LABEL_59;
      }
    }
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    swift_once();
  }
  OUTLINED_FUNCTION_31_6();
  v134 = MEMORY[0x1E0DEE9D8];
LABEL_59:
  v135 = v140;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8_1();
  result = OUTLINED_FUNCTION_14();
  *v135 = v134;
  return result;
}

uint64_t sub_1C0228D14(unint64_t a1, uint64_t a2, char *a3, uint64_t a4, int a5, unint64_t *a6)
{
  return sub_1C0227C30(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C0228D28(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  OUTLINED_FUNCTION_34_0(v3);
  return a1;
}

uint64_t OUTLINED_FUNCTION_3_112()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 344) + 8))(*(_QWORD *)(v0 - 232), *(_QWORD *)(v0 - 240));
}

uint64_t OUTLINED_FUNCTION_8_65(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C007BD18(a1, a2, v2, 3);
}

uint64_t OUTLINED_FUNCTION_10_67(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C007BD18(a1, a2, v2, 3);
}

uint64_t OUTLINED_FUNCTION_12_52()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_13_52()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_16_53(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C007BCE0(a1, a2, v2, 3);
}

uint64_t OUTLINED_FUNCTION_17_50()
{
  uint64_t v0;

  return v0;
}

void sub_1C0228DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67[2];
  _OWORD v68[2];
  _OWORD v69[3];

  OUTLINED_FUNCTION_37_8();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C15F0);
    v2 = OUTLINED_FUNCTION_0_121();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  OUTLINED_FUNCTION_15_47();
  v5 = -(-1 << v4);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & v3;
  OUTLINED_FUNCTION_13_53();
  v8 = v2 + 64;
  OUTLINED_FUNCTION_44();
  swift_retain();
  v9 = 0;
  if (!v7)
    goto LABEL_9;
LABEL_8:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v11 = v10 | (v9 << 6);
  while (1)
  {
    v24 = (_QWORD *)(*(_QWORD *)(v0 + 48) + 16 * v11);
    v25 = v24[1];
    v26 = *(_DWORD *)(*(_QWORD *)(v0 + 56) + 4 * v11);
    *(_QWORD *)&v69[0] = *v24;
    *((_QWORD *)&v69[0] + 1) = v25;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_6_7();
    HIDWORD(v56) = v26;
    v27 = OUTLINED_FUNCTION_6_7();
    OUTLINED_FUNCTION_14_56(v27, v28, v29, v30, v31, v32, v33, v34, v50, v52, v54, v56, v58);
    v35 = sub_1C006ED00(&v63, v68);
    OUTLINED_FUNCTION_12_53((uint64_t)v35, v36, v37, v38, v39, v40, v41, v42, v51, v53, v55, v57, v59, v60, v61, *((uint64_t *)&v61 + 1), v62, v63, *((uint64_t *)&v63 + 1),
      v64,
      v65,
      v66,
      v67[0]);
    sub_1C006ED00(v68, v69);
    sub_1C006ED00(v69, v67);
    v43 = OUTLINED_FUNCTION_11_68() & ~(-1 << *(_BYTE *)(v2 + 32));
    if (((-1 << v43) & ~*(_QWORD *)(v8 + 8 * (v43 >> 6))) == 0)
    {
      OUTLINED_FUNCTION_16();
      while (++v46 != v47 || (v45 & 1) == 0)
      {
        v48 = v46 == v47;
        if (v46 == v47)
          v46 = 0;
        v45 |= v48;
        if (*(_QWORD *)(v8 + 8 * v46) != -1)
        {
          OUTLINED_FUNCTION_15_18();
          goto LABEL_39;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    OUTLINED_FUNCTION_17_16();
LABEL_39:
    *(_QWORD *)(v8 + ((v44 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v44;
    v49 = *(_QWORD *)(v2 + 48) + 40 * v44;
    *(_OWORD *)v49 = v58;
    *(_OWORD *)(v49 + 16) = v61;
    *(_QWORD *)(v49 + 32) = v62;
    sub_1C006ED00(v67, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v44));
    ++*(_QWORD *)(v2 + 16);
    if (v7)
      goto LABEL_8;
LABEL_9:
    if (__OFADD__(v9, 1))
      goto LABEL_43;
    OUTLINED_FUNCTION_34_12();
    if (v12 == v13)
      goto LABEL_41;
    OUTLINED_FUNCTION_20_34();
    if (!v14)
    {
      OUTLINED_FUNCTION_3_113();
      if (v12 == v13)
        goto LABEL_41;
      OUTLINED_FUNCTION_7_81();
      if (!v15)
      {
        OUTLINED_FUNCTION_3_113();
        if (v12 == v13)
          goto LABEL_41;
        OUTLINED_FUNCTION_7_81();
        if (!v16)
        {
          OUTLINED_FUNCTION_3_113();
          if (v12 == v13)
            goto LABEL_41;
          OUTLINED_FUNCTION_7_81();
          if (!v17)
          {
            OUTLINED_FUNCTION_34_12();
            if (v12 == v13)
            {
LABEL_41:
              OUTLINED_FUNCTION_9_77();
              OUTLINED_FUNCTION_8_66();
              return;
            }
            if (!*(_QWORD *)(v54 + 8 * v18))
              break;
          }
        }
      }
    }
LABEL_29:
    OUTLINED_FUNCTION_4_88();
    v7 = v21 & v20;
    v11 = v23 + (v22 << 6);
    v9 = v22;
  }
  while (!__OFADD__(v18, 1))
  {
    OUTLINED_FUNCTION_3_113();
    if (v12 == v13)
      goto LABEL_41;
    OUTLINED_FUNCTION_18_39();
    if (v19)
      goto LABEL_29;
  }
LABEL_44:
  __break(1u);
}

void sub_1C0229094()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_37_8();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728150);
    v2 = (_QWORD *)OUTLINED_FUNCTION_0_121();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  OUTLINED_FUNCTION_1_103();
  v5 = v4 & v3;
  OUTLINED_FUNCTION_44();
  v6 = 0;
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        v7 = __clz(__rbit64(v5));
        v5 &= v5 - 1;
        v8 = v7 | (v6 << 6);
      }
      else
      {
        if (__OFADD__(v6, 1))
          goto LABEL_36;
        OUTLINED_FUNCTION_21_39();
        if (v9 == v10)
        {
LABEL_33:
          sub_1C00B7078();
          return;
        }
        OUTLINED_FUNCTION_20_34();
        if (!v11)
        {
          OUTLINED_FUNCTION_2_106();
          if (v9 == v10)
            goto LABEL_33;
          OUTLINED_FUNCTION_6_88();
          if (!v12)
          {
            OUTLINED_FUNCTION_2_106();
            if (v9 == v10)
              goto LABEL_33;
            OUTLINED_FUNCTION_6_88();
            if (!v13)
            {
              OUTLINED_FUNCTION_2_106();
              if (v9 == v10)
                goto LABEL_33;
              OUTLINED_FUNCTION_6_88();
              if (!v14)
              {
                OUTLINED_FUNCTION_21_39();
                if (v9 == v10)
                  goto LABEL_33;
                if (!*(_QWORD *)(v34 + 8 * v15))
                {
                  while (!__OFADD__(v15, 1))
                  {
                    OUTLINED_FUNCTION_2_106();
                    if (v9 == v10)
                      goto LABEL_33;
                    OUTLINED_FUNCTION_18_39();
                    if (v16)
                      goto LABEL_27;
                  }
                  goto LABEL_37;
                }
              }
            }
          }
        }
LABEL_27:
        OUTLINED_FUNCTION_4_88();
        v5 = v18 & v17;
        v8 = v20 + (v19 << 6);
        v6 = v19;
      }
      v21 = (uint64_t *)(*(_QWORD *)(v0 + 48) + 16 * v8);
      v23 = *v21;
      v22 = v21[1];
      v24 = *(void **)(*(_QWORD *)(v0 + 56) + 8 * v8);
      swift_bridgeObjectRetain();
      v25 = v24;
      v26 = sub_1C00B3C3C(v23, v22);
      v27 = v26;
      if ((v28 & 1) == 0)
        break;
      v29 = (uint64_t *)(v2[6] + 16 * v26);
      swift_bridgeObjectRelease();
      *v29 = v23;
      v29[1] = v22;
      v30 = v2[7];

      *(_QWORD *)(v30 + 8 * v27) = v25;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v26;
    v31 = (uint64_t *)(v2[6] + 16 * v26);
    *v31 = v23;
    v31[1] = v22;
    *(_QWORD *)(v2[7] + 8 * v26) = v25;
    v32 = v2[2];
    v10 = __OFADD__(v32, 1);
    v33 = v32 + 1;
    if (v10)
      goto LABEL_35;
    v2[2] = v33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1C02292BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD *v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67[2];
  _OWORD v68[2];
  _OWORD v69[3];
  _OWORD v70[2];
  __int128 v71;
  _OWORD v72[2];

  OUTLINED_FUNCTION_37_8();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C15F0);
    v2 = OUTLINED_FUNCTION_0_121();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  OUTLINED_FUNCTION_15_47();
  v5 = -(-1 << v4);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & v3;
  OUTLINED_FUNCTION_13_53();
  v56 = v72;
  v8 = v2 + 64;
  OUTLINED_FUNCTION_44();
  swift_retain();
  v9 = 0;
  if (!v7)
    goto LABEL_9;
LABEL_8:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v11 = v10 | (v9 << 6);
  while (1)
  {
    v24 = (uint64_t *)(*(_QWORD *)(v0 + 48) + 16 * v11);
    v26 = *v24;
    v25 = v24[1];
    sub_1C003E8FC(*(_QWORD *)(v0 + 56) + 32 * v11, (uint64_t)v56);
    *(_QWORD *)&v71 = v26;
    *((_QWORD *)&v71 + 1) = v25;
    v69[2] = v71;
    v70[0] = v72[0];
    v70[1] = v72[1];
    *(_QWORD *)&v69[0] = v26;
    *((_QWORD *)&v69[0] + 1) = v25;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_6_7();
    v27 = sub_1C006ED00(v70, &v63);
    OUTLINED_FUNCTION_14_56((uint64_t)v27, v28, v29, v30, v31, v32, v33, v34, v50, v52, v54, (uint64_t)v56, v58);
    v35 = sub_1C006ED00(&v63, v68);
    OUTLINED_FUNCTION_12_53((uint64_t)v35, v36, v37, v38, v39, v40, v41, v42, v51, v53, v55, v57, v59, v60, v61, *((uint64_t *)&v61 + 1), v62, v63, *((uint64_t *)&v63 + 1),
      v64,
      v65,
      v66,
      v67[0]);
    sub_1C006ED00(v68, v69);
    sub_1C006ED00(v69, v67);
    v43 = OUTLINED_FUNCTION_11_68() & ~(-1 << *(_BYTE *)(v2 + 32));
    if (((-1 << v43) & ~*(_QWORD *)(v8 + 8 * (v43 >> 6))) == 0)
    {
      OUTLINED_FUNCTION_16();
      while (++v46 != v47 || (v45 & 1) == 0)
      {
        v48 = v46 == v47;
        if (v46 == v47)
          v46 = 0;
        v45 |= v48;
        if (*(_QWORD *)(v8 + 8 * v46) != -1)
        {
          OUTLINED_FUNCTION_15_18();
          goto LABEL_39;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    OUTLINED_FUNCTION_17_16();
LABEL_39:
    *(_QWORD *)(v8 + ((v44 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v44;
    v49 = *(_QWORD *)(v2 + 48) + 40 * v44;
    *(_OWORD *)v49 = v58;
    *(_OWORD *)(v49 + 16) = v61;
    *(_QWORD *)(v49 + 32) = v62;
    sub_1C006ED00(v67, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v44));
    ++*(_QWORD *)(v2 + 16);
    if (v7)
      goto LABEL_8;
LABEL_9:
    if (__OFADD__(v9, 1))
      goto LABEL_43;
    OUTLINED_FUNCTION_34_12();
    if (v12 == v13)
      goto LABEL_41;
    OUTLINED_FUNCTION_20_34();
    if (!v14)
    {
      OUTLINED_FUNCTION_3_113();
      if (v12 == v13)
        goto LABEL_41;
      OUTLINED_FUNCTION_7_81();
      if (!v15)
      {
        OUTLINED_FUNCTION_3_113();
        if (v12 == v13)
          goto LABEL_41;
        OUTLINED_FUNCTION_7_81();
        if (!v16)
        {
          OUTLINED_FUNCTION_3_113();
          if (v12 == v13)
            goto LABEL_41;
          OUTLINED_FUNCTION_7_81();
          if (!v17)
          {
            OUTLINED_FUNCTION_34_12();
            if (v12 == v13)
            {
LABEL_41:
              OUTLINED_FUNCTION_9_77();
              OUTLINED_FUNCTION_8_66();
              return;
            }
            if (!*(_QWORD *)(v54 + 8 * v18))
              break;
          }
        }
      }
    }
LABEL_29:
    OUTLINED_FUNCTION_4_88();
    v7 = v21 & v20;
    v11 = v23 + (v22 << 6);
    v9 = v22;
  }
  while (!__OFADD__(v18, 1))
  {
    OUTLINED_FUNCTION_3_113();
    if (v12 == v13)
      goto LABEL_41;
    OUTLINED_FUNCTION_18_39();
    if (v19)
      goto LABEL_29;
  }
LABEL_44:
  __break(1u);
}

void sub_1C02295B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  _OWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  _OWORD v46[2];

  OUTLINED_FUNCTION_37_8();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727D68);
    v2 = (_QWORD *)OUTLINED_FUNCTION_0_121();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  OUTLINED_FUNCTION_1_103();
  v5 = v4 & v3;
  v6 = &v43;
  v7 = &v45;
  OUTLINED_FUNCTION_44();
  v8 = 0;
  v9 = MEMORY[0x1E0DEE9B8] + 8;
  v10 = MEMORY[0x1E0DEDC60];
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        v40 = (v5 - 1) & v5;
        v11 = __clz(__rbit64(v5)) | (v8 << 6);
      }
      else
      {
        if (__OFADD__(v8, 1))
          goto LABEL_36;
        OUTLINED_FUNCTION_21_39();
        if (v12 == v13)
        {
LABEL_33:
          sub_1C00B7078();
          return;
        }
        OUTLINED_FUNCTION_20_34();
        if (!v14)
        {
          OUTLINED_FUNCTION_2_106();
          if (v12 == v13)
            goto LABEL_33;
          OUTLINED_FUNCTION_6_88();
          if (!v15)
          {
            OUTLINED_FUNCTION_2_106();
            if (v12 == v13)
              goto LABEL_33;
            OUTLINED_FUNCTION_6_88();
            if (!v16)
            {
              OUTLINED_FUNCTION_2_106();
              if (v12 == v13)
                goto LABEL_33;
              OUTLINED_FUNCTION_6_88();
              if (!v17)
              {
                OUTLINED_FUNCTION_21_39();
                if (v12 == v13)
                  goto LABEL_33;
                if (!*(_QWORD *)(v38 + 8 * v18))
                {
                  while (!__OFADD__(v18, 1))
                  {
                    OUTLINED_FUNCTION_2_106();
                    if (v12 == v13)
                      goto LABEL_33;
                    OUTLINED_FUNCTION_18_39();
                    if (v19)
                      goto LABEL_27;
                  }
                  goto LABEL_37;
                }
              }
            }
          }
        }
LABEL_27:
        OUTLINED_FUNCTION_4_88();
        v40 = v21 & v20;
        v11 = v23 + (v22 << 6);
        v8 = v22;
      }
      v24 = (uint64_t *)(*(_QWORD *)(v0 + 48) + 16 * v11);
      v41 = *v24;
      v42 = v24[1];
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_6_7();
      sub_1C006ED00(v6, v7);
      sub_1C006ED00(v7, v46);
      sub_1C006ED00(v46, &v44);
      v25 = sub_1C00B3C3C(v41, v42);
      v26 = v25;
      if ((v27 & 1) == 0)
        break;
      v39 = v8;
      v28 = v7;
      v29 = v6;
      v30 = v0;
      v31 = v10;
      v32 = v9;
      v33 = (uint64_t *)(v2[6] + 16 * v25);
      swift_bridgeObjectRelease();
      *v33 = v41;
      v33[1] = v42;
      v9 = v32;
      v10 = v31;
      v0 = v30;
      v6 = v29;
      v7 = v28;
      v8 = v39;
      v34 = (_OWORD *)(v2[7] + 32 * v26);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v34);
      sub_1C006ED00(&v44, v34);
      v5 = v40;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v25;
    v35 = (uint64_t *)(v2[6] + 16 * v25);
    *v35 = v41;
    v35[1] = v42;
    sub_1C006ED00(&v44, (_OWORD *)(v2[7] + 32 * v25));
    v36 = v2[2];
    v13 = __OFADD__(v36, 1);
    v37 = v36 + 1;
    if (v13)
      goto LABEL_35;
    v2[2] = v37;
    v5 = v40;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

id sub_1C0229890(uint64_t a1, unint64_t a2)
{
  void *v2;
  id v5;

  if (a2 >> 60 == 15)
  {
    v2 = 0;
  }
  else
  {
    v2 = (void *)sub_1C0301BE8();
    sub_1C00D9830(a1, a2);
  }
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_mapItemStorageForSerializedMapItemStorage_, v2);

  return v5;
}

CLPlacemark_optional __swiftcall Location.toCLPlacemark()()
{
  const void *v0;
  CLPlacemarkInternal *v1;
  Swift::Bool v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  objc_class *v7;
  objc_class *isa;
  void *v9;
  uint64_t v10;
  objc_class *v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  objc_class *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t *v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  _QWORD __dst[90];
  CLPlacemark_optional result;

  memcpy(__dst, v0, 0x2C8uLL);
  v3 = __dst[88];
  if (__dst[88] >> 60 == 15)
  {
LABEL_8:
    v13 = __dst[12];
    if (!__dst[12])
      goto LABEL_25;
    v15 = __dst[13];
    v14 = __dst[14];
    v16 = __dst[11];
    swift_bridgeObjectRetain();
    v17 = sub_1C0229E94(v16, v13);
    if ((v1 & 1) != 0
      || (v18 = *(double *)&v17, OUTLINED_FUNCTION_44(), v19 = sub_1C0229E94(v15, v14), (v1 & 1) != 0))
    {
LABEL_25:
      isa = 0;
      goto LABEL_26;
    }
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E3B8]), sel_initWithLatitude_longitude_, v18, *(double *)&v19);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7256A8);
    v21 = swift_allocObject();
    v22 = (_QWORD *)v21;
    *(_OWORD *)(v21 + 16) = xmmword_1C0308530;
    *(_QWORD *)(v21 + 32) = 0x6574617453;
    *(_QWORD *)(v21 + 40) = 0xE500000000000000;
    v23 = MEMORY[0x1E0DEA968];
    if (__dst[7])
      v24 = __dst[6];
    else
      v24 = 0;
    v25 = 0xE000000000000000;
    if (__dst[7])
      v26 = __dst[7];
    else
      v26 = 0xE000000000000000;
    *(_QWORD *)(v21 + 48) = v24;
    *(_QWORD *)(v21 + 56) = v26;
    *(_QWORD *)(v21 + 72) = v23;
    *(_QWORD *)(v21 + 80) = 2037672259;
    v27 = __dst[9];
    if (__dst[10])
    {
      v28 = __dst[10];
    }
    else
    {
      v27 = 0;
      v28 = 0xE000000000000000;
    }
    *(_QWORD *)(v21 + 88) = 0xE400000000000000;
    *(_QWORD *)(v21 + 96) = v27;
    *(_QWORD *)(v21 + 104) = v28;
    *(_QWORD *)(v21 + 120) = v23;
    *(_QWORD *)(v21 + 128) = 1701667150;
    v29 = __dst[76];
    if (__dst[77])
    {
      v30 = __dst[77];
    }
    else
    {
      v29 = 0;
      v30 = 0xE000000000000000;
    }
    *(_QWORD *)(v21 + 136) = 0xE400000000000000;
    *(_QWORD *)(v21 + 144) = v29;
    *(_QWORD *)(v21 + 152) = v30;
    *(_QWORD *)(v21 + 168) = v23;
    strcpy((char *)(v21 + 176), "Thoroughfare");
    *(_BYTE *)(v21 + 189) = 0;
    *(_WORD *)(v21 + 190) = -5120;
    v31 = __dst[65];
    v32 = __dst[67];
    v33 = __dst[68];
    if (__dst[65] >= 2uLL)
    {
      v34 = __dst[64];
      v31 = swift_bridgeObjectRetain();
      v25 = v31;
    }
    else
    {
      v34 = 0;
    }
    v36 = 0;
    v22[24] = v34;
    v22[25] = v25;
    v22[27] = v23;
    v22[28] = 0x6F726F6854627553;
    v22[29] = 0xEF65726166686775;
    v37 = 0xE000000000000000;
    if (v31 != 1 && v33)
    {
      swift_bridgeObjectRetain();
      v36 = v32;
      v37 = v33;
    }
    v22[30] = v36;
    v22[31] = v37;
    v22[33] = v23;
    v22[34] = 0xD000000000000015;
    v38 = __dst[81];
    if (__dst[82])
    {
      v39 = __dst[82];
    }
    else
    {
      v38 = 0;
      v39 = 0xE000000000000000;
    }
    v22[35] = 0x80000001C03339D0;
    v22[36] = v38;
    v22[37] = v39;
    v22[39] = v23;
    v22[40] = 5261658;
    v40 = __dst[3];
    if (__dst[4])
    {
      v41 = __dst[4];
    }
    else
    {
      v40 = 0;
      v41 = 0xE000000000000000;
    }
    v22[41] = 0xE300000000000000;
    v22[42] = v40;
    v22[43] = v41;
    v42 = BYTE3(__dst[1]);
    v22[45] = v23;
    v22[46] = 0x437972746E756F43;
    v22[47] = 0xEB0000000065646FLL;
    if (v42 == 4)
    {
      v43 = v22 + 48;
      v22[51] = v23;
    }
    else
    {
      v44 = Country.Value.rawValue.getter();
      v43 = v22 + 48;
      v22[51] = v23;
      if (v45)
      {
        *v43 = v44;
LABEL_42:
        v22[49] = v45;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C0303DB4();
        v46 = v20;
        sub_1C02292BC();
        v48 = v47;
        swift_bridgeObjectRelease();
        v49 = objc_allocWithZone(MEMORY[0x1E0C9E3F0]);
        isa = (objc_class *)sub_1C00A7A44(v20, v48, 0, 0);

        goto LABEL_26;
      }
    }
    *v43 = 0;
    v45 = 0xE000000000000000;
    goto LABEL_42;
  }
  v4 = __dst[87];
  sub_1C0229FFC();
  sub_1C0199A5C((uint64_t)__dst);
  sub_1C019A0DC(v4, v3);
  v5 = sub_1C0229890(v4, v3);
  if (!v5)
  {
    sub_1C01B5F10((uint64_t)__dst);
    goto LABEL_8;
  }
  v6 = v5;
  sub_1C01B5F10((uint64_t)__dst);
  v7 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_placemarkWithGEOMapItem_, v6);
  isa = v7;
  v9 = (void *)__dst[77];
  if (__dst[77] && v7)
  {
    v10 = __dst[76];
    v11 = v7;
    v12._countAndFlagsBits = v10;
    v12._object = v9;
    isa = CLPlacemark.withOverriddenName(_:)(v12).super.isa;

  }
LABEL_26:
  v35 = isa;
  result.value._internal = v1;
  result.value.super.isa = v35;
  result.is_nil = v2;
  return result;
}

INSpatialEventTrigger_optional __swiftcall Location.toINSpatialEventTrigger(withPlacemarkName:)(Swift::String_optional withPlacemarkName)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  int v5;
  Class isa;
  Swift::String v7;
  Class v8;
  Class v9;
  objc_class *v10;
  _BYTE __dst[690];
  _BYTE v12[22];
  CLPlacemark_optional v14;

  object = withPlacemarkName.value._object;
  countAndFlagsBits = withPlacemarkName.value._countAndFlagsBits;
  memcpy(__dst, (const void *)v1, 0x2B0uLL);
  v4 = *(char *)(v1 + 688);
  v5 = *(unsigned __int8 *)(v1 + 689);
  *(_OWORD *)v12 = *(_OWORD *)(v1 + 690);
  *(_QWORD *)&v12[14] = *(_QWORD *)(v1 + 704);
  __dst[688] = v4;
  __dst[689] = v5;
  v14 = Location.toCLPlacemark()();
  if (v14.value.super.isa)
  {
    isa = v14.value.super.isa;
    if (object)
    {
      v7._countAndFlagsBits = countAndFlagsBits;
      v7._object = object;
      v8 = CLPlacemark.withOverriddenName(_:)(v7).super.isa;
      v9 = v8;
    }
    else
    {
      v9 = 0;
      v8 = v14.value.super.isa;
    }
    v10 = (objc_class *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBDBF8]), sel_initWithPlacemark_event_, v8, qword_1C031DB38[v4]);

  }
  else if (v5 == 2)
  {
    v10 = 0;
  }
  else
  {
    v10 = (objc_class *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBDBF8]), sel_initWithMobileSpace_event_, v5 & 1, qword_1C031DB38[v4]);
  }
  v14.value.super.isa = v10;
  return *(INSpatialEventTrigger_optional *)&v14.value.super.isa;
}

uint64_t sub_1C0229E94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BYTE *v7;
  char v9;

  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_1C03046A8();
    swift_bridgeObjectRelease();
    v6 = v9;
  }
  else
  {
    MEMORY[0x1E0C80A78](a1);
    if ((a2 & 0x2000000000000000) != 0)
    {
      v6 = (v3 > 0x20u || ((0x100003E01uLL >> v3) & 1) == 0)
        && (v7 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
        && *v7 == 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v3 & 0x1000000000000000) != 0)
      {
        v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v5 = v3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v4 = sub_1C0304720();
      }
      v6 = sub_1C022A0A0(v4, v5, (void (*)(uint64_t *__return_ptr))sub_1C022A10C);
      swift_bridgeObjectRelease();
    }
  }
  if ((v6 & 1) != 0)
    return 0;
  else
    return 0;
}

unint64_t sub_1C0229FFC()
{
  unint64_t result;

  result = qword_1EF5C15E8;
  if (!qword_1EF5C15E8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF5C15E8);
  }
  return result;
}

_BYTE *sub_1C022A038@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_1C022A0A0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v3;
  char v4;
  uint64_t var2;

  if (a1)
  {
    a3(&var2);
    if (!v3)
      v4 = var2;
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, _QWORD, _QWORD))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3)
      v4 = BYTE1(var2);
  }
  return v4 & 1;
}

_BYTE *sub_1C022A0F4@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1C022A038(a1, a2);
}

_QWORD *sub_1C022A10C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
    *a1 = v5;
  return result;
}

uint64_t OUTLINED_FUNCTION_0_121()
{
  return sub_1C030481C();
}

uint64_t OUTLINED_FUNCTION_8_66()
{
  uint64_t v0;

  sub_1C00B7078();
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_77()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_11_68()
{
  return sub_1C0304654();
}

__n128 OUTLINED_FUNCTION_12_53(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,__int128 a23)
{
  return (__n128)a23;
}

__n128 OUTLINED_FUNCTION_14_56(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int128 a13)
{
  return (__n128)a13;
}

unint64_t sub_1C022A27C(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_1C0304090();
  __break(1u);
  return result;
}

uint64_t INPerson.inType.getter()
{
  return 0x6E6F737265504E49;
}

uint64_t sub_1C022A2E0(void *a1)
{
  return sub_1C009F8D4(a1, (SEL *)&selRef_contactIdentifier);
}

uint64_t sub_1C022A2EC(void *a1)
{
  return sub_1C009F8D4(a1, (SEL *)&selRef_customIdentifier);
}

void OUTLINED_FUNCTION_3_114(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C005546C(a1, a2, v2);
}

ValueMetadata *type metadata accessor for DateTimeResolutionInfo()
{
  return &type metadata for DateTimeResolutionInfo;
}

void sub_1C022A314()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v13;

  OUTLINED_FUNCTION_4_89();
  OUTLINED_FUNCTION_6_89();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_0_122(v2, v13);
  v3 = OUTLINED_FUNCTION_5_82();
  if (v3 == *MEMORY[0x1E0DA09C8])
    goto LABEL_2;
  if (v3 == *MEMORY[0x1E0DA0AC8])
    goto LABEL_4;
  if (v3 == *MEMORY[0x1E0DA0998])
  {
    v4 = 5;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA0A50])
  {
    v4 = 10;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA0A38])
  {
    v4 = 6;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA09D8])
  {
    v4 = 4;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA0A98]
    || v3 == *MEMORY[0x1E0DA0A18]
    || v3 == *MEMORY[0x1E0DA09F8]
    || v3 == *MEMORY[0x1E0DA0AF0]
    || v3 == *MEMORY[0x1E0DA0A90]
    || v3 == *MEMORY[0x1E0DA0B10]
    || v3 == *MEMORY[0x1E0DA0A28]
    || v3 == *MEMORY[0x1E0DA0A78]
    || v3 == *MEMORY[0x1E0DA0A88]
    || v3 == *MEMORY[0x1E0DA0A08])
  {
    goto LABEL_4;
  }
  if (v3 == *MEMORY[0x1E0DA0B18] || v3 == *MEMORY[0x1E0DA0AA8])
    goto LABEL_2;
  if (v3 == *MEMORY[0x1E0DA0988])
  {
LABEL_4:
    v4 = 1;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA09B8]
    || v3 == *MEMORY[0x1E0DA09A8]
    || v3 == *MEMORY[0x1E0DA0B28]
    || v3 == *MEMORY[0x1E0DA0A10]
    || v3 == *MEMORY[0x1E0DA0AE8]
    || v3 == *MEMORY[0x1E0DA09A0]
    || v3 == *MEMORY[0x1E0DA09B0])
  {
LABEL_2:
    v4 = 13;
LABEL_13:
    *v0 = v4;
    goto LABEL_14;
  }
  if (v3 == *MEMORY[0x1E0DA09C0]
    || v3 == *MEMORY[0x1E0DA0A68]
    || v3 == *MEMORY[0x1E0DA0A40]
    || v3 == *MEMORY[0x1E0DA0AB0]
    || v3 == *MEMORY[0x1E0DA0B20]
    || v3 == *MEMORY[0x1E0DA0AE0]
    || v3 == *MEMORY[0x1E0DA0A30]
    || v3 == *MEMORY[0x1E0DA0AD0]
    || v3 == *MEMORY[0x1E0DA0B00])
  {
    goto LABEL_4;
  }
  if (v3 == *MEMORY[0x1E0DA09E8])
  {
    v4 = 11;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA0B08])
  {
    v4 = 3;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA0A00])
  {
    v4 = 7;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA0AA0])
  {
    v4 = 8;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA0A48])
  {
    v4 = 9;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA09F0])
  {
    v4 = 12;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA0A20])
  {
    v4 = 2;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA0A80])
    *v0 = 0;
  else
    OUTLINED_FUNCTION_1_104(13);
LABEL_14:
  OUTLINED_FUNCTION_17_1();
}

uint64_t sub_1C022A708@<X0>(uint64_t a1@<X0>, char a2@<W1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  BOOL v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t EnumTagSinglePayload;
  uint64_t v40;
  char *v41;
  char v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char *v52;
  char v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v61 = a1;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C15F8);
  MEMORY[0x1E0C80A78](v56);
  OUTLINED_FUNCTION_6_0();
  v58 = v7 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BBED8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v55 = (uint64_t)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v57 = (char *)&v55 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v55 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v55 - v16;
  v62 = sub_1C03029BC();
  v60 = *(_QWORD *)(v62 - 8);
  v18 = MEMORY[0x1E0C80A78](v62);
  v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v18);
  v59 = (char *)&v55 - v22;
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v55 - v23;
  v25 = sub_1C0302944();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_6_0();
  v29 = v28 - v27;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v28 - v27, v3, v25);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 88))(v29, v25);
  if ((_DWORD)result == *MEMORY[0x1E0DA0A38])
  {
    v31 = (a2 & 1) == 0;
    v32 = 32;
    goto LABEL_5;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DA09D8])
  {
    v31 = (a2 & 1) == 0;
    v32 = 31;
    goto LABEL_5;
  }
  if ((_DWORD)result != *MEMORY[0x1E0DA0A98])
  {
    if ((_DWORD)result == *MEMORY[0x1E0DA0AF8])
    {
      v32 = 2;
      goto LABEL_7;
    }
    if ((_DWORD)result == *MEMORY[0x1E0DA0A18])
    {
      v32 = 3;
      goto LABEL_7;
    }
    if ((_DWORD)result == *MEMORY[0x1E0DA09F8])
    {
      v32 = 14;
      goto LABEL_7;
    }
    if ((_DWORD)result == *MEMORY[0x1E0DA0AF0])
    {
      *a3 = 0;
      return result;
    }
    if ((_DWORD)result == *MEMORY[0x1E0DA0A90])
    {
      OUTLINED_FUNCTION_11_69();
      v38 = v62;
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v62);
      if ((_DWORD)EnumTagSinglePayload == 1)
      {
        result = OUTLINED_FUNCTION_15_35(EnumTagSinglePayload, &qword_1EF5BBED8);
      }
      else
      {
        v40 = v60;
        (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v24, v17, v38);
        v41 = v59;
        (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v59, *MEMORY[0x1E0DA0C10], v38);
        v42 = sub_1C03029B0();
        v43 = *(void (**)(char *, uint64_t))(v40 + 8);
        v43(v41, v38);
        result = ((uint64_t (*)(char *, uint64_t))v43)(v24, v38);
        if ((v42 & 1) != 0)
        {
          v32 = 7;
          goto LABEL_7;
        }
      }
      v32 = 12;
      goto LABEL_7;
    }
    if ((_DWORD)result == *MEMORY[0x1E0DA0B10])
    {
      v32 = 22;
      goto LABEL_7;
    }
    if ((_DWORD)result == *MEMORY[0x1E0DA0A28])
    {
      v32 = 6;
      goto LABEL_7;
    }
    if ((_DWORD)result == *MEMORY[0x1E0DA0A78])
    {
      v32 = 23;
      goto LABEL_7;
    }
    if ((_DWORD)result == *MEMORY[0x1E0DA0A88])
    {
      v32 = 5;
      goto LABEL_7;
    }
    if ((_DWORD)result == *MEMORY[0x1E0DA0A08])
    {
      v44 = v60;
      v45 = (uint64_t)v57;
      v46 = v62;
      (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v57, *MEMORY[0x1E0DA0BF8], v62);
      __swift_storeEnumTagSinglePayload(v45, 0, 1, v46);
      v47 = v58;
      v48 = v58 + *(int *)(v56 + 48);
      OUTLINED_FUNCTION_11_69();
      sub_1C022B704(v45, v48);
      OUTLINED_FUNCTION_9_78(v47);
      if (!v31)
      {
        v50 = v55;
        sub_1C022B704(v47, v55);
        OUTLINED_FUNCTION_9_78(v48);
        if (!v51)
        {
          v52 = v59;
          (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v59, v48, v46);
          sub_1C022B74C();
          v53 = sub_1C0303E80();
          v54 = *(void (**)(char *, uint64_t))(v44 + 8);
          v54(v52, v46);
          sub_1C0056C9C(v45, &qword_1EF5BBED8);
          v54((char *)v50, v46);
          result = sub_1C0056C9C(v47, &qword_1EF5BBED8);
          if ((v53 & 1) != 0)
            goto LABEL_59;
LABEL_60:
          v32 = 16;
          goto LABEL_7;
        }
        sub_1C0056C9C(v45, &qword_1EF5BBED8);
        v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v50, v46);
LABEL_57:
        result = OUTLINED_FUNCTION_15_35(v49, &qword_1EF5C15F8);
        goto LABEL_60;
      }
      sub_1C0056C9C(v45, &qword_1EF5BBED8);
      v49 = OUTLINED_FUNCTION_9_78(v48);
      if (!v31)
        goto LABEL_57;
      result = OUTLINED_FUNCTION_15_35(v49, &qword_1EF5BBED8);
    }
    else if ((_DWORD)result != *MEMORY[0x1E0DA0AA8])
    {
      if ((_DWORD)result == *MEMORY[0x1E0DA09B8]
        || (_DWORD)result == *MEMORY[0x1E0DA09A8]
        || (_DWORD)result == *MEMORY[0x1E0DA0B28]
        || (_DWORD)result == *MEMORY[0x1E0DA0A10]
        || (_DWORD)result == *MEMORY[0x1E0DA0AE8]
        || (_DWORD)result == *MEMORY[0x1E0DA09A0]
        || (_DWORD)result == *MEMORY[0x1E0DA09B0])
      {
        result = __swift_getEnumTagSinglePayload(v61, 1, v62);
        if ((_DWORD)result == 1)
          v32 = 38;
        else
          v32 = 8;
        goto LABEL_7;
      }
      if ((_DWORD)result == *MEMORY[0x1E0DA09C0])
      {
        v31 = (a2 & 1) == 0;
        v32 = 8;
      }
      else
      {
        if ((_DWORD)result == *MEMORY[0x1E0DA0AC0])
        {
          v32 = 19;
          goto LABEL_7;
        }
        if ((_DWORD)result == *MEMORY[0x1E0DA09E8])
        {
          v31 = (a2 & 1) == 0;
          v32 = 10;
        }
        else
        {
          if ((_DWORD)result != *MEMORY[0x1E0DA0A00])
          {
            if ((_DWORD)result == *MEMORY[0x1E0DA0A58])
            {
              v32 = 17;
            }
            else if ((_DWORD)result == *MEMORY[0x1E0DA0A60])
            {
              v32 = 18;
            }
            else if ((_DWORD)result == *MEMORY[0x1E0DA0A70])
            {
              v32 = 20;
            }
            else
            {
              if ((_DWORD)result != *MEMORY[0x1E0DA09D0])
              {
                if ((_DWORD)result != *MEMORY[0x1E0DA09F0])
                {
                  *a3 = 38;
                  return (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v29, v25);
                }
                v31 = (a2 & 1) == 0;
                v32 = 11;
                goto LABEL_5;
              }
              v32 = 1;
            }
            goto LABEL_7;
          }
          v31 = (a2 & 1) == 0;
          v32 = 9;
        }
      }
LABEL_5:
      if (!v31)
        v32 = 38;
      goto LABEL_7;
    }
LABEL_59:
    v32 = 24;
    goto LABEL_7;
  }
  sub_1C022B704(v61, (uint64_t)v15);
  v33 = v62;
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v62) == 1)
  {
    result = sub_1C0056C9C((uint64_t)v15, &qword_1EF5BBED8);
LABEL_16:
    v32 = 15;
    goto LABEL_7;
  }
  v34 = v60;
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v20, v15, v33);
  v35 = v59;
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v59, *MEMORY[0x1E0DA0C10], v33);
  v36 = sub_1C03029B0();
  v37 = *(void (**)(char *, uint64_t))(v34 + 8);
  v37(v35, v33);
  result = ((uint64_t (*)(char *, uint64_t))v37)(v20, v33);
  if ((v36 & 1) == 0)
    goto LABEL_16;
  v32 = 4;
LABEL_7:
  *a3 = v32;
  return result;
}

uint64_t sub_1C022AEFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char *v8;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v1 = v0;
  v2 = sub_1C0302944();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_6_0();
  v6 = v5 - v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5 - v4, v1, v2);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x1E0DA0A68])
  {
    v16 = 6;
    OUTLINED_FUNCTION_7_82();
    OUTLINED_FUNCTION_2_107();
    v8 = &v16;
  }
  else if (v7 == *MEMORY[0x1E0DA0A40])
  {
    v10 = 0;
    OUTLINED_FUNCTION_7_82();
    OUTLINED_FUNCTION_2_107();
    v8 = &v10;
  }
  else if (v7 == *MEMORY[0x1E0DA0AB0])
  {
    v11 = 1;
    OUTLINED_FUNCTION_7_82();
    OUTLINED_FUNCTION_2_107();
    v8 = &v11;
  }
  else if (v7 == *MEMORY[0x1E0DA0B20])
  {
    v12 = 2;
    OUTLINED_FUNCTION_7_82();
    OUTLINED_FUNCTION_2_107();
    v8 = &v12;
  }
  else if (v7 == *MEMORY[0x1E0DA0AE0])
  {
    v13 = 3;
    OUTLINED_FUNCTION_7_82();
    OUTLINED_FUNCTION_2_107();
    v8 = &v13;
  }
  else if (v7 == *MEMORY[0x1E0DA0A30])
  {
    v14 = 4;
    OUTLINED_FUNCTION_7_82();
    OUTLINED_FUNCTION_2_107();
    v8 = &v14;
  }
  else
  {
    if (v7 != *MEMORY[0x1E0DA0AD0])
    {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
      return 0;
    }
    v15 = 5;
    OUTLINED_FUNCTION_7_82();
    OUTLINED_FUNCTION_2_107();
    v8 = &v15;
  }
  return DateTime.Date.init(withDayOfWeek:)(v8);
}

void sub_1C022B0E0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;

  OUTLINED_FUNCTION_4_89();
  OUTLINED_FUNCTION_6_89();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_0_122(v2, v5);
  v3 = OUTLINED_FUNCTION_5_82();
  if (v3 == *MEMORY[0x1E0DA09B8])
  {
    v4 = 4;
LABEL_15:
    *v0 = v4;
    goto LABEL_16;
  }
  if (v3 == *MEMORY[0x1E0DA09A8])
  {
    v4 = 3;
    goto LABEL_15;
  }
  if (v3 == *MEMORY[0x1E0DA0B28])
  {
    v4 = 2;
    goto LABEL_15;
  }
  if (v3 != *MEMORY[0x1E0DA0A10])
  {
    if (v3 == *MEMORY[0x1E0DA0AE8])
    {
      v4 = 1;
    }
    else if (v3 == *MEMORY[0x1E0DA09A0])
    {
      v4 = 5;
    }
    else
    {
      if (v3 != *MEMORY[0x1E0DA09B0])
      {
        OUTLINED_FUNCTION_1_104(7);
        goto LABEL_16;
      }
      v4 = 6;
    }
    goto LABEL_15;
  }
  *v0 = 0;
LABEL_16:
  OUTLINED_FUNCTION_17_1();
}

void sub_1C022B1EC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;

  OUTLINED_FUNCTION_4_89();
  OUTLINED_FUNCTION_6_89();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_0_122(v2, v5);
  v3 = OUTLINED_FUNCTION_5_82();
  if (v3 == *MEMORY[0x1E0DA09C8])
  {
    *v0 = 0;
  }
  else
  {
    if (v3 == *MEMORY[0x1E0DA0AC8])
    {
      v4 = 1;
    }
    else
    {
      if (v3 != *MEMORY[0x1E0DA09E0])
      {
        OUTLINED_FUNCTION_1_104(3);
        goto LABEL_9;
      }
      v4 = 2;
    }
    *v0 = v4;
  }
LABEL_9:
  OUTLINED_FUNCTION_17_1();
}

void sub_1C022B288()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;
  BOOL v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  uint64_t v29;

  OUTLINED_FUNCTION_4_89();
  OUTLINED_FUNCTION_6_89();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_0_122(v2, v29);
  v3 = OUTLINED_FUNCTION_5_82();
  if (v3 == *MEMORY[0x1E0DA09C8])
    goto LABEL_2;
  if (v3 == *MEMORY[0x1E0DA0AC8])
    goto LABEL_4;
  if (v3 == *MEMORY[0x1E0DA0998])
  {
    v4 = 5;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA0A50])
  {
    v4 = 10;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA0A38])
  {
    v4 = 6;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA09D8])
  {
    v4 = 4;
    goto LABEL_13;
  }
  v5 = v3 == *MEMORY[0x1E0DA0A98] || v3 == *MEMORY[0x1E0DA0AF8];
  v6 = v5 || v3 == *MEMORY[0x1E0DA0A18];
  v7 = v6 || v3 == *MEMORY[0x1E0DA09F8];
  v8 = v7 || v3 == *MEMORY[0x1E0DA09E0];
  v9 = v8 || v3 == *MEMORY[0x1E0DA0AF0];
  v10 = v9 || v3 == *MEMORY[0x1E0DA0A90];
  v11 = v10 || v3 == *MEMORY[0x1E0DA0B10];
  v12 = v11 || v3 == *MEMORY[0x1E0DA0A28];
  v13 = v12 || v3 == *MEMORY[0x1E0DA0A78];
  v14 = v13 || v3 == *MEMORY[0x1E0DA0A88];
  if (v14 || v3 == *MEMORY[0x1E0DA0A08])
    goto LABEL_4;
  if (v3 == *MEMORY[0x1E0DA0B18] || v3 == *MEMORY[0x1E0DA0AA8])
    goto LABEL_2;
  if (v3 == *MEMORY[0x1E0DA0988])
  {
LABEL_4:
    v4 = 1;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA09B8]
    || v3 == *MEMORY[0x1E0DA09A8]
    || v3 == *MEMORY[0x1E0DA0B28]
    || v3 == *MEMORY[0x1E0DA0A10]
    || v3 == *MEMORY[0x1E0DA0AE8]
    || v3 == *MEMORY[0x1E0DA09A0]
    || v3 == *MEMORY[0x1E0DA09B0])
  {
LABEL_2:
    v4 = 13;
LABEL_13:
    *v0 = v4;
    goto LABEL_14;
  }
  if (v3 == *MEMORY[0x1E0DA09C0])
    goto LABEL_4;
  if (v3 == *MEMORY[0x1E0DA0A68]
    || v3 == *MEMORY[0x1E0DA0A40]
    || v3 == *MEMORY[0x1E0DA0AB0]
    || v3 == *MEMORY[0x1E0DA0B20]
    || v3 == *MEMORY[0x1E0DA0AE0]
    || v3 == *MEMORY[0x1E0DA0A30]
    || v3 == *MEMORY[0x1E0DA0AD0]
    || v3 == *MEMORY[0x1E0DA0B00]
    || v3 == *MEMORY[0x1E0DA0AC0]
    || v3 == *MEMORY[0x1E0DA0AB8]
    || v3 == *MEMORY[0x1E0DA09E8])
  {
    v4 = 11;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA0B08])
  {
    v4 = 3;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA0990])
    goto LABEL_4;
  if (v3 == *MEMORY[0x1E0DA0A00])
  {
    v4 = 7;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA0AA0])
  {
    v4 = 8;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA0A58]
    || v3 == *MEMORY[0x1E0DA0A60]
    || v3 == *MEMORY[0x1E0DA0A70]
    || v3 == *MEMORY[0x1E0DA09D0])
  {
    goto LABEL_111;
  }
  if (v3 == *MEMORY[0x1E0DA0A48])
  {
    v4 = 9;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA0AD8])
    goto LABEL_2;
  if (v3 == *MEMORY[0x1E0DA09F0])
  {
LABEL_111:
    v4 = 12;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA0A20])
  {
    v4 = 2;
    goto LABEL_13;
  }
  if (v3 == *MEMORY[0x1E0DA0A80])
    *v0 = 0;
  else
    OUTLINED_FUNCTION_1_104(13);
LABEL_14:
  OUTLINED_FUNCTION_17_1();
}

uint64_t sub_1C022B704(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BBED8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C022B74C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF5C1600;
  if (!qword_1EF5C1600)
  {
    v1 = sub_1C03029BC();
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0DA0C70], v1);
    atomic_store(result, (unint64_t *)&qword_1EF5C1600);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_122@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v2);
}

uint64_t OUTLINED_FUNCTION_1_104@<X0>(char a1@<W8>)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *v1 = a1;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
}

uint64_t OUTLINED_FUNCTION_2_107()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_4_89()
{
  return sub_1C0302944();
}

uint64_t OUTLINED_FUNCTION_5_82()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_7_82()
{
  return type metadata accessor for DateTime.Date();
}

uint64_t OUTLINED_FUNCTION_9_78(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_11_69()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C022B704(*(_QWORD *)(v1 - 96), v0);
}

SiriInference::CrossStreetName __swiftcall CrossStreetName.init(name:prefix:)(Swift::String name, SiriInference::CrossStreetName::Prefix_optional prefix)
{
  uint64_t v2;
  char v3;
  SiriInference::CrossStreetName result;

  v3 = *(_BYTE *)prefix.value;
  *(Swift::String *)v2 = name;
  *(_BYTE *)(v2 + 16) = v3;
  result.name = name;
  result.prefix = prefix;
  return result;
}

SiriInference::CrossStreetName::Prefix_optional __swiftcall CrossStreetName.Prefix.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SiriInference::CrossStreetName::Prefix_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1C030484C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t CrossStreetName.Prefix.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C022B8C4 + 4 * byte_1C031DB98[*v0]))(28265, 0xE200000000000000);
}

uint64_t sub_1C022B8C4()
{
  return 0x754E746565727473;
}

uint64_t sub_1C022B8E4()
{
  return 0x6365737265746E69;
}

uint64_t sub_1C022B904()
{
  return 1918985582;
}

uint64_t sub_1C022B914()
{
  return 28271;
}

void sub_1C022B91C()
{
  sub_1C025E8F4();
}

void sub_1C022B928()
{
  unsigned __int8 *v0;

  sub_1C00CEBBC(*v0);
}

void sub_1C022B930()
{
  sub_1C00C2714();
}

void sub_1C022B938(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EAB88(a1, *v1);
}

SiriInference::CrossStreetName::Prefix_optional sub_1C022B940(Swift::String *a1)
{
  return CrossStreetName.Prefix.init(rawValue:)(*a1);
}

uint64_t sub_1C022B94C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CrossStreetName.Prefix.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C022B970()
{
  sub_1C022C148();
  return sub_1C03040F0();
}

uint64_t sub_1C022B9CC()
{
  sub_1C022C148();
  return sub_1C03040CC();
}

uint64_t CrossStreetName.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void CrossStreetName.prefix.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

void static CrossStreetName.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if ((v4 || (sub_1C0304A08() & 1) != 0) && v2 != 5 && v3 != 5)
    sub_1C025E8F4();
}

uint64_t sub_1C022BAD4()
{
  sub_1C022BDEC();
  return sub_1C0304BAC();
}

uint64_t sub_1C022BAFC()
{
  sub_1C022BDEC();
  return sub_1C0304BB8();
}

void CrossStreetName.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1608);
  v8 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C022BDEC();
  sub_1C0304BA0();
  v12 = 0;
  sub_1C0304960();
  if (!v2)
  {
    v11 = v9;
    v10 = 1;
    sub_1C022BE28();
    sub_1C0304954();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v4);
  OUTLINED_FUNCTION_28_0();
}

void CrossStreetName.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1620);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C022BDEC();
  sub_1C0304B88();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    v6 = sub_1C03048AC();
    v8 = v7;
    sub_1C022BE64();
    swift_bridgeObjectRetain();
    sub_1C03048A0();
    OUTLINED_FUNCTION_10_5();
    *(_QWORD *)a2 = v6;
    *(_QWORD *)(a2 + 8) = v8;
    *(_BYTE *)(a2 + 16) = v9;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28_0();
}

void sub_1C022BDC0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  CrossStreetName.init(from:)(a1, a2);
}

void sub_1C022BDD4(_QWORD *a1)
{
  CrossStreetName.encode(to:)(a1);
}

unint64_t sub_1C022BDEC()
{
  unint64_t result;

  result = qword_1EF5C1610;
  if (!qword_1EF5C1610)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031DE1C, &type metadata for CrossStreetName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1610);
  }
  return result;
}

unint64_t sub_1C022BE28()
{
  unint64_t result;

  result = qword_1EF5C1618;
  if (!qword_1EF5C1618)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for CrossStreetName.Prefix, &type metadata for CrossStreetName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C1618);
  }
  return result;
}

unint64_t sub_1C022BE64()
{
  unint64_t result;

  result = qword_1EF5C1628;
  if (!qword_1EF5C1628)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for CrossStreetName.Prefix, &type metadata for CrossStreetName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C1628);
  }
  return result;
}

unint64_t sub_1C022BEA4()
{
  unint64_t result;

  result = qword_1EF5C1630;
  if (!qword_1EF5C1630)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for CrossStreetName.Prefix, &type metadata for CrossStreetName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C1630);
  }
  return result;
}

ValueMetadata *type metadata accessor for CrossStreetName()
{
  return &type metadata for CrossStreetName;
}

uint64_t storeEnumTagSinglePayload for CrossStreetName.Prefix(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C022BF3C + 4 * byte_1C031DBA2[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C022BF70 + 4 * byte_1C031DB9D[v4]))();
}

uint64_t sub_1C022BF70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C022BF78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C022BF80);
  return result;
}

uint64_t sub_1C022BF8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C022BF94);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C022BF98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C022BFA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CrossStreetName.Prefix()
{
  return &type metadata for CrossStreetName.Prefix;
}

uint64_t storeEnumTagSinglePayload for CrossStreetName.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C022C008 + 4 * byte_1C031DBAC[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C022C03C + 4 * byte_1C031DBA7[v4]))();
}

uint64_t sub_1C022C03C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C022C044(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C022C04CLL);
  return result;
}

uint64_t sub_1C022C058(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C022C060);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C022C064(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C022C06C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CrossStreetName.CodingKeys()
{
  return &type metadata for CrossStreetName.CodingKeys;
}

unint64_t sub_1C022C08C()
{
  unint64_t result;

  result = qword_1EF5C1638;
  if (!qword_1EF5C1638)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031DDF4, &type metadata for CrossStreetName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1638);
  }
  return result;
}

unint64_t sub_1C022C0CC()
{
  unint64_t result;

  result = qword_1EF5C1640;
  if (!qword_1EF5C1640)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031DD64, &type metadata for CrossStreetName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1640);
  }
  return result;
}

unint64_t sub_1C022C10C()
{
  unint64_t result;

  result = qword_1EF5C1648;
  if (!qword_1EF5C1648)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031DD8C, &type metadata for CrossStreetName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1648);
  }
  return result;
}

unint64_t sub_1C022C148()
{
  unint64_t result;

  result = qword_1EF5C1650;
  if (!qword_1EF5C1650)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for CrossStreetName.Prefix, &type metadata for CrossStreetName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C1650);
  }
  return result;
}

uint64_t TerminalElement.Qualifier.toQualifier()@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  char v9;
  uint64_t v10;

  v2 = v1;
  v4 = sub_1C03029BC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if ((_DWORD)result == *MEMORY[0x1E0DA0BF0])
  {
    v9 = 8;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DA0C28])
  {
    v9 = 9;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DA0C30])
  {
    v9 = 10;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DA0C10])
  {
    v9 = 11;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DA0BE0])
  {
    v9 = 12;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DA0C20])
  {
    v9 = 13;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DA0C48])
  {
    v9 = 7;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DA0C50])
  {
    v9 = 5;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DA0C18])
  {
    v9 = 3;
  }
  else
  {
    if ((_DWORD)result == *MEMORY[0x1E0DA0C08])
    {
      *a1 = 0;
      return result;
    }
    if ((_DWORD)result == *MEMORY[0x1E0DA0C40])
    {
      v9 = 6;
    }
    else if ((_DWORD)result == *MEMORY[0x1E0DA0C38])
    {
      v9 = 14;
    }
    else if ((_DWORD)result == *MEMORY[0x1E0DA0C00])
    {
      v9 = 15;
    }
    else if ((_DWORD)result == *MEMORY[0x1E0DA0BF8])
    {
      v9 = 16;
    }
    else if ((_DWORD)result == *MEMORY[0x1E0DA0BE8])
    {
      v9 = 17;
    }
    else if ((_DWORD)result == *MEMORY[0x1E0DA0C58])
    {
      v9 = 18;
    }
    else
    {
      if ((_DWORD)result != *MEMORY[0x1E0DA0BD8])
      {
        *a1 = 20;
        return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }
      v9 = 19;
    }
  }
  *a1 = v9;
  return result;
}

uint64_t sub_1C022C40C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v16;

  v0 = sub_1C03029BC();
  v1 = MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v1);
  v6 = (char *)&v16 - v5;
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v16 - v8;
  OUTLINED_FUNCTION_2_108(v7, *MEMORY[0x1E0DA0C48]);
  v10 = OUTLINED_FUNCTION_3_115();
  OUTLINED_FUNCTION_0_123((uint64_t)v9);
  v11 = OUTLINED_FUNCTION_1_105((uint64_t)v6);
  if ((v10 & 1) != 0)
  {
    OUTLINED_FUNCTION_0_123((uint64_t)v6);
    OUTLINED_FUNCTION_1_105((uint64_t)v3);
  }
  else
  {
    OUTLINED_FUNCTION_2_108(v11, *MEMORY[0x1E0DA0C18]);
    v12 = OUTLINED_FUNCTION_3_115();
    OUTLINED_FUNCTION_0_123((uint64_t)v9);
    OUTLINED_FUNCTION_0_123((uint64_t)v6);
    v13 = OUTLINED_FUNCTION_1_105((uint64_t)v3);
    if ((v12 & 1) == 0)
    {
      OUTLINED_FUNCTION_2_108(v13, *MEMORY[0x1E0DA0BF8]);
      v14 = OUTLINED_FUNCTION_3_115();
      OUTLINED_FUNCTION_0_123((uint64_t)v9);
      goto LABEL_6;
    }
  }
  v14 = 1;
LABEL_6:
  OUTLINED_FUNCTION_0_123((uint64_t)v3);
  return v14 & 1;
}

uint64_t OUTLINED_FUNCTION_0_123(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_1_105(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_2_108(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_3_115()
{
  return sub_1C03029B0();
}

uint64_t sub_1C022C5A4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;

  if (!AFIsInternalInstall())
    return MEMORY[0x1E0DEE9D8];
  v1 = *(void **)(v0 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = (void *)sub_1C0303E8C();
  v3 = objc_msgSend(v1, sel_stringForKey_, v2);

  if (!v3)
    return MEMORY[0x1E0DEE9D8];
  sub_1C0303EB0();

  sub_1C004F408();
  v4 = sub_1C03044D4();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C022C688@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v4;
  void *v5;

  if (*(_QWORD *)(v1 + 16))
  {
    v5 = *(void **)(v1 + 16);
    return sub_1C022C6FC(&v5, a1);
  }
  else
  {
    v4 = sub_1C0301CFC();
    return __swift_storeEnumTagSinglePayload(a1, 1, 1, v4);
  }
}

uint64_t sub_1C022C6FC@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v11[2];
  _BYTE v12[24];
  uint64_t v13;

  v3 = *a1;
  v4 = (void *)sub_1C0303E8C();
  v5 = objc_msgSend(v3, sel_objectForKey_, v4);

  if (v5)
  {
    sub_1C0304570();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_1C00438A8((uint64_t)v11, (uint64_t)v12);
  if (v13)
  {
    v6 = sub_1C0301CFC();
    v7 = swift_dynamicCast() ^ 1;
    v8 = a2;
    v9 = v6;
  }
  else
  {
    sub_1C0056C9C((uint64_t)v12, (uint64_t *)&unk_1ED727E70);
    v9 = sub_1C0301CFC();
    v8 = a2;
    v7 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v8, v7, 1, v9);
}

uint64_t sub_1C022C81C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728360);
  MEMORY[0x1E0C80A78](v3);
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = (char *)&v12 - v5;
  v7 = *(void **)(v1 + 16);
  if (v7)
  {
    sub_1C0075A10(a1, (uint64_t)&v12 - v5);
    v8 = sub_1C0301CFC();
    v9 = 0;
    if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v8) != 1)
    {
      v9 = sub_1C0301C60();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
    }
    v10 = (void *)sub_1C0303E8C();
    objc_msgSend(v7, sel_setValue_forKey_, v9, v10);
    swift_unknownObjectRelease();

  }
  return sub_1C0056C9C(a1, &qword_1ED728360);
}

uint64_t type metadata accessor for UserDefaultsAppRankerPersistentStorage()
{
  return objc_opt_self();
}

uint64_t sub_1C022C954()
{
  uint64_t v0;
  id v1;

  v1 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  *(_QWORD *)(v0 + 16) = sub_1C013E12C(0xD000000000000024, 0x80000001C0333AA0);
  return v0;
}

uint64_t _s5ValueOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1C007BCE0(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1C007BD18(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s5ValueOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1C007BD18(v5, v7, v6, v8);
  return a1;
}

uint64_t _s5ValueOwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFA && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 249;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 6)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s5ValueOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 250;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C022CAF8(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 6;
  if (a2 >= 6)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 6;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *_s5ValueOMa()
{
  return &_s5ValueON;
}

unint64_t sub_1C022CB28()
{
  unint64_t result;

  result = qword_1EF5C1718;
  if (!qword_1EF5C1718)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031DF2C, &_s5ValueON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1718);
  }
  return result;
}

void sub_1C022CB64(uint64_t a1, uint64_t a2)
{
  int v2;
  double v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  v2 = *(unsigned __int8 *)(a1 + 24);
  v5 = *(double *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(double *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(unsigned __int8 *)(a2 + 24);
  switch(v2)
  {
    case 3:
      if (v10 == 3 && (*(_QWORD *)&v5 != *(_QWORD *)&v7 || v6 != v8))
        sub_1C0304A08();
      break;
    case 4:
      if (v10 == 4)
        sub_1C025C390(SLOBYTE(v5));
      break;
    case 5:
      if (v10 == 5 && v5 == v7 && (v8 ^ v6) == 0)
        sub_1C02EBD34(*(_QWORD *)(a1 + 16), v9);
      break;
    default:
      return;
  }
}

uint64_t sub_1C022CD10()
{
  sub_1C0304B04();
  sub_1C0078B54();
  return sub_1C0304B40();
}

uint64_t sub_1C022CD74()
{
  sub_1C0304B04();
  sub_1C0078B54();
  return sub_1C0304B40();
}

uint64_t OUTLINED_FUNCTION_0_124()
{
  return sub_1C0304B34();
}

uint64_t sub_1C022CDD4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_1_106()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_2_109()
{
  return sub_1C0302E54();
}

uint64_t OUTLINED_FUNCTION_4_90()
{
  return sub_1C0302BFC();
}

uint64_t TerminalElement.Recurrence.toRecurrence()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  int v34;
  int v36;
  char v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BBEC8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C0302944();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v40 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v40 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v40 - v14;
  sub_1C03027B8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3) == 1)
  {
    sub_1C003E978((uint64_t)v2, &qword_1EF5BBEC8);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v15, v2, v3);
  v16 = sub_1C03027C4();
  if ((v17 & 1) != 0 || (v18 = v16, sub_1C022B288(), v41 == 13))
  {
    OUTLINED_FUNCTION_1_9();
    return 0;
  }
  type metadata accessor for DateTime.Interval();
  OUTLINED_FUNCTION_16_0();
  v20 = DateTime.Interval.init(withQuantity:timeUnit:)((char *)&v41, (double)v18);
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1C03047F8())
    sub_1C01200EC(MEMORY[0x1E0DEE9D8]);
  else
    v21 = MEMORY[0x1E0DEE9E8];
  v41 = v21;
  OUTLINED_FUNCTION_1_105((uint64_t)v13);
  v22 = OUTLINED_FUNCTION_137_1((uint64_t)v13);
  if (v22 == *MEMORY[0x1E0DA0A68]
    || v22 == *MEMORY[0x1E0DA0A40]
    || v22 == *MEMORY[0x1E0DA0AB0]
    || v22 == *MEMORY[0x1E0DA0B20]
    || v22 == *MEMORY[0x1E0DA0AE0]
    || v22 == *MEMORY[0x1E0DA0A30]
    || v22 == *MEMORY[0x1E0DA0AD0])
  {
    v29 = sub_1C022AEFC();
    if (v29)
    {
      v30 = v29;
      type metadata accessor for DateTime();
      OUTLINED_FUNCTION_16_0();
      v31 = DateTime.init(withDate:)(v30);
      sub_1C022DD20(&v40, v31, (uint64_t)sub_1C02A4F30, (void (*)(_QWORD))type metadata accessor for DateTime, (void (*)(uint64_t, uint64_t))static DateTime.== infix(_:_:), (uint64_t)&qword_1EF5BC050);
      swift_release();
      OUTLINED_FUNCTION_1_9();
      goto LABEL_38;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
  }
  OUTLINED_FUNCTION_1_105((uint64_t)v10);
  v32 = OUTLINED_FUNCTION_137_1((uint64_t)v10);
  v33 = *MEMORY[0x1E0DA0AC0];
  v34 = *MEMORY[0x1E0DA0AB8];
  if (v32 == *MEMORY[0x1E0DA0AC0] || v32 == v34)
  {
    OUTLINED_FUNCTION_1_105((uint64_t)v7);
    v36 = OUTLINED_FUNCTION_137_1((uint64_t)v7);
    if (v36 == v33)
    {
      v37 = 2;
    }
    else if (v36 == v34)
    {
      v37 = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      v37 = 3;
    }
    OUTLINED_FUNCTION_1_9();
    goto LABEL_43;
  }
  v38 = *(void (**)(char *, uint64_t))(v4 + 8);
  v38(v10, v3);
  v38(v15, v3);
LABEL_38:
  v37 = 3;
LABEL_43:
  v39 = v41;
  LOBYTE(v40) = v37;
  type metadata accessor for DateTime.RecurrencePattern();
  OUTLINED_FUNCTION_16_0();
  return DateTime.RecurrencePattern.init(withRecurrenceDateTimeRange:recurrencePeriod:totalNumberOfOccurrences:recurrenceDateTimes:fromDateTime:toDateTime:definedValue:)(0, v20, 0, 1, v39, 0, 0, (char *)&v40);
}

void sub_1C022D204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  BOOL v28;
  char v29;

  OUTLINED_FUNCTION_46_19();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v17 = *v10;
  OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_45_0();
  sub_1C0303E20();
  v18 = OUTLINED_FUNCTION_78_0();
  v19 = -1 << *(_BYTE *)(v17 + 32);
  v20 = v18 & ~v19;
  OUTLINED_FUNCTION_6_44();
  if ((v21 & 1) == 0)
  {
LABEL_16:
    OUTLINED_FUNCTION_28();
    v29 = OUTLINED_FUNCTION_106_4();
    OUTLINED_FUNCTION_74_7();
    OUTLINED_FUNCTION_22();
    sub_1C02327FC(v14, v12, v20, v29);
    OUTLINED_FUNCTION_88_6(a10);
    *v16 = v14;
    v16[1] = v12;
    goto LABEL_17;
  }
  v22 = *(_QWORD *)(v17 + 48);
  OUTLINED_FUNCTION_142_0(v22 + 16 * v20);
  v24 = v24 && v23 == v12;
  if (!v24 && (OUTLINED_FUNCTION_176() & 1) == 0)
  {
    v25 = ~v19;
    do
    {
      v20 = (v20 + 1) & v25;
      OUTLINED_FUNCTION_6_44();
      if ((v26 & 1) == 0)
        goto LABEL_16;
      OUTLINED_FUNCTION_142_0(v22 + 16 * v20);
      v28 = v24 && v27 == v12;
    }
    while (!v28 && (OUTLINED_FUNCTION_176() & 1) == 0);
  }
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_91_8(*v10);
LABEL_17:
  OUTLINED_FUNCTION_26_12();
}

void sub_1C022D320(uint64_t *a1, uint64_t a2)
{
  sub_1C022DD20(a1, a2, (uint64_t)sub_1C02A4F30, (void (*)(_QWORD))type metadata accessor for DateTime, (void (*)(uint64_t, uint64_t))static DateTime.== infix(_:_:), (uint64_t)&unk_1EF5BC050);
}

void sub_1C022D344(unsigned __int8 *a1, unsigned __int8 a2)
{
  sub_1C022E8F8(a1, a2);
}

void sub_1C022D358()
{
  char v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_36_31();
  sub_1C0301CFC();
  OUTLINED_FUNCTION_132();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_7_83();
  sub_1C006831C(&qword_1EF5BF2C0, v2, MEMORY[0x1E0CB08A8]);
  OUTLINED_FUNCTION_31_6();
  OUTLINED_FUNCTION_17_51();
  OUTLINED_FUNCTION_0_125();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_21_40(v3);
    while (1)
    {
      OUTLINED_FUNCTION_3_116(v5);
      sub_1C006831C((unint64_t *)&qword_1ED725F60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      OUTLINED_FUNCTION_14_57();
      OUTLINED_FUNCTION_13_54();
      if ((v0 & 1) != 0)
        break;
      v5 = OUTLINED_FUNCTION_1_107();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_113_5();
        goto LABEL_7;
      }
    }
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_36(v10);
    OUTLINED_FUNCTION_11_70();
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_119_2();
LABEL_7:
    OUTLINED_FUNCTION_94_8();
    OUTLINED_FUNCTION_12_54();
    v7 = OUTLINED_FUNCTION_4_91();
    sub_1C0232994(v7, v8, v9);
    OUTLINED_FUNCTION_32_31();
    OUTLINED_FUNCTION_18_40();
  }
  OUTLINED_FUNCTION_1();
}

void sub_1C022D44C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  char v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  char isUniquelyReferenced_nonNull_native;
  char v43;
  uint64_t *v44;
  uint64_t v45;
  _QWORD *v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  __int128 v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;

  OUTLINED_FUNCTION_18_0();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = *v0;
  sub_1C0304B04();
  v72 = *(_OWORD *)v3;
  v73 = *(_QWORD *)(v3 + 16);
  v58 = *((_QWORD *)&v72 + 1);
  OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_47();
  sub_1C02EDAD8();
  v66 = v72;
  OUTLINED_FUNCTION_14();
  v59 = v73;
  if (v73 == 1)
  {
    sub_1C0304B1C();
  }
  else
  {
    sub_1C0304B1C();
    if (v73)
    {
      OUTLINED_FUNCTION_87_10();
      sub_1C0303E20();
    }
    else
    {
      OUTLINED_FUNCTION_96_6();
    }
  }
  v56 = *(_QWORD *)(v3 + 32);
  v57 = *(_QWORD *)(v3 + 24);
  v55 = *(unsigned __int8 *)(v3 + 40);
  v53 = *(_QWORD *)(v3 + 56);
  v54 = *(_QWORD *)(v3 + 48);
  v51 = *(_QWORD *)(v3 + 72);
  v52 = *(_QWORD *)(v3 + 64);
  v49 = *(_QWORD *)(v3 + 88);
  v50 = *(_QWORD *)(v3 + 80);
  v47 = *(unsigned __int8 *)(v3 + 97);
  v48 = *(unsigned __int8 *)(v3 + 96);
  ContactHandle.hash(into:)();
  sub_1C0304B40();
  OUTLINED_FUNCTION_111_4();
  v9 = v8 & ~v7;
  v65 = v6 + 56;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v44 = v0;
    v45 = v3;
    v46 = v5;
    v61 = ~v7;
    v62 = v6;
    while (1)
    {
      v10 = *(_QWORD *)(v6 + 48) + 104 * v9;
      v11 = *(_QWORD *)v10;
      v12 = *(_QWORD *)(v10 + 8);
      v14 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v10 + 24);
      v15 = *(_QWORD *)(v10 + 32);
      v69 = *(unsigned __int8 *)(v10 + 40);
      v16 = *(_QWORD *)(v10 + 56);
      v17 = *(_QWORD *)(v10 + 72);
      v67 = *(_QWORD *)(v10 + 64);
      v68 = *(_QWORD *)(v10 + 48);
      v18 = *(_QWORD *)(v10 + 88);
      v64 = *(_QWORD *)(v10 + 80);
      v63 = *(unsigned __int8 *)(v10 + 96);
      v60 = *(unsigned __int8 *)(v10 + 97);
      OUTLINED_FUNCTION_65();
      OUTLINED_FUNCTION_47_24();
      OUTLINED_FUNCTION_47();
      OUTLINED_FUNCTION_22();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_45_0();
      OUTLINED_FUNCTION_65();
      OUTLINED_FUNCTION_47_24();
      sub_1C02399DC((uint64_t)&v72);
      if ((sub_1C02EBACC(v11, v66) & 1) == 0)
        goto LABEL_38;
      if (v14 == 1)
        break;
      v19 = v59;
      if (v59 == 1)
      {
LABEL_37:
        v27 = v19;
        sub_1C00C098C(v58, v19);
        OUTLINED_FUNCTION_47_24();
        sub_1C00C09A0(v12, v14);
        sub_1C00C09A0(v58, v27);
LABEL_38:
        OUTLINED_FUNCTION_80_7();
        OUTLINED_FUNCTION_29();
        OUTLINED_FUNCTION_123_2();
LABEL_39:
        OUTLINED_FUNCTION_29();
        sub_1C00C09A0(v12, v14);
        OUTLINED_FUNCTION_28();
        OUTLINED_FUNCTION_29_0();
        OUTLINED_FUNCTION_18();
        OUTLINED_FUNCTION_14();
        v6 = v62;
        goto LABEL_40;
      }
      if (!v14)
      {
        if (v59)
        {
LABEL_51:
          sub_1C00C098C(v58, v59);
          OUTLINED_FUNCTION_47_24();
          OUTLINED_FUNCTION_55_0();
          OUTLINED_FUNCTION_17_0();
          goto LABEL_38;
        }
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_80_7();
        OUTLINED_FUNCTION_29();
        v20 = v12;
        v21 = 0;
        goto LABEL_12;
      }
      if (!v59)
        goto LABEL_51;
      if (v12 == v58 && v14 == v59)
      {
        sub_1C00C098C(v58, v59);
        sub_1C00C098C(v58, v59);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_31();
        OUTLINED_FUNCTION_80_7();
        OUTLINED_FUNCTION_29();
        v20 = v58;
        v21 = v59;
LABEL_12:
        sub_1C00C09A0(v20, v21);
        goto LABEL_13;
      }
      v43 = OUTLINED_FUNCTION_176();
      sub_1C00C098C(v58, v59);
      OUTLINED_FUNCTION_47_24();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_31();
      OUTLINED_FUNCTION_80_7();
      OUTLINED_FUNCTION_29();
      OUTLINED_FUNCTION_123_2();
      if ((v43 & 1) == 0)
        goto LABEL_39;
LABEL_13:
      v22 = v13 == v57 && v15 == v56;
      if (!v22 && (OUTLINED_FUNCTION_176() & 1) == 0)
        goto LABEL_39;
      if (v69 != v55)
        goto LABEL_39;
      v23 = v68 == v54 && v16 == v53;
      if (!v23 && (OUTLINED_FUNCTION_176() & 1) == 0)
        goto LABEL_39;
      v24 = v67 == v52 && v17 == v51;
      if (!v24 && (OUTLINED_FUNCTION_176() & 1) == 0)
        goto LABEL_39;
      if (v64 == v50 && v18 == v49)
      {
        OUTLINED_FUNCTION_29();
        sub_1C00C09A0(v12, v14);
        OUTLINED_FUNCTION_55_0();
        OUTLINED_FUNCTION_29_0();
        OUTLINED_FUNCTION_18();
        OUTLINED_FUNCTION_14();
        v6 = v62;
        if (((v63 ^ v48) & 1) != 0)
          goto LABEL_40;
      }
      else
      {
        v26 = OUTLINED_FUNCTION_176();
        OUTLINED_FUNCTION_29();
        sub_1C00C09A0(v12, v14);
        OUTLINED_FUNCTION_28();
        OUTLINED_FUNCTION_29_0();
        OUTLINED_FUNCTION_18();
        OUTLINED_FUNCTION_14();
        v6 = v62;
        if ((v26 & 1) == 0 || ((v63 ^ v48) & 1) != 0)
          goto LABEL_40;
      }
      if (v60 == 2)
      {
        if (v47 == 2)
          goto LABEL_60;
      }
      else if (v47 != 2 && ((v47 ^ ((v60 & 1) == 0)) & 1) != 0)
      {
LABEL_60:
        OUTLINED_FUNCTION_29();
        sub_1C0239ADC(v45);
        OUTLINED_FUNCTION_144_1();
        v30 = v29 + 104 * v9;
        v31 = *(_QWORD *)(v30 + 8);
        v32 = *(_QWORD *)(v30 + 32);
        v33 = *(_BYTE *)(v30 + 40);
        v34 = *(_QWORD *)(v30 + 48);
        v35 = *(_QWORD *)(v30 + 56);
        v36 = *(_QWORD *)(v30 + 64);
        v37 = *(_QWORD *)(v30 + 72);
        v38 = *(_QWORD *)(v30 + 80);
        v39 = *(_QWORD *)(v30 + 88);
        v40 = *(_BYTE *)(v30 + 96);
        v41 = *(_BYTE *)(v30 + 97);
        *v46 = *(_QWORD *)v30;
        v46[1] = v31;
        v70 = *(_OWORD *)(v30 + 16);
        *((_OWORD *)v46 + 1) = v70;
        v46[4] = v32;
        *((_BYTE *)v46 + 40) = v33;
        v46[6] = v34;
        v46[7] = v35;
        v46[8] = v36;
        v46[9] = v37;
        v46[10] = v38;
        v46[11] = v39;
        *((_BYTE *)v46 + 96) = v40;
        *((_BYTE *)v46 + 97) = v41;
        swift_bridgeObjectRetain();
        sub_1C00C098C(v31, v70);
        OUTLINED_FUNCTION_47();
        OUTLINED_FUNCTION_65();
        OUTLINED_FUNCTION_22();
        OUTLINED_FUNCTION_21();
        goto LABEL_63;
      }
LABEL_40:
      v9 = (v9 + 1) & v61;
      if (((*(_QWORD *)(v65 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      {
        OUTLINED_FUNCTION_29();
        v3 = v45;
        v5 = v46;
        v1 = v44;
        goto LABEL_62;
      }
    }
    v19 = v59;
    if (v59 != 1)
      goto LABEL_37;
    OUTLINED_FUNCTION_80_7();
    OUTLINED_FUNCTION_29();
    v20 = v12;
    v21 = 1;
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_29();
LABEL_62:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v71 = *v1;
  *v1 = 0x8000000000000000;
  sub_1C0239A5C(v3);
  sub_1C0232BE8((_QWORD *)v3, v9, isUniquelyReferenced_nonNull_native);
  OUTLINED_FUNCTION_126_2(v71);
  memcpy(v5, (const void *)v3, 0x62uLL);
LABEL_63:
  OUTLINED_FUNCTION_1();
}

void sub_1C022DA20()
{
  char v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_36_31();
  sub_1C0301EAC();
  OUTLINED_FUNCTION_132();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_7_83();
  sub_1C006831C((unint64_t *)&qword_1ED725928, v2, MEMORY[0x1E0CB11D0]);
  OUTLINED_FUNCTION_31_6();
  OUTLINED_FUNCTION_17_51();
  OUTLINED_FUNCTION_0_125();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_21_40(v3);
    while (1)
    {
      OUTLINED_FUNCTION_3_116(v5);
      sub_1C006831C(&qword_1EF5B8E10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
      OUTLINED_FUNCTION_14_57();
      OUTLINED_FUNCTION_13_54();
      if ((v0 & 1) != 0)
        break;
      v5 = OUTLINED_FUNCTION_1_107();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_113_5();
        goto LABEL_7;
      }
    }
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_36(v7);
    OUTLINED_FUNCTION_11_70();
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_119_2();
LABEL_7:
    OUTLINED_FUNCTION_94_8();
    OUTLINED_FUNCTION_12_54();
    OUTLINED_FUNCTION_4_91();
    sub_1C02334EC();
    OUTLINED_FUNCTION_32_31();
    OUTLINED_FUNCTION_18_40();
  }
  OUTLINED_FUNCTION_1();
}

void sub_1C022DB14()
{
  char v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_36_31();
  sub_1C0301D5C();
  OUTLINED_FUNCTION_132();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_7_83();
  sub_1C006831C((unint64_t *)&qword_1ED725700, v2, MEMORY[0x1E0CB09C8]);
  OUTLINED_FUNCTION_31_6();
  OUTLINED_FUNCTION_17_51();
  OUTLINED_FUNCTION_0_125();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_21_40(v3);
    while (1)
    {
      OUTLINED_FUNCTION_3_116(v5);
      sub_1C006831C(&qword_1EF5B9098, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      OUTLINED_FUNCTION_14_57();
      OUTLINED_FUNCTION_13_54();
      if ((v0 & 1) != 0)
        break;
      v5 = OUTLINED_FUNCTION_1_107();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_113_5();
        goto LABEL_7;
      }
    }
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_36(v10);
    OUTLINED_FUNCTION_11_70();
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_119_2();
LABEL_7:
    OUTLINED_FUNCTION_94_8();
    OUTLINED_FUNCTION_12_54();
    v7 = OUTLINED_FUNCTION_4_91();
    sub_1C0233710(v7, v8, v9);
    OUTLINED_FUNCTION_32_31();
    OUTLINED_FUNCTION_18_40();
  }
  OUTLINED_FUNCTION_1();
}

void sub_1C022DC08()
{
  char v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_36_31();
  sub_1C0303AA8();
  OUTLINED_FUNCTION_132();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_7_83();
  sub_1C006831C(&qword_1EF5BC000, v2, MEMORY[0x1E0DA3B40]);
  OUTLINED_FUNCTION_31_6();
  OUTLINED_FUNCTION_17_51();
  OUTLINED_FUNCTION_0_125();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_21_40(v3);
    while (1)
    {
      OUTLINED_FUNCTION_3_116(v5);
      sub_1C006831C(&qword_1EF5BC008, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3B30], MEMORY[0x1E0DA3B48]);
      OUTLINED_FUNCTION_14_57();
      OUTLINED_FUNCTION_13_54();
      if ((v0 & 1) != 0)
        break;
      v5 = OUTLINED_FUNCTION_1_107();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_113_5();
        goto LABEL_7;
      }
    }
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_36(v10);
    OUTLINED_FUNCTION_11_70();
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_119_2();
LABEL_7:
    OUTLINED_FUNCTION_94_8();
    OUTLINED_FUNCTION_12_54();
    v7 = OUTLINED_FUNCTION_4_91();
    sub_1C0233964(v7, v8, v9);
    OUTLINED_FUNCTION_32_31();
    OUTLINED_FUNCTION_18_40();
  }
  OUTLINED_FUNCTION_1();
}

void sub_1C022DCFC(uint64_t *a1, uint64_t a2)
{
  sub_1C022DD20(a1, a2, (uint64_t)sub_1C0078A80, (void (*)(_QWORD))type metadata accessor for DateTimeConstraint, (void (*)(uint64_t, uint64_t))sub_1C021DA28, (uint64_t)&unk_1EF5BC028);
}

void sub_1C022DD20(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), void (*a5)(uint64_t, uint64_t), uint64_t a6)
{
  uint64_t *v6;
  uint64_t *v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD);
  uint64_t v37;
  uint64_t v39;
  char v40;
  uint64_t v42[9];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v10 = v6;
  v13 = *v6;
  if ((*v6 & 0xC000000000000001) == 0)
  {
    sub_1C0304B04();
    OUTLINED_FUNCTION_31_6();
    ((void (*)(uint64_t *))a3)(v42);
    v16 = sub_1C0304B40();
    v17 = -1 << *(_BYTE *)(v13 + 32);
    v18 = v16 & ~v17;
    OUTLINED_FUNCTION_146_1();
    v36 = a4;
    if ((v19 & 1) != 0)
    {
      a4(0);
      v20 = OUTLINED_FUNCTION_109_5();
      a5(v20, a2);
      OUTLINED_FUNCTION_151_1();
      if ((a3 & 1) != 0)
      {
LABEL_9:
        OUTLINED_FUNCTION_1_4();
        OUTLINED_FUNCTION_8_1();
        *a1 = *(_QWORD *)(*(_QWORD *)(*v6 + 48) + 8 * v18);
        swift_retain();
        goto LABEL_17;
      }
      v21 = ~v17;
      while (1)
      {
        v18 = (v18 + 1) & v21;
        OUTLINED_FUNCTION_146_1();
        if ((v22 & 1) == 0)
          break;
        v23 = OUTLINED_FUNCTION_109_5();
        a5(v23, a2);
        OUTLINED_FUNCTION_151_1();
        if ((a3 & 1) != 0)
          goto LABEL_9;
      }
    }
    OUTLINED_FUNCTION_8_1();
    v27 = OUTLINED_FUNCTION_61_12();
    v42[0] = *v6;
    *v6 = 0x8000000000000000;
    v28 = OUTLINED_FUNCTION_44_7();
    sub_1C0233BB8(v28, v18, v27, a6, a3, v36, a5);
    OUTLINED_FUNCTION_30_32(v42[0]);
    *a1 = a2;
LABEL_17:
    OUTLINED_FUNCTION_13_3();
    return;
  }
  OUTLINED_FUNCTION_31_6();
  OUTLINED_FUNCTION_44_7();
  v14 = sub_1C0304600();
  OUTLINED_FUNCTION_1_4();
  if (v14)
  {
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_1_4();
    v43 = v14;
    a4(0);
    swift_unknownObjectRetain();
    OUTLINED_FUNCTION_6_7();
    *a1 = v42[0];
    swift_unknownObjectRelease();
    goto LABEL_17;
  }
  if (!__OFADD__(sub_1C03045F4(), 1))
  {
    v24 = sub_1C022F4A4();
    v42[0] = v24;
    v25 = *(_QWORD *)(v24 + 16);
    if (*(_QWORD *)(v24 + 24) <= v25)
    {
      v29 = v25 + 1;
      OUTLINED_FUNCTION_44_7();
      sub_1C0230160(v29, a6, a3, v30, v31, v32, v33, v34, v35, v37, v39, v40, v42[0], v42[1], v42[2], v42[3], v42[4], v42[5], v42[6],
        v42[7],
        v42[8],
        v43,
        v44,
        v45,
        v46,
        v47,
        v48,
        v49,
        v50,
        v51,
        v52,
        v53);
      v26 = v42[0];
    }
    else
    {
      v26 = v24;
      OUTLINED_FUNCTION_44_7();
    }
    sub_1C02324A8(a2, v26, (void (*)(_BYTE *))a3);
    *v10 = v26;
    swift_bridgeObjectRelease();
    *a1 = a2;
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1C022DF80(unsigned __int8 *a1, unsigned __int8 a2)
{
  sub_1C022E8F8(a1, a2);
}

void sub_1C022DF94()
{
  char v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_36_31();
  sub_1C03016E4();
  OUTLINED_FUNCTION_132();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_7_83();
  sub_1C006831C(&qword_1EF5BD408, v2, MEMORY[0x1E0CAE5F0]);
  OUTLINED_FUNCTION_31_6();
  OUTLINED_FUNCTION_17_51();
  OUTLINED_FUNCTION_0_125();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_21_40(v3);
    while (1)
    {
      OUTLINED_FUNCTION_3_116(v5);
      sub_1C006831C(&qword_1EF5C17A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], MEMORY[0x1E0CAE5F8]);
      OUTLINED_FUNCTION_14_57();
      OUTLINED_FUNCTION_13_54();
      if ((v0 & 1) != 0)
        break;
      v5 = OUTLINED_FUNCTION_1_107();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_113_5();
        goto LABEL_7;
      }
    }
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_36(v10);
    OUTLINED_FUNCTION_11_70();
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_119_2();
LABEL_7:
    OUTLINED_FUNCTION_94_8();
    OUTLINED_FUNCTION_12_54();
    v7 = OUTLINED_FUNCTION_4_91();
    sub_1C0233E04(v7, v8, v9);
    OUTLINED_FUNCTION_32_31();
    OUTLINED_FUNCTION_18_40();
  }
  OUTLINED_FUNCTION_1();
}

void sub_1C022E088()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t *v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_18_0();
  v2 = v1;
  v36 = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF2B0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v41 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v34 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v34 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v34 - v14;
  v35 = v0;
  v16 = *v0;
  sub_1C0304B04();
  sub_1C0301CFC();
  sub_1C006831C(&qword_1EF5BF2C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_138_1();
  v37 = v4;
  v42 = v2;
  OUTLINED_FUNCTION_138_1();
  v17 = sub_1C0304B40();
  v18 = -1 << *(_BYTE *)(v16 + 32);
  v19 = v17 & ~v18;
  v20 = v16;
  v40 = v16 + 56;
  if (((*(_QWORD *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0)
  {
    v34 = v15;
    v38 = ~v18;
    v39 = *(_QWORD *)(v5 + 72);
    do
    {
      v21 = v20;
      v22 = v39 * v19;
      sub_1C0075F00(*(_QWORD *)(v20 + 48) + v39 * v19, (uint64_t)v13);
      sub_1C006831C((unint64_t *)&qword_1ED725F60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      v23 = v42;
      v24 = OUTLINED_FUNCTION_117_3();
      sub_1C0075F00((uint64_t)v13, (uint64_t)v10);
      v25 = v23;
      v26 = v41;
      sub_1C0075F00(v25, v41);
      if ((v24 & 1) != 0)
      {
        v27 = OUTLINED_FUNCTION_117_3();
        OUTLINED_FUNCTION_78_10(v26);
        OUTLINED_FUNCTION_78_10((uint64_t)v10);
        OUTLINED_FUNCTION_78_10((uint64_t)v13);
        if ((v27 & 1) != 0)
        {
          OUTLINED_FUNCTION_28();
          sub_1C003E978(v42, &qword_1EF5BF2B0);
          OUTLINED_FUNCTION_144_1();
          sub_1C0075F00(v32 + v22, v33);
          goto LABEL_11;
        }
      }
      else
      {
        OUTLINED_FUNCTION_78_10(v26);
        OUTLINED_FUNCTION_78_10((uint64_t)v10);
        OUTLINED_FUNCTION_78_10((uint64_t)v13);
      }
      v19 = (v19 + 1) & v38;
      v20 = v21;
    }
    while (((*(_QWORD *)(v40 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0);
    swift_bridgeObjectRelease();
    v29 = v35;
    v28 = v36;
    v15 = v34;
  }
  else
  {
    swift_bridgeObjectRelease();
    v29 = v35;
    v28 = v36;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v31 = v42;
  sub_1C0075F00(v42, (uint64_t)v15);
  v43 = *v29;
  *v29 = 0x8000000000000000;
  sub_1C0234058((uint64_t)v15, v19, isUniquelyReferenced_nonNull_native);
  OUTLINED_FUNCTION_126_2(v43);
  sub_1C0075F48(v31, v28);
LABEL_11:
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C022E388(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *v2;
  OUTLINED_FUNCTION_119();
  sub_1C0304B10();
  v6 = OUTLINED_FUNCTION_78_0() & ~(-1 << *(_BYTE *)(v5 + 32));
  OUTLINED_FUNCTION_51_16();
  if ((v7 & 1) == 0)
  {
LABEL_6:
    OUTLINED_FUNCTION_61_12();
    OUTLINED_FUNCTION_44_26();
    v12 = sub_1C0234368(a2, v6, v11);
    OUTLINED_FUNCTION_28_36(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
    result = 1;
    goto LABEL_7;
  }
  if (*(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v6) != a2)
  {
    do
    {
      OUTLINED_FUNCTION_22_44();
      if ((v9 & 1) == 0)
        goto LABEL_6;
    }
    while (*(_QWORD *)(v8 + 8 * v6) != a2);
  }
  result = 0;
  a2 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v6);
LABEL_7:
  *a1 = a2;
  return result;
}

uint64_t sub_1C022E458(uint64_t *a1, void *a2)
{
  uint64_t *v2;
  void *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  void *v19;
  id v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char v25;
  id v26;
  uint64_t v27;
  uint64_t v28;

  v4 = v2;
  v7 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v7 < 0)
      v8 = *v2;
    else
      v8 = v7 & 0xFFFFFFFFFFFFFF8;
    OUTLINED_FUNCTION_22();
    v9 = a2;
    v10 = sub_1C0304600();

    if (v10)
    {
      OUTLINED_FUNCTION_18();

      sub_1C00F6888();
      swift_unknownObjectRetain();
      OUTLINED_FUNCTION_6_7();
      *a1 = v27;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1C03045F4();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v22 = sub_1C022F614(v8, result + 1);
    v28 = v22;
    if (*(_QWORD *)(v22 + 24) <= *(_QWORD *)(v22 + 16))
    {
      v26 = v9;
      sub_1C023097C();
      v23 = v28;
    }
    else
    {
      v23 = v22;
      v24 = v9;
    }
    sub_1C0232530((uint64_t)v9, v23);
    *v4 = v23;
  }
  else
  {
    OUTLINED_FUNCTION_22();
    v11 = sub_1C0304450();
    v12 = -1 << *(_BYTE *)(v7 + 32);
    v13 = v11 & ~v12;
    OUTLINED_FUNCTION_149_1();
    if ((v14 & 1) != 0)
    {
      sub_1C00F6888();
      OUTLINED_FUNCTION_128_1();
      v15 = OUTLINED_FUNCTION_124_2();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        OUTLINED_FUNCTION_18();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = (uint64_t)v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        OUTLINED_FUNCTION_149_1();
        if ((v17 & 1) == 0)
          break;
        OUTLINED_FUNCTION_128_1();
        v18 = OUTLINED_FUNCTION_124_2();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    OUTLINED_FUNCTION_18();
    v25 = OUTLINED_FUNCTION_106_4();
    OUTLINED_FUNCTION_74_7();
    v9 = a2;
    sub_1C02344B4((uint64_t)v9, v13, v25);
    *v2 = v27;
  }
  swift_bridgeObjectRelease();
  *a1 = (uint64_t)v9;
  return 1;
}

void sub_1C022E670()
{
  uint64_t *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  BOOL v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;
  BOOL v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_25_30();
  v2 = v1;
  v19 = v3;
  v4 = *v0;
  OUTLINED_FUNCTION_99_5();
  swift_bridgeObjectRetain();
  sub_1C0170110();
  v5 = OUTLINED_FUNCTION_98_5();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v20 = ~v6;
    v8 = v2[2];
    v9 = *(_QWORD *)(v4 + 48);
    while (1)
    {
      v10 = *(_QWORD **)(v9 + 8 * v7);
      if (v10[2] == v8)
      {
        if (!v8 || v10 == v2)
          goto LABEL_29;
        v11 = v10[4] == v2[4] && v10[5] == v2[5];
        if (v11 || (OUTLINED_FUNCTION_176() & 1) != 0)
        {
          if (v8 == 1)
            goto LABEL_29;
          v12 = v10[6] == v2[6] && v10[7] == v2[7];
          if (v12 || (OUTLINED_FUNCTION_176() & 1) != 0)
            break;
        }
      }
LABEL_27:
      v7 = (v7 + 1) & v20;
      if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        goto LABEL_28;
    }
    if (v8 == 2)
    {
LABEL_29:
      OUTLINED_FUNCTION_18();
      OUTLINED_FUNCTION_55_0();
      *v19 = *(_QWORD *)(*(_QWORD *)(*v0 + 48) + 8 * v7);
      swift_bridgeObjectRetain();
      goto LABEL_30;
    }
    v13 = v10 + 9;
    v14 = v2 + 9;
    v15 = 2;
    while (v15 < v8)
    {
      v16 = *(v13 - 1) == *(v14 - 1) && *v13 == *v14;
      if (!v16 && (OUTLINED_FUNCTION_176() & 1) == 0)
        goto LABEL_27;
      ++v15;
      v14 += 2;
      v13 += 2;
      if (v8 == v15)
        goto LABEL_29;
    }
    __break(1u);
  }
  else
  {
LABEL_28:
    OUTLINED_FUNCTION_55_0();
    v17 = OUTLINED_FUNCTION_106_4();
    v21 = *v0;
    *v0 = 0x8000000000000000;
    v18 = OUTLINED_FUNCTION_22();
    sub_1C0234628(v18, v7, v17);
    OUTLINED_FUNCTION_88_6(v21);
    *v19 = v2;
LABEL_30:
    OUTLINED_FUNCTION_24_1();
  }
}

void sub_1C022E838(_DWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *v2;
  v6 = MEMORY[0x1C3B979E8](*(_QWORD *)(v5 + 40), a2, 4) & ~(-1 << *(_BYTE *)(v5 + 32));
  OUTLINED_FUNCTION_51_16();
  if ((v7 & 1) != 0)
  {
    if (*(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v6) == (_DWORD)a2)
      goto LABEL_7;
    while (1)
    {
      OUTLINED_FUNCTION_22_44();
      if ((v9 & 1) == 0)
        break;
      if (*(_DWORD *)(v8 + 4 * v6) == (_DWORD)a2)
        goto LABEL_7;
    }
  }
  OUTLINED_FUNCTION_61_12();
  OUTLINED_FUNCTION_44_26();
  v11 = sub_1C0234838(a2, v6, v10);
  OUTLINED_FUNCTION_28_36(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20);
LABEL_7:
  *a1 = a2;
  OUTLINED_FUNCTION_41_11();
}

void sub_1C022E8E4(unsigned __int8 *a1, unsigned __int8 a2)
{
  sub_1C022E8F8(a1, a2);
}

void sub_1C022E8F8(unsigned __int8 *a1, unsigned __int8 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_119();
  sub_1C0304B10();
  v6 = OUTLINED_FUNCTION_78_0();
  v7 = -1 << *(_BYTE *)(v3 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    OUTLINED_FUNCTION_61_12();
    OUTLINED_FUNCTION_44_26();
    sub_1C0233CEC(a2, v8);
    OUTLINED_FUNCTION_28_36(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20);
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v3 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  a2 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  OUTLINED_FUNCTION_71_11();
}

void sub_1C022E9E8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = *v3;
  OUTLINED_FUNCTION_119();
  sub_1C0303E20();
  v8 = OUTLINED_FUNCTION_78_0();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  OUTLINED_FUNCTION_6_44();
  if ((v11 & 1) == 0)
  {
LABEL_16:
    v19 = OUTLINED_FUNCTION_61_12();
    OUTLINED_FUNCTION_139_1();
    OUTLINED_FUNCTION_65();
    v20 = sub_1C023495C(a2, a3, v10, v19);
    OUTLINED_FUNCTION_28_36(v20, v21, v22, v23, v24, v25, v26, v27, v28, v29);
    *a1 = a2;
    a1[1] = a3;
    goto LABEL_17;
  }
  v12 = *(_QWORD *)(v7 + 48);
  OUTLINED_FUNCTION_142_0(v12 + 16 * v10);
  v14 = v14 && v13 == a3;
  if (!v14 && (OUTLINED_FUNCTION_176() & 1) == 0)
  {
    v15 = ~v9;
    do
    {
      v10 = (v10 + 1) & v15;
      OUTLINED_FUNCTION_6_44();
      if ((v16 & 1) == 0)
        goto LABEL_16;
      OUTLINED_FUNCTION_142_0(v12 + 16 * v10);
      v18 = v14 && v17 == a3;
    }
    while (!v18 && (OUTLINED_FUNCTION_176() & 1) == 0);
  }
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_91_8(*v3);
LABEL_17:
  OUTLINED_FUNCTION_71_11();
}

void sub_1C022EAFC(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *v2;
  v6 = sub_1C0304AF8() & ~(-1 << *(_BYTE *)(v5 + 32));
  OUTLINED_FUNCTION_51_16();
  if ((v7 & 1) != 0)
  {
    if (*(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v6) == a2)
      goto LABEL_7;
    while (1)
    {
      OUTLINED_FUNCTION_22_44();
      if ((v9 & 1) == 0)
        break;
      if (*(_QWORD *)(v8 + 8 * v6) == a2)
        goto LABEL_7;
    }
  }
  OUTLINED_FUNCTION_61_12();
  OUTLINED_FUNCTION_139_1();
  sub_1C0234D8C(a2, v6);
  OUTLINED_FUNCTION_28_36(v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
LABEL_7:
  *a1 = a2;
  OUTLINED_FUNCTION_41_11();
}

void sub_1C022EBB8(uint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  BOOL v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_157_0();
  sub_1C0304B04();
  OUTLINED_FUNCTION_31_6();
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_65();
  sub_1C0170110();
  OUTLINED_FUNCTION_29();
  v9 = sub_1C0304B40() & ~(-1 << *(_BYTE *)(v5 + 32));
  if (((*(_QWORD *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    OUTLINED_FUNCTION_159_1();
    while (1)
    {
      v10 = (_QWORD *)(v26 + 24 * v9);
      v11 = (_QWORD *)v10[2];
      v12 = *v10 == a2 && v10[1] == a3;
      if (v12 || (OUTLINED_FUNCTION_176() & 1) != 0)
      {
        v4 = (uint64_t *)v11[2];
        if (v4 == (uint64_t *)a4[2])
        {
          if (!v4 || v11 == a4)
            goto LABEL_34;
          v13 = v11[4] == a4[4] && v11[5] == a4[5];
          if (v13 || (OUTLINED_FUNCTION_176() & 1) != 0)
          {
            if (v4 == (uint64_t *)1)
              goto LABEL_34;
            v14 = v11[6] == a4[6] && v11[7] == a4[7];
            if (v14 || (OUTLINED_FUNCTION_176() & 1) != 0)
              break;
          }
        }
      }
LABEL_32:
      v9 = (v9 + 1) & v25;
      if (((*(_QWORD *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_33;
    }
    if (v4 == (uint64_t *)2)
    {
LABEL_34:
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_8_1();
      OUTLINED_FUNCTION_29();
      v20 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v23 + 48) + 24 * v9);
      v21 = v20[1];
      v22 = v20[2];
      *a1 = *v20;
      a1[1] = v21;
      a1[2] = v22;
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_47();
      goto LABEL_35;
    }
    v15 = v11 + 9;
    v16 = a4 + 9;
    v17 = 2;
    while (v17 < (unint64_t)v4)
    {
      v18 = *(v15 - 1) == *(v16 - 1) && *v15 == *v16;
      if (!v18 && (OUTLINED_FUNCTION_176() & 1) == 0)
        goto LABEL_32;
      ++v17;
      v16 += 2;
      v15 += 2;
      if (v4 == (uint64_t *)v17)
        goto LABEL_34;
    }
    __break(1u);
  }
  else
  {
LABEL_33:
    OUTLINED_FUNCTION_8_1();
    v19 = OUTLINED_FUNCTION_154_1();
    v27 = *v4;
    *v4 = 0x8000000000000000;
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_65();
    sub_1C0234AF4(a2, a3, a4, v9, v19);
    OUTLINED_FUNCTION_153_1(v27);
    *a1 = a2;
    a1[1] = a3;
    a1[2] = (uint64_t)a4;
LABEL_35:
    OUTLINED_FUNCTION_13_3();
  }
}

uint64_t sub_1C022EDFC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[5];
  char v53;
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;
  char v57;
  _QWORD v58[5];
  char v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  char v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;

  OUTLINED_FUNCTION_157_0();
  v7 = sub_1C0304B04();
  v50 = a2;
  OUTLINED_FUNCTION_140_2(v7, (uint64_t)&v60);
  v46 = v2;
  v47 = a1;
  if (v63)
  {
    v3 = v61;
    if (v63 == 1)
    {
      OUTLINED_FUNCTION_87_10();
      OUTLINED_FUNCTION_31_6();
      sub_1C02399A8(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0120A8C);
      OUTLINED_FUNCTION_107_3();
      sub_1C02399A8(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0120AE0);
      OUTLINED_FUNCTION_122_2();
    }
    else
    {
      sub_1C0304B10();
      OUTLINED_FUNCTION_31_6();
      OUTLINED_FUNCTION_22();
      OUTLINED_FUNCTION_107_3();
      OUTLINED_FUNCTION_18();
      OUTLINED_FUNCTION_45_0();
      OUTLINED_FUNCTION_156_0();
      OUTLINED_FUNCTION_28();
    }
  }
  else
  {
    v64 = v60;
    v65 = v61;
    v66 = v62;
    OUTLINED_FUNCTION_96_6();
    OUTLINED_FUNCTION_31_6();
    sub_1C028B658();
  }
  sub_1C0304B40();
  OUTLINED_FUNCTION_112_4();
  OUTLINED_FUNCTION_132_2();
  v45 = v4;
  if ((v8 & 1) != 0)
  {
    OUTLINED_FUNCTION_159_1();
    do
    {
      v16 = v49 + 48 * v3;
      v18 = *(_QWORD *)v16;
      v17 = *(_QWORD *)(v16 + 8);
      v19 = *(_QWORD *)(v16 + 16);
      v20 = *(_QWORD *)(v16 + 24);
      if (*(_BYTE *)(v16 + 40))
      {
        if (*(_BYTE *)(v16 + 40) != 1)
        {
          OUTLINED_FUNCTION_130_1(v9, (uint64_t)v52, v10, v11, v12, v13, v14, v15, v45, (uint64_t)v46, v47, v48, v49, v50);
          if (v53 != 2)
            goto LABEL_44;
          v30 = v52[2];
          v31 = v52[3];
          v32 = v18 == v52[0] && v17 == v52[1];
          if (!v32 && (OUTLINED_FUNCTION_176() & 1) == 0)
            goto LABEL_44;
          if (v19 == v30 && v20 == v31)
            goto LABEL_47;
LABEL_43:
          if ((OUTLINED_FUNCTION_176() & 1) != 0)
            goto LABEL_47;
          goto LABEL_44;
        }
        OUTLINED_FUNCTION_130_1(v9, (uint64_t)v58, v10, v11, v12, v13, v14, v15, v45, (uint64_t)v46, v47, v48, v49, v50);
        if (v59 == 1)
        {
          v21 = v58[2];
          v22 = v18 == v58[0] && v17 == v58[1];
          if ((v22 || (OUTLINED_FUNCTION_176() & 1) != 0) && v19 == v21)
            goto LABEL_47;
        }
      }
      else
      {
        v23 = *(_QWORD *)(v16 + 32);
        OUTLINED_FUNCTION_130_1(v9, (uint64_t)v54, v10, v11, v12, v13, v14, v15, v45, (uint64_t)v46, v47, v48, v49, v50);
        if (v57)
          goto LABEL_44;
        v25 = v54[2];
        v24 = v55;
        v26 = v56;
        if (v18 != v54[0] || v17 != v54[1])
        {
          v28 = v55;
          if ((sub_1C0304A08() & 1) == 0)
            goto LABEL_44;
          v24 = v28;
        }
        if (v19 != v25)
          goto LABEL_44;
        if (v23)
        {
          if (!v26)
            goto LABEL_44;
          if (v20 == v24 && v23 == v26)
          {
LABEL_47:
            swift_bridgeObjectRelease();
            sub_1C02399A8(v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0120AE0);
            OUTLINED_FUNCTION_144_1();
            v36 = v35 + 48 * v3;
            v37 = *(_QWORD *)v36;
            v38 = *(_QWORD *)(v36 + 8);
            v39 = *(_QWORD *)(v36 + 16);
            v40 = *(_QWORD *)(v36 + 24);
            v41 = *(_QWORD *)(v36 + 32);
            v42 = *(_BYTE *)(v36 + 40);
            *(_QWORD *)v47 = *(_QWORD *)v36;
            *(_QWORD *)(v47 + 8) = v38;
            *(_QWORD *)(v47 + 16) = v39;
            *(_QWORD *)(v47 + 24) = v40;
            *(_QWORD *)(v47 + 32) = v41;
            *(_BYTE *)(v47 + 40) = v42;
            sub_1C0120A8C(v37, v38, v39, v40, v41, v42);
            return 0;
          }
          goto LABEL_43;
        }
        if (!v26)
          goto LABEL_47;
      }
LABEL_44:
      v3 = (v3 + 1) & v48;
      OUTLINED_FUNCTION_148_1();
    }
    while ((v34 & 1) != 0);
  }
  swift_bridgeObjectRelease();
  v44 = OUTLINED_FUNCTION_61_12();
  v51 = *v46;
  *v46 = 0x8000000000000000;
  sub_1C02399A8(v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0120A8C);
  sub_1C0234EA8(v50, v3, v44);
  OUTLINED_FUNCTION_30_32(v51);
  sub_1C015898C(v50, v47);
  return 1;
}

void sub_1C022F150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;
  char v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  OUTLINED_FUNCTION_25_30();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v26 = v9;
  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_99_5();
  OUTLINED_FUNCTION_31_6();
  OUTLINED_FUNCTION_22();
  sub_1C0303E20();
  OUTLINED_FUNCTION_18();
  if (v2)
  {
    OUTLINED_FUNCTION_87_10();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_114();
    OUTLINED_FUNCTION_17_0();
  }
  else
  {
    OUTLINED_FUNCTION_96_6();
  }
  OUTLINED_FUNCTION_98_5();
  OUTLINED_FUNCTION_111_4();
  v12 = v11 & ~v10;
  v13 = (uint64_t *)(v0 + 56);
  if (((*(_QWORD *)(v0 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_21:
    OUTLINED_FUNCTION_8_1();
    v20 = OUTLINED_FUNCTION_154_1();
    v27 = *v13;
    *v13 = 0x8000000000000000;
    OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_21();
    sub_1C0235230(v8, v6, v4, v2, v12, v20);
    OUTLINED_FUNCTION_153_1(v27);
    *v26 = v8;
    v26[1] = v6;
    v26[2] = v4;
    v26[3] = v2;
    goto LABEL_25;
  }
  v14 = ~v10;
  while (1)
  {
    v15 = (_QWORD *)(*(_QWORD *)(v0 + 48) + 32 * v12);
    v17 = v15[2];
    v16 = v15[3];
    v18 = *v15 == v8 && v15[1] == v6;
    if (!v18 && (OUTLINED_FUNCTION_176() & 1) == 0)
      goto LABEL_20;
    if (!v16)
      break;
    if (v2)
    {
      v19 = v17 == v4 && v16 == v2;
      if (v19 || (OUTLINED_FUNCTION_176() & 1) != 0)
      {
        OUTLINED_FUNCTION_17_0();
        OUTLINED_FUNCTION_18();
        OUTLINED_FUNCTION_8_1();
        goto LABEL_24;
      }
    }
LABEL_20:
    v12 = (v12 + 1) & v14;
    if (((*(unint64_t *)((char *)v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      goto LABEL_21;
  }
  if (v2)
    goto LABEL_20;
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_8_1();
  swift_bridgeObjectRelease_n();
LABEL_24:
  OUTLINED_FUNCTION_144_1();
  v22 = (uint64_t *)(v21 + 32 * v12);
  v23 = v22[1];
  v25 = v22[2];
  v24 = v22[3];
  *v26 = *v22;
  v26[1] = v23;
  v26[2] = v25;
  v26[3] = v24;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_47();
LABEL_25:
  OUTLINED_FUNCTION_24_1();
}

void sub_1C022F324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _WORD *v15;
  _WORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v30;

  OUTLINED_FUNCTION_46_19();
  v12 = v10;
  v14 = v13;
  v16 = v15;
  v17 = *v10;
  OUTLINED_FUNCTION_119();
  v18 = sub_1C02E5C48(v14);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_17_0();
  v19 = OUTLINED_FUNCTION_78_0();
  v20 = -1 << *(_BYTE *)(v17 + 32);
  v21 = v19 & ~v20;
  OUTLINED_FUNCTION_50_21();
  if ((v22 & 1) != 0)
  {
    OUTLINED_FUNCTION_145_1();
    if (v11 == OUTLINED_FUNCTION_110_3() && v18 == v23)
    {
LABEL_17:
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_2();
      goto LABEL_18;
    }
    v25 = OUTLINED_FUNCTION_176();
    OUTLINED_FUNCTION_14();
    OUTLINED_FUNCTION_28();
    if ((v25 & 1) != 0)
    {
LABEL_7:
      OUTLINED_FUNCTION_55_0();
LABEL_18:
      LOWORD(v14) = *(_WORD *)(*(_QWORD *)(*v12 + 48) + 2 * v21);
      goto LABEL_19;
    }
    v26 = ~v20;
    while (1)
    {
      v21 = (v21 + 1) & v26;
      OUTLINED_FUNCTION_50_21();
      if ((v27 & 1) == 0)
        break;
      OUTLINED_FUNCTION_145_1();
      if (v25 == OUTLINED_FUNCTION_110_3() && v18 == v28)
        goto LABEL_17;
      v25 = OUTLINED_FUNCTION_176();
      OUTLINED_FUNCTION_14();
      OUTLINED_FUNCTION_28();
      if ((v25 & 1) != 0)
        goto LABEL_7;
    }
  }
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_106_4();
  OUTLINED_FUNCTION_74_7();
  sub_1C0235458(v14, v21, v30);
  OUTLINED_FUNCTION_88_6(a10);
LABEL_19:
  *v16 = v14;
  OUTLINED_FUNCTION_26_12();
}

uint64_t sub_1C022F488()
{
  return sub_1C022F4A4();
}

uint64_t sub_1C022F4A4()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(_QWORD);
  void (*v3)(uint64_t *);
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t *);
  void (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22[2];
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_25_30();
  v42 = v0;
  v43 = v4;
  if (v5)
  {
    v6 = v3;
    v7 = v2;
    v8 = (uint64_t)v1;
    __swift_instantiateConcreteTypeFromMangledName(v1);
    v9 = sub_1C0304690();
    v31 = v9;
    sub_1C03045C4();
    v10 = sub_1C0304624();
    if (v10)
    {
      v11 = v10;
      v7(0);
      do
      {
        v22[0] = v11;
        OUTLINED_FUNCTION_6_7();
        v9 = v31;
        v17 = *(_QWORD *)(v31 + 16);
        if (*(_QWORD *)(v31 + 24) <= v17)
        {
          sub_1C0230160(v17 + 1, v8, (uint64_t)v6, v12, v13, v14, v15, v16, v21, v22[0], v22[1], v23, v24, v25, v26, v27, v28, v29, v30,
            v31,
            v32,
            v33,
            v34,
            v35,
            v36,
            v37,
            v38,
            v39,
            v40,
            v41,
            v42,
            v43);
          v9 = v31;
        }
        v18 = v30;
        OUTLINED_FUNCTION_119();
        v6(v22);
        OUTLINED_FUNCTION_78_0();
        v19 = OUTLINED_FUNCTION_3_65();
        *(_QWORD *)(v9 + 56 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
        *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v19) = v18;
        ++*(_QWORD *)(v9 + 16);
        v11 = sub_1C0304624();
      }
      while (v11);
    }
    OUTLINED_FUNCTION_1_0();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v9;
}

uint64_t sub_1C022F614(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (!a2)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1738);
  v2 = sub_1C0304690();
  v14 = v2;
  sub_1C03045C4();
  if (!sub_1C0304624())
  {
LABEL_16:
    swift_release();
    return v2;
  }
  sub_1C00F6888();
  while (1)
  {
    swift_dynamicCast();
    v2 = v14;
    if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
    {
      sub_1C023097C();
      v2 = v14;
    }
    result = sub_1C0304450();
    v4 = v2 + 56;
    v5 = -1 << *(_BYTE *)(v2 + 32);
    v6 = result & ~v5;
    v7 = v6 >> 6;
    if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) == 0)
      break;
    v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
LABEL_15:
    *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
    ++*(_QWORD *)(v2 + 16);
    if (!sub_1C0304624())
      goto LABEL_16;
  }
  v9 = 0;
  v10 = (unint64_t)(63 - v5) >> 6;
  while (++v7 != v10 || (v9 & 1) == 0)
  {
    v11 = v7 == v10;
    if (v7 == v10)
      v7 = 0;
    v9 |= v11;
    v12 = *(_QWORD *)(v4 + 8 * v7);
    if (v12 != -1)
    {
      v8 = __clz(__rbit64(~v12)) + (v7 << 6);
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C022F7E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726F88);
  v3 = sub_1C0304684();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      sub_1C0304B04();
      sub_1C0303E20();
      result = sub_1C0304B40();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v14 >= v8)
        goto LABEL_32;
      v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_32;
        v15 = v30[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_32;
          v15 = v30[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_1C007A70C(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v11 >= v8)
                  goto LABEL_32;
                v15 = v30[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1C022FAC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  _QWORD __dst[13];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1770);
  v3 = sub_1C0304684();
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = 1 << *(_BYTE *)(v2 + 32);
    v5 = (_QWORD *)(v2 + 56);
    v6 = -1;
    if (v4 < 64)
      v6 = ~(-1 << v4);
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v4 + 63) >> 6;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_6;
LABEL_5:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      memcpy(__dst, (const void *)(*(_QWORD *)(v2 + 48) + 104 * i), 0x62uLL);
      result = (uint64_t)sub_1C0232258(__dst, v3);
      if (v7)
        goto LABEL_5;
LABEL_6:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return result;
      }
      if (v13 >= v8)
        goto LABEL_22;
      v14 = v5[v13];
      ++v10;
      if (!v14)
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v8)
          goto LABEL_22;
        v14 = v5[v10];
        if (!v14)
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v8)
            goto LABEL_22;
          v14 = v5[v10];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v8)
            {
LABEL_22:
              swift_release();
              v16 = 1 << *(_BYTE *)(v2 + 32);
              if (v16 > 63)
                sub_1C007A70C(0, (unint64_t)(v16 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v5 = -1 << v16;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v5[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_28;
                if (v10 >= v8)
                  goto LABEL_22;
                v14 = v5[v10];
                ++v15;
                if (v14)
                  goto LABEL_19;
              }
            }
            v10 = v15;
          }
        }
      }
LABEL_19:
      v7 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v3;
  return result;
}

unint64_t sub_1C022FCA8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1778);
  v3 = sub_1C0304684();
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = 1 << *(_BYTE *)(v2 + 32);
    v5 = (_QWORD *)(v2 + 56);
    v6 = -1;
    if (v4 < 64)
      v6 = ~(-1 << v4);
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v4 + 63) >> 6;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_6;
LABEL_5:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      result = sub_1C0232390(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 24 * i), *(_QWORD *)(*(_QWORD *)(v2 + 48) + 24 * i + 8), *(_QWORD *)(*(_QWORD *)(v2 + 48) + 24 * i + 16), v3);
      if (v7)
        goto LABEL_5;
LABEL_6:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return result;
      }
      if (v13 >= v8)
        goto LABEL_22;
      v14 = v5[v13];
      ++v10;
      if (!v14)
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v8)
          goto LABEL_22;
        v14 = v5[v10];
        if (!v14)
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v8)
            goto LABEL_22;
          v14 = v5[v10];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v8)
            {
LABEL_22:
              swift_release();
              v16 = 1 << *(_BYTE *)(v2 + 32);
              if (v16 > 63)
                sub_1C007A70C(0, (unint64_t)(v16 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v5 = -1 << v16;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v5[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_28;
                if (v10 >= v8)
                  goto LABEL_22;
                v14 = v5[v10];
                ++v15;
                if (v14)
                  goto LABEL_19;
              }
            }
            v10 = v15;
          }
        }
      }
LABEL_19:
      v7 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v3;
  return result;
}

void sub_1C022FE80()
{
  sub_1C022FEA4();
}

void sub_1C022FEA4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  OUTLINED_FUNCTION_18_0();
  v46 = v1;
  v47 = v2;
  v4 = v3;
  v5 = v0;
  v8 = OUTLINED_FUNCTION_103_2(v6, v7);
  v45 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v41 - v9;
  v11 = (_QWORD *)*v0;
  __swift_instantiateConcreteTypeFromMangledName(v4);
  v12 = sub_1C0304684();
  if (v11[2])
  {
    OUTLINED_FUNCTION_100_4();
    v44 = v11 + 7;
    OUTLINED_FUNCTION_161_0();
    v15 = v14 & v13;
    OUTLINED_FUNCTION_97_6();
    v42 = v0;
    v43 = v16;
    v17 = v12 + 56;
    swift_retain();
    v18 = 0;
    if (!v15)
      goto LABEL_4;
LABEL_3:
    OUTLINED_FUNCTION_55_16();
    while (1)
    {
      v24 = v11;
      v25 = v11[6];
      v26 = *(_QWORD *)(v45 + 72);
      v27 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 32);
      v27(v10, v25 + v26 * v19, v8);
      OUTLINED_FUNCTION_150_1();
      sub_1C0303DF0();
      OUTLINED_FUNCTION_147_0();
      if (((v30 << v29) & ~*(_QWORD *)(v17 + 8 * v28)) == 0)
      {
        OUTLINED_FUNCTION_16();
        while (1)
        {
          OUTLINED_FUNCTION_64_3();
          if (v35)
          {
            if ((v32 & 1) != 0)
              break;
          }
          if (v33 == v34)
            v33 = 0;
          if (*(_QWORD *)(v17 + 8 * v33) != -1)
          {
            OUTLINED_FUNCTION_15_18();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_17_16();
LABEL_28:
      *(_QWORD *)(v17 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
      v27((char *)(*(_QWORD *)(v12 + 48) + v31 * v26), (uint64_t)v10, v8);
      OUTLINED_FUNCTION_105_4();
      v11 = v24;
      if (v15)
        goto LABEL_3;
LABEL_4:
      if (__OFADD__(v18, 1))
        goto LABEL_36;
      if (v18 + 1 >= v43)
        goto LABEL_30;
      OUTLINED_FUNCTION_155_1();
      v18 = v20;
      if (!v21)
      {
        v18 = v20 + 1;
        if (v20 + 1 >= v43)
          goto LABEL_30;
        if (!v44[v18])
        {
          v18 = v20 + 2;
          if (v20 + 2 >= v43)
            goto LABEL_30;
          if (!v44[v18])
          {
            if (v20 + 3 >= v43)
            {
LABEL_30:
              swift_release();
              v5 = v42;
              OUTLINED_FUNCTION_120_3();
              if (v36 ^ v37 | v35)
              {
                OUTLINED_FUNCTION_111_4();
                *v44 = v38;
              }
              else
              {
                v39 = OUTLINED_FUNCTION_118_2();
                sub_1C007A70C(v39, v40, v44);
              }
              v11[2] = 0;
              break;
            }
            OUTLINED_FUNCTION_155_1();
            if (!v23)
            {
              while (1)
              {
                v18 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_37;
                if (v18 >= v43)
                  goto LABEL_30;
                ++v22;
                if (v44[v18])
                  goto LABEL_17;
              }
            }
            v18 = v22;
          }
        }
      }
LABEL_17:
      OUTLINED_FUNCTION_53_16();
    }
  }
  swift_release();
  *v5 = v12;
  OUTLINED_FUNCTION_1();
}

void sub_1C023014C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  sub_1C0230160(a1, (uint64_t)&qword_1EF5BC028, (uint64_t)sub_1C0078A80, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32);
}

void sub_1C0230160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *);
  void (*v37)(char *);
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  int64_t v45;
  int64_t v46;
  unint64_t v47;
  unint64_t i;
  int64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;

  OUTLINED_FUNCTION_25_30();
  a31 = v34;
  a32 = v35;
  v37 = v36;
  OUTLINED_FUNCTION_15_48(v38, v39);
  v40 = OUTLINED_FUNCTION_40_25();
  if (v33[2])
  {
    OUTLINED_FUNCTION_100_4();
    v66 = v33 + 7;
    OUTLINED_FUNCTION_134_1();
    v43 = v42 & v41;
    v45 = (unint64_t)(v44 + 63) >> 6;
    OUTLINED_FUNCTION_44_7();
    v46 = 0;
    if (!v43)
      goto LABEL_4;
LABEL_3:
    v47 = __clz(__rbit64(v43));
    v43 &= v43 - 1;
    for (i = v47 | (v46 << 6); ; i = v53 + (v46 << 6))
    {
      v54 = *(_QWORD *)(v33[6] + 8 * i);
      OUTLINED_FUNCTION_99_5();
      v37(&a12);
      OUTLINED_FUNCTION_98_5();
      OUTLINED_FUNCTION_83_5();
      if (v55)
      {
        OUTLINED_FUNCTION_16();
        while (1)
        {
          OUTLINED_FUNCTION_64_3();
          if (v55)
          {
            if ((v57 & 1) != 0)
              break;
          }
          if (v58 == v59)
            v58 = 0;
          if (*(_QWORD *)(v40 + 56 + 8 * v58) != -1)
          {
            OUTLINED_FUNCTION_15_18();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_17_16();
LABEL_28:
      OUTLINED_FUNCTION_72_7(v56);
      *(_QWORD *)(*(_QWORD *)(v40 + 48) + 8 * v60) = v54;
      OUTLINED_FUNCTION_105_4();
      if (v43)
        goto LABEL_3;
LABEL_4:
      v49 = v46 + 1;
      if (__OFADD__(v46, 1))
        goto LABEL_36;
      if (v49 >= v45)
        goto LABEL_30;
      ++v46;
      if (!v66[v49])
      {
        v46 = v49 + 1;
        if (v49 + 1 >= v45)
          goto LABEL_30;
        if (!v66[v46])
        {
          v46 = v49 + 2;
          if (v49 + 2 >= v45)
            goto LABEL_30;
          if (!v66[v46])
          {
            v50 = v49 + 3;
            if (v50 >= v45)
            {
LABEL_30:
              OUTLINED_FUNCTION_1_4();
              OUTLINED_FUNCTION_120_3();
              if (v61 ^ v62 | v55)
              {
                OUTLINED_FUNCTION_111_4();
                *v66 = v63;
              }
              else
              {
                v64 = OUTLINED_FUNCTION_118_2();
                sub_1C007A70C(v64, v65, v66);
              }
              v33[2] = 0;
              break;
            }
            if (!v66[v50])
            {
              while (1)
              {
                v46 = v50 + 1;
                if (__OFADD__(v50, 1))
                  goto LABEL_37;
                if (v46 >= v45)
                  goto LABEL_30;
                ++v50;
                if (v66[v46])
                  goto LABEL_17;
              }
            }
            v46 = v50;
          }
        }
      }
LABEL_17:
      OUTLINED_FUNCTION_31_25();
      v43 = v52 & v51;
    }
  }
  OUTLINED_FUNCTION_1_4();
  *v32 = v40;
  OUTLINED_FUNCTION_24_1();
}

uint64_t sub_1C0230340()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF2B0);
  v35 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1798);
  v6 = sub_1C0304684();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v34 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v32 = v0;
    v33 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    if (!v11)
      goto LABEL_7;
LABEL_6:
    v15 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v18)) + (v14 << 6))
    {
      v20 = v5;
      v21 = *(_QWORD *)(v5 + 48);
      v22 = *(_QWORD *)(v35 + 72);
      sub_1C0075F48(v21 + v22 * i, (uint64_t)v4);
      sub_1C0304B04();
      sub_1C0301CFC();
      sub_1C006831C(&qword_1EF5BF2C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
      sub_1C0303DFC();
      sub_1C0303DFC();
      result = sub_1C0304B40();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6))) == 0)
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v23) >> 6;
        while (++v25 != v28 || (v27 & 1) == 0)
        {
          v29 = v25 == v28;
          if (v25 == v28)
            v25 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v12 + 8 * v25);
          if (v30 != -1)
          {
            v26 = __clz(__rbit64(~v30)) + (v25 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v12 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      result = sub_1C0075F48((uint64_t)v4, *(_QWORD *)(v7 + 48) + v26 * v22);
      ++*(_QWORD *)(v7 + 16);
      v5 = v20;
      if (v11)
        goto LABEL_6;
LABEL_7:
      v17 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_38;
      if (v17 >= v33)
        goto LABEL_32;
      v18 = v34[v17];
      ++v14;
      if (!v18)
      {
        v14 = v17 + 1;
        if (v17 + 1 >= v33)
          goto LABEL_32;
        v18 = v34[v14];
        if (!v18)
        {
          v14 = v17 + 2;
          if (v17 + 2 >= v33)
            goto LABEL_32;
          v18 = v34[v14];
          if (!v18)
          {
            v19 = v17 + 3;
            if (v19 >= v33)
            {
LABEL_32:
              swift_release();
              v1 = v32;
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 > 63)
                sub_1C007A70C(0, (unint64_t)(v31 + 63) >> 6, v34);
              else
                *v34 = -1 << v31;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                v14 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_39;
                if (v14 >= v33)
                  goto LABEL_32;
                v18 = v34[v14];
                ++v19;
                if (v18)
                  goto LABEL_20;
              }
            }
            v14 = v19;
          }
        }
      }
LABEL_20:
      v11 = (v18 - 1) & v18;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_1C02306D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC020);
  result = sub_1C0304684();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    if (!v9)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
    {
      v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
      sub_1C0304B04();
      sub_1C0304B10();
      result = sub_1C0304B40();
      v18 = -1 << *(_BYTE *)(v4 + 32);
      v19 = result & ~v18;
      v20 = v19 >> 6;
      if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v18) >> 6;
        while (++v20 != v23 || (v22 & 1) == 0)
        {
          v24 = v20 == v23;
          if (v20 == v23)
            v20 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v20);
          if (v25 != -1)
          {
            v21 = __clz(__rbit64(~v25)) + (v20 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v21) = v17;
      ++*(_QWORD *)(v4 + 16);
      if (v9)
        goto LABEL_6;
LABEL_7:
      v14 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_38;
      if (v14 >= v10)
        goto LABEL_32;
      v15 = v6[v14];
      ++v5;
      if (!v15)
      {
        v5 = v14 + 1;
        if (v14 + 1 >= v10)
          goto LABEL_32;
        v15 = v6[v5];
        if (!v15)
        {
          v5 = v14 + 2;
          if (v14 + 2 >= v10)
            goto LABEL_32;
          v15 = v6[v5];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v10)
            {
LABEL_32:
              v26 = 1 << *(_BYTE *)(v2 + 32);
              if (v26 > 63)
                sub_1C007A70C(0, (unint64_t)(v26 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v6 = -1 << v26;
              v1 = v0;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v6[v16];
            if (!v15)
            {
              while (1)
              {
                v5 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v5 >= v10)
                  goto LABEL_32;
                v15 = v6[v5];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v5 = v16;
          }
        }
      }
LABEL_20:
      v9 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1C023097C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1738);
  v3 = sub_1C0304684();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v28 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    if (!v8)
      goto LABEL_7;
LABEL_6:
    v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
      result = sub_1C0304450();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          v25 = v21 == v24;
          if (v21 == v24)
            v21 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v22) = v18;
      ++*(_QWORD *)(v4 + 16);
      if (v8)
        goto LABEL_6;
LABEL_7:
      v15 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_38;
      if (v15 >= v9)
        goto LABEL_32;
      v16 = v6[v15];
      ++v12;
      if (!v16)
      {
        v12 = v15 + 1;
        if (v15 + 1 >= v9)
          goto LABEL_32;
        v16 = v6[v12];
        if (!v16)
        {
          v12 = v15 + 2;
          if (v15 + 2 >= v9)
            goto LABEL_32;
          v16 = v6[v12];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v9)
            {
LABEL_32:
              swift_release();
              v1 = v28;
              v27 = 1 << *(_BYTE *)(v2 + 32);
              if (v27 > 63)
                sub_1C007A70C(0, (unint64_t)(v27 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v6 = -1 << v27;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_39;
                if (v12 >= v9)
                  goto LABEL_32;
                v16 = v6[v12];
                ++v17;
                if (v16)
                  goto LABEL_20;
              }
            }
            v12 = v17;
          }
        }
      }
LABEL_20:
      v8 = (v16 - 1) & v16;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1C0230C14()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1740);
  v3 = sub_1C0304684();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v29 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      v16 = v2;
      v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
      sub_1C0304B04();
      sub_1C0304B10();
      v18 = *(_QWORD *)(v17 + 16);
      if (v18)
      {
        v19 = v17 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_1C0303E20();
          swift_bridgeObjectRelease();
          v19 += 16;
          --v18;
        }
        while (v18);
      }
      result = sub_1C0304B40();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v8 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_33;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
      v2 = v16;
      *(_QWORD *)(v8 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v23) = v17;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_41;
      if (v13 >= v29)
        goto LABEL_35;
      v14 = v30[v13];
      ++v10;
      if (!v14)
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v29)
          goto LABEL_35;
        v14 = v30[v10];
        if (!v14)
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v29)
            goto LABEL_35;
          v14 = v30[v10];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v29)
            {
LABEL_35:
              swift_release();
              v1 = v0;
              v28 = 1 << *(_BYTE *)(v2 + 32);
              if (v28 > 63)
                sub_1C007A70C(0, (unint64_t)(v28 + 63) >> 6, v30);
              else
                *v30 = -1 << v28;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v30[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_42;
                if (v10 >= v29)
                  goto LABEL_35;
                v14 = v30[v10];
                ++v15;
                if (v14)
                  goto LABEL_20;
              }
            }
            v10 = v15;
          }
        }
      }
LABEL_20:
      v7 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1C0230F40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1768);
  result = sub_1C0304684();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v7 = (uint64_t *)(v2 + 56);
    v6 = *(_QWORD *)(v2 + 56);
    v8 = 1 << *(_BYTE *)(v2 + 32);
    v27 = -1 << v8;
    v28 = v1;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & v6;
    v29 = 1 << *(_BYTE *)(v2 + 32);
    v11 = (unint64_t)(v8 + 63) >> 6;
    v12 = result + 56;
    if ((v9 & v6) == 0)
      goto LABEL_7;
LABEL_6:
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v13 | (v5 << 6); ; i = __clz(__rbit64(v16)) + (v5 << 6))
    {
      v18 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * i);
      result = MEMORY[0x1C3B979E8](*(_QWORD *)(v4 + 40), v18, 4);
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) == 0)
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          v25 = v21 == v24;
          if (v21 == v24)
            v21 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v21);
          if (v26 != -1)
          {
            v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v22) = v18;
      ++*(_QWORD *)(v4 + 16);
      if (v10)
        goto LABEL_6;
LABEL_7:
      v15 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_38;
      if (v15 >= v11)
        goto LABEL_32;
      v16 = v7[v15];
      ++v5;
      if (!v16)
      {
        v5 = v15 + 1;
        if (v15 + 1 >= v11)
          goto LABEL_32;
        v16 = v7[v5];
        if (!v16)
        {
          v5 = v15 + 2;
          if (v15 + 2 >= v11)
            goto LABEL_32;
          v16 = v7[v5];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v11)
            {
LABEL_32:
              if (v29 > 63)
                sub_1C007A70C(0, v11, (_QWORD *)(v2 + 56));
              else
                *v7 = v27;
              v1 = v28;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v16 = v7[v17];
            if (!v16)
            {
              while (1)
              {
                v5 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_39;
                if (v5 >= v11)
                  goto LABEL_32;
                v16 = v7[v5];
                ++v17;
                if (v16)
                  goto LABEL_20;
              }
            }
            v5 = v17;
          }
        }
      }
LABEL_20:
      v10 = (v16 - 1) & v16;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void sub_1C02311C4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_46_19();
  OUTLINED_FUNCTION_15_48(v5, v6);
  v7 = OUTLINED_FUNCTION_40_25();
  if (*(_QWORD *)(v1 + 16))
  {
    v23 = v0;
    OUTLINED_FUNCTION_158_0();
    OUTLINED_FUNCTION_57_12();
    if (!v3)
      goto LABEL_4;
LABEL_3:
    OUTLINED_FUNCTION_116_4();
    while (1)
    {
      v11 = *(_BYTE *)(*(_QWORD *)(v1 + 48) + v8);
      OUTLINED_FUNCTION_119();
      OUTLINED_FUNCTION_122_2();
      OUTLINED_FUNCTION_78_0();
      OUTLINED_FUNCTION_95_7();
      if (v12)
      {
        OUTLINED_FUNCTION_16();
        while (1)
        {
          OUTLINED_FUNCTION_64_3();
          if (v12)
          {
            if ((v14 & 1) != 0)
              break;
          }
          if (v15 == v16)
            v15 = 0;
          if (*(_QWORD *)(v7 + 56 + 8 * v15) != -1)
          {
            OUTLINED_FUNCTION_15_18();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_17_16();
LABEL_28:
      OUTLINED_FUNCTION_73_11(v13);
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v17) = v11;
      OUTLINED_FUNCTION_105_4();
      if (v3)
        goto LABEL_3;
LABEL_4:
      v9 = v0 + 1;
      if (__OFADD__(v0, 1))
        goto LABEL_36;
      if (v9 >= v4)
        goto LABEL_30;
      ++v0;
      if (!v2[v9])
      {
        v0 = v9 + 1;
        if (v9 + 1 >= v4)
          goto LABEL_30;
        if (!v2[v0])
        {
          v0 = v9 + 2;
          if (v9 + 2 >= v4)
            goto LABEL_30;
          if (!v2[v0])
          {
            v10 = v9 + 3;
            if (v10 >= v4)
            {
LABEL_30:
              OUTLINED_FUNCTION_120_3();
              if (v18 ^ v19 | v12)
              {
                OUTLINED_FUNCTION_111_4();
                *v2 = v20;
              }
              else
              {
                v21 = OUTLINED_FUNCTION_118_2();
                sub_1C007A70C(v21, v22, v2);
              }
              v0 = v23;
              *(_QWORD *)(v1 + 16) = 0;
              break;
            }
            if (!v2[v10])
            {
              while (1)
              {
                v0 = v10 + 1;
                if (__OFADD__(v10, 1))
                  goto LABEL_37;
                if (v0 >= v4)
                  goto LABEL_30;
                ++v10;
                if (v2[v0])
                  goto LABEL_17;
              }
            }
            v0 = v10;
          }
        }
      }
LABEL_17:
      OUTLINED_FUNCTION_115_4();
    }
  }
  OUTLINED_FUNCTION_1_4();
  *(_QWORD *)v0 = v7;
  OUTLINED_FUNCTION_26_12();
}

uint64_t sub_1C0231348()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1730);
  result = sub_1C0304684();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = *(_QWORD *)(v2 + 56);
    v30 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & v6;
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    if ((v8 & v6) == 0)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      sub_1C0304B04();
      sub_1C0303E20();
      result = sub_1C0304B40();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v11 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v9)
        goto LABEL_6;
LABEL_7:
      v14 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_38;
      if (v14 >= v10)
        goto LABEL_32;
      v15 = v30[v14];
      ++v5;
      if (!v15)
      {
        v5 = v14 + 1;
        if (v14 + 1 >= v10)
          goto LABEL_32;
        v15 = v30[v5];
        if (!v15)
        {
          v5 = v14 + 2;
          if (v14 + 2 >= v10)
            goto LABEL_32;
          v15 = v30[v5];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v10)
            {
LABEL_32:
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_1C007A70C(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              v1 = v0;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v5 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v5 >= v10)
                  goto LABEL_32;
                v15 = v30[v5];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v5 = v16;
          }
        }
      }
LABEL_20:
      v9 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1C0231610()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;
  __int128 v33;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C17A8);
  v3 = sub_1C0304684();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v32 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v31 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      v16 = *(_QWORD *)(v2 + 48) + 24 * i;
      v17 = *(_QWORD *)v16;
      v33 = *(_OWORD *)(v16 + 8);
      sub_1C0304B04();
      swift_bridgeObjectRetain();
      sub_1C0303E20();
      swift_bridgeObjectRelease();
      sub_1C0304B10();
      v18 = *(_QWORD *)(*((_QWORD *)&v33 + 1) + 16);
      if (v18)
      {
        v19 = v2;
        swift_bridgeObjectRetain();
        v20 = *((_QWORD *)&v33 + 1) + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_1C0303E20();
          swift_bridgeObjectRelease();
          v20 += 16;
          --v18;
        }
        while (v18);
        swift_bridgeObjectRelease();
        v2 = v19;
      }
      result = sub_1C0304B40();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6))) == 0)
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v21) >> 6;
        while (++v23 != v26 || (v25 & 1) == 0)
        {
          v27 = v23 == v26;
          if (v23 == v26)
            v23 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v8 + 8 * v23);
          if (v28 != -1)
          {
            v24 = __clz(__rbit64(~v28)) + (v23 << 6);
            goto LABEL_34;
          }
        }
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return result;
      }
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
      *(_QWORD *)(v8 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      v29 = *(_QWORD *)(v4 + 48) + 24 * v24;
      *(_QWORD *)v29 = v17;
      *(_OWORD *)(v29 + 8) = v33;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_42;
      if (v13 >= v31)
        goto LABEL_36;
      v14 = v32[v13];
      ++v10;
      if (!v14)
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v31)
          goto LABEL_36;
        v14 = v32[v10];
        if (!v14)
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v31)
            goto LABEL_36;
          v14 = v32[v10];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v31)
            {
LABEL_36:
              swift_release();
              v1 = v0;
              v30 = 1 << *(_BYTE *)(v2 + 32);
              if (v30 > 63)
                sub_1C007A70C(0, (unint64_t)(v30 + 63) >> 6, v32);
              else
                *v32 = -1 << v30;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v32[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_43;
                if (v10 >= v31)
                  goto LABEL_36;
                v14 = v32[v10];
                ++v15;
                if (v14)
                  goto LABEL_20;
              }
            }
            v10 = v15;
          }
        }
      }
LABEL_20:
      v7 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void sub_1C02319BC(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  OUTLINED_FUNCTION_15_48(a1, a2);
  OUTLINED_FUNCTION_40_25();
  OUTLINED_FUNCTION_86_9();
  if (v5)
  {
    v6 = 0;
    v8 = (uint64_t *)(v4 + 56);
    v7 = *(_QWORD *)(v4 + 56);
    v9 = 1 << *(_BYTE *)(v4 + 32);
    v29 = -1 << v9;
    v30 = v2;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & v7;
    v31 = 1 << *(_BYTE *)(v4 + 32);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v3 + 56;
    if ((v10 & v7) == 0)
      goto LABEL_7;
LABEL_6:
    v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    for (i = v14 | (v6 << 6); ; i = v20 + (v6 << 6))
    {
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * i);
      sub_1C0304AF8();
      OUTLINED_FUNCTION_147_0();
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * v22)) == 0)
      {
        OUTLINED_FUNCTION_16();
        while (1)
        {
          OUTLINED_FUNCTION_64_3();
          if (v28)
          {
            if ((v25 & 1) != 0)
              break;
          }
          if (v26 == v27)
            v26 = 0;
          if (*(_QWORD *)(v13 + 8 * v26) != -1)
          {
            OUTLINED_FUNCTION_15_18();
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_17_16();
LABEL_31:
      *(_QWORD *)(v13 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v24) = v21;
      ++*(_QWORD *)(v3 + 16);
      if (v11)
        goto LABEL_6;
LABEL_7:
      v16 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_39;
      if (v16 >= v12)
        goto LABEL_33;
      ++v6;
      if (!v8[v16])
      {
        v6 = v16 + 1;
        if (v16 + 1 >= v12)
          goto LABEL_33;
        if (!v8[v6])
        {
          v6 = v16 + 2;
          if (v16 + 2 >= v12)
            goto LABEL_33;
          if (!v8[v6])
          {
            v17 = v16 + 3;
            if (v17 >= v12)
            {
LABEL_33:
              if (v31 > 63)
                sub_1C007A70C(0, v12, (_QWORD *)(v4 + 56));
              else
                *v8 = v29;
              v2 = v30;
              *(_QWORD *)(v4 + 16) = 0;
              break;
            }
            if (!v8[v17])
            {
              while (1)
              {
                v6 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_40;
                if (v6 >= v12)
                  goto LABEL_33;
                ++v17;
                if (v8[v6])
                  goto LABEL_20;
              }
            }
            v6 = v17;
          }
        }
      }
LABEL_20:
      OUTLINED_FUNCTION_31_25();
      v11 = v19 & v18;
    }
  }
  OUTLINED_FUNCTION_1_4();
  *v2 = v3;
}

uint64_t sub_1C0231BD0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  _BYTE v17[48];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC018);
  v3 = sub_1C0304684();
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = 1 << *(_BYTE *)(v2 + 32);
    v5 = (_QWORD *)(v2 + 56);
    v6 = -1;
    if (v4 < 64)
      v6 = ~(-1 << v4);
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v4 + 63) >> 6;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_6;
LABEL_5:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      sub_1C015898C(*(_QWORD *)(v2 + 48) + 48 * i, (uint64_t)v17);
      result = sub_1C02325B0((uint64_t)v17, v3);
      if (v7)
        goto LABEL_5;
LABEL_6:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return result;
      }
      if (v13 >= v8)
        goto LABEL_22;
      v14 = v5[v13];
      ++v10;
      if (!v14)
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v8)
          goto LABEL_22;
        v14 = v5[v10];
        if (!v14)
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v8)
            goto LABEL_22;
          v14 = v5[v10];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v8)
            {
LABEL_22:
              swift_release();
              v16 = 1 << *(_BYTE *)(v2 + 32);
              if (v16 > 63)
                sub_1C007A70C(0, (unint64_t)(v16 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v5 = -1 << v16;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v5[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_28;
                if (v10 >= v8)
                  goto LABEL_22;
                v14 = v5[v10];
                ++v15;
                if (v14)
                  goto LABEL_19;
              }
            }
            v10 = v15;
          }
        }
      }
LABEL_19:
      v7 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v3;
  return result;
}

unint64_t sub_1C0231DB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1760);
  v3 = sub_1C0304684();
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = 1 << *(_BYTE *)(v2 + 32);
    v5 = (_QWORD *)(v2 + 56);
    v6 = -1;
    if (v4 < 64)
      v6 = ~(-1 << v4);
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v4 + 63) >> 6;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_6;
LABEL_5:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      result = sub_1C02326F0(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 32 * i), *(_QWORD *)(*(_QWORD *)(v2 + 48) + 32 * i + 8), *(_QWORD *)(*(_QWORD *)(v2 + 48) + 32 * i + 16), *(_QWORD *)(*(_QWORD *)(v2 + 48) + 32 * i + 24), v3);
      if (v7)
        goto LABEL_5;
LABEL_6:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return result;
      }
      if (v13 >= v8)
        goto LABEL_22;
      v14 = v5[v13];
      ++v10;
      if (!v14)
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v8)
          goto LABEL_22;
        v14 = v5[v10];
        if (!v14)
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v8)
            goto LABEL_22;
          v14 = v5[v10];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v8)
            {
LABEL_22:
              swift_release();
              v16 = 1 << *(_BYTE *)(v2 + 32);
              if (v16 > 63)
                sub_1C007A70C(0, (unint64_t)(v16 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v5 = -1 << v16;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v5[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_28;
                if (v10 >= v8)
                  goto LABEL_22;
                v14 = v5[v10];
                ++v15;
                if (v14)
                  goto LABEL_19;
              }
            }
            v10 = v15;
          }
        }
      }
LABEL_19:
      v7 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v3;
  return result;
}

uint64_t sub_1C0231F88()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unsigned __int16 v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1758);
  v3 = sub_1C0304684();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    if (!v8)
      goto LABEL_7;
LABEL_6:
    v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      v18 = *(_WORD *)(*(_QWORD *)(v2 + 48) + 2 * i);
      sub_1C0304B04();
      sub_1C02E5C48(v18);
      sub_1C0303E20();
      swift_bridgeObjectRelease();
      result = sub_1C0304B40();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          v25 = v21 == v24;
          if (v21 == v24)
            v21 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(_WORD *)(*(_QWORD *)(v4 + 48) + 2 * v22) = v18;
      ++*(_QWORD *)(v4 + 16);
      if (v8)
        goto LABEL_6;
LABEL_7:
      v15 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_38;
      if (v15 >= v9)
        goto LABEL_32;
      v16 = v6[v15];
      ++v12;
      if (!v16)
      {
        v12 = v15 + 1;
        if (v15 + 1 >= v9)
          goto LABEL_32;
        v16 = v6[v12];
        if (!v16)
        {
          v12 = v15 + 2;
          if (v15 + 2 >= v9)
            goto LABEL_32;
          v16 = v6[v12];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v9)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v27 = 1 << *(_BYTE *)(v2 + 32);
              if (v27 > 63)
                sub_1C007A70C(0, (unint64_t)(v27 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v6 = -1 << v27;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_39;
                if (v12 >= v9)
                  goto LABEL_32;
                v16 = v6[v12];
                ++v17;
                if (v16)
                  goto LABEL_20;
              }
            }
            v12 = v17;
          }
        }
      }
LABEL_20:
      v8 = (v16 - 1) & v16;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void *sub_1C0232258(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  void *result;
  _BYTE __dst[74];

  sub_1C0304B04();
  v4 = a1[2];
  swift_bridgeObjectRetain();
  sub_1C02EDAD8();
  swift_bridgeObjectRelease();
  if (v4 == 1)
  {
    sub_1C0304B1C();
  }
  else
  {
    sub_1C0304B1C();
    sub_1C0304B10();
    if (v4)
      sub_1C0303E20();
  }
  memcpy(__dst, a1 + 3, sizeof(__dst));
  ContactHandle.hash(into:)();
  sub_1C0304B40();
  v5 = sub_1C03045AC();
  *(_QWORD *)(a2 + 56 + ((v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v5;
  result = memcpy((void *)(*(_QWORD *)(a2 + 48) + 104 * v5), a1, 0x62uLL);
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_1C0232390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result;
  _QWORD *v9;

  sub_1C0304B04();
  swift_bridgeObjectRetain();
  sub_1C02EDAD8();
  swift_bridgeObjectRelease();
  if (a3 == 1)
  {
    sub_1C0304B1C();
  }
  else
  {
    sub_1C0304B1C();
    sub_1C0304B10();
    if (a3)
      sub_1C0303E20();
  }
  sub_1C0304B40();
  result = sub_1C03045AC();
  *(_QWORD *)(a4 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  v9 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 24 * result);
  *v9 = a1;
  v9[1] = a2;
  v9[2] = a3;
  ++*(_QWORD *)(a4 + 16);
  return result;
}

void sub_1C02324A8(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[72];

  OUTLINED_FUNCTION_119();
  a3(v9);
  OUTLINED_FUNCTION_78_0();
  sub_1C03045AC();
  OUTLINED_FUNCTION_129_1();
  *(_QWORD *)(a2 + 56 + v6) |= v7;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v8) = a1;
  OUTLINED_FUNCTION_79_8();
}

unint64_t sub_1C0232530(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1C0304450();
  result = sub_1C03045AC();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_1C02325B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _OWORD v9[2];
  uint64_t v10;
  char v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v4 = OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_140_2(v4, (uint64_t)v9);
  if (v11)
  {
    if (v11 == 1)
    {
      OUTLINED_FUNCTION_87_10();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_114();
      sub_1C02399A8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0120AE0);
      OUTLINED_FUNCTION_122_2();
    }
    else
    {
      sub_1C0304B10();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_114();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_45_0();
      OUTLINED_FUNCTION_156_0();
      OUTLINED_FUNCTION_28();
    }
  }
  else
  {
    v12 = v9[0];
    v13 = v9[1];
    v14 = v10;
    OUTLINED_FUNCTION_96_6();
    sub_1C028B658();
  }
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_3_65();
  OUTLINED_FUNCTION_129_1();
  *(_QWORD *)(a2 + 56 + v5) |= v6;
  result = OUTLINED_FUNCTION_140_2(v7, *(_QWORD *)(a2 + 48) + 48 * v7);
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_1C02326F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t result;
  _QWORD *v11;

  sub_1C0304B04();
  swift_bridgeObjectRetain();
  sub_1C0303E20();
  swift_bridgeObjectRelease();
  sub_1C0304B10();
  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_1C0303E20();
    swift_bridgeObjectRelease();
  }
  sub_1C0304B40();
  result = sub_1C03045AC();
  *(_QWORD *)(a5 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  v11 = (_QWORD *)(*(_QWORD *)(a5 + 48) + 32 * result);
  *v11 = a1;
  v11[1] = a2;
  v11[2] = a3;
  v11[3] = a4;
  ++*(_QWORD *)(a5 + 16);
  return result;
}

void sub_1C02327FC(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1C022F7E8();
  }
  else
  {
    if (v10 > v9)
    {
      sub_1C023567C();
      goto LABEL_22;
    }
    sub_1C02371AC();
  }
  v11 = *v4;
  sub_1C0304B04();
  sub_1C0303E20();
  v12 = sub_1C0304B40();
  v13 = -1 << *(_BYTE *)(v11 + 32);
  a3 = v12 & ~v13;
  v14 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v15 = *(_QWORD *)(v11 + 48);
    v16 = (_QWORD *)(v15 + 16 * a3);
    v17 = *v16 == a1 && v16[1] == a2;
    if (v17 || (sub_1C0304A08() & 1) != 0)
    {
LABEL_21:
      sub_1C0304A5C();
      __break(1u);
    }
    else
    {
      v18 = ~v13;
      while (1)
      {
        a3 = (a3 + 1) & v18;
        if (((*(_QWORD *)(v14 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v19 = (_QWORD *)(v15 + 16 * a3);
        v20 = *v19 == a1 && v19[1] == a2;
        if (v20 || (sub_1C0304A08() & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v21 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v22 = (_QWORD *)(*(_QWORD *)(v21 + 48) + 16 * a3);
  *v22 = a1;
  v22[1] = a2;
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v21 + 16) = v25;
}

uint64_t sub_1C0232994(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_1C0301CFC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1C022FEA4();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1C0235CD4();
      goto LABEL_12;
    }
    sub_1C0237808();
  }
  v12 = *v3;
  sub_1C006831C(&qword_1EF5BF2C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  v13 = sub_1C0303DF0();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_1C006831C((unint64_t *)&qword_1ED725F60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      v18 = sub_1C0303E80();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1C0304A5C();
  __break(1u);
  return result;
}

void *sub_1C0232BE8(_QWORD *a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  char v29;
  uint64_t v30;
  uint64_t v32;
  void *result;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  char v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_67;
  if ((a3 & 1) != 0)
  {
    sub_1C022FAC0();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1C023578C();
      goto LABEL_67;
    }
    sub_1C0237454();
  }
  v58 = *v3;
  sub_1C0304B04();
  v61 = *(_OWORD *)a1;
  v62 = a1[2];
  swift_bridgeObjectRetain();
  sub_1C02EDAD8();
  v56 = v61;
  swift_bridgeObjectRelease();
  v52 = v62;
  if (v62 == 1)
  {
    sub_1C0304B1C();
  }
  else
  {
    sub_1C0304B1C();
    sub_1C0304B10();
    if (v62)
      sub_1C0303E20();
  }
  v8 = a1[10];
  v9 = a1[11];
  v47 = a1[4];
  v48 = a1[3];
  v46 = *((unsigned __int8 *)a1 + 40);
  v44 = a1[7];
  v45 = a1[6];
  v42 = a1[9];
  v43 = a1[8];
  v41 = *((unsigned __int8 *)a1 + 96);
  v38 = *((unsigned __int8 *)a1 + 97);
  ContactHandle.hash(into:)();
  v10 = sub_1C0304B40();
  v11 = -1 << *(_BYTE *)(v58 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v58 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v39 = v9;
    v40 = v8;
    v51 = *((_QWORD *)&v61 + 1);
    v54 = ~v11;
    while (1)
    {
      v12 = *(_QWORD *)(v58 + 48) + 104 * a2;
      v14 = *(_QWORD *)v12;
      v13 = *(_QWORD *)(v12 + 8);
      v16 = *(_QWORD *)(v12 + 16);
      v15 = *(_QWORD *)(v12 + 24);
      v17 = *(_QWORD *)(v12 + 32);
      v18 = *(unsigned __int8 *)(v12 + 40);
      v19 = *(_QWORD *)(v12 + 56);
      v20 = *(_QWORD *)(v12 + 72);
      v59 = *(_QWORD *)(v12 + 64);
      v60 = *(_QWORD *)(v12 + 48);
      v21 = *(_QWORD *)(v12 + 88);
      v57 = *(_QWORD *)(v12 + 80);
      v55 = *(unsigned __int8 *)(v12 + 96);
      v53 = *(unsigned __int8 *)(v12 + 97);
      swift_bridgeObjectRetain();
      sub_1C00C098C(v13, v16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C00C098C(v13, v16);
      sub_1C02399DC((uint64_t)&v61);
      if ((sub_1C02EBACC(v14, v56) & 1) == 0)
        goto LABEL_43;
      if (v16 == 1)
        break;
      v22 = v52;
      if (v52 == 1)
      {
LABEL_42:
        v30 = v22;
        sub_1C00C098C(v51, v22);
        sub_1C00C098C(v13, v16);
        sub_1C00C09A0(v13, v16);
        sub_1C00C09A0(v51, v30);
LABEL_43:
        sub_1C0239A1C((uint64_t)&v61);
        swift_bridgeObjectRelease();
        sub_1C00C09A0(v13, v16);
LABEL_44:
        swift_bridgeObjectRelease();
        sub_1C00C09A0(v13, v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
      if (!v16)
      {
        if (v52)
        {
LABEL_56:
          sub_1C00C098C(v51, v52);
          sub_1C00C098C(v13, v16);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_43;
        }
        swift_bridgeObjectRelease_n();
        sub_1C0239A1C((uint64_t)&v61);
        swift_bridgeObjectRelease();
        v23 = v13;
        v24 = 0;
        goto LABEL_18;
      }
      if (!v52)
        goto LABEL_56;
      if (v13 == v51 && v16 == v52)
      {
        sub_1C00C098C(v51, v52);
        sub_1C00C098C(v51, v52);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C0239A1C((uint64_t)&v61);
        swift_bridgeObjectRelease();
        v23 = v51;
        v24 = v52;
LABEL_18:
        sub_1C00C09A0(v23, v24);
        goto LABEL_19;
      }
      v37 = sub_1C0304A08();
      sub_1C00C098C(v51, v52);
      sub_1C00C098C(v13, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C0239A1C((uint64_t)&v61);
      swift_bridgeObjectRelease();
      sub_1C00C09A0(v13, v16);
      if ((v37 & 1) == 0)
        goto LABEL_44;
LABEL_19:
      v25 = v15 == v48 && v17 == v47;
      if (!v25 && (sub_1C0304A08() & 1) == 0)
        goto LABEL_44;
      if (v18 != v46)
        goto LABEL_44;
      v26 = v60 == v45 && v19 == v44;
      if (!v26 && (sub_1C0304A08() & 1) == 0)
        goto LABEL_44;
      v27 = v59 == v43 && v20 == v42;
      if (!v27 && (sub_1C0304A08() & 1) == 0)
        goto LABEL_44;
      if (v57 == v40 && v21 == v39)
      {
        swift_bridgeObjectRelease();
        sub_1C00C09A0(v13, v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v29 = sub_1C0304A08();
        swift_bridgeObjectRelease();
        sub_1C00C09A0(v13, v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v29 & 1) == 0)
          goto LABEL_45;
      }
      if (((v55 ^ v41) & 1) == 0)
      {
        if (v53 == 2)
        {
          if (v38 == 2)
            goto LABEL_66;
        }
        else if (v38 != 2 && ((v38 ^ ((v53 & 1) == 0)) & 1) != 0)
        {
LABEL_66:
          sub_1C0304A5C();
          __break(1u);
          goto LABEL_67;
        }
      }
LABEL_45:
      a2 = (a2 + 1) & v54;
      if (((*(_QWORD *)(v58 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_67;
    }
    v22 = v52;
    if (v52 != 1)
      goto LABEL_42;
    sub_1C0239A1C((uint64_t)&v61);
    swift_bridgeObjectRelease();
    v23 = v13;
    v24 = 1;
    goto LABEL_18;
  }
LABEL_67:
  v32 = *v49;
  *(_QWORD *)(*v49 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = memcpy((void *)(*(_QWORD *)(v32 + 48) + 104 * a2), a1, 0x62uLL);
  v34 = *(_QWORD *)(v32 + 16);
  v35 = __OFADD__(v34, 1);
  v36 = v34 + 1;
  if (v35)
    __break(1u);
  else
    *(_QWORD *)(v32 + 16) = v36;
  return result;
}

void sub_1C0233248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  BOOL v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;

  OUTLINED_FUNCTION_25_30();
  a31 = v33;
  a32 = v34;
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;
  OUTLINED_FUNCTION_54_17();
  if (!v55 & v46 && (v43 & 1) != 0)
    goto LABEL_35;
  if ((v43 & 1) != 0)
  {
    sub_1C022FCA8();
  }
  else
  {
    if (v45 > v44)
    {
      sub_1C02359E8();
      goto LABEL_35;
    }
    sub_1C0237610();
  }
  v47 = *v32;
  OUTLINED_FUNCTION_99_5();
  OUTLINED_FUNCTION_22();
  sub_1C02EDAD8();
  OUTLINED_FUNCTION_18();
  v32 = (uint64_t *)&a12;
  if (v38 == 1)
  {
    sub_1C0304B1C();
  }
  else
  {
    sub_1C0304B1C();
    v32 = (uint64_t *)&a12;
    if (v38)
    {
      OUTLINED_FUNCTION_87_10();
      sub_1C0303E20();
    }
    else
    {
      OUTLINED_FUNCTION_96_6();
    }
  }
  OUTLINED_FUNCTION_98_5();
  OUTLINED_FUNCTION_112_4();
  OUTLINED_FUNCTION_132_2();
  if ((v49 & 1) != 0)
  {
    v50 = ~v48;
    while (1)
    {
      v51 = (uint64_t *)(*(_QWORD *)(v47 + 48) + 24 * v36);
      v52 = *v51;
      v32 = (uint64_t *)v51[1];
      v53 = v51[2];
      OUTLINED_FUNCTION_31_6();
      sub_1C00C098C((uint64_t)v32, v53);
      if ((sub_1C02EBACC(v52, v42) & 1) == 0)
        goto LABEL_22;
      if (v53 == 1)
        break;
      if (v38 == 1)
        goto LABEL_21;
      if (!v53)
      {
        if (!v38)
        {
          OUTLINED_FUNCTION_8_1();
          OUTLINED_FUNCTION_2();
LABEL_41:
          sub_1C00C09A0((uint64_t)v32, v38);
LABEL_42:
          sub_1C0304A5C();
          __break(1u);
          return;
        }
LABEL_34:
        sub_1C00C098C(v40, v38);
        sub_1C00C098C((uint64_t)v32, v53);
        OUTLINED_FUNCTION_8_1();
        OUTLINED_FUNCTION_33();
LABEL_22:
        OUTLINED_FUNCTION_8_1();
        OUTLINED_FUNCTION_82_9();
        goto LABEL_23;
      }
      if (!v38)
        goto LABEL_34;
      v55 = v32 == (uint64_t *)v40 && v53 == v38;
      if (v55)
      {
        OUTLINED_FUNCTION_141_1();
        OUTLINED_FUNCTION_141_1();
        OUTLINED_FUNCTION_8_1();
        OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_28();
        v32 = (uint64_t *)v40;
        goto LABEL_41;
      }
      v61 = OUTLINED_FUNCTION_176();
      sub_1C00C098C(v40, v38);
      sub_1C00C098C((uint64_t)v32, v53);
      OUTLINED_FUNCTION_8_1();
      OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_28();
      OUTLINED_FUNCTION_82_9();
      if ((v61 & 1) != 0)
        goto LABEL_42;
LABEL_23:
      v36 = (v36 + 1) & v50;
      OUTLINED_FUNCTION_148_1();
      if ((v54 & 1) == 0)
        goto LABEL_35;
    }
    if (v38 == 1)
      goto LABEL_38;
LABEL_21:
    sub_1C00C098C(v40, v38);
    sub_1C00C098C((uint64_t)v32, v53);
    OUTLINED_FUNCTION_82_9();
    sub_1C00C09A0(v40, v38);
    goto LABEL_22;
  }
LABEL_35:
  OUTLINED_FUNCTION_49_17();
  v57 = (uint64_t *)(v56 + 24 * v36);
  *v57 = v42;
  v57[1] = v40;
  v57[2] = v38;
  OUTLINED_FUNCTION_143_2();
  if (v60)
  {
    __break(1u);
LABEL_38:
    OUTLINED_FUNCTION_8_1();
    goto LABEL_41;
  }
  *(_QWORD *)(v58 + 16) = v59;
  OUTLINED_FUNCTION_24_1();
}

void sub_1C02334EC()
{
  uint64_t *v0;
  char v1;
  char v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  OUTLINED_FUNCTION_18_0();
  v2 = v1;
  v4 = v3;
  v26 = v5;
  v6 = sub_1C0301EAC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_54_17();
  v25 = v0;
  if (!v13 & v12 && (v2 & 1) != 0)
    goto LABEL_13;
  if ((v2 & 1) != 0)
  {
    sub_1C022FEA4();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1C0235CD4();
      goto LABEL_13;
    }
    sub_1C0237808();
  }
  v14 = *v0;
  sub_1C006831C((unint64_t *)&qword_1ED725928, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
  sub_1C0303DF0();
  OUTLINED_FUNCTION_112_4();
  if (((*(_QWORD *)(v14 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v14 + 48) + v17 * v4, v6);
      sub_1C006831C(&qword_1EF5B8E10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
      v19 = sub_1C0303E80();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_16;
      v4 = (v4 + 1) & v16;
    }
    while (((*(_QWORD *)(v14 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
LABEL_13:
  v20 = v26;
  v21 = *v25;
  *(_QWORD *)(*v25 + 8 * (v4 >> 6) + 56) |= 1 << v4;
  OUTLINED_FUNCTION_56_19(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * v4, v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
  v22 = *(_QWORD *)(v21 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v21 + 16) = v24;
    OUTLINED_FUNCTION_1();
    return;
  }
  __break(1u);
LABEL_16:
  sub_1C0304A5C();
  __break(1u);
}

uint64_t sub_1C0233710(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_1C0301D5C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1C022FEA4();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1C0235CD4();
      goto LABEL_12;
    }
    sub_1C0237808();
  }
  v12 = *v3;
  sub_1C006831C((unint64_t *)&qword_1ED725700, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v13 = sub_1C0303DF0();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_1C006831C(&qword_1EF5B9098, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v18 = sub_1C0303E80();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1C0304A5C();
  __break(1u);
  return result;
}

uint64_t sub_1C0233964(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_1C0303AA8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1C022FEA4();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1C0235CD4();
      goto LABEL_12;
    }
    sub_1C0237808();
  }
  v12 = *v3;
  sub_1C006831C(&qword_1EF5BC000, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3B30], MEMORY[0x1E0DA3B40]);
  v13 = sub_1C0303DF0();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_1C006831C(&qword_1EF5BC008, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA3B30], MEMORY[0x1E0DA3B48]);
      v18 = sub_1C0303E80();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1C0304A5C();
  __break(1u);
  return result;
}

#error "1C0233C28: call analysis failed (funcsize=77)"

void sub_1C0233CEC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t *v2;
  int v4;
  char v5;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v4 = a1;
  OUTLINED_FUNCTION_54_17();
  if (!v10 & v9 && (v5 & 1) != 0)
    goto LABEL_14;
  if ((v5 & 1) != 0)
  {
    sub_1C02311C4();
  }
  else
  {
    if (v8 > v7)
    {
      sub_1C0236724(v6);
      goto LABEL_14;
    }
    sub_1C02389F8();
  }
  v11 = *v2;
  OUTLINED_FUNCTION_119();
  sub_1C0304B10();
  a2 = OUTLINED_FUNCTION_78_0() & ~(-1 << *(_BYTE *)(v11 + 32));
  OUTLINED_FUNCTION_51_16();
  if ((v12 & 1) != 0)
  {
    if (*(unsigned __int8 *)(*(_QWORD *)(v11 + 48) + a2) == v4)
    {
LABEL_13:
      sub_1C0304A5C();
      __break(1u);
    }
    else
    {
      while (1)
      {
        OUTLINED_FUNCTION_22_44();
        if ((v14 & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v13 + a2) == v4)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  OUTLINED_FUNCTION_49_17();
  *(_BYTE *)(v15 + a2) = v4;
  OUTLINED_FUNCTION_143_2();
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v17;
}

uint64_t sub_1C0233E04(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_1C03016E4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1C022FEA4();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1C0235CD4();
      goto LABEL_12;
    }
    sub_1C0237808();
  }
  v12 = *v3;
  sub_1C006831C(&qword_1EF5BD408, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], MEMORY[0x1E0CAE5F0]);
  v13 = sub_1C0303DF0();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_1C006831C(&qword_1EF5C17A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], MEMORY[0x1E0CAE5F8]);
      v18 = sub_1C0303E80();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1C0304A5C();
  __break(1u);
  return result;
}

uint64_t sub_1C0234058(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF2B0);
  v7 = *(_QWORD *)(v32 - 8);
  v8 = MEMORY[0x1E0C80A78](v32);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v29 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v29 - v14;
  v16 = *(_QWORD *)(*v3 + 16);
  v17 = *(_QWORD *)(*v3 + 24);
  v30 = v7;
  v31 = v3;
  if (v17 <= v16 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1C0230340();
    }
    else
    {
      if (v17 > v16)
      {
        sub_1C0235EAC();
        goto LABEL_15;
      }
      sub_1C0237C58();
    }
    v18 = *v3;
    sub_1C0304B04();
    sub_1C0301CFC();
    sub_1C006831C(&qword_1EF5BF2C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
    sub_1C0303DFC();
    sub_1C0303DFC();
    v19 = sub_1C0304B40();
    v20 = -1 << *(_BYTE *)(v18 + 32);
    a2 = v19 & ~v20;
    v34 = v18 + 56;
    v35 = v18;
    if (((*(_QWORD *)(v18 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v33 = ~v20;
      v21 = *(_QWORD *)(v7 + 72);
      do
      {
        sub_1C0075F00(*(_QWORD *)(v35 + 48) + v21 * a2, (uint64_t)v15);
        sub_1C006831C((unint64_t *)&qword_1ED725F60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
        v22 = sub_1C0303E80();
        sub_1C0075F00((uint64_t)v15, (uint64_t)v13);
        sub_1C0075F00(a1, (uint64_t)v10);
        if ((v22 & 1) != 0)
        {
          v23 = sub_1C0303E80();
          sub_1C003E978((uint64_t)v10, &qword_1EF5BF2B0);
          sub_1C003E978((uint64_t)v13, &qword_1EF5BF2B0);
          sub_1C003E978((uint64_t)v15, &qword_1EF5BF2B0);
          if ((v23 & 1) != 0)
            goto LABEL_18;
        }
        else
        {
          sub_1C003E978((uint64_t)v10, &qword_1EF5BF2B0);
          sub_1C003E978((uint64_t)v13, &qword_1EF5BF2B0);
          sub_1C003E978((uint64_t)v15, &qword_1EF5BF2B0);
        }
        a2 = (a2 + 1) & v33;
      }
      while (((*(_QWORD *)(v34 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_15:
  v24 = *v31;
  *(_QWORD *)(*v31 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_1C0075F48(a1, *(_QWORD *)(v24 + 48) + *(_QWORD *)(v30 + 72) * a2);
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
  {
    __break(1u);
LABEL_18:
    result = sub_1C0304A5C();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v24 + 16) = v28;
  }
  return result;
}

uint64_t sub_1C0234368(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1C02306D8();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1C02360AC();
      goto LABEL_14;
    }
    sub_1C0237FB0();
  }
  v8 = *v3;
  sub_1C0304B04();
  sub_1C0304B10();
  result = sub_1C0304B40();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_1C0304A5C();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void sub_1C02344B4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1C023097C();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1C0236240();
      goto LABEL_14;
    }
    sub_1C0238224();
  }
  v8 = *v3;
  v9 = sub_1C0304450();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1C00F6888();
    v11 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
    v12 = sub_1C030445C();

    if ((v12 & 1) != 0)
    {
LABEL_13:
      sub_1C0304A5C();
      __break(1u);
    }
    else
    {
      v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v14 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
        v15 = sub_1C030445C();

        if ((v15 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v16 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * a2) = a1;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v19;
}

uint64_t sub_1C0234628(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v4 = v3;
  v6 = (_QWORD *)result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_35;
  if ((a3 & 1) != 0)
  {
    sub_1C0230C14();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_1C02363E8();
      goto LABEL_35;
    }
    sub_1C0238498();
  }
  v9 = *v3;
  sub_1C0304B04();
  sub_1C0170110();
  result = sub_1C0304B40();
  v10 = -1 << *(_BYTE *)(v9 + 32);
  a2 = result & ~v10;
  v11 = v9 + 56;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
  {
LABEL_35:
    v22 = *v4;
    *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
    *(_QWORD *)(*(_QWORD *)(v22 + 48) + 8 * a2) = v6;
    v23 = *(_QWORD *)(v22 + 16);
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      *(_QWORD *)(v22 + 16) = v25;
      return result;
    }
    goto LABEL_38;
  }
  v12 = ~v10;
  v13 = v6[2];
  v14 = *(_QWORD *)(v9 + 48);
  while (1)
  {
    v15 = *(_QWORD **)(v14 + 8 * a2);
    if (v15[2] == v13)
    {
      if (!v13 || v15 == v6)
        goto LABEL_39;
      v16 = v15[4] == v6[4] && v15[5] == v6[5];
      if (v16 || (result = sub_1C0304A08(), (result & 1) != 0))
      {
        if (v13 == 1)
          goto LABEL_39;
        if (v15[6] == v6[6] && v15[7] == v6[7])
          break;
        result = sub_1C0304A08();
        if ((result & 1) != 0)
          break;
      }
    }
LABEL_34:
    a2 = (a2 + 1) & v12;
    if (((*(_QWORD *)(v11 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
      goto LABEL_35;
  }
  if (v13 == 2)
    goto LABEL_39;
  v18 = v15 + 9;
  v19 = v6 + 9;
  v20 = 2;
  while (v20 < v13)
  {
    if (*(v18 - 1) != *(v19 - 1) || *v18 != *v19)
    {
      result = sub_1C0304A08();
      if ((result & 1) == 0)
        goto LABEL_34;
    }
    ++v20;
    v19 += 2;
    v18 += 2;
    if (v13 == v20)
      goto LABEL_39;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
  result = sub_1C0304A5C();
  __break(1u);
  return result;
}

uint64_t sub_1C0234838(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1C0230F40();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1C0236590();
      goto LABEL_14;
    }
    sub_1C0238798();
  }
  v8 = *v3;
  result = MEMORY[0x1C3B979E8](*(_QWORD *)(*v3 + 40), v5, 4);
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_DWORD *)(v10 + 4 * a2) == v5)
    {
LABEL_13:
      result = sub_1C0304A5C();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_DWORD *)(v10 + 4 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(_QWORD *)(v12 + 48) + 4 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1C023495C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1C0231348();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1C0236814();
      goto LABEL_22;
    }
    sub_1C0238B80();
  }
  v11 = *v4;
  sub_1C0304B04();
  sub_1C0303E20();
  result = sub_1C0304B40();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1C0304A08(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1C0304A5C();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1C0304A08();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1C0234AF4(uint64_t result, uint64_t a2, _QWORD *a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  _QWORD *v17;
  BOOL v18;
  unint64_t v19;
  BOOL v20;
  BOOL v21;
  _QWORD *v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;

  v9 = result;
  v10 = *(_QWORD *)(*v5 + 16);
  v11 = *(_QWORD *)(*v5 + 24);
  if (v11 > v10 && (a5 & 1) != 0)
    goto LABEL_42;
  if ((a5 & 1) != 0)
  {
    sub_1C0231610();
  }
  else
  {
    if (v11 > v10)
    {
      result = (uint64_t)sub_1C02369C4();
      goto LABEL_42;
    }
    sub_1C0238E18();
  }
  v12 = *v5;
  sub_1C0304B04();
  swift_bridgeObjectRetain();
  sub_1C0303E20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C0170110();
  swift_bridgeObjectRelease();
  result = sub_1C0304B40();
  v13 = -1 << *(_BYTE *)(v12 + 32);
  a4 = result & ~v13;
  v14 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) == 0)
  {
LABEL_42:
    v27 = *v32;
    *(_QWORD *)(*v32 + 8 * (a4 >> 6) + 56) |= 1 << a4;
    v28 = (uint64_t *)(*(_QWORD *)(v27 + 48) + 24 * a4);
    *v28 = v9;
    v28[1] = a2;
    v28[2] = (uint64_t)a3;
    v29 = *(_QWORD *)(v27 + 16);
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (!v30)
    {
      *(_QWORD *)(v27 + 16) = v31;
      return result;
    }
    goto LABEL_45;
  }
  v33 = ~v13;
  v15 = *(_QWORD *)(v12 + 48);
  while (1)
  {
    v16 = (uint64_t *)(v15 + 24 * a4);
    result = *v16;
    v17 = (_QWORD *)v16[2];
    v18 = *v16 == v9 && v16[1] == a2;
    if (v18 || (result = sub_1C0304A08(), (result & 1) != 0))
    {
      v19 = v17[2];
      if (v19 == a3[2])
      {
        if (v19)
          v20 = v17 == a3;
        else
          v20 = 1;
        if (v20)
          goto LABEL_46;
        v21 = v17[4] == a3[4] && v17[5] == a3[5];
        if (v21 || (result = sub_1C0304A08(), (result & 1) != 0))
        {
          if (v19 == 1)
            goto LABEL_46;
          if (v17[6] == a3[6] && v17[7] == a3[7])
            break;
          result = sub_1C0304A08();
          if ((result & 1) != 0)
            break;
        }
      }
    }
LABEL_41:
    a4 = (a4 + 1) & v33;
    if (((*(_QWORD *)(v14 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) == 0)
      goto LABEL_42;
  }
  if (v19 == 2)
    goto LABEL_46;
  v23 = v17 + 9;
  v24 = a3 + 9;
  v25 = 2;
  while (v25 < v19)
  {
    if (*(v23 - 1) != *(v24 - 1) || *v23 != *v24)
    {
      result = sub_1C0304A08();
      if ((result & 1) == 0)
        goto LABEL_41;
    }
    ++v25;
    v24 += 2;
    v23 += 2;
    if (v19 == v25)
      goto LABEL_46;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  result = sub_1C0304A5C();
  __break(1u);
  return result;
}

void sub_1C0234D78(uint64_t a1, unint64_t a2)
{
  sub_1C0234D8C(a1, a2);
}

void sub_1C0234D8C(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  char v5;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  OUTLINED_FUNCTION_54_17();
  if (!v10 & v9 && (v5 & 1) != 0)
    goto LABEL_15;
  v11 = v7 + 1;
  if ((v5 & 1) != 0)
  {
    sub_1C02319BC(v11, v6);
  }
  else
  {
    if (v8 > v7)
    {
      sub_1C0236B9C(v6);
      goto LABEL_15;
    }
    sub_1C0239198(v11, v6);
  }
  v12 = *v2;
  v13 = sub_1C0304AF8();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = *(_QWORD *)(v12 + 48);
    if (*(_QWORD *)(v15 + 8 * a2) == a1)
    {
LABEL_14:
      sub_1C0304A5C();
      __break(1u);
    }
    else
    {
      v16 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v15 + 8 * a2) == a1)
          goto LABEL_14;
      }
    }
  }
LABEL_15:
  OUTLINED_FUNCTION_49_17();
  *(_QWORD *)(v17 + 8 * a2) = a1;
  OUTLINED_FUNCTION_143_2();
  if (v20)
    __break(1u);
  else
    *(_QWORD *)(v18 + 16) = v19;
}

uint64_t sub_1C0234EA8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t *v37;
  _QWORD v39[5];
  char v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  char v44;
  _QWORD v45[5];
  char v46;
  _OWORD v47[2];
  uint64_t v48;
  char v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;

  v5 = *(_QWORD *)(*v3 + 16);
  v6 = *(_QWORD *)(*v3 + 24);
  if (v6 > v5 && (a3 & 1) != 0)
    goto LABEL_55;
  if ((a3 & 1) != 0)
  {
    sub_1C0231BD0();
  }
  else
  {
    if (v6 > v5)
    {
      sub_1C0236C8C();
      goto LABEL_55;
    }
    sub_1C0239370();
  }
  v7 = *v3;
  sub_1C0304B04();
  sub_1C015898C(a1, (uint64_t)v47);
  if (v49)
  {
    if (v49 == 1)
    {
      sub_1C0304B10();
      swift_bridgeObjectRetain();
      sub_1C0303E20();
      sub_1C02399A8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0120AE0);
      sub_1C0304B10();
    }
    else
    {
      sub_1C0304B10();
      swift_bridgeObjectRetain();
      sub_1C0303E20();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C0303E20();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v50 = v47[0];
    v51 = v47[1];
    v52 = v48;
    sub_1C0304B10();
    sub_1C028B658();
  }
  v8 = sub_1C0304B40();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  a2 = v8 & ~v9;
  v10 = v7 + 56;
  if (((*(_QWORD *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v7 + 48);
    do
    {
      v13 = (uint64_t *)(v12 + 48 * a2);
      v15 = *v13;
      v14 = v13[1];
      v16 = v13[2];
      v17 = v13[3];
      if (*((_BYTE *)v13 + 40))
      {
        if (*((_BYTE *)v13 + 40) != 1)
        {
          sub_1C015898C(a1, (uint64_t)v39);
          if (v40 != 2)
            goto LABEL_51;
          v28 = v39[2];
          v29 = v39[3];
          v30 = v15 == v39[0] && v14 == v39[1];
          if (!v30 && (sub_1C0304A08() & 1) == 0)
            goto LABEL_51;
          if (v16 == v28 && v17 == v29)
            goto LABEL_54;
LABEL_50:
          if ((sub_1C0304A08() & 1) != 0)
            goto LABEL_54;
          goto LABEL_51;
        }
        sub_1C015898C(a1, (uint64_t)v45);
        if (v46 == 1)
        {
          v18 = v45[2];
          v19 = v15 == v45[0] && v14 == v45[1];
          if ((v19 || (sub_1C0304A08() & 1) != 0) && v16 == v18)
            goto LABEL_54;
        }
      }
      else
      {
        v20 = v13[4];
        sub_1C015898C(a1, (uint64_t)v41);
        if (v44)
          goto LABEL_51;
        v22 = v41[2];
        v21 = v42;
        v23 = v43;
        if (v15 != v41[0] || v14 != v41[1])
        {
          v25 = v43;
          v26 = v42;
          if ((sub_1C0304A08() & 1) == 0)
            goto LABEL_51;
          v21 = v26;
          v23 = v25;
        }
        if (v16 != v22)
          goto LABEL_51;
        if (v20)
        {
          if (!v23)
            goto LABEL_51;
          if (v17 == v21 && v20 == v23)
          {
LABEL_54:
            sub_1C0304A5C();
            __break(1u);
            break;
          }
          goto LABEL_50;
        }
        if (!v23)
          goto LABEL_54;
      }
LABEL_51:
      a2 = (a2 + 1) & v11;
    }
    while (((*(_QWORD *)(v10 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_55:
  v32 = *v37;
  *(_QWORD *)(*v37 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_1C015898C(a1, *(_QWORD *)(v32 + 48) + 48 * a2);
  v34 = *(_QWORD *)(v32 + 16);
  v35 = __OFADD__(v34, 1);
  v36 = v34 + 1;
  if (v35)
    __break(1u);
  else
    *(_QWORD *)(v32 + 16) = v36;
  return result;
}

uint64_t sub_1C0235230(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t *v6;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v11 = result;
  v12 = *(_QWORD *)(*v6 + 16);
  v13 = *(_QWORD *)(*v6 + 24);
  if (v13 <= v12 || (a6 & 1) == 0)
  {
    if ((a6 & 1) != 0)
    {
      sub_1C0231DB4();
    }
    else
    {
      if (v13 > v12)
      {
        result = (uint64_t)sub_1C0236E58();
        goto LABEL_27;
      }
      sub_1C023953C();
    }
    v14 = *v6;
    sub_1C0304B04();
    swift_bridgeObjectRetain();
    sub_1C0303E20();
    swift_bridgeObjectRelease();
    sub_1C0304B10();
    if (a4)
    {
      swift_bridgeObjectRetain();
      sub_1C0303E20();
      swift_bridgeObjectRelease();
    }
    result = sub_1C0304B40();
    v15 = -1 << *(_BYTE *)(v14 + 32);
    a5 = result & ~v15;
    if (((*(_QWORD *)(v14 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) != 0)
    {
      v16 = ~v15;
      do
      {
        v17 = (uint64_t *)(*(_QWORD *)(v14 + 48) + 32 * a5);
        result = *v17;
        v19 = v17[2];
        v18 = v17[3];
        v20 = *v17 == v11 && v17[1] == a2;
        if (v20 || (result = sub_1C0304A08(), (result & 1) != 0))
        {
          if (v18)
          {
            if (a4)
            {
              if (v19 == a3 && v18 == a4)
                goto LABEL_31;
              result = sub_1C0304A08();
              if ((result & 1) != 0)
                goto LABEL_31;
            }
          }
          else if (!a4)
          {
            goto LABEL_30;
          }
        }
        a5 = (a5 + 1) & v16;
      }
      while (((*(_QWORD *)(v14 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) != 0);
    }
  }
LABEL_27:
  v22 = *v27;
  *(_QWORD *)(*v27 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  v23 = (uint64_t *)(*(_QWORD *)(v22 + 48) + 32 * a5);
  *v23 = v11;
  v23[1] = a2;
  v23[2] = a3;
  v23[3] = a4;
  v24 = *(_QWORD *)(v22 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (v25)
  {
    __break(1u);
LABEL_30:
    swift_bridgeObjectRelease_n();
LABEL_31:
    result = sub_1C0304A5C();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v22 + 16) = v26;
  }
  return result;
}

uint64_t sub_1C0235458(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unsigned __int16 v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  if ((a3 & 1) != 0)
  {
    sub_1C0231F88();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_1C0237018();
LABEL_22:
      v24 = *v4;
      *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_WORD *)(*(_QWORD *)(v24 + 48) + 2 * a2) = v6;
      v25 = *(_QWORD *)(v24 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (!v26)
      {
        *(_QWORD *)(v24 + 16) = v27;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1C023970C();
  }
  v9 = *v3;
  sub_1C0304B04();
  sub_1C02E5C48(v6);
  sub_1C0303E20();
  swift_bridgeObjectRelease();
  result = sub_1C0304B40();
  v10 = -1 << *(_BYTE *)(v9 + 32);
  a2 = result & ~v10;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v11 = sub_1C02E5C48(*(_WORD *)(*(_QWORD *)(v9 + 48) + 2 * a2));
  v13 = v12;
  if (v11 == sub_1C02E5C48(v6) && v13 == v14)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v16 = sub_1C0304A08();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    v17 = ~v10;
    do
    {
      a2 = (a2 + 1) & v17;
      if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v18 = sub_1C02E5C48(*(_WORD *)(*(_QWORD *)(v9 + 48) + 2 * a2));
      v20 = v19;
      if (v18 == sub_1C02E5C48(v6) && v20 == v21)
        goto LABEL_25;
      v23 = sub_1C0304A08();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while ((v23 & 1) == 0);
  }
LABEL_26:
  result = sub_1C0304A5C();
  __break(1u);
  return result;
}

void sub_1C023567C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726F88);
  OUTLINED_FUNCTION_42_21();
  OUTLINED_FUNCTION_86_9();
  if (!v6)
  {
LABEL_26:
    OUTLINED_FUNCTION_1_4();
    *v0 = v0;
    OUTLINED_FUNCTION_32_1();
    return;
  }
  v7 = (void *)OUTLINED_FUNCTION_6_90();
  if (v10)
    v11 = (unint64_t)v7 >= v9;
  else
    v11 = 1;
  if (v11)
    OUTLINED_FUNCTION_67_7(v7, v8);
  OUTLINED_FUNCTION_35_38();
  if (!v5)
    goto LABEL_10;
LABEL_9:
  OUTLINED_FUNCTION_55_16();
  while (1)
  {
    v15 = (_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v12);
    v16 = v15[1];
    v17 = (_QWORD *)(v0[6] + 16 * v12);
    *v17 = *v15;
    v17[1] = v16;
    swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_9;
LABEL_10:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v3)
      goto LABEL_26;
    ++v4;
    if (!*(_QWORD *)(v2 + 8 * v13))
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v3)
        goto LABEL_26;
      if (!*(_QWORD *)(v2 + 8 * v4))
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v3)
          goto LABEL_26;
        if (!*(_QWORD *)(v2 + 8 * v4))
          break;
      }
    }
LABEL_23:
    OUTLINED_FUNCTION_53_16();
  }
  v14 = v13 + 3;
  if (v14 >= v3)
    goto LABEL_26;
  if (*(_QWORD *)(v2 + 8 * v14))
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v3)
      goto LABEL_26;
    ++v14;
    if (*(_QWORD *)(v2 + 8 * v4))
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
}

void *sub_1C023578C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t *v31;
  void *__src;
  __int128 v33;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1770);
  v31 = v0;
  v1 = *v0;
  v2 = sub_1C0304678();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v31 = v3;
    return result;
  }
  result = (void *)(v2 + 56);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  __src = (void *)(v1 + 56);
  if (v3 != v1 || (unint64_t)result >= v1 + 56 + 8 * v5)
    result = memmove(result, __src, 8 * v5);
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  if (!v10)
    goto LABEL_12;
LABEL_11:
  v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v12 | (v7 << 6); ; i = __clz(__rbit64(v15)) + (v7 << 6))
  {
    v17 = 104 * i;
    v18 = *(_QWORD *)(v1 + 48) + v17;
    v19 = *(_QWORD *)(v18 + 8);
    v20 = *(_QWORD *)(v18 + 32);
    v21 = *(_BYTE *)(v18 + 40);
    v22 = *(_QWORD *)(v18 + 48);
    v23 = *(_QWORD *)(v18 + 56);
    v24 = *(_QWORD *)(v18 + 64);
    v25 = *(_QWORD *)(v18 + 72);
    v26 = *(_QWORD *)(v18 + 80);
    v27 = *(_QWORD *)(v18 + 88);
    v28 = *(_BYTE *)(v18 + 96);
    v29 = *(_BYTE *)(v18 + 97);
    v30 = *(_QWORD *)(v3 + 48) + v17;
    v33 = *(_OWORD *)(v18 + 16);
    *(_QWORD *)v30 = *(_QWORD *)v18;
    *(_QWORD *)(v30 + 8) = v19;
    *(_OWORD *)(v30 + 16) = v33;
    *(_QWORD *)(v30 + 32) = v20;
    *(_BYTE *)(v30 + 40) = v21;
    *(_QWORD *)(v30 + 48) = v22;
    *(_QWORD *)(v30 + 56) = v23;
    *(_QWORD *)(v30 + 64) = v24;
    *(_QWORD *)(v30 + 72) = v25;
    *(_QWORD *)(v30 + 80) = v26;
    *(_QWORD *)(v30 + 88) = v27;
    *(_BYTE *)(v30 + 96) = v28;
    *(_BYTE *)(v30 + 97) = v29;
    swift_bridgeObjectRetain();
    sub_1C00C098C(v19, v33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_11;
LABEL_12:
    v14 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v14 >= v11)
      goto LABEL_28;
    v15 = *((_QWORD *)__src + v14);
    ++v7;
    if (!v15)
    {
      v7 = v14 + 1;
      if (v14 + 1 >= v11)
        goto LABEL_28;
      v15 = *((_QWORD *)__src + v7);
      if (!v15)
      {
        v7 = v14 + 2;
        if (v14 + 2 >= v11)
          goto LABEL_28;
        v15 = *((_QWORD *)__src + v7);
        if (!v15)
          break;
      }
    }
LABEL_25:
    v10 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v11)
    goto LABEL_28;
  v15 = *((_QWORD *)__src + v16);
  if (v15)
  {
    v7 = v16;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v7 >= v11)
      goto LABEL_28;
    v15 = *((_QWORD *)__src + v7);
    ++v16;
    if (v15)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C02359E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1778);
  v2 = *v0;
  v3 = sub_1C0304678();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = 3 * i;
    v21 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v20);
    v22 = v21[1];
    v23 = v21[2];
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v20);
    *v24 = *v21;
    v24[1] = v22;
    v24[2] = v23;
    swift_bridgeObjectRetain();
    result = (void *)sub_1C00C098C(v22, v23);
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1C0235BB8()
{
  sub_1C0235CD4();
}

void sub_1C0235BCC()
{
  sub_1C0235BD8(&qword_1EF5BC028);
}

void sub_1C0235BD8(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_127_1(a1);
  OUTLINED_FUNCTION_42_21();
  OUTLINED_FUNCTION_86_9();
  if (!v8)
  {
LABEL_26:
    OUTLINED_FUNCTION_1_4();
    *v1 = v2;
    OUTLINED_FUNCTION_32_1();
    return;
  }
  v9 = (void *)OUTLINED_FUNCTION_6_90();
  if (v12)
    v13 = (unint64_t)v9 >= v11;
  else
    v13 = 1;
  if (v13)
    OUTLINED_FUNCTION_67_7(v9, v10);
  OUTLINED_FUNCTION_35_38();
  if (!v7)
    goto LABEL_10;
LABEL_9:
  OUTLINED_FUNCTION_55_16();
  while (1)
  {
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14);
    swift_retain();
    if (v7)
      goto LABEL_9;
LABEL_10:
    v15 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v15 >= v5)
      goto LABEL_26;
    ++v6;
    if (!*(_QWORD *)(v4 + 8 * v15))
    {
      v6 = v15 + 1;
      if (v15 + 1 >= v5)
        goto LABEL_26;
      if (!*(_QWORD *)(v4 + 8 * v6))
      {
        v6 = v15 + 2;
        if (v15 + 2 >= v5)
          goto LABEL_26;
        if (!*(_QWORD *)(v4 + 8 * v6))
          break;
      }
    }
LABEL_23:
    OUTLINED_FUNCTION_53_16();
  }
  v16 = v15 + 3;
  if (v16 >= v5)
    goto LABEL_26;
  if (*(_QWORD *)(v4 + 8 * v16))
  {
    v6 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v5)
      goto LABEL_26;
    ++v16;
    if (*(_QWORD *)(v4 + 8 * v6))
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
}

void sub_1C0235CD4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  int64_t i;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  OUTLINED_FUNCTION_18_0();
  v2 = v1;
  v3 = v0;
  v5 = v4(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - v7;
  __swift_instantiateConcreteTypeFromMangledName(v2);
  v9 = (_QWORD *)*v0;
  v10 = sub_1C0304678();
  if (!v9[2])
  {
    OUTLINED_FUNCTION_1_0();
LABEL_30:
    *v3 = v10;
    OUTLINED_FUNCTION_1();
    return;
  }
  v28 = v3;
  OUTLINED_FUNCTION_100_4();
  v11 = v9 + 7;
  OUTLINED_FUNCTION_97_6();
  if ((_QWORD *)v10 != v9 || v12 >= &v9[v13 + 7])
    memmove(v12, v9 + 7, 8 * v13);
  v15 = 0;
  *(_QWORD *)(v10 + 16) = v9[2];
  OUTLINED_FUNCTION_100_4();
  v17 = v9[7];
  v18 = -1;
  if (v16 < 64)
    v18 = ~(-1 << v16);
  v19 = v18 & v17;
  v20 = (unint64_t)(v16 + 63) >> 6;
  if ((v18 & v17) == 0)
    goto LABEL_12;
LABEL_11:
  OUTLINED_FUNCTION_75_11();
  for (i = v21 | (v15 << 6); ; i = v25 + (v15 << 6))
  {
    v26 = *(_QWORD *)(v6 + 72) * i;
    OUTLINED_FUNCTION_56_19((uint64_t)v8, v9[6] + v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
    OUTLINED_FUNCTION_56_19(*(_QWORD *)(v10 + 48) + v26, (uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
    if (v19)
      goto LABEL_11;
LABEL_12:
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v23 >= v20)
      goto LABEL_28;
    ++v15;
    if (!v11[v23])
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v20)
        goto LABEL_28;
      if (!v11[v15])
      {
        v15 = v23 + 2;
        if (v23 + 2 >= v20)
          goto LABEL_28;
        if (!v11[v15])
          break;
      }
    }
LABEL_25:
    OUTLINED_FUNCTION_77_7();
  }
  v24 = v23 + 3;
  if (v24 >= v20)
  {
LABEL_28:
    OUTLINED_FUNCTION_1_0();
    v3 = v28;
    goto LABEL_30;
  }
  if (v11[v24])
  {
    v15 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v15 >= v20)
      goto LABEL_28;
    ++v24;
    if (v11[v15])
      goto LABEL_25;
  }
LABEL_32:
  __break(1u);
}

void *sub_1C0235EAC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF2B0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1798);
  v6 = *v0;
  v7 = sub_1C0304678();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v8;
    return result;
  }
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = *(_QWORD *)(v6 + 56);
  v16 = -1;
  if (v14 < 64)
    v16 = ~(-1 << v14);
  v17 = v16 & v15;
  v18 = (unint64_t)(v14 + 63) >> 6;
  if ((v16 & v15) == 0)
    goto LABEL_12;
LABEL_11:
  v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v19 | (v13 << 6); ; i = __clz(__rbit64(v22)) + (v13 << 6))
  {
    v24 = *(_QWORD *)(v3 + 72) * i;
    sub_1C0075F00(*(_QWORD *)(v6 + 48) + v24, (uint64_t)v5);
    result = (void *)sub_1C0075F48((uint64_t)v5, *(_QWORD *)(v8 + 48) + v24);
    if (v17)
      goto LABEL_11;
LABEL_12:
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v18)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v18)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v18)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_25:
    v17 = (v22 - 1) & v22;
  }
  v23 = v21 + 3;
  if (v23 >= v18)
    goto LABEL_28;
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v18)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C02360AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC020);
  v2 = *v0;
  v3 = sub_1C0304678();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12)
    goto LABEL_12;
LABEL_11:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * i) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    if (v12)
      goto LABEL_11;
LABEL_12:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C0236240()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1738);
  v2 = *v0;
  v3 = sub_1C0304678();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * i) = v20;
    result = v20;
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C02363E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1740);
  v2 = *v0;
  v3 = sub_1C0304678();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * i) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C0236590()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1768);
  v2 = *v0;
  v3 = sub_1C0304678();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12)
    goto LABEL_12;
LABEL_11:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * i) = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * i);
    if (v12)
      goto LABEL_11;
LABEL_12:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1C0236724(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_127_1(a1);
  OUTLINED_FUNCTION_42_21();
  OUTLINED_FUNCTION_86_9();
  if (v5)
  {
    v6 = (void *)OUTLINED_FUNCTION_6_90();
    if (v9)
      v10 = (unint64_t)v6 >= v8;
    else
      v10 = 1;
    if (v10)
      OUTLINED_FUNCTION_67_7(v6, v7);
    OUTLINED_FUNCTION_29_32();
    if (!v13)
      goto LABEL_10;
LABEL_9:
    OUTLINED_FUNCTION_104_6();
    while (1)
    {
      *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v15);
      if (v14)
        goto LABEL_9;
LABEL_10:
      v16 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
      if (v16 >= v11)
        goto LABEL_25;
      if (!*(_QWORD *)(v4 + 8 * v16))
      {
        if (v12 + 2 >= v11)
          goto LABEL_25;
        if (!*(_QWORD *)(v4 + 8 * (v12 + 2)))
        {
          if (v12 + 3 >= v11)
            goto LABEL_25;
          if (!*(_QWORD *)(v4 + 8 * (v12 + 3)))
          {
            v17 = v12 + 4;
            if (v12 + 4 >= v11)
              goto LABEL_25;
            if (!*(_QWORD *)(v4 + 8 * v17))
              break;
          }
        }
      }
LABEL_22:
      OUTLINED_FUNCTION_101_4();
    }
    while (1)
    {
      v18 = v17 + 1;
      if (__OFADD__(v17, 1))
        break;
      if (v18 >= v11)
        goto LABEL_25;
      ++v17;
      if (*(_QWORD *)(v4 + 8 * v18))
        goto LABEL_22;
    }
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_25:
    OUTLINED_FUNCTION_1_4();
    *v1 = v2;
    OUTLINED_FUNCTION_37_0();
  }
}

void *sub_1C0236814()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1730);
  v2 = *v0;
  v3 = sub_1C0304678();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v21 = v20[1];
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * i);
    *v22 = *v20;
    v22[1] = v21;
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C02369C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C17A8);
  v2 = *v0;
  v3 = sub_1C0304678();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = 3 * i;
    v21 = *(_QWORD *)(v2 + 48) + 8 * v20;
    v22 = *(_OWORD *)(v21 + 8);
    v23 = *(_QWORD *)(v4 + 48) + 8 * v20;
    *(_QWORD *)v23 = *(_QWORD *)v21;
    *(_OWORD *)(v23 + 8) = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1C0236B9C(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_127_1(a1);
  OUTLINED_FUNCTION_42_21();
  OUTLINED_FUNCTION_86_9();
  if (v5)
  {
    v6 = (void *)OUTLINED_FUNCTION_6_90();
    if (v9)
      v10 = (unint64_t)v6 >= v8;
    else
      v10 = 1;
    if (v10)
      OUTLINED_FUNCTION_67_7(v6, v7);
    OUTLINED_FUNCTION_29_32();
    if (!v13)
      goto LABEL_10;
LABEL_9:
    OUTLINED_FUNCTION_104_6();
    while (1)
    {
      *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v15);
      if (v14)
        goto LABEL_9;
LABEL_10:
      v16 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
      if (v16 >= v11)
        goto LABEL_25;
      if (!*(_QWORD *)(v4 + 8 * v16))
      {
        if (v12 + 2 >= v11)
          goto LABEL_25;
        if (!*(_QWORD *)(v4 + 8 * (v12 + 2)))
        {
          if (v12 + 3 >= v11)
            goto LABEL_25;
          if (!*(_QWORD *)(v4 + 8 * (v12 + 3)))
          {
            v17 = v12 + 4;
            if (v12 + 4 >= v11)
              goto LABEL_25;
            if (!*(_QWORD *)(v4 + 8 * v17))
              break;
          }
        }
      }
LABEL_22:
      OUTLINED_FUNCTION_101_4();
    }
    while (1)
    {
      v18 = v17 + 1;
      if (__OFADD__(v17, 1))
        break;
      if (v18 >= v11)
        goto LABEL_25;
      ++v17;
      if (*(_QWORD *)(v4 + 8 * v18))
        goto LABEL_22;
    }
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_25:
    OUTLINED_FUNCTION_1_4();
    *v1 = v2;
    OUTLINED_FUNCTION_37_0();
  }
}

void *sub_1C0236C8C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC018);
  v2 = *v0;
  v3 = sub_1C0304678();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = 3 * i;
    v21 = *(_QWORD *)(v2 + 48) + 16 * v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 16);
    v25 = *(_QWORD *)(v21 + 24);
    v26 = *(_QWORD *)(v21 + 32);
    v27 = *(_QWORD *)(v4 + 48) + 16 * v20;
    v28 = *(_BYTE *)(v21 + 40);
    *(_QWORD *)v27 = *(_QWORD *)v21;
    *(_QWORD *)(v27 + 8) = v23;
    *(_QWORD *)(v27 + 16) = v24;
    *(_QWORD *)(v27 + 24) = v25;
    *(_QWORD *)(v27 + 32) = v26;
    *(_BYTE *)(v27 + 40) = v28;
    result = (void *)sub_1C0120A8C(v22, v23, v24, v25, v26, v28);
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C0236E58()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1760);
  v2 = *v0;
  v3 = sub_1C0304678();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 32 * i);
    v21 = v20[1];
    v23 = v20[2];
    v22 = v20[3];
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * i);
    *v24 = *v20;
    v24[1] = v21;
    v24[2] = v23;
    v24[3] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C0237018()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1758);
  v2 = *v0;
  v3 = sub_1C0304678();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12)
    goto LABEL_12;
LABEL_11:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(_WORD *)(*(_QWORD *)(v4 + 48) + 2 * i) = *(_WORD *)(*(_QWORD *)(v2 + 48) + 2 * i);
    if (v12)
      goto LABEL_11;
LABEL_12:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C02371AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726F88);
  v3 = sub_1C0304684();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    sub_1C0304B04();
    swift_bridgeObjectRetain();
    sub_1C0303E20();
    result = sub_1C0304B40();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_36;
    if (v14 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C0237454()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  _QWORD __dst[13];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1770);
  v3 = sub_1C0304684();
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_24:
    *v1 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = v2 + 56;
  v6 = -1;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  result = swift_retain();
  v10 = 0;
  if (!v7)
    goto LABEL_6;
LABEL_5:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    memcpy(__dst, (const void *)(*(_QWORD *)(v2 + 48) + 104 * i), 0x62uLL);
    sub_1C0239A5C((uint64_t)__dst);
    result = (uint64_t)sub_1C0232258(__dst, v3);
    if (v7)
      goto LABEL_5;
LABEL_6:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v8)
      goto LABEL_22;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v8)
        goto LABEL_22;
      v14 = *(_QWORD *)(v5 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v8)
          goto LABEL_22;
        v14 = *(_QWORD *)(v5 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_19:
    v7 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v8)
  {
LABEL_22:
    result = swift_release_n();
    goto LABEL_24;
  }
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      goto LABEL_22;
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_1C0237610()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1778);
  v3 = sub_1C0304684();
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_23:
    result = swift_release();
    *v1 = v3;
    return result;
  }
  v20 = v1;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = v2 + 56;
  v6 = -1;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  result = swift_retain();
  v10 = 0;
  if (!v7)
    goto LABEL_6;
LABEL_5:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 24 * i);
    v17 = *v16;
    v18 = v16[1];
    v19 = v16[2];
    swift_bridgeObjectRetain();
    sub_1C00C098C(v18, v19);
    result = sub_1C0232390(v17, v18, v19, v3);
    if (v7)
      goto LABEL_5;
LABEL_6:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v8)
      goto LABEL_22;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v8)
        goto LABEL_22;
      v14 = *(_QWORD *)(v5 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v8)
          goto LABEL_22;
        v14 = *(_QWORD *)(v5 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_19:
    v7 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v8)
  {
LABEL_22:
    swift_release();
    v1 = v20;
    goto LABEL_23;
  }
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      goto LABEL_22;
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1C02377E4()
{
  sub_1C0237808();
}

void sub_1C0237808()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t i;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  OUTLINED_FUNCTION_18_0();
  v41 = v1;
  v42 = v2;
  v4 = v3;
  v5 = v0;
  v8 = OUTLINED_FUNCTION_103_2(v6, v7);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v38 - v10;
  v12 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(v4);
  v13 = OUTLINED_FUNCTION_43_23();
  if (!*(_QWORD *)(v12 + 16))
  {
    swift_release();
LABEL_32:
    *v5 = v13;
    OUTLINED_FUNCTION_1();
    return;
  }
  OUTLINED_FUNCTION_100_4();
  v38 = v0;
  v39 = v12 + 56;
  OUTLINED_FUNCTION_161_0();
  v16 = v15 & v14;
  OUTLINED_FUNCTION_97_6();
  v40 = v17;
  v18 = v13 + 56;
  swift_retain();
  v19 = 0;
  if (!v16)
    goto LABEL_4;
LABEL_3:
  v20 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v20 | (v19 << 6); ; i = v28 + (v19 << 6))
  {
    v29 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, *(_QWORD *)(v12 + 48) + v29 * i, v8);
    OUTLINED_FUNCTION_150_1();
    sub_1C0303DF0();
    OUTLINED_FUNCTION_147_0();
    if (((v32 << v31) & ~*(_QWORD *)(v18 + 8 * v30)) == 0)
    {
      OUTLINED_FUNCTION_16();
      while (1)
      {
        OUTLINED_FUNCTION_64_3();
        if (v37)
        {
          if ((v34 & 1) != 0)
            break;
        }
        if (v35 == v36)
          v35 = 0;
        if (*(_QWORD *)(v18 + 8 * v35) != -1)
        {
          OUTLINED_FUNCTION_15_18();
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    OUTLINED_FUNCTION_17_16();
LABEL_28:
    *(_QWORD *)(v18 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v13 + 48) + v33 * v29, v11, v8);
    OUTLINED_FUNCTION_79_8();
    if (v16)
      goto LABEL_3;
LABEL_4:
    if (__OFADD__(v19, 1))
      goto LABEL_34;
    if (v19 + 1 >= v40)
      goto LABEL_30;
    OUTLINED_FUNCTION_155_1();
    v19 = v22;
    if (!v23)
    {
      v19 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_30;
      if (!*(_QWORD *)(v39 + 8 * v19))
      {
        v19 = v22 + 2;
        if (v22 + 2 >= v40)
          goto LABEL_30;
        if (!*(_QWORD *)(v39 + 8 * v19))
          break;
      }
    }
LABEL_17:
    OUTLINED_FUNCTION_31_25();
    v16 = v27 & v26;
  }
  if (v22 + 3 >= v40)
  {
LABEL_30:
    swift_release_n();
    v5 = v38;
    goto LABEL_32;
  }
  OUTLINED_FUNCTION_155_1();
  if (v25)
  {
    v19 = v24;
    goto LABEL_17;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v40)
      goto LABEL_30;
    ++v24;
    if (*(_QWORD *)(v39 + 8 * v19))
      goto LABEL_17;
  }
LABEL_35:
  __break(1u);
}

void sub_1C0237A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *);
  void (*v36)(char *);
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t i;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  OUTLINED_FUNCTION_25_30();
  a31 = v33;
  a32 = v34;
  v36 = v35;
  v37 = v32;
  v38 = *v32;
  OUTLINED_FUNCTION_19_41(v39, v40);
  v41 = OUTLINED_FUNCTION_43_23();
  if (!*(_QWORD *)(v38 + 16))
  {
    OUTLINED_FUNCTION_1_0();
LABEL_32:
    *v37 = v41;
    OUTLINED_FUNCTION_24_1();
    return;
  }
  OUTLINED_FUNCTION_100_4();
  v42 = v38 + 56;
  OUTLINED_FUNCTION_134_1();
  v45 = v44 & v43;
  OUTLINED_FUNCTION_97_6();
  v60 = v46;
  swift_retain();
  v47 = 0;
  if (!v45)
    goto LABEL_4;
LABEL_3:
  OUTLINED_FUNCTION_75_11();
  for (i = v48 | (v47 << 6); ; i = v52 + (v47 << 6))
  {
    v53 = *(_QWORD *)(*(_QWORD *)(v38 + 48) + 8 * i);
    OUTLINED_FUNCTION_99_5();
    swift_retain();
    v36(&a12);
    OUTLINED_FUNCTION_98_5();
    OUTLINED_FUNCTION_83_5();
    if (v54)
    {
      OUTLINED_FUNCTION_16();
      while (1)
      {
        OUTLINED_FUNCTION_64_3();
        if (v54)
        {
          if ((v56 & 1) != 0)
            break;
        }
        if (v57 == v58)
          v57 = 0;
        if (*(_QWORD *)(v41 + 56 + 8 * v57) != -1)
        {
          OUTLINED_FUNCTION_15_18();
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    OUTLINED_FUNCTION_17_16();
LABEL_28:
    OUTLINED_FUNCTION_72_7(v55);
    *(_QWORD *)(*(_QWORD *)(v41 + 48) + 8 * v59) = v53;
    OUTLINED_FUNCTION_79_8();
    if (v45)
      goto LABEL_3;
LABEL_4:
    v50 = v47 + 1;
    if (__OFADD__(v47, 1))
      goto LABEL_34;
    if (v50 >= v60)
      goto LABEL_30;
    ++v47;
    if (!*(_QWORD *)(v42 + 8 * v50))
    {
      v47 = v50 + 1;
      if (v50 + 1 >= v60)
        goto LABEL_30;
      if (!*(_QWORD *)(v42 + 8 * v47))
      {
        v47 = v50 + 2;
        if (v50 + 2 >= v60)
          goto LABEL_30;
        if (!*(_QWORD *)(v42 + 8 * v47))
          break;
      }
    }
LABEL_17:
    OUTLINED_FUNCTION_77_7();
  }
  v51 = v50 + 3;
  if (v51 >= v60)
  {
LABEL_30:
    swift_release_n();
    v37 = v32;
    goto LABEL_32;
  }
  if (*(_QWORD *)(v42 + 8 * v51))
  {
    v47 = v51;
    goto LABEL_17;
  }
  while (1)
  {
    v47 = v51 + 1;
    if (__OFADD__(v51, 1))
      break;
    if (v47 >= v60)
      goto LABEL_30;
    ++v51;
    if (*(_QWORD *)(v42 + 8 * v47))
      goto LABEL_17;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_1C0237C58()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF2B0);
  v32 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1798);
  v6 = sub_1C0304684();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v7;
    return result;
  }
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v9 = *(_QWORD *)(v5 + 56);
  v29 = v0;
  v30 = v5 + 56;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & v9;
  v31 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 56;
  result = swift_retain();
  v14 = 0;
  if (!v11)
    goto LABEL_7;
LABEL_6:
  v15 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v18)) + (v14 << 6))
  {
    v20 = *(_QWORD *)(v32 + 72);
    sub_1C0075F00(*(_QWORD *)(v5 + 48) + v20 * i, (uint64_t)v4);
    sub_1C0304B04();
    sub_1C0301CFC();
    sub_1C006831C(&qword_1EF5BF2C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
    sub_1C0303DFC();
    sub_1C0303DFC();
    result = sub_1C0304B40();
    v21 = -1 << *(_BYTE *)(v7 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6))) == 0)
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      while (++v23 != v26 || (v25 & 1) == 0)
      {
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v23);
        if (v28 != -1)
        {
          v24 = __clz(__rbit64(~v28)) + (v23 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    result = sub_1C0075F48((uint64_t)v4, *(_QWORD *)(v7 + 48) + v24 * v20);
    ++*(_QWORD *)(v7 + 16);
    if (v11)
      goto LABEL_6;
LABEL_7:
    v17 = v14 + 1;
    if (__OFADD__(v14, 1))
      goto LABEL_36;
    if (v17 >= v31)
      goto LABEL_32;
    v18 = *(_QWORD *)(v30 + 8 * v17);
    ++v14;
    if (!v18)
    {
      v14 = v17 + 1;
      if (v17 + 1 >= v31)
        goto LABEL_32;
      v18 = *(_QWORD *)(v30 + 8 * v14);
      if (!v18)
      {
        v14 = v17 + 2;
        if (v17 + 2 >= v31)
          goto LABEL_32;
        v18 = *(_QWORD *)(v30 + 8 * v14);
        if (!v18)
          break;
      }
    }
LABEL_20:
    v11 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v31)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v29;
    goto LABEL_34;
  }
  v18 = *(_QWORD *)(v30 + 8 * v19);
  if (v18)
  {
    v14 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v31)
      goto LABEL_32;
    v18 = *(_QWORD *)(v30 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C0237FB0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC020);
  result = sub_1C0304684();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  if (!v9)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_1C0304B04();
    sub_1C0304B10();
    result = sub_1C0304B40();
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v21) = v17;
    ++*(_QWORD *)(v4 + 16);
    if (v9)
      goto LABEL_6;
LABEL_7:
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_36;
    if (v14 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v9 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    result = swift_release();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C0238224()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1738);
  v3 = sub_1C0304684();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v27 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    result = sub_1C0304450();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6))) == 0)
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v21);
        if (v26 != -1)
        {
          v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_36;
    if (v15 >= v9)
      goto LABEL_32;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v9)
        goto LABEL_32;
      v16 = *(_QWORD *)(v6 + 8 * v12);
      if (!v16)
      {
        v12 = v15 + 2;
        if (v15 + 2 >= v9)
          goto LABEL_32;
        v16 = *(_QWORD *)(v6 + 8 * v12);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v8 = (v16 - 1) & v16;
  }
  v17 = v15 + 3;
  if (v17 >= v9)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_34;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v12 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v9)
      goto LABEL_32;
    v16 = *(_QWORD *)(v6 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C0238498()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1740);
  v3 = sub_1C0304684();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_39:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v27 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v28 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  if (!v7)
    goto LABEL_7;
LABEL_6:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_1C0304B04();
    sub_1C0304B10();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      swift_bridgeObjectRetain();
      v18 = v16 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1C0303E20();
        swift_bridgeObjectRelease();
        v18 += 16;
        --v17;
      }
      while (v17);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    result = sub_1C0304B40();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6))) == 0)
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v8 + 8 * v21);
        if (v26 != -1)
        {
          v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_35:
    *(_QWORD *)(v8 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v22) = v16;
    ++*(_QWORD *)(v4 + 16);
    if (v7)
      goto LABEL_6;
LABEL_7:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_41;
    if (v13 >= v28)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v28)
        goto LABEL_37;
      v14 = *(_QWORD *)(v27 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v28)
          goto LABEL_37;
        v14 = *(_QWORD *)(v27 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v7 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v28)
  {
LABEL_37:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_39;
  }
  v14 = *(_QWORD *)(v27 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v28)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1C0238798()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1768);
  result = sub_1C0304684();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  if (!v9)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * i);
    result = MEMORY[0x1C3B979E8](*(_QWORD *)(v4 + 40), v17, 4);
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v21) = v17;
    ++*(_QWORD *)(v4 + 16);
    if (v9)
      goto LABEL_6;
LABEL_7:
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_36;
    if (v14 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v9 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    result = swift_release();
    v1 = v26;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1C02389F8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_46_19();
  v3 = v0;
  v4 = *v0;
  OUTLINED_FUNCTION_19_41(v5, v6);
  v7 = OUTLINED_FUNCTION_43_23();
  if (!*(_QWORD *)(v4 + 16))
  {
    OUTLINED_FUNCTION_1_0();
LABEL_32:
    *v3 = v7;
    OUTLINED_FUNCTION_26_12();
    return;
  }
  v8 = 0;
  v9 = v4 + 56;
  OUTLINED_FUNCTION_57_12();
  if (!v1)
    goto LABEL_4;
LABEL_3:
  OUTLINED_FUNCTION_116_4();
  while (1)
  {
    v13 = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v10);
    OUTLINED_FUNCTION_119();
    sub_1C0304B10();
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_95_7();
    if (v14)
    {
      OUTLINED_FUNCTION_16();
      while (1)
      {
        OUTLINED_FUNCTION_64_3();
        if (v14)
        {
          if ((v16 & 1) != 0)
            break;
        }
        if (v17 == v18)
          v17 = 0;
        if (*(_QWORD *)(v7 + 56 + 8 * v17) != -1)
        {
          OUTLINED_FUNCTION_15_18();
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    OUTLINED_FUNCTION_17_16();
LABEL_28:
    OUTLINED_FUNCTION_73_11(v15);
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v19) = v13;
    OUTLINED_FUNCTION_79_8();
    if (v1)
      goto LABEL_3;
LABEL_4:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_34;
    if (v11 >= v2)
      goto LABEL_30;
    ++v8;
    if (!*(_QWORD *)(v9 + 8 * v11))
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v2)
        goto LABEL_30;
      if (!*(_QWORD *)(v9 + 8 * v8))
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v2)
          goto LABEL_30;
        if (!*(_QWORD *)(v9 + 8 * v8))
          break;
      }
    }
LABEL_17:
    OUTLINED_FUNCTION_115_4();
  }
  v12 = v11 + 3;
  if (v12 >= v2)
  {
LABEL_30:
    OUTLINED_FUNCTION_1_0();
    v3 = v0;
    goto LABEL_32;
  }
  if (*(_QWORD *)(v9 + 8 * v12))
  {
    v8 = v12;
    goto LABEL_17;
  }
  while (1)
  {
    v8 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v8 >= v2)
      goto LABEL_30;
    ++v12;
    if (*(_QWORD *)(v9 + 8 * v8))
      goto LABEL_17;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_1C0238B80()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *v27;
  int64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1730);
  result = sub_1C0304684();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = v2 + 56;
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = (unint64_t)(v7 + 63) >> 6;
    v10 = result + 56;
    if (!v9)
      goto LABEL_7;
LABEL_6:
    v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (i = v11 | (v5 << 6); ; i = __clz(__rbit64(v14)) + (v5 << 6))
    {
      v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v16;
      v17 = v16[1];
      sub_1C0304B04();
      sub_1C0303E20();
      result = sub_1C0304B40();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          v25 = v21 == v24;
          if (v21 == v24)
            v21 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_29:
      *(_QWORD *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      v27 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v22);
      *v27 = v18;
      v27[1] = v17;
      ++*(_QWORD *)(v4 + 16);
      result = swift_bridgeObjectRetain();
      if (v9)
        goto LABEL_6;
LABEL_7:
      v13 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_35;
      if (v13 >= v28)
        goto LABEL_31;
      v14 = *(_QWORD *)(v6 + 8 * v13);
      ++v5;
      if (!v14)
      {
        v5 = v13 + 1;
        if (v13 + 1 >= v28)
          goto LABEL_31;
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
        {
          v5 = v13 + 2;
          if (v13 + 2 >= v28)
            goto LABEL_31;
          v14 = *(_QWORD *)(v6 + 8 * v5);
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v28)
            {
LABEL_31:
              result = swift_release();
              v1 = v0;
              goto LABEL_33;
            }
            v14 = *(_QWORD *)(v6 + 8 * v15);
            v5 = v15;
            if (!v14)
              break;
          }
        }
      }
LABEL_19:
      v9 = (v14 - 1) & v14;
    }
    while (1)
    {
      v5 = v15 + 1;
      if (__OFADD__(v15, 1))
        break;
      if (v5 >= v28)
        goto LABEL_31;
      v14 = *(_QWORD *)(v6 + 8 * v5);
      ++v15;
      if (v14)
        goto LABEL_19;
    }
LABEL_36:
    __break(1u);
  }
  else
  {
    result = swift_release();
LABEL_33:
    *v1 = v4;
  }
  return result;
}

uint64_t sub_1C0238E18()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  __int128 v36;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C17A8);
  v3 = sub_1C0304684();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_38:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v33 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v34 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  if (!v7)
    goto LABEL_7;
LABEL_6:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = *(_QWORD *)(v2 + 48) + 24 * i;
    v17 = *(_QWORD *)v16;
    v36 = *(_OWORD *)(v16 + 8);
    sub_1C0304B04();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1C0303E20();
    swift_bridgeObjectRelease();
    sub_1C0304B10();
    v18 = *(_QWORD *)(*((_QWORD *)&v36 + 1) + 16);
    if (v18)
    {
      v35 = v17;
      v19 = v7;
      v20 = v4;
      v21 = v10;
      v22 = v2;
      swift_bridgeObjectRetain();
      v23 = *((_QWORD *)&v36 + 1) + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1C0303E20();
        swift_bridgeObjectRelease();
        v23 += 16;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
      v2 = v22;
      v10 = v21;
      v4 = v20;
      v7 = v19;
      v17 = v35;
    }
    result = sub_1C0304B40();
    v24 = -1 << *(_BYTE *)(v4 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6))) == 0)
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v29 || (v28 & 1) == 0)
      {
        v30 = v26 == v29;
        if (v26 == v29)
          v26 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v8 + 8 * v26);
        if (v31 != -1)
        {
          v27 = __clz(__rbit64(~v31)) + (v26 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v8 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    v32 = *(_QWORD *)(v4 + 48) + 24 * v27;
    *(_QWORD *)v32 = v17;
    *(_OWORD *)(v32 + 8) = v36;
    ++*(_QWORD *)(v4 + 16);
    if (v7)
      goto LABEL_6;
LABEL_7:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_40;
    if (v13 >= v34)
      goto LABEL_36;
    v14 = *(_QWORD *)(v33 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v34)
        goto LABEL_36;
      v14 = *(_QWORD *)(v33 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v34)
          goto LABEL_36;
        v14 = *(_QWORD *)(v33 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v7 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v34)
  {
LABEL_36:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_38;
  }
  v14 = *(_QWORD *)(v33 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v34)
      goto LABEL_36;
    v14 = *(_QWORD *)(v33 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_1C0239198(uint64_t a1, uint64_t *a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t i;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  int64_t v27;

  OUTLINED_FUNCTION_15_48(a1, a2);
  OUTLINED_FUNCTION_43_23();
  OUTLINED_FUNCTION_86_9();
  if (!v6)
  {
    OUTLINED_FUNCTION_1_4();
LABEL_35:
    *(_QWORD *)v2 = v3;
    return;
  }
  v27 = v2;
  OUTLINED_FUNCTION_158_0();
  v9 = 1 << v8;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & v7;
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v3 + 56;
  if ((v10 & v7) == 0)
    goto LABEL_7;
LABEL_6:
  OUTLINED_FUNCTION_75_11();
  for (i = v14 | (v2 << 6); ; i = v18 + (v2 << 6))
  {
    v19 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * i);
    sub_1C0304AF8();
    OUTLINED_FUNCTION_147_0();
    if (((-1 << v21) & ~*(_QWORD *)(v13 + 8 * v20)) == 0)
    {
      OUTLINED_FUNCTION_16();
      while (1)
      {
        OUTLINED_FUNCTION_64_3();
        if (v26)
        {
          if ((v23 & 1) != 0)
            break;
        }
        if (v24 == v25)
          v24 = 0;
        if (*(_QWORD *)(v13 + 8 * v24) != -1)
        {
          OUTLINED_FUNCTION_15_18();
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    OUTLINED_FUNCTION_17_16();
LABEL_31:
    *(_QWORD *)(v13 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v22) = v19;
    ++*(_QWORD *)(v3 + 16);
    if (v11)
      goto LABEL_6;
LABEL_7:
    v16 = v2 + 1;
    if (__OFADD__(v2, 1))
      goto LABEL_37;
    if (v16 >= v12)
      goto LABEL_33;
    ++v2;
    if (!*(_QWORD *)(v5 + 8 * v16))
    {
      v2 = v16 + 1;
      if (v16 + 1 >= v12)
        goto LABEL_33;
      if (!*(_QWORD *)(v5 + 8 * v2))
      {
        v2 = v16 + 2;
        if (v16 + 2 >= v12)
          goto LABEL_33;
        if (!*(_QWORD *)(v5 + 8 * v2))
          break;
      }
    }
LABEL_20:
    OUTLINED_FUNCTION_77_7();
  }
  v17 = v16 + 3;
  if (v17 >= v12)
  {
LABEL_33:
    OUTLINED_FUNCTION_1_4();
    v2 = v27;
    goto LABEL_35;
  }
  if (*(_QWORD *)(v5 + 8 * v17))
  {
    v2 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v2 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v2 >= v12)
      goto LABEL_33;
    ++v17;
    if (*(_QWORD *)(v5 + 8 * v2))
      goto LABEL_20;
  }
LABEL_38:
  __break(1u);
}

uint64_t sub_1C0239370()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  _BYTE v16[48];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC018);
  v3 = sub_1C0304684();
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_24:
    *v1 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = v2 + 56;
  v6 = -1;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  result = swift_retain();
  v10 = 0;
  if (!v7)
    goto LABEL_6;
LABEL_5:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    sub_1C015898C(*(_QWORD *)(v2 + 48) + 48 * i, (uint64_t)v16);
    sub_1C02399A8((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0120A8C);
    result = sub_1C02325B0((uint64_t)v16, v3);
    if (v7)
      goto LABEL_5;
LABEL_6:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v8)
      goto LABEL_22;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v8)
        goto LABEL_22;
      v14 = *(_QWORD *)(v5 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v8)
          goto LABEL_22;
        v14 = *(_QWORD *)(v5 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_19:
    v7 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v8)
  {
LABEL_22:
    result = swift_release_n();
    goto LABEL_24;
  }
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      goto LABEL_22;
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_1C023953C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1760);
  v3 = sub_1C0304684();
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_23:
    result = swift_release();
    *v1 = v3;
    return result;
  }
  v21 = v1;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = v2 + 56;
  v6 = -1;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  result = swift_retain();
  v10 = 0;
  if (!v7)
    goto LABEL_6;
LABEL_5:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * i);
    v17 = *v16;
    v18 = v16[1];
    v19 = v16[2];
    v20 = v16[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1C02326F0(v17, v18, v19, v20, v3);
    if (v7)
      goto LABEL_5;
LABEL_6:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v8)
      goto LABEL_22;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v8)
        goto LABEL_22;
      v14 = *(_QWORD *)(v5 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v8)
          goto LABEL_22;
        v14 = *(_QWORD *)(v5 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_19:
    v7 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v8)
  {
LABEL_22:
    swift_release();
    v1 = v21;
    goto LABEL_23;
  }
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      goto LABEL_22;
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1C023970C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unsigned __int16 v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1758);
  v3 = sub_1C0304684();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = *(_WORD *)(*(_QWORD *)(v2 + 48) + 2 * i);
    sub_1C0304B04();
    sub_1C02E5C48(v18);
    sub_1C0303E20();
    swift_bridgeObjectRelease();
    result = sub_1C0304B40();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6))) == 0)
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v21);
        if (v26 != -1)
        {
          v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_WORD *)(*(_QWORD *)(v4 + 48) + 2 * v22) = v18;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_36;
    if (v15 >= v9)
      goto LABEL_32;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v9)
        goto LABEL_32;
      v16 = *(_QWORD *)(v6 + 8 * v12);
      if (!v16)
      {
        v12 = v15 + 2;
        if (v15 + 2 >= v9)
          goto LABEL_32;
        v16 = *(_QWORD *)(v6 + 8 * v12);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v8 = (v16 - 1) & v16;
  }
  v17 = v15 + 3;
  if (v17 >= v9)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v12 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v9)
      goto LABEL_32;
    v16 = *(_QWORD *)(v6 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1C02399A8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C02399DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_1C00C098C(v2, v3);
  return a1;
}

uint64_t sub_1C0239A1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRelease();
  sub_1C00C09A0(v2, v3);
  return a1;
}

uint64_t sub_1C0239A5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_1C00C098C(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C0239ADC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRelease();
  sub_1C00C09A0(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_125()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_1_107()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_3_116(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return v2(v4, *(_QWORD *)(a1 + 48) + v1 * v5, v3);
}

uint64_t OUTLINED_FUNCTION_4_91()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = *v1;
  *v1 = 0x8000000000000000;
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_90()
{
  uint64_t v0;

  return v0 + 56;
}

uint64_t OUTLINED_FUNCTION_11_70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t, uint64_t);
  uint64_t v3;

  return v2(*(_QWORD *)(v3 - 120), *(_QWORD *)(**(_QWORD **)(v3 - 128) + 48) + v1, v0);
}

uint64_t OUTLINED_FUNCTION_12_54()
{
  uint64_t (*v0)(uint64_t, _QWORD, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v2, *(_QWORD *)(v3 - 96), v1);
}

uint64_t OUTLINED_FUNCTION_13_54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_14_57()
{
  return sub_1C0303E80();
}

uint64_t OUTLINED_FUNCTION_15_48(uint64_t a1, uint64_t *a2)
{
  return __swift_instantiateConcreteTypeFromMangledName(a2);
}

uint64_t OUTLINED_FUNCTION_17_51()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
  return sub_1C0303DF0();
}

uint64_t OUTLINED_FUNCTION_18_40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_19_41(uint64_t a1, uint64_t *a2)
{
  return __swift_instantiateConcreteTypeFromMangledName(a2);
}

void OUTLINED_FUNCTION_21_40(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 128) = v3;
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = ~a1;
  *(_QWORD *)(v4 - 104) = v2;
}

void OUTLINED_FUNCTION_29_32()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
}

uint64_t OUTLINED_FUNCTION_30_32@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_32_31()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = *(_QWORD *)(v1 - 88);
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_35_38()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
}

uint64_t OUTLINED_FUNCTION_40_25()
{
  return sub_1C0304684();
}

uint64_t OUTLINED_FUNCTION_42_21()
{
  return sub_1C0304678();
}

uint64_t OUTLINED_FUNCTION_43_23()
{
  return sub_1C0304684();
}

uint64_t OUTLINED_FUNCTION_47_24()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C00C098C(v0, v1);
}

uint64_t OUTLINED_FUNCTION_56_19@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_61_12()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void *OUTLINED_FUNCTION_67_7@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  const void *v2;

  return memmove(a1, v2, 8 * a2);
}

void OUTLINED_FUNCTION_73_11(unint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
}

void OUTLINED_FUNCTION_74_7()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

void OUTLINED_FUNCTION_78_10(uint64_t a1)
{
  uint64_t *v1;

  sub_1C003E978(a1, v1);
}

uint64_t OUTLINED_FUNCTION_94_8()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_96_6()
{
  return sub_1C0304B10();
}

uint64_t OUTLINED_FUNCTION_103_2(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = a2;
  return a2(0);
}

uint64_t OUTLINED_FUNCTION_106_4()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_107_3()
{
  return sub_1C0303E20();
}

uint64_t OUTLINED_FUNCTION_108_6()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_109_5()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_110_3()
{
  unsigned __int16 v0;

  return sub_1C02E5C48(v0);
}

uint64_t OUTLINED_FUNCTION_117_3()
{
  return sub_1C0303E80();
}

uint64_t OUTLINED_FUNCTION_118_2()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_122_2()
{
  return sub_1C0304B10();
}

uint64_t OUTLINED_FUNCTION_123_2()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C00C09A0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_124_2()
{
  return sub_1C030445C();
}

uint64_t OUTLINED_FUNCTION_126_2@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_127_1(uint64_t *a1)
{
  return __swift_instantiateConcreteTypeFromMangledName(a1);
}

id OUTLINED_FUNCTION_128_1()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(*(_QWORD *)(v0 + 48) + 8 * v1);
}

uint64_t OUTLINED_FUNCTION_130_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return sub_1C015898C(a14, a2);
}

uint64_t OUTLINED_FUNCTION_137_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_138_1()
{
  return sub_1C0303DFC();
}

void OUTLINED_FUNCTION_139_1()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_140_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C015898C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_141_1()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C00C098C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_142_0@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_145_1()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C02E5C48(*(_WORD *)(*(_QWORD *)(v1 + 48) + 2 * v0));
}

void OUTLINED_FUNCTION_150_1()
{
  uint64_t v0;

  sub_1C006831C(*(unint64_t **)(v0 - 96), *(uint64_t (**)(uint64_t))(v0 - 104), *(_QWORD *)(v0 - 88));
}

uint64_t OUTLINED_FUNCTION_151_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_153_1@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_154_1()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_156_0()
{
  return sub_1C0303E20();
}

uint64_t OUTLINED_FUNCTION_157_0()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 40);
}

unint64_t static Constants.subsystem.getter()
{
  return OUTLINED_FUNCTION_0_126(24);
}

unint64_t static Constants.bundleId.getter()
{
  return OUTLINED_FUNCTION_0_126(24);
}

unint64_t static Constants.signalsMachServiceName.getter()
{
  return OUTLINED_FUNCTION_0_126(32);
}

unint64_t static Constants.remembersMachServiceName.getter()
{
  return OUTLINED_FUNCTION_0_126(34);
}

unint64_t static Constants.coreDuetContextId.getter()
{
  return OUTLINED_FUNCTION_0_126(41);
}

unint64_t static Constants.suggestionsInferenceBridgeInstallPath.getter()
{
  return OUTLINED_FUNCTION_0_126(90);
}

unint64_t static Constants.siriTasksEvaluationPluginId.getter()
{
  return OUTLINED_FUNCTION_0_126(55);
}

ValueMetadata *type metadata accessor for Constants()
{
  return &type metadata for Constants;
}

unint64_t OUTLINED_FUNCTION_0_126(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t sub_1C023A244()
{
  return 1;
}

uint64_t static SearchForSportsIntent.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t sub_1C023A254()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B87E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = 0;
  *(_BYTE *)(inited + 48) = 2;
  v6 = 1;
  type metadata accessor for DateTime.Time();
  OUTLINED_FUNCTION_16_0();
  DateTime.Time.init(withHour:minute:second:meridiem:)(7, 0, 0, &v6);
  type metadata accessor for DateTime();
  OUTLINED_FUNCTION_16_0();
  v1 = OUTLINED_FUNCTION_1_108();
  v6 = 1;
  OUTLINED_FUNCTION_16_0();
  DateTime.Time.init(withHour:minute:second:meridiem:)(11, 59, 59, &v6);
  OUTLINED_FUNCTION_16_0();
  v2 = OUTLINED_FUNCTION_1_108();
  v6 = 1;
  type metadata accessor for DateTime.Interval();
  OUTLINED_FUNCTION_16_0();
  v3 = DateTime.Interval.init(withQuantity:timeUnit:)(&v6, 0.0);
  type metadata accessor for DateTime.DateTimeRange();
  OUTLINED_FUNCTION_16_0();
  v4 = DateTime.DateTimeRange.init(withStartDateTime:endDateTime:interval:)(v1, v2, v3);
  OUTLINED_FUNCTION_16_0();
  *(_QWORD *)(inited + 56) = DateTime.init(occurringIn:)(v4);
  sub_1C0099A4C();
  return sub_1C0303DB4();
}

uint64_t OUTLINED_FUNCTION_1_108()
{
  uint64_t v0;

  return DateTime.init(withTime:)(v0);
}

uint64_t sub_1C023A3E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1764();
    v2 = v13;
    v4 = *(_QWORD *)(sub_1C03024A0() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_1C0302488();
      v9 = v8;
      v10 = *(_QWORD *)(v13 + 16);
      if (v10 >= *(_QWORD *)(v13 + 24) >> 1)
        sub_1C00B1764();
      *(_QWORD *)(v13 + 16) = v10 + 1;
      v11 = v13 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v7;
      *(_QWORD *)(v11 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C023A4E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD v18[3];
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED725F88);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C03024A0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v18 - v10;
  v21 = a1;
  v20 = MEMORY[0x1E0DEE9D8];
  v12 = sub_1C0302434();
  sub_1C023AC50(&qword_1ED725F78, MEMORY[0x1E0D50618]);
  sub_1C030409C();
  sub_1C023AC50(&qword_1ED725F80, MEMORY[0x1E0D50620]);
  sub_1C03044A4();
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) != 1)
  {
    v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v18[2] = v12;
    v19 = v9;
    do
    {
      v14(v11, v4, v5);
      if ((sub_1C0302494() & 1) != 0)
      {
        v14(v9, v11, v5);
        v15 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C00B2338();
          v15 = v20;
        }
        v16 = *(_QWORD *)(v15 + 16);
        if (v16 >= *(_QWORD *)(v15 + 24) >> 1)
        {
          sub_1C00B2338();
          v15 = v20;
        }
        *(_QWORD *)(v15 + 16) = v16 + 1;
        v17 = v15
            + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
            + *(_QWORD *)(v6 + 72) * v16;
        v9 = v19;
        v14((char *)v17, v19, v5);
        v20 = v15;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      }
      sub_1C03044A4();
    }
    while (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) != 1);
  }
  swift_release();
  sub_1C0056C9C((uint64_t)v4, (uint64_t *)&unk_1ED725F88);
  return v20;
}

uint64_t sub_1C023A768@<X0>(const void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v43;
  os_log_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[33];
  _BYTE v49[264];
  uint64_t v50;

  v5 = v2;
  v47 = a2;
  v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
  v7 = MEMORY[0x1E0C80A78](v50);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v43 - v10);
  sub_1C01579A8((uint64_t)a1, (uint64_t)&v43 - v10);
  v12 = v11[3];
  OUTLINED_FUNCTION_2_110();
  if (v13)
  {
    OUTLINED_FUNCTION_2_1();
    v14 = OUTLINED_FUNCTION_0_127();
    v5 = v12;
    if (v12)
    {
      OUTLINED_FUNCTION_31();
      return sub_1C0056C9C((uint64_t)v11, (uint64_t *)&unk_1ED726D98);
    }
    v3 = v14;
    v4 = v15;
    swift_bridgeObjectRelease_n();
    v11[3] = v3;
    v11[4] = v4;
  }
  OUTLINED_FUNCTION_2_110();
  if (v16)
  {
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_0_127();
    OUTLINED_FUNCTION_1_109();
    if (v5)
      return sub_1C0056C9C((uint64_t)v11, (uint64_t *)&unk_1ED726D98);
    OUTLINED_FUNCTION_31();
    v11[5] = v3;
    v11[6] = v4;
  }
  OUTLINED_FUNCTION_2_110();
  if (v17)
  {
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_0_127();
    OUTLINED_FUNCTION_1_109();
    if (v5)
      return sub_1C0056C9C((uint64_t)v11, (uint64_t *)&unk_1ED726D98);
    OUTLINED_FUNCTION_31();
    v11[7] = v3;
    v11[8] = v4;
  }
  OUTLINED_FUNCTION_2_110();
  if (v18)
  {
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_0_127();
    OUTLINED_FUNCTION_1_109();
    if (v5)
      return sub_1C0056C9C((uint64_t)v11, (uint64_t *)&unk_1ED726D98);
    OUTLINED_FUNCTION_31();
    v11[9] = v3;
    v11[10] = v4;
  }
  OUTLINED_FUNCTION_2_110();
  if (v19)
  {
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_0_127();
    OUTLINED_FUNCTION_1_109();
    if (v5)
      return sub_1C0056C9C((uint64_t)v11, (uint64_t *)&unk_1ED726D98);
    OUTLINED_FUNCTION_31();
    v11[11] = v3;
    v11[12] = v4;
  }
  OUTLINED_FUNCTION_2_110();
  if (v20)
  {
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_0_127();
    OUTLINED_FUNCTION_1_109();
    if (v5)
      return sub_1C0056C9C((uint64_t)v11, (uint64_t *)&unk_1ED726D98);
    OUTLINED_FUNCTION_31();
    v11[15] = v3;
    v11[16] = v4;
  }
  OUTLINED_FUNCTION_2_110();
  if (v21)
  {
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_0_127();
    OUTLINED_FUNCTION_1_109();
    if (v5)
      return sub_1C0056C9C((uint64_t)v11, (uint64_t *)&unk_1ED726D98);
    OUTLINED_FUNCTION_31();
    v11[17] = v3;
    v11[18] = v4;
  }
  OUTLINED_FUNCTION_2_110();
  if (v22)
  {
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_0_127();
    OUTLINED_FUNCTION_1_109();
    if (v5)
      return sub_1C0056C9C((uint64_t)v11, (uint64_t *)&unk_1ED726D98);
    OUTLINED_FUNCTION_31();
    v11[19] = v3;
    v11[20] = v4;
  }
  if (v11[23])
  {
    v23 = v11[22];
    OUTLINED_FUNCTION_2_1();
    v24 = OUTLINED_FUNCTION_0_127();
    v26 = v25;
    OUTLINED_FUNCTION_31();
    if (v23)
      return sub_1C0056C9C((uint64_t)v11, (uint64_t *)&unk_1ED726D98);
    swift_bridgeObjectRelease();
    v11[22] = v24;
    v11[23] = v26;
  }
  v27 = (char *)v11 + *(int *)(v50 + 36);
  v27[*(int *)(type metadata accessor for ContactResolver.SignalSet(0) + 184)] = 1;
  if (qword_1ED727970 != -1)
    swift_once();
  v28 = sub_1C0303B98();
  __swift_project_value_buffer(v28, (uint64_t)&unk_1ED7295C8);
  sub_1C01579A8((uint64_t)a1, (uint64_t)v9);
  v29 = sub_1C0303B80();
  v30 = sub_1C03042E8();
  v31 = v30;
  if (os_log_type_enabled(v29, v30))
  {
    v32 = swift_slowAlloc();
    v46 = swift_slowAlloc();
    v48[0] = v46;
    *(_DWORD *)v32 = 136315394;
    v45 = v31;
    OUTLINED_FUNCTION_27_0(v49, v9);
    v44 = v29;
    v33 = ContactQuery.description.getter();
    v35 = OUTLINED_FUNCTION_11_71(v33, v34);
    OUTLINED_FUNCTION_6_91(v35);
    OUTLINED_FUNCTION_14();
    sub_1C0056C9C((uint64_t)v9, (uint64_t *)&unk_1ED726D98);
    *(_WORD *)(v32 + 12) = 2080;
    OUTLINED_FUNCTION_8_67();
    OUTLINED_FUNCTION_27_0(v49, v11);
    v36 = ContactQuery.description.getter();
    v38 = OUTLINED_FUNCTION_11_71(v36, v37);
    OUTLINED_FUNCTION_6_91(v38);
    OUTLINED_FUNCTION_14();
    _os_log_impl(&dword_1C0039000, v44, (os_log_type_t)v45, "Original Query: %s\n\nNormalized Query: %s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }
  sub_1C0056C9C((uint64_t)v9, (uint64_t *)&unk_1ED726D98);

  v39 = v47;
  OUTLINED_FUNCTION_8_67();
  OUTLINED_FUNCTION_27_0(v49, v11);
  OUTLINED_FUNCTION_27_0(v48, a1);
  static ContactQuery.== infix(_:_:)((uint64_t)v49, (uint64_t)v48);
  if ((v40 & 1) != 0)
  {
    v41 = 1;
  }
  else
  {
    sub_1C01579A8((uint64_t)v11, v39);
    v41 = 0;
  }
  __swift_storeEnumTagSinglePayload(v39, v41, 1, v50);
  return sub_1C0056C9C((uint64_t)v11, (uint64_t *)&unk_1ED726D98);
}

uint64_t sub_1C023ABA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1C0302440();
  if (!v3)
  {
    v6 = sub_1C023A4E4(v5);
    sub_1C023A3E8(v6);
    OUTLINED_FUNCTION_14();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
    sub_1C004B224();
    a3 = sub_1C0303E50();
    swift_bridgeObjectRelease();
  }
  return a3;
}

uint64_t sub_1C023AC50(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1C0302434();
    result = MEMORY[0x1C3B9827C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for NormalizationQueryExpander()
{
  return &type metadata for NormalizationQueryExpander;
}

ValueMetadata *type metadata accessor for Normalizer()
{
  return &type metadata for Normalizer;
}

uint64_t OUTLINED_FUNCTION_0_127()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1C023ABA8(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_1_109()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_6_91(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 328) = a1;
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_8_67()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_11_71(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1C003E6D8(a1, a2, (uint64_t *)(v2 + 64));
}

uint64_t TerminalElement.TemporalIntent.toTemporalIntent()@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  char v9;
  uint64_t v10;

  v2 = v1;
  v4 = sub_1C0302860();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if ((_DWORD)result == *MEMORY[0x1E0DA08A0])
  {
    *a1 = 0;
    return result;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DA08B0])
  {
    v9 = 1;
LABEL_7:
    *a1 = v9;
    return result;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DA08A8])
  {
    v9 = 2;
    goto LABEL_7;
  }
  *a1 = 4;
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DateTime.Qualifier.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  v2 = 0;
  v3 = 2;
  switch(result)
  {
    case 0:
      goto LABEL_3;
    case 1:
      v2 = 1;
LABEL_3:
      v3 = v2;
      break;
    case 2:
      break;
    case 3:
      v3 = 3;
      break;
    case 4:
      v3 = 4;
      break;
    case 5:
      v3 = 5;
      break;
    case 6:
      v3 = 6;
      break;
    case 7:
      v3 = 7;
      break;
    case 8:
      v3 = 8;
      break;
    case 9:
      v3 = 9;
      break;
    case 10:
      v3 = 10;
      break;
    case 11:
      v3 = 11;
      break;
    case 12:
      v3 = 12;
      break;
    case 13:
      v3 = 13;
      break;
    case 14:
      v3 = 14;
      break;
    case 15:
      v3 = 15;
      break;
    case 16:
      v3 = 16;
      break;
    case 17:
      v3 = 17;
      break;
    case 18:
      v3 = 18;
      break;
    case 19:
      v3 = 19;
      break;
    default:
      v3 = 20;
      break;
  }
  *a2 = v3;
  return result;
}

uint64_t DateTime.Qualifier.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1C023AEF0()
{
  unint64_t result;

  result = qword_1EF5C17B0;
  if (!qword_1EF5C17B0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Qualifier, &type metadata for DateTime.Qualifier);
    atomic_store(result, (unint64_t *)&qword_1EF5C17B0);
  }
  return result;
}

uint64_t sub_1C023AF2C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return DateTime.Qualifier.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C023AF34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DateTime.Qualifier.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C023AF58()
{
  sub_1C023B0CC();
  return sub_1C03040FC();
}

uint64_t sub_1C023AFB4()
{
  sub_1C023B0CC();
  return sub_1C03040D8();
}

uint64_t _s9QualifierOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_1C023B04C + 4 * byte_1C031DFA1[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_1C023B080 + 4 * byte_1C031DF9C[v4]))();
}

uint64_t sub_1C023B080(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C023B088(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C023B090);
  return result;
}

uint64_t sub_1C023B09C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C023B0A4);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_1C023B0A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C023B0B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DateTime.Qualifier()
{
  return &type metadata for DateTime.Qualifier;
}

unint64_t sub_1C023B0CC()
{
  unint64_t result;

  result = qword_1EF5C17B8;
  if (!qword_1EF5C17B8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Qualifier, &type metadata for DateTime.Qualifier);
    atomic_store(result, (unint64_t *)&qword_1EF5C17B8);
  }
  return result;
}

void sub_1C023B108(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C020FB8C();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_1C023C1E0(v5);
  *a1 = v2;
}

uint64_t sub_1C023B170(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  double v14;
  double v15;
  int v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = type metadata accessor for LearnedDisambiguation();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_23_9();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v24 - v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v24[1] = a2;
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1C00B2074();
    v11 = *(unsigned __int8 *)(v6 + 80);
    v24[0] = a1;
    v12 = a1 + ((v11 + 32) & ~v11);
    v25 = *(_QWORD *)(v6 + 72);
    v26 = v9;
    v27 = v5;
    while (1)
    {
      sub_1C0150CBC(v12, (uint64_t)v9);
      sub_1C0150CBC((uint64_t)v9, v2);
      result = sub_1C0301C18();
      v15 = round(v14);
      if ((~*(_QWORD *)&v15 & 0x7FF0000000000000) == 0)
        break;
      if (v15 <= -9.22337204e18)
        goto LABEL_15;
      if (v15 >= 9.22337204e18)
        goto LABEL_16;
      v16 = *(_DWORD *)(v2 + *(int *)(v5 + 32));
      v17 = (uint64_t *)(v2 + *(int *)(v5 + 40));
      v18 = *v17;
      v19 = v17[1];
      v20 = v17[2];
      sub_1C0150D00(v2);
      sub_1C0150D00((uint64_t)v9);
      v21 = v28;
      if ((OUTLINED_FUNCTION_14_1() & 1) == 0)
      {
        OUTLINED_FUNCTION_2_111();
        v21 = v28;
      }
      v22 = *(_QWORD *)(v21 + 16);
      if (v22 >= *(_QWORD *)(v21 + 24) >> 1)
      {
        OUTLINED_FUNCTION_2_111();
        v21 = v28;
      }
      *(_QWORD *)(v21 + 16) = v22 + 1;
      v23 = v21 + 40 * v22;
      *(_QWORD *)(v23 + 32) = (uint64_t)v15;
      *(_DWORD *)(v23 + 40) = v16;
      *(_QWORD *)(v23 + 48) = v18;
      *(_QWORD *)(v23 + 56) = v19;
      *(_QWORD *)(v23 + 64) = v20;
      v9 = v26;
      v12 += v25;
      --v10;
      v5 = v27;
      if (!v10)
      {
        swift_bridgeObjectRelease();
        return sub_1C023B688(v21);
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x1E0DEE9D8];
    return sub_1C023B688(v21);
  }
  return result;
}

float sub_1C023B38C(int a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  __int128 v14;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0.0;
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)(a2 + 64);
  v6 = MEMORY[0x1E0DEE9D8];
  v13 = v2;
  do
  {
    if (*((_DWORD *)v5 - 6) == a1)
    {
      v7 = *(v5 - 4);
      v14 = *((_OWORD *)v5 - 1);
      v8 = *v5;
      if ((OUTLINED_FUNCTION_14_1() & 1) == 0)
        OUTLINED_FUNCTION_2_111();
      v9 = *(_QWORD *)(v6 + 16);
      if (v9 >= *(_QWORD *)(v6 + 24) >> 1)
        OUTLINED_FUNCTION_2_111();
      *(_QWORD *)(v6 + 16) = v9 + 1;
      v10 = v6 + 40 * v9;
      *(_QWORD *)(v10 + 32) = v7;
      *(_DWORD *)(v10 + 40) = a1;
      *(_OWORD *)(v10 + 48) = v14;
      *(_QWORD *)(v10 + 64) = v8;
    }
    v5 += 5;
    --v2;
  }
  while (v2);
  OUTLINED_FUNCTION_33();
  v11 = *(_QWORD *)(v6 + 16);
  swift_release();
  return (float)v11 / (float)v13;
}

uint64_t sub_1C023B4B8(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t result;

  if (!*(_QWORD *)(a4 + 16))
    return -1;
  v6 = sub_1C00B4124(a1);
  if ((v7 & 1) == 0)
    return -1;
  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 24 * v6 + 8);
  result = a3 - v8;
  if (__OFSUB__(a3, v8))
  {
    __break(1u);
    return -1;
  }
  return result;
}

uint64_t sub_1C023B508(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  char v6;

  if (*(_QWORD *)(a4 + 16) && (v5 = sub_1C00B4124(a1), (v6 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(a4 + 56) + 24 * v5 + 16);
  else
    return -1;
}

uint64_t sub_1C023B54C(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t i;
  uint64_t v4;
  _DWORD *v5;
  int *v7;
  int v8;
  unint64_t v9;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return -1;
  if (*(_DWORD *)(a2 + 40) == (_DWORD)result)
  {
    i = 0;
    goto LABEL_4;
  }
  if (v2 == 1)
    return -1;
  v7 = (int *)(a2 + 80);
  for (i = 1; ; ++i)
  {
    v8 = *v7;
    v7 += 10;
    if (v8 == (_DWORD)result)
      break;
    v9 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    if (v9 == v2)
      return -1;
  }
LABEL_4:
  if (i >= v2)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    return result;
  }
  v4 = 0;
  v5 = (_DWORD *)(a2 + 40);
  while (*((_QWORD *)v5 - 1) >= *(_QWORD *)(a2 + 32 + 40 * i) || *v5 == (_DWORD)result)
  {
    v5 += 10;
    if (v2 == ++v4)
    {
      v4 = *(_QWORD *)(a2 + 16);
      break;
    }
  }
  result = v4 - i;
  if (__OFSUB__(v4, i))
    goto LABEL_23;
  return result;
}

float sub_1C023B5FC(unsigned int a1, uint64_t a2, uint64_t a3)
{
  float v3;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = -1.0;
  if (*(_QWORD *)(a3 + 16))
  {
    v5 = sub_1C00B4124(a1);
    if ((v6 & 1) != 0)
    {
      v7 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v5);
      if (*(_QWORD *)(v7 + 16))
      {
        swift_bridgeObjectRetain();
        sub_1C00B4158();
        if ((v9 & 1) != 0)
          v3 = *(float *)(*(_QWORD *)(v7 + 56) + 16 * v8 + 8);
        OUTLINED_FUNCTION_14();
      }
    }
  }
  return v3;
}

uint64_t sub_1C023B688(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  swift_bridgeObjectRetain();
  sub_1C023B108(&v3);
  OUTLINED_FUNCTION_14();
  v1 = v3;
  sub_1C023B6F8(v3);
  return v1;
}

uint64_t sub_1C023B6F8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t result;

  v2 = (_QWORD *)sub_1C0303DB4();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (uint64_t)v2;
  swift_bridgeObjectRetain();
  v4 = (unsigned int *)(a1 + 40);
  v5 = 1;
  while (1)
  {
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    if (v2[2])
    {
      sub_1C00B4124(*v4);
      if ((v8 & 1) != 0)
        goto LABEL_14;
    }
    swift_isUniquelyReferenced_nonNull_native();
    v9 = sub_1C00B4124(v7);
    if (__OFADD__(v2[2], (v10 & 1) == 0))
      break;
    v11 = v9;
    v12 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C17C0);
    if ((sub_1C03047BC() & 1) != 0)
    {
      v13 = sub_1C00B4124(v7);
      if ((v12 & 1) != (v14 & 1))
        goto LABEL_20;
      v11 = v13;
    }
    if ((v12 & 1) != 0)
    {
      v15 = v2[7] + 24 * v11;
      *(_DWORD *)v15 = v7;
      *(_QWORD *)(v15 + 8) = v6;
      *(_QWORD *)(v15 + 16) = v5;
    }
    else
    {
      v2[(v11 >> 6) + 8] |= 1 << v11;
      *(_DWORD *)(v2[6] + 4 * v11) = v7;
      v16 = v2[7] + 24 * v11;
      *(_DWORD *)v16 = v7;
      *(_QWORD *)(v16 + 8) = v6;
      *(_QWORD *)(v16 + 16) = v5;
      v17 = v2[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_19;
      v2[2] = v19;
    }
    swift_bridgeObjectRelease();
    v18 = __OFADD__(v5++, 1);
    if (v18)
      goto LABEL_18;
LABEL_14:
    v4 += 10;
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v2;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1C0304A68();
  __break(1u);
  return result;
}

uint64_t sub_1C023B8C0()
{
  sub_1C03046CC();
  swift_bridgeObjectRelease();
  sub_1C03049E4();
  sub_1C0303FD0();
  swift_bridgeObjectRelease();
  sub_1C0303FD0();
  OUTLINED_FUNCTION_0_128();
  OUTLINED_FUNCTION_5_83();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_1_110();
  OUTLINED_FUNCTION_0_128();
  OUTLINED_FUNCTION_5_83();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_1_110();
  OUTLINED_FUNCTION_0_128();
  OUTLINED_FUNCTION_5_83();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_1_110();
  OUTLINED_FUNCTION_0_128();
  sub_1C0303FD0();
  OUTLINED_FUNCTION_33();
  sub_1C0303FD0();
  return 91;
}

uint64_t sub_1C023B9E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t result;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;

  v41 = a3;
  v42 = a2;
  v5 = sub_1C0302284();
  MEMORY[0x1E0C80A78](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA7D8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_23_9();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v40 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v40 - v12;
  OUTLINED_FUNCTION_4_92(v11, *MEMORY[0x1E0DA4950]);
  v14 = OUTLINED_FUNCTION_12_55();
  v16 = v15;
  OUTLINED_FUNCTION_2_38();
  v43 = a1;
  sub_1C00A9CFC(v14, v16, a1);
  swift_bridgeObjectRelease();
  v17 = sub_1C030205C();
  OUTLINED_FUNCTION_9_79((uint64_t)v13);
  if (v18)
  {
    v22 = sub_1C023BC80((uint64_t)v13);
LABEL_5:
    v19 = -1;
    goto LABEL_6;
  }
  v19 = sub_1C0302050();
  v21 = v20;
  v22 = OUTLINED_FUNCTION_16_1((uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8));
  if ((v21 & 1) != 0)
    goto LABEL_5;
LABEL_6:
  OUTLINED_FUNCTION_4_92(v22, *MEMORY[0x1E0DA4960]);
  v23 = OUTLINED_FUNCTION_12_55();
  v25 = v24;
  OUTLINED_FUNCTION_2_38();
  sub_1C00A9CFC(v23, v25, v43);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_9_79((uint64_t)v10);
  if (v18)
  {
    v29 = sub_1C023BC80((uint64_t)v10);
  }
  else
  {
    v26 = sub_1C0302050();
    v28 = v27;
    v29 = OUTLINED_FUNCTION_16_1((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8));
    if ((v28 & 1) == 0)
    {
      v40 = v26;
      v30 = v19;
      goto LABEL_12;
    }
  }
  v30 = v19;
  v40 = -1;
LABEL_12:
  OUTLINED_FUNCTION_4_92(v29, *MEMORY[0x1E0DA4958]);
  v31 = OUTLINED_FUNCTION_12_55();
  v33 = v32;
  OUTLINED_FUNCTION_2_38();
  sub_1C00A9CFC(v31, v33, v43);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_9_79(v3);
  if (v18)
  {
    result = sub_1C023BC80(v3);
LABEL_16:
    v34 = -1;
    goto LABEL_17;
  }
  v34 = sub_1C0302050();
  v36 = v35;
  result = OUTLINED_FUNCTION_16_1(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8));
  if ((v36 & 1) != 0)
    goto LABEL_16;
LABEL_17:
  v38 = v41;
  *v41 = v42;
  *((_DWORD *)v38 + 2) = 0;
  v39 = v40;
  v38[2] = v30;
  v38[3] = v39;
  v38[4] = v34;
  return result;
}

uint64_t sub_1C023BC80(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA7D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1C023BCC0(_QWORD *a1, _QWORD *a2)
{
  return *a2 < *a1;
}

uint64_t sub_1C023BCD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD v17[3];
  uint64_t v18;

  v1 = sub_1C0302284();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v17 - v6;
  OUTLINED_FUNCTION_17_52((uint64_t)v17 - v6);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v7, v1);
  if (v8 == *MEMORY[0x1E0DA4950])
    return v0[2];
  if (v8 == *MEMORY[0x1E0DA4960])
    return v0[3];
  if (v8 == *MEMORY[0x1E0DA4958])
    return v0[4];
  if (qword_1EF5B7F30 != -1)
    swift_once();
  v10 = sub_1C0303B98();
  v11 = (void (*)(char *, uint64_t))__swift_project_value_buffer(v10, (uint64_t)qword_1EF5FC710);
  OUTLINED_FUNCTION_17_52((uint64_t)v5);
  v12 = sub_1C0303B80();
  v13 = sub_1C03042F4();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    *(_DWORD *)v14 = 136315138;
    v17[1] = v14 + 4;
    v15 = sub_1C0302278();
    v17[2] = sub_1C003E6D8(v15, v16, &v18);
    sub_1C03044B0();
    OUTLINED_FUNCTION_14();
    OUTLINED_FUNCTION_8_68();
    _os_log_impl(&dword_1C0039000, v12, v13, "Unexpected granularity: %s", v14, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_8_68();

  v11(v7, v1);
  return -1;
}

BOOL sub_1C023BF24(uint64_t a1, uint64_t a2)
{
  return !memcmp((const void *)a1, (const void *)a2, 0xCuLL)
      && memcmp((const void *)(a1 + 16), (const void *)(a2 + 16), 0x18uLL) == 0;
}

BOOL sub_1C023BF74(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return sub_1C0210520(v5, v7);
}

BOOL sub_1C023BFBC(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return sub_1C0210780(v5, v7);
}

BOOL sub_1C023C004(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return sub_1C0210240(v5, v7);
}

BOOL sub_1C023C054()
{
  uint64_t v0;

  v0 = sub_1C023BCD4();
  return v0 == sub_1C023BCD4();
}

uint64_t sub_1C023C0B0(uint64_t a1, int a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = (_QWORD *)(a1 + 64);
    v5 = MEMORY[0x1E0DEE9D8];
    do
    {
      if (*((_DWORD *)v4 - 6) == a2)
      {
        v6 = *(v4 - 4);
        v12 = *((_OWORD *)v4 - 1);
        v7 = *v4;
        if ((OUTLINED_FUNCTION_14_1() & 1) == 0)
          OUTLINED_FUNCTION_2_111();
        v8 = *(_QWORD *)(v5 + 16);
        if (v8 >= *(_QWORD *)(v5 + 24) >> 1)
          OUTLINED_FUNCTION_2_111();
        *(_QWORD *)(v5 + 16) = v8 + 1;
        v9 = v5 + 40 * v8;
        *(_QWORD *)(v9 + 32) = v6;
        *(_DWORD *)(v9 + 40) = a2;
        *(_OWORD *)(v9 + 48) = v12;
        *(_QWORD *)(v9 + 64) = v7;
      }
      v4 += 5;
      --v2;
    }
    while (v2);
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
  }
  v10 = *(_QWORD *)(v5 + 16);
  swift_release();
  OUTLINED_FUNCTION_33();
  return v10;
}

void sub_1C023C1E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  unint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;

  v3 = a1[1];
  v4 = sub_1C03049CC();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1C023C848(0, v3, 1, a1);
      return;
    }
    goto LABEL_125;
  }
  v5 = v4;
  sub_1C027E0C8(v3 / 2);
  v97 = a1;
  v98 = v6;
  v100 = v3;
  v101 = v7;
  if (v3 <= 0)
  {
    v102 = (char *)MEMORY[0x1E0DEE9D8];
    v33 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_91:
    if (v33 < 2)
    {
LABEL_102:
      swift_bridgeObjectRelease();
      if (v100 >= -1)
      {
        *(_QWORD *)(v98 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_130;
    }
    v90 = *v97;
    while (1)
    {
      v91 = v33 - 2;
      if (v33 < 2)
        break;
      if (!v90)
        goto LABEL_134;
      v92 = v102;
      v93 = *(_QWORD *)&v102[16 * v91 + 32];
      v94 = *(_QWORD *)&v102[16 * v33 + 24];
      sub_1C023C8D8((char *)(v90 + 40 * v93), (char *)(v90 + 40 * *(_QWORD *)&v102[16 * v33 + 16]), v90 + 40 * v94, v101);
      if (v1)
        goto LABEL_87;
      if (v94 < v93)
        goto LABEL_120;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v92 = sub_1C020FAB8();
      if (v91 >= *((_QWORD *)v92 + 2))
        goto LABEL_121;
      v95 = &v92[16 * v91 + 32];
      *(_QWORD *)v95 = v93;
      *((_QWORD *)v95 + 1) = v94;
      v96 = *((_QWORD *)v92 + 2);
      if (v33 > v96)
        goto LABEL_122;
      memmove(&v92[16 * v33 + 16], &v92[16 * v33 + 32], 16 * (v96 - v33));
      v102 = v92;
      *((_QWORD *)v92 + 2) = v96 - 1;
      v33 = v96 - 1;
      if (v96 <= 2)
        goto LABEL_102;
    }
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v102 = (char *)MEMORY[0x1E0DEE9D8];
  v99 = v5;
  while (1)
  {
    v10 = v8++;
    if (v8 < v3)
    {
      v11 = *(_QWORD *)(v9 + 40 * v8);
      v12 = *(_QWORD *)(v9 + 40 * v10);
      v8 = v10 + 2;
      if (v10 + 2 < v3)
      {
        v13 = (uint64_t *)(v9 + 80 + 40 * v10);
        v14 = v11;
        while (1)
        {
          v16 = *v13;
          v13 += 5;
          v15 = v16;
          if (v12 < v11 == v14 >= v16)
            break;
          ++v8;
          v14 = v15;
          if (v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v12 < v11)
      {
        if (v8 < v10)
          goto LABEL_127;
        if (v10 < v8)
        {
          v17 = 40 * v8;
          v18 = 40 * v10;
          v19 = v8;
          v20 = v10;
          do
          {
            if (v20 != --v19)
            {
              if (!v9)
                goto LABEL_133;
              v21 = v9 + v18;
              v22 = *(_QWORD *)(v9 + v18);
              v23 = v9 + v17;
              v24 = *(_DWORD *)(v9 + v18 + 8);
              v25 = *(_QWORD *)(v9 + v18 + 32);
              v26 = *(_OWORD *)(v9 + v18 + 16);
              v27 = *(_QWORD *)(v9 + v17 - 8);
              v28 = *(_OWORD *)(v9 + v17 - 24);
              *(_OWORD *)v21 = *(_OWORD *)(v9 + v17 - 40);
              *(_OWORD *)(v21 + 16) = v28;
              *(_QWORD *)(v21 + 32) = v27;
              *(_QWORD *)(v23 - 40) = v22;
              *(_DWORD *)(v23 - 32) = v24;
              *(_OWORD *)(v23 - 24) = v26;
              *(_QWORD *)(v23 - 8) = v25;
            }
            ++v20;
            v17 -= 40;
            v18 += 40;
          }
          while (v20 < v19);
        }
      }
    }
    if (v8 >= v3)
      goto LABEL_26;
    if (__OFSUB__(v8, v10))
      goto LABEL_124;
    if (v8 - v10 >= v5)
      goto LABEL_26;
    v29 = v10 + v5;
    if (__OFADD__(v10, v5))
      goto LABEL_128;
    if (v29 >= v3)
      v29 = v3;
    if (v29 < v10)
      goto LABEL_129;
    if (v8 == v29)
    {
LABEL_26:
      v30 = v102;
    }
    else
    {
      v81 = v9 + 32 + 40 * v8;
      v30 = v102;
      do
      {
        v82 = *(_QWORD *)(v9 + 40 * v8);
        v83 = v10;
        v84 = v81;
        do
        {
          v85 = v84 - 72;
          if (*(_QWORD *)(v84 - 72) >= v82)
            break;
          if (!v9)
            goto LABEL_131;
          v86 = *(_QWORD *)(v84 - 40);
          *(_QWORD *)(v84 - 40) = *(_QWORD *)v84;
          v84 -= 40;
          v87 = *(_DWORD *)(v84 + 16);
          v88 = *(_OWORD *)(v84 + 24);
          v89 = *(_OWORD *)(v85 + 16);
          *(_OWORD *)(v85 + 40) = *(_OWORD *)v85;
          *(_OWORD *)(v85 + 56) = v89;
          *(_QWORD *)(v85 + 72) = v86;
          *(_QWORD *)(v84 - 32) = v82;
          *(_DWORD *)(v84 - 24) = v87;
          *(_OWORD *)(v84 - 16) = v88;
          ++v83;
        }
        while (v8 != v83);
        ++v8;
        v81 += 40;
      }
      while (v8 != v29);
      v8 = v29;
    }
    if (v8 < v10)
      goto LABEL_123;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v30 = sub_1C00500C8(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
    v32 = *((_QWORD *)v30 + 2);
    v31 = *((_QWORD *)v30 + 3);
    v33 = v32 + 1;
    if (v32 >= v31 >> 1)
      v30 = sub_1C00500C8((char *)(v31 > 1), v32 + 1, 1, v30);
    *((_QWORD *)v30 + 2) = v33;
    v34 = v30 + 32;
    v35 = &v30[16 * v32 + 32];
    *(_QWORD *)v35 = v10;
    *((_QWORD *)v35 + 1) = v8;
    v102 = v30;
    if (v32)
      break;
    v33 = 1;
LABEL_75:
    v5 = v99;
    v3 = v100;
    if (v8 >= v100)
      goto LABEL_91;
  }
  while (1)
  {
    v36 = v33 - 1;
    if (v33 >= 4)
    {
      v41 = &v34[16 * v33];
      v42 = *((_QWORD *)v41 - 8);
      v43 = *((_QWORD *)v41 - 7);
      v47 = __OFSUB__(v43, v42);
      v44 = v43 - v42;
      if (v47)
        goto LABEL_108;
      v46 = *((_QWORD *)v41 - 6);
      v45 = *((_QWORD *)v41 - 5);
      v47 = __OFSUB__(v45, v46);
      v39 = v45 - v46;
      v40 = v47;
      if (v47)
        goto LABEL_109;
      v48 = v33 - 2;
      v49 = &v34[16 * v33 - 32];
      v51 = *(_QWORD *)v49;
      v50 = *((_QWORD *)v49 + 1);
      v47 = __OFSUB__(v50, v51);
      v52 = v50 - v51;
      if (v47)
        goto LABEL_110;
      v47 = __OFADD__(v39, v52);
      v53 = v39 + v52;
      if (v47)
        goto LABEL_112;
      if (v53 >= v44)
      {
        v71 = &v34[16 * v36];
        v73 = *(_QWORD *)v71;
        v72 = *((_QWORD *)v71 + 1);
        v47 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v47)
          goto LABEL_118;
        v64 = v39 < v74;
        goto LABEL_64;
      }
    }
    else
    {
      if (v33 != 3)
      {
        v65 = *((_QWORD *)v30 + 4);
        v66 = *((_QWORD *)v30 + 5);
        v47 = __OFSUB__(v66, v65);
        v58 = v66 - v65;
        v59 = v47;
        goto LABEL_58;
      }
      v38 = *((_QWORD *)v30 + 4);
      v37 = *((_QWORD *)v30 + 5);
      v47 = __OFSUB__(v37, v38);
      v39 = v37 - v38;
      v40 = v47;
    }
    if ((v40 & 1) != 0)
      goto LABEL_111;
    v48 = v33 - 2;
    v54 = &v34[16 * v33 - 32];
    v56 = *(_QWORD *)v54;
    v55 = *((_QWORD *)v54 + 1);
    v57 = __OFSUB__(v55, v56);
    v58 = v55 - v56;
    v59 = v57;
    if (v57)
      goto LABEL_113;
    v60 = &v34[16 * v36];
    v62 = *(_QWORD *)v60;
    v61 = *((_QWORD *)v60 + 1);
    v47 = __OFSUB__(v61, v62);
    v63 = v61 - v62;
    if (v47)
      goto LABEL_115;
    if (__OFADD__(v58, v63))
      goto LABEL_117;
    if (v58 + v63 >= v39)
    {
      v64 = v39 < v63;
LABEL_64:
      if (v64)
        v36 = v48;
      goto LABEL_66;
    }
LABEL_58:
    if ((v59 & 1) != 0)
      goto LABEL_114;
    v67 = &v34[16 * v36];
    v69 = *(_QWORD *)v67;
    v68 = *((_QWORD *)v67 + 1);
    v47 = __OFSUB__(v68, v69);
    v70 = v68 - v69;
    if (v47)
      goto LABEL_116;
    if (v70 < v58)
      goto LABEL_75;
LABEL_66:
    v75 = v36 - 1;
    if (v36 - 1 >= v33)
    {
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
    if (!v9)
      goto LABEL_132;
    v76 = &v34[16 * v75];
    v77 = *(_QWORD *)v76;
    v78 = &v34[16 * v36];
    v79 = *((_QWORD *)v78 + 1);
    sub_1C023C8D8((char *)(v9 + 40 * *(_QWORD *)v76), (char *)(v9 + 40 * *(_QWORD *)v78), v9 + 40 * v79, v101);
    if (v1)
      break;
    if (v79 < v77)
      goto LABEL_105;
    if (v36 > *((_QWORD *)v102 + 2))
      goto LABEL_106;
    *(_QWORD *)v76 = v77;
    *(_QWORD *)&v34[16 * v75 + 8] = v79;
    v80 = *((_QWORD *)v102 + 2);
    if (v36 >= v80)
      goto LABEL_107;
    v30 = v102;
    v33 = v80 - 1;
    memmove(&v34[16 * v36], v78 + 16, 16 * (v80 - 1 - v36));
    *((_QWORD *)v102 + 2) = v80 - 1;
    if (v80 <= 2)
      goto LABEL_75;
  }
LABEL_87:
  swift_bridgeObjectRelease();
  if (v100 < -1)
    goto LABEL_126;
  *(_QWORD *)(v98 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_1C023C848(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  __int128 v12;
  __int128 v13;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 40 * a3 + 32;
    while (2)
    {
      v6 = *(_QWORD *)(v4 + 40 * a3);
      v7 = result;
      v8 = v5;
      do
      {
        v9 = v8 - 72;
        if (*(_QWORD *)(v8 - 72) >= v6)
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        v10 = *(_QWORD *)(v8 - 40);
        *(_QWORD *)(v8 - 40) = *(_QWORD *)v8;
        v8 -= 40;
        v11 = *(_DWORD *)(v8 + 16);
        v12 = *(_OWORD *)(v8 + 24);
        v13 = *(_OWORD *)(v9 + 16);
        *(_OWORD *)(v9 + 40) = *(_OWORD *)v9;
        *(_OWORD *)(v9 + 56) = v13;
        *(_QWORD *)(v9 + 72) = v10;
        *(_QWORD *)(v8 - 32) = v6;
        *(_DWORD *)(v8 - 24) = v11;
        *(_OWORD *)(v8 - 16) = v12;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 40;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1C023C8D8(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  BOOL v14;
  __int128 v15;
  __int128 v16;
  unint64_t v18;
  char *v19;
  char *v20;
  BOOL v21;
  BOOL v22;
  __int128 v23;
  __int128 v24;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 40;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  if (v9 >= v11)
  {
    sub_1C00ADFD4(a2, (uint64_t)(a3 - (_QWORD)a2) / 40, a4);
    v12 = &v4[40 * v11];
    if (v7 >= v6 || v10 < 40)
      goto LABEL_35;
    v18 = a3 - 40;
    while (1)
    {
      v19 = (char *)(v18 + 40);
      v20 = v6 - 40;
      if (*((_QWORD *)v6 - 5) >= *((_QWORD *)v12 - 5))
      {
        v22 = v19 != v12 || v18 >= (unint64_t)v12;
        v20 = v12 - 40;
        v12 -= 40;
        if (!v22)
          goto LABEL_31;
      }
      else
      {
        v21 = v19 != v6 || v18 >= (unint64_t)v6;
        v6 -= 40;
        if (!v21)
          goto LABEL_31;
      }
      v23 = *(_OWORD *)v20;
      v24 = *((_OWORD *)v20 + 1);
      *(_QWORD *)(v18 + 32) = *((_QWORD *)v20 + 4);
      *(_OWORD *)v18 = v23;
      *(_OWORD *)(v18 + 16) = v24;
LABEL_31:
      v18 -= 40;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_35;
    }
  }
  sub_1C00ADFD4(a1, (a2 - a1) / 40, a4);
  v12 = &v4[40 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 40)
  {
    while (*(_QWORD *)v4 >= *(_QWORD *)v6)
    {
      v13 = v4;
      v14 = v7 == v4;
      v4 += 40;
      if (!v14)
        goto LABEL_9;
LABEL_10:
      v7 += 40;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_15;
    }
    v13 = v6;
    v14 = v7 == v6;
    v6 += 40;
    if (v14)
      goto LABEL_10;
LABEL_9:
    v15 = *(_OWORD *)v13;
    v16 = *((_OWORD *)v13 + 1);
    *((_QWORD *)v7 + 4) = *((_QWORD *)v13 + 4);
    *(_OWORD *)v7 = v15;
    *((_OWORD *)v7 + 1) = v16;
    goto LABEL_10;
  }
LABEL_15:
  v6 = v7;
LABEL_35:
  sub_1C00ADFD4(v4, (v12 - v4) / 40, v6);
  return 1;
}

void type metadata accessor for RecencyRank()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t __swift_memcpy12_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t sub_1C023CA9C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 12))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1C023CABC(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 12) = v3;
  return result;
}

void type metadata accessor for LocationValues()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C023CAF4(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1C023CB14(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

void type metadata accessor for HistoricalRecord()
{
  OUTLINED_FUNCTION_17_2();
}

unint64_t sub_1C023CB58()
{
  unint64_t result;

  result = qword_1EF5C17C8;
  if (!qword_1EF5C17C8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031E134, &unk_1E79A2398);
    atomic_store(result, (unint64_t *)&qword_1EF5C17C8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_128()
{
  return sub_1C03049E4();
}

uint64_t OUTLINED_FUNCTION_1_110()
{
  return sub_1C0303FD0();
}

void OUTLINED_FUNCTION_2_111()
{
  sub_1C00B2074();
}

uint64_t OUTLINED_FUNCTION_4_92(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_5_83()
{
  return sub_1C0303FD0();
}

uint64_t OUTLINED_FUNCTION_8_68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_9_79(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_12_55()
{
  return sub_1C0302290();
}

uint64_t OUTLINED_FUNCTION_17_52(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t Country.Value.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t))((char *)sub_1C023CC34 + 4 * word_1C031E1CC[*v0]))(17473);
}

uint64_t sub_1C023CC34()
{
  return 17729;
}

void Country.Value.init(rawValue:)(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C17D0);
  v2 = swift_allocObject();
  v3 = sub_1C00B7244(v2, 255);
  *(_QWORD *)v4 = "AD";
  *(_QWORD *)(v4 + 8) = 2;
  *(_BYTE *)(v4 + 16) = 2;
  *(_QWORD *)(v4 + 24) = "AE";
  *(_QWORD *)(v4 + 32) = 2;
  *(_BYTE *)(v4 + 40) = 2;
  *(_QWORD *)(v4 + 48) = "AF";
  *(_QWORD *)(v4 + 56) = 2;
  *(_BYTE *)(v4 + 64) = 2;
  *(_QWORD *)(v4 + 72) = "AG";
  *(_QWORD *)(v4 + 80) = 2;
  *(_BYTE *)(v4 + 88) = 2;
  *(_QWORD *)(v4 + 96) = "AI";
  *(_QWORD *)(v4 + 104) = 2;
  *(_BYTE *)(v4 + 112) = 2;
  *(_QWORD *)(v4 + 120) = "AL";
  *(_QWORD *)(v4 + 128) = 2;
  *(_BYTE *)(v4 + 136) = 2;
  *(_QWORD *)(v4 + 144) = "AM";
  *(_QWORD *)(v4 + 152) = 2;
  *(_BYTE *)(v4 + 160) = 2;
  *(_QWORD *)(v4 + 168) = "AN";
  *(_QWORD *)(v4 + 176) = 2;
  *(_BYTE *)(v4 + 184) = 2;
  *(_QWORD *)(v4 + 192) = "AO";
  *(_QWORD *)(v4 + 200) = 2;
  *(_BYTE *)(v4 + 208) = 2;
  *(_QWORD *)(v4 + 216) = "AQ";
  *(_QWORD *)(v4 + 224) = 2;
  *(_BYTE *)(v4 + 232) = 2;
  *(_QWORD *)(v4 + 240) = "AR";
  *(_QWORD *)(v4 + 248) = 2;
  *(_BYTE *)(v4 + 256) = 2;
  *(_QWORD *)(v4 + 264) = "AS";
  *(_QWORD *)(v4 + 272) = 2;
  *(_BYTE *)(v4 + 280) = 2;
  *(_QWORD *)(v4 + 288) = "AT";
  *(_QWORD *)(v4 + 296) = 2;
  *(_BYTE *)(v4 + 304) = 2;
  *(_QWORD *)(v4 + 312) = "AU";
  *(_QWORD *)(v4 + 320) = 2;
  *(_BYTE *)(v4 + 328) = 2;
  *(_QWORD *)(v4 + 336) = "AW";
  *(_QWORD *)(v4 + 344) = 2;
  *(_BYTE *)(v4 + 352) = 2;
  *(_QWORD *)(v4 + 360) = "AX";
  *(_QWORD *)(v4 + 368) = 2;
  *(_BYTE *)(v4 + 376) = 2;
  *(_QWORD *)(v4 + 384) = "AZ";
  *(_QWORD *)(v4 + 392) = 2;
  *(_BYTE *)(v4 + 400) = 2;
  *(_QWORD *)(v4 + 408) = "BA";
  *(_QWORD *)(v4 + 416) = 2;
  *(_BYTE *)(v4 + 424) = 2;
  *(_QWORD *)(v4 + 432) = "BB";
  *(_QWORD *)(v4 + 440) = 2;
  *(_BYTE *)(v4 + 448) = 2;
  *(_QWORD *)(v4 + 456) = "BD";
  *(_QWORD *)(v4 + 464) = 2;
  *(_BYTE *)(v4 + 472) = 2;
  *(_QWORD *)(v4 + 480) = "BE";
  *(_QWORD *)(v4 + 488) = 2;
  *(_BYTE *)(v4 + 496) = 2;
  *(_QWORD *)(v4 + 504) = "BF";
  *(_QWORD *)(v4 + 512) = 2;
  *(_BYTE *)(v4 + 520) = 2;
  *(_QWORD *)(v4 + 528) = "BG";
  *(_QWORD *)(v4 + 536) = 2;
  *(_BYTE *)(v4 + 544) = 2;
  *(_QWORD *)(v4 + 552) = "BH";
  *(_QWORD *)(v4 + 560) = 2;
  *(_BYTE *)(v4 + 568) = 2;
  *(_QWORD *)(v4 + 576) = "BI";
  *(_QWORD *)(v4 + 584) = 2;
  *(_BYTE *)(v4 + 592) = 2;
  *(_QWORD *)(v4 + 600) = "BJ";
  *(_QWORD *)(v4 + 608) = 2;
  *(_BYTE *)(v4 + 616) = 2;
  *(_QWORD *)(v4 + 624) = "BL";
  *(_QWORD *)(v4 + 632) = 2;
  *(_BYTE *)(v4 + 640) = 2;
  *(_QWORD *)(v4 + 648) = "BM";
  *(_QWORD *)(v4 + 656) = 2;
  *(_BYTE *)(v4 + 664) = 2;
  *(_QWORD *)(v4 + 672) = "BN";
  *(_QWORD *)(v4 + 680) = 2;
  *(_BYTE *)(v4 + 688) = 2;
  *(_QWORD *)(v4 + 696) = "BO";
  *(_QWORD *)(v4 + 704) = 2;
  *(_BYTE *)(v4 + 712) = 2;
  *(_QWORD *)(v4 + 720) = "BR";
  *(_QWORD *)(v4 + 728) = 2;
  *(_BYTE *)(v4 + 736) = 2;
  *(_QWORD *)(v4 + 744) = "BQ";
  *(_QWORD *)(v4 + 752) = 2;
  *(_BYTE *)(v4 + 760) = 2;
  *(_QWORD *)(v4 + 768) = "BS";
  *(_QWORD *)(v4 + 776) = 2;
  *(_BYTE *)(v4 + 784) = 2;
  *(_QWORD *)(v4 + 792) = "BT";
  *(_QWORD *)(v4 + 800) = 2;
  *(_BYTE *)(v4 + 808) = 2;
  *(_QWORD *)(v4 + 816) = "BV";
  *(_QWORD *)(v4 + 824) = 2;
  *(_BYTE *)(v4 + 832) = 2;
  *(_QWORD *)(v4 + 840) = "BW";
  *(_QWORD *)(v4 + 848) = 2;
  *(_BYTE *)(v4 + 856) = 2;
  *(_QWORD *)(v4 + 864) = "BY";
  *(_QWORD *)(v4 + 872) = 2;
  *(_BYTE *)(v4 + 880) = 2;
  *(_QWORD *)(v4 + 888) = "BZ";
  *(_QWORD *)(v4 + 896) = 2;
  *(_BYTE *)(v4 + 904) = 2;
  *(_QWORD *)(v4 + 912) = "CA";
  *(_QWORD *)(v4 + 920) = 2;
  *(_BYTE *)(v4 + 928) = 2;
  *(_QWORD *)(v4 + 936) = "CC";
  *(_QWORD *)(v4 + 944) = 2;
  *(_BYTE *)(v4 + 952) = 2;
  *(_QWORD *)(v4 + 960) = "CD";
  *(_QWORD *)(v4 + 968) = 2;
  *(_BYTE *)(v4 + 976) = 2;
  *(_QWORD *)(v4 + 984) = "CF";
  *(_QWORD *)(v4 + 992) = 2;
  *(_BYTE *)(v4 + 1000) = 2;
  *(_QWORD *)(v4 + 1008) = "CG";
  *(_QWORD *)(v4 + 1016) = 2;
  *(_BYTE *)(v4 + 1024) = 2;
  *(_QWORD *)(v4 + 1032) = "CH";
  *(_QWORD *)(v4 + 1040) = 2;
  *(_BYTE *)(v4 + 1048) = 2;
  *(_QWORD *)(v4 + 1056) = "CI";
  *(_QWORD *)(v4 + 1064) = 2;
  *(_BYTE *)(v4 + 1072) = 2;
  *(_QWORD *)(v4 + 1080) = "CK";
  *(_QWORD *)(v4 + 1088) = 2;
  *(_BYTE *)(v4 + 1096) = 2;
  *(_QWORD *)(v4 + 1104) = "CL";
  *(_QWORD *)(v4 + 1112) = 2;
  *(_BYTE *)(v4 + 1120) = 2;
  *(_QWORD *)(v4 + 1128) = "CM";
  *(_QWORD *)(v4 + 1136) = 2;
  *(_BYTE *)(v4 + 1144) = 2;
  *(_QWORD *)(v4 + 1152) = "CN";
  *(_QWORD *)(v4 + 1160) = 2;
  *(_BYTE *)(v4 + 1168) = 2;
  *(_QWORD *)(v4 + 1176) = "CO";
  *(_QWORD *)(v4 + 1184) = 2;
  *(_BYTE *)(v4 + 1192) = 2;
  *(_QWORD *)(v4 + 1200) = "CR";
  *(_QWORD *)(v4 + 1208) = 2;
  *(_BYTE *)(v4 + 1216) = 2;
  *(_QWORD *)(v4 + 1224) = "CU";
  *(_QWORD *)(v4 + 1232) = 2;
  *(_BYTE *)(v4 + 1240) = 2;
  *(_QWORD *)(v4 + 1248) = "CV";
  *(_QWORD *)(v4 + 1256) = 2;
  *(_BYTE *)(v4 + 1264) = 2;
  *(_QWORD *)(v4 + 1272) = "CW";
  *(_QWORD *)(v4 + 1280) = 2;
  *(_BYTE *)(v4 + 1288) = 2;
  *(_QWORD *)(v4 + 1296) = "CX";
  *(_QWORD *)(v4 + 1304) = 2;
  *(_BYTE *)(v4 + 1312) = 2;
  *(_QWORD *)(v4 + 1320) = "CY";
  *(_QWORD *)(v4 + 1328) = 2;
  *(_BYTE *)(v4 + 1336) = 2;
  *(_QWORD *)(v4 + 1344) = "CZ";
  *(_QWORD *)(v4 + 1352) = 2;
  *(_BYTE *)(v4 + 1360) = 2;
  *(_QWORD *)(v4 + 1368) = "DE";
  *(_QWORD *)(v4 + 1376) = 2;
  *(_BYTE *)(v4 + 1384) = 2;
  *(_QWORD *)(v4 + 1392) = "DJ";
  *(_QWORD *)(v4 + 1400) = 2;
  *(_BYTE *)(v4 + 1408) = 2;
  *(_QWORD *)(v4 + 1416) = "DK";
  *(_QWORD *)(v4 + 1424) = 2;
  *(_BYTE *)(v4 + 1432) = 2;
  *(_QWORD *)(v4 + 1440) = "DM";
  *(_QWORD *)(v4 + 1448) = 2;
  *(_BYTE *)(v4 + 1456) = 2;
  *(_QWORD *)(v4 + 1464) = "DO";
  *(_QWORD *)(v4 + 1472) = 2;
  *(_BYTE *)(v4 + 1480) = 2;
  *(_QWORD *)(v4 + 1488) = "DZ";
  *(_QWORD *)(v4 + 1496) = 2;
  *(_BYTE *)(v4 + 1504) = 2;
  *(_QWORD *)(v4 + 1512) = "EC";
  *(_QWORD *)(v4 + 1520) = 2;
  *(_BYTE *)(v4 + 1528) = 2;
  *(_QWORD *)(v4 + 1536) = "EE";
  *(_QWORD *)(v4 + 1544) = 2;
  *(_BYTE *)(v4 + 1552) = 2;
  *(_QWORD *)(v4 + 1560) = "EG";
  *(_QWORD *)(v4 + 1568) = 2;
  *(_BYTE *)(v4 + 1576) = 2;
  *(_QWORD *)(v4 + 1584) = "EH";
  *(_QWORD *)(v4 + 1592) = 2;
  *(_BYTE *)(v4 + 1600) = 2;
  *(_QWORD *)(v4 + 1608) = "ER";
  *(_QWORD *)(v4 + 1616) = 2;
  *(_BYTE *)(v4 + 1624) = 2;
  *(_QWORD *)(v4 + 1632) = "ES";
  *(_QWORD *)(v4 + 1640) = 2;
  *(_BYTE *)(v4 + 1648) = 2;
  *(_QWORD *)(v4 + 1656) = "ET";
  *(_QWORD *)(v4 + 1664) = 2;
  *(_BYTE *)(v4 + 1672) = 2;
  *(_QWORD *)(v4 + 1680) = "FI";
  *(_QWORD *)(v4 + 1688) = 2;
  *(_BYTE *)(v4 + 1696) = 2;
  *(_QWORD *)(v4 + 1704) = "FJ";
  *(_QWORD *)(v4 + 1712) = 2;
  *(_BYTE *)(v4 + 1720) = 2;
  *(_QWORD *)(v4 + 1728) = "FK";
  *(_QWORD *)(v4 + 1736) = 2;
  *(_QWORD *)(v4 + 1752) = "FM";
  *(_QWORD *)(v4 + 1776) = "FO";
  *(_QWORD *)(v4 + 1800) = "FR";
  *(_QWORD *)(v4 + 1824) = "FU";
  *(_QWORD *)(v4 + 1848) = "GA";
  *(_QWORD *)(v4 + 1872) = "GB";
  *(_QWORD *)(v4 + 1896) = "GD";
  *(_QWORD *)(v4 + 1920) = "GE";
  *(_QWORD *)(v4 + 1944) = "GF";
  *(_QWORD *)(v4 + 1968) = "GG";
  *(_QWORD *)(v4 + 1992) = "GH";
  *(_QWORD *)(v4 + 2184) = "GS";
  *(_QWORD *)(v4 + 2280) = "GY";
  *(_QWORD *)(v4 + 2376) = "HR";
  *(_QWORD *)(v4 + 2472) = "IE";
  *(_QWORD *)(v4 + 2568) = "IO";
  *(_QWORD *)(v4 + 2664) = "IT";
  *(_QWORD *)(v4 + 2760) = "JP";
  *(_QWORD *)(v4 + 2856) = "KI";
  *(_QWORD *)(v4 + 2952) = "KR";
  *(_QWORD *)(v4 + 3048) = "LA";
  *(_QWORD *)(v4 + 3144) = "LK";
  *(_QWORD *)(v4 + 3240) = "LU";
  *(_QWORD *)(v4 + 3336) = "MC";
  *(_QWORD *)(v4 + 3432) = "MG";
  *(_QWORD *)(v4 + 3528) = "MM";
  *(_QWORD *)(v4 + 3624) = "MQ";
  *(_QWORD *)(v4 + 3720) = "MU";
  *(_QWORD *)(v4 + 3816) = "MY";
  *(_QWORD *)(v4 + 3912) = "NE";
  *(_QWORD *)(v4 + 4008) = "NL";
  *(_BYTE *)(v4 + 1744) = 2;
  *(_QWORD *)(v4 + 4056) = "NP";
  *(_QWORD *)(v4 + 4040) = 2;
  *(_BYTE *)(v4 + 4048) = 2;
  *(_QWORD *)(v4 + 1760) = 2;
  *(_QWORD *)(v4 + 4032) = "NO";
  *(_QWORD *)(v4 + 4016) = 2;
  *(_BYTE *)(v4 + 4024) = 2;
  *(_QWORD *)(v4 + 3984) = "NI";
  *(_BYTE *)(v4 + 3976) = 2;
  *(_QWORD *)(v4 + 3992) = 2;
  *(_BYTE *)(v4 + 4000) = 2;
  *(_QWORD *)(v4 + 3960) = "NG";
  *(_QWORD *)(v4 + 3944) = 2;
  *(_BYTE *)(v4 + 3952) = 2;
  *(_QWORD *)(v4 + 3968) = 2;
  *(_BYTE *)(v4 + 1768) = 2;
  *(_QWORD *)(v4 + 3936) = "NF";
  *(_QWORD *)(v4 + 3920) = 2;
  *(_BYTE *)(v4 + 3928) = 2;
  *(_QWORD *)(v4 + 3888) = "NC";
  *(_BYTE *)(v4 + 3880) = 2;
  *(_QWORD *)(v4 + 3896) = 2;
  *(_BYTE *)(v4 + 3904) = 2;
  *(_QWORD *)(v4 + 3864) = "NA";
  *(_QWORD *)(v4 + 3848) = 2;
  *(_BYTE *)(v4 + 3856) = 2;
  *(_QWORD *)(v4 + 3872) = 2;
  *(_QWORD *)(v4 + 1784) = 2;
  *(_QWORD *)(v4 + 3840) = "MZ";
  *(_QWORD *)(v4 + 3824) = 2;
  *(_BYTE *)(v4 + 3832) = 2;
  *(_QWORD *)(v4 + 3792) = "MX";
  *(_BYTE *)(v4 + 3784) = 2;
  *(_QWORD *)(v4 + 3800) = 2;
  *(_BYTE *)(v4 + 3808) = 2;
  *(_QWORD *)(v4 + 3768) = "MW";
  *(_QWORD *)(v4 + 3752) = 2;
  *(_BYTE *)(v4 + 3760) = 2;
  *(_QWORD *)(v4 + 3776) = 2;
  *(_BYTE *)(v4 + 1792) = 2;
  *(_QWORD *)(v4 + 3744) = "MV";
  *(_QWORD *)(v4 + 3728) = 2;
  *(_BYTE *)(v4 + 3736) = 2;
  *(_QWORD *)(v4 + 3696) = "MT";
  *(_BYTE *)(v4 + 3688) = 2;
  *(_QWORD *)(v4 + 3704) = 2;
  *(_BYTE *)(v4 + 3712) = 2;
  *(_QWORD *)(v4 + 3672) = "MS";
  *(_QWORD *)(v4 + 3656) = 2;
  *(_BYTE *)(v4 + 3664) = 2;
  *(_QWORD *)(v4 + 3680) = 2;
  *(_QWORD *)(v4 + 1808) = 2;
  *(_QWORD *)(v4 + 3648) = "MR";
  *(_QWORD *)(v4 + 3632) = 2;
  *(_BYTE *)(v4 + 3640) = 2;
  *(_QWORD *)(v4 + 3600) = "MP";
  *(_BYTE *)(v4 + 3592) = 2;
  *(_QWORD *)(v4 + 3608) = 2;
  *(_BYTE *)(v4 + 3616) = 2;
  *(_QWORD *)(v4 + 3576) = "MO";
  *(_QWORD *)(v4 + 3560) = 2;
  *(_BYTE *)(v4 + 3568) = 2;
  *(_QWORD *)(v4 + 3584) = 2;
  *(_BYTE *)(v4 + 1816) = 2;
  *(_QWORD *)(v4 + 3552) = "MN";
  *(_QWORD *)(v4 + 3536) = 2;
  *(_BYTE *)(v4 + 3544) = 2;
  *(_QWORD *)(v4 + 3504) = "ML";
  *(_BYTE *)(v4 + 3496) = 2;
  *(_QWORD *)(v4 + 3512) = 2;
  *(_BYTE *)(v4 + 3520) = 2;
  *(_QWORD *)(v4 + 3480) = "MK";
  *(_QWORD *)(v4 + 3464) = 2;
  *(_BYTE *)(v4 + 3472) = 2;
  *(_QWORD *)(v4 + 3488) = 2;
  *(_QWORD *)(v4 + 1832) = 2;
  *(_QWORD *)(v4 + 3456) = "MH";
  *(_QWORD *)(v4 + 3440) = 2;
  *(_BYTE *)(v4 + 3448) = 2;
  *(_QWORD *)(v4 + 3408) = "MF";
  *(_BYTE *)(v4 + 3400) = 2;
  *(_QWORD *)(v4 + 3416) = 2;
  *(_BYTE *)(v4 + 3424) = 2;
  *(_QWORD *)(v4 + 3384) = "ME";
  *(_QWORD *)(v4 + 3368) = 2;
  *(_BYTE *)(v4 + 3376) = 2;
  *(_QWORD *)(v4 + 3392) = 2;
  *(_BYTE *)(v4 + 1840) = 2;
  *(_QWORD *)(v4 + 3360) = "MD";
  *(_QWORD *)(v4 + 3344) = 2;
  *(_BYTE *)(v4 + 3352) = 2;
  *(_QWORD *)(v4 + 3312) = "MA";
  *(_BYTE *)(v4 + 3304) = 2;
  *(_QWORD *)(v4 + 3320) = 2;
  *(_BYTE *)(v4 + 3328) = 2;
  *(_QWORD *)(v4 + 3288) = "LY";
  *(_QWORD *)(v4 + 3272) = 2;
  *(_BYTE *)(v4 + 3280) = 2;
  *(_QWORD *)(v4 + 3296) = 2;
  *(_QWORD *)(v4 + 1856) = 2;
  *(_QWORD *)(v4 + 3264) = "LV";
  *(_QWORD *)(v4 + 3248) = 2;
  *(_BYTE *)(v4 + 3256) = 2;
  *(_QWORD *)(v4 + 3216) = "LT";
  *(_BYTE *)(v4 + 3208) = 2;
  *(_QWORD *)(v4 + 3224) = 2;
  *(_BYTE *)(v4 + 3232) = 2;
  *(_QWORD *)(v4 + 3192) = "LS";
  *(_QWORD *)(v4 + 3176) = 2;
  *(_BYTE *)(v4 + 3184) = 2;
  *(_QWORD *)(v4 + 3200) = 2;
  *(_BYTE *)(v4 + 1864) = 2;
  *(_QWORD *)(v4 + 3168) = "LR";
  *(_QWORD *)(v4 + 3152) = 2;
  *(_BYTE *)(v4 + 3160) = 2;
  *(_QWORD *)(v4 + 3120) = "LI";
  *(_BYTE *)(v4 + 3112) = 2;
  *(_QWORD *)(v4 + 3128) = 2;
  *(_BYTE *)(v4 + 3136) = 2;
  *(_QWORD *)(v4 + 3096) = "LC";
  *(_QWORD *)(v4 + 3080) = 2;
  *(_BYTE *)(v4 + 3088) = 2;
  *(_QWORD *)(v4 + 3104) = 2;
  *(_QWORD *)(v4 + 1880) = 2;
  *(_QWORD *)(v4 + 3072) = "LB";
  *(_QWORD *)(v4 + 3056) = 2;
  *(_BYTE *)(v4 + 3064) = 2;
  *(_QWORD *)(v4 + 3024) = "KZ";
  *(_BYTE *)(v4 + 3016) = 2;
  *(_QWORD *)(v4 + 3032) = 2;
  *(_BYTE *)(v4 + 3040) = 2;
  *(_QWORD *)(v4 + 3000) = "KY";
  *(_QWORD *)(v4 + 2984) = 2;
  *(_BYTE *)(v4 + 2992) = 2;
  *(_QWORD *)(v4 + 3008) = 2;
  *(_BYTE *)(v4 + 1888) = 2;
  *(_QWORD *)(v4 + 2976) = "KW";
  *(_QWORD *)(v4 + 2960) = 2;
  *(_BYTE *)(v4 + 2968) = 2;
  *(_QWORD *)(v4 + 2928) = "KP";
  *(_BYTE *)(v4 + 2920) = 2;
  *(_QWORD *)(v4 + 2936) = 2;
  *(_BYTE *)(v4 + 2944) = 2;
  *(_QWORD *)(v4 + 2904) = "KN";
  *(_QWORD *)(v4 + 2888) = 2;
  *(_BYTE *)(v4 + 2896) = 2;
  *(_QWORD *)(v4 + 2912) = 2;
  *(_QWORD *)(v4 + 1904) = 2;
  *(_QWORD *)(v4 + 2880) = "KM";
  *(_QWORD *)(v4 + 2864) = 2;
  *(_BYTE *)(v4 + 2872) = 2;
  *(_QWORD *)(v4 + 2832) = "KH";
  *(_BYTE *)(v4 + 2824) = 2;
  *(_QWORD *)(v4 + 2840) = 2;
  *(_BYTE *)(v4 + 2848) = 2;
  *(_QWORD *)(v4 + 2808) = "KG";
  *(_QWORD *)(v4 + 2792) = 2;
  *(_BYTE *)(v4 + 2800) = 2;
  *(_QWORD *)(v4 + 2816) = 2;
  *(_BYTE *)(v4 + 1912) = 2;
  *(_QWORD *)(v4 + 2784) = "KE";
  *(_QWORD *)(v4 + 2768) = 2;
  *(_BYTE *)(v4 + 2776) = 2;
  *(_QWORD *)(v4 + 2736) = "JO";
  *(_BYTE *)(v4 + 2728) = 2;
  *(_QWORD *)(v4 + 2744) = 2;
  *(_BYTE *)(v4 + 2752) = 2;
  *(_QWORD *)(v4 + 2712) = "JM";
  *(_QWORD *)(v4 + 2696) = 2;
  *(_BYTE *)(v4 + 2704) = 2;
  *(_QWORD *)(v4 + 2720) = 2;
  *(_QWORD *)(v4 + 1928) = 2;
  *(_QWORD *)(v4 + 2688) = "JE";
  *(_QWORD *)(v4 + 2672) = 2;
  *(_BYTE *)(v4 + 2680) = 2;
  *(_QWORD *)(v4 + 2640) = "IS";
  *(_BYTE *)(v4 + 2632) = 2;
  *(_QWORD *)(v4 + 2648) = 2;
  *(_BYTE *)(v4 + 2656) = 2;
  *(_QWORD *)(v4 + 2616) = "IR";
  *(_QWORD *)(v4 + 2600) = 2;
  *(_BYTE *)(v4 + 2608) = 2;
  *(_QWORD *)(v4 + 2624) = 2;
  *(_BYTE *)(v4 + 1936) = 2;
  *(_QWORD *)(v4 + 2592) = "IQ";
  *(_QWORD *)(v4 + 2576) = 2;
  *(_BYTE *)(v4 + 2584) = 2;
  *(_QWORD *)(v4 + 2544) = "IN";
  *(_BYTE *)(v4 + 2536) = 2;
  *(_QWORD *)(v4 + 2552) = 2;
  *(_BYTE *)(v4 + 2560) = 2;
  *(_QWORD *)(v4 + 2520) = "IM";
  *(_QWORD *)(v4 + 2504) = 2;
  *(_BYTE *)(v4 + 2512) = 2;
  *(_QWORD *)(v4 + 2528) = 2;
  *(_QWORD *)(v4 + 1952) = 2;
  *(_QWORD *)(v4 + 2496) = "IL";
  *(_QWORD *)(v4 + 2480) = 2;
  *(_BYTE *)(v4 + 2488) = 2;
  *(_QWORD *)(v4 + 2448) = "ID";
  *(_BYTE *)(v4 + 2440) = 2;
  *(_QWORD *)(v4 + 2456) = 2;
  *(_BYTE *)(v4 + 2464) = 2;
  *(_QWORD *)(v4 + 2424) = "HU";
  *(_QWORD *)(v4 + 2408) = 2;
  *(_BYTE *)(v4 + 2416) = 2;
  *(_QWORD *)(v4 + 2432) = 2;
  *(_BYTE *)(v4 + 1960) = 2;
  *(_QWORD *)(v4 + 2400) = "HT";
  *(_QWORD *)(v4 + 2384) = 2;
  *(_BYTE *)(v4 + 2392) = 2;
  *(_QWORD *)(v4 + 2352) = "HN";
  *(_BYTE *)(v4 + 2344) = 2;
  *(_QWORD *)(v4 + 2360) = 2;
  *(_BYTE *)(v4 + 2368) = 2;
  *(_QWORD *)(v4 + 2328) = "HM";
  *(_QWORD *)(v4 + 2312) = 2;
  *(_BYTE *)(v4 + 2320) = 2;
  *(_QWORD *)(v4 + 2336) = 2;
  *(_QWORD *)(v4 + 1976) = 2;
  *(_QWORD *)(v4 + 2304) = "HK";
  *(_QWORD *)(v4 + 2288) = 2;
  *(_BYTE *)(v4 + 2296) = 2;
  *(_QWORD *)(v4 + 2256) = "GW";
  *(_BYTE *)(v4 + 2248) = 2;
  *(_QWORD *)(v4 + 2264) = 2;
  *(_BYTE *)(v4 + 2272) = 2;
  *(_QWORD *)(v4 + 2232) = "GU";
  *(_QWORD *)(v4 + 2216) = 2;
  *(_BYTE *)(v4 + 2224) = 2;
  *(_QWORD *)(v4 + 2240) = 2;
  *(_BYTE *)(v4 + 1984) = 2;
  *(_QWORD *)(v4 + 2208) = "GT";
  *(_QWORD *)(v4 + 2192) = 2;
  *(_BYTE *)(v4 + 2200) = 2;
  *(_QWORD *)(v4 + 2160) = "GR";
  *(_BYTE *)(v4 + 2152) = 2;
  *(_QWORD *)(v4 + 2168) = 2;
  *(_BYTE *)(v4 + 2176) = 2;
  *(_QWORD *)(v4 + 2136) = "GQ";
  *(_QWORD *)(v4 + 2120) = 2;
  *(_BYTE *)(v4 + 2128) = 2;
  *(_QWORD *)(v4 + 2144) = 2;
  *(_QWORD *)(v4 + 2000) = 2;
  *(_QWORD *)(v4 + 2112) = "GP";
  *(_QWORD *)(v4 + 2096) = 2;
  *(_BYTE *)(v4 + 2104) = 2;
  *(_QWORD *)(v4 + 2064) = "GM";
  *(_QWORD *)(v4 + 2072) = 2;
  *(_BYTE *)(v4 + 2080) = 2;
  *(_QWORD *)(v4 + 2088) = "GN";
  *(_BYTE *)(v4 + 2032) = 2;
  *(_QWORD *)(v4 + 2040) = "GL";
  *(_QWORD *)(v4 + 2048) = 2;
  *(_BYTE *)(v4 + 2056) = 2;
  *(_BYTE *)(v4 + 2008) = 2;
  *(_QWORD *)(v4 + 2016) = "GI";
  *(_QWORD *)(v4 + 2024) = 2;
  *(_QWORD *)(v4 + 4064) = 2;
  *(_BYTE *)(v4 + 4072) = 2;
  *(_QWORD *)(v4 + 4080) = "NR";
  *(_QWORD *)(v4 + 4088) = 2;
  *(_BYTE *)(v4 + 4096) = 2;
  *(_QWORD *)(v4 + 4104) = "NU";
  *(_QWORD *)(v4 + 4112) = 2;
  *(_BYTE *)(v4 + 4120) = 2;
  *(_QWORD *)(v4 + 4128) = "NZ";
  *(_QWORD *)(v4 + 4136) = 2;
  *(_BYTE *)(v4 + 4144) = 2;
  *(_QWORD *)(v4 + 4152) = "OM";
  *(_QWORD *)(v4 + 4160) = 2;
  *(_BYTE *)(v4 + 4168) = 2;
  *(_QWORD *)(v4 + 4176) = "PA";
  *(_QWORD *)(v4 + 4184) = 2;
  *(_BYTE *)(v4 + 4192) = 2;
  *(_QWORD *)(v4 + 4200) = "PE";
  *(_QWORD *)(v4 + 4208) = 2;
  *(_BYTE *)(v4 + 4216) = 2;
  *(_QWORD *)(v4 + 4224) = "PF";
  *(_QWORD *)(v4 + 4232) = 2;
  *(_BYTE *)(v4 + 4240) = 2;
  *(_QWORD *)(v4 + 4248) = "PG";
  *(_QWORD *)(v4 + 4256) = 2;
  *(_BYTE *)(v4 + 4264) = 2;
  *(_QWORD *)(v4 + 4272) = "PH";
  *(_QWORD *)(v4 + 4280) = 2;
  *(_BYTE *)(v4 + 4288) = 2;
  *(_QWORD *)(v4 + 4296) = "PI";
  *(_QWORD *)(v4 + 4304) = 2;
  *(_BYTE *)(v4 + 4312) = 2;
  *(_QWORD *)(v4 + 4320) = "PK";
  *(_QWORD *)(v4 + 4328) = 2;
  *(_BYTE *)(v4 + 4336) = 2;
  *(_QWORD *)(v4 + 4344) = "PL";
  *(_QWORD *)(v4 + 4352) = 2;
  *(_BYTE *)(v4 + 4360) = 2;
  *(_QWORD *)(v4 + 4368) = "PM";
  *(_QWORD *)(v4 + 4376) = 2;
  *(_BYTE *)(v4 + 4384) = 2;
  *(_QWORD *)(v4 + 4392) = "PN";
  *(_QWORD *)(v4 + 4400) = 2;
  *(_BYTE *)(v4 + 4408) = 2;
  *(_QWORD *)(v4 + 4416) = "PR";
  *(_QWORD *)(v4 + 4424) = 2;
  *(_BYTE *)(v4 + 4432) = 2;
  *(_QWORD *)(v4 + 4440) = "PS";
  *(_QWORD *)(v4 + 4448) = 2;
  *(_BYTE *)(v4 + 4456) = 2;
  *(_QWORD *)(v4 + 4464) = "PT";
  *(_QWORD *)(v4 + 4472) = 2;
  *(_BYTE *)(v4 + 4480) = 2;
  *(_QWORD *)(v4 + 4488) = "PW";
  *(_QWORD *)(v4 + 4496) = 2;
  *(_BYTE *)(v4 + 4504) = 2;
  *(_QWORD *)(v4 + 4512) = "PY";
  *(_QWORD *)(v4 + 4520) = 2;
  *(_BYTE *)(v4 + 4528) = 2;
  *(_QWORD *)(v4 + 4536) = "QA";
  *(_QWORD *)(v4 + 4544) = 2;
  *(_BYTE *)(v4 + 4552) = 2;
  *(_QWORD *)(v4 + 4560) = "RE";
  *(_QWORD *)(v4 + 4568) = 2;
  *(_BYTE *)(v4 + 4576) = 2;
  *(_QWORD *)(v4 + 4584) = "RO";
  *(_QWORD *)(v4 + 4592) = 2;
  *(_BYTE *)(v4 + 4600) = 2;
  *(_QWORD *)(v4 + 4608) = "RS";
  *(_QWORD *)(v4 + 4616) = 2;
  *(_BYTE *)(v4 + 4624) = 2;
  *(_QWORD *)(v4 + 4632) = "RU";
  *(_QWORD *)(v4 + 4640) = 2;
  *(_BYTE *)(v4 + 4648) = 2;
  *(_QWORD *)(v4 + 4656) = "RW";
  *(_QWORD *)(v4 + 4664) = 2;
  *(_BYTE *)(v4 + 4672) = 2;
  *(_QWORD *)(v4 + 4680) = "SA";
  *(_QWORD *)(v4 + 4688) = 2;
  *(_BYTE *)(v4 + 4696) = 2;
  *(_QWORD *)(v4 + 4704) = "SB";
  *(_QWORD *)(v4 + 4712) = 2;
  *(_BYTE *)(v4 + 4720) = 2;
  *(_QWORD *)(v4 + 4728) = "SC";
  *(_QWORD *)(v4 + 4736) = 2;
  *(_BYTE *)(v4 + 4744) = 2;
  *(_QWORD *)(v4 + 4752) = "SD";
  *(_QWORD *)(v4 + 4760) = 2;
  *(_BYTE *)(v4 + 4768) = 2;
  *(_QWORD *)(v4 + 4776) = "SE";
  *(_QWORD *)(v4 + 4784) = 2;
  *(_BYTE *)(v4 + 4792) = 2;
  *(_QWORD *)(v4 + 4800) = "SG";
  *(_QWORD *)(v4 + 4808) = 2;
  *(_BYTE *)(v4 + 4816) = 2;
  *(_QWORD *)(v4 + 4824) = "SH";
  *(_QWORD *)(v4 + 4832) = 2;
  *(_BYTE *)(v4 + 4840) = 2;
  *(_QWORD *)(v4 + 4848) = "SI";
  *(_QWORD *)(v4 + 4856) = 2;
  *(_BYTE *)(v4 + 4864) = 2;
  *(_QWORD *)(v4 + 4872) = "SJ";
  *(_QWORD *)(v4 + 4880) = 2;
  *(_BYTE *)(v4 + 4888) = 2;
  *(_QWORD *)(v4 + 4896) = "SK";
  *(_QWORD *)(v4 + 4904) = 2;
  *(_BYTE *)(v4 + 4912) = 2;
  *(_QWORD *)(v4 + 4920) = "SL";
  *(_QWORD *)(v4 + 4928) = 2;
  *(_BYTE *)(v4 + 4936) = 2;
  *(_QWORD *)(v4 + 4944) = "SM";
  *(_QWORD *)(v4 + 4952) = 2;
  *(_BYTE *)(v4 + 4960) = 2;
  *(_QWORD *)(v4 + 4968) = "SN";
  *(_QWORD *)(v4 + 4976) = 2;
  *(_BYTE *)(v4 + 4984) = 2;
  *(_QWORD *)(v4 + 4992) = "SO";
  *(_QWORD *)(v4 + 5000) = 2;
  *(_BYTE *)(v4 + 5008) = 2;
  *(_QWORD *)(v4 + 5016) = "SR";
  *(_QWORD *)(v4 + 5024) = 2;
  *(_BYTE *)(v4 + 5032) = 2;
  *(_QWORD *)(v4 + 5040) = "SS";
  *(_QWORD *)(v4 + 5048) = 2;
  *(_BYTE *)(v4 + 5056) = 2;
  *(_QWORD *)(v4 + 5064) = "ST";
  *(_QWORD *)(v4 + 5072) = 2;
  *(_BYTE *)(v4 + 5080) = 2;
  *(_QWORD *)(v4 + 5088) = "SX";
  *(_QWORD *)(v4 + 5096) = 2;
  *(_BYTE *)(v4 + 5104) = 2;
  *(_QWORD *)(v4 + 5112) = "SV";
  *(_QWORD *)(v4 + 5120) = 2;
  *(_BYTE *)(v4 + 5128) = 2;
  *(_QWORD *)(v4 + 5136) = "SY";
  *(_QWORD *)(v4 + 5144) = 2;
  *(_BYTE *)(v4 + 5152) = 2;
  *(_QWORD *)(v4 + 5160) = "SZ";
  *(_QWORD *)(v4 + 5168) = 2;
  *(_BYTE *)(v4 + 5176) = 2;
  *(_QWORD *)(v4 + 5184) = "TC";
  *(_QWORD *)(v4 + 5192) = 2;
  *(_BYTE *)(v4 + 5200) = 2;
  *(_QWORD *)(v4 + 5208) = "TD";
  *(_QWORD *)(v4 + 5216) = 2;
  *(_BYTE *)(v4 + 5224) = 2;
  *(_QWORD *)(v4 + 5232) = "TF";
  *(_QWORD *)(v4 + 5240) = 2;
  *(_BYTE *)(v4 + 5248) = 2;
  *(_QWORD *)(v4 + 5256) = "TG";
  *(_QWORD *)(v4 + 5264) = 2;
  *(_BYTE *)(v4 + 5272) = 2;
  *(_QWORD *)(v4 + 5280) = "TH";
  *(_QWORD *)(v4 + 5288) = 2;
  *(_BYTE *)(v4 + 5296) = 2;
  *(_QWORD *)(v4 + 5304) = "TJ";
  *(_QWORD *)(v4 + 5312) = 2;
  *(_BYTE *)(v4 + 5320) = 2;
  *(_QWORD *)(v4 + 5328) = "TK";
  *(_QWORD *)(v4 + 5336) = 2;
  *(_BYTE *)(v4 + 5344) = 2;
  *(_QWORD *)(v4 + 5352) = "TL";
  *(_QWORD *)(v4 + 5360) = 2;
  *(_BYTE *)(v4 + 5368) = 2;
  *(_QWORD *)(v4 + 5376) = "TM";
  *(_QWORD *)(v4 + 5384) = 2;
  *(_BYTE *)(v4 + 5392) = 2;
  *(_QWORD *)(v4 + 5400) = "TN";
  *(_QWORD *)(v4 + 5408) = 2;
  *(_BYTE *)(v4 + 5416) = 2;
  *(_QWORD *)(v4 + 5424) = "TO";
  *(_QWORD *)(v4 + 5432) = 2;
  *(_BYTE *)(v4 + 5440) = 2;
  *(_QWORD *)(v4 + 5448) = "TR";
  *(_QWORD *)(v4 + 5456) = 2;
  *(_BYTE *)(v4 + 5464) = 2;
  *(_QWORD *)(v4 + 5472) = "TT";
  *(_QWORD *)(v4 + 5480) = 2;
  *(_BYTE *)(v4 + 5488) = 2;
  *(_QWORD *)(v4 + 5496) = "TV";
  *(_QWORD *)(v4 + 5504) = 2;
  *(_BYTE *)(v4 + 5512) = 2;
  *(_QWORD *)(v4 + 5520) = "TW";
  *(_QWORD *)(v4 + 5528) = 2;
  *(_BYTE *)(v4 + 5536) = 2;
  *(_QWORD *)(v4 + 5544) = "TZ";
  *(_QWORD *)(v4 + 5552) = 2;
  *(_BYTE *)(v4 + 5560) = 2;
  *(_QWORD *)(v4 + 5568) = "UA";
  *(_QWORD *)(v4 + 5576) = 2;
  *(_BYTE *)(v4 + 5584) = 2;
  *(_QWORD *)(v4 + 5592) = "UG";
  *(_QWORD *)(v4 + 5600) = 2;
  *(_BYTE *)(v4 + 5608) = 2;
  *(_QWORD *)(v4 + 5616) = "UM";
  *(_QWORD *)(v4 + 5624) = 2;
  *(_BYTE *)(v4 + 5632) = 2;
  *(_QWORD *)(v4 + 5640) = "US";
  *(_QWORD *)(v4 + 5648) = 2;
  *(_BYTE *)(v4 + 5656) = 2;
  *(_QWORD *)(v4 + 5664) = "UY";
  *(_QWORD *)(v4 + 5672) = 2;
  *(_BYTE *)(v4 + 5680) = 2;
  *(_QWORD *)(v4 + 5688) = "UZ";
  *(_QWORD *)(v4 + 5696) = 2;
  *(_BYTE *)(v4 + 5704) = 2;
  *(_QWORD *)(v4 + 5712) = "VA";
  *(_QWORD *)(v4 + 5720) = 2;
  *(_BYTE *)(v4 + 5728) = 2;
  *(_QWORD *)(v4 + 5736) = "VC";
  *(_QWORD *)(v4 + 5744) = 2;
  *(_BYTE *)(v4 + 5752) = 2;
  *(_QWORD *)(v4 + 5760) = "VE";
  *(_QWORD *)(v4 + 5768) = 2;
  *(_BYTE *)(v4 + 5776) = 2;
  *(_QWORD *)(v4 + 5784) = "VG";
  *(_QWORD *)(v4 + 5792) = 2;
  *(_BYTE *)(v4 + 5800) = 2;
  *(_QWORD *)(v4 + 5808) = "VI";
  *(_QWORD *)(v4 + 5816) = 2;
  *(_BYTE *)(v4 + 5824) = 2;
  *(_QWORD *)(v4 + 5832) = "VN";
  *(_QWORD *)(v4 + 5840) = 2;
  *(_BYTE *)(v4 + 5848) = 2;
  *(_QWORD *)(v4 + 5856) = "VT";
  *(_QWORD *)(v4 + 5864) = 2;
  *(_BYTE *)(v4 + 5872) = 2;
  *(_QWORD *)(v4 + 5880) = "VU";
  *(_QWORD *)(v4 + 5888) = 2;
  *(_BYTE *)(v4 + 5896) = 2;
  *(_QWORD *)(v4 + 5904) = "WF";
  *(_QWORD *)(v4 + 5912) = 2;
  *(_BYTE *)(v4 + 5920) = 2;
  *(_QWORD *)(v4 + 5928) = "WS";
  *(_QWORD *)(v4 + 5936) = 2;
  *(_BYTE *)(v4 + 5944) = 2;
  *(_QWORD *)(v4 + 5952) = "YE";
  *(_QWORD *)(v4 + 5960) = 2;
  *(_BYTE *)(v4 + 5968) = 2;
  *(_QWORD *)(v4 + 5976) = "YT";
  *(_QWORD *)(v4 + 5984) = 2;
  *(_BYTE *)(v4 + 5992) = 2;
  *(_QWORD *)(v4 + 6000) = "YY";
  *(_QWORD *)(v4 + 6008) = 2;
  *(_BYTE *)(v4 + 6016) = 2;
  *(_QWORD *)(v4 + 6024) = "ZA";
  *(_QWORD *)(v4 + 6032) = 2;
  *(_BYTE *)(v4 + 6040) = 2;
  *(_QWORD *)(v4 + 6048) = "ZM";
  *(_QWORD *)(v4 + 6056) = 2;
  *(_BYTE *)(v4 + 6064) = 2;
  *(_QWORD *)(v4 + 6072) = "ZW";
  *(_QWORD *)(v4 + 6080) = 2;
  *(_BYTE *)(v4 + 6088) = 2;
  *(_QWORD *)(v4 + 6096) = "ZZ";
  *(_QWORD *)(v4 + 6104) = 2;
  *(_BYTE *)(v4 + 6112) = 2;
  nullsub_1(v3);
  v5 = sub_1C030484C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5 < 0x80)
    goto LABEL_4;
  if ((v5 & 0xFFFFFFFFFFFFFFC0) == 0x80)
  {
    LOBYTE(v5) = v5 | 0x80;
LABEL_4:
    v6 = v5;
    goto LABEL_5;
  }
  v7 = v5 - 192;
  v6 = -19;
  LOBYTE(v5) = -64;
  switch(v7)
  {
    case 0uLL:
      goto LABEL_4;
    case 1uLL:
      LOBYTE(v5) = -63;
      goto LABEL_4;
    case 2uLL:
      LOBYTE(v5) = -62;
      goto LABEL_4;
    case 3uLL:
      LOBYTE(v5) = -61;
      goto LABEL_4;
    case 4uLL:
      LOBYTE(v5) = -60;
      goto LABEL_4;
    case 5uLL:
      LOBYTE(v5) = -59;
      goto LABEL_4;
    case 6uLL:
      LOBYTE(v5) = -58;
      goto LABEL_4;
    case 7uLL:
      LOBYTE(v5) = -57;
      goto LABEL_4;
    case 8uLL:
      LOBYTE(v5) = -56;
      goto LABEL_4;
    case 9uLL:
      LOBYTE(v5) = -55;
      goto LABEL_4;
    case 0xAuLL:
      LOBYTE(v5) = -54;
      goto LABEL_4;
    case 0xBuLL:
      LOBYTE(v5) = -53;
      goto LABEL_4;
    case 0xCuLL:
      LOBYTE(v5) = -52;
      goto LABEL_4;
    case 0xDuLL:
      LOBYTE(v5) = -51;
      goto LABEL_4;
    case 0xEuLL:
      LOBYTE(v5) = -50;
      goto LABEL_4;
    case 0xFuLL:
      LOBYTE(v5) = -49;
      goto LABEL_4;
    case 0x10uLL:
      LOBYTE(v5) = -48;
      goto LABEL_4;
    case 0x11uLL:
      LOBYTE(v5) = -47;
      goto LABEL_4;
    case 0x12uLL:
      LOBYTE(v5) = -46;
      goto LABEL_4;
    case 0x13uLL:
      LOBYTE(v5) = -45;
      goto LABEL_4;
    case 0x14uLL:
      LOBYTE(v5) = -44;
      goto LABEL_4;
    case 0x15uLL:
      LOBYTE(v5) = -43;
      goto LABEL_4;
    case 0x16uLL:
      LOBYTE(v5) = -42;
      goto LABEL_4;
    case 0x17uLL:
      LOBYTE(v5) = -41;
      goto LABEL_4;
    case 0x18uLL:
      LOBYTE(v5) = -40;
      goto LABEL_4;
    case 0x19uLL:
      LOBYTE(v5) = -39;
      goto LABEL_4;
    case 0x1AuLL:
      LOBYTE(v5) = -38;
      goto LABEL_4;
    case 0x1BuLL:
      LOBYTE(v5) = -37;
      goto LABEL_4;
    case 0x1CuLL:
      LOBYTE(v5) = -36;
      goto LABEL_4;
    case 0x1DuLL:
      LOBYTE(v5) = -35;
      goto LABEL_4;
    case 0x1EuLL:
      LOBYTE(v5) = -34;
      goto LABEL_4;
    case 0x1FuLL:
      LOBYTE(v5) = -33;
      goto LABEL_4;
    case 0x20uLL:
      LOBYTE(v5) = -32;
      goto LABEL_4;
    case 0x21uLL:
      LOBYTE(v5) = -31;
      goto LABEL_4;
    case 0x22uLL:
      LOBYTE(v5) = -30;
      goto LABEL_4;
    case 0x23uLL:
      LOBYTE(v5) = -29;
      goto LABEL_4;
    case 0x24uLL:
      LOBYTE(v5) = -28;
      goto LABEL_4;
    case 0x25uLL:
      LOBYTE(v5) = -27;
      goto LABEL_4;
    case 0x26uLL:
      LOBYTE(v5) = -26;
      goto LABEL_4;
    case 0x27uLL:
      LOBYTE(v5) = -25;
      goto LABEL_4;
    case 0x28uLL:
      LOBYTE(v5) = -24;
      goto LABEL_4;
    case 0x29uLL:
      LOBYTE(v5) = -23;
      goto LABEL_4;
    case 0x2AuLL:
      LOBYTE(v5) = -22;
      goto LABEL_4;
    case 0x2BuLL:
      LOBYTE(v5) = -21;
      goto LABEL_4;
    case 0x2CuLL:
      LOBYTE(v5) = -20;
      goto LABEL_4;
    case 0x2DuLL:
      break;
    case 0x2EuLL:
      v6 = -18;
      break;
    case 0x2FuLL:
      v6 = -17;
      break;
    case 0x30uLL:
      v6 = -16;
      break;
    case 0x31uLL:
      v6 = -15;
      break;
    case 0x32uLL:
      v6 = -14;
      break;
    case 0x33uLL:
      v6 = -13;
      break;
    case 0x34uLL:
      v6 = -12;
      break;
    case 0x35uLL:
      v6 = -11;
      break;
    case 0x36uLL:
      v6 = -10;
      break;
    case 0x37uLL:
      v6 = -9;
      break;
    case 0x38uLL:
      v6 = -8;
      break;
    case 0x39uLL:
      v6 = -7;
      break;
    case 0x3AuLL:
      v6 = -6;
      break;
    case 0x3BuLL:
      v6 = -5;
      break;
    case 0x3CuLL:
      v6 = -4;
      break;
    case 0x3DuLL:
      v6 = -3;
      break;
    case 0x3EuLL:
      v6 = -2;
      break;
    default:
      v6 = -1;
      break;
  }
LABEL_5:
  *a1 = v6;
  OUTLINED_FUNCTION_37_0();
}

char *Country.init(value:prefix:suffix:)@<X0>(char *result@<X0>, _BYTE *a2@<X1>, char *a3@<X2>, _BYTE *a4@<X8>)
{
  char v4;
  char v5;

  v4 = *result;
  v5 = *a3;
  *a4 = *a2;
  a4[1] = v5;
  a4[2] = v4;
  return result;
}

uint64_t sub_1C023EA88(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C025C67C(*a1, *a2);
}

void sub_1C023EA94()
{
  unsigned __int8 *v0;

  sub_1C00CEBC8(*v0);
}

uint64_t sub_1C023EA9C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1C00C1444(a1, *v1);
}

void sub_1C023EAA4(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EB540(a1, *v1);
}

void sub_1C023EAAC(char *a1@<X8>)
{
  Country.Value.init(rawValue:)(a1);
}

uint64_t sub_1C023EAB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Country.Value.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C023EADC()
{
  sub_1C023FA9C();
  return sub_1C03040F0();
}

uint64_t sub_1C023EB38()
{
  sub_1C023FA9C();
  return sub_1C03040CC();
}

SiriInference::Country::Prefix_optional __swiftcall Country.Prefix.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  SiriInference::Country::Prefix_optional result;

  sub_1C023ECE0(v1);
  return result;
}

uint64_t Country.Prefix.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 28265;
  if (*v0 != 1)
    v1 = 1918985582;
  if (*v0)
    return v1;
  else
    return 0x7972746E756F63;
}

uint64_t sub_1C023EBD8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C025C5B8(*a1, *a2);
}

uint64_t sub_1C023EBE4()
{
  unsigned __int8 *v0;

  return sub_1C00CEBD4(*v0);
}

uint64_t sub_1C023EBEC(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1C00C13E4(a1, *v1);
}

uint64_t sub_1C023EBF4(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1C02EB598(a1, *v1);
}

SiriInference::Country::Prefix_optional sub_1C023EBFC(Swift::String *a1)
{
  return Country.Prefix.init(rawValue:)(*a1);
}

uint64_t sub_1C023EC08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Country.Prefix.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C023EC2C()
{
  sub_1C023FA60();
  return sub_1C03040F0();
}

uint64_t sub_1C023EC88()
{
  sub_1C023FA60();
  return sub_1C03040CC();
}

SiriInference::Country::Suffix_optional __swiftcall Country.Suffix.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  SiriInference::Country::Suffix_optional result;

  sub_1C023ECE0(v1);
  return result;
}

void sub_1C023ECE0(char *a1@<X8>)
{
  unint64_t v2;
  char v3;

  v2 = sub_1C030484C();
  swift_bridgeObjectRelease();
  v3 = 3;
  if (v2 < 3)
    v3 = v2;
  *a1 = v3;
  OUTLINED_FUNCTION_37_0();
}

SiriInference::Country::Suffix_optional sub_1C023ED2C(Swift::String *a1)
{
  return Country.Suffix.init(rawValue:)(*a1);
}

uint64_t sub_1C023ED38()
{
  sub_1C023FA24();
  return sub_1C03040F0();
}

uint64_t sub_1C023ED94()
{
  sub_1C023FA24();
  return sub_1C03040CC();
}

void Country.prefix.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_8_20(a1);
}

void Country.suffix.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_8_20(a1);
}

void Country.value.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_8_20(a1);
}

uint64_t static Country.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if ((sub_1C025C67C(a1[2], a2[2]) & 1) == 0)
    return 0;
  if ((_DWORD)v2 == 3)
  {
    if ((_DWORD)v4 != 3)
      return 0;
  }
  else if ((_DWORD)v4 == 3 || (sub_1C025C5B8(v2, v4) & 1) == 0)
  {
    return 0;
  }
  result = (_DWORD)v5 == 3 && (_DWORD)v3 == 3;
  if ((_DWORD)v3 != 3 && (_DWORD)v5 != 3)
    return sub_1C025C5B8(v3, v5);
  return result;
}

uint64_t sub_1C023EE9C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x786966657270 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x786966667573 && a2 == 0xE600000000000000;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1C0304A08();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1C023EFD8(char a1)
{
  if (!a1)
    return 0x786966657270;
  if (a1 == 1)
    return 0x786966667573;
  return 0x65756C6176;
}

uint64_t sub_1C023F024()
{
  char *v0;

  return sub_1C023EFD8(*v0);
}

uint64_t sub_1C023F02C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C023EE9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C023F050()
{
  sub_1C023F3A4();
  return sub_1C0304BAC();
}

uint64_t sub_1C023F078()
{
  sub_1C023F3A4();
  return sub_1C0304BB8();
}

void Country.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  int v9;
  char v10;
  uint64_t v11;
  int v12;
  int v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C17D8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v12 = v1[2];
  v13 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C023F3A4();
  sub_1C0304BA0();
  v19 = v8;
  v18 = 0;
  sub_1C023F3E0();
  OUTLINED_FUNCTION_2_49();
  if (!v2)
  {
    v10 = v12;
    v17 = v13;
    v16 = 1;
    sub_1C023F41C();
    OUTLINED_FUNCTION_2_49();
    v15 = v10;
    v14 = 2;
    sub_1C023F458();
    sub_1C030499C();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  OUTLINED_FUNCTION_28_0();
}

void Country.init(from:)(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  char v7;
  char v8;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1800);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C023F3A4();
  sub_1C0304B88();
  if (!v2)
  {
    sub_1C023F494();
    OUTLINED_FUNCTION_1_47();
    sub_1C023F4D0();
    OUTLINED_FUNCTION_1_47();
    sub_1C023F50C();
    sub_1C03048E8();
    OUTLINED_FUNCTION_3_27();
    *a2 = v8;
    a2[1] = v7;
    a2[2] = v6;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  OUTLINED_FUNCTION_28_0();
}

void sub_1C023F378(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  Country.init(from:)(a1, a2);
}

void sub_1C023F38C(_QWORD *a1)
{
  Country.encode(to:)(a1);
}

unint64_t sub_1C023F3A4()
{
  unint64_t result;

  result = qword_1EF5C17E0;
  if (!qword_1EF5C17E0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031EC70, &type metadata for Country.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C17E0);
  }
  return result;
}

unint64_t sub_1C023F3E0()
{
  unint64_t result;

  result = qword_1EF5C17E8;
  if (!qword_1EF5C17E8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Country.Prefix, &type metadata for Country.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C17E8);
  }
  return result;
}

unint64_t sub_1C023F41C()
{
  unint64_t result;

  result = qword_1EF5C17F0;
  if (!qword_1EF5C17F0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Country.Suffix, &type metadata for Country.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5C17F0);
  }
  return result;
}

unint64_t sub_1C023F458()
{
  unint64_t result;

  result = qword_1EF5C17F8;
  if (!qword_1EF5C17F8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Country.Value, &type metadata for Country.Value);
    atomic_store(result, (unint64_t *)&qword_1EF5C17F8);
  }
  return result;
}

unint64_t sub_1C023F494()
{
  unint64_t result;

  result = qword_1EF5C1808;
  if (!qword_1EF5C1808)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Country.Prefix, &type metadata for Country.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C1808);
  }
  return result;
}

unint64_t sub_1C023F4D0()
{
  unint64_t result;

  result = qword_1EF5C1810;
  if (!qword_1EF5C1810)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Country.Suffix, &type metadata for Country.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5C1810);
  }
  return result;
}

unint64_t sub_1C023F50C()
{
  unint64_t result;

  result = qword_1EF5C1818;
  if (!qword_1EF5C1818)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Country.Value, &type metadata for Country.Value);
    atomic_store(result, (unint64_t *)&qword_1EF5C1818);
  }
  return result;
}

unint64_t sub_1C023F54C()
{
  unint64_t result;

  result = qword_1EF5C1820;
  if (!qword_1EF5C1820)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Country.Value, &type metadata for Country.Value);
    atomic_store(result, (unint64_t *)&qword_1EF5C1820);
  }
  return result;
}

unint64_t sub_1C023F58C()
{
  unint64_t result;

  result = qword_1EF5C1828;
  if (!qword_1EF5C1828)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Country.Prefix, &type metadata for Country.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C1828);
  }
  return result;
}

unint64_t sub_1C023F5CC()
{
  unint64_t result;

  result = qword_1EF5C1830;
  if (!qword_1EF5C1830)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Country.Suffix, &type metadata for Country.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5C1830);
  }
  return result;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Country(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  if (!a2)
  {
    v3 = -1;
    return (v3 + 1);
  }
  if (a2 >= 0xFD)
  {
    if ((a2 + 33554179) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        goto LABEL_5;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
      {
LABEL_5:
        v3 = (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776964;
        return (v3 + 1);
      }
    }
  }
  if (*(unsigned __int8 *)a1 <= 3u)
    v4 = 3;
  else
    v4 = *(unsigned __int8 *)a1;
  v5 = v4 - 4;
  if (*(unsigned __int8 *)a1 < 3u)
    v3 = -1;
  else
    v3 = v5;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for Country(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554179) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFC)
    v3 = 0;
  if (a2 > 0xFC)
  {
    *(_WORD *)result = a2 - 253;
    *(_BYTE *)(result + 2) = (a2 - 253) >> 16;
    if (v3)
    {
      v4 = ((a2 - 253) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)result = a2 + 3;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

void type metadata accessor for Country()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t getEnumTagSinglePayload for Country.Value(unsigned __int8 *a1, int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 != 1)
  {
    if ((a2 + 254) >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 254) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 255;
    return (v5 + 1);
  }
LABEL_17:
  if (*a1 == 255)
    v5 = 0;
  else
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Country.Value(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 254 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 254) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 1)
    return ((uint64_t (*)(void))((char *)&loc_1C023F800 + 4 * byte_1C031E40E[v4]))();
  *a1 = a2 - 2;
  return ((uint64_t (*)(void))((char *)sub_1C023F834 + 4 * byte_1C031E409[v4]))();
}

uint64_t sub_1C023F834(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C023F83C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C023F844);
  return result;
}

uint64_t sub_1C023F850(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C023F858);
  *(_BYTE *)result = -1;
  return result;
}

uint64_t sub_1C023F85C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C023F864(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for Country.Value()
{
  OUTLINED_FUNCTION_17_2();
}

void type metadata accessor for Country.Prefix()
{
  OUTLINED_FUNCTION_17_2();
}

void type metadata accessor for Country.Suffix()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t _s13SiriInference7CountryV6PrefixOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C023F8E4 + 4 * byte_1C031E418[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C023F918 + 4 * byte_1C031E413[v4]))();
}

uint64_t sub_1C023F918(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C023F920(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C023F928);
  return result;
}

uint64_t sub_1C023F934(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C023F93CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C023F940(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C023F948(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Country.CodingKeys()
{
  return &type metadata for Country.CodingKeys;
}

unint64_t sub_1C023F968()
{
  unint64_t result;

  result = qword_1EF5C1838;
  if (!qword_1EF5C1838)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031EC48, &type metadata for Country.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1838);
  }
  return result;
}

unint64_t sub_1C023F9A8()
{
  unint64_t result;

  result = qword_1EF5C1840;
  if (!qword_1EF5C1840)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031EBB8, &type metadata for Country.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1840);
  }
  return result;
}

unint64_t sub_1C023F9E8()
{
  unint64_t result;

  result = qword_1EF5C1848;
  if (!qword_1EF5C1848)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031EBE0, &type metadata for Country.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1848);
  }
  return result;
}

unint64_t sub_1C023FA24()
{
  unint64_t result;

  result = qword_1EF5C1850;
  if (!qword_1EF5C1850)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Country.Suffix, &type metadata for Country.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5C1850);
  }
  return result;
}

unint64_t sub_1C023FA60()
{
  unint64_t result;

  result = qword_1EF5C1858;
  if (!qword_1EF5C1858)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Country.Prefix, &type metadata for Country.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C1858);
  }
  return result;
}

unint64_t sub_1C023FA9C()
{
  unint64_t result;

  result = qword_1EF5C1860;
  if (!qword_1EF5C1860)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Country.Value, &type metadata for Country.Value);
    atomic_store(result, (unint64_t *)&qword_1EF5C1860);
  }
  return result;
}

void sub_1C023FAE0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 *v50;
  uint64_t v51;
  __n128 *v52;
  uint64_t v53;
  __n128 *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v62 = a11;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728360);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_6_0();
  v20 = v19 - v18;
  v21 = sub_1C0301CFC();
  v58 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_6_0();
  v24 = v23 - v22;
  if ((a4 & 1) != 0)
  {
    v27 = OUTLINED_FUNCTION_10_68(25705, 0xE200000000000000);
    if ((v28 & 1) == 0)
    {
      if (v27 < 0)
      {
        __break(1u);
      }
      else
      {
        OUTLINED_FUNCTION_16_54();
        if (!v30)
        {
          v31 = OUTLINED_FUNCTION_5_84(v29);
          OUTLINED_FUNCTION_4_93(v31);
          OUTLINED_FUNCTION_9_80();
          if ((OUTLINED_FUNCTION_0_129() & 1) != 0)
          {
            a3 = v63;
            goto LABEL_2;
          }
          sub_1C0056D18();
          OUTLINED_FUNCTION_15_2();
          v33 = 0;
          v35 = 3;
LABEL_28:
          *(_OWORD *)v34 = xmmword_1C0318E50;
          *(_QWORD *)(v34 + 16) = v33;
          *(_BYTE *)(v34 + 24) = v35;
          swift_willThrow();
          sub_1C00CF854(a12);
          OUTLINED_FUNCTION_14();
          OUTLINED_FUNCTION_33();
LABEL_39:
          swift_bridgeObjectRelease();
LABEL_40:
          swift_bridgeObjectRelease();
LABEL_41:
          swift_bridgeObjectRelease();
          goto LABEL_42;
        }
      }
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    OUTLINED_FUNCTION_44();
    sub_1C00B0E2C();
    v33 = v32;
    OUTLINED_FUNCTION_33();
    sub_1C0056D18();
    OUTLINED_FUNCTION_15_2();
    v35 = 1;
    goto LABEL_28;
  }
LABEL_2:
  if (a6)
    goto LABEL_3;
  v36 = OUTLINED_FUNCTION_10_68(1701869940, 0xE400000000000000);
  if ((v37 & 1) != 0)
  {
    OUTLINED_FUNCTION_44();
    sub_1C00B0E2C();
    OUTLINED_FUNCTION_33();
LABEL_38:
    sub_1C0056D18();
    v49 = OUTLINED_FUNCTION_15_2();
    OUTLINED_FUNCTION_2_112((__n128)xmmword_1C031ECE0, v49, v50);
    OUTLINED_FUNCTION_19_42();
    OUTLINED_FUNCTION_14();
    goto LABEL_39;
  }
  if (v36 < 0)
    goto LABEL_53;
  OUTLINED_FUNCTION_16_54();
  if (v30)
  {
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v39 = OUTLINED_FUNCTION_5_84(v38);
  OUTLINED_FUNCTION_4_93(v39);
  OUTLINED_FUNCTION_9_80();
  if ((OUTLINED_FUNCTION_0_129() & 1) == 0 || (a6 = v64) == 0)
  {
    OUTLINED_FUNCTION_15_49();
    goto LABEL_38;
  }
  a5 = v63;
LABEL_3:
  v56 = a6;
  if (a8)
    goto LABEL_4;
  v40 = OUTLINED_FUNCTION_10_68(1684632949, 0xE400000000000000);
  if ((v41 & 1) != 0)
  {
    OUTLINED_FUNCTION_44();
    sub_1C00B0E2C();
    OUTLINED_FUNCTION_33();
LABEL_45:
    sub_1C0056D18();
    v51 = OUTLINED_FUNCTION_15_2();
    OUTLINED_FUNCTION_2_112((__n128)xmmword_1C031ECD0, v51, v52);
    OUTLINED_FUNCTION_19_42();
    OUTLINED_FUNCTION_20_35();
    OUTLINED_FUNCTION_14();
    goto LABEL_40;
  }
  if (v40 < 0)
    goto LABEL_55;
  OUTLINED_FUNCTION_16_54();
  if (v30)
  {
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v43 = OUTLINED_FUNCTION_5_84(v42);
  OUTLINED_FUNCTION_4_93(v43);
  OUTLINED_FUNCTION_9_80();
  if ((OUTLINED_FUNCTION_0_129() & 1) == 0 || (a8 = v64) == 0)
  {
    OUTLINED_FUNCTION_15_49();
    goto LABEL_45;
  }
  a7 = v63;
LABEL_4:
  if (a11)
  {
    v25 = a2;
    goto LABEL_6;
  }
  v44 = OUTLINED_FUNCTION_10_68(0x736E656B6F74, 0xE600000000000000);
  if ((v45 & 1) != 0)
  {
    OUTLINED_FUNCTION_44();
    sub_1C00B0E2C();
    OUTLINED_FUNCTION_33();
LABEL_48:
    sub_1C0056D18();
    v53 = OUTLINED_FUNCTION_15_2();
    OUTLINED_FUNCTION_2_112((__n128)xmmword_1C031ECC0, v53, v54);
    OUTLINED_FUNCTION_19_42();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_20_35();
    OUTLINED_FUNCTION_14();
    goto LABEL_41;
  }
  if (v44 < 0)
    goto LABEL_57;
  OUTLINED_FUNCTION_16_54();
  if (!v30)
  {
    v47 = OUTLINED_FUNCTION_5_84(v46);
    OUTLINED_FUNCTION_4_93(v47);
    OUTLINED_FUNCTION_9_80();
    if ((OUTLINED_FUNCTION_0_129() & 1) != 0)
    {
      v62 = v64;
      if (v64)
      {
        v25 = a2;
        a10 = v63;
LABEL_6:
        sub_1C0055ED0(a12, v20, &qword_1ED728360);
        if (__swift_getEnumTagSinglePayload(v20, 1, v21) == 1)
        {
          sub_1C008FED8(0x5F64657461647075, 0xEA00000000007461, a1, v25, v24);
          if (v12)
          {
            sub_1C00CF854(a12);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_20_35();
            OUTLINED_FUNCTION_28();
            OUTLINED_FUNCTION_33();
            sub_1C00CF854(v20);
LABEL_42:
            OUTLINED_FUNCTION_28_0();
            return;
          }
          sub_1C00CF854(a12);
          OUTLINED_FUNCTION_28();
          OUTLINED_FUNCTION_33();
          sub_1C00CF854(v20);
          v48 = v58;
        }
        else
        {
          sub_1C00CF854(a12);
          OUTLINED_FUNCTION_28();
          OUTLINED_FUNCTION_33();
          v48 = v58;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 32))(v24, v20, v21);
        }
        *(_QWORD *)a9 = a3;
        *((_QWORD *)a9 + 1) = a5;
        *((_QWORD *)a9 + 2) = v56;
        *((_QWORD *)a9 + 3) = a7;
        *((_QWORD *)a9 + 4) = a8;
        *((_QWORD *)a9 + 5) = a10;
        *((_QWORD *)a9 + 6) = v62;
        v55 = OUTLINED_FUNCTION_21_41();
        (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(&a9[*(int *)(v55 + 32)], v24, v21);
        goto LABEL_42;
      }
    }
    OUTLINED_FUNCTION_15_49();
    goto LABEL_48;
  }
LABEL_58:
  __break(1u);
}

void sub_1C0240014(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, char *a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728360);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_6_0();
  v13 = v12 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C03084B0;
  v15 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 64) = &off_1E799BE20;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  *(_QWORD *)(inited + 96) = v15;
  *(_QWORD *)(inited + 104) = &off_1E799BE20;
  *(_QWORD *)(inited + 72) = a3;
  *(_QWORD *)(inited + 80) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_1C00CD0B4(0xD000000000000079, 0x80000001C0334050, inited);
  if (v5)
  {
    swift_setDeallocating();
    sub_1C004EFEC();
  }
  else
  {
    v18 = v16;
    v23 = v17;
    swift_setDeallocating();
    sub_1C004EFEC();
    if (v18)
    {
      v19 = sub_1C0301CFC();
      __swift_storeEnumTagSinglePayload(v13, 1, 1, v19);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = (uint64_t)a5;
      sub_1C023FAE0(v18, v23, 0, 1, a3, a4, a1, a2, a5, 0, 0, v13);
      v21 = 0;
    }
    else
    {
      v21 = 1;
      v20 = (uint64_t)a5;
    }
    v22 = OUTLINED_FUNCTION_21_41();
    __swift_storeEnumTagSinglePayload(v20, v21, 1, v22);
  }
  OUTLINED_FUNCTION_28_0();
}

uint64_t sub_1C02401D8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
  v4 = v0[1];
  v3 = v0[2];
  v5 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 64) = &off_1E799BE20;
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 40) = v3;
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_7_84(0xD000000000000041, 0x80000001C0333EB0);
  if (v1)
  {
    OUTLINED_FUNCTION_12_2();
    return OUTLINED_FUNCTION_14_58();
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_14_58();
    v6 = swift_initStackObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C0309BD0;
    v7 = v0[3];
    v8 = v0[4];
    *(_QWORD *)(v6 + 56) = v5;
    *(_QWORD *)(v6 + 64) = &off_1E799BE20;
    *(_QWORD *)(v6 + 72) = v4;
    v19 = v7;
    *(_QWORD *)(v6 + 32) = v7;
    *(_QWORD *)(v6 + 40) = v8;
    *(_QWORD *)(v6 + 96) = v5;
    *(_QWORD *)(v6 + 104) = &off_1E799BE20;
    *(_QWORD *)(v6 + 80) = v3;
    v9 = v5;
    v10 = v0[5];
    v11 = v0[6];
    *(_QWORD *)(v6 + 136) = v9;
    *(_QWORD *)(v6 + 144) = &off_1E799BE20;
    *(_QWORD *)(v6 + 112) = v10;
    *(_QWORD *)(v6 + 120) = v11;
    OUTLINED_FUNCTION_21_41();
    OUTLINED_FUNCTION_45_0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_1C006C720();
    *(_QWORD *)(v6 + 176) = MEMORY[0x1E0DEDC60];
    *(_QWORD *)(v6 + 184) = &off_1E799BE18;
    *(_QWORD *)(v6 + 152) = v12;
    OUTLINED_FUNCTION_7_84(0xD0000000000000DALL, 0x80000001C0333F00);
    swift_release();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_14_58();
    v13 = swift_initStackObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C03084B0;
    v14 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v13 + 64) = &off_1E799BE20;
    *(_QWORD *)(v13 + 72) = v4;
    *(_QWORD *)(v13 + 32) = v19;
    *(_QWORD *)(v13 + 40) = v8;
    *(_QWORD *)(v13 + 96) = v14;
    *(_QWORD *)(v13 + 104) = &off_1E799BE20;
    *(_QWORD *)(v13 + 80) = v3;
    OUTLINED_FUNCTION_45_0();
    swift_bridgeObjectRetain();
    v17 = sub_1C0054DE4(0xD000000000000065, 0x80000001C0333FE0, v13, v15, v16);
    OUTLINED_FUNCTION_12_2();
    result = OUTLINED_FUNCTION_14_58();
    *v0 = v17;
  }
  return result;
}

uint64_t type metadata accessor for Entity()
{
  uint64_t result;

  result = qword_1ED727CA8;
  if (!qword_1ED727CA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *sub_1C024043C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = a2[3];
    a1[2] = a2[2];
    a1[3] = v5;
    v6 = a2[5];
    a1[4] = a2[4];
    a1[5] = v6;
    v7 = *(int *)(a3 + 32);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    a1[6] = a2[6];
    v10 = sub_1C0301CFC();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_1C0240508(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_1C0301CFC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1C0240560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(int *)(a3 + 32);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v9 = sub_1C0301CFC();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *sub_1C0240600(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C0301CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1C02406C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(int *)(a3 + 32);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1C0301CFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1C0240738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 32);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1C0301CFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_1C02407CC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C02407D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C0301CFC();
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_1C024084C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0240858(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = sub_1C0301CFC();
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C02408C4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C0301CFC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_129()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_2_112(__n128 a1, uint64_t a2, __n128 *a3)
{
  unint64_t v3;
  unsigned __int8 v4;

  *a3 = a1;
  a3[1].n128_u64[0] = v3;
  a3[1].n128_u8[8] = v4;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_4_93(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  return sub_1C0055ED0(a1, v2 - 120, v1);
}

uint64_t OUTLINED_FUNCTION_5_84(uint64_t a1)
{
  uint64_t v1;

  return v1 + 40 * a1 + 32;
}

uint64_t OUTLINED_FUNCTION_7_84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C006890C(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_9_80()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_10_68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C00A9B84(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_14_58()
{
  return sub_1C004EFEC();
}

uint64_t OUTLINED_FUNCTION_19_42()
{
  uint64_t v0;

  return sub_1C00CF854(v0);
}

uint64_t OUTLINED_FUNCTION_20_35()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_21_41()
{
  return type metadata accessor for Entity();
}

uint64_t sub_1C02409E4()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[7];
  char v32;
  int v33;
  char v34;
  __int16 v35;
  char v36;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B87E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = 0;
  *(_BYTE *)(inited + 48) = 2;
  type metadata accessor for DateTime.Date();
  v1 = OUTLINED_FUNCTION_16_0();
  v9 = OUTLINED_FUNCTION_3_75(v1, v2, v3, v4, v5, v6, v7, v8, v27, *(int *)v31, *(__int16 *)&v31[4], v31[6], 5);
  type metadata accessor for DateTime.Time();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_1_63();
  DateTime.Time.init(withHour:minute:second:meridiem:definedValue:occurringIn:setByUser:)(0, 0, 0, 0, 0, 0, v10, v11, v28, v32);
  type metadata accessor for DateTime();
  OUTLINED_FUNCTION_16_0();
  v12 = OUTLINED_FUNCTION_3_117(v9);
  v13 = OUTLINED_FUNCTION_16_0();
  v21 = OUTLINED_FUNCTION_3_75(v13, v14, v15, v16, v17, v18, v19, v20, v29, v33, v35, v36, 6);
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_1_63();
  DateTime.Time.init(withHour:minute:second:meridiem:definedValue:occurringIn:setByUser:)(11, 0, 59, 0, 59, 0, v22, v23, v30, v34);
  OUTLINED_FUNCTION_16_0();
  v24 = OUTLINED_FUNCTION_3_117(v21);
  type metadata accessor for DateTime.DateTimeRange();
  OUTLINED_FUNCTION_16_0();
  v25 = DateTime.DateTimeRange.init(withStartDateTime:endDateTime:)(v12, v24);
  OUTLINED_FUNCTION_16_0();
  *(_QWORD *)(inited + 56) = DateTime.init(occurringIn:)(v25);
  sub_1C0099A4C();
  return sub_1C0303DB4();
}

uint64_t OUTLINED_FUNCTION_3_117(uint64_t a1)
{
  uint64_t v1;

  return DateTime.init(withDate:time:)(a1, v1);
}

uint64_t sub_1C0240BBC()
{
  uint64_t result;

  sub_1C0302020();
  swift_allocObject();
  result = sub_1C0302014();
  qword_1EF5FC770 = result;
  return result;
}

uint64_t sub_1C0240BF8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD *, _QWORD);
  id v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  dispatch_group_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  dispatch_group_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69[5];
  uint64_t v70[2];
  _QWORD v71[7];

  v60 = a4;
  v62 = a3;
  v53 = a2;
  v68 = sub_1C0301F30();
  v64 = *(_QWORD *)(v68 - 8);
  OUTLINED_FUNCTION_121();
  v7 = MEMORY[0x1E0C80A78](v6);
  v52 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v51 - v10;
  MEMORY[0x1E0C80A78](v9);
  v67 = (char *)&v51 - v12;
  OUTLINED_FUNCTION_8_4();
  v63 = sub_1C0301F24();
  v61 = *(_QWORD *)(v63 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_53();
  v66 = v14;
  OUTLINED_FUNCTION_8_4();
  v15 = type metadata accessor for Signpost();
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_30_3();
  v17 = OUTLINED_FUNCTION_16_0();
  v59 = v17;
  *(_QWORD *)(v17 + 16) = 0;
  v57 = v17 + 16;
  v18 = OUTLINED_FUNCTION_16_0();
  v65 = v18;
  *(_QWORD *)(v18 + 16) = MEMORY[0x1E0DEE9D8];
  v51 = v18 + 16;
  if (qword_1ED728440 != -1)
    swift_once();
  v19 = (void *)qword_1ED729668;
  v20 = v4 + *(int *)(v15 + 20);
  *(_QWORD *)v20 = "Geocoding POI with Pegasus";
  *(_QWORD *)(v20 + 8) = 26;
  v55 = v20;
  *(_BYTE *)(v20 + 16) = 2;
  v21 = v19;
  sub_1C0303B68();
  v56 = *(int *)(v15 + 24);
  *(_QWORD *)(v4 + v56) = v21;
  v22 = v21;
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v23 = OUTLINED_FUNCTION_16_0();
  *(_OWORD *)(v23 + 16) = xmmword_1C0305B60;
  v24 = sub_1C03046E4();
  v26 = v25;
  *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v23 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v23 + 32) = v24;
  *(_QWORD *)(v23 + 40) = v26;
  sub_1C0303B50();
  swift_bridgeObjectRelease();

  v71[5] = MEMORY[0x1E0DEE9E8];
  if (qword_1EF5B8000 != -1)
    swift_once();
  v27 = (void (*)(_QWORD *, _QWORD))sub_1C0301FE4();
  sub_1C00B52A8(0xD00000000000001ALL, 0x80000001C0334130, 0x2D656C7070412D58, 0xED00006775626544);
  v27(v71, 0);
  v54 = dispatch_group_create();
  dispatch_group_enter(v54);
  sub_1C0301F18();
  v28 = sub_1C0242074(v53);
  sub_1C0301F0C();

  v29 = a1[3];
  v30 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v29);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
  v31 = v67;
  sub_1C0301FF0();
  swift_bridgeObjectRelease();
  v32 = v68;
  if (qword_1EF5B7F08 != -1)
    swift_once();
  v33 = sub_1C0303B98();
  __swift_project_value_buffer(v33, (uint64_t)qword_1EF5FC6B0);
  v34 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
  v34(v11, v31, v32);
  sub_1C0048FE0((uint64_t)a1, (uint64_t)v71);
  v35 = sub_1C0303B80();
  v36 = sub_1C03042E8();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc();
    v53 = swift_slowAlloc();
    v70[0] = v53;
    *(_DWORD *)v37 = 136315394;
    v34(v52, v11, v32);
    v38 = sub_1C0303EF8();
    v69[0] = sub_1C003E6D8(v38, v39, v70);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v11, v68);
    *(_WORD *)(v37 + 12) = 2080;
    sub_1C0048FE0((uint64_t)v71, (uint64_t)v69);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1930);
    v40 = sub_1C0303EF8();
    v69[0] = sub_1C003E6D8(v40, v41, v70);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v71);
    _os_log_impl(&dword_1C0039000, v35, v36, "Constructed Pegasus Search Request: %s with query value: %s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_8_69();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v71);

  v71[0] = sub_1C0301FFC();
  v42 = (_QWORD *)OUTLINED_FUNCTION_16_0();
  v43 = v54;
  v44 = v65;
  v42[2] = v54;
  v42[3] = v44;
  v45 = v59;
  v42[4] = v58;
  v42[5] = v45;
  v46 = v43;
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1920);
  sub_1C02422E4();
  sub_1C0303C7C();
  swift_release();
  sub_1C0303C70();
  swift_release();
  swift_bridgeObjectRetain();
  sub_1C0241794();
  swift_bridgeObjectRelease_n();
  OUTLINED_FUNCTION_28_2();
  v47 = *(void **)(v45 + 16);
  if (v47)
  {
    v48 = v47;
    sub_1C03043D8();
    OUTLINED_FUNCTION_2_113();
    sub_1C0303B5C();
    v49 = v47;
    OUTLINED_FUNCTION_5_85();

    swift_release();
  }
  else
  {
    sub_1C03043D8();
    OUTLINED_FUNCTION_2_113();
    sub_1C0303B5C();
    OUTLINED_FUNCTION_28_2();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_5_85();

    swift_bridgeObjectRelease();
    swift_release();
  }
  OUTLINED_FUNCTION_8_69();
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v66, v63);
  sub_1C003DDAC(v4);
  swift_release();
  return swift_release();
}

void sub_1C024139C(uint64_t a1, NSObject *a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void **v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  char *v36;
  void *v37;
  id v38;
  _QWORD *v39;
  uint8_t *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  dispatch_group_t v46;
  uint64_t v47;
  uint64_t v48[3];

  v43 = a3;
  v46 = a2;
  v7 = sub_1C0302008();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v44 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v45 = (char *)&v40 - v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v40 - v13;
  v15 = sub_1C0301F60();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1938);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (void **)(a5 + 16);
  sub_1C0242328(a1, (uint64_t)v21);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v23(v14, v21, v7);
    if (qword_1EF5B7F08 != -1)
      swift_once();
    v24 = sub_1C0303B98();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EF5FC6B0);
    v25 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v26 = v45;
    v25(v45, v14, v7);
    v27 = sub_1C0303B80();
    v28 = sub_1C03042F4();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v42 = v14;
      v43 = (char *)v23;
      v30 = (uint8_t *)v29;
      v41 = swift_slowAlloc();
      v48[0] = v41;
      *(_DWORD *)v30 = 136315138;
      v40 = v30 + 4;
      v25(v44, v26, v7);
      v31 = sub_1C0303EF8();
      v47 = sub_1C003E6D8(v31, v32, v48);
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v26, v7);
      _os_log_impl(&dword_1C0039000, v27, v28, "error getting searchResponse: %s", v30, 0xCu);
      v33 = v41;
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v33, -1, -1);
      v34 = v30;
      v14 = v42;
      v23 = (void (*)(char *, char *, uint64_t))v43;
      MEMORY[0x1C3B98378](v34, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v26, v7);
    }

    sub_1C0242370();
    v35 = swift_allocError();
    v23(v36, v14, v7);
    swift_beginAccess();
    v37 = *v22;
    *v22 = (void *)v35;

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v21, v15);
    v38 = sub_1C02418F0();
    v39 = v43 + 16;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    swift_beginAccess();
    *v39 = v38;
    swift_bridgeObjectRelease();
  }
  dispatch_group_leave(v46);
}

void sub_1C0241794()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if (qword_1EF5B7F08 != -1)
    swift_once();
  v0 = sub_1C0303B98();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF5FC6B0);
  v1 = sub_1C0303B80();
  v2 = sub_1C03042E8();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1C0039000, v1, v2, "Waiting for pegasus response", v3, 2u);
    MEMORY[0x1C3B98378](v3, -1, -1);
  }

  sub_1C0304354();
  v4 = sub_1C0303B80();
  v5 = sub_1C03042E8();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1C0039000, v4, v5, "Done waiting for pegasus response", v6, 2u);
    MEMORY[0x1C3B98378](v6, -1, -1);
  }

}

id sub_1C02418F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  id result;
  void *v37;
  id v38;
  unint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  _OWORD *v47;
  _OWORD *v48;
  _QWORD *v49;
  _OWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  _QWORD *v76;
  _OWORD *v77;
  _QWORD *v78;
  _OWORD *v79;
  _OWORD *v80;
  _QWORD *v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  _OWORD v90[16];
  _BYTE v91[712];
  uint64_t v92;
  uint64_t v93;

  v1 = sub_1C0301F78();
  v88 = *(_QWORD *)(v1 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_53();
  v84 = v3;
  OUTLINED_FUNCTION_8_4();
  v4 = sub_1C0301FC0();
  v68 = *(_QWORD *)(v4 - 8);
  v69 = v4;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_53();
  v67 = v6;
  OUTLINED_FUNCTION_8_4();
  v7 = sub_1C0301F90();
  v65 = *(_QWORD *)(v7 - 8);
  v66 = v7;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_53();
  v61 = v9;
  OUTLINED_FUNCTION_8_4();
  v74 = sub_1C0301FA8();
  v70 = *(_QWORD *)(v74 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_53();
  v73 = v11;
  OUTLINED_FUNCTION_8_4();
  v12 = sub_1C0301FD8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C0301F48();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_30_3();
  sub_1C0301F54();
  sub_1C0301F3C();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v0, v16);
  v18 = sub_1C0301FCC();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v92 = MEMORY[0x1E0DEE9D8];
  v64 = *(_QWORD *)(v18 + 16);
  if (v64)
  {
    v19 = 0;
    v20 = v70;
    v63 = v18 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v81 = &v91[384];
    v82 = &v91[120];
    v79 = &v91[528];
    v80 = &v91[424];
    v77 = &v91[632];
    v78 = &v91[608];
    v76 = &v91[672];
    v75 = xmmword_1C0307CF0;
    v83 = v1;
    v21 = v84;
    v22 = v61;
    v62 = v18;
    while (v19 < *(_QWORD *)(v18 + 16))
    {
      v23 = *(_QWORD *)(v20 + 72);
      v72 = v19;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 16))(v73, v63 + v23 * v19, v74);
      v24 = v67;
      sub_1C0301F9C();
      sub_1C0301FB4();
      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v24, v69);
      v25 = sub_1C0301F84();
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        v27 = sub_1C00447B0(0, (unint64_t *)&qword_1EF5C15E8);
        v28 = *(unsigned __int8 *)(v88 + 80);
        v71 = v25;
        v29 = v25 + ((v28 + 32) & ~v28);
        v85 = *(_QWORD *)(v88 + 72);
        v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 16);
        v87 = v27;
        while (1)
        {
          v86(v21, v29, v1);
          v30 = sub_1C0301F6C();
          v32 = sub_1C0241FF8(v30, v31);
          if (v32)
          {
            v33 = v32;
            v34 = (void *)objc_opt_self();
            v35 = v33;
            result = objc_msgSend(v34, sel_mapItemStorageForGEOMapItem_, v35);
            if (!result)
            {
              __break(1u);
              return result;
            }
            v37 = result;
            v38 = objc_msgSend(result, sel_data);

            if (v38)
            {
              v93 = sub_1C0301C00();
              v89 = v39;

            }
            else
            {

              v93 = 0;
              v89 = 0xF000000000000000;
            }
            v44 = v92;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              OUTLINED_FUNCTION_7_85();
              v44 = v52;
            }
            v45 = *(_QWORD *)(v44 + 16);
            if (v45 >= *(_QWORD *)(v44 + 24) >> 1)
            {
              OUTLINED_FUNCTION_7_85();
              v44 = v53;
            }
            sub_1C01AFBC0(v90);
            *(_QWORD *)v91 = 0;
            v91[10] = 0;
            *(_WORD *)&v91[8] = 4;
            v91[13] = 0;
            *(_WORD *)&v91[11] = 4;
            memset(&v91[16], 0, 104);
            sub_1C01B1A6C((uint64_t)v90, (uint64_t)v82);
            v46 = v81;
            *v81 = 0;
            v46[1] = 0;
            v91[400] = 5;
            *(_QWORD *)&v91[408] = 0;
            *(_QWORD *)&v91[416] = 1;
            v47 = v80;
            *v80 = 0u;
            v47[1] = 0u;
            v47[2] = 0u;
            v47[3] = 0u;
            v47[4] = 0u;
            *((_BYTE *)v47 + 80) = 0;
            *(_OWORD *)&v91[512] = v75;
            v48 = v79;
            *v79 = 0u;
            v48[1] = 0u;
            v48[2] = 0u;
            v48[3] = 0u;
            *((_QWORD *)v48 + 8) = 0;
            *(_DWORD *)&v91[600] = 132096;
            v49 = v78;
            *v78 = 0;
            v49[1] = 0;
            *((_BYTE *)v49 + 16) = 0;
            v50 = v77;
            *v77 = 0u;
            v50[1] = 0u;
            *((_WORD *)v50 + 16) = 0;
            v51 = v76;
            *v76 = 0;
            v51[1] = 0;
            *(_WORD *)&v91[688] = 515;
            *(_QWORD *)&v91[696] = v93;
            *(_QWORD *)&v91[704] = v89;
            *(_QWORD *)(v44 + 16) = v45 + 1;
            memcpy((void *)(v44 + 712 * v45 + 32), v91, 0x2C8uLL);

            v92 = v44;
            v1 = v83;
            v21 = v84;
          }
          else
          {
            if (qword_1EF5B7F08 != -1)
              swift_once();
            v40 = sub_1C0303B98();
            __swift_project_value_buffer(v40, (uint64_t)qword_1EF5FC6B0);
            v41 = sub_1C0303B80();
            v42 = sub_1C03042E8();
            if (os_log_type_enabled(v41, v42))
            {
              v43 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v43 = 0;
              _os_log_impl(&dword_1C0039000, v41, v42, "Couldn't deserialize geomapitem", v43, 2u);
              OUTLINED_FUNCTION_5();
            }

          }
          (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v21, v1);
          v29 += v85;
          if (!--v26)
          {
            swift_bridgeObjectRelease();
            v22 = v61;
            goto LABEL_24;
          }
        }
      }
      swift_bridgeObjectRelease();
LABEL_24:
      v54 = v72 + 1;
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v22, v66);
      v20 = v70;
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v73, v74);
      v19 = v54;
      v18 = v62;
      if (v54 == v64)
        goto LABEL_25;
    }
    __break(1u);
    goto LABEL_30;
  }
LABEL_25:
  swift_bridgeObjectRelease();
  if (qword_1EF5B7F08 != -1)
LABEL_30:
    swift_once();
  v55 = sub_1C0303B98();
  __swift_project_value_buffer(v55, (uint64_t)qword_1EF5FC6B0);
  v56 = v92;
  swift_bridgeObjectRetain();
  v57 = sub_1C0303B80();
  v58 = sub_1C03042E8();
  if (os_log_type_enabled(v57, v58))
  {
    v59 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v59 = 134217984;
    *(_QWORD *)v91 = *(_QWORD *)(v56 + 16);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v57, v58, "Returning %ld locations", v59, 0xCu);
    OUTLINED_FUNCTION_5();
  }

  swift_bridgeObjectRelease();
  swift_beginAccess();
  return (id)v92;
}

id sub_1C0241FF8(uint64_t a1, unint64_t a2)
{
  void *v2;
  id v5;

  if (a2 >> 60 == 15)
  {
    v2 = 0;
  }
  else
  {
    v2 = (void *)sub_1C0301BE8();
    sub_1C00D9830(a1, a2);
  }
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_mapItemStorageForSerializedPlaceData_, v2);

  return v5;
}

id sub_1C0242074(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  CLLocationDegrees v7;
  CLLocationDegrees v8;
  uint64_t v9;
  CLLocationCoordinate2D v10;
  uint64_t v12;

  sub_1C0301CFC();
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LocationResolutionContext();
  v6 = a1 + *(int *)(v5 + 32);
  v7 = 0.0;
  if ((*(_BYTE *)(v6 + 8) & 1) != 0)
  {
    v8 = 0.0;
  }
  else
  {
    v9 = a1 + *(int *)(v5 + 36);
    v8 = 0.0;
    if ((*(_BYTE *)(v9 + 8) & 1) == 0)
    {
      v7 = *(double *)v9;
      v8 = *(double *)v6;
    }
  }
  v10 = CLLocationCoordinate2DMake(v8, v7);
  sub_1C00447B0(0, &qword_1EF5C1918);
  sub_1C0301C24();
  return sub_1C0242158((uint64_t)v4, v10.latitude, v10.longitude, 0.0, 0.0, 0.0);
}

id sub_1C0242158(uint64_t a1, double a2, double a3, double a4, double a5, double a6)
{
  id v12;
  void *v13;
  id v14;
  uint64_t v15;

  v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v13 = (void *)sub_1C0301C60();
  v14 = objc_msgSend(v12, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_, v13, a2, a3, a4, a5, a6);

  v15 = sub_1C0301CFC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
  return v14;
}

uint64_t type metadata accessor for PegasusKitLocationSearchProvider()
{
  return objc_opt_self();
}

uint64_t sub_1C0242234(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0240BF8(a1, a2, a3, a4);
}

uint64_t sub_1C0242254()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1C0242278()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C024229C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C02422D8(uint64_t a1)
{
  uint64_t v1;

  sub_1C024139C(a1, *(NSObject **)(v1 + 16), *(char **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

unint64_t sub_1C02422E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF5C1928;
  if (!qword_1EF5C1928)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF5C1920);
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1EF5C1928);
  }
  return result;
}

uint64_t sub_1C0242328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1938);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C0242370()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF5C1940;
  if (!qword_1EF5C1940)
  {
    v1 = sub_1C0302008();
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0D70830], v1);
    atomic_store(result, (unint64_t *)&qword_1EF5C1940);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_5_85()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 248))();
}

void OUTLINED_FUNCTION_7_85()
{
  sub_1C004FE84();
}

uint64_t OUTLINED_FUNCTION_8_69()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_1C02423F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F70);
  MEMORY[0x1E0C80A78](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C01579A8(a1, (uint64_t)v9);
  OUTLINED_FUNCTION_2_114();
  if (v11)
  {
    v12 = OUTLINED_FUNCTION_5_86(v10);
    OUTLINED_FUNCTION_12_56(v12);
    OUTLINED_FUNCTION_14_59();
    OUTLINED_FUNCTION_47();
    v13 = OUTLINED_FUNCTION_15_50();
    v15 = v14;
    OUTLINED_FUNCTION_15_35(v13, &qword_1ED725F70);
    OUTLINED_FUNCTION_25_18();
    v3 = v9[4];
    if (v13 != v9[3] || v15 != v3)
      v2 = OUTLINED_FUNCTION_176();
    swift_bridgeObjectRelease();
    v73 = v2 ^ 1;
    v9[3] = v13;
    v9[4] = v15;
  }
  else
  {
    v73 = 0;
  }
  OUTLINED_FUNCTION_2_114();
  if (v18)
  {
    v19 = OUTLINED_FUNCTION_5_86(v17);
    OUTLINED_FUNCTION_12_56(v19);
    OUTLINED_FUNCTION_14_59();
    OUTLINED_FUNCTION_47();
    v20 = OUTLINED_FUNCTION_15_50();
    v22 = v21;
    OUTLINED_FUNCTION_15_35(v20, &qword_1ED725F70);
    OUTLINED_FUNCTION_25_18();
    v3 = v9[6];
    if (v20 != v9[5] || v22 != v3)
      v2 = OUTLINED_FUNCTION_176();
    swift_bridgeObjectRelease();
    v72 = v2 ^ 1;
    v9[5] = v20;
    v9[6] = v22;
  }
  else
  {
    v72 = 0;
  }
  v24 = v9[8];
  OUTLINED_FUNCTION_2_114();
  if (v26)
  {
    v27 = OUTLINED_FUNCTION_5_86(v25);
    OUTLINED_FUNCTION_0_130(v27);
    OUTLINED_FUNCTION_1_111();
    OUTLINED_FUNCTION_7_86();
    OUTLINED_FUNCTION_4_94();
    OUTLINED_FUNCTION_19_43();
    OUTLINED_FUNCTION_15_35(v28, &qword_1ED725F70);
    OUTLINED_FUNCTION_25_18();
    if (v24 == v9[7] && v2 == v9[8])
    {
      OUTLINED_FUNCTION_28();
      HIDWORD(v71) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_3_118();
      OUTLINED_FUNCTION_6_92();
      HIDWORD(v71) = v3 ^ 1;
    }
    v9[7] = v24;
    v9[8] = v2;
  }
  else
  {
    HIDWORD(v71) = 0;
  }
  v30 = v9[10];
  OUTLINED_FUNCTION_2_114();
  if (v32)
  {
    v33 = OUTLINED_FUNCTION_5_86(v31);
    OUTLINED_FUNCTION_0_130(v33);
    OUTLINED_FUNCTION_1_111();
    OUTLINED_FUNCTION_7_86();
    OUTLINED_FUNCTION_4_94();
    OUTLINED_FUNCTION_19_43();
    OUTLINED_FUNCTION_15_35(v34, &qword_1ED725F70);
    OUTLINED_FUNCTION_25_18();
    if (v30 == v9[9] && v2 == v9[10])
    {
      OUTLINED_FUNCTION_28();
      v36 = 0;
    }
    else
    {
      OUTLINED_FUNCTION_3_118();
      OUTLINED_FUNCTION_6_92();
      v36 = v3 ^ 1;
    }
    v9[9] = v30;
    v9[10] = v2;
  }
  else
  {
    v36 = 0;
  }
  v37 = v9[12];
  OUTLINED_FUNCTION_2_114();
  v75 = a2;
  if (v39)
  {
    v40 = OUTLINED_FUNCTION_5_86(v38);
    OUTLINED_FUNCTION_0_130(v40);
    OUTLINED_FUNCTION_1_111();
    OUTLINED_FUNCTION_7_86();
    OUTLINED_FUNCTION_4_94();
    OUTLINED_FUNCTION_19_43();
    OUTLINED_FUNCTION_15_35(v41, &qword_1ED725F70);
    OUTLINED_FUNCTION_25_18();
    if (v37 == v9[11] && v2 == v9[12])
    {
      OUTLINED_FUNCTION_28();
      v43 = 0;
    }
    else
    {
      OUTLINED_FUNCTION_3_118();
      OUTLINED_FUNCTION_6_92();
      v43 = v36 ^ 1u;
    }
    v9[11] = v37;
    v9[12] = v2;
  }
  else
  {
    v43 = 0;
  }
  v44 = v9[16];
  OUTLINED_FUNCTION_2_114();
  v74 = v7;
  if (v46)
  {
    v47 = OUTLINED_FUNCTION_5_86(v45);
    OUTLINED_FUNCTION_0_130(v47);
    OUTLINED_FUNCTION_1_111();
    OUTLINED_FUNCTION_7_86();
    OUTLINED_FUNCTION_4_94();
    OUTLINED_FUNCTION_19_43();
    OUTLINED_FUNCTION_15_35(v48, &qword_1ED725F70);
    OUTLINED_FUNCTION_25_18();
    if (v44 == v9[15] && v2 == v9[16])
    {
      OUTLINED_FUNCTION_28();
      v50 = 0;
    }
    else
    {
      OUTLINED_FUNCTION_3_118();
      OUTLINED_FUNCTION_6_92();
      v50 = v36 ^ 1u;
    }
    v9[15] = v44;
    v9[16] = v2;
  }
  else
  {
    v50 = 0;
  }
  v51 = v9[18];
  OUTLINED_FUNCTION_2_114();
  if (v53)
  {
    v54 = OUTLINED_FUNCTION_5_86(v52);
    OUTLINED_FUNCTION_0_130(v54);
    OUTLINED_FUNCTION_1_111();
    OUTLINED_FUNCTION_7_86();
    OUTLINED_FUNCTION_4_94();
    OUTLINED_FUNCTION_19_43();
    OUTLINED_FUNCTION_15_35(v55, &qword_1ED725F70);
    OUTLINED_FUNCTION_25_18();
    if (v51 == v9[17] && v2 == v9[18])
    {
      OUTLINED_FUNCTION_28();
      v57 = 0;
    }
    else
    {
      OUTLINED_FUNCTION_3_118();
      OUTLINED_FUNCTION_6_92();
      v57 = v36 ^ 1;
    }
    v9[17] = v51;
    v9[18] = v2;
  }
  else
  {
    v57 = 0;
  }
  OUTLINED_FUNCTION_2_114();
  if (v59)
  {
    v60 = OUTLINED_FUNCTION_5_86(v58);
    OUTLINED_FUNCTION_0_130(v60);
    OUTLINED_FUNCTION_1_111();
    OUTLINED_FUNCTION_47();
    v61 = sub_1C0304540();
    v63 = v62;
    OUTLINED_FUNCTION_15_35(v61, &qword_1ED725F70);
    OUTLINED_FUNCTION_25_18();
    if (v61 != v9[19] || v63 != v9[20])
    {
      v65 = OUTLINED_FUNCTION_176();
      swift_bridgeObjectRelease();
      v9[19] = v61;
      v9[20] = v63;
      OUTLINED_FUNCTION_17_53();
      if (((v66 | v43) & 1) == 0 && ((v50 | v57) & 1) == 0 && ((v65 ^ 1) & 1) == 0)
        goto LABEL_70;
LABEL_73:
      *(_BYTE *)(v43 + *(int *)(OUTLINED_FUNCTION_16_55() + 152)) = 1;
      v68 = v75;
      sub_1C0242958((uint64_t)v9, v75);
      v67 = 0;
      return __swift_storeEnumTagSinglePayload(v68, v67, 1, v50);
    }
    swift_bridgeObjectRelease();
    v9[19] = v61;
    v9[20] = v63;
  }
  OUTLINED_FUNCTION_17_53();
  if (((v69 | v43 | v50 | v57) & 1) != 0)
    goto LABEL_73;
LABEL_70:
  v67 = 1;
  *(_BYTE *)(v43 + *(int *)(OUTLINED_FUNCTION_16_55() + 152)) = 1;
  sub_1C0056C9C((uint64_t)v9, (uint64_t *)&unk_1ED726D98);
  v68 = v75;
  return __swift_storeEnumTagSinglePayload(v68, v67, 1, v50);
}

uint64_t sub_1C0242958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C02429A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C0301DB0();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1C02429DC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C0301DB0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1C0242A10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C0242A54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C0242A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C0242ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C0242B20()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0242B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_1_53();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t sub_1C0242B54()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0242B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_1_53();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t type metadata accessor for StripDiacriticsQueryExpander()
{
  uint64_t result;

  result = qword_1EF5C19A0;
  if (!qword_1EF5C19A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0242BC4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C0301DB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_130(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

unint64_t OUTLINED_FUNCTION_1_111()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  return sub_1C004F408();
}

uint64_t OUTLINED_FUNCTION_3_118()
{
  return sub_1C0304A08();
}

uint64_t OUTLINED_FUNCTION_4_94()
{
  return sub_1C0304540();
}

uint64_t OUTLINED_FUNCTION_5_86@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = a1;
  *(_QWORD *)(v2 - 88) = v1;
  return sub_1C0301DB0();
}

uint64_t OUTLINED_FUNCTION_6_92()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_7_86()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_12_56(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

unint64_t OUTLINED_FUNCTION_14_59()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  return sub_1C004F408();
}

uint64_t OUTLINED_FUNCTION_15_50()
{
  return sub_1C0304540();
}

uint64_t OUTLINED_FUNCTION_16_55()
{
  return type metadata accessor for ContactResolver.SignalSet(0);
}

ValueMetadata *type metadata accessor for SpeechAlternativeQueryExpander()
{
  return &type metadata for SpeechAlternativeQueryExpander;
}

uint64_t getEnumTagSinglePayload for SpeechAlternativeQueryExpander.SpeechAlternativeRanks(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[48])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SpeechAlternativeQueryExpander.SpeechAlternativeRanks(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for SpeechAlternativeQueryExpander.SpeechAlternativeRanks()
{
  return &type metadata for SpeechAlternativeQueryExpander.SpeechAlternativeRanks;
}

uint64_t sub_1C0242E10(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v17 = a2;
  v18 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0DEE9D8];
  sub_1C00B1F90();
  v8 = v19;
  v9 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v16 = a1;
  if (v9)
  {
    v10 = 0;
    v11 = (uint64_t *)(a1 + 40);
    do
    {
      v12 = *(v11 - 1);
      v13 = *v11;
      swift_bridgeObjectRetain();
      v17(v10, v12, v13);
      swift_bridgeObjectRelease();
      v19 = v8;
      v14 = *(_QWORD *)(v8 + 16);
      if (v14 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_1C00B1F90();
        v8 = v19;
      }
      ++v10;
      v11 += 2;
      *(_QWORD *)(v8 + 16) = v14 + 1;
      sub_1C0242958((uint64_t)v7, v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v14);
    }
    while (v9 != v10);
  }
  swift_bridgeObjectRelease();
  return v8;
}

BOOL sub_1C0242F7C(_QWORD *a1, _QWORD *a2)
{
  return ((*(unsigned __int8 *)a1 ^ *(unsigned __int8 *)a2) & 1) == 0
      && a1[1] == a2[1]
      && a1[2] == a2[2]
      && a1[3] == a2[3]
      && a1[4] == a2[4]
      && a1[5] == a2[5];
}

uint64_t sub_1C0242FE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  __int128 v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD v54[33];

  v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
  v2 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  OUTLINED_FUNCTION_6_0();
  v5 = v4 - v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1A50);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0309BD0;
  *(_QWORD *)(inited + 32) = swift_getKeyPath();
  v34 = inited + 32;
  *(_QWORD *)(inited + 40) = swift_getKeyPath();
  *(_QWORD *)(inited + 48) = swift_getKeyPath();
  *(_QWORD *)(inited + 56) = swift_getKeyPath();
  *(_QWORD *)(inited + 64) = swift_getKeyPath();
  *(_QWORD *)(inited + 72) = swift_getKeyPath();
  *(_QWORD *)(inited + 80) = swift_getKeyPath();
  v33[1] = inited;
  *(_QWORD *)(inited + 88) = swift_getKeyPath();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726FF0);
  v8 = *(_QWORD *)(v2 + 72);
  v9 = *(unsigned __int8 *)(v2 + 80);
  v10 = (v9 + 32) & ~v9;
  v47 = v8;
  v40 = v10 + v8;
  v41 = v7;
  v39 = v9 | 7;
  v11 = swift_allocObject();
  v38 = xmmword_1C0305B60;
  *(_OWORD *)(v11 + 16) = xmmword_1C0305B60;
  v46 = v10;
  sub_1C01579A8(a1, v11 + v10);
  swift_bridgeObjectRetain();
  v12 = 0;
  v44 = 0;
  v33[0] = v11;
  while (1)
  {
    v13 = *(_QWORD *)(v11 + 16);
    if (v13)
      break;
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
LABEL_26:
    if (++v12 == 4)
    {
      swift_setDeallocating();
      sub_1C004EFC8();
      swift_setDeallocating();
      sub_1C004F084();
      return v11;
    }
  }
  v37 = v12;
  v42 = *(_OWORD *)(v34 + 16 * v12);
  v14 = v11 + v46;
  v45 = v42;
  swift_retain();
  v35 = *((_QWORD *)&v42 + 1);
  swift_retain();
  v36 = v11;
  swift_bridgeObjectRetain();
  v49 = v13 - 1;
  v11 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v48 = v14;
    sub_1C01579A8(v14, v5);
    OUTLINED_FUNCTION_4_95(v54);
    OUTLINED_FUNCTION_4_95(&v52);
    sub_1C003F648(v54);
    swift_getAtKeyPath();
    sub_1C0040644(v54);
    v16 = v50;
    v15 = v51;
    v52 = v50;
    v53 = v51;
    v50 = 31868;
    v51 = 0xE200000000000000;
    sub_1C004F408();
    OUTLINED_FUNCTION_5_87();
    if ((sub_1C030454C() & 1) != 0)
    {
      v52 = v16;
      v53 = v15;
      v50 = 31868;
      v51 = 0xE200000000000000;
      OUTLINED_FUNCTION_5_87();
      v17 = sub_1C03044D4();
      v18 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v18);
      v31 = v5;
      v32 = v42;
      v19 = v44;
      v20 = sub_1C0242E10(v17, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C0243E84, (uint64_t)&v33[-6]);
      v44 = v19;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = v38;
      sub_1C01579A8(v5, v20 + v46);
    }
    sub_1C0243E44(v5);
    v21 = *(_QWORD *)(v20 + 16);
    v22 = *(_QWORD *)(v11 + 16);
    if (__OFADD__(v22, v21))
      break;
    if (!swift_isUniquelyReferenced_nonNull_native() || v22 + v21 > *(_QWORD *)(v11 + 24) >> 1)
    {
      sub_1C0050278();
      v11 = v23;
    }
    if (*(_QWORD *)(v20 + 16))
    {
      v24 = *(_QWORD *)(v11 + 16);
      if ((*(_QWORD *)(v11 + 24) >> 1) - v24 < v21)
        goto LABEL_30;
      v25 = v11 + v46 + v24 * v47;
      if (v20 + v46 < v25 + v21 * v47 && v25 < v20 + v46 + v21 * v47)
        goto LABEL_32;
      swift_arrayInitWithCopy();
      if (v21)
      {
        v27 = *(_QWORD *)(v11 + 16);
        v28 = __OFADD__(v27, v21);
        v29 = v27 + v21;
        if (v28)
          goto LABEL_31;
        *(_QWORD *)(v11 + 16) = v29;
      }
    }
    else if (v21)
    {
      goto LABEL_29;
    }
    swift_bridgeObjectRelease();
    if (!v49)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
      v12 = v37;
      goto LABEL_26;
    }
    --v49;
    v14 = v48 + v47;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  DWORD2(v32) = 0;
  *(_QWORD *)&v32 = 1092;
  LOBYTE(v31) = 2;
  result = sub_1C0304828();
  __break(1u);
  return result;
}

void *sub_1C02434AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  char *v9;
  char v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  _QWORD __dst[33];
  _QWORD v16[33];

  sub_1C01579A8(a4, (uint64_t)a5);
  v16[0] = a2;
  v16[1] = a3;
  swift_bridgeObjectRetain();
  swift_setAtWritableKeyPath();
  v9 = &a5[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98) + 36)];
  v11 = v9[280];
  v12 = *((_OWORD *)v9 + 18);
  v13 = *((_OWORD *)v9 + 19);
  v14 = *((_QWORD *)v9 + 40);
  v16[0] = a1;
  swift_setAtWritableKeyPath();
  v9[280] = v11;
  *((_OWORD *)v9 + 18) = v12;
  *((_OWORD *)v9 + 19) = v13;
  *((_QWORD *)v9 + 40) = v14;
  memcpy(__dst, a5, sizeof(__dst));
  memcpy(v16, v9 + 8, sizeof(v16));
  sub_1C003F648(__dst);
  sub_1C0040644(v16);
  return memcpy(v9 + 8, __dst, 0x108uLL);
}

uint64_t sub_1C02435C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x726F7272457369 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6D614E6E65766967 && a2 == 0xED00006B6E615265;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x614E656C6464696DLL && a2 == 0xEE006B6E6152656DLL;
        if (v8 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x614E796C696D6166 && a2 == 0xEE006B6E6152656DLL;
          if (v9 || (sub_1C0304A08() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x656D614E6C6C7566 && a2 == 0xEC0000006B6E6152)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v11 = sub_1C0304A08();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_1C02438B0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C02438E4
                                                            + 4 * asc_1C031ED80[a1]))(0x726F7272457369, 0xE700000000000000);
}

uint64_t sub_1C02438E4()
{
  return 0x6E6F6973726576;
}

uint64_t sub_1C02438F8()
{
  return 0x6D614E6E65766967;
}

uint64_t sub_1C024391C()
{
  return 0x614E656C6464696DLL;
}

uint64_t sub_1C0243950()
{
  return 0x656D614E6C6C7566;
}

uint64_t sub_1C0243970(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1A38);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_6_0();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0243E08();
  sub_1C0304BA0();
  sub_1C030496C();
  if (!v1)
  {
    sub_1C0304990();
    OUTLINED_FUNCTION_33_2();
    OUTLINED_FUNCTION_33_2();
    OUTLINED_FUNCTION_33_2();
    OUTLINED_FUNCTION_33_2();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1C0243AEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1A48);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_6_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0243E08();
  sub_1C0304B88();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v6 = sub_1C03048B8();
  v7 = sub_1C03048DC();
  v12 = OUTLINED_FUNCTION_1_112();
  v11 = OUTLINED_FUNCTION_1_112();
  v10 = OUTLINED_FUNCTION_1_112();
  v8 = OUTLINED_FUNCTION_1_112();
  OUTLINED_FUNCTION_10_5();
  result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  *(_BYTE *)a2 = v6 & 1;
  *(_QWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 32) = v10;
  *(_QWORD *)(a2 + 40) = v8;
  return result;
}

uint64_t sub_1C0243CAC()
{
  unsigned __int8 *v0;

  return sub_1C02438B0(*v0);
}

uint64_t sub_1C0243CB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C02435C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0243CD8()
{
  sub_1C0243E08();
  return sub_1C0304BAC();
}

uint64_t sub_1C0243D00()
{
  sub_1C0243E08();
  return sub_1C0304BB8();
}

double sub_1C0243D28@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1C0243AEC(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1C0243D68(_QWORD *a1)
{
  return sub_1C0243970(a1);
}

_UNKNOWN **sub_1C0243D80()
{
  return &off_1E79A28E8;
}

unint64_t sub_1C0243D98()
{
  unint64_t result;

  result = qword_1EF5C19D8;
  if (!qword_1EF5C19D8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031EDD8, &type metadata for SpeechAlternativeQueryExpander.SpeechAlternativeRanks);
    atomic_store(result, (unint64_t *)&qword_1EF5C19D8);
  }
  return result;
}

unint64_t sub_1C0243DD4(_QWORD *a1)
{
  unint64_t result;

  a1[2] = sub_1C0117DD0();
  a1[3] = sub_1C0111B18();
  result = sub_1C0243D98();
  a1[4] = result;
  return result;
}

unint64_t sub_1C0243E08()
{
  unint64_t result;

  result = qword_1EF5C1A40;
  if (!qword_1EF5C1A40)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031F030, &type metadata for SpeechAlternativeQueryExpander.SpeechAlternativeRanks.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1A40);
  }
  return result;
}

uint64_t sub_1C0243E44(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1C0243E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v4;

  return sub_1C02434AC(a1, a2, a3, *(_QWORD *)(v4 + 16), a4);
}

uint64_t storeEnumTagSinglePayload for SpeechAlternativeQueryExpander.SpeechAlternativeRanks.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1C0243EDC + 4 * byte_1C031ED8B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1C0243F10 + 4 * byte_1C031ED86[v4]))();
}

uint64_t sub_1C0243F10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0243F18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0243F20);
  return result;
}

uint64_t sub_1C0243F2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0243F34);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1C0243F38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0243F40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SpeechAlternativeQueryExpander.SpeechAlternativeRanks.CodingKeys()
{
  return &type metadata for SpeechAlternativeQueryExpander.SpeechAlternativeRanks.CodingKeys;
}

unint64_t sub_1C0243F60()
{
  unint64_t result;

  result = qword_1EF5C1A58;
  if (!qword_1EF5C1A58)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031F008, &type metadata for SpeechAlternativeQueryExpander.SpeechAlternativeRanks.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1A58);
  }
  return result;
}

unint64_t sub_1C0243FA0()
{
  unint64_t result;

  result = qword_1EF5C1A60;
  if (!qword_1EF5C1A60)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031EF78, &type metadata for SpeechAlternativeQueryExpander.SpeechAlternativeRanks.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1A60);
  }
  return result;
}

unint64_t sub_1C0243FE0()
{
  unint64_t result;

  result = qword_1EF5C1A68;
  if (!qword_1EF5C1A68)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031EFA0, &type metadata for SpeechAlternativeQueryExpander.SpeechAlternativeRanks.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1A68);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_112()
{
  return sub_1C03048D0();
}

void *OUTLINED_FUNCTION_4_95(void *a1)
{
  const void *v1;

  return memcpy(a1, v1, 0x108uLL);
}

void sub_1C024404C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t *v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66[15];
  uint64_t v67;

  OUTLINED_FUNCTION_40_0();
  v2 = v1;
  v4 = v3;
  v5 = sub_1C0303EEC();
  v62 = *(_QWORD *)(v5 - 8);
  v63 = v5;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_53();
  v61 = v7;
  v60 = *(_QWORD *)(OUTLINED_FUNCTION_76_10() - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_53();
  v67 = v9;
  if (qword_1ED727970 != -1)
    swift_once();
  v10 = OUTLINED_FUNCTION_9_0();
  __swift_project_value_buffer(v10, (uint64_t)&unk_1ED7295C8);
  swift_bridgeObjectRetain_n();
  v11 = sub_1C0303B80();
  v12 = sub_1C03042E8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v66[0] = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v13 = 136315138;
    OUTLINED_FUNCTION_31_6();
    sub_1C003E6D8(v4, v2, v66);
    sub_1C03044B0();
    OUTLINED_FUNCTION_8_2();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v11, v12, "finding runtime data records. taskId=%s", v13);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
  *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 64) = &off_1E799BE20;
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 40) = v2;
  OUTLINED_FUNCTION_31_6();
  OUTLINED_FUNCTION_1_8();
  v17 = OUTLINED_FUNCTION_60_6(v15, v16, inited);
  if (v0)
  {
    OUTLINED_FUNCTION_66_9();
    OUTLINED_FUNCTION_59_15();
LABEL_23:
    OUTLINED_FUNCTION_28_0();
  }
  else
  {
    v18 = v17;
    OUTLINED_FUNCTION_66_9();
    OUTLINED_FUNCTION_59_15();
    sub_1C00704C0(v18);
    v20 = v19;
    sub_1C007073C();
    v22 = v21;
    v23 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      if (!v22)
      {
        OUTLINED_FUNCTION_29_0();
        OUTLINED_FUNCTION_28_9();
        v39 = *(_QWORD *)(v23 + 16);
        if (v39)
        {
          v66[0] = MEMORY[0x1E0DEE9D8];
          sub_1C00B1A9C();
          v40 = v23 + 40;
          while (1)
          {
            swift_bridgeObjectRetain();
            sub_1C0303EE0();
            sub_1C0303EBC();
            v42 = v41;
            (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
            if (v42 >> 60 == 15)
              break;
            OUTLINED_FUNCTION_77_8();
            OUTLINED_FUNCTION_38_6();
            OUTLINED_FUNCTION_72_8();
            sub_1C006831C(&qword_1EF5C1A80, (uint64_t (*)(uint64_t))type metadata accessor for RunTimeDataRecord, (uint64_t)&unk_1C0312D18);
            sub_1C0301624();
            swift_release();
            OUTLINED_FUNCTION_80_8();
            OUTLINED_FUNCTION_31();
            v43 = v66[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C00B1A9C();
              v43 = v66[0];
            }
            v44 = *(_QWORD *)(v43 + 16);
            if (v44 >= *(_QWORD *)(v43 + 24) >> 1)
            {
              sub_1C00B1A9C();
              v43 = v66[0];
            }
            v40 += 16;
            *(_QWORD *)(v43 + 16) = v44 + 1;
            sub_1C004555C(v67, v43+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(_QWORD *)(v60 + 72) * v44, (uint64_t (*)(_QWORD))type metadata accessor for RunTimeDataRecord);
            if (!--v39)
            {
              OUTLINED_FUNCTION_8_1();
              goto LABEL_23;
            }
          }
          type metadata accessor for InferenceError();
          v49 = OUTLINED_FUNCTION_75_12();
          v59 = MEMORY[0x1E0DEE9D8];
          v50 = OUTLINED_FUNCTION_50_22();
          sub_1C026A508(v50, v51, v52, v53, v54, 0xD000000000000014, v55, 135, v59, 2);
          OUTLINED_FUNCTION_26_3();
          sub_1C006831C((unint64_t *)&qword_1ED727E90, (uint64_t (*)(uint64_t))type metadata accessor for InferenceError, (uint64_t)&protocol conformance descriptor for InferenceError);
          v56 = (void *)OUTLINED_FUNCTION_15_2();
          *v57 = v49;
          OUTLINED_FUNCTION_7_22();
          OUTLINED_FUNCTION_31();
          OUTLINED_FUNCTION_8_1();
          OUTLINED_FUNCTION_5_3();
          sub_1C0246EF4();
          OUTLINED_FUNCTION_15_2();
          *v58 = sub_1C00E8488(0xD000000000000082, 0x80000001C0334440, 0xD000000000000014, 0x80000001C03346A0, 140, 1) & 1;
          swift_willThrow();

        }
        else
        {
          OUTLINED_FUNCTION_8_1();
          sub_1C0246EF4();
          OUTLINED_FUNCTION_15_2();
          v46 = v45;
          OUTLINED_FUNCTION_1_8();
          *v46 = sub_1C00E8488(v47, v48, 0xD000000000000014, 0x80000001C03346A0, 130, 0) & 1;
          swift_willThrow();
        }
        goto LABEL_23;
      }
      v24 = *(_QWORD *)(v20 + 16);
      swift_bridgeObjectRetain();
      if (!v24 || (v25 = OUTLINED_FUNCTION_57_13(), v27 = sub_1C00B3C3C(v25, v26), (v28 & 1) == 0))
      {
        swift_bridgeObjectRetain();
        sub_1C00B0E2C();
        v36 = v35;
        OUTLINED_FUNCTION_29_0();
        v37 = 1;
LABEL_22:
        sub_1C0056D18();
        OUTLINED_FUNCTION_15_2();
        *(_OWORD *)v38 = xmmword_1C031F080;
        *(_QWORD *)(v38 + 16) = v36;
        *(_BYTE *)(v38 + 24) = v37;
        OUTLINED_FUNCTION_7_22();
        OUTLINED_FUNCTION_28_9();
        OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_29_0();
        OUTLINED_FUNCTION_8_1();
        OUTLINED_FUNCTION_29_0();
        goto LABEL_23;
      }
      v29 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v27);
      if ((v29 & 0x8000000000000000) != 0)
        break;
      if (v29 >= *(_QWORD *)(v22 + 16))
        goto LABEL_36;
      sub_1C0055F14(v22 + 40 * v29 + 32, (uint64_t)v66);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727520);
      if ((OUTLINED_FUNCTION_5_0() & 1) == 0 || !v65)
      {
        v36 = 0;
        v37 = 3;
        goto LABEL_22;
      }
      OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_29_0();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_9_20();
        sub_1C00500A0();
        v23 = v33;
      }
      v30 = *(_QWORD *)(v23 + 16);
      if (v30 >= *(_QWORD *)(v23 + 24) >> 1)
      {
        sub_1C00500A0();
        v23 = v34;
      }
      *(_QWORD *)(v23 + 16) = v30 + 1;
      v31 = v23 + 16 * v30;
      *(_QWORD *)(v31 + 32) = v64;
      *(_QWORD *)(v31 + 40) = v65;
      sub_1C007073C();
      v22 = v32;
    }
    __break(1u);
LABEL_36:
    __break(1u);
  }
}

uint64_t sub_1C0244780(unint64_t a1)
{
  void *v1;
  NSObject **v2;
  void *v3;
  uint64_t inited;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char **v10;
  NSObject *v11;
  NSObject *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  NSObject *v52;
  uint64_t v54;
  uint64_t v55;

  v6 = v3;
  v52 = *v2;
  if (!(a1 >> 62))
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_1C03047F8();
  v7 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v7 >= 1)
  {
    v9 = 0;
    v10 = &selRef_setTimestampSec_;
    do
    {
      v54 = v9;
      if ((a1 & 0xC000000000000001) != 0)
        v11 = MEMORY[0x1C3B975EC]();
      else
        v11 = *(id *)(a1 + 8 * v9 + 32);
      v12 = v11;
      if (qword_1ED727970 != -1)
        swift_once();
      v13 = OUTLINED_FUNCTION_9_0();
      __swift_project_value_buffer(v13, (uint64_t)&unk_1ED7295C8);
      v14 = v12;
      OUTLINED_FUNCTION_39_24();
      v15 = OUTLINED_FUNCTION_9_1();
      if (OUTLINED_FUNCTION_16_2(v15))
      {
        v16 = OUTLINED_FUNCTION_4_0();
        v17 = OUTLINED_FUNCTION_4_0();
        v55 = v17;
        *(_DWORD *)v16 = 136315138;
        v18 = OUTLINED_FUNCTION_46_20(v17, sel_toJSON);
        v19 = OUTLINED_FUNCTION_48_21();
        v21 = v20;

        *(_QWORD *)(v16 + 4) = sub_1C003E6D8(v19, v21, &v55);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_13_0(&dword_1C0039000, v12, (os_log_type_t)inited, "evaluationResults: %s", (uint8_t *)v16);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_5();
      }

      v5 = v5;
      v22 = objc_msgSend(v5, v10[118]);
      v23 = OUTLINED_FUNCTION_48_21();
      inited = v24;

      v25 = objc_msgSend(v5, sel_isSuccessfulTask);
      sub_1C02FBC1C(v23, inited, (uint64_t)v25);
      v1 = v6;
      if (v6)
      {
        OUTLINED_FUNCTION_28();
        v6 = 0;
        v35 = v5;
        v36 = OUTLINED_FUNCTION_39_24();
        v37 = sub_1C03042F4();
        if (OUTLINED_FUNCTION_16_2(v37))
        {
          v38 = OUTLINED_FUNCTION_4_0();
          v39 = OUTLINED_FUNCTION_4_0();
          v55 = v39;
          *(_DWORD *)v38 = 136315138;
          v40 = OUTLINED_FUNCTION_46_20(v39, v10[118]);
          v41 = OUTLINED_FUNCTION_48_21();
          v43 = v42;

          *(_QWORD *)(v38 + 4) = sub_1C003E6D8(v41, v43, &v55);
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_13_0(&dword_1C0039000, v36, (os_log_type_t)inited, "Fail to log SiriTasksEvaluation runtime data. taskId=%s", (uint8_t *)v38);
          OUTLINED_FUNCTION_23();
          OUTLINED_FUNCTION_5();
        }

      }
      else
      {
        v28 = v26;
        v29 = v27;
        OUTLINED_FUNCTION_28();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C03084B0;
        v30 = OUTLINED_FUNCTION_46_20(inited, v10[118]);
        v31 = OUTLINED_FUNCTION_48_21();
        v33 = v32;

        v34 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(inited + 64) = &off_1E799BE20;
        *(_QWORD *)(inited + 72) = v28;
        *(_QWORD *)(inited + 32) = v31;
        *(_QWORD *)(inited + 40) = v33;
        *(_QWORD *)(inited + 96) = v34;
        *(_QWORD *)(inited + 104) = &off_1E799BE20;
        *(_QWORD *)(inited + 80) = v29;
        sub_1C006890C(0xD00000000000007CLL, 0x80000001C0334340, inited);
        v6 = 0;
        swift_release();
        OUTLINED_FUNCTION_14_60();
        OUTLINED_FUNCTION_17_54();
        v44 = v5;
        OUTLINED_FUNCTION_39_24();
        v45 = OUTLINED_FUNCTION_9_1();
        if (OUTLINED_FUNCTION_42_22(v45))
        {
          v46 = (uint8_t *)OUTLINED_FUNCTION_4_0();
          v47 = OUTLINED_FUNCTION_4_0();
          v55 = v47;
          *(_DWORD *)v46 = 136315138;
          v48 = OUTLINED_FUNCTION_46_20(v47, sel_taskId);
          v49 = sub_1C0303EB0();
          v51 = v50;

          sub_1C003E6D8(v49, v51, &v55);
          sub_1C03044B0();

          OUTLINED_FUNCTION_28();
          OUTLINED_FUNCTION_13_0(&dword_1C0039000, v52, OS_LOG_TYPE_DEFAULT, "Logging SiriTasksEvaluation runtime data. taskId=%s", v46);
          OUTLINED_FUNCTION_23();
          OUTLINED_FUNCTION_5();
        }

        v10 = &selRef_setTimestampSec_;
      }
      v9 = v54 + 1;
    }
    while (v7 != v54 + 1);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1C0244D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_40_0();
  v2 = v1;
  v3 = OUTLINED_FUNCTION_8_0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_65_0();
  if (qword_1ED727970 != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_9_0();
  __swift_project_value_buffer(v5, (uint64_t)&unk_1ED7295C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v0, v2, v3);
  v6 = sub_1C0303B80();
  v7 = sub_1C03042E8();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v8 = 136315138;
    sub_1C006831C((unint64_t *)&qword_1ED728060, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v9 = sub_1C03049E4();
    OUTLINED_FUNCTION_10_10(v9, v10);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v6, v7, "fetching runtime data db taskIds older than %s", v8);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_55();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
  v12 = sub_1C006C720();
  *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEDC60];
  *(_QWORD *)(inited + 64) = &off_1E799BE18;
  *(_QWORD *)(inited + 32) = v12;
  OUTLINED_FUNCTION_1_8();
  sub_1C0054DE4(0xD00000000000004ALL, v13, inited, v14, v15);
  OUTLINED_FUNCTION_66_9();
  OUTLINED_FUNCTION_59_15();
  OUTLINED_FUNCTION_28_0();
}

void sub_1C0244F5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  __n128 *inited;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;

  OUTLINED_FUNCTION_40_0();
  v2 = v1;
  v3 = OUTLINED_FUNCTION_8_0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_6_0();
  v7 = v6 - v5;
  if (qword_1ED727970 != -1)
    swift_once();
  v8 = OUTLINED_FUNCTION_9_0();
  __swift_project_value_buffer(v8, (uint64_t)&unk_1ED7295C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v7, v2, v3);
  v9 = sub_1C0303B80();
  v10 = sub_1C03042E8();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v11 = 136315138;
    sub_1C006831C((unint64_t *)&qword_1ED728060, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v12 = sub_1C03049E4();
    OUTLINED_FUNCTION_10_10(v12, v13);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_1();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v9, v10, "runtime data db deleting records older than %s", v11);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_47_1();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
  inited = (__n128 *)swift_initStackObject();
  v15 = OUTLINED_FUNCTION_61_13(inited, (__n128)xmmword_1C0305B60);
  v16 = MEMORY[0x1E0DEDC60];
  inited[3].n128_u64[1] = MEMORY[0x1E0DEDC60];
  inited[4].n128_u64[0] = (unint64_t)&off_1E799BE18;
  inited[2].n128_u64[0] = v15;
  OUTLINED_FUNCTION_1_8();
  sub_1C006890C(v17, v18, (uint64_t)inited);
  if (v0)
  {
    OUTLINED_FUNCTION_14_60();
    OUTLINED_FUNCTION_17_54();
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_14_60();
    OUTLINED_FUNCTION_17_54();
    v19 = (__n128 *)swift_initStackObject();
    v20 = OUTLINED_FUNCTION_61_13(v19, (__n128)xmmword_1C0305B60);
    v19[3].n128_u64[1] = v16;
    v19[4].n128_u64[0] = (unint64_t)&off_1E799BE18;
    v19[2].n128_u64[0] = v20;
    OUTLINED_FUNCTION_1_8();
    sub_1C006890C(0xD000000000000033, v21, (uint64_t)v19);
    swift_release();
    OUTLINED_FUNCTION_14_60();
    OUTLINED_FUNCTION_17_54();
    v22 = sub_1C0303B80();
    v23 = sub_1C03042E8();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1C0039000, v22, v23, "runtime data db finished deleting records", v24, 2u);
      OUTLINED_FUNCTION_5();
    }

  }
  OUTLINED_FUNCTION_28_0();
}

void sub_1C0245284()
{
  uint64_t v0;
  os_log_type_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68[2];
  char v69;
  uint64_t v70;

  OUTLINED_FUNCTION_40_0();
  v3 = v2;
  v5 = v4;
  v70 = sub_1C0303EEC();
  v64 = *(_QWORD *)(v70 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_53();
  v63 = v7;
  if (qword_1ED727970 != -1)
    swift_once();
  v8 = OUTLINED_FUNCTION_9_0();
  v9 = __swift_project_value_buffer(v8, (uint64_t)&unk_1ED7295C8);
  swift_bridgeObjectRetain_n();
  sub_1C0303B80();
  v10 = OUTLINED_FUNCTION_9_1();
  if (OUTLINED_FUNCTION_42_22(v10))
  {
    v11 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v68[0] = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v11 = 136315138;
    swift_bridgeObjectRetain();
    sub_1C003E6D8(v5, v3, v68);
    sub_1C03044B0();
    OUTLINED_FUNCTION_8_2();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v9, v1, "fetching siriTasksEvaluationData for taskId=%s", v11);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
  *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 64) = &off_1E799BE20;
  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(inited + 40) = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_1_8();
  v15 = OUTLINED_FUNCTION_60_6(v13, v14, inited);
  if (v0)
  {
    swift_setDeallocating();
    sub_1C004EFEC();
LABEL_23:
    OUTLINED_FUNCTION_28_0();
    return;
  }
  v16 = v15;
  swift_setDeallocating();
  sub_1C004EFEC();
  sub_1C00704C0(v16);
  v18 = v17;
  OUTLINED_FUNCTION_51_17();
  v20 = v19;
  v21 = MEMORY[0x1E0DEE9D8];
  if (!v19)
  {
    OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_57();
    v37 = *(_QWORD *)(v21 + 16);
    if (v37)
    {
      v66 = MEMORY[0x1E0DEE9D8];
      sub_1C00B21D4(0, v37, 0);
      v38 = v21 + 40;
      while (1)
      {
        OUTLINED_FUNCTION_31_6();
        sub_1C0303EE0();
        sub_1C0303EBC();
        v40 = v39;
        (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v70);
        if (v40 >> 60 == 15)
          break;
        OUTLINED_FUNCTION_77_8();
        OUTLINED_FUNCTION_38_6();
        OUTLINED_FUNCTION_72_8();
        sub_1C0246F30();
        sub_1C0301624();
        swift_release();
        OUTLINED_FUNCTION_62_11();
        OUTLINED_FUNCTION_8_1();
        v41 = v68[1];
        v62 = v68[0];
        v42 = v69;
        v43 = v66;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C00B21D4(0, *(_QWORD *)(v66 + 16) + 1, 1);
          v43 = v66;
        }
        v45 = *(_QWORD *)(v43 + 16);
        v44 = *(_QWORD *)(v43 + 24);
        if (v45 >= v44 >> 1)
        {
          sub_1C00B21D4((char *)(v44 > 1), v45 + 1, 1);
          v43 = v66;
        }
        v38 += 16;
        *(_QWORD *)(v43 + 16) = v45 + 1;
        v46 = v43 + 24 * v45;
        *(_QWORD *)(v46 + 32) = v62;
        *(_QWORD *)(v46 + 40) = v41;
        *(_BYTE *)(v46 + 48) = v42;
        if (!--v37)
        {
          OUTLINED_FUNCTION_55_0();
          goto LABEL_23;
        }
      }
      type metadata accessor for InferenceError();
      v51 = OUTLINED_FUNCTION_75_12();
      v61 = MEMORY[0x1E0DEE9D8];
      v52 = OUTLINED_FUNCTION_50_22();
      sub_1C026A508(v52, v53, v54, v55, v56, 0xD000000000000025, v57, 158, v61, 2);
      OUTLINED_FUNCTION_26_3();
      sub_1C006831C((unint64_t *)&qword_1ED727E90, (uint64_t (*)(uint64_t))type metadata accessor for InferenceError, (uint64_t)&protocol conformance descriptor for InferenceError);
      v58 = (void *)OUTLINED_FUNCTION_15_2();
      *v59 = v51;
      OUTLINED_FUNCTION_7_22();
      OUTLINED_FUNCTION_8_1();
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_5_3();
      sub_1C0246EF4();
      OUTLINED_FUNCTION_15_2();
      *v60 = sub_1C00E8488(0xD000000000000082, 0x80000001C0334440, 0xD000000000000025, 0x80000001C03344D0, 162, 1) & 1;
      OUTLINED_FUNCTION_73_12();

    }
    else
    {
      OUTLINED_FUNCTION_55_0();
      sub_1C0246EF4();
      OUTLINED_FUNCTION_15_2();
      v48 = v47;
      OUTLINED_FUNCTION_1_8();
      *v48 = sub_1C00E8488(v49, v50, 0xD000000000000025, 0x80000001C03344D0, 153, 0) & 1;
      OUTLINED_FUNCTION_73_12();
    }
    goto LABEL_23;
  }
  v22 = *(_QWORD *)(v18 + 16);
  OUTLINED_FUNCTION_45_0();
  if (!v22 || (v23 = OUTLINED_FUNCTION_57_13(), v25 = OUTLINED_FUNCTION_81_7(v23, v24), (v26 & 1) == 0))
  {
    OUTLINED_FUNCTION_45_0();
    sub_1C00B0E2C();
    v34 = v33;
    OUTLINED_FUNCTION_28();
    v35 = 1;
    goto LABEL_21;
  }
  v27 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v25);
  if ((v27 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v27 < *(_QWORD *)(v20 + 16))
  {
    sub_1C0055F14(v20 + 40 * v27 + 32, (uint64_t)v68);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727520);
    if ((OUTLINED_FUNCTION_5_0() & 1) != 0 && v67)
    {
      OUTLINED_FUNCTION_29_0();
      OUTLINED_FUNCTION_28();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_9_20();
        sub_1C00500A0();
        v21 = v31;
      }
      v29 = *(_QWORD *)(v21 + 16);
      v28 = *(_QWORD *)(v21 + 24);
      if (v29 >= v28 >> 1)
      {
        OUTLINED_FUNCTION_34_1(v28);
        sub_1C00500A0();
        v21 = v32;
      }
      *(_QWORD *)(v21 + 16) = v29 + 1;
      v30 = v21 + 16 * v29;
      *(_QWORD *)(v30 + 32) = v65;
      *(_QWORD *)(v30 + 40) = v67;
      OUTLINED_FUNCTION_51_17();
      OUTLINED_FUNCTION_57();
      goto LABEL_22;
    }
    v34 = 0;
    v35 = 3;
LABEL_21:
    sub_1C0056D18();
    OUTLINED_FUNCTION_15_2();
    *(_OWORD *)v36 = xmmword_1C031F080;
    *(_QWORD *)(v36 + 16) = v34;
    *(_BYTE *)(v36 + 24) = v35;
    OUTLINED_FUNCTION_7_22();
    OUTLINED_FUNCTION_57();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_28();
LABEL_22:
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_28();
    goto LABEL_23;
  }
  __break(1u);
}

void sub_1C0245950()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_58_19();
  OUTLINED_FUNCTION_31_33();
  if (qword_1ED727970 != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_9_0();
  __swift_project_value_buffer(v3, (uint64_t)&unk_1ED7295C8);
  OUTLINED_FUNCTION_26_39();
  sub_1C0303B80();
  v4 = OUTLINED_FUNCTION_9_1();
  if (OUTLINED_FUNCTION_30(v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_15_51(4.8149e-34);
    OUTLINED_FUNCTION_25_31();
    OUTLINED_FUNCTION_3_119();
    OUTLINED_FUNCTION_8_2();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v0, v2, "deleting SiriTasksEvaluation runtime data. taskId=%s", v5);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
  v6 = OUTLINED_FUNCTION_63_8();
  *(_OWORD *)(v6 + 16) = xmmword_1C0305B60;
  OUTLINED_FUNCTION_23_38((_QWORD *)v6, MEMORY[0x1E0DEA968]);
  OUTLINED_FUNCTION_1_8();
  OUTLINED_FUNCTION_13_55(52, v7);
  if (!v1)
    swift_release();
  OUTLINED_FUNCTION_14_60();
  OUTLINED_FUNCTION_17_54();
  OUTLINED_FUNCTION_42_19();
}

uint64_t sub_1C0245AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  char v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[4];
  _BYTE v32[24];
  uint64_t v33;
  _BYTE v34[40];
  uint64_t v35;

  v31[1] = a3;
  v31[0] = sub_1C0303EEC();
  v11 = *(_QWORD *)(v31[0] - 8);
  MEMORY[0x1E0C80A78](v31[0]);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v14 = sub_1C00A9B84(a1, a2, a4);
  v16 = v15;
  result = swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C00B0E2C();
    v24 = v23;
    swift_bridgeObjectRelease();
    sub_1C0056D18();
    swift_allocError();
    *(_QWORD *)v25 = a1;
    *(_QWORD *)(v25 + 8) = a2;
    *(_QWORD *)(v25 + 16) = v24;
    *(_BYTE *)(v25 + 24) = 1;
    return swift_willThrow();
  }
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v14 >= *(_QWORD *)(a5 + 16))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_1C0055F14(a5 + 40 * v14 + 32, (uint64_t)v34);
  sub_1C0055F14((uint64_t)v34, (uint64_t)v32);
  if (v33)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727518);
    v18 = a6;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v19 = v31[2];
      v20 = v31[3];
      v21 = type metadata accessor for RunTimeDataRecord();
      sub_1C006831C(&qword_1EF5C1A80, (uint64_t (*)(uint64_t))type metadata accessor for RunTimeDataRecord, (uint64_t)&unk_1C0312D18);
      v22 = v35;
      sub_1C0301624();
      sub_1C0044B78((uint64_t)v34, &qword_1ED727520);
      result = sub_1C0040600(v19, v20);
      if (!v22)
        return __swift_storeEnumTagSinglePayload(v18, 0, 1, v21);
      return result;
    }
  }
  else
  {
    sub_1C0044B78((uint64_t)v32, &qword_1ED727520);
    v18 = a6;
  }
  sub_1C0055F14((uint64_t)v34, (uint64_t)v32);
  if (!v33)
  {
    sub_1C0044B78((uint64_t)v32, &qword_1ED727520);
    goto LABEL_16;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727518);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    sub_1C0044B78((uint64_t)v34, &qword_1ED727520);
    v30 = type metadata accessor for RunTimeDataRecord();
    return __swift_storeEnumTagSinglePayload(v18, 1, 1, v30);
  }
  sub_1C0303EE0();
  v26 = sub_1C0303EBC();
  v28 = v27;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, _QWORD))(v11 + 8))(v13, v31[0]);
  if (v28 >> 60 == 15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  v21 = type metadata accessor for RunTimeDataRecord();
  sub_1C006831C(&qword_1EF5C1A80, (uint64_t (*)(uint64_t))type metadata accessor for RunTimeDataRecord, (uint64_t)&unk_1C0312D18);
  v29 = v35;
  sub_1C0301624();
  sub_1C0044B78((uint64_t)v34, &qword_1ED727520);
  result = sub_1C00D9830(v26, v28);
  if (!v29)
    return __swift_storeEnumTagSinglePayload(v18, 0, 1, v21);
  return result;
}

void sub_1C0245E2C()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_58_19();
  OUTLINED_FUNCTION_31_33();
  if (qword_1ED727970 != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_9_0();
  __swift_project_value_buffer(v3, (uint64_t)&unk_1ED7295C8);
  OUTLINED_FUNCTION_26_39();
  sub_1C0303B80();
  v4 = OUTLINED_FUNCTION_9_1();
  if (OUTLINED_FUNCTION_30(v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_15_51(4.8149e-34);
    OUTLINED_FUNCTION_25_31();
    OUTLINED_FUNCTION_3_119();
    OUTLINED_FUNCTION_8_2();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v0, v2, "deleting contact runtime data. taskId=%s", v5);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
  v6 = OUTLINED_FUNCTION_63_8();
  *(_OWORD *)(v6 + 16) = xmmword_1C0305B60;
  OUTLINED_FUNCTION_23_38((_QWORD *)v6, MEMORY[0x1E0DEA968]);
  OUTLINED_FUNCTION_1_8();
  OUTLINED_FUNCTION_13_55(47, v7);
  if (!v1)
    swift_release();
  OUTLINED_FUNCTION_14_60();
  OUTLINED_FUNCTION_17_54();
  OUTLINED_FUNCTION_42_19();
}

void sub_1C0245F94()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_58_19();
  OUTLINED_FUNCTION_31_33();
  if (qword_1ED727970 != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_9_0();
  __swift_project_value_buffer(v3, (uint64_t)&unk_1ED7295C8);
  OUTLINED_FUNCTION_26_39();
  sub_1C0303B80();
  v4 = OUTLINED_FUNCTION_9_1();
  if (OUTLINED_FUNCTION_30(v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_15_51(4.8149e-34);
    OUTLINED_FUNCTION_25_31();
    OUTLINED_FUNCTION_3_119();
    OUTLINED_FUNCTION_8_2();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v0, v2, "marking contact runtime data as processed. taskId=%s", v5);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
  v6 = OUTLINED_FUNCTION_63_8();
  *(_OWORD *)(v6 + 16) = xmmword_1C0305B60;
  OUTLINED_FUNCTION_23_38((_QWORD *)v6, MEMORY[0x1E0DEA968]);
  OUTLINED_FUNCTION_1_8();
  OUTLINED_FUNCTION_13_55(106, v7);
  if (!v1)
    swift_release();
  OUTLINED_FUNCTION_14_60();
  OUTLINED_FUNCTION_17_54();
  OUTLINED_FUNCTION_42_19();
}

void sub_1C02460FC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  __int128 v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t (*v36)();
  unint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t (*v45)();
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t (*v63)();
  unint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t (*v72)();
  uint64_t (**v73)();
  BOOL v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  __int128 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t (**v132)();
  uint64_t v133;
  uint64_t v134;
  uint64_t (*v135)();
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t (*v142)();
  uint64_t v143;
  uint64_t v144;
  uint64_t (*v145)();
  uint64_t v146;
  uint64_t (**v147)();

  OUTLINED_FUNCTION_40_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7277E0);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_6_0();
  v5 = (uint64_t (*)())(v4 - v3);
  v6 = OUTLINED_FUNCTION_76_10();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v116 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v133 = (uint64_t)&v116 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728360);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_53();
  v140 = v13;
  v141 = OUTLINED_FUNCTION_8_0();
  v138 = *(_QWORD *)(v141 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_27();
  v129 = v15;
  MEMORY[0x1E0C80A78](v16);
  v137 = (char *)&v116 - v17;
  v139 = type metadata accessor for UnstitchedTask();
  v131 = *(_QWORD *)(v139 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_27();
  v130 = v19;
  v21 = MEMORY[0x1E0C80A78](v20);
  v132 = (uint64_t (**)())((char *)&v116 - v22);
  MEMORY[0x1E0C80A78](v21);
  v147 = (uint64_t (**)())((char *)&v116 - v23);
  v24 = *v0;
  if (qword_1ED727970 != -1)
    goto LABEL_71;
LABEL_2:
  v25 = OUTLINED_FUNCTION_9_0();
  v136 = __swift_project_value_buffer(v25, (uint64_t)&unk_1ED7295C8);
  v26 = v136;
  sub_1C0303B80();
  v27 = OUTLINED_FUNCTION_9_1();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_1C0039000, v26, v27, "fetching unstitched tasks from runtime data DB", v28, 2u);
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_60_6(0xD0000000000000B5, 0x80000001C03345A0, MEMORY[0x1E0DEE9D8]);
  if (v1)
    goto LABEL_66;
  v122 = v24;
  v120 = v10;
  v121 = v7;
  v126 = v6;
  v135 = v5;
  v123 = swift_retain();
  v29 = sub_1C00704C0(v123);
  v24 = v30;
  swift_retain();
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_51_17();
  v10 = v31;
  v6 = 40;
  *((_QWORD *)&v32 + 1) = 0xE400000000000000;
  v124 = xmmword_1C031F080;
  *(_QWORD *)&v32 = 136315138;
  v128 = v32;
  v127 = MEMORY[0x1E0DEE9B8] + 8;
  v7 = MEMORY[0x1E0DEE9D8];
  v125 = MEMORY[0x1E0DEE9D8];
  v134 = v29;
  while (1)
  {
    if (!v10)
    {
      OUTLINED_FUNCTION_2();
      swift_release_n();
      v113 = *(_QWORD *)(v7 + 16);
      if (v113)
      {
        v114 = v7 + 40;
        v115 = v122;
        do
        {
          v146 = v115;
          swift_bridgeObjectRetain();
          sub_1C0245F94();
          v146 = v115;
          sub_1C0245E2C();
          v114 += 16;
          OUTLINED_FUNCTION_33();
          --v113;
        }
        while (v113);
      }
      OUTLINED_FUNCTION_27_41();
      OUTLINED_FUNCTION_29_0();
      goto LABEL_66;
    }
    swift_release();
    if (!*(_QWORD *)(v24 + 16)
      || (v33 = OUTLINED_FUNCTION_81_7(0x64496B736174, 0xE600000000000000), (v34 & 1) == 0))
    {
      OUTLINED_FUNCTION_45_0();
      sub_1C00B0E2C();
      v106 = v105;
      OUTLINED_FUNCTION_28();
      v107 = 1;
LABEL_57:
      sub_1C0056D18();
      OUTLINED_FUNCTION_15_2();
      *(_OWORD *)v108 = xmmword_1C031F0A0;
      *(_QWORD *)(v108 + 16) = v106;
      *(_BYTE *)(v108 + 24) = v107;
      OUTLINED_FUNCTION_7_22();
      OUTLINED_FUNCTION_40_26();
      OUTLINED_FUNCTION_29_0();
      swift_release();
      OUTLINED_FUNCTION_27_41();
      OUTLINED_FUNCTION_31();
      OUTLINED_FUNCTION_2();
      goto LABEL_66;
    }
    v35 = *(_QWORD *)(*(_QWORD *)(v24 + 56) + 8 * v33);
    if ((v35 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      swift_once();
      goto LABEL_2;
    }
    if (v35 >= *((_QWORD *)v10 + 2))
      goto LABEL_68;
    v143 = v7;
    v5 = (uint64_t (*)())(v10 + 32);
    OUTLINED_FUNCTION_68_10(v35);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727520);
    if ((OUTLINED_FUNCTION_5_0() & 1) == 0 || !v145)
    {
      v106 = 0;
      v107 = 3;
      goto LABEL_57;
    }
    v142 = v145;
    if (!*(_QWORD *)(v24 + 16)
      || (v36 = (uint64_t (*)())v144,
          v37 = OUTLINED_FUNCTION_81_7(0x5F64657461657263, 0xEA00000000007461),
          (v38 & 1) == 0))
    {
      OUTLINED_FUNCTION_45_0();
      sub_1C00B0E2C();
      v110 = v109;
      OUTLINED_FUNCTION_28();
      sub_1C0056D18();
      OUTLINED_FUNCTION_15_2();
      v112 = 1;
      goto LABEL_65;
    }
    v39 = *(_QWORD *)(*(_QWORD *)(v24 + 56) + 8 * v37);
    if ((v39 & 0x8000000000000000) != 0)
      goto LABEL_69;
    if (v39 >= *((_QWORD *)v10 + 2))
      goto LABEL_70;
    OUTLINED_FUNCTION_68_10(v39);
    if ((OUTLINED_FUNCTION_5_0() & 1) == 0)
      break;
    v40 = v140;
    sub_1C0301CA8();
    v41 = v141;
    __swift_storeEnumTagSinglePayload(v40, 0, 1, v141);
    if (__swift_getEnumTagSinglePayload(v40, 1, v41) == 1)
      goto LABEL_64;
    v42 = *(void (**)(char *, uint64_t, uint64_t))(v138 + 32);
    v43 = v24;
    v44 = v137;
    v42(v137, v40, v41);
    v45 = v142;
    *v147 = v36;
    v147[1] = v45;
    v46 = v139;
    v47 = v41;
    v48 = (char *)v147 + *(int *)(v139 + 20);
    v49 = v44;
    v24 = v43;
    v42(v48, (uint64_t)v49, v47);
    v50 = *(int *)(v46 + 24);
    *(uint64_t (**)())((char *)v147 + v50) = (uint64_t (*)())MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_77_8();
    OUTLINED_FUNCTION_38_6();
    v51 = OUTLINED_FUNCTION_72_8();
    v52 = OUTLINED_FUNCTION_57_13();
    v1 = 0;
    sub_1C0245AB8(v52, v53, v51, v24, (uint64_t)v10, v54);
    v55 = (uint64_t)v135;
    if (__swift_getEnumTagSinglePayload((uint64_t)v135, 1, v126) == 1)
    {
      sub_1C0044B78(v55, &qword_1ED7277E0);
      sub_1C0056D18();
      v56 = OUTLINED_FUNCTION_15_2();
      *(_OWORD *)v57 = v124;
      *(_QWORD *)(v57 + 16) = 0;
      *(_BYTE *)(v57 + 24) = 3;
      OUTLINED_FUNCTION_7_22();
      OUTLINED_FUNCTION_5_3();
      OUTLINED_FUNCTION_31();
      OUTLINED_FUNCTION_28();
      OUTLINED_FUNCTION_79_9();
      OUTLINED_FUNCTION_79_9();
      v58 = sub_1C0303B80();
      v59 = sub_1C03042F4();
      if (OUTLINED_FUNCTION_30(v59))
      {
        v60 = OUTLINED_FUNCTION_4_0();
        v146 = OUTLINED_FUNCTION_4_0();
        *(_DWORD *)v60 = v128;
        v144 = v56;
        OUTLINED_FUNCTION_79_9();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7281B0);
        v61 = sub_1C0303EF8();
        *(_QWORD *)(v60 + 4) = sub_1C003E6D8(v61, v62, &v146);
        OUTLINED_FUNCTION_31();
        OUTLINED_FUNCTION_22_4();
        OUTLINED_FUNCTION_22_4();
        OUTLINED_FUNCTION_13_0(&dword_1C0039000, v58, (os_log_type_t)v50, "could not decode RunTimeDataRecord: %s", (uint8_t *)v60);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_5();
      }
      OUTLINED_FUNCTION_22_4();
      OUTLINED_FUNCTION_22_4();

      v7 = v143;
      v5 = *v147;
      v63 = v147[1];
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_9_20();
        sub_1C00500A0();
        v7 = v97;
      }
      v64 = *(_QWORD *)(v7 + 16);
      if (v64 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_1C00500A0();
        v7 = v98;
      }
      *(_QWORD *)(v7 + 16) = v64 + 1;
      v65 = v7 + 16 * v64;
      *(_QWORD *)(v65 + 32) = v5;
      *(_QWORD *)(v65 + 40) = v63;
      OUTLINED_FUNCTION_22_4();
      sub_1C003DD84((uint64_t)v147, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
      swift_retain();
      OUTLINED_FUNCTION_45_0();
      v1 = 0;
      sub_1C007073C();
      v10 = v66;
      v6 = 40;
    }
    else
    {
      v119 = v50;
      sub_1C004555C(v55, v133, (uint64_t (*)(_QWORD))type metadata accessor for RunTimeDataRecord);
      OUTLINED_FUNCTION_5_3();
      OUTLINED_FUNCTION_31();
      OUTLINED_FUNCTION_28();
      sub_1C0050740();
      v68 = v67;
      v69 = *(_QWORD *)(v67 + 16);
      if (v69 >= *(_QWORD *)(v67 + 24) >> 1)
      {
        OUTLINED_FUNCTION_38_26();
        v68 = v99;
      }
      v6 = 40;
      *(_QWORD *)(v68 + 16) = v69 + 1;
      v70 = (*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
      v118 = *(_QWORD *)(v121 + 72);
      sub_1C004555C(v133, v68 + v70 + v118 * v69, (uint64_t (*)(_QWORD))type metadata accessor for RunTimeDataRecord);
      *(uint64_t (**)())((char *)v147 + v119) = (uint64_t (*)())v68;
      v71 = *(_QWORD *)(v125 + 16);
      if (!v71)
        goto LABEL_49;
      v117 = (*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
      v72 = *(uint64_t (**)())(v131 + 72);
      v116 = (_QWORD)v72 * (v71 - 1);
      v73 = v132;
      sub_1C00638E8(v125 + v117 + v116, (uint64_t)v132, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
      v74 = *v73 == v36 && v142 == v73[1];
      if (!v74 && (sub_1C0304A08() & 1) == 0)
      {
        sub_1C003DD84((uint64_t)v132, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
LABEL_49:
        sub_1C00638E8((uint64_t)v147, v130, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_9_20();
          sub_1C00505F0();
          v125 = v100;
        }
        v7 = v143;
        v91 = v125;
        v93 = *(_QWORD *)(v125 + 16);
        v92 = *(_QWORD *)(v125 + 24);
        if (v93 >= v92 >> 1)
        {
          OUTLINED_FUNCTION_34_1(v92);
          sub_1C00505F0();
          v91 = v101;
        }
        *(_QWORD *)(v91 + 16) = v93 + 1;
        v94 = (*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
        v125 = v91;
        v95 = v91 + v94 + *(_QWORD *)(v131 + 72) * v93;
        v5 = type metadata accessor for UnstitchedTask;
        sub_1C004555C(v130, v95, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
        goto LABEL_54;
      }
      v142 = v72;
      v75 = (char *)v132 + *(int *)(v139 + 20);
      sub_1C006831C((unint64_t *)&qword_1ED728350, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      v76 = v141;
      if ((sub_1C0303E5C() & 1) != 0)
        v77 = v75;
      else
        v77 = v48;
      v78 = v129;
      (*(void (**)(uint64_t, char *, uint64_t))(v138 + 16))(v129, v77, v76);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C01F5C14();
        v125 = v102;
      }
      v79 = v119;
      if (v71 > *(_QWORD *)(v125 + 16))
      {
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
        swift_unexpectedError();
        __break(1u);
        return;
      }
      v80 = v125 + v117;
      v81 = v76;
      v82 = v125;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v138 + 40))(v125 + v117 + *(int *)(v139 + 20) + v116, v78, v81);
      v83 = *(uint64_t *)((char *)v147 + v79);
      v84 = (uint64_t)v120;
      if (!*(_QWORD *)(v83 + 16))
        goto LABEL_73;
      v85 = *(_QWORD *)(v82 + 16);
      sub_1C00638E8(v83 + v70, (uint64_t)v120, (uint64_t (*)(_QWORD))type metadata accessor for RunTimeDataRecord);
      if (!v85)
        goto LABEL_74;
      v86 = v80 + (v85 - 1) * (_QWORD)v142;
      v87 = *(int *)(v139 + 24);
      v88 = *(_QWORD *)(v86 + v87);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v86 + v87) = v88;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        OUTLINED_FUNCTION_9_20();
        sub_1C0050740();
        v88 = v103;
        *(_QWORD *)(v86 + v87) = v103;
      }
      v90 = *(_QWORD *)(v88 + 16);
      if (v90 >= *(_QWORD *)(v88 + 24) >> 1)
      {
        OUTLINED_FUNCTION_38_26();
        v88 = v104;
        *(_QWORD *)(v86 + v87) = v104;
      }
      v6 = 40;
      *(_QWORD *)(v88 + 16) = v90 + 1;
      sub_1C004555C(v84, v88 + v70 + v90 * v118, (uint64_t (*)(_QWORD))type metadata accessor for RunTimeDataRecord);
      v5 = type metadata accessor for UnstitchedTask;
      sub_1C003DD84((uint64_t)v132, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
      v7 = v143;
LABEL_54:
      sub_1C003DD84((uint64_t)v147, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
      swift_retain();
      OUTLINED_FUNCTION_45_0();
      OUTLINED_FUNCTION_51_17();
      v10 = v96;
    }
  }
  v40 = v140;
  __swift_storeEnumTagSinglePayload(v140, 1, 1, v141);
LABEL_64:
  sub_1C0044B78(v40, &qword_1ED728360);
  sub_1C0056D18();
  OUTLINED_FUNCTION_15_2();
  v110 = 0;
  v112 = 3;
LABEL_65:
  *(_OWORD *)v111 = xmmword_1C031F090;
  *(_QWORD *)(v111 + 16) = v110;
  *(_BYTE *)(v111 + 24) = v112;
  OUTLINED_FUNCTION_73_12();
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27_41();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_40_26();
  swift_bridgeObjectRelease();
LABEL_66:
  OUTLINED_FUNCTION_28_0();
}

uint64_t sub_1C0246DF0()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1C030484C();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

unint64_t sub_1C0246E40(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000024;
  else
    return 0xD000000000000015;
}

void sub_1C0246E7C(char *a1, char *a2)
{
  sub_1C025D9A0(*a1, *a2);
}

void sub_1C0246E88()
{
  sub_1C00CEBE0();
}

uint64_t sub_1C0246E90()
{
  return sub_1C00C1AE8();
}

void sub_1C0246E98()
{
  sub_1C02EB174();
}

uint64_t sub_1C0246EA0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0246DF0();
  *a1 = result;
  return result;
}

unint64_t sub_1C0246ECC@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = sub_1C0246E40(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1C0246EF4()
{
  unint64_t result;

  result = qword_1EF5C1A70;
  if (!qword_1EF5C1A70)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031F1BC, &type metadata for RunTimeDataLoggerError);
    atomic_store(result, (unint64_t *)&qword_1EF5C1A70);
  }
  return result;
}

unint64_t sub_1C0246F30()
{
  unint64_t result;

  result = qword_1EF5C1A78;
  if (!qword_1EF5C1A78)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030CA58, &type metadata for SiriTasksEvaluationData);
    atomic_store(result, (unint64_t *)&qword_1EF5C1A78);
  }
  return result;
}

uint64_t type metadata accessor for UnstitchedTask()
{
  uint64_t result;

  result = qword_1ED727128;
  if (!qword_1ED727128)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t storeEnumTagSinglePayload for RunTimeDataLoggerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0246FF0 + 4 * byte_1C031F0B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0247024 + 4 * byte_1C031F0B0[v4]))();
}

uint64_t sub_1C0247024(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C024702C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0247034);
  return result;
}

uint64_t sub_1C0247040(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0247048);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C024704C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0247054(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RunTimeDataLoggerError()
{
  return &type metadata for RunTimeDataLoggerError;
}

uint64_t *sub_1C0247070(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C0301CFC();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C024712C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1C0301CFC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1C0247188(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C0301CFC();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1C0247218(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C0301CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1C02472B8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C0301CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_1C0247330(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C0301CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C02473B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C02473C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C0301CFC();
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1C0247438()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0247444(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1C0301CFC();
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C02474B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C0301CFC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1C0247530(uint64_t a1)
{
  unint64_t result;

  result = sub_1C0246EF4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0247558()
{
  unint64_t result;

  result = qword_1EF5C1A88;
  if (!qword_1EF5C1A88)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031F194, &type metadata for RunTimeDataLoggerError);
    atomic_store(result, (unint64_t *)&qword_1EF5C1A88);
  }
  return result;
}

ValueMetadata *type metadata accessor for RunTimeDataLogger()
{
  return &type metadata for RunTimeDataLogger;
}

uint64_t OUTLINED_FUNCTION_3_119()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_13_55(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C006890C(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2, v2);
}

uint64_t OUTLINED_FUNCTION_14_60()
{
  return swift_setDeallocating();
}

uint64_t OUTLINED_FUNCTION_15_51(float a1)
{
  float *v1;

  *v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_17_54()
{
  return sub_1C004EFEC();
}

uint64_t OUTLINED_FUNCTION_23_38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  a1[7] = a2;
  a1[8] = v2;
  a1[4] = v4;
  a1[5] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_25_31()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1C003E6D8(v1, v0, (uint64_t *)(v2 - 72));
}

uint64_t OUTLINED_FUNCTION_27_41()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_40_26()
{
  return swift_bridgeObjectRelease();
}

BOOL OUTLINED_FUNCTION_42_22(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

id OUTLINED_FUNCTION_46_20(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_48_21()
{
  return sub_1C0303EB0();
}

uint64_t OUTLINED_FUNCTION_57_13()
{
  return 1635017060;
}

uint64_t OUTLINED_FUNCTION_60_6(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C006890C(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_61_13(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return sub_1C006C720();
}

uint64_t OUTLINED_FUNCTION_68_10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1C0055F14(v1 + a1 * v2, v3 - 128);
}

uint64_t OUTLINED_FUNCTION_73_12()
{
  return swift_willThrow();
}

unint64_t OUTLINED_FUNCTION_81_7(uint64_t a1, uint64_t a2)
{
  return sub_1C00B3C3C(a1, a2);
}

uint64_t sub_1C0247698(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  char *v4;
  char v5;

  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    return 0;
  result = 0;
  switch(*(_BYTE *)(a1 + 25))
  {
    case 1:
      OUTLINED_FUNCTION_0_131();
      OUTLINED_FUNCTION_7_14();
      OUTLINED_FUNCTION_9_31();
      v5 = 5;
      goto LABEL_11;
    case 4:
      OUTLINED_FUNCTION_0_131();
      OUTLINED_FUNCTION_7_14();
      OUTLINED_FUNCTION_9_31();
      v5 = 4;
      goto LABEL_11;
    case 6:
      OUTLINED_FUNCTION_0_131();
      OUTLINED_FUNCTION_7_14();
      OUTLINED_FUNCTION_9_31();
      v5 = 2;
      goto LABEL_11;
    case 7:
      OUTLINED_FUNCTION_0_131();
      OUTLINED_FUNCTION_7_14();
      OUTLINED_FUNCTION_9_31();
      v5 = 9;
      goto LABEL_11;
    case 0xA:
      OUTLINED_FUNCTION_0_131();
      OUTLINED_FUNCTION_7_14();
      OUTLINED_FUNCTION_9_31();
      v5 = 1;
      goto LABEL_11;
    case 0xB:
      OUTLINED_FUNCTION_0_131();
      OUTLINED_FUNCTION_7_14();
      OUTLINED_FUNCTION_9_31();
      v5 = 7;
      goto LABEL_11;
    case 0xC:
      OUTLINED_FUNCTION_0_131();
      OUTLINED_FUNCTION_7_14();
      OUTLINED_FUNCTION_9_31();
      v5 = 11;
LABEL_11:
      result = sub_1C0078A30(v5, v3, 2, 2, v4, 1, 1, 0);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_131()
{
  return type metadata accessor for DateTimeConstraint();
}

void sub_1C02477B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  void *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char v77;
  char *v78;
  _QWORD *v79;
  char v80;
  char v81;
  unint64_t v82;
  char v83;
  unint64_t v84;
  char v85;
  uint64_t v86;
  char v87;
  id v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int EnumTagSinglePayload;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  int v109;
  void (*v110)(char *, uint64_t);
  double v111;
  _QWORD v112[2];
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  __int128 v121;
  _BYTE *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  __int128 v130;
  __int128 v131;
  uint64_t v132;
  _QWORD *v133;
  char *v134;
  void *v135;
  char *v136;
  char *v137;
  int *v138;
  uint64_t v139;
  _BYTE v140[168];
  uint64_t v141;
  uint64_t v142;
  __int128 v143;
  uint64_t v144;
  __int128 v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  char v149;
  _BYTE v150[7];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8AD0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_27();
  v125 = v5;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v6);
  v129 = (char *)v112 - v7;
  v127 = OUTLINED_FUNCTION_20_36();
  v112[1] = *(_QWORD *)(v127 - 8);
  MEMORY[0x1E0C80A78](v127);
  v9 = (char *)v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StitchedContactResolverRequest(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_53();
  v119 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA150);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_53();
  v132 = v14;
  v138 = (int *)type metadata accessor for ContactResolverRunTimeData(0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_53();
  v134 = (char *)v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA228);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA220);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_1_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_56_16();
  v22 = sub_1C0301D5C();
  v126 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_27();
  v139 = v23;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v24);
  v137 = (char *)v112 - v25;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v26);
  v136 = (char *)v112 - v27;
  v133 = a1;
  sub_1C00C5968(a1[4], (uint64_t)v19);
  OUTLINED_FUNCTION_33_1((uint64_t)v19, 1, v10);
  if (v31)
  {
    v28 = &qword_1EF5BA228;
    v29 = (uint64_t)v19;
LABEL_7:
    sub_1C0044B78(v29, v28);
    v32 = OUTLINED_FUNCTION_22_45();
    v42 = __swift_storeEnumTagSinglePayload(v32, v33, 1, v22);
    goto LABEL_8;
  }
  *(_QWORD *)&v131 = v10;
  v30 = *(_QWORD *)&v19[*(int *)(v10 + 24)];
  swift_bridgeObjectRetain();
  sub_1C003DD84((uint64_t)v19, type metadata accessor for StitchedContactResolverRequest);
  sub_1C00C5974(v30, v2);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33_1(v2, 1, v127);
  if (v31)
  {
    v28 = &qword_1EF5BA220;
    v29 = v2;
    goto LABEL_7;
  }
  v37 = (uint64_t)v134;
  sub_1C00638BC(v2, (uint64_t)v134, type metadata accessor for ContactResolverRunTimeData);
  OUTLINED_FUNCTION_82_4(v38, type metadata accessor for StitchedContactResolverRecommendation);
  sub_1C0044B0C(v37 + v138[19], v1, &qword_1ED728070);
  sub_1C003DD84(v37, type metadata accessor for ContactResolverRunTimeData);
  v39 = OUTLINED_FUNCTION_22_45();
  v42 = OUTLINED_FUNCTION_33_1(v39, v40, v22);
  if (v41)
  {
LABEL_8:
    OUTLINED_FUNCTION_8(v42, &qword_1ED728070);
    if (qword_1EF5B7F38 == -1)
    {
LABEL_9:
      v34 = OUTLINED_FUNCTION_9_0();
      __swift_project_value_buffer(v34, (uint64_t)qword_1EF5FC728);
      v35 = OUTLINED_FUNCTION_33_0();
      v36 = sub_1C03042E8();
      if (os_log_type_enabled(v35, v36))
      {
        *(_WORD *)OUTLINED_FUNCTION_6() = 0;
        OUTLINED_FUNCTION_5_60(&dword_1C0039000, v35, v36, "skipping logging metrics since resolutionId is missing");
        OUTLINED_FUNCTION_14_61();
      }

      return;
    }
LABEL_78:
    swift_once();
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v126 + 32))(v136, v1, v22);
  sub_1C0301D50();
  v43 = type metadata accessor for StitchedContactData(0);
  v44 = v132;
  v45 = v133;
  sub_1C0044B0C((uint64_t)v133 + *(int *)(v43 + 28), v132, &qword_1EF5BA150);
  v46 = type metadata accessor for StitchableInteraction();
  v47 = OUTLINED_FUNCTION_33_1(v44, 1, v46);
  if (v31)
  {
    sub_1C0044B78(v44, &qword_1EF5BA150);
    v49 = 0.0;
  }
  else
  {
    v48 = *(double *)(v44 + *(int *)(v46 + 28));
    OUTLINED_FUNCTION_82_4(v47, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
    v49 = v48 * 1000.0;
  }
  v50 = v45[2];
  v51 = v45[3];
  v134 = v9;
  v124 = v22;
  if (v50 == 0xD000000000000013 && v51 == 0x80000001C03346C0)
    goto LABEL_19;
  OUTLINED_FUNCTION_17_55();
  if ((sub_1C0304A08() & 1) != 0)
    goto LABEL_19;
  if (v50 == 0xD000000000000011 && v51 == 0x80000001C0330740
    || (OUTLINED_FUNCTION_17_55(), (sub_1C0304A08() & 1) != 0))
  {
    sub_1C0217D00(v49);
    if ((~*(_QWORD *)&v111 & 0x7FF0000000000000) != 0)
    {
      if (v111 > -9.22337204e18)
      {
        if (v111 < 9.22337204e18)
        {
LABEL_19:
          LODWORD(v132) = *((unsigned __int8 *)v45 + *(int *)(v43 + 48));
          OUTLINED_FUNCTION_15_52();

          OUTLINED_FUNCTION_15_52();
          v54 = v53;
          v9 = v134;
          v22 = v124;
          goto LABEL_20;
        }
LABEL_81:
        __break(1u);
        JUMPOUT(0x1C0248390);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_81;
  }
  v54 = 0;
LABEL_20:
  v55 = v136;
  v56 = v137;
  sub_1C00CA904();

  v117 = *(_QWORD *)(v45[4] + 16);
  if (v117)
  {
    OUTLINED_FUNCTION_153();
    v113 = v57 + v58;
    v114 = v59;
    v122 = v150;
    v123 = v9 + 249;
    v60 = swift_bridgeObjectRetain();
    v61 = 0;
    v121 = xmmword_1C0305B60;
    v62 = v126;
    v63 = v139;
    v115 = v60;
    v116 = v11;
    while (v61 < *(_QWORD *)(v60 + 16))
    {
      v64 = *(_QWORD *)(v11 + 72);
      v120 = v61;
      v65 = v119;
      sub_1C00638BC(v113 + v64 * v61, v119, type metadata accessor for StitchedContactResolverRequest);
      v66 = *(_QWORD *)(v65 + v114);
      swift_bridgeObjectRetain();
      sub_1C003DD84(v65, type metadata accessor for StitchedContactResolverRequest);
      if (*(_QWORD *)(v66 + 16))
      {
        OUTLINED_FUNCTION_153();
        v118 = v66;
        v69 = v66 + v68;
        v128 = *(_QWORD *)(v70 + 72);
        v71 = (uint64_t)v129;
        while (1)
        {
          v132 = v69;
          v133 = v67;
          sub_1C00638BC(v69, (uint64_t)v9, type metadata accessor for StitchedContactResolverRecommendation);
          (*(void (**)(uint64_t, char *, uint64_t))(v62 + 16))(v63, &v9[v138[18]], v22);
          memcpy(v140, v9, sizeof(v140));
          v72 = *((_QWORD *)v9 + 22);
          v73 = *((_QWORD *)v9 + 25);
          v74 = *((_QWORD *)v9 + 28);
          v75 = *((_QWORD *)v9 + 29);
          v76 = *((_QWORD *)v9 + 30);
          v77 = v9[248];
          v141 = *((_QWORD *)v9 + 21);
          v142 = v72;
          v130 = *(_OWORD *)(v9 + 184);
          v143 = v130;
          v144 = v73;
          v131 = *((_OWORD *)v9 + 13);
          v145 = v131;
          v146 = v74;
          v147 = v75;
          v148 = v76;
          v149 = v77;
          v79 = v122;
          v78 = v123;
          *(_QWORD *)(v122 + 7) = *(_QWORD *)(v123 + 7);
          *v79 = *(_QWORD *)v78;
          v80 = sub_1C0049AF8();
          v81 = v80 & 1;
          v82 = BYTE7(v130) & 0xF;
          if ((v130 & 0x2000000000000000) == 0)
            v82 = v72 & 0xFFFFFFFFFFFFLL;
          if (v82)
            v83 = v81 | 2;
          else
            v83 = v80 & 1;
          if ((_QWORD)v130)
            v81 = v83;
          v84 = BYTE7(v131) & 0xF;
          if ((v131 & 0x2000000000000000) == 0)
            v84 = v73 & 0xFFFFFFFFFFFFLL;
          if (v84)
            v85 = v81 | 4;
          else
            v85 = v81;
          v86 = HIBYTE(v75) & 0xF;
          if ((v75 & 0x2000000000000000) == 0)
            v86 = v74 & 0xFFFFFFFFFFFFLL;
          if (v86)
            v85 |= 8u;
          v87 = (_QWORD)v131 ? v85 : v81;
          OUTLINED_FUNCTION_47();
          v88 = sub_1C0099AF4(v87);
          sub_1C009BEE8();
          sub_1C00CB090();
          OUTLINED_FUNCTION_14();
          v89 = (uint64_t)v134;
          swift_bridgeObjectRelease();

          v90 = v135;
          sub_1C00A2E40(v71);
          if (v90)
          {

            v135 = 0;
            v91 = 1;
          }
          else
          {
            v135 = 0;
            v91 = 0;
          }
          v92 = v127;
          v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8AD8);
          __swift_storeEnumTagSinglePayload(v71, v91, 1, v93);
          *(_QWORD *)&v130 = *(char *)(v89 + v138[13]);
          *(_QWORD *)&v131 = *(_QWORD *)(v89 + 272);
          v94 = v89 + *(int *)(v92 + 20);
          v95 = *(_QWORD *)v94;
          v96 = *(unsigned __int8 *)(v94 + 24);
          if (*(_BYTE *)(v94 + 24))
          {
            if (v96 == 1 || v96 == 2)
              OUTLINED_FUNCTION_47();
          }
          else
          {
            v97 = *(_QWORD *)(v94 + 8);
            v98 = *(_QWORD *)(v94 + 16);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727E60);
            v99 = swift_allocObject();
            *(_OWORD *)(v99 + 16) = v121;
            *(_QWORD *)(v99 + 32) = v95;
            *(_QWORD *)(v99 + 40) = v97;
            sub_1C01DAD00(v95, v97, v98, 0);
          }
          sub_1C0044B0C(v71, v125, &qword_1EF5B8AD0);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8AD8);
          v100 = OUTLINED_FUNCTION_22_45();
          EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v100, v101, v102);
          v104 = swift_bridgeObjectRetain();
          if (EnumTagSinglePayload == 1)
          {
            v105 = &qword_1EF5B8AD0;
          }
          else
          {
            sub_1C00A2990();
            v105 = &qword_1EF5B8AD8;
          }
          OUTLINED_FUNCTION_8(v104, v105);
          v140[0] = EnumTagSinglePayload == 1;
          sub_1C00CAB60();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v107 = *(_QWORD **)v94;
          v106 = *(_QWORD *)(v94 + 8);
          v108 = *(_QWORD *)(v94 + 16);
          v109 = *(unsigned __int8 *)(v94 + 24);
          if (!*(_BYTE *)(v94 + 24))
          {
            OUTLINED_FUNCTION_47();
            __asm { BR              X12 }
          }
          v9 = v134;
          v22 = v124;
          v62 = v126;
          if (v109 == 1)
            break;
          v56 = v137;
          v63 = v139;
          if (v109 != 2)
          {
            v71 = (uint64_t)v129;
            v55 = v136;
            goto LABEL_64;
          }
          if (v108)
            goto LABEL_59;
LABEL_62:
          swift_bridgeObjectRetain();
          v71 = (uint64_t)v129;
          v55 = v136;
          v63 = v139;
LABEL_64:
          v140[0] = 1;
          sub_1C00CADE4();
          OUTLINED_FUNCTION_14();
          sub_1C0044B78(v71, &qword_1EF5B8AD0);
          (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v63, v22);
          sub_1C003DD84((uint64_t)v9, type metadata accessor for StitchedContactResolverRecommendation);
          v69 = v132 + v128;
          v67 = (_QWORD *)((char *)v133 - 1);
          if (v133 == (_QWORD *)1)
            goto LABEL_65;
        }
        v56 = v137;
        if (!v108)
          goto LABEL_62;
LABEL_59:
        sub_1C0173780(v106, v108, v107);
        goto LABEL_62;
      }
LABEL_65:
      swift_bridgeObjectRelease();
      v11 = v116;
      v61 = v120 + 1;
      v60 = v115;
      if (v120 + 1 == v117)
      {
        swift_bridgeObjectRelease();
        goto LABEL_68;
      }
    }
    __break(1u);
    goto LABEL_78;
  }
  v62 = v126;
LABEL_68:
  v110 = *(void (**)(char *, uint64_t))(v62 + 8);
  v110(v56, v22);
  v110(v55, v22);
}

void sub_1C02483A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  const char *v34;
  uint64_t v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char v58[24];
  ValueMetadata *v59;
  unint64_t v60;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA150);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_27();
  v52 = v6;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v7);
  v55 = (char *)&v48 - v8;
  type metadata accessor for PrivatizedContactResolverConfig(0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_53();
  v54 = v10;
  v11 = sub_1C0301D5C();
  v50 = *(_QWORD *)(v11 - 8);
  v51 = v11;
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_53();
  v53 = v12;
  v13 = OUTLINED_FUNCTION_20_36();
  MEMORY[0x1E0C80A78](v13);
  v14 = OUTLINED_FUNCTION_56_16();
  v15 = type metadata accessor for StitchedContactResolverRequest(v14);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_1_3();
  v17 = sub_1C026B8E0();
  v59 = &type metadata for ContactFeatures;
  v60 = sub_1C0041A44();
  v58[0] = 1;
  LODWORD(v57) = sub_1C0302428();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v58);
  v18 = *(_QWORD *)(a1 + 32);
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    v48 = a1;
    v49 = v1;
    v56 = v2;
    OUTLINED_FUNCTION_153();
    v21 = v18 + v20;
    v22 = *(_QWORD *)(v16 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1C00638BC(v21, v3, type metadata accessor for StitchedContactResolverRequest);
      v23 = *(_QWORD *)(v3 + *(int *)(v15 + 24));
      if (*(_QWORD *)(v23 + 16))
        break;
      sub_1C003DD84(v3, type metadata accessor for StitchedContactResolverRequest);
      v21 += v22;
      if (!--v19)
      {
        OUTLINED_FUNCTION_33();
        return;
      }
    }
    OUTLINED_FUNCTION_153();
    v25 = v49;
    sub_1C00638BC(v23 + v24, v49, type metadata accessor for StitchedContactResolverRecommendation);
    v26 = *(_BYTE *)(v25 + *(int *)(type metadata accessor for ContactResolverRunTimeData(0) + 48));
    swift_bridgeObjectRetain();
    if (sub_1C026B898(v26, v57 & 1, v17))
    {
      if (qword_1EF5B7E68 != -1)
        swift_once();
      v27 = (uint64_t)v55;
      if (byte_1EF5FC660 == 1)
      {
        sub_1C0301D50();
        sub_1C00638BC(v3, v54, type metadata accessor for PrivatizedContactResolverConfig);
        v57 = type metadata accessor for StitchedContactData(0);
        v28 = v48 + *(int *)(v57 + 28);
        sub_1C0044B0C(v28, v27, &qword_1EF5BA150);
        v29 = type metadata accessor for StitchableInteraction();
        OUTLINED_FUNCTION_33_1(v27, 1, v29);
        if (v30)
        {
          OUTLINED_FUNCTION_33();
          OUTLINED_FUNCTION_28();
          sub_1C0044B78(v27, &qword_1EF5BA150);
        }
        else
        {
          v38 = *(_QWORD *)(v27 + *(int *)(v29 + 36));
          OUTLINED_FUNCTION_47();
          sub_1C003DD84(v27, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
          sub_1C01DF9B4(v38);
          OUTLINED_FUNCTION_33();
          OUTLINED_FUNCTION_28();
          OUTLINED_FUNCTION_14();
        }
        v39 = v52;
        sub_1C0044B0C(v28, v52, &qword_1EF5BA150);
        v40 = OUTLINED_FUNCTION_22_45();
        v42 = OUTLINED_FUNCTION_33_1(v40, v41, v29);
        if (v30)
        {
          OUTLINED_FUNCTION_8(v42, &qword_1EF5BA150);
          v43 = 0.0;
        }
        else
        {
          v43 = *(double *)(v39 + *(int *)(v29 + 28));
          sub_1C003DD84(v39, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
        }
        if ((~*(_QWORD *)&v43 & 0x7FF0000000000000) != 0)
        {
          if (v43 > -9.22337204e18)
          {
            if (v43 < 9.22337204e18)
            {
              sub_1C0217E2C((uint64_t)v43);
              v44 = v49;
              v46 = v53;
              v45 = v54;
              sub_1C00A2A48();
              swift_bridgeObjectRelease();
              sub_1C003DD84(v45, type metadata accessor for PrivatizedContactResolverConfig);
              (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v46, v51);
              sub_1C003DD84(v44, type metadata accessor for StitchedContactResolverRecommendation);
              OUTLINED_FUNCTION_82_4(v47, type metadata accessor for StitchedContactResolverRequest);
              return;
            }
            goto LABEL_33;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
LABEL_33:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_28();
      if (qword_1EF5B7F38 != -1)
        swift_once();
      v35 = OUTLINED_FUNCTION_9_0();
      __swift_project_value_buffer(v35, (uint64_t)qword_1EF5FC728);
      v32 = OUTLINED_FUNCTION_33_0();
      v36 = sub_1C03042E8();
      if (OUTLINED_FUNCTION_4_1(v36))
      {
        *(_WORD *)OUTLINED_FUNCTION_6() = 0;
        v34 = "skipping logging training sample because D&U not allowed";
LABEL_21:
        OUTLINED_FUNCTION_5_60(&dword_1C0039000, v32, (os_log_type_t)v21, v34);
        OUTLINED_FUNCTION_14_61();
      }
    }
    else
    {
      OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_28();
      if (qword_1EF5B7F38 != -1)
        swift_once();
      v31 = OUTLINED_FUNCTION_9_0();
      __swift_project_value_buffer(v31, (uint64_t)qword_1EF5FC728);
      v32 = OUTLINED_FUNCTION_33_0();
      v33 = sub_1C03042E8();
      if (OUTLINED_FUNCTION_4_1(v33))
      {
        *(_WORD *)OUTLINED_FUNCTION_6() = 0;
        v34 = "skipping logging training sample for non-force prompt";
        goto LABEL_21;
      }
    }

    sub_1C003DD84(v25, type metadata accessor for StitchedContactResolverRecommendation);
    OUTLINED_FUNCTION_82_4(v37, type metadata accessor for StitchedContactResolverRequest);
  }
}

void OUTLINED_FUNCTION_14_61()
{
  JUMPOUT(0x1C3B98378);
}

uint64_t OUTLINED_FUNCTION_15_52()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 256) = v2;
  *(_BYTE *)(v0 + 264) = v1;
  return sub_1C0099BFC();
}

uint64_t OUTLINED_FUNCTION_17_55()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_20_36()
{
  return type metadata accessor for StitchedContactResolverRecommendation(0);
}

uint64_t OUTLINED_FUNCTION_22_45()
{
  uint64_t v0;

  return v0;
}

uint64_t ContactResolver.Domain.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1C030484C();
  result = swift_bridgeObjectRelease();
  v4 = 5;
  if (v2 < 5)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t ContactResolver.Domain.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0248A08 + 4 * byte_1C031F240[*v0]))(0x736567617373656DLL, 0xE800000000000000);
}

uint64_t sub_1C0248A08()
{
  return 0x656E6F6870;
}

uint64_t sub_1C0248A1C()
{
  return 0x73746361746E6F63;
}

uint64_t sub_1C0248A30()
{
  return 0x794D646E6966;
}

uint64_t sub_1C0248A44()
{
  return 0x6669636570736E75;
}

uint64_t sub_1C0248A64(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_appCandidates) = a1;
  return OUTLINED_FUNCTION_10_69();
}

uint64_t sub_1C0248A78(uint64_t a1, uint64_t a2)
{
  return sub_1C0248A90(a1, a2, &OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_intent);
}

uint64_t sub_1C0248A84(uint64_t a1, uint64_t a2)
{
  return sub_1C0248A90(a1, a2, &OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_intentId);
}

uint64_t sub_1C0248A90(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + *a3);
  *v4 = a1;
  v4[1] = a2;
  return OUTLINED_FUNCTION_10_69();
}

void sub_1C0248AA4()
{
  unsigned __int8 *v0;

  sub_1C00CEBEC(*v0);
}

void sub_1C0248AAC(uint64_t a1)
{
  char *v1;

  sub_1C00C2780(a1, *v1);
}

void sub_1C0248AB4(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EAB7C(a1, *v1);
}

uint64_t sub_1C0248ABC@<X0>(char *a1@<X8>)
{
  return ContactResolver.Domain.init(rawValue:)(a1);
}

uint64_t sub_1C0248AC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ContactResolver.Domain.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0248AEC()
{
  sub_1C024B5B4();
  return sub_1C03040F0();
}

uint64_t sub_1C0248B48()
{
  sub_1C024B5B4();
  return sub_1C03040CC();
}

void sub_1C0248B94(char *a1)
{
  sub_1C025E674(*a1);
}

uint64_t sub_1C0248BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = OUTLINED_FUNCTION_14_4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_1_3();
  sub_1C03046CC();
  sub_1C0303FD0();
  v4 = v0 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_locale;
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_56_19(v1, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_1C0301D74();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_1C0303FD0();
  swift_bridgeObjectRelease();
  sub_1C0303FD0();
  v5 = swift_bridgeObjectRetain();
  v6 = sub_1C0184B90(v5);
  swift_bridgeObjectRelease();
  MEMORY[0x1C3B97040](v6, MEMORY[0x1E0DEA968]);
  sub_1C0303FD0();
  OUTLINED_FUNCTION_29();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32_32();
  sub_1C03047B0();
  OUTLINED_FUNCTION_32_32();
  OUTLINED_FUNCTION_14_62();
  sub_1C0303FD0();
  swift_bridgeObjectRelease();
  sub_1C0303FD0();
  OUTLINED_FUNCTION_13_56();
  sub_1C0303FD0();
  OUTLINED_FUNCTION_29();
  return 0;
}

void ContactResolver.RequestContext.__allocating_init()()
{
  swift_allocObject();
  ContactResolver.RequestContext.init()();
  OUTLINED_FUNCTION_9();
}

uint64_t ContactResolver.RequestContext.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  OUTLINED_FUNCTION_14_4();
  OUTLINED_FUNCTION_23_39();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_6_0();
  v6 = v5 - v4;
  sub_1C0301DA4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v1 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_locale, v6, v0);
  *(_QWORD *)(v1 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_appCandidates) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v1 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_domain) = 4;
  v7 = (_QWORD *)(v1 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_intent);
  *v7 = 0;
  v7[1] = 0xE000000000000000;
  v8 = (_QWORD *)(v1 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_intentId);
  *v8 = 0;
  v8[1] = 0xE000000000000000;
  return v1;
}

uint64_t sub_1C0248EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v0;
  v3 = OUTLINED_FUNCTION_14_4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_3();
  type metadata accessor for ContactResolver.RequestContext();
  v5 = swift_allocObject();
  ContactResolver.RequestContext.init()();
  v6 = v2 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_locale;
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_56_19(v1, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  v7 = v5 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_locale;
  OUTLINED_FUNCTION_30_33();
  OUTLINED_FUNCTION_56_19(v7, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40));
  swift_endAccess();
  v8 = swift_bridgeObjectRetain();
  sub_1C0248A64(v8);
  *(_BYTE *)(v5 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_domain) = *(_BYTE *)(v2 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_domain);
  OUTLINED_FUNCTION_14_62();
  sub_1C0248A78(v3, v1);
  OUTLINED_FUNCTION_13_56();
  sub_1C0248A84(v2, v3);
  return v5;
}

uint64_t static ContactResolver.RequestContext.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v34;
  uint64_t v35;

  v4 = OUTLINED_FUNCTION_14_4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v34 - v9;
  v35 = a1;
  v11 = a1 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_locale;
  OUTLINED_FUNCTION_28_2();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, v11, v4);
  v13 = sub_1C0301D74();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v10, v4);
  v17 = a2 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_locale;
  OUTLINED_FUNCTION_28_2();
  v12(v8, v17, v4);
  v18 = sub_1C0301D74();
  v20 = v19;
  v16(v8, v4);
  v21 = v13 == v18 && v15 == v20;
  if (v21)
  {
    swift_bridgeObjectRelease_n();
    v24 = v35;
  }
  else
  {
    v22 = OUTLINED_FUNCTION_176();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = 0;
    v24 = v35;
    if ((v22 & 1) == 0)
      return v23 & 1;
  }
  if ((sub_1C00F14E0() & 1) != 0
    && (sub_1C025E674(*(_BYTE *)(v24 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_domain)),
        (v25 & 1) != 0))
  {
    OUTLINED_FUNCTION_15_53(OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_intent);
    v28 = v21 && v26 == v27;
    if (v28 || (v29 = OUTLINED_FUNCTION_176(), v23 = 0, (v29 & 1) != 0))
    {
      OUTLINED_FUNCTION_15_53(OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_intentId);
      if (v21 && v30 == v31)
        v23 = 1;
      else
        v23 = OUTLINED_FUNCTION_176();
    }
  }
  else
  {
    v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_1C02491D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_14_4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_56_19(v2, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  v6 = v1 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_locale;
  OUTLINED_FUNCTION_30_33();
  OUTLINED_FUNCTION_56_19(v6, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 40));
  swift_endAccess();
  return swift_retain();
}

uint64_t sub_1C0249274()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_1C0248A64(v0);
  return swift_retain();
}

uint64_t sub_1C0249290(_BYTE *a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_domain) = *a1;
  return OUTLINED_FUNCTION_10_6();
}

uint64_t sub_1C02492A4(uint64_t a1, uint64_t a2)
{
  return sub_1C02492BC(a1, a2, (void (*)(uint64_t, uint64_t))sub_1C0248A78);
}

uint64_t sub_1C02492B0(uint64_t a1, uint64_t a2)
{
  return sub_1C02492BC(a1, a2, (void (*)(uint64_t, uint64_t))sub_1C0248A84);
}

uint64_t sub_1C02492BC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  swift_bridgeObjectRetain();
  a3(a1, a2);
  return swift_retain();
}

uint64_t sub_1C0249300(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x69646E6143707061 && a2 == 0xED00007365746164;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x746E65746E69 && a2 == 0xE600000000000000;
        if (v8 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x6449746E65746E69 && a2 == 0xE800000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_1C0304A08();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_1C0249520(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0249550 + 4 * byte_1C031F245[a1]))(0x656C61636F6CLL, 0xE600000000000000);
}

uint64_t sub_1C0249550()
{
  return 0x69646E6143707061;
}

uint64_t sub_1C0249574()
{
  return 0x6E69616D6F64;
}

uint64_t sub_1C0249584()
{
  return 0x746E65746E69;
}

uint64_t sub_1C0249594()
{
  return 0x6449746E65746E69;
}

uint64_t sub_1C02495AC()
{
  unsigned __int8 *v0;

  return sub_1C0249520(*v0);
}

uint64_t sub_1C02495B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0249300(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C02495D8()
{
  sub_1C024A92C();
  return sub_1C0304BAC();
}

uint64_t sub_1C0249600()
{
  sub_1C024A92C();
  return sub_1C0304BB8();
}

void ContactResolver.RequestContext.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_locale;
  v2 = OUTLINED_FUNCTION_14_4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_43_24();
  OUTLINED_FUNCTION_43_24();
  OUTLINED_FUNCTION_9();
}

uint64_t ContactResolver.RequestContext.__deallocating_deinit()
{
  ContactResolver.RequestContext.deinit();
  return swift_deallocClassInstance();
}

void sub_1C02496B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_40_0();
  v3 = OUTLINED_FUNCTION_25_32();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_58_0();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1A90);
  v12 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_6_0();
  v8 = v7 - v6;
  OUTLINED_FUNCTION_26_40();
  sub_1C0304BA0();
  v9 = v0;
  v10 = v0 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_locale;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v10, v3);
  sub_1C0078CC8(&qword_1EF5BE2F8, MEMORY[0x1E0CB0E50]);
  sub_1C030499C();
  if (v1)
  {
    OUTLINED_FUNCTION_21_42();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v8, v5);
  }
  else
  {
    OUTLINED_FUNCTION_21_42();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1AA0);
    sub_1C024A9E0(&qword_1EF5C1AA8, (uint64_t (*)(void))sub_1C024A968, MEMORY[0x1E0DEAF10]);
    OUTLINED_FUNCTION_34_35();
    sub_1C024A9A4();
    OUTLINED_FUNCTION_34_35();
    v11 = *(_QWORD *)(v9 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_intent);
    OUTLINED_FUNCTION_33_33(3);
    OUTLINED_FUNCTION_7_87();
    if (!v11)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_33_33(4);
      OUTLINED_FUNCTION_7_87();
    }
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v8, v5);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28_0();
}

void ContactResolver.RequestContext.__allocating_init(from:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[6];

  swift_allocObject();
  ContactResolver.RequestContext.init(from:)(a1, v2, v3, v4, v5, v6, v7, v8, v9, *(int *)v10, v10[4], v10[5]);
  OUTLINED_FUNCTION_35_39();
}

void ContactResolver.RequestContext.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_40_0();
  v31 = v12;
  OUTLINED_FUNCTION_25_32();
  OUTLINED_FUNCTION_23_39();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_6_0();
  v19 = v18 - v17;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1AC0);
  v20 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_58_0();
  v30 = v12;
  OUTLINED_FUNCTION_26_40();
  sub_1C0304B88();
  if (v13)
  {
    type metadata accessor for ContactResolver.RequestContext();
    swift_deallocPartialClassInstance();
    v28 = v12;
  }
  else
  {
    sub_1C0078CC8(&qword_1EF5BE2D0, MEMORY[0x1E0CB0E68]);
    OUTLINED_FUNCTION_44_27();
    (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v12 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_locale, v19);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1AA0);
    sub_1C024A9E0(&qword_1EF5C1AC8, (uint64_t (*)(void))sub_1C024AA48, MEMORY[0x1E0DEAF40]);
    OUTLINED_FUNCTION_44_27();
    *(_QWORD *)(v12 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_appCandidates) = v32;
    sub_1C024AA84();
    sub_1C03048E8();
    *(_BYTE *)(v12 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_domain) = a12;
    v21 = OUTLINED_FUNCTION_12_57();
    v22 = (uint64_t *)(v12 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_intent);
    *v22 = v21;
    v22[1] = v23;
    v24 = OUTLINED_FUNCTION_12_57();
    v26 = v25;
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v15, v29);
    v27 = (uint64_t *)(v31 + OBJC_IVAR____TtCC13SiriInference15ContactResolver14RequestContext_intentId);
    *v27 = v24;
    v27[1] = v26;
    v28 = v30;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v28);
  OUTLINED_FUNCTION_28_0();
}

void sub_1C0249C4C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  ContactResolver.RequestContext.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = v4;
}

void sub_1C0249C74()
{
  sub_1C02496B0();
}

uint64_t sub_1C0249C94(uint64_t *a1, uint64_t *a2)
{
  return static ContactResolver.RequestContext.== infix(_:_:)(*a1, *a2) & 1;
}

uint64_t sub_1C0249CB4()
{
  return sub_1C0248BA0();
}

uint64_t ContactResolver.AppCandidate.bundleId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void ContactResolver.AppCandidate.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t ContactResolver.AppCandidate.init(bundleId:type:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v4;

  v4 = *a3;
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = v4;
  return result;
}

BOOL static ContactResolver.AppCandidate.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v5;
  _BOOL8 result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 == v3;
  v5 = OUTLINED_FUNCTION_176();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

uint64_t sub_1C0249D74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C0249E50(char a1)
{
  if ((a1 & 1) != 0)
    return 1701869940;
  else
    return 0x6449656C646E7562;
}

void sub_1C0249E80()
{
  sub_1C024A530();
}

uint64_t sub_1C0249E98()
{
  char *v0;

  return sub_1C0249E50(*v0);
}

uint64_t sub_1C0249EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0249D74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0249EC4()
{
  sub_1C024AAC0();
  return sub_1C0304BAC();
}

uint64_t sub_1C0249EEC()
{
  sub_1C024AAC0();
  return sub_1C0304BB8();
}

void ContactResolver.AppCandidate.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_40_0();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1AE0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_3();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C024AAC0();
  sub_1C0304BA0();
  sub_1C0304960();
  if (!v0)
  {
    OUTLINED_FUNCTION_36_32();
    sub_1C024AAFC();
    OUTLINED_FUNCTION_31_34();
    sub_1C030499C();
  }
  OUTLINED_FUNCTION_75_5(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_28_0();
}

void ContactResolver.AppCandidate.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_40_0();
  v14 = v13;
  v16 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1AF8);
  OUTLINED_FUNCTION_42_23();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_65_0();
  __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  sub_1C024AAC0();
  OUTLINED_FUNCTION_17_9();
  if (v12)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  }
  else
  {
    OUTLINED_FUNCTION_46_21();
    v18 = sub_1C03048AC();
    v20 = v19;
    OUTLINED_FUNCTION_36_32();
    sub_1C024AB38();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_27_42();
    sub_1C03048E8();
    OUTLINED_FUNCTION_10_5();
    *(_QWORD *)v16 = v18;
    *(_QWORD *)(v16 + 8) = v20;
    *(_BYTE *)(v16 + 16) = a12;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28_0();
}

void sub_1C024A138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[7];

  ContactResolver.AppCandidate.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_1C024A14C()
{
  ContactResolver.AppCandidate.encode(to:)();
}

unint64_t ContactResolver.AppCandidateType.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 3;
  if (result < 3)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t ContactResolver.AppCandidateType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1C024A180@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return ContactResolver.AppCandidateType.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C024A188@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ContactResolver.AppCandidateType.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C024A1AC()
{
  sub_1C024B578();
  return sub_1C03040FC();
}

uint64_t sub_1C024A208()
{
  sub_1C024B578();
  return sub_1C03040D8();
}

uint64_t sub_1C024A254()
{
  sub_1C024B53C();
  return sub_1C03040FC();
}

uint64_t sub_1C024A2B0()
{
  sub_1C024B53C();
  return sub_1C03040D8();
}

uint64_t sub_1C024A2FC()
{
  uint64_t v0;
  __int128 v2;

  BYTE8(v2) = 0;
  sub_1C03046CC();
  sub_1C0303FD0();
  sub_1C0303FD0();
  OUTLINED_FUNCTION_29();
  sub_1C0303FD0();
  *(_QWORD *)&v2 = *(unsigned __int8 *)(v0 + 17);
  sub_1C03047B0();
  return *(_QWORD *)((char *)&v2 + 1);
}

uint64_t ContactResolver.Spec.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_WORD *)(result + 16) = 513;
  return result;
}

uint64_t ContactResolver.Spec.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_WORD *)(v0 + 16) = 513;
  return result;
}

uint64_t sub_1C024A42C(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_10_6();
}

uint64_t sub_1C024A438(_BYTE *a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = *a1;
  return OUTLINED_FUNCTION_10_6();
}

uint64_t sub_1C024A444(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001DLL && a2 == 0x80000001C0334830 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C0334850)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1C024A530()
{
  sub_1C0304B04();
  sub_1C0304B10();
  sub_1C0304B40();
  OUTLINED_FUNCTION_1_2();
}

unint64_t sub_1C024A56C(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000016;
  else
    return 0xD00000000000001DLL;
}

unint64_t sub_1C024A5A8()
{
  char *v0;

  return sub_1C024A56C(*v0);
}

uint64_t sub_1C024A5B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C024A444(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C024A5D4()
{
  sub_1C024AB74();
  return sub_1C0304BAC();
}

uint64_t sub_1C024A5FC()
{
  sub_1C024AB74();
  return sub_1C0304BB8();
}

uint64_t ContactResolver.Spec.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ContactResolver.Spec.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C024A63C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1B08);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_3();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C024AB74();
  sub_1C0304BA0();
  sub_1C030496C();
  if (!v1)
  {
    OUTLINED_FUNCTION_36_32();
    sub_1C024ABB0();
    OUTLINED_FUNCTION_31_34();
    OUTLINED_FUNCTION_34_35();
  }
  return OUTLINED_FUNCTION_75_5(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

void ContactResolver.Spec.__allocating_init(from:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[7];

  swift_allocObject();
  ContactResolver.Spec.init(from:)(a1, v2, v3, v4, v5, v6, v7, v8, v9, *(int *)v10, *(__int16 *)&v10[4], v10[6]);
  OUTLINED_FUNCTION_35_39();
}

void ContactResolver.Spec.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  OUTLINED_FUNCTION_40_0();
  v15 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1B20);
  OUTLINED_FUNCTION_42_23();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_65_0();
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  sub_1C024AB74();
  OUTLINED_FUNCTION_17_9();
  if (v13)
  {
    type metadata accessor for ContactResolver.Spec();
    swift_deallocPartialClassInstance();
  }
  else
  {
    OUTLINED_FUNCTION_46_21();
    *(_BYTE *)(v12 + 16) = sub_1C03048B8() & 1;
    OUTLINED_FUNCTION_36_32();
    sub_1C024AC0C();
    OUTLINED_FUNCTION_27_42();
    sub_1C03048E8();
    OUTLINED_FUNCTION_10_5();
    *(_BYTE *)(v12 + 17) = a12;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
  OUTLINED_FUNCTION_28_0();
}

void sub_1C024A88C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  ContactResolver.Spec.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = v4;
}

uint64_t sub_1C024A8B4(_QWORD *a1)
{
  return sub_1C024A63C(a1);
}

uint64_t sub_1C024A8D4()
{
  return sub_1C024A2FC();
}

uint64_t type metadata accessor for ContactResolver.RequestContext()
{
  uint64_t result;

  result = qword_1ED7261D8;
  if (!qword_1ED7261D8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1C024A92C()
{
  unint64_t result;

  result = qword_1EF5C1A98;
  if (!qword_1EF5C1A98)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031FA94, &_s14RequestContextC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1A98);
  }
  return result;
}

unint64_t sub_1C024A968()
{
  unint64_t result;

  result = qword_1EF5C1AB0;
  if (!qword_1EF5C1AB0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactResolver.AppCandidate, &type metadata for ContactResolver.AppCandidate);
    atomic_store(result, (unint64_t *)&qword_1EF5C1AB0);
  }
  return result;
}

unint64_t sub_1C024A9A4()
{
  unint64_t result;

  result = qword_1EF5C1AB8;
  if (!qword_1EF5C1AB8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactResolver.Domain, &type metadata for ContactResolver.Domain);
    atomic_store(result, (unint64_t *)&qword_1EF5C1AB8);
  }
  return result;
}

uint64_t sub_1C024A9E0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF5C1AA0);
    v8 = a2();
    result = MEMORY[0x1C3B9827C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C024AA48()
{
  unint64_t result;

  result = qword_1EF5C1AD0;
  if (!qword_1EF5C1AD0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactResolver.AppCandidate, &type metadata for ContactResolver.AppCandidate);
    atomic_store(result, (unint64_t *)&qword_1EF5C1AD0);
  }
  return result;
}

unint64_t sub_1C024AA84()
{
  unint64_t result;

  result = qword_1EF5C1AD8;
  if (!qword_1EF5C1AD8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactResolver.Domain, &type metadata for ContactResolver.Domain);
    atomic_store(result, (unint64_t *)&qword_1EF5C1AD8);
  }
  return result;
}

unint64_t sub_1C024AAC0()
{
  unint64_t result;

  result = qword_1EF5C1AE8;
  if (!qword_1EF5C1AE8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031FA44, &_s12AppCandidateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1AE8);
  }
  return result;
}

unint64_t sub_1C024AAFC()
{
  unint64_t result;

  result = qword_1EF5C1AF0;
  if (!qword_1EF5C1AF0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactResolver.AppCandidateType, &type metadata for ContactResolver.AppCandidateType);
    atomic_store(result, (unint64_t *)&qword_1EF5C1AF0);
  }
  return result;
}

unint64_t sub_1C024AB38()
{
  unint64_t result;

  result = qword_1EF5C1B00;
  if (!qword_1EF5C1B00)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactResolver.AppCandidateType, &type metadata for ContactResolver.AppCandidateType);
    atomic_store(result, (unint64_t *)&qword_1EF5C1B00);
  }
  return result;
}

unint64_t sub_1C024AB74()
{
  unint64_t result;

  result = qword_1EF5C1B10;
  if (!qword_1EF5C1B10)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031F9F4, &_s4SpecC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1B10);
  }
  return result;
}

unint64_t sub_1C024ABB0()
{
  unint64_t result;

  result = qword_1EF5C1B18;
  if (!qword_1EF5C1B18)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactResolver.AllowSuggestedContacts, &type metadata for ContactResolver.AllowSuggestedContacts);
    atomic_store(result, (unint64_t *)&qword_1EF5C1B18);
  }
  return result;
}

uint64_t type metadata accessor for ContactResolver.Spec()
{
  return objc_opt_self();
}

unint64_t sub_1C024AC0C()
{
  unint64_t result;

  result = qword_1EF5C1B28;
  if (!qword_1EF5C1B28)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactResolver.AllowSuggestedContacts, &type metadata for ContactResolver.AllowSuggestedContacts);
    atomic_store(result, (unint64_t *)&qword_1EF5C1B28);
  }
  return result;
}

unint64_t sub_1C024AC4C()
{
  unint64_t result;

  result = qword_1EF5C1B30;
  if (!qword_1EF5C1B30)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactResolver.Domain, &type metadata for ContactResolver.Domain);
    atomic_store(result, (unint64_t *)&qword_1EF5C1B30);
  }
  return result;
}

unint64_t sub_1C024AC8C()
{
  unint64_t result;

  result = qword_1EF5C1B38;
  if (!qword_1EF5C1B38)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactResolver.AppCandidateType, &type metadata for ContactResolver.AppCandidateType);
    atomic_store(result, (unint64_t *)&qword_1EF5C1B38);
  }
  return result;
}

unint64_t sub_1C024ACCC()
{
  unint64_t result;

  result = qword_1EF5C1B40;
  if (!qword_1EF5C1B40)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactResolver.AllowSuggestedContacts, &type metadata for ContactResolver.AllowSuggestedContacts);
    atomic_store(result, (unint64_t *)&qword_1EF5C1B40);
  }
  return result;
}

void type metadata accessor for ContactResolver.Domain()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C024AD1C()
{
  return type metadata accessor for ContactResolver.RequestContext();
}

uint64_t sub_1C024AD24()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C0301DB0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ContactResolver.RequestContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContactResolver.RequestContext.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of ContactResolver.RequestContext.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of ContactResolver.RequestContext.copy()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of ContactResolver.RequestContext.locale(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of ContactResolver.RequestContext.appCandidates(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of ContactResolver.RequestContext.domain(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of ContactResolver.RequestContext.intent(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of ContactResolver.RequestContext.intentId(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of ContactResolver.RequestContext.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of ContactResolver.RequestContext.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 312))();
}

void sub_1C024AE54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_9();
}

void type metadata accessor for ContactResolver.AppCandidate()
{
  OUTLINED_FUNCTION_17_2();
}

void type metadata accessor for ContactResolver.AppCandidateType()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t _s16AppCandidateTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_45_22(-1);
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_45_22((*a1 | (v4 << 8)) - 3);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_45_22((*a1 | (v4 << 8)) - 3);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_45_22((*a1 | (v4 << 8)) - 3);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_45_22(v8);
}

uint64_t _s16AppCandidateTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C024AF74 + 4 * byte_1C031F24F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_41_22 + 4 * byte_1C031F24A[v4]))();
}

uint64_t sub_1C024AFAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C024AFB4);
  return result;
}

uint64_t sub_1C024AFBC(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C024AFC4);
  return OUTLINED_FUNCTION_40_27();
}

void type metadata accessor for ContactResolver.AllowSuggestedContacts()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t method lookup function for ContactResolver.Spec()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContactResolver.Spec.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ContactResolver.Spec.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of ContactResolver.Spec.processNLv3SpeechAlternatives(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ContactResolver.Spec.resolveContactHandle(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ContactResolver.Spec.preferContactHandleType(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of ContactResolver.Spec.allowSuggestedContacts(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of ContactResolver.Spec.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ContactResolver.Spec.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

ValueMetadata *_s4SpecC10CodingKeysOMa()
{
  return &_s4SpecC10CodingKeysON;
}

uint64_t _s4SpecC10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_45_22(-1);
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_45_22((*a1 | (v4 << 8)) - 2);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_45_22((*a1 | (v4 << 8)) - 2);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_45_22((*a1 | (v4 << 8)) - 2);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_45_22(v8);
}

uint64_t _s4SpecC10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C024B14C + 4 * byte_1C031F259[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_41_22_0 + 4 * byte_1C031F254[v4]))();
}

uint64_t sub_1C024B184(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C024B18CLL);
  return result;
}

uint64_t sub_1C024B194(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C024B19CLL);
  return OUTLINED_FUNCTION_40_27();
}

ValueMetadata *_s12AppCandidateV10CodingKeysOMa()
{
  return &_s12AppCandidateV10CodingKeysON;
}

uint64_t _s6DomainOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_45_22(-1);
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_45_22((*a1 | (v4 << 8)) - 5);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_45_22((*a1 | (v4 << 8)) - 5);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_45_22((*a1 | (v4 << 8)) - 5);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_45_22(v8);
}

uint64_t _s6DomainOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C024B28C + 4 * byte_1C031F263[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_41_22_1 + 4 * byte_1C031F25E[v4]))();
}

uint64_t sub_1C024B2C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C024B2CCLL);
  return result;
}

uint64_t sub_1C024B2D4(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C024B2DCLL);
  return OUTLINED_FUNCTION_40_27();
}

ValueMetadata *_s14RequestContextC10CodingKeysOMa()
{
  return &_s14RequestContextC10CodingKeysON;
}

unint64_t sub_1C024B300()
{
  unint64_t result;

  result = qword_1EF5C1B48;
  if (!qword_1EF5C1B48)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031F85C, &_s14RequestContextC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1B48);
  }
  return result;
}

unint64_t sub_1C024B340()
{
  unint64_t result;

  result = qword_1EF5C1B50;
  if (!qword_1EF5C1B50)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031F914, &_s12AppCandidateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1B50);
  }
  return result;
}

unint64_t sub_1C024B380()
{
  unint64_t result;

  result = qword_1EF5C1B58;
  if (!qword_1EF5C1B58)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031F9CC, &_s4SpecC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1B58);
  }
  return result;
}

unint64_t sub_1C024B3C0()
{
  unint64_t result;

  result = qword_1EF5C1B60;
  if (!qword_1EF5C1B60)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031F93C, &_s4SpecC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1B60);
  }
  return result;
}

unint64_t sub_1C024B400()
{
  unint64_t result;

  result = qword_1EF5C1B68;
  if (!qword_1EF5C1B68)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031F964, &_s4SpecC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1B68);
  }
  return result;
}

unint64_t sub_1C024B440()
{
  unint64_t result;

  result = qword_1EF5C1B70;
  if (!qword_1EF5C1B70)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031F884, &_s12AppCandidateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1B70);
  }
  return result;
}

unint64_t sub_1C024B480()
{
  unint64_t result;

  result = qword_1EF5C1B78;
  if (!qword_1EF5C1B78)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031F8AC, &_s12AppCandidateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1B78);
  }
  return result;
}

unint64_t sub_1C024B4C0()
{
  unint64_t result;

  result = qword_1EF5C1B80;
  if (!qword_1EF5C1B80)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031F7CC, &_s14RequestContextC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1B80);
  }
  return result;
}

unint64_t sub_1C024B500()
{
  unint64_t result;

  result = qword_1EF5C1B88;
  if (!qword_1EF5C1B88)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031F7F4, &_s14RequestContextC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1B88);
  }
  return result;
}

unint64_t sub_1C024B53C()
{
  unint64_t result;

  result = qword_1EF5C1B90;
  if (!qword_1EF5C1B90)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactResolver.AllowSuggestedContacts, &type metadata for ContactResolver.AllowSuggestedContacts);
    atomic_store(result, (unint64_t *)&qword_1EF5C1B90);
  }
  return result;
}

unint64_t sub_1C024B578()
{
  unint64_t result;

  result = qword_1EF5C1B98;
  if (!qword_1EF5C1B98)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactResolver.AppCandidateType, &type metadata for ContactResolver.AppCandidateType);
    atomic_store(result, (unint64_t *)&qword_1EF5C1B98);
  }
  return result;
}

unint64_t sub_1C024B5B4()
{
  unint64_t result;

  result = qword_1EF5C1BA0;
  if (!qword_1EF5C1BA0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for ContactResolver.Domain, &type metadata for ContactResolver.Domain);
    atomic_store(result, (unint64_t *)&qword_1EF5C1BA0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_96()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_7_87()
{
  return sub_1C0304960();
}

uint64_t OUTLINED_FUNCTION_10_69()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_12_57()
{
  return sub_1C03048AC();
}

uint64_t OUTLINED_FUNCTION_13_56()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_14_62()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_15_53@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_21_42()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_25_32()
{
  return sub_1C0301DB0();
}

uint64_t OUTLINED_FUNCTION_30_33()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_32_32()
{
  return sub_1C0303FD0();
}

uint64_t OUTLINED_FUNCTION_34_35()
{
  return sub_1C030499C();
}

_BYTE *OUTLINED_FUNCTION_40_27@<X0>(_BYTE *result@<X0>, char a2@<W8>)
{
  *result = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_41_22(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_43_24()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_45_22@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t OUTLINED_FUNCTION_46_21()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 0;
  return v0 - 65;
}

void __swiftcall Place.init(worldPlaceName:domainObjectPlaceName:neighborhoodPlaceName:personPlace:)(SiriInference::Place *__return_ptr retstr, Swift::String_optional worldPlaceName, Swift::String_optional domainObjectPlaceName, SiriInference::NeighborhoodPlaceName_optional neighborhoodPlaceName, SiriInference::PersonPlace_optional *personPlace)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  _BYTE v13[208];
  _QWORD __src[33];

  object = domainObjectPlaceName.value._object;
  countAndFlagsBits = domainObjectPlaceName.value._countAndFlagsBits;
  v7 = worldPlaceName.value._object;
  v8 = worldPlaceName.value._countAndFlagsBits;
  v10 = *(_QWORD *)neighborhoodPlaceName.value.name._countAndFlagsBits;
  v11 = *(_QWORD *)(neighborhoodPlaceName.value.name._countAndFlagsBits + 8);
  v12 = *(_WORD *)(neighborhoodPlaceName.value.name._countAndFlagsBits + 16);
  sub_1C005578C((uint64_t)neighborhoodPlaceName.value.name._object, (uint64_t)v13, &qword_1EF5BF540);
  __src[0] = v8;
  __src[1] = v7;
  __src[2] = countAndFlagsBits;
  __src[3] = object;
  __src[4] = v10;
  __src[5] = v11;
  LOWORD(__src[6]) = v12;
  sub_1C005578C((uint64_t)v13, (uint64_t)&__src[7], &qword_1EF5BF540);
  memcpy(retstr, __src, sizeof(SiriInference::Place));
  OUTLINED_FUNCTION_1();
}

uint64_t Place.worldPlaceName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  OUTLINED_FUNCTION_47();
  return v1;
}

uint64_t Place.domainObjectPlaceName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  OUTLINED_FUNCTION_47();
  return v1;
}

uint64_t Place.neighborhoodPlaceName.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_WORD *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t Place.personPlace.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[208];

  sub_1C005578C(v1 + 56, (uint64_t)v4, &qword_1EF5BF540);
  sub_1C005578C((uint64_t)v4, a1, &qword_1EF5BF540);
  return sub_1C024C28C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1C0199EE4);
}

void sub_1C024B88C(uint64_t a1)
{
  __asm { BR              X9 }
}

void sub_1C024B8EC(uint64_t a1)
{
  uint64_t v1;
  __int16 v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int16 v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD v25[2];
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  uint64_t v30;
  unint64_t v31;
  __int16 v32;
  uint64_t v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  __int16 v41;
  uint64_t v42;
  uint64_t v43;
  __int16 v44;
  int v45;
  _QWORD v46[2];
  __int16 v47;
  __int16 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[208];
  _BYTE v53[288];

  v23 = v1;
  v4 = OUTLINED_FUNCTION_50_16(a1, sel_givenName);
  v22 = sub_1C0303EB0();
  v6 = v5;

  v8 = OUTLINED_FUNCTION_50_16(v7, sel_familyName);
  v9 = sub_1C0303EB0();
  v11 = v10;

  v12 = objc_msgSend((id)objc_opt_self(), sel_stringFromContact_style_, v3, 0);
  if (v12)
  {
    v13 = v12;
    v14 = sub_1C0303EB0();
    v16 = v15;

  }
  else
  {
    v14 = 0;
    v16 = 0xE000000000000000;
  }
  v17 = v2 | 0x300;
  v18 = OUTLINED_FUNCTION_50_16((uint64_t)v12, sel_givenName);
  v19 = sub_1C0303EB0();
  v21 = v20;

  v25[0] = v22;
  v25[1] = v6;
  v26 = 514;
  v27 = v9;
  v28 = v11;
  v29 = 514;
  v30 = v14;
  v31 = v16;
  v32 = 514;
  v33 = v19;
  v34 = v21;
  v35 = 514;
  v36 = 0;
  v37 = 0;
  v38 = 0;
  v39 = 0;
  v40 = 0;
  v41 = 0;
  v44 = 0;
  v42 = 0;
  v43 = 0;
  v45 = 50332416;
  nullsub_1(v25);
  v46[0] = 0x646461206B726F77;
  v46[1] = v23;
  v47 = v17;
  v48 = 515;
  v49 = 0;
  v50 = 0;
  sub_1C005578C((uint64_t)v25, (uint64_t)&v51, &qword_1EF5B9220);
  OUTLINED_FUNCTION_11_72(v52, v46);
  nullsub_1(v52);
  memset(v53, 0, 50);
  sub_1C005578C((uint64_t)v52, (uint64_t)&v53[56], &qword_1EF5BF540);
  memcpy(v24, v53, 0x106uLL);
  OUTLINED_FUNCTION_1();
}

_QWORD *sub_1C024BB7C()
{
  uint64_t v0;
  int v1;
  _QWORD *result;
  char v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[48];
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[208];
  char v34[8];
  uint64_t v35;
  __int16 v36;
  _BYTE v37[168];

  OUTLINED_FUNCTION_0_0(v0 + 56, (uint64_t)v33);
  OUTLINED_FUNCTION_0_0((uint64_t)v33, (uint64_t)v34);
  v1 = sub_1C00B8890((uint64_t)v34);
  result = 0;
  if (v1 == 1 || !v35)
    return result;
  v3 = v36;
  sub_1C005578C((uint64_t)v37, (uint64_t)v30, &qword_1EF5B9220);
  if (sub_1C00B8890((uint64_t)v30) == 1)
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v5 = v32;
    if (v32)
    {
      v6 = v31;
    }
    else
    {
      sub_1C005578C((uint64_t)v37, (uint64_t)&v24, &qword_1EF5B9220);
      v5 = v29;
      if (!v29)
      {
        v10 = v25;
        if (v25)
        {
          v11 = v24;
          OUTLINED_FUNCTION_47();
          sub_1C00500A0();
          v4 = v12;
          v13 = v12[2];
          v14 = (char *)(v13 + 1);
          if (v13 >= v12[3] >> 1)
          {
            OUTLINED_FUNCTION_1_113();
            v13 = (unint64_t)v4;
            v4 = v21;
          }
          v4[2] = v14;
          v15 = &v4[2 * v13];
          v15[4] = v11;
          v15[5] = v10;
        }
        else
        {
          v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        }
        v16 = v27;
        if (v27)
        {
          v17 = v26;
          OUTLINED_FUNCTION_47();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C00500A0();
            v4 = v22;
          }
          v18 = v4[2];
          v19 = (char *)(v18 + 1);
          if (v18 >= v4[3] >> 1)
          {
            OUTLINED_FUNCTION_1_113();
            v18 = (unint64_t)v4;
            v4 = v23;
          }
          v4[2] = v19;
          v20 = &v4[2 * v18];
          v20[4] = v17;
          v20[5] = v16;
        }
        goto LABEL_11;
      }
      v6 = v28;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727E60);
    v4 = (_QWORD *)swift_allocObject();
    *((_OWORD *)v4 + 1) = xmmword_1C0305B60;
    v4[4] = v6;
    v4[5] = v5;
    OUTLINED_FUNCTION_47();
  }
LABEL_11:
  if (v3 != 9)
  {
    LOBYTE(v24) = v3;
    sub_1C0194C08();
    if (v4[2])
    {
      v24 = v4;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
      sub_1C004B224();
      v7 = sub_1C0303E50();
      v9 = v8;
      swift_bridgeObjectRelease();
      v24 = (_QWORD *)v7;
      v25 = v9;
      sub_1C0303FD0();
      sub_1C0303FD0();
      OUTLINED_FUNCTION_29();
      return v24;
    }
    OUTLINED_FUNCTION_29();
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t static Place.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  BOOL v13;
  char v14;
  char v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[26];
  _BYTE v27[208];
  _BYTE v28[208];
  _BYTE v29[208];
  _BYTE v30[208];
  uint64_t v31[2];
  __int16 v32;
  uint64_t v33;
  _QWORD v34[2];
  __int16 v35;
  _BYTE v36[208];
  _BYTE v37[216];

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v23 = a1[4];
  v25 = a1[5];
  v22 = *((_WORD *)a1 + 24);
  OUTLINED_FUNCTION_0_0((uint64_t)(a1 + 7), (uint64_t)v36);
  v8 = *a2;
  v7 = a2[1];
  v10 = a2[2];
  v9 = a2[3];
  v21 = a2[4];
  v24 = a2[5];
  v11 = (uint64_t)(a2 + 7);
  v12 = *((_WORD *)a2 + 24);
  OUTLINED_FUNCTION_0_0(v11, (uint64_t)v37);
  if (!v4)
  {
    if (v7)
      goto LABEL_32;
    goto LABEL_10;
  }
  if (!v7)
    goto LABEL_32;
  v13 = v3 == v8 && v4 == v7;
  if (v13 || (v14 = 0, (sub_1C0304A08() & 1) != 0))
  {
LABEL_10:
    if (v6)
    {
      if (!v9)
        goto LABEL_32;
      if (v5 != v10 || v6 != v9)
      {
        v14 = 0;
        if ((sub_1C0304A08() & 1) == 0)
          return v14 & 1;
      }
    }
    else if (v9)
    {
      goto LABEL_32;
    }
    if (v25)
    {
      v31[0] = v23;
      v31[1] = v25;
      v32 = v22;
      if (v24)
      {
        v34[0] = v21;
        v34[1] = v24;
        v35 = v12;
        swift_bridgeObjectRetain_n();
        v16 = static NeighborhoodPlaceName.== infix(_:_:)((uint64_t)v31, (uint64_t)v34);
        OUTLINED_FUNCTION_29();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0)
          goto LABEL_32;
        goto LABEL_24;
      }
      swift_bridgeObjectRetain();
    }
    else if (!v24)
    {
LABEL_24:
      sub_1C005578C((uint64_t)v36, (uint64_t)v34, &qword_1EF5BF540);
      if (sub_1C00B8890((uint64_t)v34) == 1)
      {
        sub_1C005578C((uint64_t)v37, (uint64_t)v31, &qword_1EF5BF540);
        if (sub_1C00B8890((uint64_t)v31) == 1)
        {
          v14 = 1;
          return v14 & 1;
        }
      }
      else
      {
        OUTLINED_FUNCTION_0_0((uint64_t)v36, (uint64_t)v30);
        OUTLINED_FUNCTION_0_0((uint64_t)v37, (uint64_t)v31);
        if (sub_1C00B8890((uint64_t)v31) != 1)
        {
          OUTLINED_FUNCTION_0_0((uint64_t)v37, (uint64_t)v27);
          OUTLINED_FUNCTION_11_72(v26, v27);
          v19 = OUTLINED_FUNCTION_0_0((uint64_t)v36, (uint64_t)v28);
          OUTLINED_FUNCTION_13_57(v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1C0199EE4);
          sub_1C00B8D84((uint64_t)v28);
          v14 = static PersonPlace.== infix(_:_:)((uint64_t)v30, v26);
          OUTLINED_FUNCTION_11_72(v29, v30);
          v20 = sub_1C00B8E78((uint64_t)v29);
          OUTLINED_FUNCTION_13_57(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1C00D9638);
          return v14 & 1;
        }
        OUTLINED_FUNCTION_11_72(v28, v30);
        v17 = sub_1C005578C((uint64_t)v36, (uint64_t)v29, &qword_1EF5BF540);
        OUTLINED_FUNCTION_13_57(v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1C0199EE4);
        sub_1C00B8D84((uint64_t)v29);
        sub_1C00B8E78((uint64_t)v28);
      }
      OUTLINED_FUNCTION_0_0((uint64_t)v36, (uint64_t)v31);
      OUTLINED_FUNCTION_0_0((uint64_t)v37, (uint64_t)&v33);
      sub_1C024C28C((uint64_t)v37, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1C0199EE4);
      sub_1C024C130(v31);
LABEL_32:
      v14 = 0;
      return v14 & 1;
    }
    OUTLINED_FUNCTION_29();
    goto LABEL_32;
  }
  return v14 & 1;
}

uint64_t *sub_1C024C130(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v9 = a1[26];
  v2 = a1[27];
  v3 = a1[28];
  v4 = a1[29];
  v5 = a1[30];
  v6 = a1[31];
  v7 = a1[32];
  sub_1C00D9638(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  sub_1C00D9638(v9, v2, v3, v4, v5, v6, v7);
  return a1;
}

uint64_t sub_1C024C28C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(unsigned int *)(a1 + 200) | ((unint64_t)*(unsigned __int16 *)(a1 + 204) << 32));
  return a1;
}

uint64_t sub_1C024C304(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x616C50646C726F77 && a2 == 0xEE00656D614E6563;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C0334870 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C0334890 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C506E6F73726570 && a2 == 0xEB00000000656361)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v7 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1C024C4E4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C024C524 + 4 * byte_1C031FAE4[a1]))(0x616C50646C726F77, 0xEE00656D614E6563);
}

unint64_t sub_1C024C524()
{
  return 0xD000000000000015;
}

uint64_t sub_1C024C54C()
{
  return 0x6C506E6F73726570;
}

uint64_t sub_1C024C56C()
{
  unsigned __int8 *v0;

  return sub_1C024C4E4(*v0);
}

uint64_t sub_1C024C574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C024C304(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C024C598()
{
  sub_1C024C798();
  return sub_1C0304BAC();
}

uint64_t sub_1C024C5C0()
{
  sub_1C024C798();
  return sub_1C0304BB8();
}

void Place.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  __int16 v21;
  _BYTE v22[216];
  int v23;
  char v24;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1BA8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v17 = v1[2];
  v18 = v7;
  v8 = v1[3];
  v15 = v1[4];
  v16 = v8;
  v14 = v1[5];
  v23 = *((unsigned __int16 *)v1 + 24);
  sub_1C005578C((uint64_t)(v1 + 7), (uint64_t)v22, &qword_1EF5BF540);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C024C798();
  sub_1C0304BA0();
  LOBYTE(v20[0]) = 0;
  v9 = v19;
  sub_1C0304924();
  if (!v9)
  {
    v10 = v23;
    v12 = v14;
    v11 = v15;
    LOBYTE(v20[0]) = 1;
    sub_1C0304924();
    v20[0] = v11;
    v20[1] = v12;
    v21 = v10;
    v24 = 2;
    sub_1C024C7D4();
    OUTLINED_FUNCTION_6_93();
    sub_1C005578C((uint64_t)v22, (uint64_t)v20, &qword_1EF5BF540);
    v24 = 3;
    sub_1C024C810();
    OUTLINED_FUNCTION_6_93();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  OUTLINED_FUNCTION_28_0();
}

unint64_t sub_1C024C798()
{
  unint64_t result;

  result = qword_1EF5C1BB0;
  if (!qword_1EF5C1BB0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031FC48, &type metadata for Place.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1BB0);
  }
  return result;
}

unint64_t sub_1C024C7D4()
{
  unint64_t result;

  result = qword_1EF5C1BB8;
  if (!qword_1EF5C1BB8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for NeighborhoodPlaceName, &type metadata for NeighborhoodPlaceName);
    atomic_store(result, (unint64_t *)&qword_1EF5C1BB8);
  }
  return result;
}

unint64_t sub_1C024C810()
{
  unint64_t result;

  result = qword_1EF5C1BC0;
  if (!qword_1EF5C1BC0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for PersonPlace, &type metadata for PersonPlace);
    atomic_store(result, (unint64_t *)&qword_1EF5C1BC0);
  }
  return result;
}

void Place.init(from:)(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[208];
  _BYTE v21[208];
  _QWORD v22[33];
  uint64_t v23;
  _QWORD v24[33];
  _QWORD v25[33];
  _OWORD v26[13];
  int v27;
  char v28;

  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1BC8);
  MEMORY[0x1E0C80A78](v18);
  memset(v25, 0, 50);
  sub_1C01B0190(v26);
  sub_1C005578C((uint64_t)v26, (uint64_t)&v25[7], &qword_1EF5BF540);
  v19 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C024C798();
  sub_1C0304B88();
  if (!v2)
  {
    v17 = a2;
    v5 = OUTLINED_FUNCTION_10_70();
    v7 = v6;
    v25[0] = v5;
    v25[1] = v6;
    LOBYTE(v24[0]) = 1;
    v8 = v5;
    swift_bridgeObjectRetain();
    v9 = OUTLINED_FUNCTION_10_70();
    v11 = v10;
    v16 = v9;
    v25[2] = v9;
    v25[3] = v10;
    LOBYTE(v22[0]) = 2;
    v12 = sub_1C024CB74();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_14_63();
    if (v12)
    {
      OUTLINED_FUNCTION_2_115();
      OUTLINED_FUNCTION_29_0();
    }
    else
    {
      v13 = v24[0];
      v25[4] = v24[0];
      v25[5] = v24[1];
      v27 = LOWORD(v24[2]);
      LOWORD(v25[6]) = v24[2];
      v28 = 3;
      v14 = sub_1C024CBB0();
      v15 = v24[1];
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_14_63();
      if (!v14)
      {
        OUTLINED_FUNCTION_7_88();
        OUTLINED_FUNCTION_9_81((uint64_t)&v23, (uint64_t)v20);
        OUTLINED_FUNCTION_9_81((uint64_t)&v25[7], (uint64_t)v21);
        sub_1C024C28C((uint64_t)v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1C0199EE4);
        sub_1C024C28C((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1C00D9638);
        OUTLINED_FUNCTION_9_81((uint64_t)v20, (uint64_t)&v25[7]);
        v22[0] = v8;
        v22[1] = v7;
        v22[2] = v16;
        v22[3] = v11;
        v22[4] = v13;
        v22[5] = v15;
        LOWORD(v22[6]) = v27;
        OUTLINED_FUNCTION_9_81((uint64_t)v20, (uint64_t)&v22[7]);
        sub_1C01B58CC(v22);
        sub_1C024C28C((uint64_t)v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_1C00D9638);
        OUTLINED_FUNCTION_29_0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        memcpy(v17, v22, 0x106uLL);
        goto LABEL_7;
      }
      OUTLINED_FUNCTION_7_88();
      OUTLINED_FUNCTION_29_0();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
LABEL_7:
  __swift_destroy_boxed_opaque_existential_0Tm(v19);
  memcpy(v24, v25, 0x106uLL);
  sub_1C01B59F0(v24);
  OUTLINED_FUNCTION_28_0();
}

unint64_t sub_1C024CB74()
{
  unint64_t result;

  result = qword_1EF5C1BD0;
  if (!qword_1EF5C1BD0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for NeighborhoodPlaceName, &type metadata for NeighborhoodPlaceName);
    atomic_store(result, (unint64_t *)&qword_1EF5C1BD0);
  }
  return result;
}

unint64_t sub_1C024CBB0()
{
  unint64_t result;

  result = qword_1EF5C1BD8;
  if (!qword_1EF5C1BD8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for PersonPlace, &type metadata for PersonPlace);
    atomic_store(result, (unint64_t *)&qword_1EF5C1BD8);
  }
  return result;
}

void sub_1C024CBEC(_QWORD *a1@<X0>, void *a2@<X8>)
{
  Place.init(from:)(a1, a2);
}

void sub_1C024CC00(_QWORD *a1)
{
  Place.encode(to:)(a1);
}

uint64_t destroy for Place(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 64);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = *(_QWORD *)(a1 + 104);
    if (result != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t initializeWithCopy for Place(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    v8 = (void *)(a1 + 56);
    v9 = (const void *)(a2 + 56);
    v10 = 206;
  }
  else
  {
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v7;
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    v11 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v11;
    v12 = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12 != 1)
    {
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v12;
      *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
      v13 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = v13;
      *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
      v14 = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = v14;
      *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
      *(_BYTE *)(a1 + 161) = *(_BYTE *)(a2 + 161);
      v15 = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = v15;
      *(_WORD *)(a1 + 184) = *(_WORD *)(a2 + 184);
      v16 = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = v16;
      *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
      v17 = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = v17;
      *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
      *(_BYTE *)(a1 + 233) = *(_BYTE *)(a2 + 233);
      v18 = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = v18;
      *(_WORD *)(a1 + 256) = *(_WORD *)(a2 + 256);
      *(_DWORD *)(a1 + 258) = *(_DWORD *)(a2 + 258);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
    v8 = (void *)(a1 + 96);
    v9 = (const void *)(a2 + 96);
    v10 = 166;
  }
  memcpy(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for Place(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  size_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  v4 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64) != 1)
  {
    if (v4 != 1)
    {
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
      *(_BYTE *)(a1 + 74) = *(_BYTE *)(a2 + 74);
      *(_BYTE *)(a1 + 75) = *(_BYTE *)(a2 + 75);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(a2 + 104);
      if (*(_QWORD *)(a1 + 104) == 1)
      {
        if (v9 != 1)
          goto LABEL_10;
      }
      else
      {
        if (v9 != 1)
        {
          *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
          *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
          *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
          *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
          *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
          *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
          *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
          *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
          *(_BYTE *)(a1 + 161) = *(_BYTE *)(a2 + 161);
          *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
          *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
          *(_BYTE *)(a1 + 185) = *(_BYTE *)(a2 + 185);
          *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
          *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
          *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
          *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
          *(_BYTE *)(a1 + 233) = *(_BYTE *)(a2 + 233);
          *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
          *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
          *(_BYTE *)(a1 + 257) = *(_BYTE *)(a2 + 257);
          *(_WORD *)(a1 + 258) = *(_WORD *)(a2 + 258);
          *(_WORD *)(a1 + 260) = *(_WORD *)(a2 + 260);
          return a1;
        }
        sub_1C00B94B8(a1 + 96);
      }
      v6 = (void *)(a1 + 96);
      v7 = (const void *)(a2 + 96);
      goto LABEL_14;
    }
    sub_1C01B769C(a1 + 56);
LABEL_7:
    v6 = (void *)(a1 + 56);
    v7 = (const void *)(a2 + 56);
    v8 = 206;
LABEL_15:
    memcpy(v6, v7, v8);
    return a1;
  }
  if (v4 == 1)
    goto LABEL_7;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_BYTE *)(a1 + 74) = *(_BYTE *)(a2 + 74);
  *(_BYTE *)(a1 + 75) = *(_BYTE *)(a2 + 75);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v5 = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    v6 = (void *)(a1 + 96);
    v7 = (const void *)(a2 + 96);
LABEL_14:
    v8 = 166;
    goto LABEL_15;
  }
LABEL_10:
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_BYTE *)(a1 + 161) = *(_BYTE *)(a2 + 161);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_BYTE *)(a1 + 185) = *(_BYTE *)(a2 + 185);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_BYTE *)(a1 + 233) = *(_BYTE *)(a2 + 233);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_BYTE *)(a1 + 257) = *(_BYTE *)(a2 + 257);
  *(_WORD *)(a1 + 258) = *(_WORD *)(a2 + 258);
  *(_WORD *)(a1 + 260) = *(_WORD *)(a2 + 260);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *__swift_memcpy262_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x106uLL);
}

uint64_t assignWithTake for Place(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 64) == 1)
    goto LABEL_4;
  v7 = *(_QWORD *)(a2 + 64);
  if (v7 == 1)
  {
    sub_1C01B769C(a1 + 56);
LABEL_4:
    v8 = (void *)(a1 + 56);
    v9 = (const void *)(a2 + 56);
    v10 = 206;
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v11;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 104) != 1)
  {
    v12 = *(_QWORD *)(a2 + 104);
    if (v12 != 1)
    {
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v12;
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
      v14 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = v14;
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
      v15 = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = v15;
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
      v16 = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = v16;
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 184) = *(_WORD *)(a2 + 184);
      v17 = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = v17;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
      v18 = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = v18;
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 232) = *(_WORD *)(a2 + 232);
      v19 = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = v19;
      swift_bridgeObjectRelease();
      *(_WORD *)(a1 + 256) = *(_WORD *)(a2 + 256);
      *(_DWORD *)(a1 + 258) = *(_DWORD *)(a2 + 258);
      return a1;
    }
    sub_1C00B94B8(a1 + 96);
  }
  v8 = (void *)(a1 + 96);
  v9 = (const void *)(a2 + 96);
  v10 = 166;
LABEL_9:
  memcpy(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for Place(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 262))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Place(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 248) = 0;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 260) = 0;
    *(_DWORD *)(result + 256) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 262) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 262) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Place()
{
  return &type metadata for Place;
}

uint64_t storeEnumTagSinglePayload for Place.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C024D5B8 + 4 * byte_1C031FAED[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C024D5EC + 4 * byte_1C031FAE8[v4]))();
}

uint64_t sub_1C024D5EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C024D5F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C024D5FCLL);
  return result;
}

uint64_t sub_1C024D608(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C024D610);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C024D614(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C024D61C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Place.CodingKeys()
{
  return &type metadata for Place.CodingKeys;
}

unint64_t sub_1C024D63C()
{
  unint64_t result;

  result = qword_1EF5C1BE0;
  if (!qword_1EF5C1BE0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031FC20, &type metadata for Place.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1BE0);
  }
  return result;
}

unint64_t sub_1C024D67C()
{
  unint64_t result;

  result = qword_1EF5C1BE8;
  if (!qword_1EF5C1BE8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031FB90, &type metadata for Place.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1BE8);
  }
  return result;
}

unint64_t sub_1C024D6BC()
{
  unint64_t result;

  result = qword_1EF5C1BF0;
  if (!qword_1EF5C1BF0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031FBB8, &type metadata for Place.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1BF0);
  }
  return result;
}

void OUTLINED_FUNCTION_1_113()
{
  sub_1C00500A0();
}

uint64_t OUTLINED_FUNCTION_2_115()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_6_93()
{
  return sub_1C0304954();
}

uint64_t OUTLINED_FUNCTION_7_88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v2, *(_QWORD *)(v0 + 48));
}

uint64_t OUTLINED_FUNCTION_9_81(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1C005578C(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_10_70()
{
  return sub_1C0304870();
}

void *OUTLINED_FUNCTION_11_72(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xCEuLL);
}

uint64_t OUTLINED_FUNCTION_13_57(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))
{
  return sub_1C024C28C((uint64_t)&STACK[0x6A8], a2);
}

uint64_t OUTLINED_FUNCTION_14_63()
{
  return sub_1C03048A0();
}

ValueMetadata *type metadata accessor for MegadomeECRTrialFactors()
{
  return &type metadata for MegadomeECRTrialFactors;
}

uint64_t sub_1C024D790(int a1, unsigned int a2, double a3, double a4)
{
  return (a3 == a4) & ~(a1 ^ a2 | ((a1 ^ a2) >> 8) | ((a1 ^ a2) >> 16));
}

uint64_t sub_1C024D7AC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001C03348B0 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000029 && a2 == 0x80000001C03348D0 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001C0334900 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x80000001C0334930)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1C024D944(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1C024D97C + 4 * byte_1C031FCA0[a1]))(0xD000000000000014, 0x80000001C03348B0);
}

uint64_t sub_1C024D97C(uint64_t a1)
{
  return a1 + 21;
}

uint64_t sub_1C024D9B4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1C08);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C024DDF4();
  sub_1C0304BA0();
  v8[15] = 0;
  OUTLINED_FUNCTION_41_3();
  if (!v1)
  {
    v8[14] = 1;
    OUTLINED_FUNCTION_41_3();
    v8[13] = 2;
    OUTLINED_FUNCTION_41_3();
    v8[12] = 3;
    sub_1C0304978();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

double sub_1C024DB0C(_QWORD *a1)
{
  uint64_t v2;
  double v4;
  double v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1BF8);
  MEMORY[0x1E0C80A78](v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C024DDF4();
  sub_1C0304B88();
  OUTLINED_FUNCTION_1_41();
  OUTLINED_FUNCTION_1_41();
  OUTLINED_FUNCTION_1_41();
  sub_1C03048C4();
  v5 = v4;
  OUTLINED_FUNCTION_3_44();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return v5;
}

uint64_t sub_1C024DC98()
{
  unsigned __int8 *v0;

  return sub_1C024D944(*v0);
}

uint64_t sub_1C024DCA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C024D7AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C024DCC4()
{
  sub_1C024DDF4();
  return sub_1C0304BAC();
}

uint64_t sub_1C024DCEC()
{
  sub_1C024DDF4();
  return sub_1C0304BB8();
}

void sub_1C024DD14(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v4;
  double v5;

  v5 = sub_1C024DB0C(a1);
  if (!v2)
  {
    *(_BYTE *)a2 = v4 & 1;
    *(_BYTE *)(a2 + 1) = BYTE1(v4) & 1;
    *(_BYTE *)(a2 + 2) = BYTE2(v4) & 1;
    *(double *)(a2 + 8) = v5;
  }
}

uint64_t sub_1C024DD54(_QWORD *a1)
{
  return sub_1C024D9B4(a1);
}

uint64_t sub_1C024DD98(double *a1, double *a2)
{
  double v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;

  v2 = a1[1];
  if (*((_BYTE *)a1 + 1))
    v3 = 256;
  else
    v3 = 0;
  v4 = v3 | *(unsigned __int8 *)a1;
  if (*((_BYTE *)a1 + 2))
    v5 = 0x10000;
  else
    v5 = 0;
  v6 = v4 | v5;
  if (*((_BYTE *)a2 + 1))
    v7 = 256;
  else
    v7 = 0;
  v8 = v7 | *(unsigned __int8 *)a2;
  if (*((_BYTE *)a2 + 2))
    v9 = 0x10000;
  else
    v9 = 0;
  return sub_1C024D790(v6, v8 | v9, v2, a2[1]);
}

unint64_t sub_1C024DDF4()
{
  unint64_t result;

  result = qword_1EF5C1C00;
  if (!qword_1EF5C1C00)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031FE04, &type metadata for MegadomeECRTrialFactors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1C00);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MegadomeECRTrialFactors.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C024DE7C + 4 * byte_1C031FCA9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C024DEB0 + 4 * byte_1C031FCA4[v4]))();
}

uint64_t sub_1C024DEB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C024DEB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C024DEC0);
  return result;
}

uint64_t sub_1C024DECC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C024DED4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C024DED8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C024DEE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MegadomeECRTrialFactors.CodingKeys()
{
  return &type metadata for MegadomeECRTrialFactors.CodingKeys;
}

unint64_t sub_1C024DF00()
{
  unint64_t result;

  result = qword_1EF5C1C10;
  if (!qword_1EF5C1C10)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031FDDC, &type metadata for MegadomeECRTrialFactors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1C10);
  }
  return result;
}

unint64_t sub_1C024DF40()
{
  unint64_t result;

  result = qword_1EF5C1C18;
  if (!qword_1EF5C1C18)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031FD4C, &type metadata for MegadomeECRTrialFactors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1C18);
  }
  return result;
}

unint64_t sub_1C024DF80()
{
  unint64_t result;

  result = qword_1EF5C1C20;
  if (!qword_1EF5C1C20)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031FD74, &type metadata for MegadomeECRTrialFactors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1C20);
  }
  return result;
}

void sub_1C024DFBC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;

  v69 = a2;
  v65 = a1;
  type metadata accessor for Contact();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726F18);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v8);
  v67 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726F20);
  OUTLINED_FUNCTION_12_0();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (unint64_t *)((char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11);
  v15 = (unint64_t *)((char *)&v54 - v14);
  if (qword_1ED727970 != -1)
    goto LABEL_49;
  while (1)
  {
    v16 = sub_1C0303B98();
    __swift_project_value_buffer(v16, (uint64_t)&unk_1ED7295C8);
    v17 = sub_1C0303B80();
    v18 = sub_1C03042E8();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1C0039000, v17, v18, "adding isMeCard signal", v19, 2u);
      MEMORY[0x1C3B98378](v19, -1, -1);
    }

    v20 = *v65;
    v57 = *(_QWORD *)(*v65 + 16);
    if (!v57)
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = v20;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_1C01F5B08();
    v23 = 0;
    *v65 = v22;
    v55 = v20;
    v56 = v20 + 32;
    v58 = a3;
    while (2)
    {
      if (v23 < *(_QWORD *)(v20 + 16))
      {
        v24 = *(_QWORD *)(*(_QWORD *)(v56 + 8 * v23) + 16);
        v25 = *v65;
        v68 = *(_QWORD *)(v56 + 8 * v23);
        swift_bridgeObjectRetain();
        v66 = v25;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C01F5B08();
          v66 = v53;
        }
        v26 = 0;
        v59 = v23 + 1;
        v60 = v23;
LABEL_12:
        *v65 = v66;
        while (1)
        {
          if (v26 == v24)
          {
            v27 = 1;
            v26 = v24;
          }
          else
          {
            v28 = v68;
            if ((v26 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_42:
              __break(1u);
              goto LABEL_43;
            }
            if (v26 >= *(_QWORD *)(v68 + 16))
              goto LABEL_42;
            v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
            v30 = v28
                + ((*(unsigned __int8 *)(*(_QWORD *)(v29 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v29 - 8) + 80))
                + *(_QWORD *)(*(_QWORD *)(v29 - 8) + 72) * v26;
            v31 = (uint64_t)&v67[*(int *)(v7 + 48)];
            sub_1C010E4E8(v30, v31);
            v32 = (uint64_t)v13 + *(int *)(v7 + 48);
            *v13 = v26;
            sub_1C005578C(v31, v32, &qword_1ED726DB0);
            v27 = 0;
            ++v26;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v13, v27, 1, v7);
          sub_1C005578C((uint64_t)v13, (uint64_t)v15, (uint64_t *)&unk_1ED726F20);
          if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v7) == 1)
            break;
          v33 = *v15;
          v34 = (uint64_t)v15 + *(int *)(v7 + 48);
          sub_1C0065660(v34, (uint64_t)v6);
          sub_1C010E530(v34);
          v36 = *v6;
          v35 = v6[1];
          swift_bridgeObjectRetain();
          sub_1C017111C((uint64_t)v6);
          if (v36 == v69 && v35 == a3)
          {
            swift_bridgeObjectRelease();
LABEL_26:
            v39 = *v65;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C01F5B08();
              v39 = v50;
            }
            v40 = v60;
            if (v60 < *(_QWORD *)(v39 + 16))
            {
              v66 = v39;
              v41 = OUTLINED_FUNCTION_1_114();
              v64 = v39 + 32;
              *(_QWORD *)(v39 + 32 + 8 * v40) = a3;
              if ((v41 & 1) == 0)
              {
                sub_1C01F5AF8();
                a3 = v51;
                *(_QWORD *)(v64 + 8 * v40) = v51;
              }
              v42 = v66;
              if ((v33 & 0x8000000000000000) == 0)
              {
                if (v33 < *(_QWORD *)(a3 + 16))
                {
                  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
                  v44 = *(_QWORD *)(v43 - 8);
                  v45 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
                  v46 = *(_QWORD *)(v44 + 72) * v33;
                  *(_BYTE *)(a3 + v45 + v46 + 16) = 1;
                  if (v40 < *(_QWORD *)(v42 + 16))
                  {
                    v61 = v46;
                    v62 = v45;
                    v63 = v43;
                    v47 = v64;
                    v48 = OUTLINED_FUNCTION_1_114();
                    *(_QWORD *)(v47 + 8 * v40) = a3;
                    if ((v48 & 1) == 0)
                    {
                      sub_1C01F5AF8();
                      a3 = v52;
                      *(_QWORD *)(v47 + 8 * v60) = v52;
                    }
                    if (v33 < *(_QWORD *)(a3 + 16))
                    {
                      v49 = a3 + v62 + *(int *)(v63 + 36) + v61;
                      *(_BYTE *)(v49 + *(int *)(type metadata accessor for ContactResolver.SignalSet(0) + 136)) = 1;
                      a3 = v58;
                      goto LABEL_12;
                    }
                    goto LABEL_47;
                  }
LABEL_46:
                  __break(1u);
LABEL_47:
                  __break(1u);
                  goto LABEL_48;
                }
LABEL_45:
                __break(1u);
                goto LABEL_46;
              }
LABEL_44:
              __break(1u);
              goto LABEL_45;
            }
LABEL_43:
            __break(1u);
            goto LABEL_44;
          }
          v38 = sub_1C0304A08();
          swift_bridgeObjectRelease();
          if ((v38 & 1) != 0)
            goto LABEL_26;
        }
        swift_bridgeObjectRelease();
        v23 = v59;
        v20 = v55;
        if (v59 != v57)
          continue;
        swift_bridgeObjectRelease();
        return;
      }
      break;
    }
LABEL_48:
    __break(1u);
LABEL_49:
    swift_once();
  }
}

void sub_1C024E4C4(uint64_t *a1)
{
  uint64_t *v1;

  sub_1C024DFBC(a1, *v1, v1[1]);
}

ValueMetadata *type metadata accessor for IsMeCardSignalProvider()
{
  return &type metadata for IsMeCardSignalProvider;
}

uint64_t OUTLINED_FUNCTION_1_114()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void *LocationSlotResolutionTask.run(withAlreadyResolvedSlots:)@<X0>(void *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  void *result;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16[89];
  uint64_t __src[90];
  _BYTE v18[720];
  _BYTE v19[720];
  void *v20;

  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  OUTLINED_FUNCTION_1_115(v19);
  OUTLINED_FUNCTION_1_115(v16);
  type metadata accessor for LocationSlotResolutionTask();
  sub_1C0199A5C((uint64_t)v19);
  LocationResolver.makeRecommendation(value:context:spec:)();
  result = (void *)sub_1C01B5F10((uint64_t)v19);
  if (!v2)
  {
    sub_1C01EF818((uint64_t)__src, (uint64_t)v18);
    if (qword_1EF5B7F08 != -1)
      swift_once();
    v5 = sub_1C0303B98();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EF5FC6B0);
    OUTLINED_FUNCTION_2_116();
    OUTLINED_FUNCTION_2_116();
    v6 = sub_1C0303B80();
    v7 = sub_1C03042E8();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v20 = a1;
      __src[0] = v9;
      *(_DWORD *)v8 = 136315138;
      v10 = OUTLINED_FUNCTION_3_120(v9, (uint64_t)sub_1C01EF860);
      sub_1C02EE610(v10);
      v12 = v11;
      v14 = v13;
      OUTLINED_FUNCTION_3_120(v11, (uint64_t)sub_1C00D90A4);
      v16[0] = sub_1C003E6D8(v12, v14, __src);
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      sub_1C01EFC34(v18, sub_1C00D90A4);
      OUTLINED_FUNCTION_0_132();
      _os_log_impl(&dword_1C0039000, v6, v7, "Location recommendations: %s", v8, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }
    OUTLINED_FUNCTION_0_132();
    OUTLINED_FUNCTION_0_132();

    sub_1C0198C1C();
    OUTLINED_FUNCTION_3_120(v15, (uint64_t)sub_1C00D90A4);
    return memcpy(a1, __src, 0x2C9uLL);
  }
  return result;
}

uint64_t type metadata accessor for LocationSlotResolutionTask()
{
  uint64_t result;

  result = qword_1EF5C1C98;
  if (!qword_1EF5C1C98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t LocationSlotResolutionTask.init(query:context:spec:)@<X0>(void *__src@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;

  memcpy(a3 + 5, __src, 0x2C8uLL);
  v5 = type metadata accessor for LocationSlotResolutionTask();
  result = sub_1C024E7F8(a2, (uint64_t)a3 + *(int *)(v5 + 24));
  a3[3] = &type metadata for LocationResolver;
  a3[4] = &off_1E799E530;
  return result;
}

uint64_t sub_1C024E7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationResolutionContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *initializeBufferWithCopyOfBuffer for LocationSlotResolutionTask(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  size_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  int *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  v7 = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(a1 + 24) = v7;
  (**(void (***)(uint64_t, _QWORD *))(v7 - 8))(a1, a2);
  v4[5] = a2[5];
  *(_DWORD *)((char *)v4 + 47) = *(_DWORD *)((char *)a2 + 47);
  *(_WORD *)((char *)v4 + 51) = *(_WORD *)((char *)a2 + 51);
  *((_BYTE *)v4 + 53) = *((_BYTE *)a2 + 53);
  *((_BYTE *)v4 + 56) = *((_BYTE *)a2 + 56);
  v8 = a2[9];
  v4[8] = a2[8];
  v4[9] = v8;
  *((_BYTE *)v4 + 80) = *((_BYTE *)a2 + 80);
  *((_BYTE *)v4 + 81) = *((_BYTE *)a2 + 81);
  v9 = a2[12];
  v4[11] = a2[11];
  v4[12] = v9;
  *((_WORD *)v4 + 52) = *((_WORD *)a2 + 52);
  v10 = a2[15];
  v4[14] = a2[14];
  v4[15] = v10;
  v11 = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11)
  {
    v4[16] = a2[16];
    v4[17] = v11;
    v12 = a2[19];
    v4[18] = a2[18];
    v4[19] = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *((_OWORD *)a2 + 9);
    *((_OWORD *)v4 + 8) = *((_OWORD *)a2 + 8);
    *((_OWORD *)v4 + 9) = v14;
  }
  v15 = a2[21];
  if (v15 == 1)
  {
    v16 = v4 + 20;
    v17 = a2 + 20;
    v18 = 262;
  }
  else
  {
    v4[20] = a2[20];
    v4[21] = v15;
    v19 = a2[23];
    v4[22] = a2[22];
    v4[23] = v19;
    v20 = a2[25];
    v4[24] = a2[24];
    v4[25] = v20;
    *((_WORD *)v4 + 104) = *((_WORD *)a2 + 104);
    v21 = a2[28];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21 == 1)
    {
      v16 = v4 + 27;
      v17 = a2 + 27;
      v18 = 206;
    }
    else
    {
      v4[27] = a2[27];
      v4[28] = v21;
      *((_DWORD *)v4 + 58) = *((_DWORD *)a2 + 58);
      v22 = a2[31];
      v4[30] = a2[30];
      v4[31] = v22;
      v23 = a2[33];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v23 != 1)
      {
        v4[32] = a2[32];
        v4[33] = v23;
        *((_WORD *)v4 + 136) = *((_WORD *)a2 + 136);
        v50 = a2[36];
        v4[35] = a2[35];
        v4[36] = v50;
        *((_WORD *)v4 + 148) = *((_WORD *)a2 + 148);
        v51 = a2[39];
        v4[38] = a2[38];
        v4[39] = v51;
        *((_BYTE *)v4 + 320) = *((_BYTE *)a2 + 320);
        *((_BYTE *)v4 + 321) = *((_BYTE *)a2 + 321);
        v52 = a2[42];
        v4[41] = a2[41];
        v4[42] = v52;
        *((_WORD *)v4 + 172) = *((_WORD *)a2 + 172);
        v53 = a2[45];
        v4[44] = a2[44];
        v4[45] = v53;
        *((_BYTE *)v4 + 368) = *((_BYTE *)a2 + 368);
        v54 = a2[48];
        v4[47] = a2[47];
        v4[48] = v54;
        *((_BYTE *)v4 + 392) = *((_BYTE *)a2 + 392);
        *((_BYTE *)v4 + 393) = *((_BYTE *)a2 + 393);
        v55 = a2[51];
        v4[50] = a2[50];
        v4[51] = v55;
        *((_WORD *)v4 + 208) = *((_WORD *)a2 + 208);
        *(_DWORD *)((char *)v4 + 418) = *(_DWORD *)((char *)a2 + 418);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_13;
      }
      v16 = v4 + 32;
      v17 = a2 + 32;
      v18 = 166;
    }
  }
  memcpy(v16, v17, v18);
LABEL_13:
  v24 = a2[54];
  v4[53] = a2[53];
  v4[54] = v24;
  *((_BYTE *)v4 + 440) = *((_BYTE *)a2 + 440);
  v25 = a2[57];
  swift_bridgeObjectRetain();
  if (v25 == 1)
  {
    memcpy(v4 + 56, a2 + 56, 0x61uLL);
  }
  else
  {
    v4[56] = a2[56];
    v4[57] = v25;
    v26 = a2[59];
    v4[58] = a2[58];
    v4[59] = v26;
    *((_WORD *)v4 + 240) = *((_WORD *)a2 + 240);
    v27 = a2[62];
    v4[61] = a2[61];
    v4[62] = v27;
    v28 = a2[64];
    v4[63] = a2[63];
    v4[64] = v28;
    *((_BYTE *)v4 + 520) = *((_BYTE *)a2 + 520);
    *((_BYTE *)v4 + 521) = *((_BYTE *)a2 + 521);
    v4[66] = a2[66];
    v4[67] = a2[67];
    *((_BYTE *)v4 + 544) = *((_BYTE *)a2 + 544);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v29 = a2[70];
  if (v29 == 1)
  {
    memcpy(v4 + 69, a2 + 69, 0x58uLL);
  }
  else
  {
    v4[69] = a2[69];
    v4[70] = v29;
    *((_WORD *)v4 + 284) = *((_WORD *)a2 + 284);
    v4[72] = a2[72];
    v4[73] = a2[73];
    *((_BYTE *)v4 + 592) = *((_BYTE *)a2 + 592);
    *(_WORD *)((char *)v4 + 593) = *(_WORD *)((char *)a2 + 593);
    v4[75] = a2[75];
    v4[76] = a2[76];
    *((_BYTE *)v4 + 616) = *((_BYTE *)a2 + 616);
    *(_WORD *)((char *)v4 + 617) = *(_WORD *)((char *)a2 + 617);
    *((_BYTE *)v4 + 619) = *((_BYTE *)a2 + 619);
    v4[78] = a2[78];
    v4[79] = a2[79];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *((_DWORD *)v4 + 160) = *((_DWORD *)a2 + 160);
  v4[81] = a2[81];
  v4[82] = a2[82];
  *((_BYTE *)v4 + 664) = *((_BYTE *)a2 + 664);
  v4[84] = a2[84];
  v4[85] = a2[85];
  v4[86] = a2[86];
  v4[87] = a2[87];
  *((_BYTE *)v4 + 704) = *((_BYTE *)a2 + 704);
  *((_BYTE *)v4 + 705) = *((_BYTE *)a2 + 705);
  v4[89] = a2[89];
  v4[90] = a2[90];
  *((_WORD *)v4 + 364) = *((_WORD *)a2 + 364);
  v30 = a2 + 92;
  v31 = a2[93];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v31 >> 60 == 15)
  {
    *((_OWORD *)v4 + 46) = *(_OWORD *)v30;
  }
  else
  {
    v32 = *v30;
    sub_1C00C83C0(*v30, v31);
    v4[92] = v32;
    v4[93] = v31;
  }
  v33 = *(int *)(a3 + 24);
  v34 = (char *)v4 + v33;
  v35 = (char *)a2 + v33;
  v36 = sub_1C0301DB0();
  v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
  v37(v34, v35, v36);
  v38 = (int *)type metadata accessor for LocationResolutionContext();
  v37(&v34[v38[5]], &v35[v38[5]], v36);
  v37(&v34[v38[6]], &v35[v38[6]], v36);
  v39 = v38[7];
  v40 = &v34[v39];
  v41 = &v35[v39];
  v42 = sub_1C0301F00();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = v38[8];
  v44 = &v34[v43];
  v45 = &v35[v43];
  *(_QWORD *)v44 = *(_QWORD *)v45;
  v44[8] = v45[8];
  v46 = v38[9];
  v47 = &v34[v46];
  v48 = &v35[v46];
  *(_QWORD *)v47 = *(_QWORD *)v48;
  v47[8] = v48[8];
  return v4;
}

uint64_t destroy for LocationSlotResolutionTask(_QWORD *a1, uint64_t a2)
{
  unint64_t v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  int *v8;
  char *v9;
  uint64_t v10;

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[17])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[21] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[28] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[33] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_bridgeObjectRelease();
  if (a1[57] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[70] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1[93];
  if (v4 >> 60 != 15)
    sub_1C0040600(a1[92], v4);
  v5 = (char *)a1 + *(int *)(a2 + 24);
  v6 = sub_1C0301DB0();
  v7 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = (int *)type metadata accessor for LocationResolutionContext();
  v7(&v5[v8[5]], v6);
  v7(&v5[v8[6]], v6);
  v9 = &v5[v8[7]];
  v10 = sub_1C0301F00();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *initializeWithCopy for LocationSlotResolutionTask(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v6 = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(a1 + 3) = v6;
  (**(void (***)(void))(v6 - 8))();
  a1[5] = a2[5];
  *(_DWORD *)((char *)a1 + 47) = *(_DWORD *)((char *)a2 + 47);
  *(_WORD *)((char *)a1 + 51) = *(_WORD *)((char *)a2 + 51);
  *((_BYTE *)a1 + 53) = *((_BYTE *)a2 + 53);
  *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
  *((_BYTE *)a1 + 81) = *((_BYTE *)a2 + 81);
  v8 = a2[12];
  a1[11] = a2[11];
  a1[12] = v8;
  *((_WORD *)a1 + 52) = *((_WORD *)a2 + 52);
  v9 = a2[15];
  a1[14] = a2[14];
  a1[15] = v9;
  v10 = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10)
  {
    a1[16] = a2[16];
    a1[17] = v10;
    v11 = a2[19];
    a1[18] = a2[18];
    a1[19] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *((_OWORD *)a2 + 9);
    *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
    *((_OWORD *)a1 + 9) = v12;
  }
  v13 = a2[21];
  if (v13 == 1)
  {
    v14 = a1 + 20;
    v15 = a2 + 20;
    v16 = 262;
LABEL_10:
    memcpy(v14, v15, v16);
    goto LABEL_11;
  }
  a1[20] = a2[20];
  a1[21] = v13;
  v17 = a2[23];
  a1[22] = a2[22];
  a1[23] = v17;
  v18 = a2[25];
  a1[24] = a2[24];
  a1[25] = v18;
  *((_WORD *)a1 + 104) = *((_WORD *)a2 + 104);
  v19 = a2[28];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19 == 1)
  {
    v14 = a1 + 27;
    v15 = a2 + 27;
    v16 = 206;
    goto LABEL_10;
  }
  a1[27] = a2[27];
  a1[28] = v19;
  *((_DWORD *)a1 + 58) = *((_DWORD *)a2 + 58);
  v20 = a2[31];
  a1[30] = a2[30];
  a1[31] = v20;
  v21 = a2[33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21 == 1)
  {
    v14 = a1 + 32;
    v15 = a2 + 32;
    v16 = 166;
    goto LABEL_10;
  }
  a1[32] = a2[32];
  a1[33] = v21;
  *((_WORD *)a1 + 136) = *((_WORD *)a2 + 136);
  v48 = a2[36];
  a1[35] = a2[35];
  a1[36] = v48;
  *((_WORD *)a1 + 148) = *((_WORD *)a2 + 148);
  v49 = a2[39];
  a1[38] = a2[38];
  a1[39] = v49;
  *((_BYTE *)a1 + 320) = *((_BYTE *)a2 + 320);
  *((_BYTE *)a1 + 321) = *((_BYTE *)a2 + 321);
  v50 = a2[42];
  a1[41] = a2[41];
  a1[42] = v50;
  *((_WORD *)a1 + 172) = *((_WORD *)a2 + 172);
  v51 = a2[45];
  a1[44] = a2[44];
  a1[45] = v51;
  *((_BYTE *)a1 + 368) = *((_BYTE *)a2 + 368);
  v52 = a2[48];
  a1[47] = a2[47];
  a1[48] = v52;
  *((_BYTE *)a1 + 392) = *((_BYTE *)a2 + 392);
  *((_BYTE *)a1 + 393) = *((_BYTE *)a2 + 393);
  v53 = a2[51];
  a1[50] = a2[50];
  a1[51] = v53;
  *((_WORD *)a1 + 208) = *((_WORD *)a2 + 208);
  *(_DWORD *)((char *)a1 + 418) = *(_DWORD *)((char *)a2 + 418);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_11:
  v22 = a2[54];
  a1[53] = a2[53];
  a1[54] = v22;
  *((_BYTE *)a1 + 440) = *((_BYTE *)a2 + 440);
  v23 = a2[57];
  swift_bridgeObjectRetain();
  if (v23 == 1)
  {
    memcpy(a1 + 56, a2 + 56, 0x61uLL);
  }
  else
  {
    a1[56] = a2[56];
    a1[57] = v23;
    v24 = a2[59];
    a1[58] = a2[58];
    a1[59] = v24;
    *((_WORD *)a1 + 240) = *((_WORD *)a2 + 240);
    v25 = a2[62];
    a1[61] = a2[61];
    a1[62] = v25;
    v26 = a2[64];
    a1[63] = a2[63];
    a1[64] = v26;
    *((_BYTE *)a1 + 520) = *((_BYTE *)a2 + 520);
    *((_BYTE *)a1 + 521) = *((_BYTE *)a2 + 521);
    a1[66] = a2[66];
    a1[67] = a2[67];
    *((_BYTE *)a1 + 544) = *((_BYTE *)a2 + 544);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v27 = a2[70];
  if (v27 == 1)
  {
    memcpy(a1 + 69, a2 + 69, 0x58uLL);
  }
  else
  {
    a1[69] = a2[69];
    a1[70] = v27;
    *((_WORD *)a1 + 284) = *((_WORD *)a2 + 284);
    a1[72] = a2[72];
    a1[73] = a2[73];
    *((_BYTE *)a1 + 592) = *((_BYTE *)a2 + 592);
    *(_WORD *)((char *)a1 + 593) = *(_WORD *)((char *)a2 + 593);
    a1[75] = a2[75];
    a1[76] = a2[76];
    *((_BYTE *)a1 + 616) = *((_BYTE *)a2 + 616);
    *(_WORD *)((char *)a1 + 617) = *(_WORD *)((char *)a2 + 617);
    *((_BYTE *)a1 + 619) = *((_BYTE *)a2 + 619);
    a1[78] = a2[78];
    a1[79] = a2[79];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *((_DWORD *)a1 + 160) = *((_DWORD *)a2 + 160);
  a1[81] = a2[81];
  a1[82] = a2[82];
  *((_BYTE *)a1 + 664) = *((_BYTE *)a2 + 664);
  a1[84] = a2[84];
  a1[85] = a2[85];
  a1[86] = a2[86];
  a1[87] = a2[87];
  *((_BYTE *)a1 + 704) = *((_BYTE *)a2 + 704);
  *((_BYTE *)a1 + 705) = *((_BYTE *)a2 + 705);
  a1[89] = a2[89];
  a1[90] = a2[90];
  *((_WORD *)a1 + 364) = *((_WORD *)a2 + 364);
  v28 = a2 + 92;
  v29 = a2[93];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29 >> 60 == 15)
  {
    *((_OWORD *)a1 + 46) = *(_OWORD *)v28;
  }
  else
  {
    v30 = *v28;
    sub_1C00C83C0(*v28, v29);
    a1[92] = v30;
    a1[93] = v29;
  }
  v31 = *(int *)(a3 + 24);
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = sub_1C0301DB0();
  v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
  v35(v32, v33, v34);
  v36 = (int *)type metadata accessor for LocationResolutionContext();
  v35(&v32[v36[5]], &v33[v36[5]], v34);
  v35(&v32[v36[6]], &v33[v36[6]], v34);
  v37 = v36[7];
  v38 = &v32[v37];
  v39 = &v33[v37];
  v40 = sub_1C0301F00();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  v41 = v36[8];
  v42 = &v32[v41];
  v43 = &v33[v41];
  *(_QWORD *)v42 = *(_QWORD *)v43;
  v42[8] = v43[8];
  v44 = v36[9];
  v45 = &v32[v44];
  v46 = &v33[v44];
  *(_QWORD *)v45 = *(_QWORD *)v46;
  v45[8] = v46[8];
  return a1;
}

_QWORD *assignWithCopy for LocationSlotResolutionTask(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _WORD *v21;
  _WORD *v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char v47;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v6 = a2[5];
  *(_DWORD *)((char *)a1 + 47) = *(_DWORD *)((char *)a2 + 47);
  a1[5] = v6;
  LOWORD(v6) = *(_WORD *)((char *)a2 + 51);
  *((_BYTE *)a1 + 53) = *((_BYTE *)a2 + 53);
  *(_WORD *)((char *)a1 + 51) = v6;
  *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
  *((_BYTE *)a1 + 81) = *((_BYTE *)a2 + 81);
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 104) = *((_BYTE *)a2 + 104);
  *((_BYTE *)a1 + 105) = *((_BYTE *)a2 + 105);
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a1 + 16;
  v8 = a2 + 16;
  v9 = a2[17];
  if (a1[17])
  {
    if (v9)
    {
      a1[16] = a2[16];
      a1[17] = a2[17];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[18] = a2[18];
      a1[19] = a2[19];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C01B7668((uint64_t)(a1 + 16));
      v10 = *((_OWORD *)a2 + 9);
      *v7 = *v8;
      *((_OWORD *)a1 + 9) = v10;
    }
  }
  else if (v9)
  {
    a1[16] = a2[16];
    a1[17] = a2[17];
    a1[18] = a2[18];
    a1[19] = a2[19];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = *((_OWORD *)a2 + 9);
    *v7 = *v8;
    *((_OWORD *)a1 + 9) = v11;
  }
  v12 = a2[21];
  if (a1[21] == 1)
  {
    if (v12 != 1)
    {
      a1[20] = a2[20];
      a1[21] = a2[21];
      a1[22] = a2[22];
      a1[23] = a2[23];
      a1[24] = a2[24];
      a1[25] = a2[25];
      *((_BYTE *)a1 + 208) = *((_BYTE *)a2 + 208);
      *((_BYTE *)a1 + 209) = *((_BYTE *)a2 + 209);
      v13 = a2[28];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13 == 1)
      {
        v14 = a1 + 27;
        v15 = a2 + 27;
LABEL_22:
        v16 = 206;
        goto LABEL_30;
      }
LABEL_17:
      a1[27] = a2[27];
      a1[28] = a2[28];
      *((_BYTE *)a1 + 232) = *((_BYTE *)a2 + 232);
      *((_BYTE *)a1 + 233) = *((_BYTE *)a2 + 233);
      *((_BYTE *)a1 + 234) = *((_BYTE *)a2 + 234);
      *((_BYTE *)a1 + 235) = *((_BYTE *)a2 + 235);
      a1[30] = a2[30];
      a1[31] = a2[31];
      v18 = a2[33];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v18 == 1)
      {
        v14 = a1 + 32;
        v15 = a2 + 32;
LABEL_29:
        v16 = 166;
        goto LABEL_30;
      }
LABEL_25:
      a1[32] = a2[32];
      a1[33] = a2[33];
      *((_BYTE *)a1 + 272) = *((_BYTE *)a2 + 272);
      *((_BYTE *)a1 + 273) = *((_BYTE *)a2 + 273);
      a1[35] = a2[35];
      a1[36] = a2[36];
      *((_BYTE *)a1 + 296) = *((_BYTE *)a2 + 296);
      *((_BYTE *)a1 + 297) = *((_BYTE *)a2 + 297);
      a1[38] = a2[38];
      a1[39] = a2[39];
      *((_BYTE *)a1 + 320) = *((_BYTE *)a2 + 320);
      *((_BYTE *)a1 + 321) = *((_BYTE *)a2 + 321);
      a1[41] = a2[41];
      a1[42] = a2[42];
      *((_BYTE *)a1 + 344) = *((_BYTE *)a2 + 344);
      *((_BYTE *)a1 + 345) = *((_BYTE *)a2 + 345);
      a1[44] = a2[44];
      a1[45] = a2[45];
      *((_BYTE *)a1 + 368) = *((_BYTE *)a2 + 368);
      a1[47] = a2[47];
      a1[48] = a2[48];
      *((_BYTE *)a1 + 392) = *((_BYTE *)a2 + 392);
      *((_BYTE *)a1 + 393) = *((_BYTE *)a2 + 393);
      a1[50] = a2[50];
      a1[51] = a2[51];
      *((_BYTE *)a1 + 416) = *((_BYTE *)a2 + 416);
      *((_BYTE *)a1 + 417) = *((_BYTE *)a2 + 417);
      *((_WORD *)a1 + 209) = *((_WORD *)a2 + 209);
      *((_WORD *)a1 + 210) = *((_WORD *)a2 + 210);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_31;
    }
LABEL_14:
    v14 = a1 + 20;
    v15 = a2 + 20;
    v16 = 262;
LABEL_30:
    memcpy(v14, v15, v16);
    goto LABEL_31;
  }
  if (v12 == 1)
  {
    sub_1C01B76D0((uint64_t)(a1 + 20));
    goto LABEL_14;
  }
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[24] = a2[24];
  a1[25] = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 208) = *((_BYTE *)a2 + 208);
  *((_BYTE *)a1 + 209) = *((_BYTE *)a2 + 209);
  v17 = a2[28];
  if (a1[28] == 1)
  {
    if (v17 != 1)
      goto LABEL_17;
LABEL_21:
    v14 = a1 + 27;
    v15 = a2 + 27;
    goto LABEL_22;
  }
  if (v17 == 1)
  {
    sub_1C01B769C((uint64_t)(a1 + 27));
    goto LABEL_21;
  }
  a1[27] = a2[27];
  a1[28] = a2[28];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 232) = *((_BYTE *)a2 + 232);
  *((_BYTE *)a1 + 233) = *((_BYTE *)a2 + 233);
  *((_BYTE *)a1 + 234) = *((_BYTE *)a2 + 234);
  *((_BYTE *)a1 + 235) = *((_BYTE *)a2 + 235);
  a1[30] = a2[30];
  a1[31] = a2[31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a2[33];
  if (a1[33] == 1)
  {
    if (v19 != 1)
      goto LABEL_25;
LABEL_28:
    v14 = a1 + 32;
    v15 = a2 + 32;
    goto LABEL_29;
  }
  if (v19 == 1)
  {
    sub_1C00B94B8((uint64_t)(a1 + 32));
    goto LABEL_28;
  }
  a1[32] = a2[32];
  a1[33] = a2[33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 272) = *((_BYTE *)a2 + 272);
  *((_BYTE *)a1 + 273) = *((_BYTE *)a2 + 273);
  a1[35] = a2[35];
  a1[36] = a2[36];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 296) = *((_BYTE *)a2 + 296);
  *((_BYTE *)a1 + 297) = *((_BYTE *)a2 + 297);
  a1[38] = a2[38];
  a1[39] = a2[39];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 320) = *((_BYTE *)a2 + 320);
  *((_BYTE *)a1 + 321) = *((_BYTE *)a2 + 321);
  a1[41] = a2[41];
  a1[42] = a2[42];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 344) = *((_BYTE *)a2 + 344);
  *((_BYTE *)a1 + 345) = *((_BYTE *)a2 + 345);
  a1[44] = a2[44];
  a1[45] = a2[45];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 368) = *((_BYTE *)a2 + 368);
  a1[47] = a2[47];
  a1[48] = a2[48];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 392) = *((_BYTE *)a2 + 392);
  *((_BYTE *)a1 + 393) = *((_BYTE *)a2 + 393);
  a1[50] = a2[50];
  a1[51] = a2[51];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 416) = *((_BYTE *)a2 + 416);
  *((_BYTE *)a1 + 417) = *((_BYTE *)a2 + 417);
  *((_WORD *)a1 + 209) = *((_WORD *)a2 + 209);
  *((_WORD *)a1 + 210) = *((_WORD *)a2 + 210);
LABEL_31:
  a1[53] = a2[53];
  a1[54] = a2[54];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 440) = *((_BYTE *)a2 + 440);
  v20 = a2[57];
  if (a1[57] == 1)
  {
    if (v20 != 1)
    {
      a1[56] = a2[56];
      a1[57] = a2[57];
      a1[58] = a2[58];
      a1[59] = a2[59];
      *((_BYTE *)a1 + 480) = *((_BYTE *)a2 + 480);
      *((_BYTE *)a1 + 481) = *((_BYTE *)a2 + 481);
      a1[61] = a2[61];
      a1[62] = a2[62];
      a1[63] = a2[63];
      a1[64] = a2[64];
      *((_BYTE *)a1 + 520) = *((_BYTE *)a2 + 520);
      *((_BYTE *)a1 + 521) = *((_BYTE *)a2 + 521);
      a1[66] = a2[66];
      a1[67] = a2[67];
      *((_BYTE *)a1 + 544) = *((_BYTE *)a2 + 544);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    goto LABEL_36;
  }
  if (v20 == 1)
  {
    sub_1C01B7704((uint64_t)(a1 + 56));
LABEL_36:
    memcpy(a1 + 56, a2 + 56, 0x61uLL);
    goto LABEL_38;
  }
  a1[56] = a2[56];
  a1[57] = a2[57];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[58] = a2[58];
  a1[59] = a2[59];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 480) = *((_BYTE *)a2 + 480);
  *((_BYTE *)a1 + 481) = *((_BYTE *)a2 + 481);
  a1[61] = a2[61];
  a1[62] = a2[62];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[63] = a2[63];
  a1[64] = a2[64];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 520) = *((_BYTE *)a2 + 520);
  *((_BYTE *)a1 + 521) = *((_BYTE *)a2 + 521);
  a1[66] = a2[66];
  a1[67] = a2[67];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 544) = *((_BYTE *)a2 + 544);
LABEL_38:
  v21 = (_WORD *)((char *)a1 + 593);
  v22 = (_WORD *)((char *)a2 + 593);
  v23 = a2[70];
  if (a1[70] == 1)
  {
    if (v23 != 1)
    {
      a1[69] = a2[69];
      a1[70] = a2[70];
      *((_BYTE *)a1 + 568) = *((_BYTE *)a2 + 568);
      *((_BYTE *)a1 + 569) = *((_BYTE *)a2 + 569);
      a1[72] = a2[72];
      a1[73] = a2[73];
      *((_BYTE *)a1 + 592) = *((_BYTE *)a2 + 592);
      *v21 = *v22;
      a1[75] = a2[75];
      a1[76] = a2[76];
      *((_BYTE *)a1 + 616) = *((_BYTE *)a2 + 616);
      *(_WORD *)((char *)a1 + 617) = *(_WORD *)((char *)a2 + 617);
      *((_BYTE *)a1 + 619) = *((_BYTE *)a2 + 619);
      a1[78] = a2[78];
      a1[79] = a2[79];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_45;
    }
    goto LABEL_43;
  }
  if (v23 == 1)
  {
    sub_1C01B7738((uint64_t)(a1 + 69));
LABEL_43:
    memcpy(a1 + 69, a2 + 69, 0x58uLL);
    goto LABEL_45;
  }
  a1[69] = a2[69];
  a1[70] = a2[70];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 568) = *((_BYTE *)a2 + 568);
  *((_BYTE *)a1 + 569) = *((_BYTE *)a2 + 569);
  a1[72] = a2[72];
  a1[73] = a2[73];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 592) = *((_BYTE *)a2 + 592);
  *v21 = *v22;
  a1[75] = a2[75];
  a1[76] = a2[76];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 616) = *((_BYTE *)a2 + 616);
  *(_WORD *)((char *)a1 + 617) = *(_WORD *)((char *)a2 + 617);
  *((_BYTE *)a1 + 619) = *((_BYTE *)a2 + 619);
  a1[78] = a2[78];
  a1[79] = a2[79];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_45:
  *((_WORD *)a1 + 320) = *((_WORD *)a2 + 320);
  *((_WORD *)a1 + 321) = *((_WORD *)a2 + 321);
  a1[81] = a2[81];
  a1[82] = a2[82];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 664) = *((_BYTE *)a2 + 664);
  a1[84] = a2[84];
  a1[85] = a2[85];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[86] = a2[86];
  a1[87] = a2[87];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 704) = *((_BYTE *)a2 + 704);
  *((_BYTE *)a1 + 705) = *((_BYTE *)a2 + 705);
  a1[89] = a2[89];
  a1[90] = a2[90];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + 728) = *((_BYTE *)a2 + 728);
  *((_BYTE *)a1 + 729) = *((_BYTE *)a2 + 729);
  v24 = a2 + 92;
  v25 = a2[93];
  if (a1[93] >> 60 != 15)
  {
    if (v25 >> 60 != 15)
    {
      v27 = *v24;
      sub_1C00C83C0(*v24, a2[93]);
      v28 = a1[92];
      v29 = a1[93];
      a1[92] = v27;
      a1[93] = v25;
      sub_1C0040600(v28, v29);
      goto LABEL_52;
    }
    sub_1C01B776C((uint64_t)(a1 + 92));
    goto LABEL_50;
  }
  if (v25 >> 60 == 15)
  {
LABEL_50:
    *((_OWORD *)a1 + 46) = *(_OWORD *)v24;
    goto LABEL_52;
  }
  v26 = *v24;
  sub_1C00C83C0(*v24, a2[93]);
  a1[92] = v26;
  a1[93] = v25;
LABEL_52:
  v30 = *(int *)(a3 + 24);
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_1C0301DB0();
  v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24);
  v34(v31, v32, v33);
  v35 = (int *)type metadata accessor for LocationResolutionContext();
  v34(&v31[v35[5]], &v32[v35[5]], v33);
  v34(&v31[v35[6]], &v32[v35[6]], v33);
  v36 = v35[7];
  v37 = &v31[v36];
  v38 = &v32[v36];
  v39 = sub_1C0301F00();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v37, v38, v39);
  v40 = v35[8];
  v41 = &v31[v40];
  v42 = &v32[v40];
  v43 = v42[8];
  *(_QWORD *)v41 = *(_QWORD *)v42;
  v41[8] = v43;
  v44 = v35[9];
  v45 = &v31[v44];
  v46 = &v32[v44];
  v47 = v46[8];
  *(_QWORD *)v45 = *(_QWORD *)v46;
  v45[8] = v47;
  return a1;
}

uint64_t initializeWithTake for LocationSlotResolutionTask(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x2C8uLL);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C0301DB0();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = (int *)type metadata accessor for LocationResolutionContext();
  v11(v8 + v12[5], v9 + v12[5], v10);
  v11(v8 + v12[6], v9 + v12[6], v10);
  v13 = v12[7];
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = sub_1C0301F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  v17 = v12[8];
  v18 = v8 + v17;
  v19 = v9 + v17;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  v20 = v12[9];
  v21 = v8 + v20;
  v22 = v9 + v20;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  return a1;
}

uint64_t assignWithTake for LocationSlotResolutionTask(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(uint64_t, char *, uint64_t);
  int *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v7;
  *(_DWORD *)(a1 + 47) = *(_DWORD *)((char *)a2 + 47);
  *(_WORD *)(a1 + 51) = *(_WORD *)((char *)a2 + 51);
  *(_BYTE *)(a1 + 53) = *((_BYTE *)a2 + 53);
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  v8 = a2[9];
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 80) = *((_WORD *)a2 + 40);
  v9 = a2[12];
  *(_QWORD *)(a1 + 88) = a2[11];
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 104) = *((_WORD *)a2 + 52);
  v10 = a2[15];
  *(_QWORD *)(a1 + 112) = a2[14];
  *(_QWORD *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 136))
  {
    v11 = a2[17];
    if (v11)
    {
      *(_QWORD *)(a1 + 128) = a2[16];
      *(_QWORD *)(a1 + 136) = v11;
      swift_bridgeObjectRelease();
      v12 = a2[19];
      *(_QWORD *)(a1 + 144) = a2[18];
      *(_QWORD *)(a1 + 152) = v12;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C01B7668(a1 + 128);
  }
  v13 = *((_OWORD *)a2 + 9);
  *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
  *(_OWORD *)(a1 + 144) = v13;
LABEL_6:
  if (*(_QWORD *)(a1 + 168) == 1)
  {
LABEL_9:
    v15 = (void *)(a1 + 160);
    v16 = a2 + 20;
    v17 = 262;
LABEL_18:
    memcpy(v15, v16, v17);
    goto LABEL_19;
  }
  v14 = a2[21];
  if (v14 == 1)
  {
    sub_1C01B76D0(a1 + 160);
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + 160) = a2[20];
  *(_QWORD *)(a1 + 168) = v14;
  swift_bridgeObjectRelease();
  v18 = a2[23];
  *(_QWORD *)(a1 + 176) = a2[22];
  *(_QWORD *)(a1 + 184) = v18;
  swift_bridgeObjectRelease();
  v19 = a2[25];
  *(_QWORD *)(a1 + 192) = a2[24];
  *(_QWORD *)(a1 + 200) = v19;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 208) = *((_WORD *)a2 + 104);
  if (*(_QWORD *)(a1 + 224) == 1)
  {
LABEL_13:
    v15 = (void *)(a1 + 216);
    v16 = a2 + 27;
    v17 = 206;
    goto LABEL_18;
  }
  v20 = a2[28];
  if (v20 == 1)
  {
    sub_1C01B769C(a1 + 216);
    goto LABEL_13;
  }
  *(_QWORD *)(a1 + 216) = a2[27];
  *(_QWORD *)(a1 + 224) = v20;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 232) = *((_DWORD *)a2 + 58);
  v21 = a2[31];
  *(_QWORD *)(a1 + 240) = a2[30];
  *(_QWORD *)(a1 + 248) = v21;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 264) == 1)
  {
LABEL_17:
    v15 = (void *)(a1 + 256);
    v16 = a2 + 32;
    v17 = 166;
    goto LABEL_18;
  }
  v22 = a2[33];
  if (v22 == 1)
  {
    sub_1C00B94B8(a1 + 256);
    goto LABEL_17;
  }
  *(_QWORD *)(a1 + 256) = a2[32];
  *(_QWORD *)(a1 + 264) = v22;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 272) = *((_WORD *)a2 + 136);
  v50 = a2[36];
  *(_QWORD *)(a1 + 280) = a2[35];
  *(_QWORD *)(a1 + 288) = v50;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 296) = *((_WORD *)a2 + 148);
  v51 = a2[39];
  *(_QWORD *)(a1 + 304) = a2[38];
  *(_QWORD *)(a1 + 312) = v51;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 320) = *((_WORD *)a2 + 160);
  v52 = a2[42];
  *(_QWORD *)(a1 + 328) = a2[41];
  *(_QWORD *)(a1 + 336) = v52;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 344) = *((_WORD *)a2 + 172);
  v53 = a2[45];
  *(_QWORD *)(a1 + 352) = a2[44];
  *(_QWORD *)(a1 + 360) = v53;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 368) = *((_BYTE *)a2 + 368);
  v54 = a2[48];
  *(_QWORD *)(a1 + 376) = a2[47];
  *(_QWORD *)(a1 + 384) = v54;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 392) = *((_WORD *)a2 + 196);
  v55 = a2[51];
  *(_QWORD *)(a1 + 400) = a2[50];
  *(_QWORD *)(a1 + 408) = v55;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 416) = *((_WORD *)a2 + 208);
  *(_DWORD *)(a1 + 418) = *(_DWORD *)((char *)a2 + 418);
LABEL_19:
  v23 = a2[54];
  *(_QWORD *)(a1 + 424) = a2[53];
  *(_QWORD *)(a1 + 432) = v23;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 440) = *((_BYTE *)a2 + 440);
  if (*(_QWORD *)(a1 + 456) == 1)
  {
LABEL_22:
    memcpy((void *)(a1 + 448), a2 + 56, 0x61uLL);
    goto LABEL_24;
  }
  v24 = a2[57];
  if (v24 == 1)
  {
    sub_1C01B7704(a1 + 448);
    goto LABEL_22;
  }
  *(_QWORD *)(a1 + 448) = a2[56];
  *(_QWORD *)(a1 + 456) = v24;
  swift_bridgeObjectRelease();
  v25 = a2[59];
  *(_QWORD *)(a1 + 464) = a2[58];
  *(_QWORD *)(a1 + 472) = v25;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 480) = *((_WORD *)a2 + 240);
  v26 = a2[62];
  *(_QWORD *)(a1 + 488) = a2[61];
  *(_QWORD *)(a1 + 496) = v26;
  swift_bridgeObjectRelease();
  v27 = a2[64];
  *(_QWORD *)(a1 + 504) = a2[63];
  *(_QWORD *)(a1 + 512) = v27;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 520) = *((_WORD *)a2 + 260);
  *(_QWORD *)(a1 + 528) = a2[66];
  *(_QWORD *)(a1 + 536) = a2[67];
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 544) = *((_BYTE *)a2 + 544);
LABEL_24:
  if (*(_QWORD *)(a1 + 560) == 1)
  {
LABEL_27:
    memcpy((void *)(a1 + 552), a2 + 69, 0x58uLL);
    goto LABEL_29;
  }
  v28 = a2[70];
  if (v28 == 1)
  {
    sub_1C01B7738(a1 + 552);
    goto LABEL_27;
  }
  *(_QWORD *)(a1 + 552) = a2[69];
  *(_QWORD *)(a1 + 560) = v28;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 568) = *((_WORD *)a2 + 284);
  *(_QWORD *)(a1 + 576) = a2[72];
  *(_QWORD *)(a1 + 584) = a2[73];
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 592) = *((_BYTE *)a2 + 592);
  *(_WORD *)(a1 + 593) = *(_WORD *)((char *)a2 + 593);
  *(_QWORD *)(a1 + 600) = a2[75];
  *(_QWORD *)(a1 + 608) = a2[76];
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 616) = *((_BYTE *)a2 + 616);
  *(_WORD *)(a1 + 617) = *(_WORD *)((char *)a2 + 617);
  *(_BYTE *)(a1 + 619) = *((_BYTE *)a2 + 619);
  *(_QWORD *)(a1 + 624) = a2[78];
  *(_QWORD *)(a1 + 632) = a2[79];
  swift_bridgeObjectRelease();
LABEL_29:
  *(_DWORD *)(a1 + 640) = *((_DWORD *)a2 + 160);
  *(_QWORD *)(a1 + 648) = a2[81];
  *(_QWORD *)(a1 + 656) = a2[82];
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 664) = *((_BYTE *)a2 + 664);
  *(_QWORD *)(a1 + 672) = a2[84];
  *(_QWORD *)(a1 + 680) = a2[85];
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 688) = a2[86];
  *(_QWORD *)(a1 + 696) = a2[87];
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 704) = *((_WORD *)a2 + 352);
  *(_QWORD *)(a1 + 712) = a2[89];
  *(_QWORD *)(a1 + 720) = a2[90];
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 728) = *((_WORD *)a2 + 364);
  v29 = a2 + 92;
  v30 = *(_QWORD *)(a1 + 744);
  if (v30 >> 60 != 15)
  {
    v31 = a2[93];
    if (v31 >> 60 != 15)
    {
      v32 = *(_QWORD *)(a1 + 736);
      *(_QWORD *)(a1 + 736) = *v29;
      *(_QWORD *)(a1 + 744) = v31;
      sub_1C0040600(v32, v30);
      goto LABEL_34;
    }
    sub_1C01B776C(a1 + 736);
  }
  *(_OWORD *)(a1 + 736) = *(_OWORD *)v29;
LABEL_34:
  v33 = *(int *)(a3 + 24);
  v34 = a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = sub_1C0301DB0();
  v37 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 40);
  v37(v34, v35, v36);
  v38 = (int *)type metadata accessor for LocationResolutionContext();
  v37(v34 + v38[5], &v35[v38[5]], v36);
  v37(v34 + v38[6], &v35[v38[6]], v36);
  v39 = v38[7];
  v40 = v34 + v39;
  v41 = &v35[v39];
  v42 = sub_1C0301F00();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = v38[8];
  v44 = v34 + v43;
  v45 = &v35[v43];
  *(_QWORD *)v44 = *(_QWORD *)v45;
  *(_BYTE *)(v44 + 8) = v45[8];
  v46 = v38[9];
  v47 = v34 + v46;
  v48 = &v35[v46];
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *(_BYTE *)(v47 + 8) = v48[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationSlotResolutionTask()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C02507F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for LocationResolutionContext();
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for LocationSlotResolutionTask()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0250874(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for LocationResolutionContext();
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C02508E0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for LocationResolutionContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_132()
{
  uint64_t v0;

  return sub_1C01EFC34(&STACK[0x5A0], v0);
}

void *OUTLINED_FUNCTION_1_115(void *a1)
{
  const void *v1;

  return memcpy(a1, v1, 0x2C8uLL);
}

uint64_t OUTLINED_FUNCTION_2_116()
{
  uint64_t v0;

  return sub_1C01EFC34(&STACK[0x5A0], v0);
}

uint64_t OUTLINED_FUNCTION_3_120(uint64_t a1, uint64_t a2)
{
  return sub_1C01EFC34(&STACK[0x5A0], a2);
}

uint64_t sub_1C0250994(char a1)
{
  if (!a1)
    return 0x6669636570736E75;
  if (a1 == 1)
    return 0x676E696F6774756FLL;
  return 0x676E696D6F636E69;
}

uint64_t sub_1C02509F4(uint64_t a1)
{
  if (a1 == 2)
    return 2;
  else
    return a1 == 1;
}

unint64_t sub_1C0250A0C(unint64_t result)
{
  if (result >= 3)
    return 3;
  return result;
}

uint64_t _s20InteractionDirectionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0250A68 + 4 * byte_1C031FEF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0250A9C + 4 * byte_1C031FEF0[v4]))();
}

uint64_t sub_1C0250A9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0250AA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0250AACLL);
  return result;
}

uint64_t sub_1C0250AB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0250AC0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0250AC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0250ACC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s20InteractionDirectionOMa()
{
  return &_s20InteractionDirectionON;
}

uint64_t sub_1C0250AE8(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1C00C47B8(a1, *v1);
}

unint64_t sub_1C0250AF0@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1C0250A0C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C0250B18()
{
  sub_1C0250C08();
  return sub_1C0304108();
}

uint64_t sub_1C0250B74()
{
  sub_1C0250C08();
  return sub_1C03040E4();
}

uint64_t sub_1C0250BC0()
{
  char *v0;

  return sub_1C0250994(*v0);
}

unint64_t sub_1C0250BCC()
{
  unint64_t result;

  result = qword_1EF5C1D18;
  if (!qword_1EF5C1D18)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031FFD8, &_s20InteractionDirectionON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1D18);
  }
  return result;
}

unint64_t sub_1C0250C08()
{
  unint64_t result;

  result = qword_1EF5C1D20;
  if (!qword_1EF5C1D20)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C031FF60, &_s20InteractionDirectionON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1D20);
  }
  return result;
}

SiriInference::Centroid __swiftcall Centroid.init(latitude:longitude:)(Swift::String latitude, Swift::String longitude)
{
  Swift::String *v2;
  SiriInference::Centroid result;

  *v2 = latitude;
  v2[1] = longitude;
  result.longitude = longitude;
  result.latitude = latitude;
  return result;
}

uint64_t Centroid.latitude.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  OUTLINED_FUNCTION_47();
  return v1;
}

uint64_t Centroid.longitude.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  OUTLINED_FUNCTION_47();
  return v1;
}

uint64_t static Centroid.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1C0304A08(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_1C0304A08();
  }
  return result;
}

uint64_t sub_1C0250D30(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C0250E28(char a1)
{
  if ((a1 & 1) != 0)
    return 0x64757469676E6F6CLL;
  else
    return 0x656475746974616CLL;
}

uint64_t sub_1C0250E64()
{
  char *v0;

  return sub_1C0250E28(*v0);
}

uint64_t sub_1C0250E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0250D30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0250E90()
{
  sub_1C0250FE8();
  return sub_1C0304BAC();
}

uint64_t sub_1C0250EB8()
{
  sub_1C0250FE8();
  return sub_1C0304BB8();
}

void Centroid.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1D28);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v8[1] = *(_QWORD *)(v1 + 24);
  v8[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0250FE8();
  sub_1C0304BA0();
  v11 = 0;
  OUTLINED_FUNCTION_28_16();
  if (!v2)
  {
    v10 = 1;
    OUTLINED_FUNCTION_28_16();
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v4);
  OUTLINED_FUNCTION_28_0();
}

unint64_t sub_1C0250FE8()
{
  unint64_t result;

  result = qword_1EF5C1D30;
  if (!qword_1EF5C1D30)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03201AC, &type metadata for Centroid.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1D30);
  }
  return result;
}

void Centroid.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1D38);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0250FE8();
  sub_1C0304B88();
  if (v2)
  {
    OUTLINED_FUNCTION_10_0();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_55_8();
    v9 = v8;
    swift_bridgeObjectRetain();
    v10 = OUTLINED_FUNCTION_55_8();
    v12 = v11;
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    v14 = v10;
    OUTLINED_FUNCTION_96_5(v13);
    *a2 = v7;
    a2[1] = v9;
    a2[2] = v14;
    a2[3] = v12;
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_10_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28_0();
}

void sub_1C0251170(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  Centroid.init(from:)(a1, a2);
}

void sub_1C0251184(_QWORD *a1)
{
  Centroid.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for Centroid()
{
  return &type metadata for Centroid;
}

uint64_t storeEnumTagSinglePayload for Centroid.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C02511F8 + 4 * byte_1C0320055[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C025122C + 4 * byte_1C0320050[v4]))();
}

uint64_t sub_1C025122C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0251234(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C025123CLL);
  return result;
}

uint64_t sub_1C0251248(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0251250);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0251254(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C025125C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Centroid.CodingKeys()
{
  return &type metadata for Centroid.CodingKeys;
}

unint64_t sub_1C025127C()
{
  unint64_t result;

  result = qword_1EF5C1D40;
  if (!qword_1EF5C1D40)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0320184, &type metadata for Centroid.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1D40);
  }
  return result;
}

unint64_t sub_1C02512BC()
{
  unint64_t result;

  result = qword_1EF5C1D48;
  if (!qword_1EF5C1D48)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03200F4, &type metadata for Centroid.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1D48);
  }
  return result;
}

unint64_t sub_1C02512FC()
{
  unint64_t result;

  result = qword_1EF5C1D50;
  if (!qword_1EF5C1D50)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C032011C, &type metadata for Centroid.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1D50);
  }
  return result;
}

unint64_t sub_1C0251338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t result;
  char v23;
  char v24;
  char v25;
  id v26;
  id v27;
  void (*v28)(char *, uint64_t, uint64_t);
  void *v29;
  id v30;
  void (*v31)(uint64_t, char *, uint64_t);
  _OWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  __int128 v35;
  char v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  char v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  char *v49;
  id v50;
  char *v51;
  _QWORD *v52;
  _QWORD *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;

  OUTLINED_FUNCTION_40_0();
  v56 = v1;
  v57 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = sub_1C0301CFC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_6_0();
  v13 = v12 - v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728360);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v46 - v18;
  v20 = sub_1C006890C(0xD000000000000034, 0x80000001C03349D0, MEMORY[0x1E0DEE9D8]);
  if (v0)
    return (unint64_t)v4;
  v55 = v8;
  v4 = (_QWORD *)sub_1C00704C0(v20);
  OUTLINED_FUNCTION_54_18();
  if (!v21)
  {
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_5_3();
    sub_1C0255288();
    OUTLINED_FUNCTION_15_2();
    *v32 = 0u;
    v32[1] = 0u;
    v32[2] = 0u;
    OUTLINED_FUNCTION_6_94((uint64_t)v32, 2);
    return (unint64_t)v4;
  }
  v52 = v21;
  OUTLINED_FUNCTION_5_3();
  result = OUTLINED_FUNCTION_51_18(0x6E6F6973726576, 0xE700000000000000);
  if ((v23 & 1) != 0)
  {
    OUTLINED_FUNCTION_31_6();
    sub_1C00B0E2C();
    v4 = v33;
    OUTLINED_FUNCTION_8_1();
    sub_1C0056D18();
    OUTLINED_FUNCTION_15_2();
    v35 = xmmword_1C0320200;
LABEL_24:
    *(_OWORD *)v34 = v35;
    *(_QWORD *)(v34 + 16) = v4;
    v36 = 1;
LABEL_25:
    *(_BYTE *)(v34 + 24) = v36;
    OUTLINED_FUNCTION_7_22();
LABEL_27:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_8_1();
    return (unint64_t)v4;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_39;
  }
  v4 = v52;
  if (result >= v52[2])
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v51 = (char *)(v52 + 4);
  OUTLINED_FUNCTION_27_43(result, 40);
  v50 = (id)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED727520);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1C0056D18();
    OUTLINED_FUNCTION_15_2();
    *(_OWORD *)v37 = xmmword_1C0320200;
    *(_QWORD *)(v37 + 16) = 0;
    *(_BYTE *)(v37 + 24) = 3;
    OUTLINED_FUNCTION_7_22();
    goto LABEL_27;
  }
  v4 = v53;
  result = OUTLINED_FUNCTION_51_18(0x646E6F6973726576, 0xEB00000000657461);
  if ((v24 & 1) != 0)
  {
    OUTLINED_FUNCTION_31_6();
    sub_1C00B0E2C();
    v4 = v38;
    OUTLINED_FUNCTION_8_1();
    sub_1C0056D18();
    OUTLINED_FUNCTION_15_2();
    v35 = xmmword_1C0320210;
    goto LABEL_24;
  }
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (result >= v52[2])
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  OUTLINED_FUNCTION_27_43(result, 40);
  if ((OUTLINED_FUNCTION_26_41() & 1) == 0 || !v54)
  {
    sub_1C0056D18();
    OUTLINED_FUNCTION_15_2();
    *(_OWORD *)v34 = xmmword_1C0320210;
    *(_QWORD *)(v34 + 16) = 0;
    v36 = 3;
    goto LABEL_25;
  }
  v49 = v54;
  v48 = v53;
  result = OUTLINED_FUNCTION_51_18(0x746164796C707061, 0xE900000000000065);
  if ((v25 & 1) != 0)
  {
    OUTLINED_FUNCTION_31_6();
    sub_1C00B0E2C();
    v4 = v39;
    OUTLINED_FUNCTION_8_1();
    v40 = 1;
LABEL_33:
    sub_1C0056D18();
    OUTLINED_FUNCTION_15_2();
    *(_OWORD *)v41 = xmmword_1C0320220;
    *(_QWORD *)(v41 + 16) = v4;
    *(_BYTE *)(v41 + 24) = v40;
    OUTLINED_FUNCTION_7_22();
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  if ((result & 0x8000000000000000) != 0)
    goto LABEL_42;
  if (result < v52[2])
  {
    OUTLINED_FUNCTION_27_43(result, 40);
    if ((OUTLINED_FUNCTION_26_41() & 1) != 0 && v54)
    {
      v51 = v54;
      v47 = v53;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_8_1();
      v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36A8]), sel_init);
      objc_msgSend(v26, sel_setFormatOptions_, 1907);
      v50 = (id)sub_1C0303E8C();
      v52 = v26;
      v27 = objc_msgSend(v26, sel_dateFromString_, v50);

      if (v27)
      {
        OUTLINED_FUNCTION_61_14();

        v28 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 32);
        v28(v19, v13, v9);
        OUTLINED_FUNCTION_77_0((uint64_t)v19, 0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v9) != 1)
        {
          swift_bridgeObjectRelease();
          v50 = v28;
          v28(v55, (uint64_t)v19, v9);
          v29 = (void *)sub_1C0303E8C();
          v30 = objc_msgSend(v52, sel_dateFromString_, v29);

          if (v30)
          {
            OUTLINED_FUNCTION_61_14();

            v31 = (void (*)(uint64_t, char *, uint64_t))v50;
            ((void (*)(char *, uint64_t, uint64_t))v50)(v17, v13, v9);
            OUTLINED_FUNCTION_77_0((uint64_t)v17, 0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v9) != 1)
            {
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_47_25();
              v31(v6, v17, v9);
              return (unint64_t)v4;
            }
          }
          else
          {
            OUTLINED_FUNCTION_77_0((uint64_t)v17, 1);
          }
          sub_1C00CF854((uint64_t)v17);
          sub_1C0255288();
          OUTLINED_FUNCTION_15_2();
          v44 = v51;
          *(_QWORD *)v45 = v47;
          *(_QWORD *)(v45 + 8) = v44;
          *(_OWORD *)(v45 + 16) = 0u;
          *(_OWORD *)(v45 + 32) = 0u;
          OUTLINED_FUNCTION_6_94(v45, 1);
          OUTLINED_FUNCTION_47_25();
          (*(void (**)(char *, uint64_t))(v10 + 8))(v55, v9);
          return (unint64_t)v4;
        }
      }
      else
      {
        OUTLINED_FUNCTION_77_0((uint64_t)v19, 1);
      }
      swift_bridgeObjectRelease();
      sub_1C00CF854((uint64_t)v19);
      sub_1C0255288();
      OUTLINED_FUNCTION_15_2();
      v42 = v49;
      *(_QWORD *)v43 = v48;
      *(_QWORD *)(v43 + 8) = v42;
      *(_OWORD *)(v43 + 16) = 0u;
      *(_OWORD *)(v43 + 32) = 0u;
      OUTLINED_FUNCTION_6_94(v43, 1);
      OUTLINED_FUNCTION_47_25();
      return (unint64_t)v4;
    }
    v4 = 0;
    v40 = 3;
    goto LABEL_33;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1C0251968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE __src[176];
  uint64_t v26;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C03067E0;
  v11 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 64) = &off_1E799BE20;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  *(_QWORD *)(inited + 96) = v11;
  *(_QWORD *)(inited + 104) = &off_1E799BE20;
  *(_QWORD *)(inited + 72) = a3;
  *(_QWORD *)(inited + 80) = a4;
  v12 = sub_1C0251B70(a5);
  *(_QWORD *)(inited + 136) = v11;
  *(_QWORD *)(inited + 144) = &off_1E799BE20;
  *(_QWORD *)(inited + 112) = v12;
  *(_QWORD *)(inited + 120) = v13;
  OUTLINED_FUNCTION_31_6();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_1_8();
  v15 = sub_1C006890C(0xD00000000000004CLL, v14, inited);
  if (v26)
  {
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_14_58();
  }
  else
  {
    v16 = v15;
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_14_58();
    sub_1C00704C0(v16);
    OUTLINED_FUNCTION_54_18();
    v19 = v18;
    a5 = MEMORY[0x1E0DEE9D8];
    while (v19)
    {
      v20 = swift_bridgeObjectRetain();
      sub_1C025467C(v20, v19, (uint64_t)__src);
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_18();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_59_16();
        a5 = v23;
      }
      v21 = *(_QWORD *)(a5 + 16);
      if (v21 >= *(_QWORD *)(a5 + 24) >> 1)
      {
        OUTLINED_FUNCTION_59_16();
        a5 = v24;
      }
      *(_QWORD *)(a5 + 16) = v21 + 1;
      memcpy((void *)(a5 + 168 * v21 + 32), __src, 0xA3uLL);
      OUTLINED_FUNCTION_54_18();
      v19 = v22;
    }
    OUTLINED_FUNCTION_18();
    OUTLINED_FUNCTION_5_3();
  }
  return a5;
}

uint64_t sub_1C0251B70(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0251BA4 + 4 * byte_1C0320300[a1]))(0x5453494844445542, 0xE800000000000000);
}

uint64_t sub_1C0251BA4()
{
  return 0x4553454E494843;
}

uint64_t sub_1C0251BBC()
{
  return 0x574552424548;
}

uint64_t sub_1C0251BD0()
{
  return 0x49524A4948;
}

uint64_t sub_1C0251BE4()
{
  return 0x55444E4948;
}

unint64_t sub_1C0251BF8()
{
  OUTLINED_FUNCTION_1_8();
  return 0xD000000000000010;
}

uint64_t sub_1C0251C18()
{
  return 0x43494D414C5349;
}

uint64_t sub_1C0251C30()
{
  return 0x4149524F47455247;
}

uint64_t sub_1C0251C4C()
{
  return 0x4553454E4150414ALL;
}

uint64_t sub_1C0251C60()
{
  return 0x4E41494C554ALL;
}

uint64_t sub_1C0251C74()
{
  return 0x4E414953524550;
}

uint64_t sub_1C0251C8C()
{
  return 4411218;
}

uint64_t sub_1C0251C9C(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000012;
  else
    return 0x697375427478656ELL;
}

void sub_1C0251CE4()
{
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_9();
}

void sub_1C0251D28(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000012;
  else
    v3 = 0x697375427478656ELL;
  if (v2)
    v4 = 0xEF7961447373656ELL;
  else
    v4 = 0x80000001C03288B0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000012;
  else
    v5 = 0x697375427478656ELL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C03288B0;
  else
    v6 = 0xEF7961447373656ELL;
  if (v3 != v5 || v4 != v6)
    OUTLINED_FUNCTION_0_112();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C0251DBC(char *a1, char *a2)
{
  sub_1C025E9D4(*a1, *a2);
}

void sub_1C0251DC8()
{
  sub_1C00CEBF8();
}

uint64_t sub_1C0251DD0()
{
  return sub_1C00C1FA0();
}

void sub_1C0251DD8()
{
  sub_1C02EAED0();
}

void sub_1C0251DE0(_BYTE *a1@<X8>)
{
  char v2;

  sub_1C0251CE4();
  *a1 = v2;
}

void sub_1C0251E0C()
{
  uint64_t *v0;
  char v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_45_23();
  *v0 = sub_1C0251C9C(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C0251E2C()
{
  sub_1C0255EC8();
  return sub_1C03040F0();
}

uint64_t sub_1C0251E88()
{
  sub_1C0255EC8();
  return sub_1C03040CC();
}

void sub_1C0251ED4(char *a1, char *a2)
{
  sub_1C0251D28(*a1, *a2);
}

void sub_1C0251EE0(char *a1, char *a2)
{
  sub_1C021067C(*a1, *a2);
}

void sub_1C0251EEC(char *a1, char *a2)
{
  sub_1C02108FC(*a1, *a2);
}

void sub_1C0251EF8(char *a1, char *a2)
{
  sub_1C02103A0(*a1, *a2);
}

uint64_t sub_1C0251F04(unsigned __int8 a1)
{
  return a1 + 1;
}

void sub_1C0251F10()
{
  sub_1C00CEC04();
}

void sub_1C0251F18()
{
  sub_1C00C21F8();
}

void sub_1C0251F20()
{
  sub_1C02EADD8();
}

uint64_t sub_1C0251F28@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1C0143118(*a1);
  *a2 = result;
  return result;
}

void sub_1C0251F50()
{
  uint64_t *v0;
  unsigned __int8 v1;

  v1 = OUTLINED_FUNCTION_45_23();
  *v0 = sub_1C0251F04(v1);
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C0251F70()
{
  sub_1C0255F40();
  return sub_1C03040FC();
}

uint64_t sub_1C0251FCC()
{
  sub_1C0255F40();
  return sub_1C03040D8();
}

void sub_1C0252018()
{
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_9();
}

void sub_1C0252054(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C02520AC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C02521B4 + 4 * byte_1C0320318[a2]))(0x4553454E494843);
}

void sub_1C02521B4(uint64_t a1)
{
  uint64_t v1;

  if (a1 != 0x4553454E494843 || v1 != 0xE700000000000000)
    OUTLINED_FUNCTION_0_112();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C02522D0(char *a1)
{
  sub_1C025EA64(*a1);
}

void sub_1C02522DC()
{
  unsigned __int8 *v0;

  sub_1C00CEC34(*v0);
}

void sub_1C02522E4(uint64_t a1)
{
  char *v1;

  sub_1C00C2000(a1, *v1);
}

void sub_1C02522EC(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EAEC4(a1, *v1);
}

void sub_1C02522F4(_BYTE *a1@<X8>)
{
  char v2;

  sub_1C0252018();
  *a1 = v2;
}

void sub_1C0252320()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_45_23();
  *v0 = sub_1C0251B70(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C0252340()
{
  sub_1C0255F04();
  return sub_1C03040F0();
}

uint64_t sub_1C025239C()
{
  sub_1C0255F04();
  return sub_1C03040CC();
}

void sub_1C02523E8(char *a1)
{
  sub_1C0252054(*a1);
}

void sub_1C02523F4()
{
  sub_1C0210544();
}

void sub_1C0252400()
{
  sub_1C02107A4();
}

void sub_1C025240C()
{
  sub_1C0210264();
}

uint64_t sub_1C0252418(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0252454 + 4 * byte_1C0320324[a1]))(0x6574756C6F736241, 0xEC00000065746144);
}

uint64_t sub_1C0252454()
{
  return 0x7473694C65746144;
}

void sub_1C025246C()
{
  OUTLINED_FUNCTION_1_8();
}

unint64_t sub_1C0252490()
{
  OUTLINED_FUNCTION_1_8();
  return 0xD000000000000014;
}

void sub_1C02524B0()
{
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_9();
}

void sub_1C02524EC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C0252560(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C02525BC + 4 * byte_1C032032C[a2]))(0x7473694C65746144);
}

void sub_1C02525BC(uint64_t a1)
{
  uint64_t v1;

  if (a1 != 0x7473694C65746144 || v1 != 0xE800000000000000)
    sub_1C0304A08();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025263C(char *a1)
{
  sub_1C025E7B8(*a1);
}

void sub_1C0252648()
{
  unsigned __int8 *v0;

  sub_1C00CEC40(*v0);
}

void sub_1C0252650(uint64_t a1)
{
  char *v1;

  sub_1C00C28E4(a1, *v1);
}

void sub_1C0252658(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EAB4C(a1, *v1);
}

void sub_1C0252660(_BYTE *a1@<X8>)
{
  char v2;

  sub_1C02524B0();
  *a1 = v2;
}

void sub_1C025268C()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_45_23();
  *v0 = sub_1C0252418(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C02526AC()
{
  sub_1C0256210();
  return sub_1C03040F0();
}

uint64_t sub_1C0252708()
{
  sub_1C0256210();
  return sub_1C03040CC();
}

void sub_1C0252754(char *a1)
{
  sub_1C02524EC(*a1);
}

BOOL sub_1C0252760(unsigned __int8 *a1, char *a2)
{
  return sub_1C02104FC(*a1, *a2);
}

BOOL sub_1C025276C(char *a1)
{
  return sub_1C0210768(*a1);
}

void sub_1C0252778(unsigned __int8 *a1, char *a2)
{
  sub_1C0210230(*a1, *a2);
}

uint64_t sub_1C0252784(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  BOOL v6;
  char v7;
  uint64_t result;
  BOOL v9;
  char v10;
  uint64_t v11;
  char v13;
  char v14;
  char v15;
  int v16;
  int v17;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  int v26;
  int v27;
  uint64_t v28;
  int v30;
  int v31;
  char v32;
  int v33;
  int v34;
  _BOOL4 v35;

  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v6 || (v7 = OUTLINED_FUNCTION_176(), result = 0, (v7 & 1) != 0))
  {
    v9 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
    if (v9 || (v10 = OUTLINED_FUNCTION_176(), result = 0, (v10 & 1) != 0))
    {
      OUTLINED_FUNCTION_49_18(*(_BYTE *)(a1 + 32));
      if (v6 && v2 == v11)
      {
        OUTLINED_FUNCTION_56_20();
      }
      else
      {
        OUTLINED_FUNCTION_13_58();
        OUTLINED_FUNCTION_7_43();
        swift_bridgeObjectRelease();
        result = 0;
        if ((v3 & 1) == 0)
          return result;
      }
      if (*(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40) && *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48))
      {
        sub_1C025E7B8(*(_BYTE *)(a1 + 56));
        if ((v13 & 1) != 0)
        {
          if ((*(_BYTE *)(a1 + 72) & 1) != 0)
          {
            if (!*(_BYTE *)(a2 + 72))
              return 0;
          }
          else
          {
            OUTLINED_FUNCTION_26_26();
            if ((v14 & 1) != 0)
              return 0;
          }
          if ((*(_BYTE *)(a1 + 88) & 1) != 0)
          {
            if (!*(_BYTE *)(a2 + 88))
              return 0;
          }
          else
          {
            OUTLINED_FUNCTION_26_26();
            if ((v15 & 1) != 0)
              return 0;
          }
          v16 = *(unsigned __int8 *)(a1 + 89);
          v17 = *(unsigned __int8 *)(a2 + 89);
          if (v16 == 7)
          {
            if (v17 != 7)
              return 0;
          }
          else if (v17 == 7 || v16 != v17)
          {
            return 0;
          }
          if ((*(_BYTE *)(a1 + 104) & 1) != 0)
          {
            if (!*(_BYTE *)(a2 + 104))
              return 0;
          }
          else
          {
            OUTLINED_FUNCTION_26_26();
            if ((v19 & 1) != 0)
              return 0;
          }
          if ((*(_BYTE *)(a1 + 120) & 1) != 0)
          {
            if (!*(_BYTE *)(a2 + 120))
              return 0;
          }
          else
          {
            OUTLINED_FUNCTION_26_26();
            if ((v20 & 1) != 0)
              return 0;
          }
          if ((*(_BYTE *)(a1 + 136) & 1) != 0)
          {
            if (!*(_BYTE *)(a2 + 136))
              return 0;
          }
          else
          {
            OUTLINED_FUNCTION_26_26();
            if ((v21 & 1) != 0)
              return 0;
          }
          v22 = *(_QWORD *)(a1 + 152);
          v23 = *(_QWORD *)(a2 + 152);
          if (v22)
          {
            if (!v23)
              return 0;
            if (*(_QWORD *)(a1 + 144) != *(_QWORD *)(a2 + 144) || v22 != v23)
            {
              v25 = OUTLINED_FUNCTION_176();
              result = 0;
              if ((v25 & 1) == 0)
                return result;
            }
          }
          else if (v23)
          {
            return 0;
          }
          v26 = *(unsigned __int8 *)(a1 + 160);
          v27 = *(unsigned __int8 *)(a2 + 160);
          if (v26 == 12)
          {
            if (v27 != 12)
              return 0;
            goto LABEL_69;
          }
          if (v27 != 12)
          {
            OUTLINED_FUNCTION_49_18(v26);
            if (v6 && v2 == v28)
            {
              OUTLINED_FUNCTION_56_20();
            }
            else
            {
              OUTLINED_FUNCTION_13_58();
              OUTLINED_FUNCTION_7_43();
              swift_bridgeObjectRelease();
              result = 0;
              if ((v3 & 1) == 0)
                return result;
            }
LABEL_69:
            v30 = *(unsigned __int8 *)(a1 + 161);
            v31 = *(unsigned __int8 *)(a2 + 161);
            if (v30 == 2)
            {
              if (v31 != 2)
                return 0;
            }
            else
            {
              if (v31 == 2)
                return 0;
              sub_1C025E9D4(v30 & 1, v31 & 1);
              if ((v32 & 1) == 0)
                return 0;
            }
            v33 = *(unsigned __int8 *)(a1 + 162);
            v34 = *(unsigned __int8 *)(a2 + 162);
            if (v33 == 2)
            {
              if (v34 != 2)
                return 0;
            }
            else
            {
              v35 = (v33 & 1) == 0;
              if (v34 == 2 || ((v35 ^ v34) & 1) == 0)
                return 0;
            }
            return 1;
          }
        }
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C0252A40(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  char v20;

  v2 = a1 == 0x796164696C6F68 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7972746E756F63 && a2 == 0xE700000000000000;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7261646E656C6163 && a2 == 0xE800000000000000;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 1918985593 && a2 == 0xE400000000000000;
        if (v8 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6E6572727563636FLL && a2 == 0xEA00000000006563;
          if (v9 || (sub_1C0304A08() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 1701869940 && a2 == 0xE400000000000000;
            if (v10 || (sub_1C0304A08() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x68746E6F6DLL && a2 == 0xE500000000000000;
              if (v11 || (sub_1C0304A08() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 7954788 && a2 == 0xE300000000000000;
                if (v12 || (sub_1C0304A08() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  v13 = a1 == 0x656577666F796164 && a2 == 0xE90000000000006BLL;
                  if (v13 || (sub_1C0304A08() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    v14 = a1 == 0x6E6964726F796164 && a2 == 0xEA00000000006C61;
                    if (v14 || (sub_1C0304A08() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else
                    {
                      v15 = a1 == 0x74657366666FLL && a2 == 0xE600000000000000;
                      if (v15 || (sub_1C0304A08() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 10;
                      }
                      else
                      {
                        v16 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
                        if (v16 || (sub_1C0304A08() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 11;
                        }
                        else
                        {
                          v17 = a1 == 0x65766974616C6572 && a2 == 0xEA00000000006F74;
                          if (v17 || (sub_1C0304A08() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 12;
                          }
                          else if (a1 == 0xD000000000000010 && a2 == 0x80000001C03349B0
                                 || (sub_1C0304A08() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 13;
                          }
                          else
                          {
                            v18 = a1 == 0x646576726573626FLL && a2 == 0xE800000000000000;
                            if (v18 || (sub_1C0304A08() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 14;
                            }
                            else if (a1 == 0x676E696E657665 && a2 == 0xE700000000000000)
                            {
                              swift_bridgeObjectRelease();
                              return 15;
                            }
                            else
                            {
                              v20 = sub_1C0304A08();
                              swift_bridgeObjectRelease();
                              if ((v20 & 1) != 0)
                                return 15;
                              else
                                return 16;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C0253040(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0253074 + 4 * byte_1C0320330[a1]))(0x796164696C6F68, 0xE700000000000000);
}

uint64_t sub_1C0253074()
{
  return 0x7972746E756F63;
}

uint64_t sub_1C0253088()
{
  return 0x7261646E656C6163;
}

uint64_t sub_1C02530A0()
{
  return 1918985593;
}

uint64_t sub_1C02530B0()
{
  return 0x6E6572727563636FLL;
}

uint64_t sub_1C02530CC()
{
  return 1701869940;
}

uint64_t sub_1C02530DC()
{
  return 0x68746E6F6DLL;
}

uint64_t sub_1C02530F0()
{
  return 7954788;
}

uint64_t sub_1C0253100()
{
  return 0x656577666F796164;
}

uint64_t sub_1C025311C()
{
  return 0x6E6964726F796164;
}

uint64_t sub_1C025313C()
{
  return 0x74657366666FLL;
}

uint64_t sub_1C0253150()
{
  return 0x6E6F697461727564;
}

uint64_t sub_1C0253168()
{
  return 0x65766974616C6572;
}

unint64_t sub_1C0253188()
{
  return 0xD000000000000010;
}

uint64_t sub_1C02531A4()
{
  return 0x646576726573626FLL;
}

uint64_t sub_1C02531BC()
{
  return 0x676E696E657665;
}

uint64_t sub_1C02531D0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  char v12;
  char v13;
  char v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1E78);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_6_0();
  v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0255CAC();
  sub_1C0304BA0();
  v11 = 0;
  OUTLINED_FUNCTION_30_34();
  if (!v2)
  {
    v11 = 1;
    OUTLINED_FUNCTION_30_34();
    v11 = *(_BYTE *)(v3 + 32);
    sub_1C0255DD8();
    OUTLINED_FUNCTION_29_33();
    sub_1C030499C();
    OUTLINED_FUNCTION_22_46(3);
    OUTLINED_FUNCTION_22_46(4);
    v11 = *(_BYTE *)(v3 + 56);
    sub_1C0255E14();
    sub_1C030499C();
    OUTLINED_FUNCTION_1_116(6);
    OUTLINED_FUNCTION_1_116(7);
    OUTLINED_FUNCTION_9_81(v3 + 89, (uint64_t)&v14);
    OUTLINED_FUNCTION_9_81((uint64_t)&v14, (uint64_t)&v11);
    sub_1C0255E50();
    OUTLINED_FUNCTION_21_43();
    OUTLINED_FUNCTION_1_116(9);
    OUTLINED_FUNCTION_1_116(10);
    OUTLINED_FUNCTION_1_116(11);
    v11 = 12;
    sub_1C0304924();
    OUTLINED_FUNCTION_9_81(v3 + 160, (uint64_t)&v13);
    OUTLINED_FUNCTION_9_81((uint64_t)&v13, (uint64_t)&v11);
    OUTLINED_FUNCTION_29_33();
    sub_1C0304954();
    OUTLINED_FUNCTION_9_81(v3 + 161, (uint64_t)&v12);
    OUTLINED_FUNCTION_9_81((uint64_t)&v12, (uint64_t)&v11);
    sub_1C0255E8C();
    OUTLINED_FUNCTION_21_43();
    v11 = 15;
    sub_1C0304930();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
}

void sub_1C02534E4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[21];
  _QWORD v40[4];
  char v41;
  _BYTE v42[7];
  uint64_t v43;
  uint64_t v44;
  char v45;
  _BYTE v46[7];
  uint64_t v47;
  char v48;
  _BYTE v49[7];
  uint64_t v50;
  char v51;
  char v52;
  int v53;
  __int16 v54;
  uint64_t v55;
  char v56;
  _BYTE v57[7];
  uint64_t v58;
  char v59;
  _BYTE v60[7];
  uint64_t v61;
  char v62;
  _BYTE v63[7];
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  char v68;
  char v69;
  _BYTE v70[7];
  char v71;
  _BYTE v72[7];
  char v73;
  _BYTE v74[7];
  char v75;
  int v76;
  __int16 v77;
  char v78;
  _BYTE v79[7];
  char v80;
  _BYTE v81[7];
  _BYTE v82[7];
  uint64_t v83;

  OUTLINED_FUNCTION_40_0();
  v2 = v1;
  v4 = v3;
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1E48);
  MEMORY[0x1E0C80A78](v83);
  OUTLINED_FUNCTION_6_0();
  v80 = 1;
  v78 = 1;
  v75 = 1;
  v73 = 1;
  v71 = 1;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C0255CAC();
  sub_1C0304B88();
  if (v0)
  {
    OUTLINED_FUNCTION_4_83();
    OUTLINED_FUNCTION_28();
  }
  else
  {
    v36 = v4;
    v5 = OUTLINED_FUNCTION_39_26();
    v7 = v6;
    swift_bridgeObjectRetain();
    v38 = v7;
    v34 = v5;
    v33 = OUTLINED_FUNCTION_39_26();
    v9 = v8;
    sub_1C0255CE8();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_46_22();
    v37 = v9;
    v31 = OUTLINED_FUNCTION_15_54(3);
    v30 = OUTLINED_FUNCTION_15_54(4);
    sub_1C0255D24();
    OUTLINED_FUNCTION_46_22();
    v10 = OUTLINED_FUNCTION_4_97(6);
    LOBYTE(v7) = v11;
    v29 = v10;
    v80 = v11 & 1;
    v28 = OUTLINED_FUNCTION_4_97(7);
    v27 = v12;
    v78 = v12 & 1;
    LOBYTE(v39[0]) = 8;
    sub_1C0255D60();
    OUTLINED_FUNCTION_24_28();
    v13 = OUTLINED_FUNCTION_4_97(9);
    v35 = v14;
    v15 = v13;
    v75 = v14 & 1;
    v25 = OUTLINED_FUNCTION_8_70();
    v26 = v16;
    v73 = v16 & 1;
    v23 = OUTLINED_FUNCTION_8_70();
    v24 = v17;
    v71 = v17 & 1;
    LOBYTE(v40[0]) = 12;
    v22 = sub_1C0304870();
    v19 = v18;
    LOBYTE(v39[0]) = 13;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_60_7();
    OUTLINED_FUNCTION_24_28();
    v32 = v40[0];
    LOBYTE(v39[0]) = 14;
    sub_1C0255D9C();
    OUTLINED_FUNCTION_60_7();
    OUTLINED_FUNCTION_24_28();
    v21 = v40[0];
    v69 = 15;
    v20 = sub_1C030487C();
    OUTLINED_FUNCTION_11_73();
    v39[0] = v34;
    v39[1] = v38;
    v39[2] = v33;
    v39[3] = v37;
    LOBYTE(v39[4]) = 1;
    v39[5] = v31;
    v39[6] = v30;
    LOBYTE(v39[7]) = 1;
    v39[8] = v29;
    LOBYTE(v39[9]) = v7 & 1;
    v39[10] = v28;
    LOBYTE(v39[11]) = v27 & 1;
    BYTE1(v39[11]) = 1;
    v39[12] = v15;
    LOBYTE(v39[13]) = v35 & 1;
    v39[14] = v25;
    LOBYTE(v39[15]) = v26 & 1;
    v39[16] = v23;
    LOBYTE(v39[17]) = v24 & 1;
    v39[18] = v22;
    v39[19] = v19;
    LOBYTE(v39[20]) = v32;
    BYTE1(v39[20]) = v21;
    BYTE2(v39[20]) = v20;
    sub_1C0154FE0((uint64_t)v39);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_4_83();
    v40[0] = v34;
    v40[1] = v38;
    v40[2] = v33;
    v40[3] = v37;
    v41 = 1;
    *(_DWORD *)v42 = *(_DWORD *)v82;
    *(_DWORD *)&v42[3] = *(_DWORD *)&v82[3];
    v43 = v31;
    v44 = v30;
    v45 = 1;
    *(_DWORD *)v46 = *(_DWORD *)v81;
    *(_DWORD *)&v46[3] = *(_DWORD *)&v81[3];
    v47 = v29;
    v48 = v80;
    *(_DWORD *)v49 = *(_DWORD *)v79;
    *(_DWORD *)&v49[3] = *(_DWORD *)&v79[3];
    v50 = v28;
    v51 = v78;
    v52 = 1;
    v53 = v76;
    v54 = v77;
    v55 = v15;
    v56 = v75;
    *(_DWORD *)v57 = *(_DWORD *)v74;
    *(_DWORD *)&v57[3] = *(_DWORD *)&v74[3];
    v58 = v25;
    v59 = v73;
    *(_DWORD *)&v60[3] = *(_DWORD *)&v72[3];
    *(_DWORD *)v60 = *(_DWORD *)v72;
    v61 = v23;
    v62 = v71;
    *(_DWORD *)&v63[3] = *(_DWORD *)&v70[3];
    *(_DWORD *)v63 = *(_DWORD *)v70;
    v64 = v22;
    v65 = v19;
    v66 = v32;
    v67 = v21;
    v68 = v20;
    sub_1C0155028((uint64_t)v40);
    memcpy(v36, v39, 0xA3uLL);
  }
  OUTLINED_FUNCTION_28_0();
}

uint64_t sub_1C0253B38()
{
  unsigned __int8 *v0;

  return sub_1C0253040(*v0);
}

uint64_t sub_1C0253B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0252A40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0253B64()
{
  sub_1C0255CAC();
  return sub_1C0304BAC();
}

uint64_t sub_1C0253B8C()
{
  sub_1C0255CAC();
  return sub_1C0304BB8();
}

void sub_1C0253BB4(void *a1@<X8>)
{
  uint64_t v1;
  _BYTE __src[163];

  sub_1C02534E4();
  if (!v1)
    memcpy(a1, __src, 0xA3uLL);
}

uint64_t sub_1C0253BFC(_QWORD *a1)
{
  const void *v1;
  _BYTE __dst[163];

  memcpy(__dst, v1, sizeof(__dst));
  return sub_1C02531D0(a1);
}

void sub_1C0253C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  sqlite3 *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_40_0();
  v2 = v1;
  v3 = sub_1C0301CFC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_6_0();
  v7 = v6 - v5;
  v8 = (sqlite3 *)sub_1C0055230();
  if (OUTLINED_FUNCTION_53_17(v8) == 1)
  {
    sub_1C0255288();
    v9 = OUTLINED_FUNCTION_15_2();
    OUTLINED_FUNCTION_2_117(v9, v10);
  }
  else
  {
    v27 = v2;
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36A8]), sel_init);
    objc_msgSend(v11, sel_setFormatOptions_, 1907);
    v12 = (void *)sub_1C0301C60();
    v13 = objc_msgSend(v11, sel_stringFromDate_, v12);

    v14 = sub_1C0303EB0();
    v16 = v15;

    v17 = objc_msgSend((id)objc_opt_self(), sel_now);
    sub_1C0301CD8();

    v18 = (void *)sub_1C0301C60();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
    v19 = objc_msgSend(v11, sel_stringFromDate_, v18);

    v20 = sub_1C0303EB0();
    v22 = v21;

    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
    inited = swift_initStackObject();
    v24 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(inited + 16) = xmmword_1C03067E0;
    *(_QWORD *)(inited + 56) = v24;
    *(_QWORD *)(inited + 64) = &off_1E799BE40;
    *(_QWORD *)(inited + 32) = v27;
    v25 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 104) = &off_1E799BE20;
    *(_QWORD *)(inited + 72) = v14;
    *(_QWORD *)(inited + 80) = v16;
    *(_QWORD *)(inited + 136) = v25;
    *(_QWORD *)(inited + 144) = &off_1E799BE20;
    *(_QWORD *)(inited + 112) = v20;
    *(_QWORD *)(inited + 120) = v22;
    OUTLINED_FUNCTION_1_8();
    sub_1C006890C(0xD000000000000028, v26, inited);
    if (!v0)
      swift_release();
    swift_setDeallocating();
    sub_1C004EFEC();

  }
  OUTLINED_FUNCTION_28_0();
}

void sub_1C0253E8C()
{
  __int128 *v0;
  __int128 *v1;
  sqlite3 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_40_0();
  v1 = v0;
  v2 = (sqlite3 *)sub_1C0055230();
  if (OUTLINED_FUNCTION_53_17(v2) != 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C0320230;
    v6 = *v1;
    v7 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 64) = &off_1E799BE20;
    *(_OWORD *)(inited + 32) = v6;
    v8 = v1[1];
    *(_QWORD *)(inited + 96) = v7;
    *(_QWORD *)(inited + 104) = &off_1E799BE20;
    *(_OWORD *)(inited + 72) = v8;
    v9 = sub_1C0251B70(*((_BYTE *)v1 + 32));
    *(_QWORD *)(inited + 136) = v7;
    *(_QWORD *)(inited + 144) = &off_1E799BE20;
    *(_QWORD *)(inited + 112) = v9;
    *(_QWORD *)(inited + 120) = v10;
    v11 = *((_QWORD *)v1 + 5);
    v12 = MEMORY[0x1E0DEB418];
    *(_QWORD *)(inited + 176) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(inited + 184) = &off_1E799BE40;
    *(_QWORD *)(inited + 152) = v11;
    v13 = *((_QWORD *)v1 + 6);
    *(_QWORD *)(inited + 216) = v12;
    *(_QWORD *)(inited + 224) = &off_1E799BE40;
    *(_QWORD *)(inited + 192) = v13;
    __asm { BR              X12 }
  }
  sub_1C0255288();
  v3 = OUTLINED_FUNCTION_15_2();
  OUTLINED_FUNCTION_2_117(v3, v4);
  OUTLINED_FUNCTION_28_0();
}

uint64_t sub_1C02543CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  sqlite3 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v9 = (sqlite3 *)sub_1C0055230();
  if (OUTLINED_FUNCTION_53_17(v9) == 1)
  {
    sub_1C0255288();
    v10 = OUTLINED_FUNCTION_15_2();
    return OUTLINED_FUNCTION_2_117(v10, v11);
  }
  if (a4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C03084B0;
    v14 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 64) = &off_1E799BE20;
    *(_QWORD *)(inited + 32) = a1;
    *(_QWORD *)(inited + 40) = a2;
    *(_QWORD *)(inited + 96) = v14;
    *(_QWORD *)(inited + 104) = &off_1E799BE20;
    *(_QWORD *)(inited + 72) = a3;
    *(_QWORD *)(inited + 80) = a4;
    swift_bridgeObjectRetain_n();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_1_8();
    OUTLINED_FUNCTION_12_58(v15, v16, inited);
    if (v4)
    {
      swift_setDeallocating();
      sub_1C004EFEC();
      return OUTLINED_FUNCTION_28();
    }
    swift_release();
    swift_setDeallocating();
    sub_1C004EFEC();
    v20 = swift_initStackObject();
    *(_OWORD *)(v20 + 16) = xmmword_1C03084B0;
    v21 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v20 + 64) = &off_1E799BE20;
    *(_QWORD *)(v20 + 72) = a3;
    *(_QWORD *)(v20 + 32) = a1;
    *(_QWORD *)(v20 + 40) = a2;
    *(_QWORD *)(v20 + 96) = v21;
    *(_QWORD *)(v20 + 104) = &off_1E799BE20;
    *(_QWORD *)(v20 + 80) = a4;
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_1_8();
    OUTLINED_FUNCTION_12_58(v22, v23, v20);
    swift_release();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
    v17 = swift_initStackObject();
    *(_OWORD *)(v17 + 16) = xmmword_1C0305B60;
    v18 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v17 + 64) = &off_1E799BE20;
    *(_QWORD *)(v17 + 32) = a1;
    *(_QWORD *)(v17 + 40) = a2;
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_1_8();
    OUTLINED_FUNCTION_12_58(0xD000000000000027, v19, v17);
    if (!v4)
    {
      swift_release();
      swift_setDeallocating();
      sub_1C004EFEC();
      v24 = swift_initStackObject();
      *(_OWORD *)(v24 + 16) = xmmword_1C0305B60;
      *(_QWORD *)(v24 + 56) = v18;
      *(_QWORD *)(v24 + 64) = &off_1E799BE20;
      *(_QWORD *)(v24 + 32) = a1;
      *(_QWORD *)(v24 + 40) = a2;
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_1_8();
      OUTLINED_FUNCTION_12_58(v25, v26, v24);
      swift_release();
    }
  }
  swift_setDeallocating();
  return sub_1C004EFEC();
}

unint64_t sub_1C025467C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  __int128 v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  int v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  int v51;
  unint64_t v52;
  char v53;
  int v54;
  unint64_t v55;
  char v56;
  int v57;
  unint64_t v58;
  char v59;
  int v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  char v66;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char v81;
  unint64_t v82;
  char v83;
  char v84;
  unint64_t v85;
  char v86;
  char v87;
  unint64_t v88;
  char v89;
  char v90;
  char v91;
  unint64_t v92;
  char v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  _BYTE v102[60];
  int v103;

  v11 = sub_1C00A9B84(0x796164696C6F68, 0xE700000000000000, a1);
  if ((v12 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C00B0E2C();
    v20 = v19;
    swift_bridgeObjectRelease();
    sub_1C0056D18();
    swift_allocError();
    *(_OWORD *)v21 = xmmword_1C0320240;
    *(_QWORD *)(v21 + 16) = v20;
    v22 = 1;
LABEL_15:
    *(_BYTE *)(v21 + 24) = v22;
    return swift_willThrow();
  }
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  v4 = *(_QWORD *)(a2 + 16);
  if (v11 >= v4)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v6 = a2 + 32;
  sub_1C0055F14(a2 + 32 + 40 * v11, (uint64_t)v102);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727520);
  if ((swift_dynamicCast() & 1) == 0 || (v3 = v101) == 0)
  {
    sub_1C0056D18();
    swift_allocError();
    *(_OWORD *)v21 = xmmword_1C0320240;
    *(_QWORD *)(v21 + 16) = 0;
    v22 = 3;
    goto LABEL_15;
  }
  v13 = sub_1C00A9B84(0x7972746E756F63, 0xE700000000000000, a1);
  if ((v14 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C00B0E2C();
    v25 = v24;
    swift_bridgeObjectRelease();
    sub_1C0056D18();
    swift_allocError();
    *(_OWORD *)v26 = xmmword_1C0320250;
    *(_QWORD *)(v26 + 16) = v25;
    v27 = 1;
LABEL_18:
    *(_BYTE *)(v26 + 24) = v27;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  if (v13 >= v4)
  {
    __break(1u);
    goto LABEL_78;
  }
  sub_1C0055F14(v6 + 40 * v13, (uint64_t)v102);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1C0056D18();
    swift_allocError();
    *(_OWORD *)v26 = xmmword_1C0320250;
    *(_QWORD *)(v26 + 16) = 0;
    v27 = 3;
    goto LABEL_18;
  }
  v98 = v100;
  v99 = v101;
  sub_1C008FB70();
  if (v5)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v97 = v100;
  if (v15 == 12)
  {
    sub_1C0056D18();
    swift_allocError();
    v17 = xmmword_1C03202F0;
LABEL_12:
    *(_OWORD *)v16 = v17;
    *(_QWORD *)(v16 + 16) = 0;
    v18 = 3;
LABEL_30:
    *(_BYTE *)(v16 + 24) = v18;
    swift_willThrow();
    goto LABEL_31;
  }
  v7 = v15;
  v28 = sub_1C00A9B84(1918985593, 0xE400000000000000, a1);
  if ((v29 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C00B0E2C();
    v34 = v33;
    swift_bridgeObjectRelease();
    sub_1C0056D18();
    swift_allocError();
    v35 = xmmword_1C0320260;
LABEL_29:
    *(_OWORD *)v16 = v35;
    *(_QWORD *)(v16 + 16) = v34;
    v18 = 1;
    goto LABEL_30;
  }
  if (v28 >= v4)
  {
    __break(1u);
LABEL_83:
    swift_bridgeObjectRetain();
    sub_1C00B0E2C();
    v34 = v73;
    swift_bridgeObjectRelease();
    sub_1C0056D18();
    swift_allocError();
    v35 = xmmword_1C03202C0;
    goto LABEL_29;
  }
  sub_1C0055F14(v6 + 40 * v28, (uint64_t)v102);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1C0056D18();
    swift_allocError();
    v17 = xmmword_1C0320260;
    goto LABEL_12;
  }
  v96 = v100;
  v30 = sub_1C00A9B84(0x6E6572727563636FLL, 0xEA00000000006563, a1);
  if ((v31 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C00B0E2C();
    v34 = v36;
    swift_bridgeObjectRelease();
    sub_1C0056D18();
    swift_allocError();
    v35 = xmmword_1C0320270;
    goto LABEL_29;
  }
  if (v30 >= v4)
  {
    __break(1u);
LABEL_86:
    swift_bridgeObjectRetain();
    sub_1C00B0E2C();
    v76 = v75;
    swift_bridgeObjectRelease();
    sub_1C0056D18();
    swift_allocError();
    *(_OWORD *)v77 = xmmword_1C03202E0;
    *(_QWORD *)(v77 + 16) = v76;
    *(_BYTE *)(v77 + 24) = 1;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  sub_1C0055F14(v6 + 40 * v30, (uint64_t)v102);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1C0056D18();
    swift_allocError();
    v17 = xmmword_1C0320270;
    goto LABEL_12;
  }
  v95 = v100;
  sub_1C008FCD0();
  v103 = v32;
  if (v32 == 4)
  {
    sub_1C0056D18();
    swift_allocError();
    v17 = xmmword_1C031ECE0;
    goto LABEL_12;
  }
LABEL_37:
  v37 = sub_1C00A9B84(0x68746E6F6DLL, 0xE500000000000000, a1);
  if ((v38 & 1) != 0)
  {
LABEL_78:
    swift_bridgeObjectRetain();
    sub_1C00B0E2C();
    v34 = v69;
    swift_bridgeObjectRelease();
    sub_1C0056D18();
    swift_allocError();
    v35 = xmmword_1C0320280;
    goto LABEL_29;
  }
  if (v37 >= v4)
  {
    __break(1u);
    goto LABEL_90;
  }
  sub_1C0055F14(v6 + 40 * v37, (uint64_t)v102);
  v39 = swift_dynamicCast();
  v40 = v100;
  v93 = v39;
  if (!v39)
    v40 = 0;
  v94 = v40;
  v41 = sub_1C00A9B84(7954788, 0xE300000000000000, a1);
  if ((v42 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C00B0E2C();
    v34 = v70;
    swift_bridgeObjectRelease();
    sub_1C0056D18();
    swift_allocError();
    v35 = xmmword_1C0320290;
    goto LABEL_29;
  }
  if (v41 >= v4)
  {
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  sub_1C0055F14(v6 + 40 * v41, (uint64_t)v102);
  v43 = swift_dynamicCast();
  v48 = v100;
  v90 = v43;
  if (!v43)
    v48 = 0;
  v92 = v48;
  sub_1C008FC20(0x656577666F796164, 0xE90000000000006BLL, a1, a2, v44, v45, v46, v47, v78, v79);
  v91 = v49;
  if (v5)
    goto LABEL_31;
  result = sub_1C00A9B84(0x6E6964726F796164, 0xEA00000000006C61, a1);
  if ((v50 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C00B0E2C();
    v34 = v71;
    swift_bridgeObjectRelease();
    sub_1C0056D18();
    swift_allocError();
    v35 = xmmword_1C03202A0;
    goto LABEL_29;
  }
  if (result >= v4)
  {
    __break(1u);
    goto LABEL_93;
  }
  sub_1C0055F14(v6 + 40 * result, (uint64_t)v102);
  v51 = swift_dynamicCast();
  v52 = v100;
  v87 = v51;
  if (!v51)
    v52 = 0;
  v88 = v52;
  result = sub_1C00A9B84(0x74657366666FLL, 0xE600000000000000, a1);
  if ((v53 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C00B0E2C();
    v34 = v72;
    swift_bridgeObjectRelease();
    sub_1C0056D18();
    swift_allocError();
    v35 = xmmword_1C03202B0;
    goto LABEL_29;
  }
  if (result >= v4)
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  sub_1C0055F14(v6 + 40 * result, (uint64_t)v102);
  v54 = swift_dynamicCast();
  v55 = v100;
  v84 = v54;
  if (!v54)
    v55 = 0;
  v85 = v55;
  result = sub_1C00A9B84(0x6E6F697461727564, 0xE800000000000000, a1);
  if ((v56 & 1) != 0)
    goto LABEL_83;
  if (result >= v4)
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  sub_1C0055F14(v6 + 40 * result, (uint64_t)v102);
  v57 = swift_dynamicCast();
  v58 = v100;
  v81 = v57;
  if (!v57)
    v58 = 0;
  v82 = v58;
  result = sub_1C00A9B84(0x65766974616C6572, 0xEA00000000006F74, a1);
  if ((v59 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C00B0E2C();
    v34 = v74;
    swift_bridgeObjectRelease();
    sub_1C0056D18();
    swift_allocError();
    v35 = xmmword_1C03202D0;
    goto LABEL_29;
  }
  if (result >= v4)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  sub_1C0055F14(v6 + 40 * result, (uint64_t)v102);
  v60 = swift_dynamicCast();
  v61 = v100;
  if (!v101)
    v61 = 0;
  if (v60)
    v62 = v61;
  else
    v62 = 0;
  if (v60)
    v63 = v101;
  else
    v63 = 0;
  v79 = v62;
  v80 = v63;
  sub_1C008FB70();
  BYTE4(v78) = v64;
  sub_1C008FD80();
  LOBYTE(a2) = v65;
  result = sub_1C00A9B84(0x676E697472617473, 0xE800000000000000, a1);
  if ((v66 & 1) != 0)
    goto LABEL_86;
  if (result < v4)
  {
    LOBYTE(v4) = v93 ^ 1;
    v93 = v90 ^ 1;
    v89 = v87 ^ 1;
    v86 = v84 ^ 1;
    v83 = v81 ^ 1;
    sub_1C0055F14(v6 + 40 * result, (uint64_t)v102);
    result = swift_dynamicCast();
    if ((result & 1) == 0 || !v101)
    {
      v68 = 0;
      goto LABEL_88;
    }
    if (v100 != 0x676E696E657665 || v101 != 0xE700000000000000)
    {
      v68 = sub_1C0304A08();
      result = swift_bridgeObjectRelease();
LABEL_88:
      v102[0] = v4;
      v102[56] = v89;
      *(_QWORD *)a3 = v98;
      *(_QWORD *)(a3 + 8) = v3;
      *(_QWORD *)(a3 + 16) = v97;
      *(_QWORD *)(a3 + 24) = v99;
      *(_BYTE *)(a3 + 32) = v7;
      *(_QWORD *)(a3 + 40) = v96;
      *(_QWORD *)(a3 + 48) = v95;
      *(_BYTE *)(a3 + 56) = v103;
      *(_QWORD *)(a3 + 64) = v94;
      *(_BYTE *)(a3 + 72) = v4;
      *(_QWORD *)(a3 + 80) = v92;
      *(_BYTE *)(a3 + 88) = v93;
      *(_BYTE *)(a3 + 89) = v91;
      *(_QWORD *)(a3 + 96) = v88;
      *(_BYTE *)(a3 + 104) = v89;
      *(_QWORD *)(a3 + 112) = v85;
      *(_BYTE *)(a3 + 120) = v86;
      *(_QWORD *)(a3 + 128) = v82;
      *(_BYTE *)(a3 + 136) = v83;
      *(_QWORD *)(a3 + 144) = v79;
      *(_QWORD *)(a3 + 152) = v80;
      *(_BYTE *)(a3 + 160) = BYTE4(v78);
      *(_BYTE *)(a3 + 161) = a2;
      *(_BYTE *)(a3 + 162) = v68 & 1;
      return result;
    }
LABEL_91:
    result = swift_bridgeObjectRelease();
    v68 = 1;
    goto LABEL_88;
  }
LABEL_96:
  __break(1u);
  return result;
}

unint64_t sub_1C0255288()
{
  unint64_t result;

  result = qword_1EF5C1D58;
  if (!qword_1EF5C1D58)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0320820, &unk_1E79A3930);
    atomic_store(result, (unint64_t *)&qword_1EF5C1D58);
  }
  return result;
}

uint64_t sub_1C02552C4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0255310 + 4 * byte_1C0320349[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0255344 + 4 * byte_1C0320344[v4]))();
}

uint64_t sub_1C0255344(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C025534C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0255354);
  return result;
}

uint64_t sub_1C0255360(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0255368);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C025536C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0255374(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for HolidaysDBObserved()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C025538C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1C02553D8 + 4 * byte_1C0320353[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1C025540C + 4 * byte_1C032034E[v4]))();
}

uint64_t sub_1C025540C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0255414(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C025541CLL);
  return result;
}

uint64_t sub_1C0255428(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0255430);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1C0255434(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C025543C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for HolidaysDBCalendar()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C0255454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  if (a7 != 1)
  {
    if (a7)
      return result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C02554AC(uint64_t a1)
{
  return sub_1C02554C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t sub_1C02554C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  if (a7 != 1)
  {
    if (a7)
      return result;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C025551C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1C0255454(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t sub_1C0255594(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1C0255454(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_1C02554C4(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1C025563C(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_1C02554C4(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t sub_1C0255690(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 49))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 48);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C02556D0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C0255724(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 1u)
    return *(unsigned __int8 *)(a1 + 48);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1C025573C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)(result + 40) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

void type metadata accessor for HolidaysDBError()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C0255770(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1C02557BC + 4 * byte_1C032035D[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1C02557F0 + 4 * byte_1C0320358[v4]))();
}

uint64_t sub_1C02557F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02557F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0255800);
  return result;
}

uint64_t sub_1C025580C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0255814);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1C0255818(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0255820(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for HolidaysDBWeekday()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C0255838()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0255868(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v5 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v5;
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_WORD *)(a1 + 161) = *(_WORD *)(a2 + 161);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C0255934(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v4 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v4;
  v5 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v5;
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  v6 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v6;
  v7 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v7;
  v8 = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v8;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_BYTE *)(a1 + 161) = *(_BYTE *)(a2 + 161);
  *(_BYTE *)(a1 + 162) = *(_BYTE *)(a2 + 162);
  return a1;
}

void *__swift_memcpy163_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA3uLL);
}

uint64_t sub_1C0255A58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v6 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v6;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v7 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_WORD *)(a1 + 161) = *(_WORD *)(a2 + 161);
  return a1;
}

uint64_t sub_1C0255B24(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 163))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C0255B64(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 162) = 0;
    *(_WORD *)(result + 160) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 163) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 163) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for HolidaysDBRow()
{
  OUTLINED_FUNCTION_17_2();
}

unint64_t sub_1C0255BE4()
{
  unint64_t result;

  result = qword_1EF5C1D70;
  if (!qword_1EF5C1D70)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0320548, &unk_1E79A39C0);
    atomic_store(result, (unint64_t *)&qword_1EF5C1D70);
  }
  return result;
}

unint64_t sub_1C0255C24()
{
  unint64_t result;

  result = qword_1EF5C1DB8;
  if (!qword_1EF5C1DB8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03206A0, &unk_1E79A38A0);
    atomic_store(result, (unint64_t *)&qword_1EF5C1DB8);
  }
  return result;
}

_UNKNOWN **sub_1C0255C60()
{
  return &off_1E799BE20;
}

unint64_t sub_1C0255C70()
{
  unint64_t result;

  result = qword_1EF5C1E00;
  if (!qword_1EF5C1E00)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03207F8, &unk_1E79A3810);
    atomic_store(result, (unint64_t *)&qword_1EF5C1E00);
  }
  return result;
}

unint64_t sub_1C0255CAC()
{
  unint64_t result;

  result = qword_1EF5C1E50;
  if (!qword_1EF5C1E50)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0320ADC, &type metadata for HolidaysDBRow.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1E50);
  }
  return result;
}

unint64_t sub_1C0255CE8()
{
  unint64_t result;

  result = qword_1EF5C1E58;
  if (!qword_1EF5C1E58)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0320600, &unk_1E79A38A0);
    atomic_store(result, (unint64_t *)&qword_1EF5C1E58);
  }
  return result;
}

unint64_t sub_1C0255D24()
{
  unint64_t result;

  result = qword_1EF5C1E60;
  if (!qword_1EF5C1E60)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0320AB4, &unk_1E79A3BB0);
    atomic_store(result, (unint64_t *)&qword_1EF5C1E60);
  }
  return result;
}

unint64_t sub_1C0255D60()
{
  unint64_t result;

  result = qword_1EF5C1E68;
  if (!qword_1EF5C1E68)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03204A8, &unk_1E79A39C0);
    atomic_store(result, (unint64_t *)&qword_1EF5C1E68);
  }
  return result;
}

unint64_t sub_1C0255D9C()
{
  unint64_t result;

  result = qword_1EF5C1E70;
  if (!qword_1EF5C1E70)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0320758, &unk_1E79A3810);
    atomic_store(result, (unint64_t *)&qword_1EF5C1E70);
  }
  return result;
}

unint64_t sub_1C0255DD8()
{
  unint64_t result;

  result = qword_1EF5C1E80;
  if (!qword_1EF5C1E80)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03205D8, &unk_1E79A38A0);
    atomic_store(result, (unint64_t *)&qword_1EF5C1E80);
  }
  return result;
}

unint64_t sub_1C0255E14()
{
  unint64_t result;

  result = qword_1EF5C1E88;
  if (!qword_1EF5C1E88)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0320A8C, &unk_1E79A3BB0);
    atomic_store(result, (unint64_t *)&qword_1EF5C1E88);
  }
  return result;
}

unint64_t sub_1C0255E50()
{
  unint64_t result;

  result = qword_1EF5C1E90;
  if (!qword_1EF5C1E90)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0320480, &unk_1E79A39C0);
    atomic_store(result, (unint64_t *)&qword_1EF5C1E90);
  }
  return result;
}

unint64_t sub_1C0255E8C()
{
  unint64_t result;

  result = qword_1EF5C1E98;
  if (!qword_1EF5C1E98)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0320730, &unk_1E79A3810);
    atomic_store(result, (unint64_t *)&qword_1EF5C1E98);
  }
  return result;
}

unint64_t sub_1C0255EC8()
{
  unint64_t result;

  result = qword_1EF5C1EA0;
  if (!qword_1EF5C1EA0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0320780, &unk_1E79A3810);
    atomic_store(result, (unint64_t *)&qword_1EF5C1EA0);
  }
  return result;
}

unint64_t sub_1C0255F04()
{
  unint64_t result;

  result = qword_1EF5C1EA8;
  if (!qword_1EF5C1EA8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0320628, &unk_1E79A38A0);
    atomic_store(result, (unint64_t *)&qword_1EF5C1EA8);
  }
  return result;
}

unint64_t sub_1C0255F40()
{
  unint64_t result;

  result = qword_1EF5C1EB0;
  if (!qword_1EF5C1EB0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03204D0, &unk_1E79A39C0);
    atomic_store(result, (unint64_t *)&qword_1EF5C1EB0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HolidaysDBRow.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1C0255FC8 + 4 * byte_1C0320367[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1C0255FFC + 4 * byte_1C0320362[v4]))();
}

uint64_t sub_1C0255FFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0256004(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C025600CLL);
  return result;
}

uint64_t sub_1C0256018(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0256020);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1C0256024(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C025602C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HolidaysDBRow.CodingKeys()
{
  return &type metadata for HolidaysDBRow.CodingKeys;
}

uint64_t sub_1C0256048(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C0256094 + 4 * byte_1C0320371[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C02560C8 + 4 * byte_1C032036C[v4]))();
}

uint64_t sub_1C02560C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02560D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02560D8);
  return result;
}

uint64_t sub_1C02560E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02560ECLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C02560F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02560F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for HolidaysDBType()
{
  OUTLINED_FUNCTION_17_2();
}

unint64_t sub_1C0256114()
{
  unint64_t result;

  result = qword_1EF5C1EB8;
  if (!qword_1EF5C1EB8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03209AC, &unk_1E79A3BB0);
    atomic_store(result, (unint64_t *)&qword_1EF5C1EB8);
  }
  return result;
}

unint64_t sub_1C0256154()
{
  unint64_t result;

  result = qword_1EF5C1F00;
  if (!qword_1EF5C1F00)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0320A64, &type metadata for HolidaysDBRow.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1F00);
  }
  return result;
}

unint64_t sub_1C0256194()
{
  unint64_t result;

  result = qword_1EF5C1F08;
  if (!qword_1EF5C1F08)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03209D4, &type metadata for HolidaysDBRow.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1F08);
  }
  return result;
}

unint64_t sub_1C02561D4()
{
  unint64_t result;

  result = qword_1EF5C1F10;
  if (!qword_1EF5C1F10)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03209FC, &type metadata for HolidaysDBRow.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C1F10);
  }
  return result;
}

unint64_t sub_1C0256210()
{
  unint64_t result;

  result = qword_1EF5C1F18;
  if (!qword_1EF5C1F18)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0320934, &unk_1E79A3BB0);
    atomic_store(result, (unint64_t *)&qword_1EF5C1F18);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_116@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 68) = a1;
  return sub_1C0304948();
}

uint64_t OUTLINED_FUNCTION_2_117(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a2 = 1;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_QWORD *)(a2 + 40) = 0;
  *(_BYTE *)(a2 + 48) = 2;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_3_121(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1C005578C(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_4_97@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 328) = a1;
  return sub_1C0304894();
}

uint64_t OUTLINED_FUNCTION_6_94@<X0>(uint64_t a1@<X1>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 48) = a2;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_8_70()
{
  return sub_1C0304894();
}

uint64_t OUTLINED_FUNCTION_11_73()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 72));
}

uint64_t OUTLINED_FUNCTION_12_58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C006890C(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_13_58()
{
  return sub_1C0304A08();
}

uint64_t OUTLINED_FUNCTION_15_54@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 328) = a1;
  return sub_1C03048D0();
}

uint64_t OUTLINED_FUNCTION_21_43()
{
  return sub_1C0304954();
}

uint64_t OUTLINED_FUNCTION_22_46@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 68) = a1;
  return sub_1C0304984();
}

uint64_t OUTLINED_FUNCTION_24_28()
{
  return sub_1C03048A0();
}

uint64_t OUTLINED_FUNCTION_27_43@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return sub_1C0055F14(v2 + a1 * a2, v3 - 120);
}

uint64_t OUTLINED_FUNCTION_29_33()
{
  uint64_t v0;

  return v0 - 68;
}

uint64_t OUTLINED_FUNCTION_30_34()
{
  return sub_1C0304960();
}

uint64_t OUTLINED_FUNCTION_45_23()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t OUTLINED_FUNCTION_46_22()
{
  return sub_1C03048E8();
}

void OUTLINED_FUNCTION_47_25()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_56_20()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_61_14()
{
  return sub_1C0301CD8();
}

SiriInference::SportsResolverConfig __swiftcall SportsResolverConfig.init(intentTypeName:bundleId:)(Swift::String intentTypeName, Swift::String bundleId)
{
  Swift::String *v2;
  SiriInference::SportsResolverConfig result;

  *v2 = intentTypeName;
  v2[1] = bundleId;
  result.bundleId = bundleId;
  result.intentTypeName = intentTypeName;
  return result;
}

ValueMetadata *type metadata accessor for SportsResolverConfig()
{
  return &type metadata for SportsResolverConfig;
}

uint64_t sub_1C0256404(unint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v9;

  v9 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_1C03047F8())
  {
    for (i = 4; ; ++i)
    {
      v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B975EC](i - 4, a1) : *(id *)(a1 + 8 * i);
      v5 = v4;
      v6 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v7 = objc_msgSend(v4, sel_personHandle);

      if (v7)
      {
        MEMORY[0x1C3B97010]();
        if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1C030415C();
        sub_1C0304180();
        sub_1C0304150();
      }
      if (v6 == v2)
      {
        swift_bridgeObjectRelease();
        return v9;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1C0256584(uint64_t a1)
{
  unint64_t v1;
  uint64_t v3;
  uint64_t i;
  id v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v13 = MEMORY[0x1E0DEE9E0];
  if (a1)
  {
    v11[0] = MEMORY[0x1E0DEE9D8];
    if ((unint64_t)a1 >> 62)
    {
      if (a1 >= 0)
        v1 = a1 & 0xFFFFFFFFFFFFFF8;
      else
        v1 = a1;
      swift_bridgeObjectRetain();
      v3 = sub_1C03047F8();
      if (v3)
      {
LABEL_4:
        if (v3 < 1)
        {
          __break(1u);
          goto LABEL_28;
        }
        for (i = 0; i != v3; ++i)
        {
          if ((a1 & 0xC000000000000001) != 0)
            v5 = (id)MEMORY[0x1C3B975EC](i, a1);
          else
            v5 = *(id *)(a1 + 8 * i + 32);
          v6 = v5;
          if ((sub_1C006E95C() & 1) != 0)
          {

          }
          else
          {
            sub_1C0304738();
            sub_1C0304768();
            sub_1C0304774();
            sub_1C0304744();
          }
        }
        swift_bridgeObjectRelease();
        v7 = v11[0];
        if ((v11[0] & 0x8000000000000000) != 0)
          goto LABEL_25;
LABEL_20:
        if ((v7 & 0x4000000000000000) == 0)
        {
          if (!*(_QWORD *)(v7 + 16))
          {
LABEL_26:
            swift_release();
            return v13;
          }
LABEL_22:
          v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED727C58);
          v11[0] = v7;
          swift_retain();
          sub_1C006EBFC((uint64_t)v11);
          v1 = sub_1C0256404(v7);
          swift_release();
          if (!(v1 >> 62))
          {
            if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
LABEL_24:
              v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727DB0);
              v11[0] = v1;
              sub_1C006EBFC((uint64_t)v11);
              return v13;
            }
LABEL_29:
            swift_bridgeObjectRelease();
            return v13;
          }
LABEL_28:
          swift_bridgeObjectRetain();
          v9 = sub_1C03047F8();
          swift_bridgeObjectRelease();
          if (v9)
            goto LABEL_24;
          goto LABEL_29;
        }
LABEL_25:
        swift_retain();
        v8 = sub_1C03047F8();
        swift_release();
        if (!v8)
          goto LABEL_26;
        goto LABEL_22;
      }
    }
    else
    {
      v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v3)
        goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
      goto LABEL_25;
    goto LABEL_20;
  }
  return v13;
}

uint64_t sub_1C02567E4()
{
  return INStartCallIntent.memorableParameters()();
}

uint64_t _sSo17INStartCallIntentC13SiriInferenceE19memorableParametersSDySSypGyF_0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1C0256844(v0);
  v2 = sub_1C0256584(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C0256844(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_contacts);
  if (!v1)
    return 0;
  v2 = v1;
  sub_1C0132288();
  v3 = sub_1C0304138();

  return v3;
}

void DateTime.DateTimeRange.__allocating_init(withStartDateTime:endDateTime:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;

  v4 = (_QWORD *)OUTLINED_FUNCTION_2_118();
  v4[2] = 0;
  v4[3] = a1;
  v4[5] = 0;
  v4[6] = 0;
  v4[4] = a2;
  OUTLINED_FUNCTION_30_35((uint64_t)v4);
  OUTLINED_FUNCTION_37_0();
}

uint64_t DateTime.DateTimeRange.__allocating_init(at:start:end:duration:interval:definedValue:qualifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, char *a7)
{
  uint64_t result;
  char v15;
  char v16;

  result = OUTLINED_FUNCTION_2_118();
  v15 = *a6;
  v16 = *a7;
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)(result + 32) = a3;
  *(_QWORD *)(result + 40) = a4;
  *(_QWORD *)(result + 48) = a5;
  *(_BYTE *)(result + 56) = v15;
  *(_BYTE *)(result + 57) = v16;
  return result;
}

void DateTime.DateTimeRange.__allocating_init(withInterval:)(uint64_t a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_2_118();
  *(_QWORD *)(v2 + 48) = a1;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  OUTLINED_FUNCTION_30_35(v2);
  OUTLINED_FUNCTION_9();
}

void DateTime.DateTimeRange.__allocating_init(withStartDateTime:endDateTime:interval:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;

  v6 = (_QWORD *)OUTLINED_FUNCTION_2_118();
  v6[5] = 0;
  v6[6] = a3;
  v6[2] = 0;
  v6[3] = a1;
  v6[4] = a2;
  OUTLINED_FUNCTION_30_35((uint64_t)v6);
  OUTLINED_FUNCTION_37_0();
}

uint64_t DateTime.DateTimeRange.at.getter()
{
  return swift_retain();
}

uint64_t DateTime.DateTimeRange.start.getter()
{
  return swift_retain();
}

uint64_t DateTime.DateTimeRange.end.getter()
{
  return swift_retain();
}

uint64_t DateTime.DateTimeRange.duration.getter()
{
  return swift_retain();
}

uint64_t DateTime.DateTimeRange.interval.getter()
{
  return swift_retain();
}

void DateTime.DateTimeRange.definedValue.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 56);
}

void DateTime.DateTimeRange.qualifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 57);
}

void DateTime.DateTimeRange.__allocating_init(withDateTime:)(uint64_t a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_2_118();
  *(_QWORD *)(v2 + 16) = a1;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 40) = 0u;
  OUTLINED_FUNCTION_30_35(v2);
  OUTLINED_FUNCTION_9();
}

uint64_t DateTime.DateTimeRange.init(withDateTime:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return OUTLINED_FUNCTION_5_88();
}

void DateTime.DateTimeRange.__allocating_init(withStartDateTime:)(uint64_t a1)
{
  _QWORD *v2;

  v2 = (_QWORD *)OUTLINED_FUNCTION_2_118();
  v2[2] = 0;
  v2[3] = a1;
  v2[5] = 0;
  v2[6] = 0;
  v2[4] = 0;
  OUTLINED_FUNCTION_30_35((uint64_t)v2);
  OUTLINED_FUNCTION_9();
}

uint64_t DateTime.DateTimeRange.init(withStartDateTime:)(uint64_t a1)
{
  _QWORD *v1;

  v1[2] = 0;
  v1[3] = a1;
  v1[5] = 0;
  v1[6] = 0;
  v1[4] = 0;
  return OUTLINED_FUNCTION_5_88();
}

uint64_t DateTime.DateTimeRange.init(withStartDateTime:endDateTime:interval:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[5] = 0;
  v3[6] = a3;
  v3[2] = 0;
  v3[3] = a1;
  v3[4] = a2;
  return OUTLINED_FUNCTION_5_88();
}

void DateTime.DateTimeRange.__allocating_init(withStartDateTime:duration:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;

  v4 = (_QWORD *)OUTLINED_FUNCTION_2_118();
  v4[2] = 0;
  v4[3] = a1;
  v4[4] = 0;
  v4[5] = a2;
  v4[6] = 0;
  OUTLINED_FUNCTION_30_35((uint64_t)v4);
  OUTLINED_FUNCTION_37_0();
}

uint64_t DateTime.DateTimeRange.init(withStartDateTime:duration:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[2] = 0;
  v2[3] = a1;
  v2[4] = 0;
  v2[5] = a2;
  v2[6] = 0;
  return OUTLINED_FUNCTION_5_88();
}

void DateTime.DateTimeRange.__allocating_init(withDefinedValue:)(_BYTE *a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_2_118();
  *(_BYTE *)(v2 + 56) = *a1;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 48) = 0;
  *(_BYTE *)(v2 + 57) = 20;
  OUTLINED_FUNCTION_9();
}

uint64_t DateTime.DateTimeRange.init(withDefinedValue:)(_BYTE *a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = *a1;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_QWORD *)(v1 + 48) = 0;
  *(_BYTE *)(v1 + 57) = 20;
  return OUTLINED_FUNCTION_5_20();
}

void DateTime.DateTimeRange.__allocating_init(withDefinedValue:qualifier:)(_BYTE *a1, char *a2)
{
  uint64_t v4;
  char v5;

  v4 = OUTLINED_FUNCTION_2_118();
  v5 = *a2;
  *(_BYTE *)(v4 + 56) = *a1;
  *(_BYTE *)(v4 + 57) = v5;
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_QWORD *)(v4 + 48) = 0;
  OUTLINED_FUNCTION_37_0();
}

uint64_t DateTime.DateTimeRange.init(withDefinedValue:qualifier:)(_BYTE *a1, char *a2)
{
  uint64_t v2;
  char v3;

  v3 = *a2;
  *(_BYTE *)(v2 + 56) = *a1;
  *(_BYTE *)(v2 + 57) = v3;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 48) = 0;
  return OUTLINED_FUNCTION_5_20();
}

uint64_t DateTime.DateTimeRange.init(withInterval:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  return OUTLINED_FUNCTION_5_88();
}

void DateTime.DateTimeRange.__allocating_init(withDuration:)(uint64_t a1)
{
  _QWORD *v2;

  v2 = (_QWORD *)OUTLINED_FUNCTION_2_118();
  v2[5] = a1;
  v2[6] = 0;
  v2[2] = 0;
  v2[3] = 0;
  v2[4] = 0;
  OUTLINED_FUNCTION_30_35((uint64_t)v2);
  OUTLINED_FUNCTION_9();
}

uint64_t DateTime.DateTimeRange.init(withDuration:)(uint64_t a1)
{
  _QWORD *v1;

  v1[5] = a1;
  v1[6] = 0;
  v1[2] = 0;
  v1[3] = 0;
  v1[4] = 0;
  return OUTLINED_FUNCTION_5_88();
}

uint64_t DateTime.DateTimeRange.init(at:start:end:duration:interval:definedValue:qualifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, char *a7)
{
  uint64_t v7;
  char v8;
  char v9;

  v8 = *a6;
  v9 = *a7;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 48) = a5;
  *(_BYTE *)(v7 + 56) = v8;
  *(_BYTE *)(v7 + 57) = v9;
  return OUTLINED_FUNCTION_5_20();
}

uint64_t sub_1C0256BE0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_45_24();
    OUTLINED_FUNCTION_1_0();
  }
  else
  {
    OUTLINED_FUNCTION_62();
  }
  if (*(_QWORD *)(v0 + 32))
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_45_24();
    OUTLINED_FUNCTION_1_0();
  }
  else
  {
    OUTLINED_FUNCTION_62();
  }
  if (*(_QWORD *)(v0 + 24))
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_45_24();
    OUTLINED_FUNCTION_1_0();
  }
  else
  {
    OUTLINED_FUNCTION_62();
  }
  if (*(_QWORD *)(v0 + 40))
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_73_13();
  }
  else
  {
    OUTLINED_FUNCTION_62();
  }
  if (*(_QWORD *)(v0 + 48))
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_73_13();
  }
  else
  {
    OUTLINED_FUNCTION_62();
  }
  if (*(_BYTE *)(v0 + 56) == 38)
  {
    OUTLINED_FUNCTION_62();
  }
  else
  {
    OUTLINED_FUNCTION_62();
    sub_1C0304B10();
  }
  if (*(_BYTE *)(v0 + 57) == 20)
    return OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_62();
  return sub_1C0304B10();
}

BOOL static DateTime.DateTimeRange.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  _BOOL4 v19;
  _BOOL4 v21;

  v4 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16))
  {
    if (!v4)
      return 0;
    v5 = OUTLINED_FUNCTION_41_23();
    OUTLINED_FUNCTION_9_3();
    v6 = OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_62_12(v6);
    OUTLINED_FUNCTION_38_28();
    OUTLINED_FUNCTION_1_0();
    if ((v5 & 1) == 0)
      return 0;
  }
  else if (v4)
  {
    return 0;
  }
  v7 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (!v7)
      return 0;
    v8 = OUTLINED_FUNCTION_41_23();
    OUTLINED_FUNCTION_9_3();
    v9 = OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_62_12(v9);
    OUTLINED_FUNCTION_38_28();
    OUTLINED_FUNCTION_1_0();
    if ((v8 & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  v10 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    if (!v10)
      return 0;
    v11 = OUTLINED_FUNCTION_41_23();
    OUTLINED_FUNCTION_9_3();
    v12 = OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_62_12(v12);
    OUTLINED_FUNCTION_38_28();
    OUTLINED_FUNCTION_1_0();
    if ((v11 & 1) == 0)
      return 0;
  }
  else if (v10)
  {
    return 0;
  }
  v13 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40))
  {
    if (!v13)
      return 0;
    type metadata accessor for DateTime.Interval();
    if (!OUTLINED_FUNCTION_36_33())
      return 0;
  }
  else if (v13)
  {
    return 0;
  }
  v14 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (!v14)
      return 0;
    type metadata accessor for DateTime.Interval();
    if (!OUTLINED_FUNCTION_36_33())
      return 0;
  }
  else if (v14)
  {
    return 0;
  }
  v15 = *(unsigned __int8 *)(a1 + 56);
  v16 = *(unsigned __int8 *)(a2 + 56);
  if (v15 == 38)
  {
    if (v16 == 38)
      goto LABEL_28;
    return 0;
  }
  if (v16 == 38 || v15 != v16)
    return 0;
LABEL_28:
  v17 = *(unsigned __int8 *)(a1 + 57);
  v18 = *(unsigned __int8 *)(a2 + 57);
  v19 = v18 == 20;
  v21 = v18 != 20 && v17 == v18;
  if (v17 == 20)
    return v19;
  else
    return v21;
}

void static DateTime.DateTimeRange.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_1C0256E9C(a1, a2);
}

void static DateTime.DateTimeRange.<= infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_1C0256E9C(a1, a2);
}

void sub_1C0256E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v6;

  v2 = *(_QWORD *)(a1 + 24);
  if (v2)
  {
    v4 = *(_QWORD *)(a2 + 24);
    if (v4)
    {
      OUTLINED_FUNCTION_41_23();
      OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_44_7();
      v6 = static DateTime.< infix(_:_:)(v2, v4);
      OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_39_3();
      if ((v6 & 1) == 0)
      {
        OUTLINED_FUNCTION_14_0();
        OUTLINED_FUNCTION_44_7();
        if (OUTLINED_FUNCTION_74_8() && *(_QWORD *)(a1 + 32) && *(_QWORD *)(a2 + 32))
        {
          swift_retain();
          OUTLINED_FUNCTION_39();
          OUTLINED_FUNCTION_67_8();
          OUTLINED_FUNCTION_1_4();
          swift_release();
          swift_release();
          OUTLINED_FUNCTION_39_3();
        }
        else
        {
          OUTLINED_FUNCTION_39_3();
          OUTLINED_FUNCTION_1_4();
        }
      }
    }
  }
  OUTLINED_FUNCTION_32_1();
}

void static DateTime.DateTimeRange.> infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_1C0256F90(a1, a2);
}

void static DateTime.DateTimeRange.>= infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_1C0256F90(a1, a2);
}

void sub_1C0256F90(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  BOOL v6;

  v2 = *(_QWORD **)(a1 + 24);
  if (v2)
  {
    v4 = *(_QWORD **)(a2 + 24);
    if (v4)
    {
      OUTLINED_FUNCTION_41_23();
      OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_44_7();
      v6 = static DateTime.<= infix(_:_:)(v2, v4);
      OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_39_3();
      if (v6)
      {
        OUTLINED_FUNCTION_14_0();
        OUTLINED_FUNCTION_44_7();
        if (OUTLINED_FUNCTION_74_8() && *(_QWORD *)(a1 + 32) && *(_QWORD *)(a2 + 32))
        {
          swift_retain();
          OUTLINED_FUNCTION_39();
          OUTLINED_FUNCTION_67_8();
          OUTLINED_FUNCTION_1_4();
          swift_release();
          swift_release();
          OUTLINED_FUNCTION_39_3();
        }
        else
        {
          OUTLINED_FUNCTION_39_3();
          OUTLINED_FUNCTION_1_4();
        }
      }
    }
  }
  OUTLINED_FUNCTION_32_1();
}

uint64_t sub_1C0257068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  if (*(_QWORD *)(v0 + 24) && *(_QWORD *)(v0 + 32))
  {
    OUTLINED_FUNCTION_14_0();
    v1 = OUTLINED_FUNCTION_44_7();
    v5 = sub_1C0077C30(v1);
    v2 = sub_1C0303FD0();
    sub_1C0077C30(v2);
    OUTLINED_FUNCTION_64_12();
    OUTLINED_FUNCTION_39_3();
    OUTLINED_FUNCTION_1_4();
  }
  else
  {
    if (*(_BYTE *)(v0 + 56) != 38)
    {
      v5 = 0;
      sub_1C0303FD0();
      sub_1C03047B0();
      return v5;
    }
    if (*(_QWORD *)(v0 + 16))
    {
      v5 = 4027489;
      v3 = OUTLINED_FUNCTION_14_0();
      sub_1C0077C30(v3);
      OUTLINED_FUNCTION_64_12();
      swift_bridgeObjectRelease();
      sub_1C0303FD0();
      OUTLINED_FUNCTION_39_3();
      return v5;
    }
    if (!*(_QWORD *)(v0 + 40))
      return 0;
    v5 = 0x6E6F697461727564;
    OUTLINED_FUNCTION_14_0();
    sub_1C00E2498();
    OUTLINED_FUNCTION_64_12();
    OUTLINED_FUNCTION_39_3();
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C02571F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 29793 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7472617473 && a2 == 0xE500000000000000;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 6581861 && a2 == 0xE300000000000000;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
        if (v8 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6C61767265746E69 && a2 == 0xE800000000000000;
          if (v9 || (sub_1C0304A08() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x5664656E69666564 && a2 == 0xEC00000065756C61;
            if (v10 || (sub_1C0304A08() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x656966696C617571 && a2 == 0xE900000000000072)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v12 = sub_1C0304A08();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 6;
              else
                return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C02574B8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C02574E0 + 4 * byte_1C0320BD8[a1]))(29793, 0xE200000000000000);
}

uint64_t sub_1C02574E0()
{
  return 0x7472617473;
}

uint64_t sub_1C02574F4()
{
  return 6581861;
}

uint64_t sub_1C0257504()
{
  return 0x6E6F697461727564;
}

uint64_t sub_1C025751C()
{
  return 0x6C61767265746E69;
}

uint64_t sub_1C0257534()
{
  return 0x5664656E69666564;
}

uint64_t sub_1C0257554()
{
  return 0x656966696C617571;
}

uint64_t sub_1C0257570()
{
  unsigned __int8 *v0;

  return sub_1C02574B8(*v0);
}

uint64_t sub_1C0257578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C02571F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C025759C()
{
  sub_1C0257D54();
  return sub_1C0304BAC();
}

uint64_t sub_1C02575C4()
{
  sub_1C0257D54();
  return sub_1C0304BB8();
}

uint64_t sub_1C02575EC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1F20);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0257D54();
  sub_1C0304BA0();
  v13 = *(_QWORD *)(v3 + 16);
  HIBYTE(v12) = 0;
  type metadata accessor for DateTime();
  OUTLINED_FUNCTION_29_24(&qword_1EF5BA1A0, v9, (uint64_t (*)(uint64_t))type metadata accessor for DateTime, (uint64_t)&protocol conformance descriptor for DateTime);
  OUTLINED_FUNCTION_1_117();
  if (!v2)
  {
    v13 = *(_QWORD *)(v3 + 24);
    HIBYTE(v12) = 1;
    OUTLINED_FUNCTION_1_117();
    v13 = *(_QWORD *)(v3 + 32);
    HIBYTE(v12) = 2;
    OUTLINED_FUNCTION_1_117();
    v13 = *(_QWORD *)(v3 + 40);
    HIBYTE(v12) = 3;
    type metadata accessor for DateTime.Interval();
    OUTLINED_FUNCTION_29_24(&qword_1EF5C1F30, v10, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.Interval, (uint64_t)&protocol conformance descriptor for DateTime.Interval);
    OUTLINED_FUNCTION_1_117();
    v13 = *(_QWORD *)(v3 + 48);
    HIBYTE(v12) = 4;
    OUTLINED_FUNCTION_1_117();
    LOBYTE(v13) = *(_BYTE *)(v3 + 56);
    HIBYTE(v12) = 5;
    sub_1C00EB580();
    OUTLINED_FUNCTION_9_82();
    LOBYTE(v13) = *(_BYTE *)(v3 + 57);
    HIBYTE(v12) = 6;
    sub_1C00E2E64();
    OUTLINED_FUNCTION_9_82();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C0257804()
{
  sub_1C0304B04();
  sub_1C0256BE0();
  return sub_1C0304B40();
}

uint64_t DateTime.DateTimeRange.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DateTime.DateTimeRange.init(from:)(a1);
  return v2;
}

uint64_t DateTime.DateTimeRange.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1F38);
  MEMORY[0x1E0C80A78](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0257D54();
  sub_1C0304B88();
  if (v2)
  {
    type metadata accessor for DateTime.DateTimeRange();
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for DateTime();
    OUTLINED_FUNCTION_29_24(&qword_1EF5BA1D0, v5, (uint64_t (*)(uint64_t))type metadata accessor for DateTime, (uint64_t)&protocol conformance descriptor for DateTime);
    OUTLINED_FUNCTION_3_122();
    *(_QWORD *)(v1 + 16) = v8;
    OUTLINED_FUNCTION_3_122();
    *(_QWORD *)(v1 + 24) = v8;
    sub_1C03048A0();
    *(_QWORD *)(v1 + 32) = v8;
    type metadata accessor for DateTime.Interval();
    OUTLINED_FUNCTION_29_24(&qword_1EF5C1F40, v6, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.Interval, (uint64_t)&protocol conformance descriptor for DateTime.Interval);
    OUTLINED_FUNCTION_3_122();
    *(_QWORD *)(v1 + 40) = v8;
    OUTLINED_FUNCTION_3_122();
    *(_QWORD *)(v1 + 48) = v8;
    sub_1C00EB8D8();
    OUTLINED_FUNCTION_12_36();
    *(_BYTE *)(v1 + 56) = v8;
    sub_1C00E2EFC();
    OUTLINED_FUNCTION_12_36();
    OUTLINED_FUNCTION_4_98();
    *(_BYTE *)(v1 + 57) = v8;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return v1;
}

uint64_t sub_1C0257BD0()
{
  return sub_1C0257804();
}

uint64_t sub_1C0257BF0()
{
  return sub_1C0256BE0();
}

uint64_t sub_1C0257C10()
{
  sub_1C0304B04();
  sub_1C0256BE0();
  return sub_1C0304B40();
}

BOOL sub_1C0257C4C(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.DateTimeRange.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C0257C6C(uint64_t *a1, uint64_t *a2)
{
  char v2;

  static DateTime.DateTimeRange.< infix(_:_:)(*a1, *a2);
  return v2 & 1;
}

uint64_t sub_1C0257C8C(uint64_t *a1, uint64_t *a2)
{
  char v2;

  static DateTime.DateTimeRange.<= infix(_:_:)(*a1, *a2);
  return v2 & 1;
}

uint64_t sub_1C0257CAC(uint64_t *a1, uint64_t *a2)
{
  char v2;

  static DateTime.DateTimeRange.>= infix(_:_:)(*a1, *a2);
  return v2 & 1;
}

uint64_t sub_1C0257CCC(uint64_t *a1, uint64_t *a2)
{
  char v2;

  static DateTime.DateTimeRange.> infix(_:_:)(*a1, *a2);
  return v2 & 1;
}

uint64_t sub_1C0257CEC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = DateTime.DateTimeRange.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1C0257D14(_QWORD *a1)
{
  return sub_1C02575EC(a1);
}

uint64_t sub_1C0257D34()
{
  return sub_1C0257068();
}

unint64_t sub_1C0257D54()
{
  unint64_t result;

  result = qword_1EF5C1F28;
  if (!qword_1EF5C1F28)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0320E54, &_s13DateTimeRangeC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C1F28);
  }
  return result;
}

void sub_1C0257D90(uint64_t a1, uint64_t a2)
{
  sub_1C00C43F4(&qword_1EF5C1F48, a2, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.DateTimeRange, (uint64_t)&protocol conformance descriptor for DateTime.DateTimeRange);
}

uint64_t method lookup function for DateTime.DateTimeRange()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(withDateTime:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(withStartDateTime:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(withStartDateTime:endDateTime:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(withStartDateTime:endDateTime:interval:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(withStartDateTime:duration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(withDefinedValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(withDefinedValue:qualifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(withInterval:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(withDuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(at:start:end:duration:interval:definedValue:qualifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DateTime.DateTimeRange.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t _s13DateTimeRangeC10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1C0257EBC + 4 * byte_1C0320BE4[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1C0257EF0 + 4 * byte_1C0320BDF[v4]))();
}

uint64_t sub_1C0257EF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0257EF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0257F00);
  return result;
}

uint64_t sub_1C0257F0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0257F14);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1C0257F18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0257F20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13DateTimeRangeC10CodingKeysOMa()
{
  return &_s13DateTimeRangeC10CodingKeysON;
}

unint64_t sub_1C0257F40()
{
  unint64_t result;

  result = qword_1EF5C2098;
  if (!qword_1EF5C2098)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0320E2C, &_s13DateTimeRangeC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C2098);
  }
  return result;
}

unint64_t sub_1C0257F80()
{
  unint64_t result;

  result = qword_1EF5C20A0;
  if (!qword_1EF5C20A0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0320D9C, &_s13DateTimeRangeC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C20A0);
  }
  return result;
}

unint64_t sub_1C0257FC0()
{
  unint64_t result;

  result = qword_1EF5C20A8;
  if (!qword_1EF5C20A8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0320DC4, &_s13DateTimeRangeC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C20A8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_117()
{
  return sub_1C0304954();
}

uint64_t OUTLINED_FUNCTION_2_118()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_3_122()
{
  return sub_1C03048A0();
}

uint64_t OUTLINED_FUNCTION_4_98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_5_88()
{
  uint64_t v0;

  *(_WORD *)(v0 + 56) = 5158;
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_95()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 352) + 8))(*(_QWORD *)(v0 - 312), *(_QWORD *)(v0 - 304));
}

uint64_t OUTLINED_FUNCTION_9_82()
{
  return sub_1C0304954();
}

uint64_t OUTLINED_FUNCTION_10_71@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD, uint64_t);

  return v3(a1, *(unsigned int *)(a2 - 256), v2);
}

uint64_t OUTLINED_FUNCTION_11_74()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 - 608) + 104))(*(_QWORD *)(v0 - 616), *(unsigned int *)(v0 - 640), *(_QWORD *)(v0 - 600));
}

uint64_t OUTLINED_FUNCTION_17_56@<X0>(uint64_t (*a1)(_QWORD, _QWORD, _QWORD)@<X8>)
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 - 632), *(unsigned int *)(v1 - 636), *(_QWORD *)(v1 - 624));
}

uint64_t OUTLINED_FUNCTION_19_44@<X0>(uint64_t (*a1)(_QWORD, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(*(_QWORD *)(v1 - 256), v2);
}

uint64_t OUTLINED_FUNCTION_30_35(uint64_t result)
{
  *(_WORD *)(result + 56) = 5158;
  return result;
}

uint64_t OUTLINED_FUNCTION_32_33(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 280) = a1;
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_40_28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0075A10(a1, *(_QWORD *)(a2 - 256));
}

uint64_t OUTLINED_FUNCTION_41_23()
{
  return type metadata accessor for DateTime();
}

uint64_t OUTLINED_FUNCTION_43_25()
{
  return sub_1C0303EF8();
}

uint64_t OUTLINED_FUNCTION_45_24()
{
  uint64_t v0;

  return sub_1C02A4F30(v0);
}

uint64_t OUTLINED_FUNCTION_46_23(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1C003E6D8(a1, a2, (uint64_t *)(v2 - 248));
}

void OUTLINED_FUNCTION_48_22(uint64_t a1)
{
  uint64_t *v1;

  sub_1C003E978(a1, v1);
}

uint64_t OUTLINED_FUNCTION_56_21()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_60_8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD);
  uint64_t v2;

  return v1(a1, *(_QWORD *)(v2 - 360));
}

uint64_t OUTLINED_FUNCTION_67_8()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_68_11(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_73_13()
{
  return sub_1C00E2390();
}

BOOL OUTLINED_FUNCTION_74_8()
{
  uint64_t v0;
  uint64_t v1;

  return static DateTime.== infix(_:_:)(v0, v1);
}

uint64_t sub_1C02581BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  int *v4;
  int v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1C10();
    result = v8;
    v4 = (int *)(a1 + 40);
    do
    {
      v6 = *v4;
      v4 += 10;
      v5 = v6;
      v9 = result;
      v7 = *(_QWORD *)(result + 16);
      if (v7 >= *(_QWORD *)(result + 24) >> 1)
      {
        sub_1C00B1C10();
        result = v9;
      }
      *(_QWORD *)(result + 16) = v7 + 1;
      *(_DWORD *)(result + 4 * v7 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1C0258278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unsigned int *v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;

  v6 = v5;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1C00B20A8();
    v9 = v21;
    v12 = (unsigned int *)(a1 + 32);
    while (1)
    {
      v13 = *v12++;
      v19 = v13;
      sub_1C0259CB8(&v19, a2, a3, a4, a5, &v20);
      if (v6)
        break;
      v6 = 0;
      v14 = v20;
      v21 = v9;
      v15 = *(_QWORD *)(v9 + 16);
      if (v15 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_1C00B20A8();
        v9 = v21;
      }
      *(_QWORD *)(v9 + 16) = v15 + 1;
      *(_QWORD *)(v9 + 8 * v15 + 32) = v14;
      if (!--v8)
        goto LABEL_7;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t sub_1C02583C0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t i;
  unint64_t v11;
  BOOL v12;
  int64_t j;
  unint64_t v14;
  char v15;
  int64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float v28;
  float v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t result;
  _QWORD v43[5];
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t v52;
  unsigned int v53;
  _QWORD *v54;

  v6 = *(_QWORD *)(a2 + 56);
  v44 = a2 + 56;
  v45 = a4;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v6;
  v46 = (unint64_t)(v7 + 63) >> 6;
  v47 = a2;
  swift_bridgeObjectRetain();
  for (i = 0; ; i = v50)
  {
    v51 = a1;
    if (v9)
    {
      v49 = (v9 - 1) & v9;
      v50 = i;
      v11 = __clz(__rbit64(v9)) | (i << 6);
    }
    else
    {
      v12 = __OFADD__(i, 1);
      j = i + 1;
      if (v12)
        goto LABEL_43;
      if (j >= v46)
      {
LABEL_40:
        swift_release();
        swift_bridgeObjectRelease();
        return (uint64_t)a1;
      }
      v14 = *(_QWORD *)(v44 + 8 * j);
      if (!v14)
      {
        OUTLINED_FUNCTION_10_72();
        if (v15 == v12)
          goto LABEL_40;
        OUTLINED_FUNCTION_9_83();
        if (v14)
          goto LABEL_18;
        OUTLINED_FUNCTION_10_72();
        if (v15 == v12)
          goto LABEL_40;
        OUTLINED_FUNCTION_9_83();
        if (v14)
          goto LABEL_18;
        OUTLINED_FUNCTION_10_72();
        if (v15 == v12)
          goto LABEL_40;
        OUTLINED_FUNCTION_9_83();
        if (v14)
        {
LABEL_18:
          j = v16;
        }
        else
        {
          OUTLINED_FUNCTION_10_72();
          if (v15 == v12)
            goto LABEL_40;
          OUTLINED_FUNCTION_9_83();
          for (j = v41; !v14; ++v41)
          {
            j = v41 + 1;
            if (__OFADD__(v41, 1))
              goto LABEL_44;
            if (j >= v46)
              goto LABEL_40;
            v14 = *(_QWORD *)(v44 + 8 * j);
          }
        }
      }
      v49 = (v14 - 1) & v14;
      v50 = j;
      v11 = __clz(__rbit64(v14)) + (j << 6);
    }
    v17 = *(_DWORD *)(*(_QWORD *)(v47 + 48) + 4 * v11);
    v18 = sub_1C030226C();
    v19 = sub_1C0302284();
    sub_1C00C43F4(&qword_1EF5B8DE8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA4978], MEMORY[0x1E0DA4988]);
    v20 = sub_1C0303DB4();
    v21 = *(_QWORD *)(v18 + 16);
    v53 = v17;
    if (v21)
    {
      v22 = *(_QWORD *)(v19 - 8);
      v23 = v18 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
      v52 = *(_QWORD *)(v22 + 72);
      v48 = v18;
      v24 = swift_bridgeObjectRetain();
      v25 = v45;
      do
      {
        MEMORY[0x1E0C80A78](v24);
        v43[2] = v23;
        v43[3] = v25;
        swift_bridgeObjectRetain();
        sub_1C0270C3C((uint64_t (*)(uint64_t *))sub_1C025ADDC, (uint64_t)v43, a3);
        v27 = sub_1C023C0B0(v26, v17);
        v29 = v28;
        swift_isUniquelyReferenced_nonNull_native();
        v54 = (_QWORD *)v20;
        v30 = v27;
        v17 = v53;
        sub_1C00B5FB8(v30, v23, v29);
        v20 = (uint64_t)v54;
        v24 = swift_bridgeObjectRelease();
        v23 += v52;
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v31 = v51;
    swift_isUniquelyReferenced_nonNull_native();
    v54 = v31;
    v32 = sub_1C00B4124(v17);
    if (__OFADD__(v31[2], (v33 & 1) == 0))
      break;
    v34 = v32;
    v35 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C21A0);
    if ((sub_1C03047BC() & 1) != 0)
    {
      v36 = sub_1C00B4124(v53);
      if ((v35 & 1) != (v37 & 1))
        goto LABEL_45;
      v34 = v36;
    }
    a1 = v54;
    if ((v35 & 1) != 0)
    {
      v38 = v54[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v38 + 8 * v34) = v20;
    }
    else
    {
      v54[(v34 >> 6) + 8] |= 1 << v34;
      *(_DWORD *)(a1[6] + 4 * v34) = v53;
      *(_QWORD *)(a1[7] + 8 * v34) = v20;
      v39 = a1[2];
      v12 = __OFADD__(v39, 1);
      v40 = v39 + 1;
      if (v12)
        goto LABEL_42;
      a1[2] = v40;
    }
    swift_bridgeObjectRelease();
    v9 = v49;
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  result = sub_1C0304A68();
  __break(1u);
  return result;
}

uint64_t sub_1C02587A4()
{
  swift_bridgeObjectRetain();
  sub_1C0303FD0();
  swift_bridgeObjectRelease();
  return 0x2D6C65646F6DLL;
}

uint64_t sub_1C0258828(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  char *v30;
  id v31;
  uint64_t v32;
  id v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  id v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;

  v44 = a1;
  v42 = sub_1C0301B70();
  v50 = *(_QWORD *)(v42 - 8);
  v1 = MEMORY[0x1E0C80A78](v42);
  v41 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v38 - v3;
  v5 = type metadata accessor for Signpost();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_6_0();
  v9 = v8 - v7;
  v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E958]), sel_init);
  objc_msgSend(v40, sel_setComputeUnits_, 0);
  if (qword_1ED728440 != -1)
    swift_once();
  v10 = (void *)qword_1ED729668;
  v11 = v9 + *(int *)(v5 + 20);
  *(_QWORD *)v11 = "PER.Model.load";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v12 = v10;
  sub_1C0303B68();
  v39 = *(int *)(v5 + 24);
  *(_QWORD *)(v9 + v39) = v12;
  v13 = v12;
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C0305B60;
  v15 = sub_1C03046E4();
  v17 = v16;
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v14 + 32) = v15;
  *(_QWORD *)(v14 + 40) = v17;
  OUTLINED_FUNCTION_53_1();
  sub_1C0303B50();
  swift_bridgeObjectRelease();

  v18 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
  v19 = v44;
  v20 = v42;
  v18(v4, (uint64_t)v44, v42);
  sub_1C00447B0(0, (unint64_t *)&qword_1ED726F78);
  v21 = (uint64_t)v41;
  v18(v41, (uint64_t)v4, v20);
  v22 = v40;
  v23 = v43;
  v24 = sub_1C0105824(v21, v22);
  if (v23)
  {
    v25 = *(void (**)(char *, uint64_t))(v50 + 8);
    v25(v4, v20);

    v25(v19, v20);
    sub_1C003DD84(v9, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    type metadata accessor for ModelBasedLearning();
    v26 = v45;
    swift_deallocPartialClassInstance();
  }
  else
  {
    v27 = v24;
    v50 = *(_QWORD *)(v50 + 8);
    ((void (*)(char *, uint64_t))v50)(v4, v20);
    type metadata accessor for PervasiveEntityResolution();
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = v27;
    v26 = v45;
    *(_QWORD *)(v45 + 16) = v28;
    sub_1C03043D8();
    sub_1C0303B5C();
    v29 = objc_msgSend(v27, sel_modelDescription);
    v30 = v19;
    v31 = objc_msgSend(v29, sel_metadata);

    type metadata accessor for MLModelMetadataKey(0);
    sub_1C00C43F4((unint64_t *)&qword_1ED726F58, 255, (uint64_t (*)(uint64_t))type metadata accessor for MLModelMetadataKey, (uint64_t)&unk_1C03065D0);
    v32 = sub_1C0303D90();

    v33 = (id)*MEMORY[0x1E0C9E888];
    sub_1C00A9C68((uint64_t)v33, v32, &v48);

    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v50)(v30, v20);

    sub_1C003DD84(v9, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    if (v49)
    {
      v34 = swift_dynamicCast();
      v35 = v46;
      v36 = v47;
      if (!v34)
      {
        v35 = 0;
        v36 = 0;
      }
    }
    else
    {
      sub_1C0044B78((uint64_t)&v48, (uint64_t *)&unk_1ED727E70);
      v35 = 0;
      v36 = 0;
    }
    *(_QWORD *)(v26 + 24) = v35;
    *(_QWORD *)(v26 + 32) = v36;
  }
  return v26;
}

void sub_1C0258CA8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char v37;
  int EnumTagSinglePayload;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD008);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_6_0();
  v8 = (_QWORD *)(v7 - v6);
  v9 = type metadata accessor for LearnedDisambiguation();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v45 - v15;
  if (!a1)
  {
    __swift_storeEnumTagSinglePayload(a2, 1, 1, v14);
    v18 = type metadata accessor for LearningResult();
    OUTLINED_FUNCTION_5_89(v18);
    goto LABEL_4;
  }
  v46 = v2;
  v47 = v14;
  v17 = sub_1C025919C(a1, v2);
  v19 = v17;
  v20 = v47;
  if (!v17)
    goto LABEL_13;
  v45 = a2;
  v21 = sub_1C0259164((uint64_t)v17);
  if ((v21 & 0x100000000) != 0)
  {
    v32 = v19[2];
    swift_bridgeObjectRelease();
    a2 = v45;
    if (v32 < 2)
      goto LABEL_13;
    __swift_storeEnumTagSinglePayload(v45, 1, 1, v20);
    v34 = *(_QWORD *)(v46 + 24);
    v33 = *(_QWORD *)(v46 + 32);
    v35 = type metadata accessor for LearningResult();
    v36 = (_QWORD *)(a2 + *(int *)(v35 + 20));
    *v36 = v34;
    v36[1] = v33;
    *(_BYTE *)(a2 + *(int *)(v35 + 24)) = 1;
LABEL_4:
    swift_bridgeObjectRetain();
    return;
  }
  v22 = v21;
  v23 = swift_bridgeObjectRelease();
  v48 = a1;
  v24 = *(_QWORD *)(a1 + 16);
  if (v24)
  {
    v25 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v26 = *(_QWORD *)(v10 + 72);
    v27 = v24 - 1;
    v28 = a1 + v25 + v26 * (v24 - 1);
    v29 = -v26;
    while (1)
    {
      sub_1C0150CBC(v28, (uint64_t)v13);
      v30 = *(_DWORD *)&v13[*(int *)(v20 + 32)];
      sub_1C003DD84((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguation);
      if (v30 == v22)
        break;
      --v27;
      v28 += v29;
      if (v27 == -1)
      {
        v27 = 0;
        break;
      }
    }
  }
  else
  {
    v27 = 0;
  }
  MEMORY[0x1E0C80A78](v23);
  *(&v45 - 2) = (uint64_t)&v48;
  sub_1C025ACA8((_QWORD *(*)(_QWORD *__return_ptr, uint64_t *))sub_1C025AD78, v27, v37, v8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v20);
  a2 = v45;
  if (EnumTagSinglePayload != 1)
  {
    sub_1C0150C78((uint64_t)v8, (uint64_t)v16);
    sub_1C0150C78((uint64_t)v16, a2);
    v43 = OUTLINED_FUNCTION_3_123(a2, 0);
    v44 = (_QWORD *)(a2 + *(int *)(v43 + 20));
    *v44 = &v45;
    v44[1] = v20;
    *(_BYTE *)(a2 + *(int *)(v43 + 24)) = 2;
    goto LABEL_14;
  }
  sub_1C0044B78((uint64_t)v8, &qword_1EF5BD008);
  if (qword_1EF5B7F30 != -1)
    swift_once();
  v39 = sub_1C0303B98();
  __swift_project_value_buffer(v39, (uint64_t)qword_1EF5FC710);
  v40 = sub_1C0303B80();
  v41 = sub_1C03042F4();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    *(_WORD *)v42 = 0;
    _os_log_impl(&dword_1C0039000, v40, v41, "The predicted selection was not found in history.", v42, 2u);
    OUTLINED_FUNCTION_5();
  }

LABEL_13:
  v31 = OUTLINED_FUNCTION_3_123(a2, 1);
  OUTLINED_FUNCTION_5_89(v31);
LABEL_14:
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1C0259164(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 == 1)
    v2 = *(unsigned int *)(a1 + 32);
  else
    v2 = 0;
  return v2 | ((unint64_t)(v1 != 1) << 32);
}

id sub_1C025919C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  id result;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  void *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  void *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[3];
  unint64_t v84;
  __int128 v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  _BYTE v96[48];
  _OWORD v97[2];
  uint64_t v98;
  char v99;
  _OWORD v100[2];
  uint64_t v101;

  v93 = type metadata accessor for Signpost();
  v5 = MEMORY[0x1E0C80A78](v93);
  v7 = (char *)v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v83 - v8;
  v10 = sub_1C0301CFC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD008);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1 || !*(_QWORD *)(a1 + 16))
  {
    if (qword_1EF5B7F30 != -1)
      goto LABEL_46;
    goto LABEL_8;
  }
  v91 = a2;
  sub_1C00C5998(a1, (uint64_t)v16);
  v17 = type metadata accessor for LearnedDisambiguation();
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17) == 1)
  {
    sub_1C0044B78((uint64_t)v16, &qword_1EF5BD008);
    if (qword_1EF5B7F30 == -1)
      goto LABEL_5;
    goto LABEL_48;
  }
  v26 = *(_QWORD *)&v16[*(int *)(v17 + 28)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C003DD84((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for LearnedDisambiguation);
  sub_1C0301CF0();
  v27 = sub_1C01DDCD4();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1C025A344(v27, (uint64_t)v96);
  sub_1C025AD94((uint64_t)v96, (uint64_t)v97);
  if ((v99 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  v88 = v26;
  v87 = v7;
  v89 = v2;
  v100[0] = v97[0];
  v100[1] = v97[1];
  v101 = v98;
  if (qword_1ED728440 != -1)
    swift_once();
  v28 = (void *)qword_1ED729668;
  v29 = v93;
  v30 = &v9[*(int *)(v93 + 20)];
  *(_QWORD *)v30 = "PER.Model.inputCreation";
  *((_QWORD *)v30 + 1) = 23;
  v92 = v9;
  v30[16] = 2;
  v31 = v28;
  sub_1C0303B68();
  *(_QWORD *)&v92[*(int *)(v29 + 24)] = v31;
  v32 = v31;
  sub_1C03043E4();
  v86 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v33 = swift_allocObject();
  v85 = xmmword_1C0305B60;
  *(_OWORD *)(v33 + 16) = xmmword_1C0305B60;
  v34 = sub_1C03046E4();
  v36 = v35;
  *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
  v84 = sub_1C00A6A70();
  *(_QWORD *)(v33 + 64) = v84;
  *(_QWORD *)(v33 + 32) = v34;
  *(_QWORD *)(v33 + 40) = v36;
  v37 = (uint64_t)v92;
  sub_1C0303B50();
  swift_bridgeObjectRelease();
  v83[2] = v32;

  v38 = sub_1C023B170(a1, v27);
  v40 = v39;
  v42 = v41;
  v43 = swift_bridgeObjectRetain();
  v44 = v89;
  v45 = sub_1C02581BC(v43);
  v46 = v44;
  v47 = sub_1C01AB168(v45);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF938);
  v48 = sub_1C0303DB4();
  swift_bridgeObjectRetain();
  v49 = (_QWORD *)v48;
  v50 = v46;
  v51 = sub_1C02583C0(v49, v47, v38, (uint64_t)v100);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v52 = sub_1C0258278(v88, v38, v40, v42, v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v52 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v59 = sub_1C0303B98();
    __swift_project_value_buffer(v59, (uint64_t)qword_1EF5FC710);
    v60 = sub_1C0303B80();
    v61 = sub_1C03042F4();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v62 = 0;
      _os_log_impl(&dword_1C0039000, v60, v61, "Cannot create input from empty data.", v62, 2u);
      MEMORY[0x1C3B98378](v62, -1, -1);
    }

    sub_1C003DD84(v37, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    return 0;
  }
  v54 = v52 + 32;
  v53 = *(_QWORD *)(v52 + 32);
  if (v53 >> 62)
  {
    swift_bridgeObjectRetain();
    v55 = sub_1C03047F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v55 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727640);
  v56 = swift_allocObject();
  v94 = xmmword_1C030CE50;
  *(_OWORD *)(v56 + 16) = xmmword_1C030CE50;
  *(_QWORD *)(v56 + 32) = sub_1C030427C();
  v57 = *(_QWORD *)(v52 + 16);
  *(_QWORD *)(v56 + 40) = sub_1C030427C();
  v95 = v56;
  sub_1C0304150();
  v24 = v95;
  v58 = objc_allocWithZone(MEMORY[0x1E0C9E970]);
  result = sub_1C0122AE4(v24, 65600);
  v89 = v50;
  if (v50)
  {
    sub_1C003DD84(v37, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id)v24;
  }
  v83[1] = v52;
  if (v55 < 0)
  {
    __break(1u);
    return result;
  }
  v63 = result;
  if (!v55)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    type metadata accessor for PervasiveEntityResolutionInput();
    v70 = swift_allocObject();
    *(_QWORD *)(v70 + 16) = v63;
    *(_QWORD *)&v94 = v63;
    sub_1C03043D8();
    sub_1C0303B5C();
    v71 = (void *)qword_1ED729668;
    v72 = v93;
    v73 = (uint64_t)v87;
    v74 = &v87[*(int *)(v93 + 20)];
    *(_QWORD *)v74 = "PER.Model.prediction";
    *((_QWORD *)v74 + 1) = 20;
    v74[16] = 2;
    v75 = v71;
    sub_1C0303B68();
    *(_QWORD *)(v73 + *(int *)(v72 + 24)) = v75;
    v76 = v75;
    sub_1C03043E4();
    v77 = v37;
    v78 = swift_allocObject();
    *(_OWORD *)(v78 + 16) = v85;
    v79 = sub_1C03046E4();
    v80 = v84;
    *(_QWORD *)(v78 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v78 + 64) = v80;
    *(_QWORD *)(v78 + 32) = v79;
    *(_QWORD *)(v78 + 40) = v81;
    sub_1C0303B50();
    swift_bridgeObjectRelease();

    v82 = v89;
    sub_1C03005A4(v70);
    v89 = v82;
    if (v82)
    {

      swift_bridgeObjectRelease();
      swift_release();
      v24 = (uint64_t)type metadata accessor for Signpost;
    }
    else
    {
      sub_1C03043D8();
      sub_1C0303B5C();
      v24 = sub_1C025A054(v88);

      swift_release();
    }
    sub_1C003DD84(v73, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    sub_1C003DD84(v77, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    return (id)v24;
  }
  v64 = 0;
  v90 = v55;
  while (1)
  {
    if (v64 == v55)
    {
      __break(1u);
LABEL_48:
      swift_once();
LABEL_5:
      v18 = sub_1C0303B98();
      __swift_project_value_buffer(v18, (uint64_t)qword_1EF5FC710);
      v19 = sub_1C0303B80();
      v20 = sub_1C03042E8();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        v22 = "No first historical record.";
        goto LABEL_10;
      }
      goto LABEL_11;
    }
    if (v57)
      break;
LABEL_40:
    ++v64;
    v55 = v90;
    v37 = (uint64_t)v92;
    if (v64 == v90)
      goto LABEL_41;
  }
  v65 = 0;
  while (1)
  {
    v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = v94;
    *(_QWORD *)(v66 + 32) = sub_1C030427C();
    *(_QWORD *)(v66 + 40) = sub_1C030427C();
    v95 = v66;
    sub_1C0304150();
    v67 = *(_QWORD *)(v54 + 8 * v65);
    if ((v67 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v68 = (id)MEMORY[0x1C3B975EC](v64, v67);
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    if (v64 >= *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10))
      break;
    v68 = *(id *)(v67 + 8 * v64 + 32);
LABEL_37:
    ++v65;
    sub_1C00447B0(0, (unint64_t *)&qword_1ED727C50);
    v69 = (void *)sub_1C0304120();
    swift_bridgeObjectRelease();
    objc_msgSend(v63, sel_setObject_forKeyedSubscript_, v68, v69);

    if (v57 == v65)
      goto LABEL_40;
  }
  __break(1u);
LABEL_46:
  swift_once();
LABEL_8:
  v23 = sub_1C0303B98();
  __swift_project_value_buffer(v23, (uint64_t)qword_1EF5FC710);
  v19 = sub_1C0303B80();
  v20 = sub_1C03042E8();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    v22 = "No historical records to predict from.";
LABEL_10:
    _os_log_impl(&dword_1C0039000, v19, v20, v22, v21, 2u);
    MEMORY[0x1C3B98378](v21, -1, -1);
  }
LABEL_11:

  return 0;
}

uint64_t sub_1C0259CB8@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *);
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  float v33;
  uint64_t v34;
  float v35;
  uint64_t v36;
  float v37;
  uint64_t result;
  uint64_t v39;
  unsigned int v40;
  unsigned int v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t *v47;
  uint64_t v48;

  v47 = a6;
  v43 = a5;
  v10 = sub_1C0302284();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v46 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v45 = (char *)&v39 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v44 = (char *)&v39 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v42 = (char *)&v39 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v39 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v39 - v23;
  v25 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727640);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1C0320EB0;
  *(_QWORD *)(v26 + 32) = sub_1C0304B70();
  sub_1C023B38C(v25, a2);
  *(_QWORD *)(v26 + 40) = sub_1C0304228();
  sub_1C023B4B8(v25, a2, a3, a4);
  *(_QWORD *)(v26 + 48) = sub_1C030427C();
  sub_1C023B508(v25, a2, a3, a4);
  *(_QWORD *)(v26 + 56) = sub_1C030427C();
  sub_1C023B54C(v25, a2);
  *(_QWORD *)(v26 + 64) = sub_1C030427C();
  v41 = *MEMORY[0x1E0DA4950];
  v27 = *(void (**)(char *))(v11 + 104);
  v27(v24);
  v28 = v43;
  sub_1C023B5FC(v25, (uint64_t)v24, v43);
  v29 = *(void (**)(char *, uint64_t))(v11 + 8);
  v29(v24, v10);
  *(_QWORD *)(v26 + 72) = sub_1C0304228();
  v40 = *MEMORY[0x1E0DA4960];
  v27(v22);
  sub_1C023B5FC(v25, (uint64_t)v22, v28);
  v29(v22, v10);
  *(_QWORD *)(v26 + 80) = sub_1C0304228();
  v30 = *MEMORY[0x1E0DA4958];
  v31 = (uint64_t)v42;
  ((void (*)(char *, uint64_t, uint64_t))v27)(v42, v30, v10);
  sub_1C023B5FC(v25, v31, v28);
  v29((char *)v31, v10);
  *(_QWORD *)(v26 + 88) = sub_1C0304228();
  v32 = (uint64_t)v44;
  ((void (*)(char *, _QWORD, uint64_t))v27)(v44, v41, v10);
  v33 = sub_1C023B5FC(v25, v32, v28);
  ((void (*)(uint64_t, uint64_t, float))v29)(v32, v10, v33);
  *(_QWORD *)(v26 + 96) = sub_1C030427C();
  v34 = (uint64_t)v45;
  ((void (*)(char *, _QWORD, uint64_t))v27)(v45, v40, v10);
  v35 = sub_1C023B5FC(v25, v34, v28);
  ((void (*)(uint64_t, uint64_t, float))v29)(v34, v10, v35);
  *(_QWORD *)(v26 + 104) = sub_1C030427C();
  v36 = (uint64_t)v46;
  ((void (*)(char *, uint64_t, uint64_t))v27)(v46, v30, v10);
  v37 = sub_1C023B5FC(v25, v36, v28);
  ((void (*)(uint64_t, uint64_t, float))v29)(v36, v10, v37);
  *(_QWORD *)(v26 + 112) = sub_1C030427C();
  v48 = v26;
  result = sub_1C0304150();
  *v47 = v48;
  return result;
}

uint64_t sub_1C025A054(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  unint64_t v4;
  unint64_t v5;
  char **v6;
  void *v7;
  void *v8;
  id v9;
  char v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;

  sub_1C0300314();
  v3 = v2;
  v4 = (unint64_t)objc_msgSend(v2, sel_count);

  if ((v4 & 0x8000000000000000) != 0)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    swift_once();
    goto LABEL_17;
  }
  if (v4)
  {
    sub_1C00447B0(0, (unint64_t *)&qword_1ED728130);
    v5 = 0;
    v1 = MEMORY[0x1E0DEE9D8];
    v6 = &selRef_setTimestampSec_;
    while (1)
    {
      sub_1C0300314();
      v8 = v7;
      v9 = objc_msgSend(v7, v6[29], v5);

      if (qword_1EF5B8008 != -1)
        swift_once();
      v10 = sub_1C030445C();

      if ((v10 & 1) != 0)
      {
        if (v5 >= *(_QWORD *)(a1 + 16))
        {
          __break(1u);
          goto LABEL_22;
        }
        v11 = *(_DWORD *)(a1 + 32 + 4 * v5);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C005023C();
          v1 = v13;
        }
        v12 = *(_QWORD *)(v1 + 16);
        if (v12 >= *(_QWORD *)(v1 + 24) >> 1)
        {
          sub_1C005023C();
          v1 = v14;
        }
        *(_QWORD *)(v1 + 16) = v12 + 1;
        *(_DWORD *)(v1 + 4 * v12 + 32) = v11;
        v6 = &selRef_setTimestampSec_;
      }
      if (v4 == ++v5)
        goto LABEL_16;
    }
  }
  v1 = MEMORY[0x1E0DEE9D8];
LABEL_16:
  swift_bridgeObjectRelease();
  v15 = qword_1EF5B7F30;
  swift_bridgeObjectRetain();
  if (v15 != -1)
    goto LABEL_23;
LABEL_17:
  v16 = sub_1C0303B98();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EF5FC710);
  swift_bridgeObjectRetain();
  v17 = sub_1C0303B80();
  v18 = sub_1C03042E8();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v19 = 134217984;
    swift_bridgeObjectRelease();
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v17, v18, "ML model predicted choice count=%ld", v19, 0xCu);
    MEMORY[0x1C3B98378](v19, -1, -1);

    swift_release();
  }
  else
  {

    swift_release();
    swift_bridgeObjectRelease_n();
  }
  return v1;
}

void sub_1C025A344(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  __int128 v20;
  __int128 v21;
  _QWORD v23[4];

  v2 = type metadata accessor for Signpost();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_6_0();
  v6 = v5 - v4;
  v7 = OUTLINED_FUNCTION_16_0();
  *(_OWORD *)(v7 + 16) = 0u;
  *(_OWORD *)(v7 + 32) = 0u;
  *(_QWORD *)(v7 + 48) = 0;
  *(_BYTE *)(v7 + 56) = 1;
  if (qword_1ED728440 != -1)
    swift_once();
  v8 = (void *)qword_1ED729668;
  v9 = v6 + *(int *)(v2 + 20);
  *(_QWORD *)v9 = "PER.Model.locationData";
  *(_QWORD *)(v9 + 8) = 22;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = v8;
  sub_1C0303B68();
  *(_QWORD *)(v6 + *(int *)(v2 + 24)) = v10;
  v11 = v10;
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v12 = OUTLINED_FUNCTION_16_0();
  *(_OWORD *)(v12 + 16) = xmmword_1C0305B60;
  v13 = sub_1C03046E4();
  v15 = v14;
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v12 + 32) = v13;
  *(_QWORD *)(v12 + 40) = v15;
  OUTLINED_FUNCTION_53_1();
  sub_1C0303B50();
  swift_bridgeObjectRelease();

  sub_1C03021E8();
  sub_1C03021DC();
  MEMORY[0x1C3B95198]();
  sub_1C03021D0();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v23, v23[3]);
  sub_1C0302230();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
  v16 = OUTLINED_FUNCTION_16_0();
  *(_QWORD *)(v16 + 16) = v7;
  *(_QWORD *)(v16 + 24) = a1;
  swift_retain();
  sub_1C03020B0();
  swift_release();
  sub_1C03043D8();
  sub_1C0303B5C();
  swift_release();
  sub_1C003DD84(v6, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  swift_beginAccess();
  v20 = *(_OWORD *)(v7 + 32);
  v21 = *(_OWORD *)(v7 + 16);
  v17 = *(_QWORD *)(v7 + 48);
  v18 = *(_BYTE *)(v7 + 56);
  swift_release();
  *(_OWORD *)a2 = v21;
  *(_OWORD *)(a2 + 16) = v20;
  *(_QWORD *)(a2 + 32) = v17;
  *(_BYTE *)(a2 + 40) = v18;
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C025A610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(uint64_t, char *, uint64_t);
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void (*v29)(uint64_t, uint64_t);
  uint8_t *v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint8_t *v36;
  char *v37;
  __int128 v38;
  uint64_t v39;
  unsigned int v40;
  __int128 v41;
  uint64_t v42;

  v37 = (char *)a3;
  v5 = sub_1C030223C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  *(_QWORD *)&v38 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v36 - v9;
  v11 = sub_1C03020A4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA3E8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C025AAC0(a1, (uint64_t)v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v17, v5);
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v18 = sub_1C0303B98();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EF5FC710);
    v19 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 16);
    v20 = (char *)v38;
    v19(v38, v10, v5);
    v21 = sub_1C0303B80();
    v22 = sub_1C03042F4();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v37 = v10;
      v24 = (uint8_t *)v23;
      v25 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v24 = 138412290;
      v36 = v24 + 4;
      sub_1C00C43F4((unint64_t *)&qword_1EF5BA3F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA48F0], MEMORY[0x1E0DA4900]);
      swift_allocError();
      v19(v26, v20, v5);
      v27 = _swift_stdlib_bridgeErrorToNSError();
      v39 = v27;
      sub_1C03044B0();
      v28 = v25;
      *v25 = v27;
      v29 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v29((uint64_t)v20, v5);
      _os_log_impl(&dword_1C0039000, v21, v22, "Problem gathering current location: %@", v24, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727620);
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v28, -1, -1);
      v30 = v24;
      v10 = v37;
      MEMORY[0x1C3B98378](v30, -1, -1);

    }
    else
    {

      v29 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v29((uint64_t)v20, v5);
    }
    return ((uint64_t (*)(char *, uint64_t))v29)(v10, v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v17, v11);
    v32 = sub_1C0302098();
    sub_1C023B9E8(v32, (uint64_t)v37, &v39);
    v33 = v39;
    v34 = v40;
    v38 = v41;
    v35 = v42;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    result = swift_beginAccess();
    *(_QWORD *)(a2 + 16) = v33;
    *(_QWORD *)(a2 + 24) = v34;
    *(_OWORD *)(a2 + 32) = v38;
    *(_QWORD *)(a2 + 48) = v35;
    *(_BYTE *)(a2 + 56) = 0;
  }
  return result;
}

uint64_t sub_1C025A9A4()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C025A9C8()
{
  sub_1C025A9A4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ModelBasedLearning()
{
  return objc_opt_self();
}

void sub_1C025AA08(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0258CA8(a1, a2);
}

uint64_t sub_1C025AA28()
{
  return sub_1C02587A4();
}

void sub_1C025AA48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_1C00C43F4(&qword_1EF5C2190, a2, (uint64_t (*)(uint64_t))type metadata accessor for ModelBasedLearning, (uint64_t)&unk_1C0320EE4);
  *(_QWORD *)(a1 + 8) = v3;
}

uint64_t sub_1C025AA84()
{
  return swift_deallocObject();
}

uint64_t sub_1C025AA94()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C025AAB8(uint64_t a1)
{
  uint64_t v1;

  return sub_1C025A610(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C025AAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA3E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C025AB08()
{
  uint64_t result;

  sub_1C00447B0(0, (unint64_t *)&qword_1ED727C50);
  result = sub_1C0304444();
  qword_1EF5C20C0 = result;
  return result;
}

id sub_1C025AB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C025AB68(a1, a2, a3, (void (*)(uint64_t, BOOL, uint64_t))sub_1C02CFE78);
}

id sub_1C025AB68(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, BOOL, uint64_t))
{
  unint64_t v6;

  v6 = a2 & 0xC000000000000001;
  a4(a1, (a2 & 0xC000000000000001) == 0, a2);
  if (v6)
    return (id)MEMORY[0x1C3B975EC](a1, a2);
  else
    return *(id *)(a2 + 8 * a1 + 32);
}

unint64_t sub_1C025ABC8@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4;
  uint64_t v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v4 = result;
    if (*(_QWORD *)(a2 + 16) > result)
    {
      v6 = type metadata accessor for LearnedDisambiguation();
      return sub_1C0150CBC(a2+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v4, a3);
    }
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C025AC40(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C025AC54(a1, a2, a3, a4);
}

_QWORD *sub_1C025AC54(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;

  if ((a4 & 1) != 0)
    return 0;
  v6 = a3;
  result = a1(&v7, &v6);
  if (!v4)
    return (_QWORD *)v7;
  return result;
}

_QWORD *sub_1C025ACA8@<X0>(_QWORD *(*a1)(_QWORD *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X2>, char a3@<W3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if ((a3 & 1) != 0)
  {
    v7 = type metadata accessor for LearnedDisambiguation();
    return (_QWORD *)__swift_storeEnumTagSinglePayload((uint64_t)a4, 1, 1, v7);
  }
  else
  {
    v9 = a2;
    result = a1(a4, &v9);
    if (!v4)
    {
      v8 = type metadata accessor for LearnedDisambiguation();
      return (_QWORD *)__swift_storeEnumTagSinglePayload((uint64_t)a4, 0, 1, v8);
    }
  }
  return result;
}

unint64_t sub_1C025AD44@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C025ABC8(*a1, *a2, a3);
}

unint64_t sub_1C025AD78@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1C025AD44(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_1C025AD94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2198);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_1C025ADDC()
{
  return sub_1C023C054();
}

uint64_t OUTLINED_FUNCTION_3_123(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
  return type metadata accessor for LearningResult();
}

uint64_t OUTLINED_FUNCTION_5_89(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + *(int *)(result + 20));
  *v4 = v1;
  v4[1] = v2;
  *(_BYTE *)(v3 + *(int *)(result + 24)) = 0;
  return result;
}

uint64_t DateTime.Date.DayOfWeek.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t DateTime.Date.DayOfWeek.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 7;
  if (result < 7)
    v2 = result;
  *a2 = v2;
  return result;
}

unint64_t sub_1C025AE6C()
{
  unint64_t result;

  result = qword_1EF5C21A8;
  if (!qword_1EF5C21A8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.DayOfWeek, &type metadata for DateTime.Date.DayOfWeek);
    atomic_store(result, (unint64_t *)&qword_1EF5C21A8);
  }
  return result;
}

unint64_t sub_1C025AEA8@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return DateTime.Date.DayOfWeek.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C025AEB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DateTime.Date.DayOfWeek.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C025AED4()
{
  sub_1C025B048();
  return sub_1C03040FC();
}

uint64_t sub_1C025AF30()
{
  sub_1C025B048();
  return sub_1C03040D8();
}

uint64_t _s14descr1E79A40D1V9DayOfWeekOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1C025AFC8 + 4 * byte_1C0320F2D[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1C025AFFC + 4 * byte_1C0320F28[v4]))();
}

uint64_t sub_1C025AFFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C025B004(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C025B00CLL);
  return result;
}

uint64_t sub_1C025B018(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C025B020);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1C025B024(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C025B02C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DateTime.Date.DayOfWeek()
{
  return &type metadata for DateTime.Date.DayOfWeek;
}

unint64_t sub_1C025B048()
{
  unint64_t result;

  result = qword_1EF5C21B0;
  if (!qword_1EF5C21B0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.DayOfWeek, &type metadata for DateTime.Date.DayOfWeek);
    atomic_store(result, (unint64_t *)&qword_1EF5C21B0);
  }
  return result;
}

SiriInference::Radius::Unit_optional __swiftcall Radius.Unit.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  unint64_t v2;
  char *v3;
  char v4;
  SiriInference::Radius::Unit_optional result;

  v3 = v1;
  sub_1C030484C();
  OUTLINED_FUNCTION_6_2();
  v4 = 4;
  if (v2 < 4)
    v4 = v2;
  *v3 = v4;
  OUTLINED_FUNCTION_37_0();
  return result;
}

char *Radius.init(radius:unit:prefix:suffix:)@<X0>(char *result@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  char v5;
  char v6;
  char v7;

  v5 = *result;
  v6 = *a2;
  v7 = *a3;
  *(double *)a4 = a5;
  *(_BYTE *)(a4 + 8) = v5;
  *(_BYTE *)(a4 + 9) = v6;
  *(_BYTE *)(a4 + 10) = v7;
  return result;
}

uint64_t Radius.Unit.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C025B118 + 4 * byte_1C0321050[*v0]))(0x73656C696DLL, 0xE500000000000000);
}

uint64_t sub_1C025B118()
{
  return 0x73726574656DLL;
}

uint64_t sub_1C025B12C()
{
  return 0x6574656D6F6C696BLL;
}

uint64_t sub_1C025B148()
{
  return 0x6C6163697475616ELL;
}

void sub_1C025B16C(char *a1)
{
  sub_1C025C688(*a1);
}

void sub_1C025B178()
{
  unsigned __int8 *v0;

  sub_1C00CEC4C(*v0);
}

void sub_1C025B180(uint64_t a1)
{
  char *v1;

  sub_1C00C1454(a1, *v1);
}

void sub_1C025B188(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EB4FC(a1, *v1);
}

SiriInference::Radius::Unit_optional sub_1C025B190(Swift::String *a1)
{
  return Radius.Unit.init(rawValue:)(*a1);
}

uint64_t sub_1C025B19C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Radius.Unit.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C025B1C0()
{
  sub_1C025C08C();
  return sub_1C03040F0();
}

uint64_t sub_1C025B21C()
{
  sub_1C025C08C();
  return sub_1C03040CC();
}

void Radius.Prefix.init(rawValue:)(BOOL *a1@<X8>)
{
  sub_1C025B35C(a1);
}

void sub_1C025B284(BOOL *a1@<X8>)
{
  Radius.Prefix.init(rawValue:)(a1);
}

void sub_1C025B290(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6968746977;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1C025B2A8()
{
  sub_1C025C050();
  return sub_1C03040F0();
}

uint64_t sub_1C025B304()
{
  sub_1C025C050();
  return sub_1C03040CC();
}

void Radius.Suffix.init(rawValue:)(BOOL *a1@<X8>)
{
  sub_1C025B35C(a1);
}

void sub_1C025B35C(BOOL *a1@<X8>)
{
  uint64_t v1;

  sub_1C030484C();
  OUTLINED_FUNCTION_6_2();
  *a1 = v1 != 0;
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025B3A0(BOOL *a1@<X8>)
{
  Radius.Suffix.init(rawValue:)(a1);
}

uint64_t sub_1C025B3AC()
{
  sub_1C025C014();
  return sub_1C03040F0();
}

uint64_t sub_1C025B408()
{
  sub_1C025C014();
  return sub_1C03040CC();
}

double Radius.radius.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void Radius.unit.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_8_20(a1);
}

void Radius.prefix.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_8_20(a1);
}

void Radius.suffix.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_8_20(a1);
}

uint64_t static Radius.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;
  int v3;
  int v4;
  unsigned int v5;
  char v6;

  if (*(double *)a1 != *(double *)a2)
    return 0;
  v2 = *(_BYTE *)(a1 + 9);
  v3 = *(unsigned __int8 *)(a1 + 10);
  v4 = *(unsigned __int8 *)(a2 + 9);
  v5 = *(unsigned __int8 *)(a2 + 10);
  sub_1C025C688(*(_BYTE *)(a1 + 8));
  if ((v6 & 1) == 0)
    return 0;
  if ((v2 & 1) != 0)
  {
    if (((v4 ^ 1 | v3) & 1) != 0)
      return v4 & v5;
  }
  else if (((v4 | v3) & 1) != 0)
  {
    return v5 & ~v4;
  }
  return v5 ^ 1;
}

uint64_t sub_1C025B4F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x737569646172 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1953066613 && a2 == 0xE400000000000000;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x786966657270 && a2 == 0xE600000000000000;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x786966667573 && a2 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1C0304A08();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1C025B684(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C025B6B4 + 4 * byte_1C0321054[a1]))(0x737569646172, 0xE600000000000000);
}

uint64_t sub_1C025B6B4()
{
  return 1953066613;
}

uint64_t sub_1C025B6C4()
{
  return 0x786966657270;
}

uint64_t sub_1C025B6D4()
{
  return 0x786966667573;
}

uint64_t sub_1C025B6E4()
{
  unsigned __int8 *v0;

  return sub_1C025B684(*v0);
}

uint64_t sub_1C025B6EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C025B4F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C025B710()
{
  sub_1C025BAC8();
  return sub_1C0304BAC();
}

uint64_t sub_1C025B738()
{
  sub_1C025BAC8();
  return sub_1C0304BB8();
}

void Radius.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  unsigned __int8 v9;
  char v10;
  int v11;
  int v12;
  char v13;
  unsigned __int8 v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C21B8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[8];
  v11 = v1[9];
  v12 = v8;
  v9 = v1[10];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C025BAC8();
  sub_1C0304BA0();
  v19 = 0;
  sub_1C0304978();
  if (!v2)
  {
    v10 = v11;
    v18 = v12;
    v17 = 1;
    sub_1C025BB04();
    sub_1C030499C();
    v16 = v10;
    v15 = 2;
    sub_1C025BB40();
    OUTLINED_FUNCTION_2_49();
    v14 = v9;
    v13 = 3;
    sub_1C025BB7C();
    OUTLINED_FUNCTION_2_49();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  OUTLINED_FUNCTION_16_17();
}

void Radius.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C21E0);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C025BAC8();
  sub_1C0304B88();
  if (!v2)
  {
    sub_1C03048C4();
    v7 = v6;
    sub_1C025BBB8();
    sub_1C03048E8();
    sub_1C025BBF4();
    OUTLINED_FUNCTION_1_47();
    sub_1C025BC30();
    OUTLINED_FUNCTION_1_47();
    OUTLINED_FUNCTION_3_27();
    *(_QWORD *)a2 = v7;
    *(_BYTE *)(a2 + 8) = v10;
    *(_BYTE *)(a2 + 9) = v9;
    *(_BYTE *)(a2 + 10) = v8;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  OUTLINED_FUNCTION_16_17();
}

void sub_1C025BA9C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  Radius.init(from:)(a1, a2);
}

void sub_1C025BAB0(_QWORD *a1)
{
  Radius.encode(to:)(a1);
}

unint64_t sub_1C025BAC8()
{
  unint64_t result;

  result = qword_1EF5C21C0;
  if (!qword_1EF5C21C0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03214C4, &type metadata for Radius.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C21C0);
  }
  return result;
}

unint64_t sub_1C025BB04()
{
  unint64_t result;

  result = qword_1EF5C21C8;
  if (!qword_1EF5C21C8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Radius.Unit, &type metadata for Radius.Unit);
    atomic_store(result, (unint64_t *)&qword_1EF5C21C8);
  }
  return result;
}

unint64_t sub_1C025BB40()
{
  unint64_t result;

  result = qword_1EF5C21D0;
  if (!qword_1EF5C21D0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Radius.Prefix, &type metadata for Radius.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C21D0);
  }
  return result;
}

unint64_t sub_1C025BB7C()
{
  unint64_t result;

  result = qword_1EF5C21D8;
  if (!qword_1EF5C21D8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Radius.Suffix, &type metadata for Radius.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5C21D8);
  }
  return result;
}

unint64_t sub_1C025BBB8()
{
  unint64_t result;

  result = qword_1EF5C21E8;
  if (!qword_1EF5C21E8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Radius.Unit, &type metadata for Radius.Unit);
    atomic_store(result, (unint64_t *)&qword_1EF5C21E8);
  }
  return result;
}

unint64_t sub_1C025BBF4()
{
  unint64_t result;

  result = qword_1EF5C21F0;
  if (!qword_1EF5C21F0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Radius.Prefix, &type metadata for Radius.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C21F0);
  }
  return result;
}

unint64_t sub_1C025BC30()
{
  unint64_t result;

  result = qword_1EF5C21F8;
  if (!qword_1EF5C21F8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Radius.Suffix, &type metadata for Radius.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5C21F8);
  }
  return result;
}

unint64_t sub_1C025BC70()
{
  unint64_t result;

  result = qword_1EF5C2200;
  if (!qword_1EF5C2200)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Radius.Unit, &type metadata for Radius.Unit);
    atomic_store(result, (unint64_t *)&qword_1EF5C2200);
  }
  return result;
}

unint64_t sub_1C025BCB0()
{
  unint64_t result;

  result = qword_1EF5C2208;
  if (!qword_1EF5C2208)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Radius.Prefix, &type metadata for Radius.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C2208);
  }
  return result;
}

unint64_t sub_1C025BCF0()
{
  unint64_t result;

  result = qword_1EF5C2210;
  if (!qword_1EF5C2210)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Radius.Suffix, &type metadata for Radius.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5C2210);
  }
  return result;
}

uint64_t __swift_memcpy11_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 7) = *(_DWORD *)((char *)a2 + 7);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Radius(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 11))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      v4 = v3 >= 4;
      v2 = v3 - 4;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Radius(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 10) = 0;
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 11) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 11) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 3;
  }
  return result;
}

void type metadata accessor for Radius()
{
  OUTLINED_FUNCTION_17_2();
}

void type metadata accessor for Radius.Unit()
{
  OUTLINED_FUNCTION_17_2();
}

void type metadata accessor for Radius.Prefix()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t _s13SiriInference6RadiusV6PrefixOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C025BE30 + 4 * byte_1C0321058[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C025BE50 + 4 * byte_1C032105D[v4]))();
}

_BYTE *sub_1C025BE30(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C025BE50(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C025BE58(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C025BE60(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C025BE68(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C025BE70(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for Radius.Suffix()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t _s13SiriInference6RadiusV4UnitOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C025BED4 + 4 * byte_1C0321067[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C025BF08 + 4 * byte_1C0321062[v4]))();
}

uint64_t sub_1C025BF08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C025BF10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C025BF18);
  return result;
}

uint64_t sub_1C025BF24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C025BF2CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C025BF30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C025BF38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Radius.CodingKeys()
{
  return &type metadata for Radius.CodingKeys;
}

unint64_t sub_1C025BF58()
{
  unint64_t result;

  result = qword_1EF5C2218;
  if (!qword_1EF5C2218)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C032149C, &type metadata for Radius.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C2218);
  }
  return result;
}

unint64_t sub_1C025BF98()
{
  unint64_t result;

  result = qword_1EF5C2220;
  if (!qword_1EF5C2220)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C032140C, &type metadata for Radius.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C2220);
  }
  return result;
}

unint64_t sub_1C025BFD8()
{
  unint64_t result;

  result = qword_1EF5C2228;
  if (!qword_1EF5C2228)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0321434, &type metadata for Radius.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C2228);
  }
  return result;
}

unint64_t sub_1C025C014()
{
  unint64_t result;

  result = qword_1EF5C2230;
  if (!qword_1EF5C2230)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Radius.Suffix, &type metadata for Radius.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5C2230);
  }
  return result;
}

unint64_t sub_1C025C050()
{
  unint64_t result;

  result = qword_1EF5C2238;
  if (!qword_1EF5C2238)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Radius.Prefix, &type metadata for Radius.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C2238);
  }
  return result;
}

unint64_t sub_1C025C08C()
{
  unint64_t result;

  result = qword_1EF5C2240;
  if (!qword_1EF5C2240)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Radius.Unit, &type metadata for Radius.Unit);
    atomic_store(result, (unint64_t *)&qword_1EF5C2240);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_118()
{
  return 0x6E6968746977;
}

void sub_1C025C0E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0303EB0();
  OUTLINED_FUNCTION_54_20();
  if (v1 == sub_1C0303EB0() && v0 == v2)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

BOOL sub_1C025C144(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void sub_1C025C150()
{
  OUTLINED_FUNCTION_8_71();
  __asm { BR              X10 }
}

uint64_t sub_1C025C18C()
{
  unsigned __int8 v0;

  OUTLINED_FUNCTION_28_37();
  return ((uint64_t (*)(void))((char *)sub_1C025C1D4 + 4 * byte_1C032151D[v0]))();
}

void sub_1C025C1D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 28271 && v1 == v2)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025C22C(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C025C288(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(unint64_t))((char *)sub_1C025C308 + 4 * byte_1C0321527[a2]))(0xD000000000000017);
}

void sub_1C025C308(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 0xD000000000000017 && v2 == ((v1 - 32) | 0x8000000000000000))
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025C390(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C025C3D0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C025C430 + 4 * byte_1C0321530[a2]))(0x746E6573657270);
}

void sub_1C025C430(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x746E6573657270 && v1 == 0xE700000000000000)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C025C4A0(char a1, char a2)
{
  char v2;

  if (*(_QWORD *)&aEverydayweekda_1[8 * a1] == *(_QWORD *)&aEverydayweekda_1[8 * a2])
    v2 = 1;
  else
    v2 = OUTLINED_FUNCTION_176();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

void sub_1C025C500(char a1, char a2)
{
  uint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t v9;

  v2 = 0x65646F6370697ALL;
  if (a1)
  {
    OUTLINED_FUNCTION_45();
    if (v3)
      v5 = 28265;
    else
      v5 = 1918985582;
    if (v3)
      v6 = v4;
    else
      v6 = 0xE400000000000000;
  }
  else
  {
    v6 = 0xE700000000000000;
    v5 = 0x65646F6370697ALL;
  }
  if (a2)
  {
    OUTLINED_FUNCTION_45();
    if (v7)
      v2 = 28265;
    else
      v2 = 1918985582;
    if (v7)
      v9 = v8;
    else
      v9 = 0xE400000000000000;
  }
  else
  {
    v9 = 0xE700000000000000;
  }
  if (v5 == v2 && v6 == v9)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025C5BC(unsigned __int8 a1, char a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = 0x7972746E756F63;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 28265;
    else
      v4 = 1918985582;
    if (v3 == 1)
      v5 = 0xE200000000000000;
    else
      v5 = 0xE400000000000000;
  }
  else
  {
    v5 = 0xE700000000000000;
    v4 = 0x7972746E756F63;
  }
  if (a2)
  {
    if (a2 == 1)
      v2 = 28265;
    else
      v2 = 1918985582;
    if (a2 == 1)
      v6 = 0xE200000000000000;
    else
      v6 = 0xE400000000000000;
  }
  else
  {
    v6 = 0xE700000000000000;
  }
  if (v4 == v2 && v5 == v6)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C025C67C(uint64_t a1, uint64_t a2)
{
  return sub_1C025F5A4(a1, a2, (void (*)(void))Country.Value.rawValue.getter);
}

void sub_1C025C688(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C025C6D0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C025C740 + 4 * byte_1C0321538[a2]))(0x73726574656DLL);
}

void sub_1C025C740(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x73726574656DLL && v1 == 0xE600000000000000)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025C7C4(unsigned __int8 a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x79746E756F63;
    else
      v5 = 1918985582;
    if (v4 == 1)
      v2 = 0xE600000000000000;
    else
      v2 = 0xE400000000000000;
  }
  else
  {
    v5 = OUTLINED_FUNCTION_52_15();
  }
  if (a2)
  {
    if (a2 == 1)
      v6 = 0x79746E756F63;
    else
      v6 = 1918985582;
    if (a2 == 1)
      v3 = 0xE600000000000000;
    else
      v3 = 0xE400000000000000;
  }
  else
  {
    OUTLINED_FUNCTION_28_37();
  }
  if (v5 == v6 && v2 == v3)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025C878(unsigned __int8 a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x6574617473;
    else
      v5 = 1918985582;
    if (v4 == 1)
      v2 = 0xE500000000000000;
    else
      v2 = 0xE400000000000000;
  }
  else
  {
    v5 = OUTLINED_FUNCTION_52_15();
  }
  if (a2)
  {
    if (a2 == 1)
      v6 = 0x6574617473;
    else
      v6 = 1918985582;
    if (a2 == 1)
      v3 = 0xE500000000000000;
    else
      v3 = 0xE400000000000000;
  }
  else
  {
    OUTLINED_FUNCTION_28_37();
  }
  if (v5 == v6 && v2 == v3)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025C92C(unsigned __int8 a1, char a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = 2037672291;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 28265;
    else
      v4 = 1918985582;
    if (v3 == 1)
      v5 = 0xE200000000000000;
    else
      v5 = 0xE400000000000000;
  }
  else
  {
    v5 = 0xE400000000000000;
    v4 = 2037672291;
  }
  if (a2)
  {
    if (a2 == 1)
      v2 = 28265;
    else
      v2 = 1918985582;
    if (a2 == 1)
      v6 = 0xE200000000000000;
    else
      v6 = 0xE400000000000000;
  }
  else
  {
    v6 = 0xE400000000000000;
  }
  if (v4 == v2 && v5 == v6)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025C9DC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C025CA38(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C025CA90 + 4 * byte_1C0321540[a2]))(0x64657463656A6572);
}

void sub_1C025CA90(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x64657463656A6572 && v1 == 0xE800000000000000)
    OUTLINED_FUNCTION_6_96();
  else
    OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025CB04()
{
  OUTLINED_FUNCTION_13_59();
  OUTLINED_FUNCTION_22_47();
  __asm { BR              X10 }
}

uint64_t sub_1C025CB3C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(unint64_t))((char *)sub_1C025CB84 + 4 * byte_1C0321548[a2]))(0xD000000000000013);
}

void sub_1C025CB84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_18_6();
  if (v2 == 0xD000000000000013 && v1 == v0)
    OUTLINED_FUNCTION_6_96();
  else
    OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025CBE4(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C025CC38(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(unint64_t))((char *)sub_1C025CCA0 + 4 * byte_1C0321551[a2]))(0xD000000000000012);
}

void sub_1C025CCA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_47_26();
  if (v2 == 0xD000000000000012 && v0 == v1)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025CD10(uint64_t a1, uint64_t a2)
{
  sub_1C025F650(a1, a2, (void (*)(void))sub_1C01D36A0);
}

void sub_1C025CD1C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C025CD98()
{
  uint64_t v0;
  unsigned __int8 v1;

  v0 = OUTLINED_FUNCTION_46_24();
  return ((uint64_t (*)(uint64_t))((char *)sub_1C025CDEC + 4 * byte_1C032155A[v1]))(v0);
}

void sub_1C025CDEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50_24();
  if (v1 == v2 && v0 == 0xEC0000006E6F6974)
    OUTLINED_FUNCTION_6_96();
  else
    OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025CE58(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C025CEA0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C025CEFC + 4 * byte_1C0321563[a2]))(0x327478656ELL);
}

void sub_1C025CEFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 0x327478656ELL && v1 == v2)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025CF68()
{
  unsigned __int8 v0;
  char v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  OUTLINED_FUNCTION_14_64();
  v3 = v0;
  if (v0)
  {
    if (v0 == 1)
      v4 = 0x656E6F646E616261;
    else
      v4 = v2;
    if (v3 == 1)
      v5 = 0xE900000000000064;
    else
      v5 = 0xED0000726568744FLL;
  }
  else
  {
    v5 = 0xE800000000000000;
    v4 = OUTLINED_FUNCTION_15_55();
  }
  if (v1)
  {
    if (v1 == 1)
    {
      v2 = 0x656E6F646E616261;
      v6 = 0xE900000000000064;
    }
    else
    {
      v6 = 0xED0000726568744FLL;
    }
  }
  else
  {
    v6 = 0xE800000000000000;
  }
  if (v4 == v2 && v5 == v6)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025D038(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C025D0A4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_1C025D118 + 4 * byte_1C032156D[a2]))();
}

void sub_1C025D118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if (a1 == a3 && v3 == 0xED00006F65646956)
    OUTLINED_FUNCTION_6_96();
  else
    OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025D1A8(unsigned __int8 a1, char a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = 7562617;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 28526;
    else
      v4 = 0xD000000000000016;
    if (v3 == 1)
      v5 = 0xE200000000000000;
    else
      v5 = 0x80000001C0329240;
  }
  else
  {
    v5 = 0xE300000000000000;
    v4 = 7562617;
  }
  if (a2)
  {
    if (a2 == 1)
      v2 = 28526;
    else
      v2 = 0xD000000000000016;
    if (a2 == 1)
      v6 = 0xE200000000000000;
    else
      v6 = 0x80000001C0329240;
  }
  else
  {
    v6 = 0xE300000000000000;
  }
  if (v4 == v2 && v5 == v6)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

BOOL sub_1C025D268(char a1, char a2)
{
  return *(_QWORD *)&aEverydayweekda_1[8 * a1 + 24] == *(_QWORD *)&aEverydayweekda_1[8 * a2 + 24];
}

void sub_1C025D28C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C025D2D4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C025D33C + 4 * byte_1C0321577[a2]))(0x65756761656CLL);
}

void sub_1C025D33C(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x65756761656CLL && v1 == 0xE600000000000000)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025D3B4(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C025D408()
{
  unint64_t v0;
  unsigned __int8 v1;

  v0 = OUTLINED_FUNCTION_34_36();
  return ((uint64_t (*)(unint64_t))((char *)sub_1C025D488 + 4 * byte_1C0321581[v1]))(v0);
}

void sub_1C025D488(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (a1 - 32) | 0x8000000000000000;
  OUTLINED_FUNCTION_33_34();
  if (v3 == v4 && v1 == v2)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025D514(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C025D564(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C025D5F0 + 4 * byte_1C032158B[a2]))(0x636E656772656D65);
}

void sub_1C025D5F0(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x636E656772656D65 && v1 == 0xE900000000000079)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025D68C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C025D6E4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C025D77C + 4 * byte_1C0321596[a2]))(0x53554C506D6F7266);
}

void sub_1C025D77C(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x53554C506D6F7266 && v1 == 0xE800000000000000)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025D820(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C025D860(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C025D8C8 + 4 * byte_1C03215A1[a2]))(25705);
}

void sub_1C025D8C8(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 25705 && v1 == 0xE200000000000000)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025D940(unsigned __int16 a1, unsigned __int16 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1C02E5C48(a1);
  OUTLINED_FUNCTION_54_20();
  if (v3 == sub_1C02E5C48(a2) && v2 == v5)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025D9A0(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000024;
  else
    v3 = 0xD000000000000015;
  if (v2)
    v4 = 0x80000001C032B2E0;
  else
    v4 = 0x80000001C032B300;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000024;
  else
    v5 = 0xD000000000000015;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C032B300;
  else
    v6 = 0x80000001C032B2E0;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025DA28()
{
  OUTLINED_FUNCTION_8_71();
  __asm { BR              X10 }
}

uint64_t sub_1C025DA54()
{
  uint64_t v0;

  OUTLINED_FUNCTION_29_34();
  return ((uint64_t (*)(void))((char *)sub_1C025DAAC + 4 * byte_1C03215AA[v0]))();
}

void sub_1C025DAAC(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x7463697274736964 && v1 == 0xE800000000000000)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025DB18(unsigned __int8 a1, char a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = 0x80000001C032B250;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0xD000000000000013;
    else
      v4 = 0xD000000000000011;
    if (v3 == 1)
      v5 = 0x80000001C032B270;
    else
      v5 = 0x80000001C032B290;
  }
  else
  {
    v4 = 0xD000000000000019;
    v5 = 0x80000001C032B250;
  }
  if (a2)
  {
    if (a2 == 1)
      v6 = 0xD000000000000013;
    else
      v6 = 0xD000000000000011;
    if (a2 == 1)
      v2 = 0x80000001C032B270;
    else
      v2 = 0x80000001C032B290;
  }
  else
  {
    v6 = 0xD000000000000019;
  }
  if (v4 == v6 && v5 == v2)
    OUTLINED_FUNCTION_6_96();
  else
    OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025DBEC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C025DC3C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C025DCA4 + 4 * byte_1C03215B2[a2]))(0x7372655033766C6ELL);
}

void sub_1C025DCA4(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x7372655033766C6ELL && v1 == 0xEA00000000006E6FLL)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025DD1C(unsigned __int8 a1, char a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = 0x737961776C61;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x6E49646E61436F6ELL;
    else
      v4 = 1701736302;
    if (v3 == 1)
      v5 = 0xEB00000000727243;
    else
      v5 = 0xE400000000000000;
  }
  else
  {
    v5 = 0xE600000000000000;
    v4 = 0x737961776C61;
  }
  if (a2)
  {
    if (a2 == 1)
      v2 = 0x6E49646E61436F6ELL;
    else
      v2 = 1701736302;
    if (a2 == 1)
      v6 = 0xEB00000000727243;
    else
      v6 = 0xE400000000000000;
  }
  else
  {
    v6 = 0xE600000000000000;
  }
  if (v4 == v2 && v5 == v6)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C025DDFC(uint64_t a1, uint64_t a2)
{
  return sub_1C025F5A4(a1, a2, (void (*)(void))OccupantNamePostfix.Value.rawValue.getter);
}

void sub_1C025DE08()
{
  OUTLINED_FUNCTION_13_59();
  OUTLINED_FUNCTION_22_47();
  __asm { BR              X10 }
}

uint64_t sub_1C025DE48(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(unint64_t))((char *)sub_1C025DE9C + 4 * byte_1C03215BA[a2]))(0xD000000000000011);
}

void sub_1C025DE9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 0xD000000000000011 && v2 == ((v1 - 32) | 0x8000000000000000))
    OUTLINED_FUNCTION_6_96();
  else
    OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C025DF08(uint64_t a1, uint64_t a2)
{
  return sub_1C025F5A4(a1, a2, (void (*)(void))OccupantNamePrefix.Value.rawValue.getter);
}

void sub_1C025DF14(unsigned __int8 a1, char a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = 0x7472617473;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 6581861;
    else
      v4 = 0x746573746F6ELL;
    if (v3 == 1)
      v5 = 0xE300000000000000;
    else
      v5 = 0xE600000000000000;
  }
  else
  {
    v5 = 0xE500000000000000;
    v4 = 0x7472617473;
  }
  if (a2)
  {
    if (a2 == 1)
      v2 = 6581861;
    else
      v2 = 0x746573746F6ELL;
    if (a2 == 1)
      v6 = 0xE300000000000000;
    else
      v6 = 0xE600000000000000;
  }
  else
  {
    v6 = 0xE500000000000000;
  }
  if (v4 == v2 && v5 == v6)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025DFDC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x65756C6176;
  else
    v3 = 1701869940;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x65756C6176;
  else
    v5 = 1701869940;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025E050(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6156656C646E6168;
  else
    v3 = 25705;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xEB0000000065756CLL;
  if ((a2 & 1) != 0)
    v5 = 0x6156656C646E6168;
  else
    v5 = 25705;
  if ((a2 & 1) != 0)
    v6 = 0xEB0000000065756CLL;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025E0CC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C025E11C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C025E1AC + 4 * byte_1C03215C4[a2]))(0x646E6F6973726576);
}

void sub_1C025E1AC(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x646E6F6973726576 && v1 == 0xEB00000000657461)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C025E24C(uint64_t a1, uint64_t a2)
{
  return sub_1C025F5A4(a1, a2, (void (*)(void))BusinessLandmark.Prefix.rawValue.getter);
}

void sub_1C025E258(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1918985582;
  else
    v3 = 28265;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1918985582;
  else
    v5 = 28265;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025E2C4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 6647407;
  else
    v3 = 0x79627261656ELL;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE300000000000000;
  if ((a2 & 1) != 0)
    v5 = 6647407;
  else
    v5 = 0x79627261656ELL;
  if ((a2 & 1) != 0)
    v6 = 0xE300000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025E338(unsigned __int8 a1, char a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;

  v2 = 0xEB00000000746F68;
  v3 = 0x53656E4F69726973;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x6D6D6F6365526C6DLL;
    else
      v5 = 0x6369736162;
    if (v4 == 1)
      v6 = 0xED00007265646E65;
    else
      v6 = 0xE500000000000000;
  }
  else
  {
    v5 = 0x53656E4F69726973;
    v6 = 0xEB00000000746F68;
  }
  if (a2)
  {
    if (a2 == 1)
      v3 = 0x6D6D6F6365526C6DLL;
    else
      v3 = 0x6369736162;
    if (a2 == 1)
      v2 = 0xED00007265646E65;
    else
      v2 = 0xE500000000000000;
  }
  if (v5 == v3 && v6 == v2)
    OUTLINED_FUNCTION_6_96();
  else
    OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025E444(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C025E4B8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C025E588 + 4 * byte_1C03215D3[a2]))(0x646461206B726F77);
}

void sub_1C025E588(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 0x646461206B726F77 && v2 == v1)
    OUTLINED_FUNCTION_6_96();
  else
    OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025E674(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C025E6C4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C025E730 + 4 * byte_1C03215E1[a2]))(0x656E6F6870);
}

void sub_1C025E730(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x656E6F6870 && v1 == 0xE500000000000000)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C025E7AC(uint64_t a1, uint64_t a2)
{
  return sub_1C025F5A4(a1, a2, (void (*)(void))AirportLandmark.Prefix.rawValue.getter);
}

void sub_1C025E7B8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C025E82C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C025E884 + 4 * byte_1C03215EA[a2]))(0x7473694C65746144);
}

void sub_1C025E884(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x7473694C65746144 && v1 == 0xE800000000000000)
    OUTLINED_FUNCTION_6_96();
  else
    OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025E8F4()
{
  OUTLINED_FUNCTION_8_71();
  __asm { BR              X10 }
}

uint64_t sub_1C025E920()
{
  uint64_t v0;

  OUTLINED_FUNCTION_16_56();
  OUTLINED_FUNCTION_29_34();
  return ((uint64_t (*)(void))((char *)sub_1C025E970 + 4 * byte_1C03215F3[v0]))();
}

void sub_1C025E970()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_17_57();
  v2 = v1 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
  if (v3 == v4 && v0 == v2)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025E9D4(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000012;
  else
    v3 = 0x697375427478656ELL;
  if (v2)
    v4 = 0xEF7961447373656ELL;
  else
    v4 = 0x80000001C03288B0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000012;
  else
    v5 = 0x697375427478656ELL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001C03288B0;
  else
    v6 = 0xEF7961447373656ELL;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025EA64(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C025EABC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C025EBC4 + 4 * byte_1C0321604[a2]))(0x4553454E494843);
}

void sub_1C025EBC4(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x4553454E494843 && v1 == 0xE700000000000000)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025ECD8(char a1, char a2)
{
  unint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = 0xE900000000000074;
  v3 = 0x6E656E69746E6F63;
  if (a1)
  {
    OUTLINED_FUNCTION_45();
    if (v4)
      v6 = 28265;
    else
      v6 = 1918985582;
    if (v4)
      v7 = v5;
    else
      v7 = 0xE400000000000000;
  }
  else
  {
    v6 = 0x6E656E69746E6F63;
    v7 = 0xE900000000000074;
  }
  if (a2)
  {
    if (a2 == 1)
      v3 = 28265;
    else
      v3 = 1918985582;
    if (a2 == 1)
      v2 = 0xE200000000000000;
    else
      v2 = 0xE400000000000000;
  }
  if (v6 == v3 && v7 == v2)
    OUTLINED_FUNCTION_6_96();
  else
    OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025EDA0()
{
  OUTLINED_FUNCTION_40_29();
  OUTLINED_FUNCTION_38_29();
  __asm { BR              X10 }
}

uint64_t sub_1C025EE04()
{
  uint64_t v0;
  unsigned __int8 v1;

  v0 = OUTLINED_FUNCTION_36_34() | 0x6D41206800000000;
  return ((uint64_t (*)(uint64_t))((char *)sub_1C025EEAC + 4 * byte_1C0321618[v1]))(v0);
}

void sub_1C025EEAC()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;

  OUTLINED_FUNCTION_55_17();
  if (v3 == (v2 | 0x6D41206800000000) && v1 == v0)
    OUTLINED_FUNCTION_6_96();
  else
    OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025EF70(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C025EFB8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C025F00C + 4 * byte_1C0321625[a2]))(0x7954746565727473);
}

void sub_1C025F00C(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x7954746565727473 && v1 == 0xEA00000000006570)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025F070(char a1, char a2)
{
  uint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t v9;

  v2 = 0x7369206572656877;
  if (a1)
  {
    OUTLINED_FUNCTION_45();
    if (v3)
      v5 = 28265;
    else
      v5 = 28271;
    if (v3)
      v6 = v4;
    else
      v6 = 0xE200000000000000;
  }
  else
  {
    v6 = 0xE800000000000000;
    v5 = 0x7369206572656877;
  }
  if (a2)
  {
    OUTLINED_FUNCTION_45();
    if (v7)
      v2 = 28265;
    else
      v2 = 28271;
    if (v7)
      v9 = v8;
    else
      v9 = 0xE200000000000000;
  }
  else
  {
    v9 = 0xE800000000000000;
  }
  if (v5 == v2 && v6 == v9)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025F124(char a1, char a2)
{
  char v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  if (a1)
  {
    OUTLINED_FUNCTION_45();
    if (v2)
      v4 = 29545;
    else
      v4 = 1918985582;
    if (v2)
      v5 = v3;
    else
      v5 = 0xE400000000000000;
  }
  else
  {
    v5 = 0xE200000000000000;
    v4 = 29793;
  }
  if (a2)
  {
    OUTLINED_FUNCTION_45();
    if (v6)
      v8 = 29545;
    else
      v8 = 1918985582;
    if (v6)
      v9 = v7;
    else
      v9 = 0xE400000000000000;
  }
  else
  {
    v9 = 0xE200000000000000;
    v8 = 29793;
  }
  if (v4 == v8 && v5 == v9)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025F1C4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1918985582;
  else
    v3 = 29793;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1918985582;
  else
    v5 = 29793;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025F234(unsigned __int8 a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x6973736573736F70;
    else
      v5 = 1918985582;
    if (v4 == 1)
      v2 = 0xEA00000000006576;
    else
      v2 = 0xE400000000000000;
  }
  else
  {
    v5 = OUTLINED_FUNCTION_52_15();
  }
  if (a2)
  {
    if (a2 == 1)
      v6 = 0x6973736573736F70;
    else
      v6 = 1918985582;
    if (a2 == 1)
      v3 = 0xEA00000000006576;
    else
      v3 = 0xE400000000000000;
  }
  else
  {
    OUTLINED_FUNCTION_28_37();
  }
  if (v5 == v6 && v2 == v3)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025F2F4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 31085;
  else
    v3 = 6647407;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE200000000000000;
  if ((a2 & 1) != 0)
    v5 = 31085;
  else
    v5 = 6647407;
  if ((a2 & 1) != 0)
    v6 = 0xE200000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C025F360(uint64_t a1, uint64_t a2)
{
  return sub_1C025F5A4(a1, a2, (void (*)(void))POILandmark.Prefix.rawValue.getter);
}

void sub_1C025F36C()
{
  OUTLINED_FUNCTION_55_17();
  OUTLINED_FUNCTION_36_34();
  __asm { BR              X10 }
}

uint64_t sub_1C025F3C0()
{
  uint64_t v0;
  unsigned __int8 v1;

  v0 = OUTLINED_FUNCTION_38_29() | 0x7365576800000000;
  return ((uint64_t (*)(uint64_t))((char *)sub_1C025F444 + 4 * byte_1C0321632[v1]))(v0);
}

void sub_1C025F444()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;

  OUTLINED_FUNCTION_40_29();
  if (v3 == (v2 | 0x7365576800000000) && v1 == v0)
    OUTLINED_FUNCTION_6_96();
  else
    OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C025F4E4(uint64_t a1, uint64_t a2)
{
  return sub_1C025F5A4(a1, a2, (void (*)(void))StreetType.Value.rawValue.getter);
}

void sub_1C025F4F0()
{
  OUTLINED_FUNCTION_8_71();
  __asm { BR              X10 }
}

uint64_t sub_1C025F51C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_16_56();
  OUTLINED_FUNCTION_29_34();
  return ((uint64_t (*)(void))((char *)sub_1C025F550 + 4 * byte_1C032163E[v0]))();
}

void sub_1C025F550()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_17_57();
  v2 = v1 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
  if (v3 == v4 && v0 == v2)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C025F598(uint64_t a1, uint64_t a2)
{
  return sub_1C025F5A4(a1, a2, (void (*)(void))StreetName.Suffix.rawValue.getter);
}

uint64_t sub_1C025F5A4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  a3();
  OUTLINED_FUNCTION_54_20();
  if (v4 == ((uint64_t (*)(void))a3)() && v3 == v6)
    OUTLINED_FUNCTION_5_90();
  else
    LOBYTE(v4) = OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  return v4 & 1;
}

BOOL sub_1C025F620(char a1, char a2)
{
  return dword_1C03216F0[a1] == dword_1C03216F0[a2];
}

void sub_1C025F644(uint64_t a1, uint64_t a2)
{
  sub_1C025F650(a1, a2, (void (*)(void))sub_1C0269E18);
}

void sub_1C025F650(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;

  a3();
  OUTLINED_FUNCTION_54_20();
  if (v4 == ((uint64_t (*)(uint64_t))a3)(a2) && v3 == v7)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C025F6B4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C025F6FC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C025F7B8 + 4 * byte_1C032164A[a2]))(0x6E69616D6F64);
}

void sub_1C025F7B8(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x6E69616D6F64 && v1 == 0xE600000000000000)
    OUTLINED_FUNCTION_5_90();
  else
    OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C025F884()
{
  char v0;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = sub_1C0303814();
  sub_1C01E6B84();
  OUTLINED_FUNCTION_53_19();
  OUTLINED_FUNCTION_53_19();
  if (v5 == v3 && v6 == v4)
    OUTLINED_FUNCTION_5_90();
  else
    v0 = OUTLINED_FUNCTION_0_133();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14();
  return v0 & 1;
}

void sub_1C025F90C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  BOOL v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v4 = sub_1C0301CFC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v18 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - v8;
  if (qword_1ED728298 != -1)
    swift_once();
  v10 = OUTLINED_FUNCTION_9_0();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED729610);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v9, a2, v4);
  v11 = sub_1C0303B80();
  v17 = sub_1C03042E8();
  v12 = os_log_type_enabled(v11, (os_log_type_t)v17);
  v19 = a1;
  if (v12)
  {
    v16 = a2;
    v13 = (_DWORD *)OUTLINED_FUNCTION_4_0();
    v15 = OUTLINED_FUNCTION_4_0();
    v20 = v15;
    *v13 = 136315394;
    __asm { BR              X10 }
  }
  OUTLINED_FUNCTION_47_1();

  OUTLINED_FUNCTION_32_34();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
  *(_OWORD *)(swift_initStackObject() + 16) = xmmword_1C03084B0;
  __asm { BR              X12 }
}

void sub_1C025FCF8()
{
  void *v0;
  void (*v1)(void);
  id v2;

  OUTLINED_FUNCTION_31_37();
  v2 = v0;
  v1();
  swift_release();

  OUTLINED_FUNCTION_37_0();
}

void sub_1C025FD34()
{
  void *v0;
  void (*v1)(void);
  id v2;

  OUTLINED_FUNCTION_31_37();
  v2 = v0;
  v1();
  swift_release();

}

uint64_t sub_1C025FD78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7283F0);
  v1 = MEMORY[0x1E0C80A78](v0);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = MEMORY[0x1E0C80A78](v1);
  v6 = &v9[-v5];
  __swift_allocate_value_buffer(v4, qword_1ED728368);
  v7 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED728368);
  sub_1C00E42D0();
  swift_storeEnumTagMultiPayload();
  sub_1C00CE724((uint64_t)v3, (uint64_t)v6);
  return sub_1C00CE724((uint64_t)v6, v7);
}

void static SiriRemembersDB.defaultURL.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED728420 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7283F0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED728368);
  swift_beginAccess();
  sub_1C00CE368(v3, a1);
  OUTLINED_FUNCTION_43_26();
}

void static SiriRemembersDB.defaultURL.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED728420 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7283F0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED728368);
  OUTLINED_FUNCTION_30_33();
  sub_1C00CE438(a1, v3);
  swift_endAccess();
  sub_1C00CE480(a1);
  OUTLINED_FUNCTION_43_26();
}

uint64_t (*static SiriRemembersDB.defaultURL.modify())()
{
  uint64_t v0;

  if (qword_1ED728420 != -1)
    swift_once();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7283F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED728368);
  OUTLINED_FUNCTION_30_33();
  return j__swift_endAccess;
}

dispatch_semaphore_t sub_1C0260004()
{
  dispatch_semaphore_t result;

  result = dispatch_semaphore_create(1);
  qword_1ED728380 = (uint64_t)result;
  return result;
}

void sub_1C0260024(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t);
  void *v14;
  void *v15;
  id v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  _BYTE v40[4];
  int v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v3 = sub_1C0301B70();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = &v40[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = &v40[-v9];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v40[-v11];
  sub_1C019EA48();
  v45 = v4;
  v13 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16);
  v13(v12, a1, v3);
  sub_1C019DB48((uint64_t)v12);
  v15 = v14;
  v16 = objc_msgSend((id)objc_opt_self(), sel_streamIdentifierForStream_, 2);
  if (v16)
  {
    v17 = v16;
    v44 = (id)sub_1C0303EB0();
    v19 = v18;

    if (qword_1ED728298 != -1)
      swift_once();
    v20 = sub_1C0303B98();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED729610);
    v13(v10, a1, v3);
    swift_bridgeObjectRetain_n();
    v21 = sub_1C0303B80();
    v22 = sub_1C03042E8();
    v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      v24 = swift_slowAlloc();
      v43 = v1;
      v25 = v24;
      v42 = swift_slowAlloc();
      v47 = v42;
      *(_DWORD *)v25 = 136315394;
      v41 = v23;
      v26 = sub_1C0301AEC();
      v46 = sub_1C003E6D8(v26, v27, &v47);
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v45 + 8))(v10, v3);
      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain();
      v46 = sub_1C003E6D8((uint64_t)v44, v19, &v47);
      sub_1C03044B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0039000, v21, (os_log_type_t)v41, "Add siriRemembersDB: %s to be managed by stream:%s", (uint8_t *)v25, 0x16u);
      v28 = v42;
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v28, -1, -1);
      MEMORY[0x1C3B98378](v25, -1, -1);

    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v45 + 8))(v10, v3);

      swift_bridgeObjectRelease_n();
    }
    v36 = objc_allocWithZone(MEMORY[0x1E0D02788]);
    v37 = (void *)sub_1C0303E8C();
    swift_bridgeObjectRelease();
    v38 = objc_msgSend(v36, sel_initWithIdentifier_, v37);

    v39 = (void *)sub_1C0303E8C();
    objc_msgSend(v15, sel_addManagedTable_derivedFromSource_, v39, v38);

  }
  else
  {
    v44 = v15;
    if (qword_1ED728298 != -1)
      swift_once();
    v29 = sub_1C0303B98();
    __swift_project_value_buffer(v29, (uint64_t)qword_1ED729610);
    v13(v7, a1, v3);
    v30 = sub_1C0303B80();
    v31 = sub_1C03042E8();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v47 = v33;
      *(_DWORD *)v32 = 136315138;
      v43 = v1;
      v34 = sub_1C0301AEC();
      v46 = sub_1C003E6D8(v34, v35, &v47);
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v45 + 8))(v7, v3);
      _os_log_impl(&dword_1C0039000, v30, v31, "Skip the BFS management for siriRemembersDB: %s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v33, -1, -1);
      MEMORY[0x1C3B98378](v32, -1, -1);

    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v45 + 8))(v7, v3);
    }
  }
}

void SiriRemembersDB.setBiomeFetchedInteractionsAt(date:)(uint64_t a1)
{
  sub_1C025F90C(0, a1);
}

void SiriRemembersDB.setFetchedInteractionsAt(date:)(uint64_t a1)
{
  sub_1C025F90C(1, a1);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SiriRemembersDB.markAllBiomeIDsAsSeen()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  _QWORD v14[5];
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *);
  uint64_t v18;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_intent);
  v3 = objc_msgSend(v2, sel_publisherFromStartTime_, 0.0);

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = MEMORY[0x1E0DEE9D8];
  v5 = MEMORY[0x1E0C809B0];
  v6 = OUTLINED_FUNCTION_35_40((uint64_t)sub_1C025FD34);
  v17 = sub_1C0260DC4;
  v18 = v4;
  v15 = v5;
  v16 = 1107296256;
  v7 = OUTLINED_FUNCTION_35_40((uint64_t)sub_1C025FCF8);
  swift_retain();
  swift_release();
  v8 = objc_msgSend(v3, sel_sinkWithCompletion_shouldContinue_, v6, v7);
  _Block_release(v7);
  _Block_release(v6);

  if (qword_1ED728298 != -1)
    swift_once();
  v9 = OUTLINED_FUNCTION_9_0();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED729610);
  swift_retain();
  v10 = sub_1C0303B80();
  v11 = sub_1C03042E8();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v14[4] = v3;
    *(_DWORD *)v12 = 134217984;
    OUTLINED_FUNCTION_27_44();
    v15 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 16);
    sub_1C03044B0();
    OUTLINED_FUNCTION_56();
    _os_log_impl(&dword_1C0039000, v10, v11, "ignoring %ld existing Biome events", v12, 0xCu);
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_27_44();
  if (*(_QWORD *)(*(_QWORD *)(v4 + 16) + 16))
  {
    v13 = OUTLINED_FUNCTION_32_34();
    MEMORY[0x1E0C80A78](v13);
    v14[2] = v4 + 16;
    v14[3] = v1;
    sub_1C00CD480(0, (void (*)(uint64_t))sub_1C0260DCC, (uint64_t)v14);

    OUTLINED_FUNCTION_56();
  }
  else
  {

    OUTLINED_FUNCTION_56();
  }
}

uint64_t sub_1C0260880(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = objc_msgSend(a1, sel_eventBody);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_identifier);
    sub_1C0303EB0();

    v6 = sub_1C0303F10();
    v8 = v7;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1C00ABB7C();
    v9 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16);
    sub_1C00ABD74();
    v10 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(v10 + 16) = v9 + 1;
    v11 = v10 + 16 * v9;
    *(_QWORD *)(v11 + 32) = v6;
    *(_QWORD *)(v11 + 40) = v8;
    swift_endAccess();

  }
  return 1;
}

uint64_t sub_1C0260964(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;

  result = swift_beginAccess();
  v4 = *a1;
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    type metadata accessor for SiriRemembersDB();
    swift_bridgeObjectRetain();
    v6 = v4 + 40;
    while (1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
      v8 = sub_1C0303F10();
      *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 64) = &off_1E799BE20;
      *(_QWORD *)(inited + 32) = v8;
      *(_QWORD *)(inited + 40) = v9;
      sub_1C006890C(0xD000000000000041, 0x80000001C0334C90, inited);
      if (v1)
        break;
      v6 += 16;
      swift_release();
      swift_setDeallocating();
      sub_1C004EFEC();
      if (!--v5)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    return sub_1C004EFEC();
  }
  return result;
}

uint64_t sub_1C0260ABC(uint64_t (*a1)(void))
{
  return a1();
}

void sub_1C0260ADC(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v6 = a4();
  sub_1C003E6D8(v6, v7, a3);
  v8 = *a1 + 8;
  sub_1C03044B0();
  OUTLINED_FUNCTION_14();
  *a1 = v8;
  OUTLINED_FUNCTION_43_26();
}

void *sub_1C0260B44(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_1C0304828();
  __break(1u);
  return result;
}

uint64_t sub_1C0260C08(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_1C0304000();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x1E0DEE9D8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
LABEL_6:
  sub_1C01BB1E4(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_1C03046D8();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return v4;
  }
  sub_1C0304828();
  __break(1u);
LABEL_14:
  result = sub_1C03047E0();
  __break(1u);
  return result;
}

_BYTE **sub_1C0260D78(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_1C0260D88()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t sub_1C0260DC4(void *a1)
{
  uint64_t v1;

  return sub_1C0260880(a1, v1);
}

uint64_t sub_1C0260DCC()
{
  uint64_t v0;

  return sub_1C0260964(*(uint64_t **)(v0 + 16));
}

uint64_t *initializeBufferWithCopyOfBuffer for SiriRemembersDB(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1C0301B70();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SiriRemembersDB(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C0301B70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for SiriRemembersDB(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C0301B70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for SiriRemembersDB(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C0301B70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

void sub_1C0260F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C0301B70();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    __swift_getEnumTagSinglePayload(a1, a2, v4);
  else
    OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C0261008(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1C0301B70();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1C026107C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C0301B70();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_133()
{
  return sub_1C0304A08();
}

uint64_t OUTLINED_FUNCTION_8_71()
{
  return 28265;
}

uint64_t OUTLINED_FUNCTION_10_73()
{
  return 1918985582;
}

uint64_t OUTLINED_FUNCTION_15_55()
{
  return 0x64657463656C6573;
}

uint64_t OUTLINED_FUNCTION_16_56()
{
  return 0x754E746565727473;
}

uint64_t OUTLINED_FUNCTION_20_37()
{
  return 0x656E6F646E616261;
}

uint64_t OUTLINED_FUNCTION_22_47()
{
  return 0x6E656469666E6F63;
}

uint64_t OUTLINED_FUNCTION_23_40()
{
  return sub_1C03044B0();
}

id OUTLINED_FUNCTION_24_29()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_27_44()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_30_36()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_32_34()
{
  return type metadata accessor for SiriRemembersDB();
}

unint64_t OUTLINED_FUNCTION_34_36()
{
  return 0xD000000000000014;
}

void *OUTLINED_FUNCTION_35_40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = a1;
  *(_QWORD *)(v2 - 104) = v1;
  return _Block_copy((const void *)(v2 - 128));
}

id OUTLINED_FUNCTION_41_24()
{
  uint64_t v0;

  return *(id *)(v0 + 896);
}

uint64_t OUTLINED_FUNCTION_42_24()
{
  return 0x6669636570736E75;
}

uint64_t OUTLINED_FUNCTION_46_24()
{
  return 0x616D7269666E6F63;
}

uint64_t sub_1C02612F8()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[6];
  int v24;
  __int16 v25;
  char v26;
  char v27;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B87E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C03067E0;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = 0;
  *(_BYTE *)(inited + 48) = 2;
  v27 = 0;
  v26 = 1;
  type metadata accessor for DateTime();
  swift_allocObject();
  DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(5, 0, 0, &v27, 7, 0, 0, &v26);
  *(_QWORD *)(inited + 56) = v1;
  *(_OWORD *)(inited + 64) = xmmword_1C0308540;
  *(_BYTE *)(inited + 80) = 0;
  v2 = OUTLINED_FUNCTION_1_119();
  OUTLINED_FUNCTION_0_134(v2, v3, v4, v5, v6, v7, v8, v9, v21, *(int *)v23, *(__int16 *)&v23[4], v26, v27);
  *(_QWORD *)(inited + 88) = v10;
  *(_OWORD *)(inited + 96) = xmmword_1C0308560;
  *(_BYTE *)(inited + 112) = 0;
  v11 = OUTLINED_FUNCTION_1_119();
  OUTLINED_FUNCTION_0_134(v11, v12, v13, v14, v15, v16, v17, v18, v22, v24, v25, v26, v27);
  *(_QWORD *)(inited + 120) = v19;
  sub_1C0099A4C();
  return sub_1C0303DB4();
}

void OUTLINED_FUNCTION_0_134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(6, 0, 0, &a13, 5, 59, 59, &a12);
}

uint64_t OUTLINED_FUNCTION_1_119()
{
  return swift_allocObject();
}

SiriInference::OccupantName __swiftcall OccupantName.init(name:prefix:suffix:)(Swift::String name, SiriInference::OccupantName::Prefix_optional prefix, SiriInference::OccupantName::Suffix_optional suffix)
{
  uint64_t v3;
  char v4;
  char v5;
  SiriInference::OccupantName result;

  v4 = *(_BYTE *)prefix.value;
  v5 = *(_BYTE *)suffix.value;
  *(Swift::String *)v3 = name;
  *(_BYTE *)(v3 + 16) = v4;
  *(_BYTE *)(v3 + 17) = v5;
  result.name = name;
  result.prefix = prefix;
  return result;
}

SiriInference::OccupantName::Prefix_optional __swiftcall OccupantName.Prefix.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (SiriInference::OccupantName::Prefix_optional)sub_1C0218428(v1);
}

uint64_t OccupantName.Prefix.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 1918985582;
  else
    return 29793;
}

SiriInference::OccupantName::Prefix_optional sub_1C0261480(Swift::String *a1)
{
  return OccupantName.Prefix.init(rawValue:)(*a1);
}

uint64_t sub_1C026148C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = OccupantName.Prefix.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C02614B0()
{
  sub_1C0261EF8();
  return sub_1C03040F0();
}

uint64_t sub_1C026150C()
{
  sub_1C0261EF8();
  return sub_1C03040CC();
}

SiriInference::OccupantName::Suffix_optional __swiftcall OccupantName.Suffix.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (SiriInference::OccupantName::Suffix_optional)sub_1C0218428(v1);
}

SiriInference::OccupantName::Suffix_optional sub_1C0261564(Swift::String *a1)
{
  return OccupantName.Suffix.init(rawValue:)(*a1);
}

uint64_t sub_1C0261570()
{
  sub_1C0261EBC();
  return sub_1C03040F0();
}

uint64_t sub_1C02615CC()
{
  sub_1C0261EBC();
  return sub_1C03040CC();
}

uint64_t OccupantName.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void OccupantName.prefix.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

void OccupantName.suffix.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

uint64_t static OccupantName.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a1 + 17);
  v4 = *(unsigned __int8 *)(a2 + 16);
  v5 = *(unsigned __int8 *)(a2 + 17);
  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v6 || (v7 = sub_1C0304A08(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == 2)
    {
      if (v4 != 2)
        return 0;
    }
    else if (v4 == 2 || (sub_1C025F120(v2 & 1, v4 & 1) & 1) == 0)
    {
      return 0;
    }
    result = v5 == 2 && v3 == 2;
    if (v3 != 2 && v5 != 2)
      return sub_1C025F120(v3 & 1, v5 & 1);
  }
  return result;
}

uint64_t sub_1C0261724()
{
  sub_1C0261AA0();
  return sub_1C0304BAC();
}

uint64_t sub_1C026174C()
{
  sub_1C0261AA0();
  return sub_1C0304BB8();
}

void OccupantName.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  int v15;
  int v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2248);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 *)(v1 + 16);
  v15 = *(unsigned __int8 *)(v1 + 17);
  v16 = v8;
  v9 = a1[3];
  v10 = a1;
  v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_1C0261AA0();
  sub_1C0304BA0();
  v21 = 0;
  sub_1C0304960();
  if (!v2)
  {
    v13 = v15;
    v20 = v16;
    v19 = 1;
    sub_1C0261ADC();
    OUTLINED_FUNCTION_2_30();
    v18 = v13;
    v17 = 2;
    sub_1C0261B18();
    OUTLINED_FUNCTION_2_30();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  OUTLINED_FUNCTION_28_0();
}

void OccupantName.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2268);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0261AA0();
  sub_1C0304B88();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    v6 = sub_1C03048AC();
    v8 = v7;
    v9 = sub_1C0261B54();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_4_21();
    if (v9)
    {
      OUTLINED_FUNCTION_3_27();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0261B90();
      OUTLINED_FUNCTION_4_21();
      OUTLINED_FUNCTION_3_27();
      *(_QWORD *)a2 = v6;
      *(_QWORD *)(a2 + 8) = v8;
      *(_BYTE *)(a2 + 16) = v11;
      *(_BYTE *)(a2 + 17) = v10;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28_0();
}

void sub_1C0261A74(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  OccupantName.init(from:)(a1, a2);
}

void sub_1C0261A88(_QWORD *a1)
{
  OccupantName.encode(to:)(a1);
}

unint64_t sub_1C0261AA0()
{
  unint64_t result;

  result = qword_1EF5C2250;
  if (!qword_1EF5C2250)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0321BD0, &type metadata for OccupantName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C2250);
  }
  return result;
}

unint64_t sub_1C0261ADC()
{
  unint64_t result;

  result = qword_1EF5C2258;
  if (!qword_1EF5C2258)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for OccupantName.Prefix, &type metadata for OccupantName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C2258);
  }
  return result;
}

unint64_t sub_1C0261B18()
{
  unint64_t result;

  result = qword_1EF5C2260;
  if (!qword_1EF5C2260)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for OccupantName.Suffix, &type metadata for OccupantName.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5C2260);
  }
  return result;
}

unint64_t sub_1C0261B54()
{
  unint64_t result;

  result = qword_1EF5C2270;
  if (!qword_1EF5C2270)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for OccupantName.Prefix, &type metadata for OccupantName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C2270);
  }
  return result;
}

unint64_t sub_1C0261B90()
{
  unint64_t result;

  result = qword_1EF5C2278;
  if (!qword_1EF5C2278)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for OccupantName.Suffix, &type metadata for OccupantName.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5C2278);
  }
  return result;
}

unint64_t sub_1C0261BD0()
{
  unint64_t result;

  result = qword_1EF5C2280;
  if (!qword_1EF5C2280)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for OccupantName.Prefix, &type metadata for OccupantName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C2280);
  }
  return result;
}

unint64_t sub_1C0261C10()
{
  unint64_t result;

  result = qword_1EF5C2288;
  if (!qword_1EF5C2288)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for OccupantName.Suffix, &type metadata for OccupantName.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5C2288);
  }
  return result;
}

void type metadata accessor for OccupantName()
{
  OUTLINED_FUNCTION_17_2();
}

void type metadata accessor for OccupantName.Prefix()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t _s13SiriInference12OccupantNameV6PrefixOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0261CB4 + 4 * byte_1C0321865[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0261CE8 + 4 * byte_1C0321860[v4]))();
}

uint64_t sub_1C0261CE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0261CF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0261CF8);
  return result;
}

uint64_t sub_1C0261D04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0261D0CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0261D10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0261D18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for OccupantName.Suffix()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t storeEnumTagSinglePayload for OccupantName.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0261D7C + 4 * byte_1C032186F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0261DB0 + 4 * byte_1C032186A[v4]))();
}

uint64_t sub_1C0261DB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0261DB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0261DC0);
  return result;
}

uint64_t sub_1C0261DCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0261DD4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0261DD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0261DE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OccupantName.CodingKeys()
{
  return &type metadata for OccupantName.CodingKeys;
}

unint64_t sub_1C0261E00()
{
  unint64_t result;

  result = qword_1EF5C2290;
  if (!qword_1EF5C2290)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0321BA8, &type metadata for OccupantName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C2290);
  }
  return result;
}

unint64_t sub_1C0261E40()
{
  unint64_t result;

  result = qword_1EF5C2298;
  if (!qword_1EF5C2298)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0321B18, &type metadata for OccupantName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C2298);
  }
  return result;
}

unint64_t sub_1C0261E80()
{
  unint64_t result;

  result = qword_1EF5C22A0;
  if (!qword_1EF5C22A0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0321B40, &type metadata for OccupantName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C22A0);
  }
  return result;
}

unint64_t sub_1C0261EBC()
{
  unint64_t result;

  result = qword_1EF5C22A8;
  if (!qword_1EF5C22A8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for OccupantName.Suffix, &type metadata for OccupantName.Suffix);
    atomic_store(result, (unint64_t *)&qword_1EF5C22A8);
  }
  return result;
}

unint64_t sub_1C0261EF8()
{
  unint64_t result;

  result = qword_1EF5C22B0;
  if (!qword_1EF5C22B0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for OccupantName.Prefix, &type metadata for OccupantName.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C22B0);
  }
  return result;
}

char *static SignalProcessingPluginRunner.metricName.getter()
{
  OUTLINED_FUNCTION_55_1();
  return off_1EF5C22B8;
}

uint64_t static SignalProcessingPluginRunner.metricName.setter(char *a1, uint64_t a2, char a3)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_55_1();
  off_1EF5C22B8 = a1;
  unk_1EF5C22C0 = a2;
  byte_1EF5C22C8 = a3;
  return result;
}

uint64_t (*static SignalProcessingPluginRunner.metricName.modify())()
{
  OUTLINED_FUNCTION_55_1();
  return j__swift_endAccess;
}

void SignalProcessingPluginRunner.__allocating_init(withProcessingPlugin:activity:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  sub_1C0048FE0(a1, (uint64_t)v5 + OBJC_IVAR____TtC13SiriInference28SignalProcessingPluginRunner_plugin);
  XPCActivityOperation.init(activity:)(a2);
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  OUTLINED_FUNCTION_37_0();
}

void SignalProcessingPluginRunner.init(withProcessingPlugin:activity:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C0048FE0(a1, v2 + OBJC_IVAR____TtC13SiriInference28SignalProcessingPluginRunner_plugin);
  XPCActivityOperation.init(activity:)(a2);
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  OUTLINED_FUNCTION_37_0();
}

Swift::Void __swiftcall SignalProcessingPluginRunner.main()()
{
  void *v0;
  void *v1;
  uint64_t DynamicType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[5];

  v1 = v0;
  sub_1C0048FE0((uint64_t)v0 + OBJC_IVAR____TtC13SiriInference28SignalProcessingPluginRunner_plugin, (uint64_t)v11);
  __swift_project_boxed_opaque_existential_1(v11, v11[3]);
  DynamicType = swift_getDynamicType();
  v3 = v11[4];
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(DynamicType, v3);
  v6 = v5;
  v8 = v7;
  v9 = sub_1C03046E4();
  sub_1C01D28C4(v9, v10, v4, v6, v8, v1);
  swift_bridgeObjectRelease();
}

void sub_1C0262174(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v14 = sub_1C0303B74();
  MEMORY[0x1E0C80A78](v14);
  if (qword_1ED728440 != -1)
    swift_once();
  v7 = (id)qword_1ED729668;
  sub_1C0303B68();
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C0305B60;
  v9 = sub_1C03046E4();
  v11 = v10;
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v11;
  sub_1C0303B50();
  swift_bridgeObjectRelease();
  sub_1C026234C(a1, a2, a3, a4);
  sub_1C03043D8();
  OUTLINED_FUNCTION_0_135();
  OUTLINED_FUNCTION_1_120();
  if (v13)
    __break(1u);
  else

}

void sub_1C026234C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v4;
  void *v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint8_t *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v5 = v4;
  if (qword_1ED728430 != -1)
    swift_once();
  v7 = sub_1C0303B98();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED729650);
  v8 = sub_1C0303B80();
  v9 = sub_1C03042E8();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v17 = v11;
    *(_DWORD *)v10 = 136315138;
    v12 = sub_1C03046E4();
    sub_1C003E6D8(v12, v13, &v17);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v8, v9, "about to run signal processing plugin with id: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v11, -1, -1);
    v14 = v10;
    v5 = v4;
    MEMORY[0x1C3B98378](v14, -1, -1);
  }

  v15 = a4;
  sub_1C0262578();

  sub_1C0071A20();
  v16 = sub_1C0303DB4();
  sub_1C01A7564(v5, v5 != 0, v16, 2);
  swift_bridgeObjectRelease();
  sub_1C00A6AAC(v5, v5 != 0);
}

uint64_t sub_1C0262578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13SiriInference28SignalProcessingPluginRunner_plugin + 24);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13SiriInference28SignalProcessingPluginRunner_plugin + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC13SiriInference28SignalProcessingPluginRunner_plugin), v1);
  v5 = v0;
  return (*(uint64_t (**)(uint64_t (*)(), uint64_t *, uint64_t, uint64_t))(v2 + 24))(sub_1C0262750, &v4, v1, v2);
}

id SignalProcessingPluginRunner.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SignalProcessingPluginRunner.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void SignalProcessingPluginRunner.__allocating_init(activity:)()
{
  OUTLINED_FUNCTION_2_119();
  __break(1u);
}

void SignalProcessingPluginRunner.init(activity:)()
{
  OUTLINED_FUNCTION_2_119();
  __break(1u);
}

uint64_t sub_1C02626B4()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_0Tm(v0 + OBJC_IVAR____TtC13SiriInference28SignalProcessingPluginRunner_plugin);
}

id SignalProcessingPluginRunner.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *sub_1C0262708()
{
  return static SignalProcessingPluginRunner.metricName.getter();
}

uint64_t type metadata accessor for SignalProcessingPluginRunner()
{
  return objc_opt_self();
}

uint64_t method lookup function for SignalProcessingPluginRunner()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SignalProcessingPluginRunner.__allocating_init(withProcessingPlugin:activity:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1C0262750()
{
  return sub_1C02E854C() & 1;
}

uint64_t OUTLINED_FUNCTION_0_135()
{
  return sub_1C0303B5C();
}

uint64_t OUTLINED_FUNCTION_1_120()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 88) + 8))(v0, *(_QWORD *)(v1 - 72));
}

uint64_t OUTLINED_FUNCTION_2_119()
{
  return _swift_stdlib_reportUnimplementedInitializer();
}

uint64_t sub_1C02627B0(_QWORD *a1)
{
  uint64_t v1;
  id v2;
  _QWORD *v3;

  if (!a1)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 112);
    type metadata accessor for TrialManager();
    v3 = (_QWORD *)swift_allocObject();
    a1 = sub_1C008CF1C((uint64_t)v2, 0xD000000000000031, 0x80000001C0330890, v3);
  }
  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

id sub_1C0262834()
{
  return sub_1C008E4B0(0xD000000000000017, 0x80000001C0335060);
}

uint64_t type metadata accessor for AppResolverTrialConfigProviderMessages()
{
  return objc_opt_self();
}

uint64_t Always1pRule.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t Always1pRule.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0262888(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch();
}

uint64_t sub_1C02628A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    sub_1C004F444();
    sub_1C004F480();
    swift_bridgeObjectRetain();
    v3 = (uint64_t *)(v1 + 40);
    while (1)
    {
      v4 = *(v3 - 1);
      v5 = *v3;
      *(_QWORD *)(v0 + 16) = v4;
      *(_QWORD *)(v0 + 24) = v5;
      *(_QWORD *)(v0 + 32) = 0x6C7070612E6D6F63;
      *(_QWORD *)(v0 + 40) = 0xE900000000000065;
      swift_bridgeObjectRetain();
      if ((sub_1C0303E44() & 1) != 0)
        break;
      v3 += 3;
      swift_bridgeObjectRelease();
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    v8 = *(_QWORD **)(v0 + 48);
    swift_bridgeObjectRelease();
    v7 = 0;
    *v8 = v4;
    v8[1] = v5;
  }
  else
  {
LABEL_6:
    v6 = *(_QWORD **)(v0 + 48);
    *v6 = 0;
    v6[1] = 0;
    v7 = 3;
  }
  *(_BYTE *)(*(_QWORD *)(v0 + 48) + 16) = v7;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C02629C0()
{
  return 0x7031737961776C41;
}

uint64_t Always1pRule.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t Always1pRule.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C02629F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C008E870;
  return sub_1C0262888(a1, a2);
}

uint64_t type metadata accessor for Always1pRule()
{
  return objc_opt_self();
}

uint64_t method lookup function for Always1pRule()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Always1pRule.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of Always1pRule.resolve(features:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 88) + *(_QWORD *)(*(_QWORD *)v2 + 88));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1C008E870;
  return v8(a1, a2);
}

uint64_t dispatch thunk of Always1pRule.getName()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

unint64_t DateTime.Date.Holiday.HolidayDateType.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 4;
  if (result < 4)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t DateTime.Date.Holiday.HolidayDateType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1C0262B24()
{
  unint64_t result;

  result = qword_1EF5C2470;
  if (!qword_1EF5C2470)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.Holiday.HolidayDateType, &type metadata for DateTime.Date.Holiday.HolidayDateType);
    atomic_store(result, (unint64_t *)&qword_1EF5C2470);
  }
  return result;
}

unint64_t sub_1C0262B60@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return DateTime.Date.Holiday.HolidayDateType.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C0262B68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DateTime.Date.Holiday.HolidayDateType.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C0262B8C()
{
  sub_1C0262D00();
  return sub_1C03040FC();
}

uint64_t sub_1C0262BE8()
{
  sub_1C0262D00();
  return sub_1C03040D8();
}

uint64_t _s15HolidayDateTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C0262C80 + 4 * byte_1C0321CD5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C0262CB4 + 4 * byte_1C0321CD0[v4]))();
}

uint64_t sub_1C0262CB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0262CBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0262CC4);
  return result;
}

uint64_t sub_1C0262CD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0262CD8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C0262CDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0262CE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DateTime.Date.Holiday.HolidayDateType()
{
  return &type metadata for DateTime.Date.Holiday.HolidayDateType;
}

unint64_t sub_1C0262D00()
{
  unint64_t result;

  result = qword_1EF5C2478;
  if (!qword_1EF5C2478)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.Holiday.HolidayDateType, &type metadata for DateTime.Date.Holiday.HolidayDateType);
    atomic_store(result, (unint64_t *)&qword_1EF5C2478);
  }
  return result;
}

uint64_t sub_1C0262D3C()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE v75[6];
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  __int16 v81;
  __int16 v82;
  __int16 v83;
  __int16 v84;
  __int16 v85;
  char v86;
  char v87;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B87E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C030A3E0;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = 0;
  *(_BYTE *)(inited + 48) = 2;
  v87 = 1;
  v86 = 1;
  type metadata accessor for DateTime();
  OUTLINED_FUNCTION_7_3();
  DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(12, 0, 0, &v87, 5, 0, 0, &v86);
  *(_QWORD *)(inited + 56) = v1;
  *(_OWORD *)(inited + 64) = xmmword_1C0308540;
  *(_BYTE *)(inited + 80) = 0;
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_3_23(12, 0, 0, &v87, 5, v2, v3, &v86);
  *(_QWORD *)(inited + 88) = v4;
  *(_OWORD *)(inited + 96) = xmmword_1C03156F0;
  *(_BYTE *)(inited + 112) = 0;
  v5 = OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_1_121(v5, v6, v7, v8, v9, v10, v11, v12, v69, *(int *)v75, *(__int16 *)&v75[4], v86, v87);
  *(_QWORD *)(inited + 120) = v13;
  *(_OWORD *)(inited + 128) = xmmword_1C0308560;
  *(_BYTE *)(inited + 144) = 0;
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_3_23(12, 0, 0, &v87, 5, v14, v15, &v86);
  *(_QWORD *)(inited + 152) = v16;
  *(_OWORD *)(inited + 160) = xmmword_1C0315700;
  *(_BYTE *)(inited + 176) = 0;
  v17 = OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_1_121(v17, v18, v19, v20, v21, v22, v23, v24, v70, v76, v81, v86, v87);
  *(_QWORD *)(inited + 184) = v25;
  *(_OWORD *)(inited + 192) = xmmword_1C0308570;
  *(_BYTE *)(inited + 208) = 0;
  v26 = OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_4_99(v26, v27, v28, v29, v30, v31, v32, v33, v71, v77, v82, v86, v87);
  *(_QWORD *)(inited + 216) = v34;
  *(_OWORD *)(inited + 224) = xmmword_1C0308580;
  *(_BYTE *)(inited + 240) = 0;
  v35 = OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_1_121(v35, v36, v37, v38, v39, v40, v41, v42, v72, v78, v83, v86, v87);
  *(_QWORD *)(inited + 248) = v43;
  *(_OWORD *)(inited + 256) = xmmword_1C0308590;
  *(_BYTE *)(inited + 272) = 0;
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_3_23(12, 0, 0, &v87, 1, v44, v45, &v86);
  *(_QWORD *)(inited + 280) = v46;
  *(_OWORD *)(inited + 288) = xmmword_1C03085A0;
  *(_BYTE *)(inited + 304) = 0;
  v47 = OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_4_99(v47, v48, v49, v50, v51, v52, v53, v54, v73, v79, v84, v86, v87);
  *(_QWORD *)(inited + 312) = v55;
  *(_OWORD *)(inited + 320) = xmmword_1C03089A0;
  *(_BYTE *)(inited + 336) = 0;
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_3_23(3, 0, 0, &v87, 7, v56, v57, &v86);
  *(_QWORD *)(inited + 344) = v58;
  *(_OWORD *)(inited + 352) = xmmword_1C0315710;
  *(_BYTE *)(inited + 368) = 0;
  v87 = 1;
  v86 = 1;
  v59 = OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_1_121(v59, v60, v61, v62, v63, v64, v65, v66, v74, v80, v85, v86, v87);
  *(_QWORD *)(inited + 376) = v67;
  sub_1C0099A4C();
  return sub_1C0303DB4();
}

void OUTLINED_FUNCTION_1_121(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(12, 0, 0, &a13, 11, 59, 59, &a12);
}

void OUTLINED_FUNCTION_4_99(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(12, 0, 0, &a13, 6, 0, 0, &a12);
}

void *sub_1C0262FE4(unint64_t a1, char a2)
{
  id v4;
  void *v5;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D99790]), sel_init);
  v5 = v4;
  if (a1 != 2)
    objc_msgSend(v4, sel_setIsAsrE3Invoked_, a1 & 1);
  if ((a2 & 1) == 0)
    objc_msgSend(v5, sel_setNumEuclidCandidates_, HIDWORD(a1));
  return v5;
}

id sub_1C0263064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  id v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  void *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  id v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t i;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  char v60;
  uint64_t v61;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C0301D5C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v53 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v53 - v13;
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D99780]), sel_init);
  sub_1C0044AC4(v1, (uint64_t)v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    sub_1C0044B38((uint64_t)v4);
    if (!v15)
      goto LABEL_13;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v14, v4, v5);
  if (v15)
  {
    sub_1C00447B0(0, (unint64_t *)&qword_1EF5B87F0);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v12, v14, v5);
    v16 = v15;
    v17 = sub_1C0044824((uint64_t)v12);
    objc_msgSend(v16, sel_setTemplateId_, v17);

  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  if (v15)
  {
LABEL_7:
    v18 = *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_3_124() + 20));
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      v54 = v1;
      OUTLINED_FUNCTION_12_59(MEMORY[0x1E0DEE9D8]);
      swift_bridgeObjectRetain();
      sub_1C030475C();
      v20 = sub_1C00447B0(0, (unint64_t *)&qword_1EF5B87F0);
      v21 = *(unsigned __int8 *)(v6 + 80);
      v53 = v18;
      v22 = v18 + ((v21 + 32) & ~v21);
      v56 = *(_QWORD *)(v6 + 72);
      v57 = v20;
      v23 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      do
      {
        v23(v12, v22, v5);
        v23(v9, (uint64_t)v12, v5);
        sub_1C0044824((uint64_t)v9);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
        sub_1C0304738();
        OUTLINED_FUNCTION_5_91();
        OUTLINED_FUNCTION_11_75();
        sub_1C0304744();
        v22 += v56;
        --v19;
      }
      while (v19);
      v24 = (id)swift_bridgeObjectRelease();
      v1 = v54;
      v15 = v55;
    }
    else
    {
      v24 = v15;
    }
    OUTLINED_FUNCTION_13_60((uint64_t)v24, v25, (unint64_t *)&qword_1EF5B87F0, 0x1E0D9A4F8, (SEL *)&selRef_setMatchedTemplateIds_);

  }
LABEL_13:
  v26 = OUTLINED_FUNCTION_3_124();
  v27 = (int *)v26;
  if (v15)
  {
    v28 = v1 + *(int *)(v26 + 24);
    if ((*(_BYTE *)(v28 + 29) & 1) == 0)
    {
      v29 = *(_BYTE *)(v28 + 28);
      v31 = *(_QWORD *)(v28 + 8);
      v30 = *(_QWORD *)(v28 + 16);
      v32 = *(_QWORD *)v28;
      v33 = v15;
      LOBYTE(v61) = BYTE4(v32) & 1;
      v60 = BYTE4(v31) & 1;
      v59 = BYTE4(v30) & 1;
      v58 = v29 & 1;
      sub_1C02635E8();
      v35 = v34;
      objc_msgSend(v33, sel_setEuclidScoreStatistics_, v34);

    }
  }
  if (v15)
  {
    v36 = v1 + v27[7];
    if (*(_QWORD *)(v36 + 8) != 1)
    {
      v37 = *(_BYTE *)(v36 + 28);
      v38 = *(_QWORD *)(v36 + 16);
      v39 = v15;
      LOBYTE(v61) = BYTE4(v38) & 1;
      v60 = v37 & 1;
      sub_1C0263688();
      v41 = v40;
      objc_msgSend(v39, sel_setEuclidTrialParameters_, v40);

    }
  }
  v42 = *(_QWORD *)(v1 + v27[8]);
  v43 = *(_QWORD *)(v42 + 16);
  if (v43)
  {
    v44 = swift_bridgeObjectRetain();
    for (i = 0; i != v43; ++i)
    {
      if (v15)
        v44 = (uint64_t)OUTLINED_FUNCTION_46_20(v44, sel_addEuclidEntityTypeMatched_);
    }
    v26 = swift_bridgeObjectRelease();
  }
  if (*(_BYTE *)(v1 + v27[9]) != 2)
    v26 = (uint64_t)OUTLINED_FUNCTION_46_20(v26, sel_setIsLmePresent_);
  if (v15)
  {
    v46 = *(_QWORD *)(v1 + v27[10]);
    v47 = *(_QWORD *)(v46 + 16);
    if (v47)
    {
      OUTLINED_FUNCTION_12_59(MEMORY[0x1E0DEE9D8]);
      swift_bridgeObjectRetain();
      sub_1C030475C();
      v48 = 0;
      do
      {
        v49 = v48 + 1;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInt_, *(unsigned int *)(v46 + 4 * v48 + 32));
        sub_1C0304738();
        OUTLINED_FUNCTION_5_91();
        OUTLINED_FUNCTION_11_75();
        sub_1C0304744();
        v48 = v49;
      }
      while (v47 != v49);
      v50 = (id)swift_bridgeObjectRelease();
      v15 = v55;
    }
    else
    {
      v50 = v15;
    }
    OUTLINED_FUNCTION_13_60((uint64_t)v50, v51, (unint64_t *)&qword_1ED727C50, 0x1E0CB37E8, (SEL *)&selRef_setTokenWiseAsrConfidences_);

  }
  if ((*(_BYTE *)(v1 + v27[11] + 4) & 1) == 0)
    OUTLINED_FUNCTION_46_20(v26, sel_setNumRowsVectorDb_);
  return v15;
}

uint64_t type metadata accessor for InferenceEuclidDebugMetrics(uint64_t a1)
{
  return sub_1C003CD30(a1, qword_1EF5C24D8);
}

void sub_1C02635E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  OUTLINED_FUNCTION_7_90();
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D99788]), sel_init);
  if ((v3 & 0x100000000) != 0)
  {
    if ((v2 & 0x100000000) != 0)
      goto LABEL_3;
  }
  else
  {
    v4 = OUTLINED_FUNCTION_50_16((uint64_t)v4, sel_setMinScore_);
    if ((v2 & 0x100000000) != 0)
    {
LABEL_3:
      if ((v1 & 0x100000000) != 0)
        goto LABEL_4;
LABEL_9:
      v4 = OUTLINED_FUNCTION_50_16((uint64_t)v4, sel_setMedianScore_);
      if ((v0 & 0x100000000) != 0)
        goto LABEL_6;
      goto LABEL_5;
    }
  }
  v4 = OUTLINED_FUNCTION_50_16((uint64_t)v4, sel_setMaxScore_);
  if ((v1 & 0x100000000) == 0)
    goto LABEL_9;
LABEL_4:
  if ((v0 & 0x100000000) == 0)
LABEL_5:
    OUTLINED_FUNCTION_50_16((uint64_t)v4, sel_setMeanScore_);
LABEL_6:
  OUTLINED_FUNCTION_17_1();
}

void sub_1C0263688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;

  OUTLINED_FUNCTION_7_90();
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D99798]), sel_init);
  if (v2 && v4)
  {
    v5 = v4;
    sub_1C0263714(v3, v2, v5);

  }
  if ((v1 & 0x100000000) == 0)
    v4 = OUTLINED_FUNCTION_50_16((uint64_t)v4, sel_setEuclidScoreThreshold_);
  if ((v0 & 0x100000000) == 0)
    OUTLINED_FUNCTION_50_16((uint64_t)v4, sel_setEuclidAsrConfidenceThreshold_);
  OUTLINED_FUNCTION_17_1();
}

void sub_1C0263714(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1C0303E8C();
  objc_msgSend(a3, sel_setEuclidModelVersion_, v4);

}

void sub_1C0263758(uint64_t a1, void *a2, unint64_t *a3, uint64_t a4, SEL *a5)
{
  id v7;

  sub_1C00447B0(0, a3);
  v7 = (id)sub_1C0304120();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, *a5, v7);

}

void type metadata accessor for EuclidEntityTypeMatched()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t *sub_1C02637D4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C0301D5C();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v10 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v11 = (_OWORD *)((char *)a1 + v10);
    v12 = (_OWORD *)((char *)a2 + v10);
    *v11 = *v12;
    *(_OWORD *)((char *)v11 + 14) = *(_OWORD *)((char *)v12 + 14);
    v13 = a3[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(uint64_t *)((char *)a2 + v13 + 8);
    swift_bridgeObjectRetain();
    if (v16 == 1)
    {
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *(_OWORD *)(v14 + 13) = *(_OWORD *)(v15 + 13);
    }
    else
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *((_QWORD *)v14 + 1) = v16;
      *((_DWORD *)v14 + 4) = *((_DWORD *)v15 + 4);
      v14[20] = v15[20];
      *((_DWORD *)v14 + 6) = *((_DWORD *)v15 + 6);
      v14[28] = v15[28];
      swift_bridgeObjectRetain();
    }
    v17 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
    v18 = a3[11];
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    *(_DWORD *)v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C0263970(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C0301D5C();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 28) + 8) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *sub_1C0263A04(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;

  v6 = sub_1C0301D5C();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 14) = *(_OWORD *)(v10 + 14);
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *(_QWORD *)&a2[v11 + 8];
  swift_bridgeObjectRetain();
  if (v14 == 1)
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 13) = *(_OWORD *)(v13 + 13);
  }
  else
  {
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *((_QWORD *)v12 + 1) = v14;
    *((_DWORD *)v12 + 4) = *((_DWORD *)v13 + 4);
    v12[20] = v13[20];
    *((_DWORD *)v12 + 6) = *((_DWORD *)v13 + 6);
    v12[28] = v13[28];
    swift_bridgeObjectRetain();
  }
  v15 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  a1[v15] = a2[v15];
  v16 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v17[4] = v18[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_1C0263B74(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int v29;

  v6 = sub_1C0301D5C();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 14) = *(_OWORD *)(v13 + 14);
  *(_OWORD *)v12 = v14;
  v15 = a3[7];
  v16 = (uint64_t)&a1[v15];
  v17 = &a2[v15];
  v18 = *(_QWORD *)&a1[v15 + 8];
  v19 = *(_QWORD *)&a2[v15 + 8];
  if (v18 == 1)
  {
    if (v19 == 1)
    {
      v20 = *(_OWORD *)v17;
      *(_OWORD *)(v16 + 13) = *(_OWORD *)(v17 + 13);
      *(_OWORD *)v16 = v20;
    }
    else
    {
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
      v22 = *((_DWORD *)v17 + 4);
      *(_BYTE *)(v16 + 20) = v17[20];
      *(_DWORD *)(v16 + 16) = v22;
      v23 = *((_DWORD *)v17 + 6);
      *(_BYTE *)(v16 + 28) = v17[28];
      *(_DWORD *)(v16 + 24) = v23;
      swift_bridgeObjectRetain();
    }
  }
  else if (v19 == 1)
  {
    sub_1C0098780(v16);
    v21 = *(_OWORD *)(v17 + 13);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 13) = v21;
  }
  else
  {
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v24 = *((_DWORD *)v17 + 4);
    *(_BYTE *)(v16 + 20) = v17[20];
    *(_DWORD *)(v16 + 16) = v24;
    v25 = *((_DWORD *)v17 + 6);
    *(_BYTE *)(v16 + 28) = v17[28];
    *(_DWORD *)(v16 + 24) = v25;
  }
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[9]] = a2[a3[9]];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a3[11];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = *(_DWORD *)v28;
  v27[4] = v28[4];
  *(_DWORD *)v27 = v29;
  return a1;
}

char *sub_1C0263DCC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;

  v6 = sub_1C0301D5C();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 14) = *(_OWORD *)(v10 + 14);
  v11 = a3[7];
  v12 = a3[8];
  v13 = &a1[v11];
  v14 = &a2[v11];
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 13) = *(_OWORD *)(v14 + 13);
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  v15 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  *(_QWORD *)&a1[v15] = *(_QWORD *)&a2[v15];
  v16 = a3[11];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v17[4] = v18[4];
  *(_DWORD *)v17 = *(_DWORD *)v18;
  return a1;
}

char *sub_1C0263EE4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  v6 = sub_1C0301D5C();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  swift_bridgeObjectRelease();
  v11 = a3[6];
  v12 = a3[7];
  v13 = &a1[v11];
  v14 = &a2[v11];
  *(_OWORD *)(v13 + 14) = *(_OWORD *)(v14 + 14);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v15 = &a1[v12];
  v16 = &a2[v12];
  if (*(_QWORD *)&a1[v12 + 8] != 1)
  {
    v17 = *((_QWORD *)v16 + 1);
    if (v17 != 1)
    {
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *((_QWORD *)v15 + 1) = v17;
      swift_bridgeObjectRelease();
      *((_DWORD *)v15 + 4) = *((_DWORD *)v16 + 4);
      v15[20] = v16[20];
      *((_DWORD *)v15 + 6) = *((_DWORD *)v16 + 6);
      v15[28] = v16[28];
      goto LABEL_12;
    }
    sub_1C0098780((uint64_t)&a1[v12]);
  }
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 13) = *(_OWORD *)(v16 + 13);
LABEL_12:
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  v18 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  *(_QWORD *)&a1[v18] = *(_QWORD *)&a2[v18];
  swift_bridgeObjectRelease();
  v19 = a3[11];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  return a1;
}

uint64_t sub_1C02640B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C02640C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    OUTLINED_FUNCTION_46(a1, a2, v4);
  else
    OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C0264130()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C026413C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    OUTLINED_FUNCTION_49_3(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    OUTLINED_FUNCTION_37_0();
  }
}

void sub_1C02641A4()
{
  unint64_t v0;

  sub_1C0264244();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1C0264244()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF5BD580)
  {
    sub_1C0301D5C();
    v0 = sub_1C030448C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF5BD580);
  }
}

uint64_t sub_1C0264298(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C02642E4(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  v5 = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = v5;
  return a1;
}

__n128 __swift_memcpy29_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1C0264364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  return a1;
}

uint64_t sub_1C02643B8(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 29))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C026440C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 29) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 29) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for EuclidTrialParameters()
{
  OUTLINED_FUNCTION_17_2();
}

_QWORD *sub_1C0264474(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v5 = *(int *)(a3 + 20);
    v6 = (char *)(a1 + v5);
    v7 = (char *)a2 + v5;
    v8 = sub_1C0301D5C();
    if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
    }
    v11 = (int *)type metadata accessor for InferenceEuclidDebugMetrics(0);
    *(_QWORD *)&v6[v11[5]] = *(_QWORD *)&v7[v11[5]];
    v12 = v11[6];
    v13 = &v6[v12];
    v14 = &v7[v12];
    *(_OWORD *)(v13 + 14) = *(_OWORD *)(v14 + 14);
    *(_OWORD *)v13 = *(_OWORD *)v14;
    v15 = v11[7];
    v16 = &v6[v15];
    v17 = &v7[v15];
    v18 = *(_QWORD *)&v7[v15 + 8];
    swift_bridgeObjectRetain();
    if (v18 == 1)
    {
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *(_OWORD *)(v16 + 13) = *(_OWORD *)(v17 + 13);
    }
    else
    {
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *((_QWORD *)v16 + 1) = v18;
      *((_DWORD *)v16 + 4) = *((_DWORD *)v17 + 4);
      v16[20] = v17[20];
      *((_DWORD *)v16 + 6) = *((_DWORD *)v17 + 6);
      v16[28] = v17[28];
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)&v6[v11[8]] = *(_QWORD *)&v7[v11[8]];
    v6[v11[9]] = v7[v11[9]];
    *(_QWORD *)&v6[v11[10]] = *(_QWORD *)&v7[v11[10]];
    v19 = v11[11];
    v20 = &v6[v19];
    v21 = &v7[v19];
    *(_DWORD *)v20 = *(_DWORD *)v21;
    v20[4] = v21[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_1C0264644(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1C0301D5C();
  if (!__swift_getEnumTagSinglePayload(v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = type metadata accessor for InferenceEuclidDebugMetrics(0);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + *(int *)(v4 + 28) + 8) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C02646DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = (char *)(a1 + v4);
  v6 = (char *)(a2 + v4);
  v7 = sub_1C0301D5C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  }
  v9 = (int *)type metadata accessor for InferenceEuclidDebugMetrics(0);
  *(_QWORD *)&v5[v9[5]] = *(_QWORD *)&v6[v9[5]];
  v10 = v9[6];
  v11 = &v5[v10];
  v12 = &v6[v10];
  *(_OWORD *)(v11 + 14) = *(_OWORD *)(v12 + 14);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  v13 = v9[7];
  v14 = &v5[v13];
  v15 = &v6[v13];
  v16 = *(_QWORD *)&v6[v13 + 8];
  swift_bridgeObjectRetain();
  if (v16 == 1)
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + 13) = *(_OWORD *)(v15 + 13);
  }
  else
  {
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    *((_DWORD *)v14 + 4) = *((_DWORD *)v15 + 4);
    v14[20] = v15[20];
    *((_DWORD *)v14 + 6) = *((_DWORD *)v15 + 6);
    v14[28] = v15[28];
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)&v5[v9[8]] = *(_QWORD *)&v6[v9[8]];
  v5[v9[9]] = v6[v9[9]];
  *(_QWORD *)&v5[v9[10]] = *(_QWORD *)&v6[v9[10]];
  v17 = v9[11];
  v18 = &v5[v17];
  v19 = &v6[v17];
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C0264880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  int EnumTagSinglePayload;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int v32;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_DWORD *)(a2 + 4);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 4) = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)(a1 + v5);
  v7 = (char *)(a2 + v5);
  v8 = sub_1C0301D5C();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v8);
  v10 = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8);
  if (EnumTagSinglePayload)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v11 = *(_QWORD *)(v8 - 8);
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v8);
LABEL_6:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v6, v7, v8);
LABEL_7:
  v13 = (int *)type metadata accessor for InferenceEuclidDebugMetrics(0);
  *(_QWORD *)&v6[v13[5]] = *(_QWORD *)&v7[v13[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v13[6];
  v15 = &v6[v14];
  v16 = &v7[v14];
  v17 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 14) = *(_OWORD *)(v16 + 14);
  *(_OWORD *)v15 = v17;
  v18 = v13[7];
  v19 = (uint64_t)&v6[v18];
  v20 = &v7[v18];
  v21 = *(_QWORD *)&v6[v18 + 8];
  v22 = *(_QWORD *)&v7[v18 + 8];
  if (v21 == 1)
  {
    if (v22 == 1)
    {
      v23 = *(_OWORD *)v20;
      *(_OWORD *)(v19 + 13) = *(_OWORD *)(v20 + 13);
      *(_OWORD *)v19 = v23;
    }
    else
    {
      *(_QWORD *)v19 = *(_QWORD *)v20;
      *(_QWORD *)(v19 + 8) = *((_QWORD *)v20 + 1);
      v25 = *((_DWORD *)v20 + 4);
      *(_BYTE *)(v19 + 20) = v20[20];
      *(_DWORD *)(v19 + 16) = v25;
      v26 = *((_DWORD *)v20 + 6);
      *(_BYTE *)(v19 + 28) = v20[28];
      *(_DWORD *)(v19 + 24) = v26;
      swift_bridgeObjectRetain();
    }
  }
  else if (v22 == 1)
  {
    sub_1C0098780(v19);
    v24 = *(_OWORD *)(v20 + 13);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 13) = v24;
  }
  else
  {
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *(_QWORD *)(v19 + 8) = *((_QWORD *)v20 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v27 = *((_DWORD *)v20 + 4);
    *(_BYTE *)(v19 + 20) = v20[20];
    *(_DWORD *)(v19 + 16) = v27;
    v28 = *((_DWORD *)v20 + 6);
    *(_BYTE *)(v19 + 28) = v20[28];
    *(_DWORD *)(v19 + 24) = v28;
  }
  *(_QWORD *)&v6[v13[8]] = *(_QWORD *)&v7[v13[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v13[9]] = v7[v13[9]];
  *(_QWORD *)&v6[v13[10]] = *(_QWORD *)&v7[v13[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = v13[11];
  v30 = &v6[v29];
  v31 = &v7[v29];
  v32 = *(_DWORD *)v31;
  v30[4] = v31[4];
  *(_DWORD *)v30 = v32;
  return a1;
}

uint64_t sub_1C0264B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = (char *)(a1 + v4);
  v6 = (char *)(a2 + v4);
  v7 = sub_1C0301D5C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  }
  v9 = (int *)type metadata accessor for InferenceEuclidDebugMetrics(0);
  *(_QWORD *)&v5[v9[5]] = *(_QWORD *)&v6[v9[5]];
  v10 = v9[6];
  v11 = &v5[v10];
  v12 = &v6[v10];
  *(_OWORD *)(v11 + 14) = *(_OWORD *)(v12 + 14);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  v13 = v9[7];
  v14 = &v5[v13];
  v15 = &v6[v13];
  *(_OWORD *)(v14 + 13) = *(_OWORD *)(v15 + 13);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_QWORD *)&v5[v9[8]] = *(_QWORD *)&v6[v9[8]];
  v5[v9[9]] = v6[v9[9]];
  *(_QWORD *)&v5[v9[10]] = *(_QWORD *)&v6[v9[10]];
  v16 = v9[11];
  v17 = &v5[v16];
  v18 = &v6[v16];
  v17[4] = v18[4];
  *(_DWORD *)v17 = *(_DWORD *)v18;
  return a1;
}

uint64_t sub_1C0264C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  int EnumTagSinglePayload;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = (char *)(a1 + v4);
  v6 = (char *)(a2 + v4);
  v7 = sub_1C0301D5C();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v7);
  v9 = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7);
  if (EnumTagSinglePayload)
  {
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v10 = *(_QWORD *)(v7 - 8);
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v7);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v5, v6, v7);
LABEL_7:
  v12 = (int *)type metadata accessor for InferenceEuclidDebugMetrics(0);
  *(_QWORD *)&v5[v12[5]] = *(_QWORD *)&v6[v12[5]];
  swift_bridgeObjectRelease();
  v13 = v12[6];
  v14 = &v5[v13];
  v15 = &v6[v13];
  *(_OWORD *)(v14 + 14) = *(_OWORD *)(v15 + 14);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v16 = v12[7];
  v17 = (uint64_t)&v5[v16];
  v18 = &v6[v16];
  if (*(_QWORD *)&v5[v16 + 8] != 1)
  {
    v19 = *((_QWORD *)v18 + 1);
    if (v19 != 1)
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *(_QWORD *)(v17 + 8) = v19;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v17 + 16) = *((_DWORD *)v18 + 4);
      *(_BYTE *)(v17 + 20) = v18[20];
      *(_DWORD *)(v17 + 24) = *((_DWORD *)v18 + 6);
      *(_BYTE *)(v17 + 28) = v18[28];
      goto LABEL_12;
    }
    sub_1C0098780(v17);
  }
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 13) = *(_OWORD *)(v18 + 13);
LABEL_12:
  *(_QWORD *)&v5[v12[8]] = *(_QWORD *)&v6[v12[8]];
  swift_bridgeObjectRelease();
  v5[v12[9]] = v6[v12[9]];
  *(_QWORD *)&v5[v12[10]] = *(_QWORD *)&v6[v12[10]];
  swift_bridgeObjectRelease();
  v20 = v12[11];
  v21 = &v5[v20];
  v22 = &v6[v20];
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  return a1;
}

uint64_t sub_1C0264E4C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0264E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 253)
  {
    OUTLINED_FUNCTION_37_0();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_3_124();
    OUTLINED_FUNCTION_46(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t sub_1C0264ECC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0264ED8(_BYTE *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 253)
  {
    *a1 = a2 + 2;
    OUTLINED_FUNCTION_37_0();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_3_124();
    OUTLINED_FUNCTION_49_3((uint64_t)&a1[*(int *)(a4 + 20)], a2, a2, v7);
  }
}

uint64_t type metadata accessor for InferenceEuclidLog(uint64_t a1)
{
  return sub_1C003CD30(a1, qword_1EF5C2580);
}

uint64_t sub_1C0264F40()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for InferenceEuclidDebugMetrics(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 __swift_memcpy29_4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1C0264FC8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 29))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1C0264FE8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 29) = v3;
  return result;
}

void type metadata accessor for EuclidScoreStatistics()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t __swift_memcpy9_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t sub_1C026503C(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && a1[9])
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *a1;
      if (v3 >= 2)
        v2 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
      else
        v2 = -2;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C0265094(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

void type metadata accessor for InferenceEuclidServiceMetrics()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t OUTLINED_FUNCTION_3_124()
{
  return type metadata accessor for InferenceEuclidDebugMetrics(0);
}

uint64_t OUTLINED_FUNCTION_5_91()
{
  return sub_1C0304768();
}

uint64_t OUTLINED_FUNCTION_11_75()
{
  return sub_1C0304774();
}

id OUTLINED_FUNCTION_12_59@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = a1;
  *(_QWORD *)(v2 - 128) = v1;
  return v1;
}

void OUTLINED_FUNCTION_13_60(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, SEL *a5)
{
  uint64_t v5;
  void *v6;

  sub_1C0263758(v5, v6, a3, a4, a5);
}

uint64_t sub_1C0265134(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  return ContactResolver.findMatches(values:context:spec:)(a1, *a2, *a3);
}

uint64_t ContactResolver.findMatches(values:context:spec:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C02651BC(a1, a2, a3, (uint64_t (*)(uint64_t, char *))ContactResolver.findMatches(values:config:));
}

uint64_t sub_1C0265178(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  return ContactResolver.makeRecommendations(values:context:spec:)(a1, *a2, *a3);
}

uint64_t ContactResolver.makeRecommendations(values:context:spec:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C02651BC(a1, a2, a3, (uint64_t (*)(uint64_t, char *))ContactResolver.makeRecommendations(values:config:));
}

uint64_t sub_1C02651BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, char *))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v6 = type metadata accessor for ContactResolverConfig(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_retain();
  sub_1C018543C();
  v9 = a4(a1, v8);
  sub_1C0045840((uint64_t)v8, type metadata accessor for ContactResolverConfig);
  return v9;
}

void ContactResolver.makeRecommendations(values:config:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = OUTLINED_FUNCTION_8_72(a1, a2);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_12_26();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_9_85();
  v14 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    OUTLINED_FUNCTION_1_122();
    OUTLINED_FUNCTION_4_100();
    do
    {
      OUTLINED_FUNCTION_12_60();
      OUTLINED_FUNCTION_11_76();
      OUTLINED_FUNCTION_10_74();
      sub_1C0045840(v4, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_3_125();
        OUTLINED_FUNCTION_13_61();
      }
      v15 = *(_QWORD *)(v14 + 24);
      if (*(_QWORD *)(v14 + 16) >= v15 >> 1)
      {
        OUTLINED_FUNCTION_2_120(v15);
        OUTLINED_FUNCTION_13_61();
      }
      OUTLINED_FUNCTION_0_136();
      v3 += v2;
      --v5;
    }
    while (v5);
  }
  sub_1C013D008(v14, v17, v8, v9, v10, v11, v12, v13, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27);
  OUTLINED_FUNCTION_7_91();
  OUTLINED_FUNCTION_28_0();
}

void ContactResolver.findMatches(values:config:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = OUTLINED_FUNCTION_8_72(a1, a2);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_12_26();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_9_85();
  v8 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    OUTLINED_FUNCTION_1_122();
    OUTLINED_FUNCTION_4_100();
    do
    {
      OUTLINED_FUNCTION_12_60();
      OUTLINED_FUNCTION_11_76();
      OUTLINED_FUNCTION_10_74();
      sub_1C0045840(v4, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_3_125();
        OUTLINED_FUNCTION_13_61();
      }
      v9 = *(_QWORD *)(v8 + 24);
      if (*(_QWORD *)(v8 + 16) >= v9 >> 1)
      {
        OUTLINED_FUNCTION_2_120(v9);
        OUTLINED_FUNCTION_13_61();
      }
      OUTLINED_FUNCTION_0_136();
      v3 += v2;
      --v5;
    }
    while (v5);
  }
  sub_1C004ABF4();
  OUTLINED_FUNCTION_7_91();
  OUTLINED_FUNCTION_28_0();
}

uint64_t ContactResolver.makeRecommendation(matches:config:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = type metadata accessor for ContactResolverRunTimeData(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C005DD58();
  sub_1C0060770((uint64_t)&v4[*(int *)(v2 + 40)], a1);
  return sub_1C0045840((uint64_t)v4, type metadata accessor for ContactResolverRunTimeData);
}

void *OUTLINED_FUNCTION_0_136()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = v2;
  return memcpy((void *)(v3 + 264 * v1 + 32), (const void *)(v0 + 32), 0x108uLL);
}

uint64_t OUTLINED_FUNCTION_1_122()
{
  _QWORD *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;

  *v0 = v1;
  *(_QWORD *)(v4 - 72) = v3;
  return sub_1C00B1ED8(0, v2, 0);
}

uint64_t OUTLINED_FUNCTION_2_120@<X0>(unint64_t a1@<X8>)
{
  int64_t v1;

  return sub_1C00B1ED8(a1 > 1, v1, 1);
}

uint64_t OUTLINED_FUNCTION_3_125()
{
  uint64_t v0;

  return sub_1C00B1ED8(0, *(_QWORD *)(v0 + 16) + 1, 1);
}

void OUTLINED_FUNCTION_4_100()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 + 72);
}

uint64_t OUTLINED_FUNCTION_7_91()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_8_72(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 8) = a2;
  *(_QWORD *)(v2 + 16) = v3;
  return type metadata accessor for Contact();
}

void OUTLINED_FUNCTION_10_74()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C016BE78(v1, (void *)(v0 + 32));
}

uint64_t OUTLINED_FUNCTION_11_76()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C0065660(v1, v0);
}

uint64_t OUTLINED_FUNCTION_12_60()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C0065660(v0, v1);
}

uint64_t DateTime.Time.Meridiem.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if (result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!result)
    v2 = 0;
  *a2 = v2;
  return result;
}

unint64_t sub_1C0265624()
{
  unint64_t result;

  result = qword_1EF5C25B8;
  if (!qword_1EF5C25B8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Time.Meridiem, &type metadata for DateTime.Time.Meridiem);
    atomic_store(result, (unint64_t *)&qword_1EF5C25B8);
  }
  return result;
}

uint64_t sub_1C0265660@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return DateTime.Time.Meridiem.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C0265668()
{
  sub_1C02657CC();
  return sub_1C03040FC();
}

uint64_t sub_1C02656C4()
{
  sub_1C02657CC();
  return sub_1C03040D8();
}

uint64_t _s14descr1E79A4C89C8MeridiemOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C026575C + 4 * byte_1C0321F25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0265790 + 4 * asc_1C0321F20[v4]))();
}

uint64_t sub_1C0265790(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0265798(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02657A0);
  return result;
}

uint64_t sub_1C02657AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02657B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C02657B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02657C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1C02657CC()
{
  unint64_t result;

  result = qword_1EF5C25C0;
  if (!qword_1EF5C25C0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Time.Meridiem, &type metadata for DateTime.Time.Meridiem);
    atomic_store(result, (unint64_t *)&qword_1EF5C25C0);
  }
  return result;
}

uint64_t UsoEntity_common_RecurringDateTime.toDateTime()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t i;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v0 = sub_1C03031B4();
  v25 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v24 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C25C8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C0265BE8();
  v26 = v6;
  v7 = sub_1C0302C14();
  if (v7)
    v8 = v7;
  else
    v8 = MEMORY[0x1E0DEE9D8];
  v28 = MEMORY[0x1E0DEE9D8];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1C03047F8();
    v9 = result;
    if (result)
      goto LABEL_6;
LABEL_19:
    OUTLINED_FUNCTION_8_1();
    v13 = MEMORY[0x1E0DEE9D8];
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v9)
    goto LABEL_19;
LABEL_6:
  if (v9 < 1)
  {
    __break(1u);
    return result;
  }
  v23 = v5;
  for (i = 0; i != v9; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0)
      MEMORY[0x1C3B975EC](i, v8);
    else
      swift_retain();
    sub_1C03029C8();
    if (v27)
    {
      UsoEntity_common_DateTime.toDateTime(recurrencePattern:)(0);
      swift_release();
      v12 = OUTLINED_FUNCTION_5_3();
      MEMORY[0x1C3B97010](v12);
      if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1C030415C();
      sub_1C0304180();
      sub_1C0304150();
    }
    else
    {
      swift_release();
    }
  }
  OUTLINED_FUNCTION_8_1();
  v13 = v28;
  v5 = v23;
LABEL_20:
  OUTLINED_FUNCTION_8_1();
  if (sub_1C0302C8C())
  {
    v14 = UsoEntity_common_DateTimeRange.toDateTimeRange()();
    OUTLINED_FUNCTION_5_3();
  }
  else
  {
    v14 = 0;
  }
  v15 = sub_1C01AACC8(v13);
  if (sub_1C0302C08())
  {
    v16 = OUTLINED_FUNCTION_1_123();
    OUTLINED_FUNCTION_5_3();
  }
  else
  {
    v16 = 0;
  }
  if (sub_1C0302BFC())
  {
    v17 = OUTLINED_FUNCTION_1_123();
    OUTLINED_FUNCTION_5_3();
  }
  else
  {
    v17 = 0;
  }
  sub_1C0302C2C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v0) == 1)
  {
    sub_1C0056C9C((uint64_t)v4, &qword_1EF5C25C8);
    v18 = 3;
  }
  else
  {
    v19 = v24;
    v20 = v25;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v24, v4, v0);
    v21 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v19, v0);
    if (v21 == *MEMORY[0x1E0DA2360])
    {
      v18 = 2;
    }
    else if (v21 == *MEMORY[0x1E0DA2350])
    {
      v18 = 0;
    }
    else if (v21 == *MEMORY[0x1E0DA2358])
    {
      v18 = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v19, v0);
      v18 = 3;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v0);
  }
  LOBYTE(v28) = v18;
  type metadata accessor for DateTime.RecurrencePattern();
  swift_allocObject();
  v22 = DateTime.RecurrencePattern.init(withRecurrenceDateTimeRange:recurrencePeriod:totalNumberOfOccurrences:recurrenceDateTimes:fromDateTime:toDateTime:definedValue:)(v14, v26, 0, 1, v15, v16, v17, (char *)&v28);
  LOBYTE(v28) = 1;
  LOBYTE(v27) = 4;
  type metadata accessor for DateTime();
  swift_allocObject();
  return DateTime.init(withDate:time:definedValue:recurrencePattern:temporalIntent:occurringIn:)(0, 0, (char *)&v28, v22, (char *)&v27, v5);
}

uint64_t sub_1C0265BE8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(unint64_t, _QWORD, uint64_t);
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BBEE0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C0302FF8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C1720);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1C0302D40())
  {
    v10 = UsoEntity_common_Duration.toInterval(offsetDirection:)(0);
    swift_release();
    if (v10)
    {
      type metadata accessor for DateTime.DateTimeRange();
      swift_allocObject();
      v11 = DateTime.DateTimeRange.init(withInterval:)(v10);
      swift_retain();
      return v11;
    }
  }
  v12 = sub_1C0302C14();
  if (!v12)
    return 0;
  v13 = v12;
  v38 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C25D0);
  v14 = *(_QWORD *)(v4 + 72);
  v15 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C0322040;
  v17 = v16 + v15;
  v18 = *(void (**)(unint64_t, _QWORD, uint64_t))(v4 + 104);
  v18(v16 + v15, *MEMORY[0x1E0DA1C28], v3);
  v18(v17 + v14, *MEMORY[0x1E0DA1C30], v3);
  v18(v17 + 2 * v14, *MEMORY[0x1E0DA1C70], v3);
  v18(v17 + 3 * v14, *MEMORY[0x1E0DA1C80], v3);
  v18(v17 + 4 * v14, *MEMORY[0x1E0DA1BF0], v3);
  v18(v17 + 5 * v14, *MEMORY[0x1E0DA1C68], v3);
  v18(v17 + 6 * v14, *MEMORY[0x1E0DA1C60], v3);
  v18(v17 + 7 * v14, *MEMORY[0x1E0DA1C38], v3);
  v18(v17 + 8 * v14, *MEMORY[0x1E0DA1C90], v3);
  v18(v17 + 9 * v14, *MEMORY[0x1E0DA1CA0], v3);
  v18(v17 + 10 * v14, *MEMORY[0x1E0DA1C98], v3);
  v18(v17 + 11 * v14, *MEMORY[0x1E0DA1CA8], v3);
  v18(v17 + 12 * v14, *MEMORY[0x1E0DA1BF8], v3);
  v18(v17 + 13 * v14, *MEMORY[0x1E0DA1C18], v3);
  v18(v17 + 14 * v14, *MEMORY[0x1E0DA1C20], v3);
  sub_1C0120530();
  v20 = v19;
  v21 = v13 >> 62;
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_1C03047F8();
  }
  else
  {
    v22 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v39 = v20;
  if (!v22)
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  sub_1C02CFE78(0, (v13 & 0xC000000000000001) == 0, v13);
  if ((v13 & 0xC000000000000001) != 0)
    MEMORY[0x1C3B975EC](0, v13);
  else
    swift_retain();
  swift_bridgeObjectRelease();
  sub_1C03029C8();
  swift_release();
  if (!v41)
    goto LABEL_16;
  swift_retain();
  v23 = sub_1C0302C20();
  swift_release();
  if (!v23 || (swift_release(), swift_retain(), v24 = sub_1C0302C08(), swift_release(), swift_release(), v24))
  {
LABEL_16:
    v26 = 0;
    if (v21)
      goto LABEL_14;
LABEL_17:
    v27 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_18;
  }
  swift_retain();
  sub_1C0302C2C();
  swift_release();
  v25 = sub_1C0302DD0();
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v25) == 1;
  sub_1C0056C9C((uint64_t)v9, &qword_1EF5C1720);
  if (!v21)
    goto LABEL_17;
LABEL_14:
  swift_bridgeObjectRetain();
  v27 = sub_1C03047F8();
  swift_bridgeObjectRelease();
LABEL_18:
  if (v27 != 1 || !v26 || !v22)
  {
    swift_bridgeObjectRelease();
LABEL_28:
    swift_bridgeObjectRelease();
LABEL_29:
    swift_release();
    return 0;
  }
  sub_1C02CFE78(0, (v13 & 0xC000000000000001) == 0, v13);
  if ((v13 & 0xC000000000000001) != 0)
    MEMORY[0x1C3B975EC](0, v13);
  else
    swift_retain();
  v28 = (uint64_t)v38;
  swift_bridgeObjectRelease();
  sub_1C03029C8();
  swift_release();
  if (!v41)
    goto LABEL_28;
  v29 = sub_1C0302C20();
  swift_release();
  if (!v29)
    goto LABEL_28;
  sub_1C0302C2C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3) == 1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_1C0056C9C((uint64_t)v2, &qword_1EF5BBEE0);
    return 0;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v28, v2, v3);
  sub_1C0055604(v28, v39);
  v32 = v31;
  swift_bridgeObjectRelease();
  if ((v32 & 1) == 0)
    goto LABEL_38;
  v33 = sub_1C0302C08();
  swift_release();
  if (v33
    || (v34 = sub_1C0302BFC(), swift_release(), v34)
    || (v35 = sub_1C0302C5C(), swift_release(), v35)
    || (v36 = sub_1C0302C8C(), swift_release(), v36))
  {
LABEL_38:
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v28, v3);
    swift_release();
    goto LABEL_29;
  }
  sub_1C00FE6A8((char *)&v41);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v28, v3);
  v37 = v41;
  if (v41 == 38)
    v37 = 8;
  LOBYTE(v41) = v37;
  type metadata accessor for DateTime.DateTimeRange();
  swift_allocObject();
  v11 = DateTime.DateTimeRange.init(withDefinedValue:)(&v41);
  LOBYTE(v41) = 1;
  v40 = 20;
  type metadata accessor for DateTime.Interval();
  swift_allocObject();
  DateTime.Interval.init(withQuantity:timeUnit:qualifier:)(0x3FF0000000000000, 0, (char *)&v41, &v40);
  return v11;
}

uint64_t UsoEntity_common_RecurringDateTime.toRecurrencePattern()()
{
  uint64_t v0;

  v0 = *(_QWORD *)(UsoEntity_common_RecurringDateTime.toDateTime()() + 40);
  swift_retain();
  swift_release();
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_123()
{
  return UsoEntity_common_DateTime.toDateTime(recurrencePattern:)(0);
}

SiriInference::POILandmark __swiftcall POILandmark.init(name:prefix:)(SiriInference::POILandmark name, SiriInference::POILandmark::Prefix_optional prefix)
{
  uint64_t v2;
  char v3;

  v3 = *(_BYTE *)prefix.value;
  *(Swift::String *)v2 = name.name;
  *(_BYTE *)(v2 + 16) = v3;
  name.prefix = prefix;
  return name;
}

SiriInference::POILandmark::Prefix_optional __swiftcall POILandmark.Prefix.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SiriInference::POILandmark::Prefix_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1C030484C();
  result.value = swift_bridgeObjectRelease();
  v5 = 12;
  if (v3 < 0xC)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t POILandmark.Prefix.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C02663C8 + 4 * byte_1C0322050[*v0]))(0x656874206F74, 0xE600000000000000);
}

uint64_t sub_1C02663C8()
{
  return 29793;
}

uint64_t sub_1C02663D4()
{
  return 0x7373656E69737562;
}

uint64_t sub_1C02663EC()
{
  return 28265;
}

uint64_t sub_1C02663F8()
{
  return 0x65687420726F66;
}

uint64_t sub_1C0266410()
{
  return 31074;
}

uint64_t sub_1C026641C()
{
  return 26223;
}

uint64_t sub_1C0266428()
{
  return 7499622;
}

uint64_t sub_1C0266438()
{
  return 1918985582;
}

uint64_t sub_1C0266448()
{
  return 28532;
}

uint64_t sub_1C0266454@<X0>(uint64_t a1@<X8>)
{
  return a1 + 1528;
}

uint64_t sub_1C026645C()
{
  return 0x656874206E69;
}

uint64_t sub_1C026646C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C025F360(*a1, *a2);
}

void sub_1C0266478()
{
  unsigned __int8 *v0;

  sub_1C00CEC94(*v0);
}

void sub_1C0266480(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EA9F0(a1, *v1);
}

SiriInference::POILandmark::Prefix_optional sub_1C0266488(Swift::String *a1)
{
  return POILandmark.Prefix.init(rawValue:)(*a1);
}

uint64_t sub_1C0266494@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = POILandmark.Prefix.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C02664B8()
{
  sub_1C0266C90();
  return sub_1C03040F0();
}

uint64_t sub_1C0266514()
{
  sub_1C0266C90();
  return sub_1C03040CC();
}

uint64_t POILandmark.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void POILandmark.prefix.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t static POILandmark.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  char v5;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = sub_1C0304A08(), result = 0, (v5 & 1) != 0))
  {
    result = (_DWORD)v3 == 12 && (_DWORD)v2 == 12;
    if ((_DWORD)v2 != 12 && (_DWORD)v3 != 12)
      return sub_1C025F360(v2, v3);
  }
  return result;
}

uint64_t sub_1C026661C()
{
  sub_1C0266934();
  return sub_1C0304BAC();
}

uint64_t sub_1C0266644()
{
  sub_1C0266934();
  return sub_1C0304BB8();
}

void POILandmark.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C25D8);
  v8 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0266934();
  sub_1C0304BA0();
  v12 = 0;
  sub_1C0304960();
  if (!v2)
  {
    v11 = v9;
    v10 = 1;
    sub_1C0266970();
    sub_1C0304954();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v4);
  OUTLINED_FUNCTION_28_0();
}

void POILandmark.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C25F0);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0266934();
  sub_1C0304B88();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    v6 = sub_1C03048AC();
    v8 = v7;
    sub_1C02669AC();
    swift_bridgeObjectRetain();
    sub_1C03048A0();
    OUTLINED_FUNCTION_10_5();
    *(_QWORD *)a2 = v6;
    *(_QWORD *)(a2 + 8) = v8;
    *(_BYTE *)(a2 + 16) = v9;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28_0();
}

void sub_1C0266908(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  POILandmark.init(from:)(a1, a2);
}

void sub_1C026691C(_QWORD *a1)
{
  POILandmark.encode(to:)(a1);
}

unint64_t sub_1C0266934()
{
  unint64_t result;

  result = qword_1EF5C25E0;
  if (!qword_1EF5C25E0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03222F0, &type metadata for POILandmark.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C25E0);
  }
  return result;
}

unint64_t sub_1C0266970()
{
  unint64_t result;

  result = qword_1EF5C25E8;
  if (!qword_1EF5C25E8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for POILandmark.Prefix, &type metadata for POILandmark.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C25E8);
  }
  return result;
}

unint64_t sub_1C02669AC()
{
  unint64_t result;

  result = qword_1EF5C25F8;
  if (!qword_1EF5C25F8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for POILandmark.Prefix, &type metadata for POILandmark.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C25F8);
  }
  return result;
}

unint64_t sub_1C02669EC()
{
  unint64_t result;

  result = qword_1EF5C2600;
  if (!qword_1EF5C2600)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for POILandmark.Prefix, &type metadata for POILandmark.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C2600);
  }
  return result;
}

ValueMetadata *type metadata accessor for POILandmark()
{
  return &type metadata for POILandmark;
}

uint64_t storeEnumTagSinglePayload for POILandmark.Prefix(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1C0266A84 + 4 * byte_1C0322061[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1C0266AB8 + 4 * byte_1C032205C[v4]))();
}

uint64_t sub_1C0266AB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0266AC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0266AC8);
  return result;
}

uint64_t sub_1C0266AD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0266ADCLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1C0266AE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0266AE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for POILandmark.Prefix()
{
  return &type metadata for POILandmark.Prefix;
}

uint64_t storeEnumTagSinglePayload for POILandmark.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0266B50 + 4 * byte_1C032206B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0266B84 + 4 * byte_1C0322066[v4]))();
}

uint64_t sub_1C0266B84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0266B8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0266B94);
  return result;
}

uint64_t sub_1C0266BA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0266BA8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0266BAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0266BB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for POILandmark.CodingKeys()
{
  return &type metadata for POILandmark.CodingKeys;
}

unint64_t sub_1C0266BD4()
{
  unint64_t result;

  result = qword_1EF5C2608;
  if (!qword_1EF5C2608)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03222C8, &type metadata for POILandmark.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C2608);
  }
  return result;
}

unint64_t sub_1C0266C14()
{
  unint64_t result;

  result = qword_1EF5C2610;
  if (!qword_1EF5C2610)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0322238, &type metadata for POILandmark.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C2610);
  }
  return result;
}

unint64_t sub_1C0266C54()
{
  unint64_t result;

  result = qword_1EF5C2618;
  if (!qword_1EF5C2618)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0322260, &type metadata for POILandmark.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C2618);
  }
  return result;
}

unint64_t sub_1C0266C90()
{
  unint64_t result;

  result = qword_1EF5C2620;
  if (!qword_1EF5C2620)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for POILandmark.Prefix, &type metadata for POILandmark.Prefix);
    atomic_store(result, (unint64_t *)&qword_1EF5C2620);
  }
  return result;
}

uint64_t destroy for Transliterator()
{
  swift_release();
  return swift_release();
}

ValueMetadata *type metadata accessor for Transliterator()
{
  return &type metadata for Transliterator;
}

void _s13SiriInference14TransliteratorVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_9();
}

_QWORD *_s13SiriInference14TransliteratorVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void _s13SiriInference14TransliteratorVwta_0(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  OUTLINED_FUNCTION_9();
}

ValueMetadata *type metadata accessor for TransliterationQueryExpander()
{
  return &type metadata for TransliterationQueryExpander;
}

uint64_t sub_1C0266DEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD v18[3];
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED725F88);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C03024A0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v18 - v10;
  v21 = a1;
  v20 = MEMORY[0x1E0DEE9D8];
  v12 = sub_1C0302434();
  sub_1C02675FC(&qword_1ED725F78, MEMORY[0x1E0D50618]);
  sub_1C030409C();
  sub_1C02675FC(&qword_1ED725F80, MEMORY[0x1E0D50620]);
  sub_1C03044A4();
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) != 1)
  {
    v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v18[2] = v12;
    v19 = v9;
    do
    {
      v14(v11, v4, v5);
      if ((sub_1C0302494() & 1) != 0)
      {
        v14(v9, v11, v5);
        v15 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C00B2338();
          v15 = v20;
        }
        v16 = *(_QWORD *)(v15 + 16);
        if (v16 >= *(_QWORD *)(v15 + 24) >> 1)
        {
          sub_1C00B2338();
          v15 = v20;
        }
        *(_QWORD *)(v15 + 16) = v16 + 1;
        v17 = v15
            + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
            + *(_QWORD *)(v6 + 72) * v16;
        v9 = v19;
        v14((char *)v17, v19, v5);
        v20 = v15;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      }
      sub_1C03044A4();
    }
    while (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) != 1);
  }
  swift_release();
  sub_1C003E978((uint64_t)v4, (uint64_t *)&unk_1ED725F88);
  return v20;
}

void sub_1C0267070(const void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  const void *v86;
  _BYTE v87[264];
  _QWORD v88[2];
  char v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;

  v4 = v3;
  v85 = a3;
  v116 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
  MEMORY[0x1E0C80A78](v116);
  v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = a1;
  sub_1C01579A8((uint64_t)a1, (uint64_t)v8);
  v9 = *((_QWORD *)v8 + 3);
  v10 = *((_QWORD *)v8 + 4);
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v9 & 0xFFFFFFFFFFFFLL;
  if (v11)
  {
    swift_bridgeObjectRetain();
    v9 = OUTLINED_FUNCTION_0_137(v9, v10, v12);
    v14 = v13;
    v4 = v3;
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_41;
    swift_bridgeObjectRelease();
    *((_QWORD *)v8 + 3) = v9;
    *((_QWORD *)v8 + 4) = v14;
    v10 = v14;
  }
  v15 = *((_QWORD *)v8 + 5);
  v16 = *((_QWORD *)v8 + 6);
  v17 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000) == 0)
    v17 = v15 & 0xFFFFFFFFFFFFLL;
  v82 = v9;
  if (v17)
  {
    swift_bridgeObjectRetain();
    v84 = OUTLINED_FUNCTION_0_137(v15, v16, v18);
    v20 = v19;
    v4 = v15;
    swift_bridgeObjectRelease();
    if (v15)
      goto LABEL_41;
    swift_bridgeObjectRelease();
    *((_QWORD *)v8 + 5) = v84;
    *((_QWORD *)v8 + 6) = v20;
    v16 = v20;
  }
  else
  {
    v84 = v15;
  }
  v21 = *((_QWORD *)v8 + 7);
  v22 = *((_QWORD *)v8 + 8);
  v23 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0)
    v23 = v21 & 0xFFFFFFFFFFFFLL;
  if (v23)
  {
    swift_bridgeObjectRetain();
    v83 = OUTLINED_FUNCTION_0_137(v21, v22, v24);
    v26 = v25;
    v4 = v21;
    swift_bridgeObjectRelease();
    if (v21)
      goto LABEL_41;
    OUTLINED_FUNCTION_8_1();
    v21 = v83;
    *((_QWORD *)v8 + 7) = v83;
    *((_QWORD *)v8 + 8) = v26;
    v22 = v26;
  }
  v28 = *((_QWORD *)v8 + 9);
  v27 = *((_QWORD *)v8 + 10);
  v29 = HIBYTE(v27) & 0xF;
  if ((v27 & 0x2000000000000000) == 0)
    v29 = v28 & 0xFFFFFFFFFFFFLL;
  v80 = v22;
  v83 = v21;
  if (v29)
  {
    v30 = v27;
    swift_bridgeObjectRetain();
    v81 = OUTLINED_FUNCTION_0_137(v28, v30, v31);
    OUTLINED_FUNCTION_1_124();
    if (v4)
      goto LABEL_41;
    OUTLINED_FUNCTION_14();
    v32 = v81;
    *((_QWORD *)v8 + 9) = v81;
    *((_QWORD *)v8 + 10) = v28;
    v27 = v28;
    v28 = v32;
    v21 = v83;
  }
  v34 = *((_QWORD *)v8 + 11);
  v33 = *((_QWORD *)v8 + 12);
  v35 = HIBYTE(v33) & 0xF;
  if ((v33 & 0x2000000000000000) == 0)
    v35 = v34 & 0xFFFFFFFFFFFFLL;
  v81 = v28;
  v78 = v27;
  if (v35)
  {
    v36 = v33;
    swift_bridgeObjectRetain();
    v79 = OUTLINED_FUNCTION_0_137(v34, v36, v37);
    OUTLINED_FUNCTION_1_124();
    if (v4)
      goto LABEL_41;
    OUTLINED_FUNCTION_14();
    v34 = v79;
    *((_QWORD *)v8 + 11) = v79;
    *((_QWORD *)v8 + 12) = v28;
    v33 = v28;
    v21 = v83;
  }
  v38 = *((_QWORD *)v8 + 15);
  v39 = *((_QWORD *)v8 + 16);
  v40 = HIBYTE(v39) & 0xF;
  if ((v39 & 0x2000000000000000) == 0)
    v40 = v38 & 0xFFFFFFFFFFFFLL;
  v79 = v34;
  v76 = v33;
  if (v40)
  {
    v41 = v38;
    v42 = v39;
    swift_bridgeObjectRetain();
    v77 = OUTLINED_FUNCTION_0_137(v41, v42, v43);
    OUTLINED_FUNCTION_1_124();
    if (v4)
      goto LABEL_41;
    OUTLINED_FUNCTION_14();
    v38 = v77;
    *((_QWORD *)v8 + 15) = v77;
    *((_QWORD *)v8 + 16) = v28;
    v39 = v28;
    v21 = v83;
  }
  v44 = *((_QWORD *)v8 + 17);
  v45 = *((_QWORD *)v8 + 18);
  v46 = HIBYTE(v45) & 0xF;
  if ((v45 & 0x2000000000000000) == 0)
    v46 = v44 & 0xFFFFFFFFFFFFLL;
  v77 = v38;
  v73 = v39;
  if (v46)
  {
    v47 = v44;
    v48 = v45;
    swift_bridgeObjectRetain();
    v75 = OUTLINED_FUNCTION_0_137(v47, v48, v49);
    OUTLINED_FUNCTION_1_124();
    if (!v4)
    {
      OUTLINED_FUNCTION_14();
      v44 = v75;
      *((_QWORD *)v8 + 17) = v75;
      *((_QWORD *)v8 + 18) = v28;
      v45 = v28;
      v21 = v83;
      goto LABEL_37;
    }
LABEL_41:
    sub_1C003E978((uint64_t)v8, (uint64_t *)&unk_1ED726D98);
    return;
  }
LABEL_37:
  v50 = *((_QWORD *)v8 + 20);
  v51 = HIBYTE(v50) & 0xF;
  v74 = *((_QWORD *)v8 + 19);
  v75 = v44;
  if ((v50 & 0x2000000000000000) == 0)
    v51 = v74 & 0xFFFFFFFFFFFFLL;
  v72 = v45;
  if (v51)
  {
    v52 = a2;
    v53 = v21;
    v54 = v50;
    swift_bridgeObjectRetain();
    v56 = sub_1C0267554(v74, v54, v55, v52);
    v58 = v57;
    OUTLINED_FUNCTION_8_1();
    if (v4)
      goto LABEL_41;
    OUTLINED_FUNCTION_8_1();
    *((_QWORD *)v8 + 19) = v56;
    *((_QWORD *)v8 + 20) = v58;
    v59 = v58;
    v74 = v56;
  }
  else
  {
    v53 = v21;
    v59 = v50;
  }
  v60 = &v8[*(int *)(v116 + 36)];
  v60[*(int *)(type metadata accessor for ContactResolver.SignalSet(0) + 180)] = 1;
  v61 = *((_QWORD *)v8 + 1);
  v62 = v8[16];
  v63 = *((_QWORD *)v8 + 13);
  v64 = *((_QWORD *)v8 + 14);
  v65 = *((_QWORD *)v8 + 29);
  v66 = *((_QWORD *)v8 + 30);
  v67 = v8[248];
  v68 = *((_QWORD *)v8 + 32);
  v88[0] = *(_QWORD *)v8;
  v88[1] = v61;
  v89 = v62;
  v90 = v82;
  v91 = v10;
  v92 = v84;
  v93 = v16;
  v94 = v53;
  v95 = v80;
  v96 = v81;
  v97 = v78;
  v98 = v79;
  v99 = v76;
  v100 = v63;
  v101 = v64;
  v102 = v77;
  v103 = v73;
  v104 = v75;
  v105 = v72;
  v106 = v74;
  v107 = v59;
  v108 = *(_OWORD *)(v8 + 168);
  v109 = *(_OWORD *)(v8 + 184);
  v110 = *(_OWORD *)(v8 + 200);
  v111 = *(_OWORD *)(v8 + 216);
  v112 = v65;
  v113 = v66;
  v114 = v67;
  v115 = v68;
  memcpy(v87, v86, sizeof(v87));
  static ContactQuery.== infix(_:_:)((uint64_t)v88, (uint64_t)v87);
  if ((v69 & 1) != 0)
  {
    sub_1C003E978((uint64_t)v8, (uint64_t *)&unk_1ED726D98);
    v70 = 1;
    v71 = v85;
  }
  else
  {
    v71 = v85;
    sub_1C0242958((uint64_t)v8, v85);
    v70 = 0;
  }
  __swift_storeEnumTagSinglePayload(v71, v70, 1, v116);
}

uint64_t sub_1C0267554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C0302440();
  if (!v4)
  {
    v7 = sub_1C0266DEC(v6);
    sub_1C023A3E8(v7);
    OUTLINED_FUNCTION_14();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
    sub_1C004B224();
    a4 = sub_1C0303E50();
    swift_bridgeObjectRelease();
  }
  return a4;
}

void sub_1C02675FC(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = sub_1C0302434();
    atomic_store(MEMORY[0x1C3B9827C](a2, v4), a1);
  }
  OUTLINED_FUNCTION_9();
}

uint64_t OUTLINED_FUNCTION_0_137(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C0267554(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_1_124()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C026765C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1DAC();
    result = v8;
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v6 = *v4;
      v4 += 3;
      v5 = v6;
      v9 = result;
      v7 = *(_QWORD *)(result + 16);
      if (v7 >= *(_QWORD *)(result + 24) >> 1)
      {
        sub_1C00B1DAC();
        result = v9;
      }
      *(_QWORD *)(result + 16) = v7 + 1;
      *(_QWORD *)(result + 8 * v7 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1C0267718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v48[2];
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v5 = v4;
  v54 = a3;
  v62 = a2;
  v8 = sub_1C0301CFC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727CF0);
  MEMORY[0x1E0C80A78](v12);
  v53 = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Entity();
  v15 = MEMORY[0x1E0C80A78](v14);
  v52 = (_QWORD *)((char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    v18 = MEMORY[0x1E0DEE9D8];
LABEL_17:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return v18;
  }
  v50 = v15;
  v48[1] = a4;
  swift_bridgeObjectRetain();
  v18 = MEMORY[0x1E0DEE9D8];
  v48[0] = a1;
  v19 = (uint64_t *)(a1 + 80);
  v51 = v8;
  v49 = v11;
  v20 = v53;
  while (1)
  {
    v21 = *(v19 - 1);
    if (v21)
      break;
LABEL_14:
    v19 += 7;
    if (!--v17)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  v61 = v18;
  v22 = *(v19 - 5);
  v55 = *(v19 - 6);
  v56 = v17;
  v23 = *(v19 - 4);
  v24 = *(v19 - 3);
  v18 = *(v19 - 2);
  v65 = *v19;
  v25 = v65;
  v60 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
  v64 = v5;
  sub_1C004B224();
  v63 = v21;
  v26 = sub_1C0303E50();
  v27 = v63;
  v28 = v26;
  v58 = v29;
  v59 = v25;
  swift_bridgeObjectRelease();
  v30 = OBJC_IVAR____TtC13SiriInference6Intent_updatedAt;
  v57 = v24;
  v31 = v64;
  sub_1C0240014(v18, v27, v23, v24, v20);
  v64 = v31;
  if (v31)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v32 = v54 + v30;
  v33 = v49;
  v34 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v49, v32, v51);
  v35 = v50;
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v50) == 1)
  {
    v36 = v52;
    *v52 = 0;
    v36[1] = v23;
    v37 = v58;
    v36[2] = v57;
    v36[3] = v18;
    v36[4] = v63;
    v36[5] = v28;
    v36[6] = v37;
    v38 = (char *)v36 + *(int *)(v35 + 32);
    v39 = v36;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v38, v33, v34);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C02691A8((uint64_t)v20);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v33, v34);
    v39 = v52;
    sub_1C0269224((uint64_t)v20, (uint64_t)v52);
    swift_bridgeObjectRelease();
  }
  v40 = v64;
  sub_1C02401D8();
  v5 = v40;
  v18 = v61;
  if (!v40)
  {
    v41 = *v39;
    sub_1C02691E8((uint64_t)v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C005088C();
      v18 = v45;
    }
    v42 = *(_QWORD *)(v18 + 16);
    if (v42 >= *(_QWORD *)(v18 + 24) >> 1)
    {
      sub_1C005088C();
      v18 = v46;
    }
    *(_QWORD *)(v18 + 16) = v42 + 1;
    v43 = (_QWORD *)(v18 + 24 * v42);
    v44 = v55;
    v17 = v56;
    v43[4] = v41;
    v43[5] = v44;
    v43[6] = v60;
    goto LABEL_14;
  }
  sub_1C02691E8((uint64_t)v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_20:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v18;
}

uint64_t sub_1C0267B60(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  sqlite3 *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v6 = (sqlite3 *)sub_1C0055230();
  if (sqlite3_db_readonly(v6, 0) == 1)
  {
    type metadata accessor for InferenceError();
    swift_allocObject();
    v7 = sub_1C026A508(46, 0xD00000000000002FLL, 0x80000001C03350B0, 0xD000000000000081, 0x80000001C03350E0, 0xD000000000000011, 0x80000001C0335170, 25, MEMORY[0x1E0DEE9D8], 0);
    sub_1C00A3930();
    swift_allocError();
    *v8 = v7;
    return swift_willThrow();
  }
  else
  {
    if (qword_1ED728298 != -1)
      swift_once();
    v10 = OUTLINED_FUNCTION_9_0();
    v11 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED729610);
    swift_retain_n();
    swift_retain_n();
    OUTLINED_FUNCTION_9_2();
    sub_1C0303B80();
    v12 = OUTLINED_FUNCTION_9_1();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = OUTLINED_FUNCTION_4_0();
      v18 = OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v13 = 136315394;
      v15 = a2[4];
      v14 = a2[5];
      swift_bridgeObjectRetain();
      sub_1C003E6D8(v15, v14, &v18);
      OUTLINED_FUNCTION_3_40();
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      if (a2[7])
      {
        v16 = a2[6];
        v17 = a2[7];
      }
      else
      {
        v17 = 0xE300000000000000;
        v16 = 7104878;
      }
      swift_bridgeObjectRetain();
      sub_1C003E6D8(v16, v17, &v18);
      OUTLINED_FUNCTION_3_40();
      sub_1C03044B0();
      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_3_0();
      OUTLINED_FUNCTION_3_0();
      OUTLINED_FUNCTION_31();
      _os_log_impl(&dword_1C0039000, v11, v12, "saving interaction. uuid=%s, biomeId=%s)", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_0();
    OUTLINED_FUNCTION_3_0();
    swift_retain();
    OUTLINED_FUNCTION_39();
    swift_bridgeObjectRetain();
    return sub_1C00CD30C(0, a1, a1, (uint64_t)a2, a3);
  }
}

void sub_1C0267E6C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C020FBCC();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_1C0268A08(v5);
  *a1 = v2;
}

void sub_1C0267ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  const char *v13;
  uint64_t v14;
  os_log_type_t v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t inited;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  sqlite3_int64 v45;
  objc_class *v46;
  uint64_t v47;
  Class isa;
  NSObject *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v8 = sub_1C0268598(a1, a2);
  if (!v3)
  {
    if (v8)
    {
      if (qword_1ED728298 != -1)
        swift_once();
      v9 = OUTLINED_FUNCTION_9_0();
      v10 = __swift_project_value_buffer(v9, (uint64_t)qword_1ED729610);
      sub_1C0303B80();
      v11 = OUTLINED_FUNCTION_9_1();
      if (OUTLINED_FUNCTION_13_2(v11))
      {
        v12 = (uint8_t *)OUTLINED_FUNCTION_4_0();
        *(_WORD *)v12 = 0;
        v13 = "Biome event has already been processed.";
        goto LABEL_7;
      }
LABEL_8:

      return;
    }
    if (sub_1C0268694(a1, a2))
    {
      if (qword_1ED728298 != -1)
        swift_once();
      v14 = OUTLINED_FUNCTION_9_0();
      v10 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED729610);
      sub_1C0303B80();
      v15 = OUTLINED_FUNCTION_9_1();
      if (OUTLINED_FUNCTION_13_2(v15))
      {
        v12 = (uint8_t *)OUTLINED_FUNCTION_4_0();
        *(_WORD *)v12 = 0;
        v13 = "intent is already stored in Siri Remembers.";
LABEL_7:
        _os_log_impl(&dword_1C0039000, v10, (os_log_type_t)a1, v13, v12, 2u);
        OUTLINED_FUNCTION_5();
      }
      goto LABEL_8;
    }
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_39();
    v16 = sub_1C0267718(a3, a1, a2, a3);
    OUTLINED_FUNCTION_55_0();
    if (v16[2].isa)
    {
      isa = v16[2].isa;
      v49 = v16;
      v50 = sub_1C026765C((uint64_t)v16);
      OUTLINED_FUNCTION_9_2();
      sub_1C0267E6C(&v50);
      OUTLINED_FUNCTION_8_1();
      v17 = v50;
      v18 = sub_1C01F63E8(0, v50);
      v25 = sub_1C01F6710(a1, v18, v19);
      v27 = v26;
      OUTLINED_FUNCTION_31();
      if (v27)
      {
        swift_release();
        v17 = v27;
      }
      else
      {
        v25 = 0;
      }
      v51 = v25;
      v52 = v17;
      sub_1C01F69E0();
      v29 = v51;
      v28 = v52;
      swift_bridgeObjectRetain();
      sub_1C01F6C30(a1, v29, v28);
      OUTLINED_FUNCTION_8_1();
      OUTLINED_FUNCTION_2();
      *(_QWORD *)(a2 + 24) = v29;
      v30 = sub_1C01E919C();
      v44 = v31;
      v43 = v30;
      v45 = sub_1C01E953C();
      v32 = 0;
      v4 = (uint64_t)&v49[6];
      while (!__OFADD__(v32, 1))
      {
        v46 = (objc_class *)(v32 + 1);
        v47 = v32;
        v33 = *(_QWORD *)(v4 - 8);
        v34 = *(_QWORD *)v4;
        v35 = *(_QWORD *)(v4 - 16);
        swift_bridgeObjectRetain();
        v36 = sub_1C0268750(0x6574656D61726170, 0xEF73656D616E5F72, v33, v34, a1);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C03067E0;
        v38 = MEMORY[0x1E0DEDC60];
        *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEDC60];
        *(_QWORD *)(inited + 64) = &off_1E799BE18;
        *(_QWORD *)(inited + 72) = v35;
        *(_QWORD *)(inited + 32) = v45;
        *(_QWORD *)(inited + 96) = v38;
        *(_QWORD *)(inited + 104) = &off_1E799BE18;
        *(_QWORD *)(inited + 136) = v38;
        *(_QWORD *)(inited + 144) = &off_1E799BE18;
        *(_QWORD *)(inited + 112) = v36;
        OUTLINED_FUNCTION_5_52(0xD000000000000087, 0x80000001C0335190, inited);
        swift_release();
        swift_setDeallocating();
        sub_1C004EFEC();
        OUTLINED_FUNCTION_29_0();
        v4 += 24;
        v32 = v47 + 1;
        if (v46 == isa)
        {
          OUTLINED_FUNCTION_9_86();
          if ((v44 & 1) == 0)
          {
            v4 = swift_initStackObject();
            *(_OWORD *)(v4 + 16) = xmmword_1C0305B60;
            *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEDC60];
            *(_QWORD *)(v4 + 64) = &off_1E799BE18;
            *(_QWORD *)(v4 + 32) = v43;
            OUTLINED_FUNCTION_1_8();
            OUTLINED_FUNCTION_5_52(0xD000000000000020, v39, v4);
            swift_release();
            swift_setDeallocating();
            sub_1C004EFEC();
          }
          if (qword_1ED728298 == -1)
          {
LABEL_32:
            v40 = OUTLINED_FUNCTION_9_0();
            __swift_project_value_buffer(v40, (uint64_t)qword_1ED729610);
            OUTLINED_FUNCTION_19_46();
            OUTLINED_FUNCTION_9_3();
            OUTLINED_FUNCTION_39();
            v16 = sub_1C0303B80();
            v41 = sub_1C03042DC();
            if (OUTLINED_FUNCTION_30(v41))
            {
              v22 = (uint8_t *)OUTLINED_FUNCTION_4_0();
              v51 = OUTLINED_FUNCTION_4_0();
              OUTLINED_FUNCTION_3_126(4.8149e-34);
              v42 = OUTLINED_FUNCTION_14_65();
              OUTLINED_FUNCTION_2_121(v42);
              OUTLINED_FUNCTION_55_0();
              OUTLINED_FUNCTION_3_4();
              swift_release();
              OUTLINED_FUNCTION_29_0();
              v24 = "saved interaction. uuid=%s";
LABEL_22:
              _os_log_impl(&dword_1C0039000, v16, (os_log_type_t)v4, v24, v22, 0xCu);
              swift_arrayDestroy();
              OUTLINED_FUNCTION_5();
            }
            goto LABEL_34;
          }
LABEL_36:
          swift_once();
          goto LABEL_32;
        }
      }
      __break(1u);
      goto LABEL_36;
    }
    swift_bridgeObjectRelease();
    if (qword_1ED728298 != -1)
      swift_once();
    v20 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED729610);
    OUTLINED_FUNCTION_19_46();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_39();
    sub_1C0303B80();
    v21 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_30(v21))
    {
      v22 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      v51 = OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_3_126(4.8149e-34);
      v23 = OUTLINED_FUNCTION_14_65();
      OUTLINED_FUNCTION_2_121(v23);
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_3_4();
      swift_release();
      OUTLINED_FUNCTION_29_0();
      v24 = "skipping interaction because it has no entities. uuid=%s";
      goto LABEL_22;
    }
LABEL_34:

    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_3_4();
    swift_release();
  }
}

BOOL sub_1C0268598(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  sqlite3 *v8;

  if (*(_QWORD *)(a2 + 56))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
    v4 = sub_1C0303F10();
    *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 64) = &off_1E799BE20;
    *(_QWORD *)(inited + 32) = v4;
    *(_QWORD *)(inited + 40) = v5;
    OUTLINED_FUNCTION_1_8();
    OUTLINED_FUNCTION_5_52(0xD00000000000003CLL, v6, inited);
    if (v2)
    {
      swift_setDeallocating();
      sub_1C004EFEC();
    }
    else
    {
      swift_release();
      swift_setDeallocating();
      sub_1C004EFEC();
      v8 = (sqlite3 *)sub_1C0055230();
      return sqlite3_changes(v8) == 0;
    }
  }
  else
  {
    return 0;
  }
  return v7;
}

BOOL sub_1C0268694(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
  v5 = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 64) = &off_1E799BE20;
  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(inited + 40) = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_1_8();
  v9 = sub_1C0054CEC(0xD00000000000002CLL, v6, inited, v7, v8);
  swift_setDeallocating();
  sub_1C004EFEC();
  return v9;
}

uint64_t sub_1C0268750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t inited;
  uint64_t v10;
  uint64_t result;
  __int128 v12;
  uint64_t v13;
  _QWORD v14[17];

  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  sub_1C03046CC();
  sub_1C0303FD0();
  sub_1C0303FD0();
  OUTLINED_FUNCTION_1_8();
  sub_1C0303FD0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
  *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 64) = &off_1E799BE20;
  *(_QWORD *)(inited + 32) = a3;
  *(_QWORD *)(inited + 40) = a4;
  swift_bridgeObjectRetain();
  v14[16] = a5;
  sub_1C006890C(0, 0xE000000000000000, inited);
  if (v5)
  {
    swift_setDeallocating();
    OUTLINED_FUNCTION_14_58();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_setDeallocating();
    OUTLINED_FUNCTION_14_58();
    OUTLINED_FUNCTION_31();
    sub_1C03046CC();
    swift_bridgeObjectRelease();
    sub_1C0303FD0();
    sub_1C0303FD0();
    v10 = swift_initStackObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C0305B60;
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 64) = &off_1E799BE20;
    *(_QWORD *)(v10 + 32) = a3;
    *(_QWORD *)(v10 + 40) = a4;
    swift_bridgeObjectRetain();
    sub_1C0054FD0(0x69205443454C4553, 0xEF204D4F52462064, v10, (uint64_t)&v12);
    swift_setDeallocating();
    OUTLINED_FUNCTION_14_58();
    result = swift_bridgeObjectRelease();
    if (v13)
    {
      sub_1C004CD5C(&v12, (uint64_t)v14);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727518);
      swift_dynamicCast();
      return 0x69205443454C4553;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_1C0268A08(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  char v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;

  v3 = a1[1];
  v4 = sub_1C03049CC();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1C0268FD8(0, v3, 1, a1);
      return;
    }
    goto LABEL_124;
  }
  v5 = v4;
  sub_1C027E068(v3 / 2);
  v85 = a1;
  v86 = v6;
  v90 = v7;
  v88 = v3;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v27 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_90:
    if (v27 < 2)
    {
LABEL_101:
      swift_bridgeObjectRelease();
      if (v88 >= -1)
      {
        *(_QWORD *)(v86 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_129;
    }
    v78 = *v85;
    while (1)
    {
      v79 = v27 - 2;
      if (v27 < 2)
        break;
      if (!v78)
        goto LABEL_133;
      v80 = *(_QWORD *)&v10[16 * v79 + 32];
      v81 = *(_QWORD *)&v10[16 * v27 + 24];
      sub_1C0269030((uint64_t *)(v78 + 8 * v80), (uint64_t *)(v78 + 8 * *(_QWORD *)&v10[16 * v27 + 16]), v78 + 8 * v81, v90);
      if (v1)
        goto LABEL_86;
      if (v81 < v80)
        goto LABEL_119;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_1C020FAB8();
      if (v79 >= *((_QWORD *)v10 + 2))
        goto LABEL_120;
      v82 = &v10[16 * v79 + 32];
      *(_QWORD *)v82 = v80;
      *((_QWORD *)v82 + 1) = v81;
      v83 = *((_QWORD *)v10 + 2);
      if (v27 > v83)
        goto LABEL_121;
      memmove(&v10[16 * v27 + 16], &v10[16 * v27 + 32], 16 * (v83 - v27));
      *((_QWORD *)v10 + 2) = v83 - 1;
      v27 = v83 - 1;
      if (v83 <= 2)
        goto LABEL_101;
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v84 = *a1 - 8;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v87 = v5;
  v89 = *a1;
  while (1)
  {
    v11 = v8++;
    if (v8 < v3)
    {
      v12 = *(_QWORD *)(v9 + 8 * v8);
      v13 = *(_QWORD *)(v9 + 8 * v11);
      v8 = v11 + 2;
      if (v11 + 2 < v3)
      {
        v14 = v12;
        while (1)
        {
          v15 = *(_QWORD *)(v9 + 8 * v8);
          if (v12 < v13 == v15 >= v14)
            break;
          ++v8;
          v14 = v15;
          if (v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v12 < v13)
      {
        if (v8 < v11)
          goto LABEL_126;
        if (v11 < v8)
        {
          v16 = v8 - 1;
          v17 = v11;
          do
          {
            if (v17 != v16)
            {
              if (!v9)
                goto LABEL_132;
              v18 = *(_QWORD *)(v9 + 8 * v17);
              *(_QWORD *)(v9 + 8 * v17) = *(_QWORD *)(v9 + 8 * v16);
              *(_QWORD *)(v9 + 8 * v16) = v18;
            }
            v58 = ++v17 < v16--;
          }
          while (v58);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_123;
      if (v8 - v11 < v5)
      {
        v19 = v11 + v5;
        if (__OFADD__(v11, v5))
          goto LABEL_127;
        if (v19 >= v3)
          v19 = v3;
        if (v19 < v11)
          goto LABEL_128;
        if (v8 != v19)
        {
          v20 = (uint64_t *)(v84 + 8 * v8);
          do
          {
            v21 = *(_QWORD *)(v9 + 8 * v8);
            v22 = v11;
            v23 = v20;
            do
            {
              v24 = *v23;
              if (v21 >= *v23)
                break;
              if (!v9)
                goto LABEL_130;
              *v23 = v21;
              v23[1] = v24;
              --v23;
              ++v22;
            }
            while (v8 != v22);
            ++v8;
            ++v20;
          }
          while (v8 != v19);
          v8 = v19;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_122;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1C00500C8(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v26 = *((_QWORD *)v10 + 2);
    v25 = *((_QWORD *)v10 + 3);
    v27 = v26 + 1;
    v9 = v89;
    if (v26 >= v25 >> 1)
    {
      v77 = sub_1C00500C8((char *)(v25 > 1), v26 + 1, 1, v10);
      v9 = v89;
      v10 = v77;
    }
    *((_QWORD *)v10 + 2) = v27;
    v28 = v10 + 32;
    v29 = &v10[16 * v26 + 32];
    *(_QWORD *)v29 = v11;
    *((_QWORD *)v29 + 1) = v8;
    if (v26)
      break;
    v27 = 1;
LABEL_81:
    v5 = v87;
    v3 = v88;
    if (v8 >= v88)
      goto LABEL_90;
  }
  while (1)
  {
    v30 = v27 - 1;
    if (v27 >= 4)
    {
      v35 = &v28[16 * v27];
      v36 = *((_QWORD *)v35 - 8);
      v37 = *((_QWORD *)v35 - 7);
      v41 = __OFSUB__(v37, v36);
      v38 = v37 - v36;
      if (v41)
        goto LABEL_107;
      v40 = *((_QWORD *)v35 - 6);
      v39 = *((_QWORD *)v35 - 5);
      v41 = __OFSUB__(v39, v40);
      v33 = v39 - v40;
      v34 = v41;
      if (v41)
        goto LABEL_108;
      v42 = v27 - 2;
      v43 = &v28[16 * v27 - 32];
      v45 = *(_QWORD *)v43;
      v44 = *((_QWORD *)v43 + 1);
      v41 = __OFSUB__(v44, v45);
      v46 = v44 - v45;
      if (v41)
        goto LABEL_109;
      v41 = __OFADD__(v33, v46);
      v47 = v33 + v46;
      if (v41)
        goto LABEL_111;
      if (v47 >= v38)
      {
        v65 = &v28[16 * v30];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v41 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v41)
          goto LABEL_117;
        v58 = v33 < v68;
        goto LABEL_70;
      }
    }
    else
    {
      if (v27 != 3)
      {
        v59 = *((_QWORD *)v10 + 4);
        v60 = *((_QWORD *)v10 + 5);
        v41 = __OFSUB__(v60, v59);
        v52 = v60 - v59;
        v53 = v41;
        goto LABEL_64;
      }
      v32 = *((_QWORD *)v10 + 4);
      v31 = *((_QWORD *)v10 + 5);
      v41 = __OFSUB__(v31, v32);
      v33 = v31 - v32;
      v34 = v41;
    }
    if ((v34 & 1) != 0)
      goto LABEL_110;
    v42 = v27 - 2;
    v48 = &v28[16 * v27 - 32];
    v50 = *(_QWORD *)v48;
    v49 = *((_QWORD *)v48 + 1);
    v51 = __OFSUB__(v49, v50);
    v52 = v49 - v50;
    v53 = v51;
    if (v51)
      goto LABEL_112;
    v54 = &v28[16 * v30];
    v56 = *(_QWORD *)v54;
    v55 = *((_QWORD *)v54 + 1);
    v41 = __OFSUB__(v55, v56);
    v57 = v55 - v56;
    if (v41)
      goto LABEL_114;
    if (__OFADD__(v52, v57))
      goto LABEL_116;
    if (v52 + v57 >= v33)
    {
      v58 = v33 < v57;
LABEL_70:
      if (v58)
        v30 = v42;
      goto LABEL_72;
    }
LABEL_64:
    if ((v53 & 1) != 0)
      goto LABEL_113;
    v61 = &v28[16 * v30];
    v63 = *(_QWORD *)v61;
    v62 = *((_QWORD *)v61 + 1);
    v41 = __OFSUB__(v62, v63);
    v64 = v62 - v63;
    if (v41)
      goto LABEL_115;
    if (v64 < v52)
      goto LABEL_81;
LABEL_72:
    v69 = v10;
    v70 = v30 - 1;
    if (v30 - 1 >= v27)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v9)
      goto LABEL_131;
    v71 = &v28[16 * v70];
    v72 = *(_QWORD *)v71;
    v73 = v28;
    v74 = &v28[16 * v30];
    v75 = *((_QWORD *)v74 + 1);
    sub_1C0269030((uint64_t *)(v9 + 8 * *(_QWORD *)v71), (uint64_t *)(v9 + 8 * *(_QWORD *)v74), v9 + 8 * v75, v90);
    if (v1)
      break;
    if (v75 < v72)
      goto LABEL_104;
    if (v30 > *((_QWORD *)v69 + 2))
      goto LABEL_105;
    *(_QWORD *)v71 = v72;
    *(_QWORD *)&v73[16 * v70 + 8] = v75;
    v76 = *((_QWORD *)v69 + 2);
    if (v30 >= v76)
      goto LABEL_106;
    v10 = v69;
    v27 = v76 - 1;
    memmove(v74, v74 + 16, 16 * (v76 - 1 - v30));
    v28 = v73;
    *((_QWORD *)v69 + 2) = v76 - 1;
    v9 = v89;
    if (v76 <= 2)
      goto LABEL_81;
  }
LABEL_86:
  swift_bridgeObjectRelease();
  if (v88 < -1)
    goto LABEL_125;
  *(_QWORD *)(v86 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_1C0268FD8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 8 * a3 - 8;
    while (2)
    {
      v6 = *(_QWORD *)(v4 + 8 * a3);
      v7 = result;
      v8 = (uint64_t *)v5;
      do
      {
        v9 = *v8;
        if (v6 >= *v8)
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        *v8 = v6;
        v8[1] = v9;
        --v8;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 8;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1C0269030(uint64_t *a1, uint64_t *a2, unint64_t a3, uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v14;
  BOOL v15;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  BOOL v21;
  BOOL v22;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = (char *)a2 - (char *)a1;
  v9 = a2 - a1;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v9 >= v11)
  {
    sub_1C00ADA28(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v12 = &v4[v11];
    if (v7 >= v6 || v10 < 8)
      goto LABEL_39;
    v18 = (uint64_t *)(a3 - 8);
    while (1)
    {
      v19 = v18 + 1;
      v20 = *(v6 - 1);
      if (*(v12 - 1) >= v20)
      {
        v22 = v19 != v12 || v18 >= v12;
        v20 = *--v12;
        if (!v22)
          goto LABEL_35;
      }
      else
      {
        v21 = v19 != v6 || v18 >= v6;
        --v6;
        if (!v21)
          goto LABEL_35;
      }
      *v18 = v20;
LABEL_35:
      --v18;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_39;
    }
  }
  sub_1C00ADA28(a1, a2 - a1, a4);
  v12 = &v4[v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      v14 = *v6;
      if (*v6 < *v4)
        break;
      v14 = *v4;
      v15 = v7 == v4++;
      if (!v15)
        goto LABEL_11;
LABEL_12:
      ++v7;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_17;
    }
    v15 = v7 == v6++;
    if (v15)
      goto LABEL_12;
LABEL_11:
    *v7 = v14;
    goto LABEL_12;
  }
LABEL_17:
  v6 = v7;
LABEL_39:
  sub_1C00ADA28(v4, v12 - v4, v6);
  return 1;
}

uint64_t sub_1C02691A8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727CF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C02691E8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Entity();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0269224(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Entity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_2_121(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = a1;
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_3_126(float a1)
{
  float *v1;

  *v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_9_86()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_14_65()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1C003E6D8(v0, v1, (uint64_t *)(v2 - 104));
}

uint64_t OUTLINED_FUNCTION_19_46()
{
  return swift_bridgeObjectRetain();
}

void static MorphunAssetManager.prepare(locale:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = sub_1C0301DB0();
  v3 = OUTLINED_FUNCTION_9_87(v2);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_6_0();
  v6 = v5 - v4;
  v7 = sub_1C0303CA0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_6_0();
  v11 = (_QWORD *)(v10 - v9);
  v12 = sub_1C0303D30();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_19_2();
  v16 = (char *)(v14 - v15);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v39 - v18;
  sub_1C0303D0C();
  *v11 = 20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E0DEF4A0], v7);
  sub_1C0303D18();
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
  v20 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20(v16, v12);
  v21 = sub_1C0303D24();
  v20(v19, v12);
  v22 = (void *)objc_opt_self();
  v23 = (void *)sub_1C0301D8C();
  v24 = objc_msgSend(v22, sel_blockingOnDemandDownloadForLocale_withTimeout_withProgress_, v23, v21, 0);

  if (v24)
  {
    v25 = qword_1ED727970;
    v26 = v24;
    if (v25 != -1)
      swift_once();
    v27 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v27, (uint64_t)&unk_1ED7295C8);
    v28 = v40;
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v40 + 16))(v6, a1, v39[1]);
    v29 = v26;
    v30 = sub_1C0303B80();
    v31 = sub_1C03042F4();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = OUTLINED_FUNCTION_4_0();
      v42 = OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v32 = 136446466;
      sub_1C0078C88();
      v33 = sub_1C03049E4();
      v35 = OUTLINED_FUNCTION_10_10(v33, v34);
      OUTLINED_FUNCTION_95_3(v35);
      sub_1C03044B0();
      OUTLINED_FUNCTION_14();
      OUTLINED_FUNCTION_75_5(*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
      *(_WORD *)(v32 + 12) = 2082;
      v41 = (uint64_t)v29;
      v36 = v29;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7281B0);
      v37 = sub_1C0303EF8();
      v41 = OUTLINED_FUNCTION_10_10(v37, v38);
      sub_1C03044B0();

      OUTLINED_FUNCTION_14();
      _os_log_impl(&dword_1C0039000, v30, v31, "error when downloading morphun assets. locale=%{public}s: %{public}s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }
    OUTLINED_FUNCTION_75_5(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));

    byte_1EF5C2628 = 1;
    swift_willThrow();

  }
  else
  {
    sub_1C008AC30(a1);
  }
  OUTLINED_FUNCTION_28_0();
}

ValueMetadata *type metadata accessor for MorphunAssetManager()
{
  return &type metadata for MorphunAssetManager;
}

unint64_t sub_1C0269648()
{
  unint64_t result;

  result = qword_1EF5C2630;
  if (!qword_1EF5C2630)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0322434, &type metadata for MorphunAssetManagerError);
    atomic_store(result, (unint64_t *)&qword_1EF5C2630);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MorphunAssetManagerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C02696D0 + 4 * byte_1C0322385[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0269704 + 4 * asc_1C0322380[v4]))();
}

uint64_t sub_1C0269704(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C026970C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0269714);
  return result;
}

uint64_t sub_1C0269720(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0269728);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C026972C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0269734(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MorphunAssetManagerError()
{
  return &type metadata for MorphunAssetManagerError;
}

unint64_t sub_1C0269754()
{
  unint64_t result;

  result = qword_1EF5C2638;
  if (!qword_1EF5C2638)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C032240C, &type metadata for MorphunAssetManagerError);
    atomic_store(result, (unint64_t *)&qword_1EF5C2638);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_9_87(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(result - 8);
  *(_QWORD *)(v1 - 104) = result;
  *(_QWORD *)(v1 - 96) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_12_61@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_1C02697B0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if (a4 <= 4u)
  {
    if (((1 << a4) & 0x19) == 0)
      swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t initializeWithCopy for QueryError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1C02697B0(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for QueryError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1C02697B0(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1C0056D68(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for QueryError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1C0056D68(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFC && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 4)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QueryError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C02699A0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1C02699A8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for QueryError()
{
  return &type metadata for QueryError;
}

void sub_1C02699C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1C0269A00()
{
  OUTLINED_FUNCTION_1_125();
  sub_1C03046CC();
  OUTLINED_FUNCTION_31_8();
  sub_1C0303FD0();
  return 0x2068637573206F4ELL;
}

void sub_1C0269BA4()
{
  uint64_t v0;

  sub_1C02699C0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t OUTLINED_FUNCTION_0_138()
{
  return sub_1C0303FD0();
}

uint64_t OUTLINED_FUNCTION_3_127()
{
  return sub_1C0303FD0();
}

uint64_t sub_1C0269BEC(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _OWORD v39[3];

  *(_QWORD *)&v39[0] = a1;
  v14 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7281B0);
  type metadata accessor for InferenceError();
  if ((swift_dynamicCast() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_7_69();
    v15 = *(_BYTE *)(v36 + 16);
    v17 = *(_QWORD *)(v36 + 24);
    v16 = *(_QWORD *)(v36 + 32);
    v19 = *(_QWORD *)(v36 + 40);
    v18 = *(_QWORD *)(v36 + 48);
    v21 = *(_QWORD *)(v36 + 56);
    v20 = *(_QWORD *)(v36 + 64);
    v22 = *(_QWORD *)(v36 + 80);
    v34 = *(_QWORD *)(v36 + 72);
    v32 = *(_BYTE *)(v36 + 88);
    v23 = OUTLINED_FUNCTION_75_12();
    *(_BYTE *)(v23 + 89) = 0;
    *(_BYTE *)(v23 + 16) = v15;
    *(_QWORD *)(v23 + 24) = v17;
    *(_QWORD *)(v23 + 32) = v16;
    *(_QWORD *)(v23 + 40) = v19;
    *(_QWORD *)(v23 + 48) = v18;
    *(_QWORD *)(v23 + 56) = v21;
    *(_QWORD *)(v23 + 64) = v20;
    *(_QWORD *)(v23 + 72) = v34;
    *(_QWORD *)(v23 + 80) = v22;
    *(_BYTE *)(v23 + 88) = v32;
    v24 = *(_BYTE *)(v36 + 89);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_22();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    *(_BYTE *)(v23 + 89) = v24;
    swift_release();
  }
  else
  {
    v25 = a1;
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_33();
      v39[0] = v36;
      v39[1] = v37;
      v39[2] = v38;
      v23 = sub_1C026A350(v39);
      OUTLINED_FUNCTION_7_69();
    }
    else
    {
      *(_QWORD *)&v39[0] = a1;
      v26 = a1;
      v27 = sub_1C0303EF8();
      v33 = v28;
      v35 = v27;
      v29 = objc_msgSend((id)objc_opt_self(), sel_callStackSymbols);
      v30 = sub_1C0304138();
      OUTLINED_FUNCTION_7_69();

      v23 = OUTLINED_FUNCTION_75_12();
      *(_BYTE *)(v23 + 89) = 0;
      *(_BYTE *)(v23 + 16) = 60;
      *(_QWORD *)(v23 + 24) = v35;
      *(_QWORD *)(v23 + 32) = v33;
      *(_QWORD *)(v23 + 40) = a3;
      *(_QWORD *)(v23 + 48) = a4;
      *(_QWORD *)(v23 + 56) = a5;
      *(_QWORD *)(v23 + 64) = a6;
      *(_QWORD *)(v23 + 72) = a7;
      *(_QWORD *)(v23 + 80) = v30;
      *(_BYTE *)(v23 + 88) = a2;
    }
  }
  return v23;
}

uint64_t sub_1C0269E18(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1C0269E54 + 4 * word_1C03224F0[a1]))(0xD000000000000021, 0x80000001C032B350);
}

uint64_t sub_1C0269E54()
{
  uint64_t v0;

  return v0 - 16;
}

uint64_t InferenceError.__allocating_init(_:file:function:line:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C0269BEC(a1, 2, a2, a3, a4, a5, a6);
}

uint64_t sub_1C026A340(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C026A350(_QWORD *a1)
{
  int v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];
  _BYTE v13[16];

  v2 = *(unsigned __int8 *)a1;
  switch(v2)
  {
    case 1:
      v4 = a1[2];
      if (v4 && (a1[1] == 0xD00000000000002ALL && v4 == 0x80000001C0335420 || (sub_1C0304A08() & 1) != 0))
      {
        v3 = 46;
        goto LABEL_20;
      }
      break;
    case 90:
      v3 = 50;
      goto LABEL_20;
    case 13:
      v3 = 49;
      goto LABEL_20;
    case 14:
      v3 = 47;
      goto LABEL_20;
    case 23:
      v5 = 0;
      v3 = 46;
      goto LABEL_21;
    case 80:
      v3 = 51;
      goto LABEL_20;
    case 11:
      v3 = 48;
LABEL_20:
      v5 = 1;
      goto LABEL_21;
  }
  v3 = 46;
  v5 = 2;
LABEL_21:
  sub_1C00F7F8C((uint64_t)(a1 + 1), (uint64_t)v13);
  sub_1C00F7F8C((uint64_t)(a1 + 3), (uint64_t)v12);
  v6 = a1[5];
  sub_1C0098758((uint64_t)v13);
  sub_1C0098758((uint64_t)v12);
  swift_bridgeObjectRetain();
  v7 = sub_1C0188D10();
  v9 = v8;
  sub_1C0098780((uint64_t)v13);
  sub_1C0098780((uint64_t)v12);
  swift_bridgeObjectRelease();
  type metadata accessor for InferenceError();
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 89) = 0;
  *(_BYTE *)(v10 + 16) = v3;
  *(_QWORD *)(v10 + 24) = v7;
  *(_QWORD *)(v10 + 32) = v9;
  *(_QWORD *)(v10 + 40) = 0;
  *(_QWORD *)(v10 + 48) = 0xE000000000000000;
  *(_QWORD *)(v10 + 56) = 0;
  *(_QWORD *)(v10 + 64) = 0xE000000000000000;
  *(_QWORD *)(v10 + 72) = 0;
  *(_QWORD *)(v10 + 80) = v6;
  *(_BYTE *)(v10 + 88) = v5;
  swift_bridgeObjectRetain();
  sub_1C0098780((uint64_t)v13);
  sub_1C0098780((uint64_t)v12);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C026A508(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  *(_BYTE *)(v10 + 89) = 0;
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = a3;
  *(_QWORD *)(v10 + 40) = a4;
  *(_QWORD *)(v10 + 48) = a5;
  *(_QWORD *)(v10 + 56) = a6;
  *(_QWORD *)(v10 + 64) = a7;
  *(_QWORD *)(v10 + 72) = a8;
  *(_QWORD *)(v10 + 80) = a9;
  *(_BYTE *)(v10 + 88) = a10;
  return v10;
}

uint64_t sub_1C026A534()
{
  sub_1C03046CC();
  sub_1C0303FD0();
  sub_1C03047B0();
  OUTLINED_FUNCTION_7_92();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_59_3();
  swift_bridgeObjectRelease();
  sub_1C0303FD0();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_59_3();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_92();
  sub_1C03049E4();
  sub_1C0303FD0();
  swift_bridgeObjectRelease();
  sub_1C0303FD0();
  swift_bridgeObjectRetain();
  sub_1C0303FD0();
  OUTLINED_FUNCTION_33();
  sub_1C0303FD0();
  return 0;
}

uint64_t sub_1C026A6B0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;

  type metadata accessor for InferenceError();
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = 0xE000000000000000;
  *(_QWORD *)(v12 + 40) = a2;
  *(_QWORD *)(v12 + 48) = a3;
  *(_QWORD *)(v12 + 56) = a4;
  *(_QWORD *)(v12 + 64) = a5;
  v13 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v12 + 72) = a6;
  *(_QWORD *)(v12 + 80) = v13;
  *(_WORD *)(v12 + 88) = 1;
  v14 = qword_1ED728430;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14 != -1)
    swift_once();
  v15 = sub_1C0303B98();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED729650);
  sub_1C026A800();
  sub_1C00A3930();
  swift_allocError();
  *v16 = v12;
  return swift_willThrow();
}

void sub_1C026A7B4()
{
  uint64_t v0;

  if (qword_1ED728430 != -1)
    swift_once();
  v0 = sub_1C0303B98();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED729650);
  sub_1C026A800();
}

void sub_1C026A800()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 89) & 1) == 0)
  {
    *(_BYTE *)(v0 + 89) = 1;
    sub_1C026A848();
    if (*(_BYTE *)(v0 + 88))
    {
      if (*(_BYTE *)(v0 + 88) == 1)
      {
        sub_1C026AA98();
      }
      else
      {
        sub_1C026AA98();
        sub_1C026AC70();
      }
    }
  }
}

uint64_t sub_1C026A848()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_retain_n();
  v1 = sub_1C0303B80();
  v2 = sub_1C03042F4();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v14 = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v3 = 136446210;
    v4 = sub_1C026A534();
    sub_1C003E6D8(v4, v5, &v14);
    sub_1C03044B0();
    OUTLINED_FUNCTION_1_126();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v1, v2, "%{public}s", v3);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_1_126();

  result = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(result + 16);
  if (v7)
  {
    v8 = (unint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      v10 = *(v8 - 1);
      v9 = *v8;
      swift_bridgeObjectRetain_n();
      v11 = sub_1C0303B80();
      v12 = sub_1C03042F4();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = OUTLINED_FUNCTION_4_0();
        v14 = OUTLINED_FUNCTION_4_0();
        *(_DWORD *)v13 = 136446210;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v13 + 4) = sub_1C003E6D8(v10, v9, &v14);
        swift_bridgeObjectRelease_n();
        OUTLINED_FUNCTION_13_0(&dword_1C0039000, v11, v12, "%{public}s", (uint8_t *)v13);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_5();
      }
      swift_bridgeObjectRelease_n();

      v8 += 2;
      --v7;
    }
    while (v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C026AA98()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725670);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0309BD0;
  *(_QWORD *)(inited + 32) = 0x6449726F727265;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  *(_QWORD *)(inited + 48) = sub_1C0269E18(*(_BYTE *)(v0 + 16));
  *(_QWORD *)(inited + 56) = v2;
  *(_BYTE *)(inited + 64) = 3;
  *(_QWORD *)(inited + 72) = 1701603686;
  *(_QWORD *)(inited + 80) = 0xE400000000000000;
  v3 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(inited + 88) = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(inited + 96) = v3;
  *(_BYTE *)(inited + 104) = 3;
  *(_QWORD *)(inited + 112) = 0x6E6F6974636E7566;
  *(_QWORD *)(inited + 120) = 0xE800000000000000;
  v4 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(inited + 128) = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(inited + 136) = v4;
  *(_BYTE *)(inited + 144) = 3;
  *(_QWORD *)(inited + 152) = 1701734764;
  *(_QWORD *)(inited + 160) = 0xE400000000000000;
  *(_QWORD *)(inited + 168) = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(inited + 176) = 0;
  *(_BYTE *)(inited + 184) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1C0303DB4();
  sub_1C0303FD0();
  v6 = (void *)sub_1C0303E8C();
  swift_bridgeObjectRelease();
  sub_1C00F9CF8(v5);
  OUTLINED_FUNCTION_33();
  swift_bridgeObjectRelease();
  sub_1C0071A20();
  v7 = (void *)sub_1C0303D84();
  swift_release();
  AnalyticsSendEvent();

}

uint64_t sub_1C026AC70()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;

  if (qword_1ED728430 != -1)
    swift_once();
  v0 = sub_1C0303B98();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED729650);
  swift_retain_n();
  v1 = sub_1C0303B80();
  v2 = sub_1C0304300();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v7 = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v3 = 136446210;
    v4 = sub_1C026A534();
    sub_1C003E6D8(v4, v5, &v7);
    sub_1C03044B0();
    OUTLINED_FUNCTION_1_126();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v1, v2, "Simulating crash for InferenceError: %{public}s", v3);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }

  return OUTLINED_FUNCTION_1_126();
}

uint64_t sub_1C026ADE0()
{
  unint64_t v0;

  v0 = sub_1C0304A38();
  OUTLINED_FUNCTION_33();
  if (v0 >= 0x48)
    return 72;
  else
    return v0;
}

void sub_1C026AE2C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_1C025F644(*a1, *a2);
}

void sub_1C026AE38()
{
  unsigned __int8 *v0;

  sub_1C00CECA0(*v0);
}

uint64_t sub_1C026AE40(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1C00C2E68(a1, *v1);
}

void sub_1C026AE48(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EA978(a1, *v1);
}

uint64_t sub_1C026AE50@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C026ADE0();
  *a1 = result;
  return result;
}

uint64_t sub_1C026AE7C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1C0269E18(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t InferenceError.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InferenceError.__deallocating_deinit()
{
  InferenceError.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C026AEF8()
{
  return sub_1C026A534();
}

uint64_t type metadata accessor for InferenceError()
{
  return objc_opt_self();
}

uint64_t method lookup function for InferenceError()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InferenceError.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of InferenceError.log()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t storeEnumTagSinglePayload for InferenceError.MeasurementKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C026AFA8 + 4 * byte_1C0322585[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C026AFDC + 4 * byte_1C0322580[v4]))();
}

uint64_t sub_1C026AFDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C026AFE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C026AFECLL);
  return result;
}

uint64_t sub_1C026AFF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C026B000);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C026B004(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C026B00C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InferenceError.MeasurementKind()
{
  return &type metadata for InferenceError.MeasurementKind;
}

uint64_t getEnumTagSinglePayload for InferenceError.ErrorId(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xB9)
  {
    if (a2 + 71 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 71) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 72;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x48;
  v5 = v6 - 72;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for InferenceError.ErrorId(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 71 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 71) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xB9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xB8)
    return ((uint64_t (*)(void))((char *)&loc_1C026B0FC + 4 * byte_1C032258F[v4]))();
  *a1 = a2 + 71;
  return ((uint64_t (*)(void))((char *)sub_1C026B130 + 4 * byte_1C032258A[v4]))();
}

uint64_t sub_1C026B130(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C026B138(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C026B140);
  return result;
}

uint64_t sub_1C026B14C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C026B154);
  *(_BYTE *)result = a2 + 71;
  return result;
}

uint64_t sub_1C026B158(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C026B160(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InferenceError.ErrorId()
{
  return &type metadata for InferenceError.ErrorId;
}

unint64_t sub_1C026B180()
{
  unint64_t result;

  result = qword_1EF5C2640;
  if (!qword_1EF5C2640)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03226F8, &type metadata for InferenceError.ErrorId);
    atomic_store(result, (unint64_t *)&qword_1EF5C2640);
  }
  return result;
}

unint64_t sub_1C026B1C0()
{
  unint64_t result;

  result = qword_1EF5C2648;
  if (!qword_1EF5C2648)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0322760, &type metadata for InferenceError.MeasurementKind);
    atomic_store(result, (unint64_t *)&qword_1EF5C2648);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_126()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_7_92()
{
  return sub_1C0303FD0();
}

uint64_t sub_1C026B214(uint64_t a1, _QWORD *a2, double a3, uint64_t a4, uint64_t a5, char a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  double v39;
  uint64_t v40;
  int v41;
  unint64_t v42;
  double v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  double v54;
  uint64_t (*v55)(uint64_t);
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  _QWORD *v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v8 = v7;
  v87 = a7;
  v86 = a2;
  v13 = sub_1C0301CFC();
  v82 = *(_QWORD *)(v13 - 8);
  v83 = v13;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PrivatizedContactResolverConfig(0);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_53();
  v91 = v18;
  type metadata accessor for ContactResolverDESRecord();
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_53();
  v69 = v20;
  v70 = *(_QWORD *)(type metadata accessor for StitchedContactResolverRecommendation(0) - 8);
  OUTLINED_FUNCTION_121();
  v22 = MEMORY[0x1E0C80A78](v21);
  v90 = (uint64_t)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v65 - v24;
  v26 = type metadata accessor for StitchedContactResolverRequest(0);
  v27 = *(_QWORD *)(v26 - 8);
  v73 = v26;
  v74 = v27;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_53();
  v89 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA150);
  OUTLINED_FUNCTION_121();
  v31 = MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v65 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v35 = (char *)&v65 - v34;
  v85 = (int *)type metadata accessor for StitchedContactData(0);
  v36 = v85[7];
  v88 = a1;
  v84 = a1 + v36;
  sub_1C00EA900(a1 + v36, (uint64_t)v35);
  v37 = type metadata accessor for StitchableInteraction();
  if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v37) == 1)
  {
    result = sub_1C00EA948((uint64_t)v35);
    v39 = 0.0;
  }
  else
  {
    v39 = *(double *)&v35[*(int *)(v37 + 28)];
    result = sub_1C0045840((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
  }
  if ((~*(_QWORD *)&v39 & 0x7FF0000000000000) == 0)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v39 <= -9.22337204e18)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v39 >= 9.22337204e18)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_once();
    goto LABEL_28;
  }
  v40 = *(_QWORD *)(v88 + 32);
  v68 = *(_QWORD *)(v40 + 16);
  if (!v68)
    return result;
  v81 = (uint64_t)v39;
  v71 = v40 + ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80));
  v41 = a6 & 1;
  if (!a5)
    v41 = 2;
  v80 = v41;
  swift_bridgeObjectRetain();
  v42 = 0;
  v43 = fmax(a3, 0.001);
  v44 = type metadata accessor for StitchedContactResolverRecommendation;
  v75 = v33;
  v76 = v37;
  v78 = v25;
  v66 = v40;
  v79 = v16;
  while (1)
  {
    if (v42 >= *(_QWORD *)(v40 + 16))
    {
      __break(1u);
      goto LABEL_33;
    }
    v45 = *(_QWORD *)(v74 + 72);
    v72 = v42;
    v46 = v71 + v45 * v42;
    v47 = v89;
    sub_1C004CC40(v46, v89, type metadata accessor for StitchedContactResolverRequest);
    v48 = *(_QWORD *)(v47 + *(int *)(v73 + 24));
    v49 = *(_QWORD *)(v48 + 16);
    if (v49)
      break;
LABEL_23:
    v42 = v72 + 1;
    sub_1C0045840(v89, type metadata accessor for StitchedContactResolverRequest);
    if (v42 == v68)
      return swift_bridgeObjectRelease();
  }
  v50 = v70;
  v51 = v48 + ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80));
  v67 = v48;
  swift_bridgeObjectRetain();
  v77 = *(_QWORD *)(v50 + 72);
  v52 = v69;
  while (1)
  {
    sub_1C004CC40(v51, (uint64_t)v25, v44);
    v53 = type metadata accessor for ContactResolverRunTimeData(0);
    if ((v87 & 1) == 0 && (v25[*(int *)(v53 + 48)] & 1) == 0)
    {
      sub_1C017EED0(v53, 0.0, 1.0);
      if (v54 >= v43)
        break;
    }
    sub_1C004CC40(v89, v91, type metadata accessor for PrivatizedContactResolverConfig);
    v55 = v44;
    sub_1C004CC40((uint64_t)v25, v90, v44);
    sub_1C00EA900(v84, (uint64_t)v33);
    if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v37) == 1)
    {
      sub_1C00EA948((uint64_t)v33);
      v56 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v57 = *(_QWORD *)&v33[*(int *)(v37 + 36)];
      swift_bridgeObjectRetain();
      sub_1C0045840((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
      v56 = sub_1C01DF9B4(v57);
      swift_bridgeObjectRelease();
    }
    sub_1C020B370(v91, v90, v56, *(_BYTE *)(v88 + v85[12]), v81, v80, *(unsigned int *)(v88 + v85[8]) | ((unint64_t)(*(unsigned __int16 *)(v88 + v85[8] + 4) | (*(unsigned __int8 *)(v88 + v85[8] + 6) << 16)) << 32), v52);
    v58 = (void *)*__swift_project_boxed_opaque_existential_1(v86, v86[3]);
    v59 = (uint64_t)v52;
    v60 = (uint64_t)v79;
    sub_1C0301CF0();
    sub_1C0213474(v59, v60, v58);
    if (v8)
    {
      OUTLINED_FUNCTION_3_128();
      sub_1C0045840(v59, (uint64_t (*)(_QWORD))type metadata accessor for ContactResolverDESRecord);
      sub_1C0045840((uint64_t)v78, type metadata accessor for StitchedContactResolverRecommendation);
      OUTLINED_FUNCTION_1_127();
      sub_1C0045840(v89, type metadata accessor for StitchedContactResolverRequest);
      return swift_bridgeObjectRelease();
    }
    OUTLINED_FUNCTION_3_128();
    sub_1C0045840(v59, (uint64_t (*)(_QWORD))type metadata accessor for ContactResolverDESRecord);
    v25 = v78;
    v44 = v55;
    sub_1C0045840((uint64_t)v78, v55);
    v37 = v76;
    v51 += v77;
    --v49;
    v52 = (_QWORD *)v59;
    v33 = v75;
    if (!v49)
    {
      OUTLINED_FUNCTION_1_127();
      v40 = v66;
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_127();
  if (qword_1ED727970 != -1)
    goto LABEL_36;
LABEL_28:
  v61 = sub_1C0303B98();
  __swift_project_value_buffer(v61, (uint64_t)&unk_1ED7295C8);
  v62 = sub_1C0303B80();
  v63 = sub_1C03042E8();
  if (os_log_type_enabled(v62, v63))
  {
    v64 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v64 = 0;
    _os_log_impl(&dword_1C0039000, v62, v63, "skipping logging for non-force prompt", v64, 2u);
    MEMORY[0x1C3B98378](v64, -1, -1);
  }

  sub_1C0045840((uint64_t)v25, type metadata accessor for StitchedContactResolverRecommendation);
  return sub_1C0045840(v89, type metadata accessor for StitchedContactResolverRequest);
}

BOOL sub_1C026B898(char a1, char a2, double a3)
{
  _BOOL8 result;
  double v5;
  double v6;

  result = 1;
  if ((a2 & 1) == 0 && (a1 & 1) == 0)
  {
    v5 = fmax(a3, 0.001);
    sub_1C017EED0(1, 0.0, 1.0);
    return v6 < v5;
  }
  return result;
}

double sub_1C026B8E0()
{
  id v0;
  void *v1;
  void *v2;
  id v3;
  double v4;
  double v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 112);
  v1 = (void *)sub_1C0303E8C();
  v2 = (void *)sub_1C0303E8C();
  v3 = objc_msgSend(v0, sel_levelForFactor_withNamespaceName_, v1, v2);

  if (v3)
  {
    objc_msgSend(v3, sel_doubleValue);
    v5 = v4;

  }
  else
  {
    v5 = 0.0;
  }

  return v5;
}

uint64_t OUTLINED_FUNCTION_1_127()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_3_128()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 184) + 8))(v0, *(_QWORD *)(v1 - 176));
}

uint64_t sub_1C026B9E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  char v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  _QWORD *v57;
  char v58[8];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD v64[4];
  __int128 v65;
  __int128 v66;
  char v67[8];
  char v68[8];

  v11 = a2;
  sub_1C005578C(a2, (uint64_t)v58, &qword_1EF5BA230);
  v14 = v59;
  v46 = v60;
  v45 = v61;
  v48 = v62;
  v47 = v63;
  v15 = (int *)type metadata accessor for PrivatizedContactResolverConfig(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (uint64_t)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = *a3;
  v18 = *(_QWORD *)(a1 + 48);
  v54 = *(_QWORD *)(a1 + 40);
  v53 = v18;
  swift_bridgeObjectRetain();
  v52 = sub_1C0301D74();
  v51 = v19;
  v20 = *(_QWORD **)(a1 + v15[12]);
  if (qword_1ED7267B8 != -1)
    goto LABEL_28;
  while (1)
  {
    if ((_QWORD *)qword_1ED7267A8 == v20)
    {
      OUTLINED_FUNCTION_1_128(0xE300000000000000);
      v21 = 7105633;
    }
    else if (v20 == (_QWORD *)4)
    {
      OUTLINED_FUNCTION_1_128(0xE800000000000000);
      v21 = 0x736567617373656DLL;
    }
    else if (v20 == (_QWORD *)1)
    {
      OUTLINED_FUNCTION_1_128(0xE500000000000000);
      v21 = 0x656E6F6870;
    }
    else
    {
      OUTLINED_FUNCTION_1_128(0xE700000000000000);
      v21 = 0x6E776F6E6B6E75;
    }
    v49 = v21;
    v22 = *(_QWORD *)(*(_QWORD *)(a1 + v15[10]) + 16);
    sub_1C0187BC4(a1, v17);
    v57 = a5;
    v56 = a6;
    v44 = v14;
    if (!v22)
    {
      v23 = 1;
      goto LABEL_23;
    }
    *(_QWORD *)&v43 = v11;
    v20 = *(_QWORD **)(v17 + v15[10]);
    v11 = v20[2];
    if (!v11)
    {
      v23 = 0;
      v11 = v43;
      goto LABEL_23;
    }
    v42 = v17;
    v17 = v20[4];
    v14 = v20[5];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_74_1();
    OUTLINED_FUNCTION_0_139();
    OUTLINED_FUNCTION_3_129();
    if ((v17 & 1) == 0)
      break;
    if (v11 == 1)
    {
      v23 = 0;
      goto LABEL_22;
    }
    v41 = a4;
    a5 = v20 + 7;
    a4 = 1;
    while (1)
    {
      a6 = a4 + 1;
      if (__OFADD__(a4, 1))
        break;
      v17 = *(a5 - 1);
      v14 = *a5;
      OUTLINED_FUNCTION_74_1();
      OUTLINED_FUNCTION_0_139();
      OUTLINED_FUNCTION_3_129();
      if ((v17 & 1) != 0)
      {
        ++a4;
        a5 += 2;
        if (a6 != v11)
          continue;
      }
      v23 = v17 ^ 1;
      a4 = v41;
      goto LABEL_22;
    }
    __break(1u);
LABEL_28:
    swift_once();
  }
  v23 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  v11 = v43;
  v17 = v42;
LABEL_23:
  sub_1C0187C08(v17);
  v24 = v15[14];
  v25 = *(_BYTE *)(a1 + v15[13]);
  v27 = *(_QWORD *)(a1 + v24);
  v26 = *(_QWORD *)(a1 + v24 + 8);
  swift_bridgeObjectRetain();
  sub_1C0187C08(a1);
  sub_1C005578C(v11, (uint64_t)v64, &qword_1EF5BA230);
  if (*((_QWORD *)&v64[0] + 1) == 1)
  {
    v28 = 0;
    v29 = 0;
    v30 = 0;
    v31 = 0;
    v32 = 0uLL;
  }
  else
  {
    v64[3] = v64[0];
    v65 = v64[1];
    v66 = v64[2];
    v43 = v64[0];
    sub_1C005578C((uint64_t)&v65, (uint64_t)v67, qword_1ED727DC0);
    v29 = v47;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_74_1();
    v31 = v45;
    swift_bridgeObjectRetain();
    sub_1C0098780((uint64_t)v67);
    sub_1C005578C((uint64_t)&v66, (uint64_t)v68, qword_1ED727DC0);
    sub_1C0098780((uint64_t)v68);
    swift_bridgeObjectRelease();
    v32 = v43;
    v28 = v48;
    v30 = v46;
  }
  v33 = v55;
  v34 = v54;
  v35 = v53;
  v36 = v51;
  v37 = v50;
  result = v49;
  v39 = v56 & 1;
  *(_QWORD *)a7 = v52;
  *(_QWORD *)(a7 + 8) = v36;
  *(_QWORD *)(a7 + 16) = result;
  *(_QWORD *)(a7 + 24) = v37;
  *(_QWORD *)(a7 + 32) = v34;
  *(_QWORD *)(a7 + 40) = v35;
  *(_BYTE *)(a7 + 48) = v23 & 1;
  *(_BYTE *)(a7 + 49) = v25;
  *(_BYTE *)(a7 + 50) = v33;
  v40 = v57;
  *(_QWORD *)(a7 + 56) = a4;
  *(_QWORD *)(a7 + 64) = v40;
  *(_QWORD *)(a7 + 72) = v27;
  *(_QWORD *)(a7 + 80) = v26;
  *(_OWORD *)(a7 + 88) = v32;
  *(_QWORD *)(a7 + 104) = v30;
  *(_QWORD *)(a7 + 112) = v31;
  *(_QWORD *)(a7 + 120) = v28;
  *(_QWORD *)(a7 + 128) = v29;
  *(_BYTE *)(a7 + 136) = v39;
  return result;
}

uint64_t destroy for BaseContactResolverMetric()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BaseContactResolverMetric(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  v10 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v10;
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BaseContactResolverMetric(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  return a1;
}

void *__swift_memcpy137_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x89uLL);
}

uint64_t assignWithTake for BaseContactResolverMetric(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for BaseContactResolverMetric(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 137))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BaseContactResolverMetric(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 136) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 137) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 137) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BaseContactResolverMetric()
{
  return &type metadata for BaseContactResolverMetric;
}

uint64_t storeEnumTagSinglePayload for CoreAnalyticsMeasurableError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C026C284 + 4 * byte_1C0322790[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C026C2A4 + 4 * byte_1C0322795[v4]))();
}

_BYTE *sub_1C026C284(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C026C2A4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C026C2AC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C026C2B4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C026C2BC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C026C2C4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CoreAnalyticsMeasurableError()
{
  return &type metadata for CoreAnalyticsMeasurableError;
}

unint64_t sub_1C026C2E4()
{
  unint64_t result;

  result = qword_1EF5C2650;
  if (!qword_1EF5C2650)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0322840, &type metadata for CoreAnalyticsMeasurableError);
    atomic_store(result, (unint64_t *)&qword_1EF5C2650);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_139()
{
  return sub_1C0304054();
}

void OUTLINED_FUNCTION_1_128(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 336) = a1;
}

uint64_t OUTLINED_FUNCTION_3_129()
{
  return swift_bridgeObjectRelease();
}

uint64_t *sub_1C026C35C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(type metadata accessor for StringTokenizer() + 20);
    v9 = (char *)v7 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C0301DB0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    v13 = a3[5];
    v14 = a3[6];
    v15 = (uint64_t *)((char *)v7 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (char *)v7 + v14;
    v19 = (char *)a2 + v14;
    v20 = sub_1C030367C();
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    v21(v18, v19, v20);
    v22 = (int *)type metadata accessor for SiriRemembersContactSignalProvider();
    v18[v22[5]] = v19[v22[5]];
    v23 = v22[6];
    v24 = &v18[v23];
    v25 = &v19[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    v27 = v22[7];
    v28 = &v18[v27];
    v29 = &v19[v27];
    v30 = *(_QWORD *)&v19[v27 + 24];
    swift_bridgeObjectRetain();
    if (v30)
    {
      v31 = *((_QWORD *)v29 + 4);
      *((_QWORD *)v28 + 3) = v30;
      *((_QWORD *)v28 + 4) = v31;
      (**(void (***)(char *, char *, uint64_t))(v30 - 8))(v28, v29, v30);
    }
    else
    {
      v32 = *((_OWORD *)v29 + 1);
      *(_OWORD *)v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v32;
      *((_QWORD *)v28 + 4) = *((_QWORD *)v29 + 4);
    }
    v33 = v22[8];
    v34 = &v18[v33];
    v35 = &v19[v33];
    v36 = *((_QWORD *)v35 + 1);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v36;
    v37 = a3[8];
    *(uint64_t *)((char *)v7 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(_OWORD *)((char *)v7 + v37) = *(_OWORD *)((char *)a2 + v37);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1C026C508(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_release();
  v4 = a1 + *(int *)(type metadata accessor for StringTokenizer() + 20);
  v5 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_1C030367C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = type metadata accessor for SiriRemembersContactSignalProvider();
  swift_bridgeObjectRelease();
  v9 = v6 + *(int *)(v8 + 28);
  if (*(_QWORD *)(v9 + 24))
    __swift_destroy_boxed_opaque_existential_0Tm(v9);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1C026C5E0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  *a1 = *a2;
  v6 = *(int *)(type metadata accessor for StringTokenizer() + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C0301DB0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  v11 = a3[5];
  v12 = a3[6];
  v13 = (_QWORD *)((char *)a1 + v11);
  v14 = (_QWORD *)((char *)a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (char *)a1 + v12;
  v17 = (char *)a2 + v12;
  v18 = sub_1C030367C();
  v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  v20 = (int *)type metadata accessor for SiriRemembersContactSignalProvider();
  v16[v20[5]] = v17[v20[5]];
  v21 = v20[6];
  v22 = &v16[v21];
  v23 = &v17[v21];
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = v24;
  v25 = v20[7];
  v26 = &v16[v25];
  v27 = &v17[v25];
  v28 = *(_QWORD *)&v17[v25 + 24];
  swift_bridgeObjectRetain();
  if (v28)
  {
    v29 = *((_QWORD *)v27 + 4);
    *((_QWORD *)v26 + 3) = v28;
    *((_QWORD *)v26 + 4) = v29;
    (**(void (***)(char *, char *, uint64_t))(v28 - 8))(v26, v27, v28);
  }
  else
  {
    v30 = *((_OWORD *)v27 + 1);
    *(_OWORD *)v26 = *(_OWORD *)v27;
    *((_OWORD *)v26 + 1) = v30;
    *((_QWORD *)v26 + 4) = *((_QWORD *)v27 + 4);
  }
  v31 = v20[8];
  v32 = &v16[v31];
  v33 = &v17[v31];
  v34 = *((_QWORD *)v33 + 1);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = v34;
  v35 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v35) = *(_OWORD *)((char *)a2 + v35);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1C026C764(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(int *)(type metadata accessor for StringTokenizer() + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C0301DB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[5];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1C030367C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v17 = (int *)type metadata accessor for SiriRemembersContactSignalProvider();
  v14[v17[5]] = v15[v17[5]];
  v18 = v17[6];
  v19 = &v14[v18];
  v20 = &v15[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = v17[7];
  v22 = (uint64_t)&v14[v21];
  v23 = &v15[v21];
  v24 = *(_QWORD *)&v15[v21 + 24];
  if (!*(_QWORD *)&v14[v21 + 24])
  {
    if (v24)
    {
      *(_QWORD *)(v22 + 24) = v24;
      *(_QWORD *)(v22 + 32) = *((_QWORD *)v23 + 4);
      (**(void (***)(uint64_t, char *))(v24 - 8))(v22, v23);
      goto LABEL_8;
    }
LABEL_7:
    v25 = *(_OWORD *)v23;
    v26 = *((_OWORD *)v23 + 1);
    *(_QWORD *)(v22 + 32) = *((_QWORD *)v23 + 4);
    *(_OWORD *)v22 = v25;
    *(_OWORD *)(v22 + 16) = v26;
    goto LABEL_8;
  }
  if (!v24)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v22);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v22, (uint64_t *)v23);
LABEL_8:
  v27 = v17[8];
  v28 = &v14[v27];
  v29 = &v15[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = a3[8];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  *v31 = *v32;
  v31[1] = v32[1];
  v31[2] = v32[2];
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  return a1;
}

_QWORD *sub_1C026C96C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = *(int *)(type metadata accessor for StringTokenizer() + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C0301DB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1C030367C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = (int *)type metadata accessor for SiriRemembersContactSignalProvider();
  v11[v14[5]] = v12[v14[5]];
  *(_OWORD *)&v11[v14[6]] = *(_OWORD *)&v12[v14[6]];
  v15 = v14[7];
  v16 = &v11[v15];
  v17 = &v12[v15];
  *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *(_OWORD *)&v11[v14[8]] = *(_OWORD *)&v12[v14[8]];
  v19 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
  return a1;
}

_QWORD *sub_1C026CA70(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(type metadata accessor for StringTokenizer() + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C0301DB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[5];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_1C030367C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = (int *)type metadata accessor for SiriRemembersContactSignalProvider();
  v16[v19[5]] = v17[v19[5]];
  v20 = v19[6];
  v21 = &v16[v20];
  v22 = &v17[v20];
  v24 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = v24;
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  v25 = v19[7];
  v26 = &v16[v25];
  if (*(_QWORD *)&v16[v25 + 24])
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v16[v25]);
  v27 = *(_OWORD *)&v17[v25 + 16];
  *(_OWORD *)v26 = *(_OWORD *)&v17[v25];
  *((_OWORD *)v26 + 1) = v27;
  *((_QWORD *)v26 + 4) = *(_QWORD *)&v17[v25 + 32];
  v28 = v19[8];
  v29 = &v16[v28];
  v30 = &v17[v28];
  v32 = *(_QWORD *)v30;
  v31 = *((_QWORD *)v30 + 1);
  *(_QWORD *)v29 = v32;
  *((_QWORD *)v29 + 1) = v31;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  v33 = a3[8];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  *v34 = *v35;
  v34[1] = v35[1];
  v34[2] = v35[2];
  *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
  return a1;
}

uint64_t sub_1C026CBF8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C026CC04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_178_1();
  OUTLINED_FUNCTION_1_7();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    type metadata accessor for SiriRemembersContactSignalProvider();
    OUTLINED_FUNCTION_1_7();
    if (!v9)
    {
      OUTLINED_FUNCTION_171_1(*(int *)(a3 + 28));
      OUTLINED_FUNCTION_37_0();
      return;
    }
    v7 = v10;
    v8 = v4 + *(int *)(a3 + 24);
  }
  OUTLINED_FUNCTION_46(v8, v3, v7);
}

uint64_t sub_1C026CC68()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C026CC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_178_1();
  OUTLINED_FUNCTION_0_6();
  if (v9)
  {
    v7 = OUTLINED_FUNCTION_209();
  }
  else
  {
    type metadata accessor for SiriRemembersContactSignalProvider();
    OUTLINED_FUNCTION_0_6();
    if (!v9)
    {
      *(_QWORD *)(v5 + *(int *)(a4 + 28)) = (v4 - 1);
      OUTLINED_FUNCTION_37_0();
      return;
    }
    v8 = v10;
    v7 = v5 + *(int *)(a4 + 24);
  }
  OUTLINED_FUNCTION_49_3(v7, v4, v4, v8);
}

uint64_t type metadata accessor for ContactSignalProviders(uint64_t a1)
{
  return sub_1C003CD30(a1, qword_1ED7267C0);
}

uint64_t sub_1C026CCF4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for StringTokenizer();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for SiriRemembersContactSignalProvider();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *sub_1C026CD98(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  __int128 v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  int *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  int *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  id v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  char *v86;
  _QWORD *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  __int128 v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t Expander;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  void *v113;
  id v114;
  void (*v115)(char *, char *, uint64_t);
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  int *v122;
  uint64_t v123;
  __int128 v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  void (*v134)(char *, char *, uint64_t);
  char *v135;
  int *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  void (*v145)(char *, char *, uint64_t);
  int *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  __int128 v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v173;
  char *v174;
  char *v175;
  int *v176;
  _QWORD *v177;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    v10 = (char *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for HypocorismGenerator();
    v176 = v6;
    if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2658);
      memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      *a1 = *v3;
      v11 = *(int *)(v7 + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)v3 + v11;
      *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)v3 + v11);
      v14 = *(int *)(type metadata accessor for StringTokenizer() + 20);
      v15 = &v12[v14];
      v16 = &v13[v14];
      v6 = v176;
      v17 = sub_1C0301DB0();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_retain();
      swift_retain();
      v18(v15, v16, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v19 = v6[5];
    v20 = (_QWORD *)((char *)a1 + v19);
    v21 = (_QWORD *)((char *)v3 + v19);
    v22 = type metadata accessor for MeCardContactGenerator();
    v177 = v3;
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2660);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = v21[1];
      *v20 = *v21;
      v20[1] = v24;
      v25 = *(int *)(v22 + 24);
      v26 = (char *)v20 + v25;
      v27 = (char *)v21 + v25;
      v28 = sub_1C0301DB0();
      v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v30 = v28;
      v3 = v177;
      v29(v26, v27, v30);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
    }
    v31 = v6[6];
    v32 = (_QWORD *)((char *)a1 + v31);
    v33 = (_QWORD *)((char *)v3 + v31);
    v34 = type metadata accessor for RelationshipAliasGenerator();
    if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v34))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726CA8);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      v36 = v33[1];
      *v32 = *v33;
      v32[1] = v36;
      v32[2] = v33[2];
      v37 = *(int *)(v34 + 24);
      v38 = (char *)v32 + v37;
      v39 = (char *)v33 + v37;
      *(_QWORD *)((char *)v32 + v37) = *(_QWORD *)((char *)v33 + v37);
      v40 = *(int *)(type metadata accessor for StringTokenizer() + 20);
      v174 = &v38[v40];
      v41 = &v39[v40];
      v6 = v176;
      v42 = sub_1C0301DB0();
      v43 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      v44 = v41;
      v3 = v177;
      v43(v174, v44, v42);
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v34);
    }
    v45 = v6[7];
    v46 = (_QWORD *)((char *)a1 + v45);
    v47 = (_QWORD *)((char *)v3 + v45);
    if (*v47)
    {
      v48 = v47[1];
      *v46 = *v47;
      v46[1] = v48;
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)v46 = *(_OWORD *)v47;
    }
    v49 = v6[9];
    *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)v3 + v6[8]);
    v50 = (char *)a1 + v49;
    v51 = (char *)v3 + v49;
    v52 = *(_OWORD *)((char *)v3 + v49 + 24);
    *(_OWORD *)((char *)a1 + v49 + 24) = v52;
    v53 = v52;
    v54 = **(void (***)(char *, char *, uint64_t))(v52 - 8);
    swift_retain();
    v54(v50, v51, v53);
    v55 = (int *)type metadata accessor for ContactsFrameworkMatcher();
    v56 = v55[5];
    v57 = &v50[v56];
    v58 = &v51[v56];
    *(_QWORD *)&v50[v56] = *(_QWORD *)&v51[v56];
    v59 = type metadata accessor for StringTokenizer();
    v60 = *(int *)(v59 + 20);
    v61 = &v57[v60];
    v62 = &v58[v60];
    v63 = sub_1C0301DB0();
    v175 = (char *)a1;
    v64 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16);
    swift_retain();
    v64(v61, v62, v63);
    v50[v55[6]] = v51[v55[6]];
    v65 = v55;
    v50[v55[7]] = v51[v55[7]];
    v66 = v176[10];
    v67 = &v175[v66];
    v68 = (char *)v177 + v66;
    v64(&v175[v66], (char *)v177 + v66, v63);
    v69 = *(int *)(type metadata accessor for SiriVocabularySearcher(0) + 20);
    v70 = *(void **)&v68[v69];
    *(_QWORD *)&v67[v69] = v70;
    v71 = *(int *)(type metadata accessor for ThirdPartyContactMatcher(0) + 20);
    v72 = &v67[v71];
    v73 = &v68[v71];
    *(_QWORD *)v72 = *(_QWORD *)v73;
    v74 = *(int *)(v59 + 20);
    v75 = &v72[v74];
    v76 = &v73[v74];
    v77 = v70;
    v78 = v64;
    v10 = v175;
    swift_retain();
    v78(v75, v76, v63);
    v79 = v176[11];
    v80 = &v175[v79];
    v81 = (char *)v177 + v79;
    v82 = *(_QWORD *)((char *)v177 + v79 + 24);
    if (v82)
    {
      v83 = *((_QWORD *)v81 + 4);
      *((_QWORD *)v80 + 3) = v82;
      *((_QWORD *)v80 + 4) = v83;
      (**(void (***)(char *, char *))(v82 - 8))(v80, v81);
      v84 = *((_OWORD *)v81 + 4);
      *((_OWORD *)v80 + 4) = v84;
      (**(void (***)(uint64_t, uint64_t))(v84 - 8))((uint64_t)(v80 + 40), (uint64_t)(v81 + 40));
    }
    else
    {
      memcpy(&v175[v79], (char *)v177 + v79, 0x50uLL);
    }
    v85 = v176[12];
    v86 = &v175[v85];
    v87 = (_QWORD *)((char *)v177 + v85);
    *(_QWORD *)v86 = *v87;
    v88 = *(int *)(v59 + 20);
    v89 = &v86[v88];
    v90 = (char *)v87 + v88;
    swift_retain();
    v78(v89, v90, v63);
    v91 = v176[13];
    v92 = &v175[v91];
    v93 = (char *)v177 + v91;
    v94 = *(_OWORD *)((char *)v177 + v91 + 24);
    *(_OWORD *)&v175[v91 + 24] = v94;
    (**(void (***)(char *, char *))(v94 - 8))(&v175[v91], (char *)v177 + v91);
    v95 = v65[5];
    v96 = &v92[v95];
    v97 = &v93[v95];
    *(_QWORD *)v96 = *(_QWORD *)v97;
    v98 = *(int *)(v59 + 20);
    v99 = &v96[v98];
    v173 = v59;
    v100 = &v97[v98];
    swift_retain();
    v78(v99, v100, v63);
    v92[v65[6]] = v93[v65[6]];
    v92[v65[7]] = v93[v65[7]];
    v101 = v176[15];
    v175[v176[14]] = *((_BYTE *)v177 + v176[14]);
    v102 = &v175[v101];
    v103 = (char *)v177 + v101;
    Expander = type metadata accessor for EmojiQueryExpander();
    if (__swift_getEnumTagSinglePayload((uint64_t)v103, 1, Expander))
    {
      v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2668);
      memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    }
    else
    {
      v78(v102, v103, v63);
      v106 = *(int *)(Expander + 20);
      v107 = &v102[v106];
      v108 = &v103[v106];
      *(_QWORD *)v107 = *(_QWORD *)v108;
      v109 = *(int *)(v173 + 20);
      v110 = &v107[v109];
      v111 = &v108[v109];
      swift_retain();
      v78(v110, v111, v63);
      v112 = *(int *)(Expander + 24);
      v113 = *(void **)&v103[v112];
      *(_QWORD *)&v102[v112] = v113;
      v114 = v113;
      __swift_storeEnumTagSinglePayload((uint64_t)v102, 0, 1, Expander);
    }
    v115 = v78;
    v116 = v176[16];
    v117 = &v175[v116];
    v118 = (char *)v177 + v116;
    *(_QWORD *)v117 = *(_QWORD *)((char *)v177 + v116);
    v119 = *(int *)(v173 + 20);
    v120 = &v117[v119];
    v121 = &v118[v119];
    swift_retain();
    v115(v120, v121, v63);
    v122 = (int *)type metadata accessor for AsrE3CandidateExpander();
    v123 = v122[5];
    v124 = *(_OWORD *)&v118[v123 + 24];
    *(_OWORD *)&v117[v123 + 24] = v124;
    (**(void (***)(void))(v124 - 8))();
    v125 = v122[6];
    v126 = &v117[v125];
    v127 = &v118[v125];
    *v126 = *v127;
    v128 = *((_QWORD *)v127 + 2);
    *((_QWORD *)v126 + 1) = *((_QWORD *)v127 + 1);
    *((_QWORD *)v126 + 2) = v128;
    *(_OWORD *)(v126 + 24) = *(_OWORD *)(v127 + 24);
    *(_OWORD *)(v126 + 40) = *(_OWORD *)(v127 + 40);
    v126[56] = v127[56];
    *(_QWORD *)&v117[v122[7]] = *(_QWORD *)&v118[v122[7]];
    v129 = v176[18];
    *(_QWORD *)&v175[v176[17]] = *(_QWORD *)((char *)v177 + v176[17]);
    v130 = &v175[v129];
    v131 = (char *)v177 + v129;
    *(_QWORD *)&v175[v129] = *(_QWORD *)((char *)v177 + v129);
    v132 = *(int *)(v173 + 20);
    v133 = &v175[v129 + v132];
    v134 = v115;
    v135 = (char *)v177 + v129 + v132;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    v134(v133, v135, v63);
    v136 = (int *)type metadata accessor for ContactSignalProviders(0);
    v137 = v136[5];
    v138 = &v130[v137];
    v139 = &v131[v137];
    v140 = *((_QWORD *)v139 + 1);
    *(_QWORD *)v138 = *(_QWORD *)v139;
    *((_QWORD *)v138 + 1) = v140;
    v141 = v136[6];
    v142 = &v130[v141];
    v143 = &v131[v141];
    v144 = sub_1C030367C();
    v145 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 16);
    swift_bridgeObjectRetain();
    v145(v142, v143, v144);
    v146 = (int *)type metadata accessor for SiriRemembersContactSignalProvider();
    v142[v146[5]] = v143[v146[5]];
    v147 = v146[6];
    v148 = &v142[v147];
    v149 = &v143[v147];
    v150 = *((_QWORD *)v149 + 1);
    *(_QWORD *)v148 = *(_QWORD *)v149;
    *((_QWORD *)v148 + 1) = v150;
    v151 = v146[7];
    v152 = &v142[v151];
    v153 = &v143[v151];
    v154 = *(_QWORD *)&v143[v151 + 24];
    swift_bridgeObjectRetain();
    if (v154)
    {
      v155 = *((_QWORD *)v153 + 4);
      *((_QWORD *)v152 + 3) = v154;
      *((_QWORD *)v152 + 4) = v155;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v154 - 8))((uint64_t)v152, (uint64_t)v153, v154);
    }
    else
    {
      v156 = *((_OWORD *)v153 + 1);
      *(_OWORD *)v152 = *(_OWORD *)v153;
      *((_OWORD *)v152 + 1) = v156;
      *((_QWORD *)v152 + 4) = *((_QWORD *)v153 + 4);
    }
    v157 = v146[8];
    v158 = &v142[v157];
    v159 = &v143[v157];
    v160 = *((_QWORD *)v159 + 1);
    *(_QWORD *)v158 = *(_QWORD *)v159;
    *((_QWORD *)v158 + 1) = v160;
    *(_QWORD *)&v130[v136[7]] = *(_QWORD *)&v131[v136[7]];
    *(_OWORD *)&v130[v136[8]] = *(_OWORD *)&v131[v136[8]];
    v161 = v176[19];
    v162 = &v175[v161];
    v163 = (char *)v177 + v161;
    v164 = *(_QWORD *)((char *)v177 + v161 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v164)
    {
      v165 = *((_QWORD *)v163 + 4);
      *((_QWORD *)v162 + 3) = v164;
      *((_QWORD *)v162 + 4) = v165;
      (**(void (***)(char *, char *, uint64_t))(v164 - 8))(v162, v163, v164);
    }
    else
    {
      v166 = *((_OWORD *)v163 + 1);
      *(_OWORD *)v162 = *(_OWORD *)v163;
      *((_OWORD *)v162 + 1) = v166;
      *((_QWORD *)v162 + 4) = *((_QWORD *)v163 + 4);
    }
    v167 = v176[21];
    v175[v176[20]] = *((_BYTE *)v177 + v176[20]);
    v168 = &v175[v167];
    v169 = (char *)v177 + v167;
    *v168 = *v169;
    v170 = *((_QWORD *)v169 + 2);
    *((_QWORD *)v168 + 1) = *((_QWORD *)v169 + 1);
    *((_QWORD *)v168 + 2) = v170;
    *(_OWORD *)(v168 + 24) = *(_OWORD *)(v169 + 24);
    *(_OWORD *)(v168 + 40) = *(_OWORD *)(v169 + 40);
    v168[56] = v169[56];
    v171 = v176[23];
    *(_QWORD *)&v175[v176[22]] = *(_QWORD *)((char *)v177 + v176[22]);
    *(_QWORD *)&v175[v171] = *(_QWORD *)((char *)v177 + v171);
    *(_QWORD *)&v175[v176[24]] = *(_QWORD *)((char *)v177 + v176[24]);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v10;
}

uint64_t sub_1C026D694(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t Expander;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v4 = type metadata accessor for HypocorismGenerator();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    swift_release();
    v5 = a1 + *(int *)(v4 + 20);
    swift_release();
    v6 = v5 + *(int *)(type metadata accessor for StringTokenizer() + 20);
    v7 = sub_1C0301DB0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + a2[5];
  v9 = type metadata accessor for MeCardContactGenerator();
  if (!__swift_getEnumTagSinglePayload(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 24);
    v11 = sub_1C0301DB0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + a2[6];
  v13 = type metadata accessor for RelationshipAliasGenerator();
  if (!__swift_getEnumTagSinglePayload(v12, 1, v13))
  {
    swift_release();
    swift_bridgeObjectRelease();
    v14 = v12 + *(int *)(v13 + 24);
    swift_release();
    v15 = v14 + *(int *)(type metadata accessor for StringTokenizer() + 20);
    v16 = sub_1C0301DB0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  }
  if (*(_QWORD *)(a1 + a2[7]))
  {
    swift_release();
    swift_release();
  }
  swift_release();
  v17 = a1 + a2[9];
  __swift_destroy_boxed_opaque_existential_0Tm(v17);
  v18 = type metadata accessor for ContactsFrameworkMatcher();
  v19 = v17 + *(int *)(v18 + 20);
  swift_release();
  v20 = type metadata accessor for StringTokenizer();
  v21 = v19 + *(int *)(v20 + 20);
  v22 = sub_1C0301DB0();
  v23 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8);
  v23(v21, v22);
  v24 = a1 + a2[10];
  v23(v24, v22);

  v25 = v24 + *(int *)(type metadata accessor for ThirdPartyContactMatcher(0) + 20);
  swift_release();
  v23(v25 + *(int *)(v20 + 20), v22);
  v26 = a1 + a2[11];
  if (*(_QWORD *)(v26 + 24))
  {
    __swift_destroy_boxed_opaque_existential_0Tm(a1 + a2[11]);
    __swift_destroy_boxed_opaque_existential_0Tm(v26 + 40);
  }
  v27 = a1 + a2[12];
  swift_release();
  v23(v27 + *(int *)(v20 + 20), v22);
  v28 = a1 + a2[13];
  __swift_destroy_boxed_opaque_existential_0Tm(v28);
  v29 = v28 + *(int *)(v18 + 20);
  swift_release();
  v23(v29 + *(int *)(v20 + 20), v22);
  v30 = a1 + a2[15];
  Expander = type metadata accessor for EmojiQueryExpander();
  if (!__swift_getEnumTagSinglePayload(v30, 1, Expander))
  {
    v23(v30, v22);
    v32 = v30 + *(int *)(Expander + 20);
    swift_release();
    v23(v32 + *(int *)(v20 + 20), v22);

  }
  v33 = a1 + a2[16];
  swift_release();
  v23(v33 + *(int *)(v20 + 20), v22);
  v34 = type metadata accessor for AsrE3CandidateExpander();
  __swift_destroy_boxed_opaque_existential_0Tm(v33 + *(int *)(v34 + 20));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v35 = a1 + a2[18];
  swift_release();
  v23(v35 + *(int *)(v20 + 20), v22);
  v36 = type metadata accessor for ContactSignalProviders(0);
  swift_bridgeObjectRelease();
  v37 = v35 + *(int *)(v36 + 24);
  v38 = sub_1C030367C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
  v39 = type metadata accessor for SiriRemembersContactSignalProvider();
  swift_bridgeObjectRelease();
  v40 = v37 + *(int *)(v39 + 28);
  if (*(_QWORD *)(v40 + 24))
    __swift_destroy_boxed_opaque_existential_0Tm(v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v41 = a1 + a2[19];
  if (*(_QWORD *)(v41 + 24))
    __swift_destroy_boxed_opaque_existential_0Tm(v41);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_1C026DAF8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  __int128 v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  int *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  id v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  __int128 v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t Expander;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void *v109;
  id v110;
  uint64_t v111;
  _QWORD *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  int *v117;
  uint64_t v118;
  __int128 v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  int *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  void (*v139)(char *, char *, uint64_t);
  int *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  __int128 v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  __int128 v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v167;
  char *v168;
  char *v169;
  int *v170;
  _QWORD *v171;

  v6 = type metadata accessor for HypocorismGenerator();
  v170 = a3;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2658);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = *(int *)(v6 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)((char *)a1 + v8) = *(_QWORD *)((char *)a2 + v8);
    v11 = *(int *)(type metadata accessor for StringTokenizer() + 20);
    v12 = &v9[v11];
    v13 = &v10[v11];
    a3 = v170;
    v14 = sub_1C0301DB0();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_retain();
    swift_retain();
    v15(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v16 = a3[5];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = type metadata accessor for MeCardContactGenerator();
  v171 = a1;
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2660);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = v18[1];
    *v17 = *v18;
    v17[1] = v21;
    v22 = *(int *)(v19 + 24);
    v23 = (char *)v17 + v22;
    v24 = (char *)v18 + v22;
    v25 = sub_1C0301DB0();
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27 = v25;
    a1 = v171;
    v26(v23, v24, v27);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
  }
  v28 = a3[6];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  v31 = type metadata accessor for RelationshipAliasGenerator();
  if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726CA8);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v33 = v30[1];
    *v29 = *v30;
    v29[1] = v33;
    v29[2] = v30[2];
    v34 = *(int *)(v31 + 24);
    v35 = (char *)v29 + v34;
    v36 = (char *)v30 + v34;
    *(_QWORD *)((char *)v29 + v34) = *(_QWORD *)((char *)v30 + v34);
    v37 = *(int *)(type metadata accessor for StringTokenizer() + 20);
    v168 = &v35[v37];
    v38 = &v36[v37];
    a3 = v170;
    v39 = sub_1C0301DB0();
    v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v41 = v38;
    a1 = v171;
    v40(v168, v41, v39);
    __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
  }
  v42 = a3[7];
  v43 = (_QWORD *)((char *)a1 + v42);
  v44 = (_QWORD *)((char *)a2 + v42);
  if (*v44)
  {
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)v43 = *(_OWORD *)v44;
  }
  v46 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  v47 = (char *)a1 + v46;
  v48 = (char *)a2 + v46;
  v49 = *(_OWORD *)((char *)a2 + v46 + 24);
  *(_OWORD *)((char *)a1 + v46 + 24) = v49;
  v50 = v49;
  v51 = **(void (***)(char *, char *, uint64_t))(v49 - 8);
  swift_retain();
  v51(v47, v48, v50);
  v52 = (int *)type metadata accessor for ContactsFrameworkMatcher();
  v53 = v52[5];
  v54 = &v47[v53];
  v55 = &v48[v53];
  *(_QWORD *)&v47[v53] = *(_QWORD *)&v48[v53];
  v56 = type metadata accessor for StringTokenizer();
  v57 = *(int *)(v56 + 20);
  v58 = &v54[v57];
  v59 = &v55[v57];
  v60 = sub_1C0301DB0();
  v169 = (char *)a2;
  v61 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16);
  swift_retain();
  v61(v58, v59, v60);
  v47[v52[6]] = v48[v52[6]];
  v62 = v52;
  v47[v52[7]] = v48[v52[7]];
  v63 = v170[10];
  v64 = (char *)v171 + v63;
  v65 = &v169[v63];
  v61((char *)v171 + v63, &v169[v63], v60);
  v66 = *(int *)(type metadata accessor for SiriVocabularySearcher(0) + 20);
  v67 = *(void **)&v65[v66];
  *(_QWORD *)&v64[v66] = v67;
  v68 = *(int *)(type metadata accessor for ThirdPartyContactMatcher(0) + 20);
  v69 = &v64[v68];
  v70 = &v65[v68];
  *(_QWORD *)v69 = *(_QWORD *)v70;
  v71 = *(int *)(v56 + 20);
  v72 = &v69[v71];
  v73 = &v70[v71];
  v74 = v67;
  swift_retain();
  v61(v72, v73, v60);
  v75 = v170[11];
  v76 = (char *)v171 + v75;
  v77 = &v169[v75];
  v78 = *(_QWORD *)&v169[v75 + 24];
  if (v78)
  {
    v79 = *((_QWORD *)v77 + 4);
    *((_QWORD *)v76 + 3) = v78;
    *((_QWORD *)v76 + 4) = v79;
    (**(void (***)(char *, char *))(v78 - 8))(v76, v77);
    v80 = *((_OWORD *)v77 + 4);
    *((_OWORD *)v76 + 4) = v80;
    (**(void (***)(uint64_t, uint64_t))(v80 - 8))((uint64_t)(v76 + 40), (uint64_t)(v77 + 40));
  }
  else
  {
    memcpy((char *)v171 + v75, &v169[v75], 0x50uLL);
  }
  v81 = v170[12];
  v82 = (_QWORD *)((char *)v171 + v81);
  v83 = &v169[v81];
  *v82 = *(_QWORD *)v83;
  v84 = *(int *)(v56 + 20);
  v85 = (char *)v82 + v84;
  v86 = &v83[v84];
  swift_retain();
  v61(v85, v86, v60);
  v87 = v170[13];
  v88 = (char *)v171 + v87;
  v89 = &v169[v87];
  v90 = *(_OWORD *)&v169[v87 + 24];
  *(_OWORD *)((char *)v171 + v87 + 24) = v90;
  (**(void (***)(char *, char *))(v90 - 8))((char *)v171 + v87, &v169[v87]);
  v91 = v62[5];
  v92 = &v88[v91];
  v93 = &v89[v91];
  *(_QWORD *)v92 = *(_QWORD *)v93;
  v94 = *(int *)(v56 + 20);
  v95 = &v92[v94];
  v167 = v56;
  v96 = &v93[v94];
  swift_retain();
  v61(v95, v96, v60);
  v88[v62[6]] = v89[v62[6]];
  v88[v62[7]] = v89[v62[7]];
  v97 = v170[15];
  *((_BYTE *)v171 + v170[14]) = v169[v170[14]];
  v98 = (char *)v171 + v97;
  v99 = &v169[v97];
  Expander = type metadata accessor for EmojiQueryExpander();
  if (__swift_getEnumTagSinglePayload((uint64_t)v99, 1, Expander))
  {
    v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2668);
    memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
  }
  else
  {
    v61(v98, v99, v60);
    v102 = *(int *)(Expander + 20);
    v103 = &v98[v102];
    v104 = &v99[v102];
    *(_QWORD *)v103 = *(_QWORD *)v104;
    v105 = *(int *)(v167 + 20);
    v106 = &v103[v105];
    v107 = &v104[v105];
    swift_retain();
    v61(v106, v107, v60);
    v108 = *(int *)(Expander + 24);
    v109 = *(void **)&v99[v108];
    *(_QWORD *)&v98[v108] = v109;
    v110 = v109;
    __swift_storeEnumTagSinglePayload((uint64_t)v98, 0, 1, Expander);
  }
  v111 = v170[16];
  v112 = (_QWORD *)((char *)v171 + v111);
  v113 = &v169[v111];
  *v112 = *(_QWORD *)&v169[v111];
  v114 = *(int *)(v167 + 20);
  v115 = (char *)v112 + v114;
  v116 = &v113[v114];
  swift_retain();
  v61(v115, v116, v60);
  v117 = (int *)type metadata accessor for AsrE3CandidateExpander();
  v118 = v117[5];
  v119 = *(_OWORD *)&v113[v118 + 24];
  *(_OWORD *)((char *)v112 + v118 + 24) = v119;
  (**(void (***)(void))(v119 - 8))();
  v120 = v117[6];
  v121 = (char *)v112 + v120;
  v122 = &v113[v120];
  *v121 = *v122;
  v123 = *((_QWORD *)v122 + 2);
  *((_QWORD *)v121 + 1) = *((_QWORD *)v122 + 1);
  *((_QWORD *)v121 + 2) = v123;
  *(_OWORD *)(v121 + 24) = *(_OWORD *)(v122 + 24);
  *(_OWORD *)(v121 + 40) = *(_OWORD *)(v122 + 40);
  v121[56] = v122[56];
  *(_QWORD *)((char *)v112 + v117[7]) = *(_QWORD *)&v113[v117[7]];
  v124 = v170[18];
  *(_QWORD *)((char *)v171 + v170[17]) = *(_QWORD *)&v169[v170[17]];
  v125 = (char *)v171 + v124;
  v126 = &v169[v124];
  *(_QWORD *)((char *)v171 + v124) = *(_QWORD *)&v169[v124];
  v127 = *(int *)(v167 + 20);
  v128 = (char *)v171 + v124 + v127;
  v129 = &v169[v124 + v127];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  v61(v128, v129, v60);
  v130 = (int *)type metadata accessor for ContactSignalProviders(0);
  v131 = v130[5];
  v132 = &v125[v131];
  v133 = &v126[v131];
  v134 = *((_QWORD *)v133 + 1);
  *(_QWORD *)v132 = *(_QWORD *)v133;
  *((_QWORD *)v132 + 1) = v134;
  v135 = v130[6];
  v136 = &v125[v135];
  v137 = &v126[v135];
  v138 = sub_1C030367C();
  v139 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 16);
  swift_bridgeObjectRetain();
  v139(v136, v137, v138);
  v140 = (int *)type metadata accessor for SiriRemembersContactSignalProvider();
  v136[v140[5]] = v137[v140[5]];
  v141 = v140[6];
  v142 = &v136[v141];
  v143 = &v137[v141];
  v144 = *((_QWORD *)v143 + 1);
  *(_QWORD *)v142 = *(_QWORD *)v143;
  *((_QWORD *)v142 + 1) = v144;
  v145 = v140[7];
  v146 = &v136[v145];
  v147 = &v137[v145];
  v148 = *(_QWORD *)&v137[v145 + 24];
  swift_bridgeObjectRetain();
  if (v148)
  {
    v149 = *((_QWORD *)v147 + 4);
    *((_QWORD *)v146 + 3) = v148;
    *((_QWORD *)v146 + 4) = v149;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v148 - 8))((uint64_t)v146, (uint64_t)v147, v148);
  }
  else
  {
    v150 = *((_OWORD *)v147 + 1);
    *(_OWORD *)v146 = *(_OWORD *)v147;
    *((_OWORD *)v146 + 1) = v150;
    *((_QWORD *)v146 + 4) = *((_QWORD *)v147 + 4);
  }
  v151 = v140[8];
  v152 = &v136[v151];
  v153 = &v137[v151];
  v154 = *((_QWORD *)v153 + 1);
  *(_QWORD *)v152 = *(_QWORD *)v153;
  *((_QWORD *)v152 + 1) = v154;
  *(_QWORD *)&v125[v130[7]] = *(_QWORD *)&v126[v130[7]];
  *(_OWORD *)&v125[v130[8]] = *(_OWORD *)&v126[v130[8]];
  v155 = v170[19];
  v156 = (char *)v171 + v155;
  v157 = &v169[v155];
  v158 = *(_QWORD *)&v169[v155 + 24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v158)
  {
    v159 = *((_QWORD *)v157 + 4);
    *((_QWORD *)v156 + 3) = v158;
    *((_QWORD *)v156 + 4) = v159;
    (**(void (***)(char *, char *, uint64_t))(v158 - 8))(v156, v157, v158);
  }
  else
  {
    v160 = *((_OWORD *)v157 + 1);
    *(_OWORD *)v156 = *(_OWORD *)v157;
    *((_OWORD *)v156 + 1) = v160;
    *((_QWORD *)v156 + 4) = *((_QWORD *)v157 + 4);
  }
  v161 = v170[21];
  *((_BYTE *)v171 + v170[20]) = v169[v170[20]];
  v162 = (char *)v171 + v161;
  v163 = &v169[v161];
  *v162 = *v163;
  v164 = *((_QWORD *)v163 + 2);
  *((_QWORD *)v162 + 1) = *((_QWORD *)v163 + 1);
  *((_QWORD *)v162 + 2) = v164;
  *(_OWORD *)(v162 + 24) = *(_OWORD *)(v163 + 24);
  *(_OWORD *)(v162 + 40) = *(_OWORD *)(v163 + 40);
  v162[56] = v163[56];
  v165 = v170[23];
  *(_QWORD *)((char *)v171 + v170[22]) = *(_QWORD *)&v169[v170[22]];
  *(_QWORD *)((char *)v171 + v165) = *(_QWORD *)&v169[v165];
  *(_QWORD *)((char *)v171 + v170[24]) = *(_QWORD *)&v169[v170[24]];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return v171;
}

char *sub_1C026E3CC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  int *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void *v67;
  void *v68;
  id v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  int *v89;
  _QWORD *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t Expander;
  int v95;
  int v96;
  void (*v97)(char *, char *, uint64_t);
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  void *v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  int *v112;
  uint64_t v113;
  uint64_t v114;
  int *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  int *v120;
  uint64_t v121;
  _QWORD *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  int *v128;
  uint64_t v129;
  _QWORD *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  __int128 v136;
  __int128 v137;
  uint64_t v138;
  _QWORD *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  __int128 v148;
  __int128 v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  void *v178;
  void *v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  void (*v183)(char *, char *, uint64_t);
  int *v184;
  char *v185;
  char *v186;
  char *v187;

  v6 = type metadata accessor for HypocorismGenerator();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      *a1 = *a2;
      v9 = *(int *)(v6 + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
      v12 = *(int *)(type metadata accessor for StringTokenizer() + 20);
      v13 = &v10[v12];
      v14 = &v11[v12];
      v15 = sub_1C0301DB0();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_retain();
      swift_retain();
      v16(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_1C003DD84((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for HypocorismGenerator);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2658);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  swift_retain();
  swift_release();
  v154 = *(int *)(v6 + 20);
  v155 = (char *)a1 + v154;
  v156 = (char *)a2 + v154;
  *(_QWORD *)((char *)a1 + v154) = *(_QWORD *)((char *)a2 + v154);
  swift_retain();
  swift_release();
  v157 = *(int *)(type metadata accessor for StringTokenizer() + 20);
  v158 = &v155[v157];
  v159 = &v156[v157];
  v160 = sub_1C0301DB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 24))(v158, v159, v160);
LABEL_7:
  v18 = a3[5];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = type metadata accessor for MeCardContactGenerator();
  v22 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v21);
  v23 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21);
  v184 = a3;
  if (v22)
  {
    if (!v23)
    {
      *v19 = *v20;
      v19[1] = v20[1];
      v24 = *(int *)(v21 + 24);
      v25 = (char *)v19 + v24;
      v26 = (char *)v20 + v24;
      v27 = sub_1C0301DB0();
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29 = v27;
      a3 = v184;
      v28(v25, v26, v29);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_1C003DD84((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for MeCardContactGenerator);
LABEL_12:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2660);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  *v19 = *v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v161 = *(int *)(v21 + 24);
  v162 = (char *)v19 + v161;
  v163 = (char *)v20 + v161;
  v164 = sub_1C0301DB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 24))(v162, v163, v164);
LABEL_13:
  v31 = a3[6];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  v34 = type metadata accessor for RelationshipAliasGenerator();
  v35 = __swift_getEnumTagSinglePayload((uint64_t)v32, 1, v34);
  v36 = __swift_getEnumTagSinglePayload((uint64_t)v33, 1, v34);
  if (v35)
  {
    if (!v36)
    {
      *v32 = *v33;
      v32[1] = v33[1];
      v32[2] = v33[2];
      v37 = *(int *)(v34 + 24);
      v38 = (char *)v32 + v37;
      v39 = (char *)v33 + v37;
      *(_QWORD *)((char *)v32 + v37) = *(_QWORD *)((char *)v33 + v37);
      v40 = *(int *)(type metadata accessor for StringTokenizer() + 20);
      v186 = &v38[v40];
      v41 = &v39[v40];
      v42 = sub_1C0301DB0();
      v43 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      v44 = v41;
      a3 = v184;
      v43(v186, v44, v42);
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v34);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v36)
  {
    sub_1C003DD84((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for RelationshipAliasGenerator);
LABEL_18:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726CA8);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_19;
  }
  *v32 = *v33;
  swift_retain();
  swift_release();
  v32[1] = v33[1];
  v32[2] = v33[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v165 = *(int *)(v34 + 24);
  v166 = (char *)v32 + v165;
  v167 = (char *)v33 + v165;
  *(_QWORD *)((char *)v32 + v165) = *(_QWORD *)((char *)v33 + v165);
  swift_retain();
  swift_release();
  v168 = *(int *)(type metadata accessor for StringTokenizer() + 20);
  v169 = &v166[v168];
  v170 = &v167[v168];
  v171 = sub_1C0301DB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 24))(v169, v170, v171);
LABEL_19:
  v46 = a3[7];
  v47 = (_QWORD *)((char *)a1 + v46);
  v48 = (char *)a2 + v46;
  v49 = *(_QWORD *)((char *)a2 + v46);
  if (*(_QWORD *)((char *)a1 + v46))
  {
    if (v49)
    {
      *v47 = v49;
      swift_retain();
      swift_release();
      v47[1] = *((_QWORD *)v48 + 1);
      swift_retain();
      swift_release();
      goto LABEL_26;
    }
    sub_1C026F0E0((uint64_t)a1 + v46);
  }
  else if (v49)
  {
    *v47 = v49;
    v47[1] = *((_QWORD *)v48 + 1);
    swift_retain();
    swift_retain();
    goto LABEL_26;
  }
  *(_OWORD *)v47 = *(_OWORD *)v48;
LABEL_26:
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_retain();
  swift_release();
  v50 = a3[9];
  v51 = (char *)a1 + v50;
  v52 = (char *)a2 + v50;
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + v50), (_QWORD *)((char *)a2 + v50));
  v53 = (int *)type metadata accessor for ContactsFrameworkMatcher();
  v54 = v53[5];
  v55 = &v51[v54];
  v56 = &v52[v54];
  *(_QWORD *)&v51[v54] = *(_QWORD *)&v52[v54];
  swift_retain();
  swift_release();
  v185 = (char *)a2;
  v57 = type metadata accessor for StringTokenizer();
  v58 = *(int *)(v57 + 20);
  v59 = &v55[v58];
  v60 = &v56[v58];
  v61 = sub_1C0301DB0();
  v187 = (char *)a1;
  v181 = *(_QWORD *)(v61 - 8);
  v62 = *(void (**)(char *, char *, uint64_t))(v181 + 24);
  v62(v59, v60, v61);
  v51[v53[6]] = v52[v53[6]];
  v51[v53[7]] = v52[v53[7]];
  v63 = v184[10];
  v64 = &v187[v63];
  v65 = &v185[v63];
  v62(&v187[v63], &v185[v63], v61);
  v66 = *(int *)(type metadata accessor for SiriVocabularySearcher(0) + 20);
  v67 = *(void **)&v65[v66];
  v68 = *(void **)&v64[v66];
  *(_QWORD *)&v64[v66] = v67;
  v69 = v67;

  v70 = *(int *)(type metadata accessor for ThirdPartyContactMatcher(0) + 20);
  v71 = &v64[v70];
  v72 = &v65[v70];
  *(_QWORD *)&v64[v70] = *(_QWORD *)v72;
  swift_retain();
  swift_release();
  v183 = v62;
  v62(&v71[*(int *)(v57 + 20)], &v72[*(int *)(v57 + 20)], v61);
  v73 = v184[11];
  v74 = (uint64_t *)&v187[v73];
  v75 = (uint64_t *)&v185[v73];
  v76 = *(_QWORD *)&v185[v73 + 24];
  if (*(_QWORD *)&v187[v73 + 24])
  {
    if (v76)
    {
      __swift_assign_boxed_opaque_existential_1(v74, v75);
      __swift_assign_boxed_opaque_existential_1(v74 + 5, v75 + 5);
      goto LABEL_33;
    }
    sub_1C026F114((uint64_t)v74);
  }
  else if (v76)
  {
    v74[3] = v76;
    v74[4] = v75[4];
    (**(void (***)(uint64_t *, uint64_t *))(v76 - 8))(v74, v75);
    v77 = v75[8];
    v74[8] = v77;
    v74[9] = v75[9];
    (**(void (***)(uint64_t, uint64_t))(v77 - 8))((uint64_t)(v74 + 5), (uint64_t)(v75 + 5));
    goto LABEL_33;
  }
  memcpy(v74, v75, 0x50uLL);
LABEL_33:
  v78 = v184[12];
  v79 = &v187[v78];
  v80 = &v185[v78];
  *(_QWORD *)&v187[v78] = *(_QWORD *)&v185[v78];
  swift_retain();
  swift_release();
  v62(&v79[*(int *)(v57 + 20)], &v80[*(int *)(v57 + 20)], v61);
  v81 = v184[13];
  v82 = &v187[v81];
  v83 = &v185[v81];
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&v187[v81], (uint64_t *)&v185[v81]);
  v84 = v53[5];
  v85 = &v82[v84];
  v86 = &v83[v84];
  *(_QWORD *)&v82[v84] = *(_QWORD *)&v83[v84];
  swift_retain();
  swift_release();
  v87 = *(int *)(v57 + 20);
  v88 = &v86[v87];
  v89 = v184;
  v62(&v85[v87], v88, v61);
  v90 = v187;
  v82[v53[6]] = v83[v53[6]];
  v82[v53[7]] = v83[v53[7]];
  v187[v184[14]] = v185[v184[14]];
  v91 = v184[15];
  v92 = &v187[v91];
  v93 = &v185[v91];
  Expander = type metadata accessor for EmojiQueryExpander();
  v95 = __swift_getEnumTagSinglePayload((uint64_t)v92, 1, Expander);
  v96 = __swift_getEnumTagSinglePayload((uint64_t)v93, 1, Expander);
  if (v95)
  {
    if (!v96)
    {
      v97 = *(void (**)(char *, char *, uint64_t))(v181 + 16);
      v97(v92, v93, v61);
      v98 = *(int *)(Expander + 20);
      v99 = &v92[v98];
      v100 = &v93[v98];
      *(_QWORD *)v99 = *(_QWORD *)v100;
      v101 = *(int *)(v57 + 20);
      v102 = &v99[v101];
      v103 = &v100[v101];
      swift_retain();
      v104 = v103;
      v89 = v184;
      v97(v102, v104, v61);
      v105 = *(int *)(Expander + 24);
      v106 = *(void **)&v93[v105];
      *(_QWORD *)&v92[v105] = v106;
      v107 = v106;
      __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, Expander);
      goto LABEL_39;
    }
    goto LABEL_38;
  }
  if (v96)
  {
    sub_1C003DD84((uint64_t)v92, (uint64_t (*)(_QWORD))type metadata accessor for EmojiQueryExpander);
LABEL_38:
    v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2668);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    goto LABEL_39;
  }
  v183(v92, v93, v61);
  v172 = *(int *)(Expander + 20);
  v173 = &v92[v172];
  v174 = &v93[v172];
  *(_QWORD *)&v92[v172] = *(_QWORD *)&v93[v172];
  swift_retain();
  swift_release();
  v175 = *(int *)(v57 + 20);
  v176 = &v174[v175];
  v89 = v184;
  v183(&v173[v175], v176, v61);
  v90 = v187;
  v177 = *(int *)(Expander + 24);
  v178 = *(void **)&v93[v177];
  v179 = *(void **)&v92[v177];
  *(_QWORD *)&v92[v177] = v178;
  v180 = v178;

LABEL_39:
  v109 = v89[16];
  v110 = (uint64_t)v90 + v109;
  v111 = &v185[v109];
  *(_QWORD *)((char *)v90 + v109) = *(_QWORD *)&v185[v109];
  swift_retain();
  swift_release();
  v183((char *)(v110 + *(int *)(v57 + 20)), &v111[*(int *)(v57 + 20)], v61);
  v112 = (int *)type metadata accessor for AsrE3CandidateExpander();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v110 + v112[5]), (uint64_t *)&v111[v112[5]]);
  v113 = v112[6];
  v114 = v110 + v113;
  v182 = v61;
  v115 = v89;
  v116 = &v111[v113];
  *(_BYTE *)v114 = v111[v113];
  *(_QWORD *)(v114 + 8) = *(_QWORD *)&v111[v113 + 8];
  *(_QWORD *)(v114 + 16) = *(_QWORD *)&v111[v113 + 16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v114 + 24) = *((_QWORD *)v116 + 3);
  *(_QWORD *)(v114 + 32) = *((_QWORD *)v116 + 4);
  *(_QWORD *)(v114 + 40) = *((_QWORD *)v116 + 5);
  *(_QWORD *)(v114 + 48) = *((_QWORD *)v116 + 6);
  *(_BYTE *)(v114 + 56) = v116[56];
  *(_QWORD *)(v110 + v112[7]) = *(_QWORD *)&v111[v112[7]];
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)v90 + v115[17]) = *(_QWORD *)&v185[v115[17]];
  swift_retain();
  swift_release();
  v117 = v115[18];
  v118 = (uint64_t)v90 + v117;
  v119 = &v185[v117];
  *(_QWORD *)((char *)v90 + v117) = *(_QWORD *)&v185[v117];
  swift_retain();
  swift_release();
  v183((char *)(v118 + *(int *)(v57 + 20)), &v119[*(int *)(v57 + 20)], v182);
  v120 = (int *)type metadata accessor for ContactSignalProviders(0);
  v121 = v120[5];
  v122 = (_QWORD *)(v118 + v121);
  v123 = &v119[v121];
  *v122 = *(_QWORD *)v123;
  v122[1] = *((_QWORD *)v123 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v124 = v120[6];
  v125 = v118 + v124;
  v126 = &v119[v124];
  v127 = sub_1C030367C();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 24))(v125, v126, v127);
  v128 = (int *)type metadata accessor for SiriRemembersContactSignalProvider();
  *(_BYTE *)(v125 + v128[5]) = v126[v128[5]];
  v129 = v128[6];
  v130 = (_QWORD *)(v125 + v129);
  v131 = &v126[v129];
  *v130 = *(_QWORD *)v131;
  v130[1] = *((_QWORD *)v131 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v132 = v128[7];
  v133 = v125 + v132;
  v134 = (uint64_t *)&v126[v132];
  v135 = *(_QWORD *)&v126[v132 + 24];
  if (*(_QWORD *)(v125 + v132 + 24))
  {
    if (v135)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v133, v134);
      goto LABEL_46;
    }
    __swift_destroy_boxed_opaque_existential_0Tm(v133);
  }
  else if (v135)
  {
    *(_QWORD *)(v133 + 24) = v135;
    *(_QWORD *)(v133 + 32) = v134[4];
    (**(void (***)(uint64_t, __int128 *))(v135 - 8))(v133, (__int128 *)v134);
    goto LABEL_46;
  }
  v136 = *(_OWORD *)v134;
  v137 = *((_OWORD *)v134 + 1);
  *(_QWORD *)(v133 + 32) = v134[4];
  *(_OWORD *)v133 = v136;
  *(_OWORD *)(v133 + 16) = v137;
LABEL_46:
  v138 = v128[8];
  v139 = (_QWORD *)(v125 + v138);
  v140 = &v126[v138];
  *v139 = *(_QWORD *)v140;
  v139[1] = *((_QWORD *)v140 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v118 + v120[7]) = *(_QWORD *)&v119[v120[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v141 = v120[8];
  v142 = v118 + v141;
  v143 = &v119[v141];
  *(_BYTE *)v142 = *v143;
  *(_BYTE *)(v142 + 1) = v143[1];
  *(_BYTE *)(v142 + 2) = v143[2];
  *(_QWORD *)(v142 + 8) = *((_QWORD *)v143 + 1);
  v144 = v184[19];
  v145 = (uint64_t)&v187[v144];
  v146 = &v185[v144];
  v147 = *(_QWORD *)&v185[v144 + 24];
  if (!*(_QWORD *)&v187[v144 + 24])
  {
    if (v147)
    {
      *(_QWORD *)(v145 + 24) = v147;
      *(_QWORD *)(v145 + 32) = *((_QWORD *)v146 + 4);
      (**(void (***)(uint64_t, char *))(v147 - 8))(v145, v146);
      goto LABEL_53;
    }
LABEL_52:
    v148 = *(_OWORD *)v146;
    v149 = *((_OWORD *)v146 + 1);
    *(_QWORD *)(v145 + 32) = *((_QWORD *)v146 + 4);
    *(_OWORD *)v145 = v148;
    *(_OWORD *)(v145 + 16) = v149;
    goto LABEL_53;
  }
  if (!v147)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v145);
    goto LABEL_52;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v145, (uint64_t *)v146);
LABEL_53:
  v187[v184[20]] = v185[v184[20]];
  v150 = v184[21];
  v151 = &v187[v150];
  v152 = &v185[v150];
  *v151 = v185[v150];
  *((_QWORD *)v151 + 1) = *(_QWORD *)&v185[v150 + 8];
  *((_QWORD *)v151 + 2) = *(_QWORD *)&v185[v150 + 16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v151 + 3) = *((_QWORD *)v152 + 3);
  *((_QWORD *)v151 + 4) = *((_QWORD *)v152 + 4);
  *((_QWORD *)v151 + 5) = *((_QWORD *)v152 + 5);
  *((_QWORD *)v151 + 6) = *((_QWORD *)v152 + 6);
  v151[56] = v152[56];
  *(_QWORD *)&v187[v184[22]] = *(_QWORD *)&v185[v184[22]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v187[v184[23]] = *(_QWORD *)&v185[v184[23]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v187[v184[24]] = *(_QWORD *)&v185[v184[24]];
  swift_retain();
  swift_release();
  return v187;
}

uint64_t sub_1C026F0E0(uint64_t a1)
{
  destroy for TransliterationQueryExpander();
  return a1;
}

uint64_t sub_1C026F114(uint64_t a1)
{
  destroy for SRRSearchProvider(a1);
  return a1;
}

char *sub_1C026F148(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  char *v41;
  int *v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  __int128 v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t Expander;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  int *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  __int128 v86;
  uint64_t v87;
  char *v88;
  char *v89;
  __int128 v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  int *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  __int128 v113;
  uint64_t v114;
  int *v116;
  char *v117;

  v6 = type metadata accessor for HypocorismGenerator();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2658);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = *(int *)(v6 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)((char *)a1 + v8) = *(_QWORD *)((char *)a2 + v8);
    v11 = *(int *)(type metadata accessor for StringTokenizer() + 20);
    v12 = &v9[v11];
    v13 = &v10[v11];
    v14 = sub_1C0301DB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v15 = a3[5];
  v16 = (_OWORD *)((char *)a1 + v15);
  v17 = (_OWORD *)((char *)a2 + v15);
  v18 = type metadata accessor for MeCardContactGenerator();
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2660);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *v16 = *v17;
    v20 = *(int *)(v18 + 24);
    v21 = (char *)v16 + v20;
    v22 = (char *)v17 + v20;
    v23 = sub_1C0301DB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  v24 = a3[6];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  v27 = type metadata accessor for RelationshipAliasGenerator();
  if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726CA8);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    *v25 = *v26;
    *(_OWORD *)(v25 + 1) = *(_OWORD *)(v26 + 1);
    v29 = *(int *)(v27 + 24);
    v30 = (char *)v25 + v29;
    v31 = (char *)v26 + v29;
    *(_QWORD *)((char *)v25 + v29) = *(_QWORD *)((char *)v26 + v29);
    v32 = *(int *)(type metadata accessor for StringTokenizer() + 20);
    v33 = &v30[v32];
    v34 = &v31[v32];
    v35 = sub_1C0301DB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
    __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
  }
  v36 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v36) = *(_QWORD *)((char *)a2 + v36);
  v37 = a3[9];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = *(_OWORD *)((char *)a2 + v37 + 16);
  *(_OWORD *)v38 = *(_OWORD *)((char *)a2 + v37);
  *((_OWORD *)v38 + 1) = v40;
  *((_QWORD *)v38 + 4) = *(_QWORD *)((char *)a2 + v37 + 32);
  v41 = (char *)a1;
  v42 = a3;
  v43 = (int *)type metadata accessor for ContactsFrameworkMatcher();
  v44 = v43[5];
  v45 = &v38[v44];
  v46 = &v39[v44];
  *(_QWORD *)&v38[v44] = *(_QWORD *)&v39[v44];
  v47 = type metadata accessor for StringTokenizer();
  v48 = *(int *)(v47 + 20);
  v49 = &v45[v48];
  v50 = &v46[v48];
  v51 = sub_1C0301DB0();
  v117 = (char *)a2;
  v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32);
  v52(v49, v50, v51);
  v116 = v43;
  v38[v43[6]] = v39[v43[6]];
  v38[v43[7]] = v39[v43[7]];
  v53 = v41;
  v54 = v42[10];
  v55 = &v41[v54];
  v56 = &v117[v54];
  v52(&v41[v54], &v117[v54], v51);
  v57 = type metadata accessor for SiriVocabularySearcher(0);
  *(_QWORD *)&v55[*(int *)(v57 + 20)] = *(_QWORD *)&v56[*(int *)(v57 + 20)];
  v58 = *(int *)(type metadata accessor for ThirdPartyContactMatcher(0) + 20);
  v59 = &v55[v58];
  v60 = &v56[v58];
  *(_QWORD *)v59 = *(_QWORD *)v60;
  v52(&v59[*(int *)(v47 + 20)], &v60[*(int *)(v47 + 20)], v51);
  memcpy(&v41[v42[11]], &v117[v42[11]], 0x50uLL);
  v61 = v42[12];
  v62 = &v41[v61];
  v63 = &v117[v61];
  *(_QWORD *)v62 = *(_QWORD *)v63;
  v52(&v62[*(int *)(v47 + 20)], &v63[*(int *)(v47 + 20)], v51);
  v64 = v42[13];
  v65 = &v41[v64];
  v66 = &v117[v64];
  v67 = *(_OWORD *)&v117[v64 + 16];
  *(_OWORD *)v65 = *(_OWORD *)&v117[v64];
  *((_OWORD *)v65 + 1) = v67;
  *((_QWORD *)v65 + 4) = *(_QWORD *)&v117[v64 + 32];
  v68 = v116[5];
  v69 = &v65[v68];
  v70 = &v66[v68];
  *(_QWORD *)v69 = *(_QWORD *)v70;
  v52(&v69[*(int *)(v47 + 20)], &v70[*(int *)(v47 + 20)], v51);
  v65[v116[6]] = v66[v116[6]];
  v65[v116[7]] = v66[v116[7]];
  v71 = v42[15];
  v41[v42[14]] = v117[v42[14]];
  v72 = &v41[v71];
  v73 = &v117[v71];
  Expander = type metadata accessor for EmojiQueryExpander();
  if (__swift_getEnumTagSinglePayload((uint64_t)v73, 1, Expander))
  {
    v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2668);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
  }
  else
  {
    v52(v72, v73, v51);
    v76 = *(int *)(Expander + 20);
    v77 = &v72[v76];
    v78 = &v73[v76];
    *(_QWORD *)v77 = *(_QWORD *)v78;
    v52(&v77[*(int *)(v47 + 20)], &v78[*(int *)(v47 + 20)], v51);
    *(_QWORD *)&v72[*(int *)(Expander + 24)] = *(_QWORD *)&v73[*(int *)(Expander + 24)];
    __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, Expander);
  }
  v79 = v42[16];
  v80 = &v53[v79];
  v81 = &v117[v79];
  *(_QWORD *)&v53[v79] = *(_QWORD *)&v117[v79];
  v52(&v53[v79 + *(int *)(v47 + 20)], &v117[v79 + *(int *)(v47 + 20)], v51);
  v82 = (int *)type metadata accessor for AsrE3CandidateExpander();
  v83 = v82[5];
  v84 = &v80[v83];
  v85 = &v81[v83];
  v86 = *((_OWORD *)v85 + 1);
  *(_OWORD *)v84 = *(_OWORD *)v85;
  *((_OWORD *)v84 + 1) = v86;
  *((_QWORD *)v84 + 4) = *((_QWORD *)v85 + 4);
  v87 = v82[6];
  v88 = &v80[v87];
  v89 = &v81[v87];
  v90 = *((_OWORD *)v89 + 1);
  *(_OWORD *)v88 = *(_OWORD *)v89;
  *((_OWORD *)v88 + 1) = v90;
  *((_OWORD *)v88 + 2) = *((_OWORD *)v89 + 2);
  *(_OWORD *)(v88 + 41) = *(_OWORD *)(v89 + 41);
  *(_QWORD *)&v80[v82[7]] = *(_QWORD *)&v81[v82[7]];
  v91 = v42[18];
  *(_QWORD *)&v53[v42[17]] = *(_QWORD *)&v117[v42[17]];
  v92 = &v53[v91];
  v93 = &v117[v91];
  *(_QWORD *)&v53[v91] = *(_QWORD *)&v117[v91];
  v52(&v53[v91 + *(int *)(v47 + 20)], &v117[v91 + *(int *)(v47 + 20)], v51);
  v94 = (int *)type metadata accessor for ContactSignalProviders(0);
  *(_OWORD *)&v92[v94[5]] = *(_OWORD *)&v93[v94[5]];
  v95 = v94[6];
  v96 = &v92[v95];
  v97 = &v93[v95];
  v98 = sub_1C030367C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v96, v97, v98);
  v99 = (int *)type metadata accessor for SiriRemembersContactSignalProvider();
  v96[v99[5]] = v97[v99[5]];
  *(_OWORD *)&v96[v99[6]] = *(_OWORD *)&v97[v99[6]];
  v100 = v99[7];
  v101 = (uint64_t)&v96[v100];
  v102 = &v97[v100];
  *(_QWORD *)(v101 + 32) = *((_QWORD *)v102 + 4);
  v103 = *((_OWORD *)v102 + 1);
  *(_OWORD *)v101 = *(_OWORD *)v102;
  *(_OWORD *)(v101 + 16) = v103;
  *(_OWORD *)&v96[v99[8]] = *(_OWORD *)&v97[v99[8]];
  *(_QWORD *)&v92[v94[7]] = *(_QWORD *)&v93[v94[7]];
  *(_OWORD *)&v92[v94[8]] = *(_OWORD *)&v93[v94[8]];
  v104 = v42[19];
  v105 = v42[20];
  v106 = &v53[v104];
  v107 = &v117[v104];
  v108 = *((_OWORD *)v107 + 1);
  *(_OWORD *)v106 = *(_OWORD *)v107;
  *((_OWORD *)v106 + 1) = v108;
  *((_QWORD *)v106 + 4) = *((_QWORD *)v107 + 4);
  v53[v105] = v117[v105];
  v109 = v42[21];
  v110 = v42[22];
  v111 = &v53[v109];
  v112 = &v117[v109];
  v113 = *((_OWORD *)v112 + 1);
  *(_OWORD *)v111 = *(_OWORD *)v112;
  *((_OWORD *)v111 + 1) = v113;
  *((_OWORD *)v111 + 2) = *((_OWORD *)v112 + 2);
  *(_OWORD *)(v111 + 41) = *(_OWORD *)(v112 + 41);
  *(_QWORD *)&v53[v110] = *(_QWORD *)&v117[v110];
  v114 = v42[24];
  *(_QWORD *)&v53[v42[23]] = *(_QWORD *)&v117[v42[23]];
  *(_QWORD *)&v53[v114] = *(_QWORD *)&v117[v114];
  return v53;
}

_QWORD *sub_1C026F7B8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __int128 v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  _OWORD *v69;
  char *v70;
  __int128 v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  __int128 v78;
  uint64_t v79;
  char *v80;
  char *v81;
  _QWORD *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t Expander;
  int v87;
  void (*v88)(char *, char *, uint64_t);
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  int *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  int *v108;
  uint64_t v109;
  char *v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  int *v118;
  uint64_t v119;
  char *v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __int128 v127;
  uint64_t v128;
  char *v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  __int128 v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  _QWORD *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  void (*v171)(char *, char *, uint64_t);
  int *v172;
  char *v173;

  v6 = type metadata accessor for HypocorismGenerator();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      *a1 = *a2;
      v9 = *(int *)(v6 + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
      v12 = *(int *)(type metadata accessor for StringTokenizer() + 20);
      v13 = &v10[v12];
      v14 = &v11[v12];
      v15 = sub_1C0301DB0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_1C003DD84((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for HypocorismGenerator);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2658);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  swift_release();
  v146 = *(int *)(v6 + 20);
  v147 = (char *)a1 + v146;
  v148 = (char *)a2 + v146;
  *(_QWORD *)((char *)a1 + v146) = *(_QWORD *)((char *)a2 + v146);
  swift_release();
  v149 = *(int *)(type metadata accessor for StringTokenizer() + 20);
  v150 = &v147[v149];
  v151 = &v148[v149];
  v152 = sub_1C0301DB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v152 - 8) + 40))(v150, v151, v152);
LABEL_7:
  v17 = a3[5];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = type metadata accessor for MeCardContactGenerator();
  v21 = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v20);
  v22 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20);
  if (v21)
  {
    if (!v22)
    {
      *(_OWORD *)v18 = *(_OWORD *)v19;
      v23 = *(int *)(v20 + 24);
      v24 = (char *)v18 + v23;
      v25 = (char *)v19 + v23;
      v26 = sub_1C0301DB0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    sub_1C003DD84((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for MeCardContactGenerator);
LABEL_12:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2660);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  *v18 = *v19;
  swift_bridgeObjectRelease();
  v18[1] = v19[1];
  swift_bridgeObjectRelease();
  v153 = *(int *)(v20 + 24);
  v154 = (char *)v18 + v153;
  v155 = (char *)v19 + v153;
  v156 = sub_1C0301DB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 40))(v154, v155, v156);
LABEL_13:
  v28 = a3[6];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  v31 = type metadata accessor for RelationshipAliasGenerator();
  v32 = __swift_getEnumTagSinglePayload((uint64_t)v29, 1, v31);
  v33 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31);
  if (v32)
  {
    if (!v33)
    {
      *v29 = *v30;
      *(_OWORD *)(v29 + 1) = *(_OWORD *)(v30 + 1);
      v34 = *(int *)(v31 + 24);
      v35 = (char *)v29 + v34;
      v36 = (char *)v30 + v34;
      *(_QWORD *)((char *)v29 + v34) = *(_QWORD *)((char *)v30 + v34);
      v37 = *(int *)(type metadata accessor for StringTokenizer() + 20);
      v38 = &v35[v37];
      v39 = &v36[v37];
      v40 = sub_1C0301DB0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
      __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v33)
  {
    sub_1C003DD84((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for RelationshipAliasGenerator);
LABEL_18:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726CA8);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_19;
  }
  *v29 = *v30;
  swift_release();
  v157 = v30[2];
  v29[1] = v30[1];
  v29[2] = v157;
  swift_bridgeObjectRelease();
  v158 = *(int *)(v31 + 24);
  v159 = (char *)v29 + v158;
  v160 = (_QWORD *)((char *)v30 + v158);
  *(_QWORD *)((char *)v29 + v158) = *v160;
  swift_release();
  v161 = *(int *)(type metadata accessor for StringTokenizer() + 20);
  v162 = &v159[v161];
  v163 = (char *)v160 + v161;
  v164 = sub_1C0301DB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 40))(v162, v163, v164);
LABEL_19:
  v42 = a3[7];
  v43 = (_QWORD *)((char *)a1 + v42);
  v44 = (_QWORD *)((char *)a2 + v42);
  if (*(_QWORD *)((char *)a1 + v42))
  {
    if (*v44)
    {
      *v43 = *v44;
      swift_release();
      v43[1] = v44[1];
      swift_release();
      goto LABEL_24;
    }
    sub_1C026F0E0((uint64_t)v43);
  }
  *(_OWORD *)v43 = *(_OWORD *)v44;
LABEL_24:
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_release();
  v45 = a3[9];
  v46 = (char *)a1 + v45;
  v47 = (char *)a2 + v45;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1 + v45);
  v48 = *((_OWORD *)v47 + 1);
  *(_OWORD *)v46 = *(_OWORD *)v47;
  *((_OWORD *)v46 + 1) = v48;
  *((_QWORD *)v46 + 4) = *((_QWORD *)v47 + 4);
  v49 = (int *)type metadata accessor for ContactsFrameworkMatcher();
  v50 = v49[5];
  v51 = &v46[v50];
  v52 = &v47[v50];
  *(_QWORD *)&v46[v50] = *(_QWORD *)&v47[v50];
  swift_release();
  v53 = type metadata accessor for StringTokenizer();
  v54 = *(int *)(v53 + 20);
  v55 = a3;
  v56 = &v51[v54];
  v57 = &v52[v54];
  v58 = sub_1C0301DB0();
  v173 = (char *)a2;
  v170 = *(_QWORD *)(v58 - 8);
  v59 = *(void (**)(char *, char *, uint64_t))(v170 + 40);
  v59(v56, v57, v58);
  v46[v49[6]] = v47[v49[6]];
  v46[v49[7]] = v47[v49[7]];
  v60 = v55[10];
  v61 = (char *)a1 + v60;
  v62 = &v173[v60];
  v59((char *)a1 + v60, &v173[v60], v58);
  v63 = *(int *)(type metadata accessor for SiriVocabularySearcher(0) + 20);
  v64 = *(void **)&v61[v63];
  *(_QWORD *)&v61[v63] = *(_QWORD *)&v62[v63];

  v65 = *(int *)(type metadata accessor for ThirdPartyContactMatcher(0) + 20);
  v66 = &v61[v65];
  v67 = &v62[v65];
  *(_QWORD *)v66 = *(_QWORD *)&v62[v65];
  swift_release();
  v171 = v59;
  v59(&v66[*(int *)(v53 + 20)], &v67[*(int *)(v53 + 20)], v58);
  v172 = v55;
  v68 = v55[11];
  v69 = (_OWORD *)((char *)a1 + v68);
  v70 = &v173[v68];
  if (*(_QWORD *)((char *)a1 + v68 + 24))
  {
    if (*((_QWORD *)v70 + 3))
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v69);
      v71 = *((_OWORD *)v70 + 1);
      *v69 = *(_OWORD *)v70;
      v69[1] = v71;
      *((_QWORD *)v69 + 4) = *((_QWORD *)v70 + 4);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v69 + 40);
      *(_OWORD *)((char *)v69 + 40) = *(_OWORD *)(v70 + 40);
      *(_OWORD *)((char *)v69 + 56) = *(_OWORD *)(v70 + 56);
      *((_QWORD *)v69 + 9) = *((_QWORD *)v70 + 9);
      goto LABEL_29;
    }
    sub_1C026F114((uint64_t)v69);
  }
  memcpy(v69, v70, 0x50uLL);
LABEL_29:
  v72 = v55[12];
  v73 = (char *)a1 + v72;
  v74 = &v173[v72];
  *(_QWORD *)((char *)a1 + v72) = *(_QWORD *)&v173[v72];
  swift_release();
  v59(&v73[*(int *)(v53 + 20)], &v74[*(int *)(v53 + 20)], v58);
  v75 = v55[13];
  v76 = (char *)a1 + v75;
  v77 = &v173[v75];
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1 + v75);
  v78 = *((_OWORD *)v77 + 1);
  *(_OWORD *)v76 = *(_OWORD *)v77;
  *((_OWORD *)v76 + 1) = v78;
  *((_QWORD *)v76 + 4) = *((_QWORD *)v77 + 4);
  v79 = v49[5];
  v80 = &v76[v79];
  v81 = &v77[v79];
  *(_QWORD *)&v76[v79] = *(_QWORD *)&v77[v79];
  swift_release();
  v59(&v80[*(int *)(v53 + 20)], &v81[*(int *)(v53 + 20)], v58);
  v82 = v173;
  v76[v49[6]] = v77[v49[6]];
  v76[v49[7]] = v77[v49[7]];
  v83 = v55[15];
  *((_BYTE *)a1 + v55[14]) = v173[v55[14]];
  v84 = (char *)a1 + v83;
  v85 = &v173[v83];
  Expander = type metadata accessor for EmojiQueryExpander();
  LODWORD(v81) = __swift_getEnumTagSinglePayload((uint64_t)v84, 1, Expander);
  v87 = __swift_getEnumTagSinglePayload((uint64_t)v85, 1, Expander);
  if ((_DWORD)v81)
  {
    if (!v87)
    {
      v88 = *(void (**)(char *, char *, uint64_t))(v170 + 32);
      v88(v84, v85, v58);
      v89 = *(int *)(Expander + 20);
      v90 = &v84[v89];
      v91 = &v85[v89];
      *(_QWORD *)v90 = *(_QWORD *)v91;
      v88(&v90[*(int *)(v53 + 20)], &v91[*(int *)(v53 + 20)], v58);
      *(_QWORD *)&v84[*(int *)(Expander + 24)] = *(_QWORD *)&v85[*(int *)(Expander + 24)];
      __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, Expander);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v87)
  {
    sub_1C003DD84((uint64_t)v84, (uint64_t (*)(_QWORD))type metadata accessor for EmojiQueryExpander);
LABEL_34:
    v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2668);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
    goto LABEL_35;
  }
  v171(v84, v85, v58);
  v165 = *(int *)(Expander + 20);
  v166 = &v84[v165];
  v167 = &v85[v165];
  *(_QWORD *)&v84[v165] = *(_QWORD *)&v85[v165];
  swift_release();
  v171(&v166[*(int *)(v53 + 20)], &v167[*(int *)(v53 + 20)], v58);
  v82 = v173;
  v168 = *(int *)(Expander + 24);
  v169 = *(void **)&v84[v168];
  *(_QWORD *)&v84[v168] = *(_QWORD *)&v85[v168];

LABEL_35:
  v93 = v55[16];
  v94 = (char *)a1 + v93;
  v95 = (uint64_t)v82 + v93;
  *(_QWORD *)((char *)a1 + v93) = *(_QWORD *)((char *)v82 + v93);
  swift_release();
  v171(&v94[*(int *)(v53 + 20)], (char *)(v95 + *(int *)(v53 + 20)), v58);
  v96 = (int *)type metadata accessor for AsrE3CandidateExpander();
  v97 = v96[5];
  v98 = &v94[v97];
  v99 = v95 + v97;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v94[v97]);
  v100 = *(_OWORD *)(v99 + 16);
  *(_OWORD *)v98 = *(_OWORD *)v99;
  *((_OWORD *)v98 + 1) = v100;
  *((_QWORD *)v98 + 4) = *(_QWORD *)(v99 + 32);
  v101 = v96[6];
  v102 = &v94[v101];
  v103 = v95 + v101;
  *v102 = *(_BYTE *)(v95 + v101);
  v104 = *(_QWORD *)(v95 + v101 + 16);
  *((_QWORD *)v102 + 1) = *(_QWORD *)(v95 + v101 + 8);
  *((_QWORD *)v102 + 2) = v104;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v102 + 24) = *(_OWORD *)(v103 + 24);
  *(_OWORD *)(v102 + 40) = *(_OWORD *)(v103 + 40);
  v102[56] = *(_BYTE *)(v103 + 56);
  *(_QWORD *)&v94[v96[7]] = *(_QWORD *)(v95 + v96[7]);
  swift_release();
  *(_QWORD *)((char *)a1 + v55[17]) = *(_QWORD *)((char *)v82 + v55[17]);
  swift_release();
  v105 = v55[18];
  v106 = (char *)a1 + v105;
  v107 = (uint64_t)v82 + v105;
  *(_QWORD *)((char *)a1 + v105) = *(_QWORD *)((char *)v82 + v105);
  swift_release();
  v171(&v106[*(int *)(v53 + 20)], (char *)(v107 + *(int *)(v53 + 20)), v58);
  v108 = (int *)type metadata accessor for ContactSignalProviders(0);
  v109 = v108[5];
  v110 = &v106[v109];
  v111 = (uint64_t *)(v107 + v109);
  v113 = *v111;
  v112 = v111[1];
  *(_QWORD *)v110 = v113;
  *((_QWORD *)v110 + 1) = v112;
  swift_bridgeObjectRelease();
  v114 = v108[6];
  v115 = &v106[v114];
  v116 = v107 + v114;
  v117 = sub_1C030367C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 40))(v115, v116, v117);
  v118 = (int *)type metadata accessor for SiriRemembersContactSignalProvider();
  v115[v118[5]] = *(_BYTE *)(v116 + v118[5]);
  v119 = v118[6];
  v120 = &v115[v119];
  v121 = (uint64_t *)(v116 + v119);
  v123 = *v121;
  v122 = v121[1];
  *(_QWORD *)v120 = v123;
  *((_QWORD *)v120 + 1) = v122;
  swift_bridgeObjectRelease();
  v124 = v118[7];
  v125 = (uint64_t)&v115[v124];
  v126 = v116 + v124;
  if (*(_QWORD *)&v115[v124 + 24])
    __swift_destroy_boxed_opaque_existential_0Tm(v125);
  v127 = *(_OWORD *)(v126 + 16);
  *(_OWORD *)v125 = *(_OWORD *)v126;
  *(_OWORD *)(v125 + 16) = v127;
  *(_QWORD *)(v125 + 32) = *(_QWORD *)(v126 + 32);
  v128 = v118[8];
  v129 = &v115[v128];
  v130 = (uint64_t *)(v116 + v128);
  v132 = *v130;
  v131 = v130[1];
  *(_QWORD *)v129 = v132;
  *((_QWORD *)v129 + 1) = v131;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v106[v108[7]] = *(_QWORD *)(v107 + v108[7]);
  swift_bridgeObjectRelease();
  v133 = v108[8];
  v134 = &v106[v133];
  v135 = v107 + v133;
  *v134 = *(_BYTE *)v135;
  v134[1] = *(_BYTE *)(v135 + 1);
  v134[2] = *(_BYTE *)(v135 + 2);
  *((_QWORD *)v134 + 1) = *(_QWORD *)(v135 + 8);
  v136 = v172[19];
  v137 = (char *)a1 + v136;
  if (*(_QWORD *)((char *)a1 + v136 + 24))
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1 + v136);
  v138 = *(_OWORD *)&v173[v136 + 16];
  *(_OWORD *)v137 = *(_OWORD *)&v173[v136];
  *((_OWORD *)v137 + 1) = v138;
  v139 = v172[20];
  v140 = v172[21];
  v141 = v173[v139];
  *((_QWORD *)v137 + 4) = *(_QWORD *)&v173[v136 + 32];
  *((_BYTE *)a1 + v139) = v141;
  v142 = (char *)a1 + v140;
  v143 = &v173[v140];
  *v142 = v173[v140];
  v144 = *(_QWORD *)&v173[v140 + 16];
  *((_QWORD *)v142 + 1) = *(_QWORD *)&v173[v140 + 8];
  *((_QWORD *)v142 + 2) = v144;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v142 + 24) = *(_OWORD *)(v143 + 24);
  *(_OWORD *)(v142 + 40) = *(_OWORD *)(v143 + 40);
  v142[56] = v143[56];
  *(_QWORD *)((char *)a1 + v172[22]) = *(_QWORD *)&v173[v172[22]];
  swift_release();
  *(_QWORD *)((char *)a1 + v172[23]) = *(_QWORD *)&v173[v172[23]];
  swift_release();
  *(_QWORD *)((char *)a1 + v172[24]) = *(_QWORD *)&v173[v172[24]];
  swift_release();
  return a1;
}

uint64_t sub_1C027026C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0270278(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2658);
  OUTLINED_FUNCTION_1_7();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2660);
    OUTLINED_FUNCTION_1_7();
    if (v9)
    {
      v7 = v10;
      v11 = a3[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726CA8);
      OUTLINED_FUNCTION_1_7();
      if (v12)
      {
        v7 = v13;
        v11 = a3[6];
      }
      else
      {
        OUTLINED_FUNCTION_218();
        OUTLINED_FUNCTION_1_7();
        if (v14)
        {
          v7 = v15;
          v11 = a3[9];
        }
        else
        {
          OUTLINED_FUNCTION_219();
          OUTLINED_FUNCTION_1_7();
          if (v16)
          {
            v7 = v17;
            v11 = a3[10];
          }
          else
          {
            type metadata accessor for PartialNameQueryExpander();
            OUTLINED_FUNCTION_1_7();
            if (v18)
            {
              v7 = v19;
              v11 = a3[12];
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2668);
              OUTLINED_FUNCTION_1_7();
              if (v20)
              {
                v7 = v21;
                v11 = a3[15];
              }
              else
              {
                OUTLINED_FUNCTION_217();
                OUTLINED_FUNCTION_1_7();
                if (v22)
                {
                  v7 = v23;
                  v11 = a3[16];
                }
                else
                {
                  if ((_DWORD)a2 == 0x7FFFFFFF)
                  {
                    OUTLINED_FUNCTION_171_1(a3[17]);
                    OUTLINED_FUNCTION_37_0();
                    return;
                  }
                  v7 = OUTLINED_FUNCTION_176_1();
                  v11 = a3[18];
                }
              }
            }
          }
        }
      }
    }
    v8 = a1 + v11;
  }
  OUTLINED_FUNCTION_46(v8, a2, v7);
}

uint64_t sub_1C02703B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C02703BC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2658);
  OUTLINED_FUNCTION_0_6();
  if (v10)
  {
    v8 = OUTLINED_FUNCTION_209();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2660);
    OUTLINED_FUNCTION_0_6();
    if (v10)
    {
      v9 = v11;
      v12 = a4[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726CA8);
      OUTLINED_FUNCTION_0_6();
      if (v13)
      {
        v9 = v14;
        v12 = a4[6];
      }
      else
      {
        OUTLINED_FUNCTION_218();
        OUTLINED_FUNCTION_0_6();
        if (v15)
        {
          v9 = v16;
          v12 = a4[9];
        }
        else
        {
          OUTLINED_FUNCTION_219();
          OUTLINED_FUNCTION_0_6();
          if (v17)
          {
            v9 = v18;
            v12 = a4[10];
          }
          else
          {
            type metadata accessor for PartialNameQueryExpander();
            OUTLINED_FUNCTION_0_6();
            if (v19)
            {
              v9 = v20;
              v12 = a4[12];
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2668);
              OUTLINED_FUNCTION_0_6();
              if (v21)
              {
                v9 = v22;
                v12 = a4[15];
              }
              else
              {
                OUTLINED_FUNCTION_217();
                OUTLINED_FUNCTION_0_6();
                if (v23)
                {
                  v9 = v24;
                  v12 = a4[16];
                }
                else
                {
                  if (a3 == 0x7FFFFFFF)
                  {
                    *(_QWORD *)(a1 + a4[17]) = (a2 - 1);
                    OUTLINED_FUNCTION_37_0();
                    return;
                  }
                  v9 = OUTLINED_FUNCTION_176_1();
                  v12 = a4[18];
                }
              }
            }
          }
        }
      }
    }
    v8 = a1 + v12;
  }
  OUTLINED_FUNCTION_49_3(v8, a2, a2, v9);
}

uint64_t type metadata accessor for CandidateContactGenerator(uint64_t a1)
{
  return sub_1C003CD30(a1, qword_1ED726AB8);
}

void sub_1C0270510()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  sub_1C02706F8(319, &qword_1EF5C2670, (void (*)(uint64_t))type metadata accessor for HypocorismGenerator);
  if (v0 <= 0x3F)
  {
    sub_1C02706F8(319, &qword_1EF5C2678, (void (*)(uint64_t))type metadata accessor for MeCardContactGenerator);
    if (v1 <= 0x3F)
    {
      sub_1C02706F8(319, &qword_1ED726CB0, (void (*)(uint64_t))type metadata accessor for RelationshipAliasGenerator);
      if (v2 <= 0x3F)
      {
        type metadata accessor for ContactsFrameworkMatcher();
        if (v3 <= 0x3F)
        {
          type metadata accessor for ThirdPartyContactMatcher(319);
          if (v4 <= 0x3F)
          {
            type metadata accessor for StringTokenizer();
            if (v5 <= 0x3F)
            {
              sub_1C02706F8(319, &qword_1EF5C2680, (void (*)(uint64_t))type metadata accessor for EmojiQueryExpander);
              if (v6 <= 0x3F)
              {
                type metadata accessor for AsrE3CandidateExpander();
                if (v7 <= 0x3F)
                {
                  type metadata accessor for ContactSignalProviders(319);
                  if (v8 <= 0x3F)
                    swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1C02706F8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1C030448C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1C0270744(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v20 = (uint64_t)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - v9;
  v21 = MEMORY[0x1E0DEE9D8];
  v19 = *(_QWORD *)(a1 + 16);
  if (v19)
  {
    v11 = 0;
    v17 = a1;
    v18 = a2;
    while (v11 < *(_QWORD *)(a1 + 16))
    {
      v12 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v13 = *(_QWORD *)(v6 + 72);
      sub_1C0045DFC(a1 + v12 + v13 * v11, (uint64_t)v10, &qword_1ED726DB0);
      v14 = sub_1C027D9A4((uint64_t)v10, a2);
      if (v2)
      {
        sub_1C0044B78((uint64_t)v10, &qword_1ED726DB0);
        swift_release();
        swift_bridgeObjectRelease();
        sub_1C01ECA20((uint64_t)a2);
        return;
      }
      if ((v14 & 1) != 0)
      {
        sub_1C005A718((uint64_t)v10, v20, &qword_1ED726DB0);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1C00B1738();
        v15 = v21;
        v16 = *(_QWORD *)(v21 + 16);
        if (v16 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          sub_1C00B1738();
          v15 = v21;
        }
        *(_QWORD *)(v15 + 16) = v16 + 1;
        sub_1C005A718(v20, v15 + v12 + v16 * v13, &qword_1ED726DB0);
        a1 = v17;
        a2 = v18;
      }
      else
      {
        sub_1C0044B78((uint64_t)v10, &qword_1ED726DB0);
      }
      if (v19 == ++v11)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    sub_1C01ECA20((uint64_t)a2);
  }
}

void sub_1C0270958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(char *);
  uint64_t (*v6)(char *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_40_0();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v22 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0) - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_27();
  v21 = v8;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v18 - v10;
  v23 = MEMORY[0x1E0DEE9D8];
  v20 = *(_QWORD *)(v2 + 16);
  if (v20)
  {
    v12 = 0;
    v18[1] = v4;
    v19 = v2;
    v18[0] = v6;
    while (v12 < *(_QWORD *)(v2 + 16))
    {
      v13 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      v14 = *(_QWORD *)(v22 + 72);
      sub_1C0045DFC(v2 + v13 + v14 * v12, (uint64_t)v11, &qword_1ED726DB0);
      v15 = v6(v11);
      if (v0)
      {
        sub_1C0044B78((uint64_t)v11, &qword_1ED726DB0);
        OUTLINED_FUNCTION_28_9();
        OUTLINED_FUNCTION_17_0();
        goto LABEL_16;
      }
      if ((v15 & 1) != 0)
      {
        sub_1C005A718((uint64_t)v11, v21, &qword_1ED726DB0);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_65_11();
          sub_1C00B1738();
        }
        v16 = v23;
        v17 = *(_QWORD *)(v23 + 16);
        if (v17 >= *(_QWORD *)(v23 + 24) >> 1)
        {
          sub_1C00B1738();
          v16 = v23;
        }
        *(_QWORD *)(v16 + 16) = v17 + 1;
        sub_1C005A718(v21, v16 + v13 + v17 * v14, &qword_1ED726DB0);
        v2 = v19;
        v6 = (uint64_t (*)(char *))v18[0];
      }
      else
      {
        sub_1C0044B78((uint64_t)v11, &qword_1ED726DB0);
      }
      if (v20 == ++v12)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    OUTLINED_FUNCTION_17_0();
LABEL_16:
    OUTLINED_FUNCTION_28_0();
  }
}

void sub_1C0270B34()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_204();
  if (v3 >> 62)
    goto LABEL_17;
  for (i = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = OUTLINED_FUNCTION_145_2())
  {
    OUTLINED_FUNCTION_147_1();
    while (1)
    {
      if (v17)
        OUTLINED_FUNCTION_194();
      if (v2 >= *(_QWORD *)(v16 + 16))
        break;
      v5 = OUTLINED_FUNCTION_183_0();
      v13 = v2 + 1;
      if (__OFADD__(v2, 1))
        goto LABEL_16;
      v14 = OUTLINED_FUNCTION_118_3(v5, v6, v7, v8, v9, v10, v11, v12, v15, v16, 0, v18);
      if (v0)
      {
        OUTLINED_FUNCTION_18();
        OUTLINED_FUNCTION_22_2();
        swift_release();
        goto LABEL_19;
      }
      if ((v14 & 1) != 0)
      {
        sub_1C0304738();
        OUTLINED_FUNCTION_74_9();
        OUTLINED_FUNCTION_75_14();
        sub_1C0304744();
      }
      else
      {
        OUTLINED_FUNCTION_22_2();
      }
      ++v2;
      if (v13 == i)
        goto LABEL_18;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    ;
  }
LABEL_18:
  OUTLINED_FUNCTION_18();
LABEL_19:
  OUTLINED_FUNCTION_215();
  OUTLINED_FUNCTION_44_23();
}

void sub_1C0270C3C(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = v3;
  v18 = *(_QWORD *)(a3 + 16);
  if (v18)
  {
    v5 = 0;
    v6 = (_QWORD *)(a3 + 64);
    v7 = MEMORY[0x1E0DEE9D8];
    v17 = a3;
    while (v5 < *(_QWORD *)(a3 + 16))
    {
      v8 = *(v6 - 4);
      v9 = *((_DWORD *)v6 - 6);
      v10 = *(v6 - 1);
      v11 = *v6;
      v20 = *(v6 - 2);
      v21 = v8;
      v22 = v9;
      v23 = v20;
      v24 = v10;
      v25 = v11;
      v12 = v4;
      v13 = a1(&v21);
      if (v4)
      {
        OUTLINED_FUNCTION_1_0();
        goto LABEL_15;
      }
      if ((v13 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v26 = v7;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          OUTLINED_FUNCTION_210();
          OUTLINED_FUNCTION_65_11();
          sub_1C00B2074();
          v7 = v26;
        }
        v15 = *(_QWORD *)(v7 + 16);
        if (v15 >= *(_QWORD *)(v7 + 24) >> 1)
        {
          sub_1C00B2074();
          v7 = v26;
        }
        *(_QWORD *)(v7 + 16) = v15 + 1;
        v16 = v7 + 40 * v15;
        *(_QWORD *)(v16 + 32) = v8;
        *(_DWORD *)(v16 + 40) = v9;
        *(_QWORD *)(v16 + 48) = v20;
        *(_QWORD *)(v16 + 56) = v10;
        *(_QWORD *)(v16 + 64) = v11;
        v4 = v12;
      }
      ++v5;
      v6 += 5;
      a3 = v17;
      if (v18 == v5)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_215();
    OUTLINED_FUNCTION_42_19();
  }
}

void sub_1C0270D98(uint64_t (*a1)(__int128 *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(__int128 *);
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int128 v14[2];
  __int128 v15[2];
  uint64_t v16;

  v16 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v6 = a1;
    v7 = 0;
    v8 = a3 + 32;
    v12 = *(_QWORD *)(a3 + 16);
    while (v7 < *(_QWORD *)(a3 + 16))
    {
      sub_1C0049024(v8, (uint64_t)v15);
      v9 = v6(v15);
      if (v3)
      {
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
        OUTLINED_FUNCTION_57();
        OUTLINED_FUNCTION_31();
        goto LABEL_16;
      }
      if ((v9 & 1) != 0)
      {
        sub_1C004CD5C(v15, (uint64_t)v14);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_65_11();
          sub_1C00B2150();
        }
        v10 = v16;
        v11 = *(_QWORD *)(v16 + 16);
        if (v11 >= *(_QWORD *)(v16 + 24) >> 1)
        {
          sub_1C00B2150();
          v10 = v16;
        }
        *(_QWORD *)(v10 + 16) = v11 + 1;
        sub_1C004CD5C(v14, v10 + 40 * v11 + 32);
        v5 = v12;
        v6 = a1;
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
      }
      ++v7;
      v8 += 40;
      if (v5 == v7)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    OUTLINED_FUNCTION_31();
LABEL_16:
    OUTLINED_FUNCTION_42_19();
  }
}

void sub_1C0270EF4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t i;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_204();
  if (v3 >> 62)
    goto LABEL_17;
  for (i = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = OUTLINED_FUNCTION_145_2())
  {
    OUTLINED_FUNCTION_147_1();
    while (1)
    {
      if (v18)
        OUTLINED_FUNCTION_194();
      if (v2 >= *(_QWORD *)(v17 + 16))
        break;
      v5 = *(id *)(v1 + 8 * v2 + 32);
      v13 = v5;
      v14 = v2 + 1;
      if (__OFADD__(v2, 1))
        goto LABEL_16;
      v15 = OUTLINED_FUNCTION_118_3((uint64_t)v5, v6, v7, v8, v9, v10, v11, v12, v16, v17, 0, v19);
      if (v0)
      {
        OUTLINED_FUNCTION_18();

        swift_release();
        goto LABEL_19;
      }
      if ((v15 & 1) != 0)
      {
        sub_1C0304738();
        OUTLINED_FUNCTION_74_9();
        OUTLINED_FUNCTION_75_14();
        sub_1C0304744();
      }
      else
      {

      }
      ++v2;
      if (v14 == i)
        goto LABEL_18;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    ;
  }
LABEL_18:
  OUTLINED_FUNCTION_18();
LABEL_19:
  OUTLINED_FUNCTION_215();
  OUTLINED_FUNCTION_44_23();
}

void sub_1C0270FFC(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  uint64_t v14;
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;

  v4 = a3;
  v17 = *(_QWORD *)(a3 + 16);
  if (v17)
  {
    v5 = a1;
    v6 = 0;
    v7 = (uint64_t *)(a3 + 40);
    v8 = MEMORY[0x1E0DEE9D8];
    while (v6 < *(_QWORD *)(v4 + 16))
    {
      v9 = *(v7 - 1);
      v10 = *v7;
      v18[0] = v9;
      v18[1] = v10;
      OUTLINED_FUNCTION_12_3();
      v11 = v5(v18);
      if (v3)
      {
        OUTLINED_FUNCTION_3_4();
        OUTLINED_FUNCTION_18();
        OUTLINED_FUNCTION_57();
        return;
      }
      if ((v11 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v19 = v8;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          OUTLINED_FUNCTION_65_11();
          sub_1C00B23D0();
          v8 = v19;
        }
        v13 = *(_QWORD *)(v8 + 16);
        if (v13 >= *(_QWORD *)(v8 + 24) >> 1)
        {
          sub_1C00B23D0();
          v8 = v19;
        }
        *(_QWORD *)(v8 + 16) = v13 + 1;
        v14 = v8 + 16 * v13;
        *(_QWORD *)(v14 + 32) = v9;
        *(_QWORD *)(v14 + 40) = v10;
        v4 = a3;
        v5 = a1;
      }
      else
      {
        OUTLINED_FUNCTION_57();
      }
      ++v6;
      v7 += 2;
      if (v17 == v6)
        goto LABEL_13;
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    OUTLINED_FUNCTION_18();
  }
}

BOOL sub_1C0271154(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) == 0;
}

uint64_t sub_1C0271164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t result;
  uint64_t v33;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (!v4)
  {
LABEL_21:
    swift_release();
    swift_release();
    return v5;
  }
  v33 = MEMORY[0x1E0DEE9D8];
  sub_1C00B1A4C();
  v5 = v33;
  v7 = (uint64_t *)(a1 + 32);
  while (1)
  {
    v8 = *v7;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v9 = sub_1C0271830(v8, a2, a3);
    if (v3)
    {
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return v5;
    }
    v10 = v9;
    v11 = *(_QWORD *)(v9 + 16);
    if (!v11)
      goto LABEL_18;
    v12 = *(_QWORD *)(v8 + 16);
    if (__OFADD__(v12, v11))
      break;
    if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v8 + 24) >> 1)
    {
      sub_1C0050278();
      v8 = v13;
    }
    if (!*(_QWORD *)(v10 + 16))
      goto LABEL_27;
    v14 = *(_QWORD *)(v8 + 16);
    v15 = (*(_QWORD *)(v8 + 24) >> 1) - v14;
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
    if (v15 < v11)
      goto LABEL_25;
    v17 = *(_QWORD *)(v16 - 8);
    v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v19 = *(_QWORD *)(v17 + 72);
    v20 = v8 + v18 + v19 * v14;
    v21 = v10 + v18;
    v22 = v19 * v11;
    v23 = v20 + v22;
    v24 = v21 + v22;
    if (v21 < v23 && v20 < v24)
      goto LABEL_28;
    swift_arrayInitWithCopy();
    v26 = *(_QWORD *)(v8 + 16);
    v27 = __OFADD__(v26, v11);
    v28 = v26 + v11;
    if (v27)
      goto LABEL_26;
    *(_QWORD *)(v8 + 16) = v28;
LABEL_18:
    swift_bridgeObjectRelease();
    v29 = *(_QWORD *)(v33 + 16);
    if (v29 >= *(_QWORD *)(v33 + 24) >> 1)
      sub_1C00B1A4C();
    *(_QWORD *)(v33 + 16) = v29 + 1;
    *(_QWORD *)(v33 + 8 * v29 + 32) = v8;
    ++v7;
    if (!--v4)
      goto LABEL_21;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  result = sub_1C0304828();
  __break(1u);
  return result;
}

uint64_t sub_1C02713D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1960();
    v2 = v9;
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4;
      v7 = *(_QWORD *)(v9 + 16);
      v6 = *(_QWORD *)(v9 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v6 >> 1)
        sub_1C00B1960();
      *(_QWORD *)(v9 + 16) = v7 + 1;
      *(_QWORD *)(v9 + 8 * v7 + 32) = v5;
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C027149C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_44_29();
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4;
      swift_getKeyPath();
      OUTLINED_FUNCTION_74_1();
      swift_getAtKeyPath();
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_4_2();
      OUTLINED_FUNCTION_151_2();
      if (v6)
        OUTLINED_FUNCTION_45_25();
      *(_QWORD *)(v9 + 16) = v5;
      *(_QWORD *)(v9 + 8 * v1 + 32) = v8;
      ++v4;
      --v2;
    }
    while (v2);
  }
  return OUTLINED_FUNCTION_215();
}

int64_t sub_1C027158C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t result;
  uint64_t v11;
  char v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  _DWORD *v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  _DWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  _BYTE v33[7];
  _BYTE v34[7];
  uint64_t v35;

  v30 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v23 = v2;
    v35 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1F90();
    v9 = v35;
    result = sub_1C00824B4(a1);
    if ((result & 0x8000000000000000) == 0)
    {
      v13 = result;
      if (result < 1 << *(_BYTE *)(a1 + 32))
      {
        v26 = v6 + 17;
        v27 = a1 + 56;
        v24 = a1;
        v25 = v6 + 249;
        v14 = v12 & 1;
        while (((*(_QWORD *)(v27 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
        {
          if (*(_DWORD *)(a1 + 36) != (_DWORD)v11)
            goto LABEL_17;
          v31 = v14;
          v32 = v11;
          v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v13);
          v16 = *v15;
          v17 = v15[1];
          sub_1C00638E8(v30, (uint64_t)&v6[*(int *)(v29 + 36)], type metadata accessor for ContactResolver.SignalSet);
          *(_QWORD *)v6 = 0;
          *((_QWORD *)v6 + 1) = 0xE000000000000000;
          v6[16] = 0;
          v18 = v26;
          *v26 = *(_DWORD *)v34;
          *(_DWORD *)((char *)v18 + 3) = *(_DWORD *)&v34[3];
          *((_QWORD *)v6 + 3) = 0;
          *((_QWORD *)v6 + 4) = 0xE000000000000000;
          *((_QWORD *)v6 + 5) = 0;
          *((_QWORD *)v6 + 6) = 0xE000000000000000;
          *((_QWORD *)v6 + 7) = v16;
          *((_QWORD *)v6 + 8) = v17;
          *((_QWORD *)v6 + 9) = 0;
          *((_QWORD *)v6 + 10) = 0xE000000000000000;
          *((_QWORD *)v6 + 11) = 0;
          *((_QWORD *)v6 + 12) = 0xE000000000000000;
          *((_QWORD *)v6 + 13) = 0;
          *((_QWORD *)v6 + 14) = 0xE000000000000000;
          *((_QWORD *)v6 + 15) = 0;
          *((_QWORD *)v6 + 16) = 0xE000000000000000;
          *((_QWORD *)v6 + 17) = 0;
          *((_QWORD *)v6 + 18) = 0xE000000000000000;
          *((_QWORD *)v6 + 19) = 0;
          *((_QWORD *)v6 + 20) = 0xE000000000000000;
          *((_QWORD *)v6 + 29) = 0;
          *(_OWORD *)(v6 + 200) = 0u;
          *(_OWORD *)(v6 + 216) = 0u;
          *(_OWORD *)(v6 + 168) = 0u;
          *(_OWORD *)(v6 + 184) = 0u;
          *((_QWORD *)v6 + 30) = v8;
          v6[248] = 1;
          v19 = v25;
          *v25 = *(_DWORD *)v33;
          *(_DWORD *)((char *)v19 + 3) = *(_DWORD *)&v33[3];
          *((_QWORD *)v6 + 32) = 0;
          v21 = *(_QWORD *)(v9 + 16);
          v20 = *(_QWORD *)(v9 + 24);
          v35 = v9;
          swift_bridgeObjectRetain();
          if (v21 >= v20 >> 1)
          {
            sub_1C00B1F90();
            v9 = v35;
          }
          *(_QWORD *)(v9 + 16) = v21 + 1;
          sub_1C005A718((uint64_t)v6, v9+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v21, (uint64_t *)&unk_1ED726D98);
          a1 = v24;
          result = sub_1C0082610(v13, v32, v31 & 1, v24);
          v13 = result;
          v14 = v22 & 1;
          if (!--v7)
          {
            sub_1C00A6E5C(result, v11, v14);
            return v9;
          }
          v8 = MEMORY[0x1E0DEE9D8];
          if (result < 0 || result >= 1 << *(_BYTE *)(a1 + 32))
            goto LABEL_18;
        }
        __break(1u);
LABEL_17:
        __break(1u);
      }
    }
LABEL_18:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1C0271830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2688);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
  v10 = MEMORY[0x1E0C80A78](v29);
  v28 = (uint64_t)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v24 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v24[1] = a1;
    v25 = v16;
    v17 = (char *)(a1 + v16);
    v18 = *(_QWORD *)(v12 + 72);
    swift_bridgeObjectRetain();
    v19 = MEMORY[0x1E0DEE9D8];
    v26 = a3;
    v27 = a2;
    while (1)
    {
      sub_1C0267070(v17, a3, (uint64_t)v9);
      if (v3)
        break;
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v29) == 1)
      {
        sub_1C0044B78((uint64_t)v9, &qword_1EF5C2688);
      }
      else
      {
        sub_1C005A718((uint64_t)v9, (uint64_t)v14, (uint64_t *)&unk_1ED726D98);
        sub_1C005A718((uint64_t)v14, v28, (uint64_t *)&unk_1ED726D98);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C0050278();
          v19 = v21;
        }
        v20 = *(_QWORD *)(v19 + 16);
        if (v20 >= *(_QWORD *)(v19 + 24) >> 1)
        {
          sub_1C0050278();
          v19 = v22;
        }
        *(_QWORD *)(v19 + 16) = v20 + 1;
        sub_1C005A718(v28, v19 + v25 + v20 * v18, (uint64_t *)&unk_1ED726D98);
        a3 = v26;
      }
      v17 += v18;
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = MEMORY[0x1E0DEE9D8];
LABEL_15:
    swift_release();
    swift_release();
  }
  return v19;
}

void sub_1C0271A9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v4 = a2;
  v5 = a1;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a2 + 16);
  if (v7 >= v6)
    v8 = *(_QWORD *)(a1 + 16);
  else
    v8 = *(_QWORD *)(a2 + 16);
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1C00B1960();
  v23 = v4;
  v24 = v5;
  v22 = v6;
  if (v8)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v6 == v9)
      {
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      if (v7 == v9)
        goto LABEL_28;
      v10 = *(_QWORD *)(v5 + 8 * v9 + 32);
      v11 = *(_QWORD *)(v4 + 8 * v9 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = a3(v10, v11);
      if (v3)
        break;
      v13 = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = *(_QWORD *)(v26 + 16);
      if (v14 >= *(_QWORD *)(v26 + 24) >> 1)
        sub_1C00B1960();
      ++v9;
      *(_QWORD *)(v26 + 16) = v14 + 1;
      *(_QWORD *)(v26 + 8 * v14 + 32) = v13;
      v4 = v23;
      v5 = v24;
      v6 = v22;
      if (v8 == v9)
        goto LABEL_14;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_26:
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_14:
    if (v6 <= v7)
    {
LABEL_23:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = v4 + 32;
      v21 = v5 + 32;
      while (v8 < v6)
      {
        if (v7 == v8)
          goto LABEL_23;
        if (v8 >= v7)
          goto LABEL_30;
        v15 = *(_QWORD *)(v21 + 8 * v8);
        v16 = *(_QWORD *)(v20 + 8 * v8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v17 = a3(v15, v16);
        if (v3)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_26;
        }
        v18 = v17;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v19 = *(_QWORD *)(v26 + 16);
        if (v19 >= *(_QWORD *)(v26 + 24) >> 1)
          sub_1C00B1960();
        ++v8;
        *(_QWORD *)(v26 + 16) = v19 + 1;
        *(_QWORD *)(v26 + 8 * v19 + 32) = v18;
        v6 = v22;
        if (v22 == v8)
          goto LABEL_23;
      }
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
    }
  }
}

void sub_1C0271D54(void (*a1)(uint64_t *__return_ptr, uint64_t *, uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = v4;
  v6 = a4;
  v7 = a3;
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a4 + 16);
  if (v9 >= v8)
    v10 = *(_QWORD *)(a3 + 16);
  else
    v10 = *(_QWORD *)(a4 + 16);
  v29 = MEMORY[0x1E0DEE9D8];
  sub_1C00B1960();
  v11 = v29;
  v22 = v6;
  v23 = v7;
  v21 = v8;
  if (v10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = 0;
    while (v8 != v12)
    {
      if (v9 == v12)
        goto LABEL_26;
      v13 = *(_QWORD *)(v6 + 8 * v12 + 32);
      v26 = *(_QWORD *)(v7 + 8 * v12 + 32);
      v27 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1(&v28, &v26, &v25);
      if (v5)
      {
LABEL_24:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      v5 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = v28;
      v29 = v11;
      v15 = *(_QWORD *)(v11 + 16);
      if (v15 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_1C00B1960();
        v11 = v29;
      }
      ++v12;
      *(_QWORD *)(v11 + 16) = v15 + 1;
      *(_QWORD *)(v11 + 8 * v15 + 32) = v14;
      v6 = v22;
      v7 = v23;
      v8 = v21;
      if (v10 == v12)
        goto LABEL_14;
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_14:
    if (v8 <= v9)
    {
LABEL_23:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v19 = v6 + 32;
    v20 = v7 + 32;
    while (v10 < v8)
    {
      if (v9 == v10)
        goto LABEL_23;
      if (v10 >= v9)
        goto LABEL_28;
      v16 = *(_QWORD *)(v19 + 8 * v10);
      v26 = *(_QWORD *)(v20 + 8 * v10);
      v27 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1(&v28, &v26, &v25);
      if (v5)
        goto LABEL_24;
      v5 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = v28;
      v29 = v11;
      v18 = *(_QWORD *)(v11 + 16);
      if (v18 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_1C00B1960();
        v11 = v29;
      }
      ++v10;
      *(_QWORD *)(v11 + 16) = v18 + 1;
      *(_QWORD *)(v11 + 8 * v18 + 32) = v17;
      v8 = v21;
      if (v21 == v10)
        goto LABEL_23;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
}

void sub_1C0272020(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD *, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v36;
  _QWORD v37[33];
  uint64_t v38;
  _QWORD v39[34];
  _QWORD __dst[34];
  _QWORD __src[35];
  uint64_t v42;

  v4 = v3;
  v5 = a2;
  v33 = *(_QWORD *)(a2 + 16);
  v34 = *(_QWORD *)(a1 + 16);
  if (v33 >= v34)
    v7 = *(_QWORD *)(a1 + 16);
  else
    v7 = *(_QWORD *)(a2 + 16);
  v42 = MEMORY[0x1E0DEE9D8];
  sub_1C00B1960();
  v8 = v42;
  v31 = a1;
  v29 = v5;
  if (v7)
  {
    v36 = v3;
    v30 = a1 + 32;
    v28 = v5 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = 0;
    v32 = 0;
    v10 = 0;
    v11 = &qword_1EF5B9340;
    while (1)
    {
      if ((v10 & 1) != 0)
      {
        sub_1C00BD2DC(__dst);
        sub_1C005A718((uint64_t)__dst, (uint64_t)__src, v11);
        v10 = 1;
        v12 = v36;
      }
      else
      {
        v13 = v34;
        v12 = v36;
        if (v9 == v34)
          goto LABEL_11;
        if (v9 >= v34)
          goto LABEL_40;
        memcpy(__dst, (const void *)(v30 + 264 * v9), 0x108uLL);
        v13 = v9 + 1;
        if (v32 == v33)
        {
LABEL_11:
          sub_1C00BD2DC(__dst);
          sub_1C005A718((uint64_t)__dst, (uint64_t)__src, v11);
          v10 = 1;
        }
        else
        {
          if (v32 >= v33)
            goto LABEL_41;
          v14 = *(_QWORD *)(v28 + 8 * v32);
          memcpy(__src, (const void *)(v30 + 264 * v9), 0x108uLL);
          __src[33] = v14;
          nullsub_1(__src);
          sub_1C003F648(__dst);
          swift_bridgeObjectRetain();
          v10 = 0;
          ++v32;
        }
        v9 = v13;
      }
      sub_1C005A718((uint64_t)__src, (uint64_t)v39, v11);
      sub_1C005A718((uint64_t)v39, (uint64_t)__dst, v11);
      if (sub_1C00BD188((uint64_t)__dst) == 1)
        break;
      v15 = __src[33];
      v16 = a3(__src, __src[33]);
      if (v12)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        memcpy(v37, __src, sizeof(v37));
        v38 = v15;
        sub_1C00BD1A0(v37);
        return;
      }
      v17 = v16;
      v36 = 0;
      v18 = v9;
      v19 = v11;
      memcpy(v37, __src, sizeof(v37));
      v38 = v15;
      sub_1C00BD1A0(v37);
      v42 = v8;
      v20 = *(_QWORD *)(v8 + 16);
      if (v20 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_1C00B1960();
        v8 = v42;
      }
      *(_QWORD *)(v8 + 16) = v20 + 1;
      *(_QWORD *)(v8 + 8 * v20 + 32) = v17;
      --v7;
      v11 = v19;
      v9 = v18;
      if (!v7)
      {
        if ((v10 & 1) != 0)
          goto LABEL_24;
        v5 = v29;
        v21 = v32;
        v4 = 0;
        goto LABEL_26;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = 0;
    v21 = 0;
LABEL_26:
    v22 = v34;
    if (v9 == v34)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v23 = 264 * v9 + 32;
    while (v9 < v22)
    {
      memcpy(v39, (const void *)(v31 + v23), 0x108uLL);
      if (v33 == v21)
        goto LABEL_24;
      if (v21 >= v33)
        goto LABEL_39;
      v24 = *(_QWORD *)(v5 + 32 + 8 * v21);
      memcpy(__dst, (const void *)(v31 + v23), 0x108uLL);
      __dst[33] = v24;
      memcpy(__src, __dst, 0x110uLL);
      sub_1C003F648(v39);
      swift_bridgeObjectRetain();
      v25 = a3(__src, v24);
      if (v4)
      {
        sub_1C00BD1A0(__dst);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      v26 = v25;
      sub_1C00BD1A0(__dst);
      v42 = v8;
      v27 = *(_QWORD *)(v8 + 16);
      if (v27 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_1C00B1960();
        v8 = v42;
      }
      ++v9;
      *(_QWORD *)(v8 + 16) = v27 + 1;
      *(_QWORD *)(v8 + 8 * v27 + 32) = v26;
      v23 += 264;
      ++v21;
      v22 = v34;
      if (v34 == v9)
        goto LABEL_24;
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1C0272474(_QWORD *a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t result;

  swift_bridgeObjectRetain();
  v5 = sub_1C0303FF4();
  if (v6)
  {
    v7 = v5;
    v8 = v6;
    while (1)
    {
      v9 = a2(v7, v8);
      if (v2)
        break;
      if ((v9 & 1) == 0)
        MEMORY[0x1C3B96EC0](v7, v8);
      swift_bridgeObjectRelease();
      v7 = sub_1C0303FF4();
      v8 = v10;
      if (!v10)
        goto LABEL_7;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *a1 = 0;
    a1[1] = 0xE000000000000000;
  }
  return result;
}

void sub_1C0272590(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  _WORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  os_log_type_t v52;
  _WORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t Expander;
  uint64_t v75;
  uint64_t v76;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v78;
  uint64_t v79;
  unsigned __int8 *v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned __int8 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t);
  void (*v108)(uint64_t, uint64_t);
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int *v130;
  __int128 v131;
  __int128 v132;
  _OWORD v133[3];
  uint64_t v134;
  uint64_t v135;

  v114 = (int *)OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_53();
  v115 = v7;
  OUTLINED_FUNCTION_8_4();
  v8 = (int *)type metadata accessor for ContactResolverCache();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_53();
  v113 = v10;
  v11 = OUTLINED_FUNCTION_8_4();
  v121 = type metadata accessor for ContactResolverConfig(v11);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_53();
  v112 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2668);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_53();
  v110 = v15;
  OUTLINED_FUNCTION_8_4();
  v111 = type metadata accessor for StringTokenizer();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_58_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726CA8);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_53();
  v123 = v18;
  OUTLINED_FUNCTION_8_4();
  v19 = sub_1C0301DB0();
  v120 = *(_QWORD *)(v19 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_53();
  v127 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2658);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_6_0();
  v25 = (_QWORD *)(v24 - v23);
  v26 = type metadata accessor for CandidateContactGenerator(0);
  *(_BYTE *)(a3 + *(int *)(v26 + 56)) = 2;
  v130 = (int *)v26;
  v119 = *(int *)(v26 + 88);
  *(_QWORD *)(a3 + v119) = 0;
  v27 = a1[1];
  v116 = v19;
  if (!v27)
  {
    v135 = 0;
LABEL_4:
    v28 = type metadata accessor for HypocorismGenerator();
    OUTLINED_FUNCTION_154_2((uint64_t)v25, 1, v29, v28);
    goto LABEL_5;
  }
  sub_1C004D988();
  if (!v135)
    goto LABEL_4;
  v47 = (uint64_t)a1 + v8[15];
  v48 = type metadata accessor for HypocorismGenerator();
  sub_1C00638E8(v47, (uint64_t)v25 + *(int *)(v48 + 20), (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726EB0);
  v27 = OUTLINED_FUNCTION_38_6();
  v49 = OUTLINED_FUNCTION_39();
  *v25 = sub_1C028A5F4(v49);
  v50 = v48;
  v19 = v116;
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v50);
  swift_release();
LABEL_5:
  sub_1C005A718((uint64_t)v25, a3, &qword_1EF5C2658);
  v30 = *(void **)((char *)a1 + v8[11]);
  if (v30)
  {
    v31 = v30;
    v32 = objc_msgSend(v31, sel_contactRelations);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726F40);
    v27 = sub_1C0304138();

    if (v27 >> 62)
    {
      OUTLINED_FUNCTION_47();
      v33 = sub_1C03047F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v33 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v33)
    {
      if (qword_1ED727970 != -1)
        swift_once();
      v34 = OUTLINED_FUNCTION_9_0();
      OUTLINED_FUNCTION_7(v34, (uint64_t)&unk_1ED7295C8);
      v35 = OUTLINED_FUNCTION_9_1();
      if (OUTLINED_FUNCTION_37_1(v35))
      {
        v36 = (_WORD *)OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_15_21(v36);
        OUTLINED_FUNCTION_0_4(&dword_1C0039000, v37, v38, "CandidateContactGenerator::init - meCard found in cache with valid contact relations set");
        OUTLINED_FUNCTION_5();
      }

      v39 = (_QWORD *)(a3 + v130[5]);
      OUTLINED_FUNCTION_63_9();
      v41 = *(_QWORD *)(v40 - 256);
      v42(v41);
      sub_1C015655C(v31, v41, v39);
      type metadata accessor for MeCardContactGenerator();
      v43 = OUTLINED_FUNCTION_209();
      v46 = 0;
      goto LABEL_22;
    }

  }
  if (qword_1ED727970 != -1)
    swift_once();
  v51 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_7(v51, (uint64_t)&unk_1ED7295C8);
  v52 = OUTLINED_FUNCTION_9_1();
  if (OUTLINED_FUNCTION_37_1(v52))
  {
    v53 = (_WORD *)OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_15_21(v53);
    OUTLINED_FUNCTION_0_4(&dword_1C0039000, v54, v55, "CandidateContactGenerator::init - meCard not found in cache or did not have valid contact relations set");
    OUTLINED_FUNCTION_5();
  }

  type metadata accessor for MeCardContactGenerator();
  v43 = OUTLINED_FUNCTION_209();
  v46 = 1;
LABEL_22:
  OUTLINED_FUNCTION_154_2(v43, v46, v44, v45);
  v125 = a3;
  if (!*a1)
  {
    v134 = 0;
LABEL_25:
    v56 = v3;
    v57 = type metadata accessor for RelationshipAliasGenerator();
    v58 = (uint64_t)v123;
    OUTLINED_FUNCTION_154_2((uint64_t)v123, 1, v59, v57);
    goto LABEL_26;
  }
  sub_1C004D988();
  if (!v134)
    goto LABEL_25;
  OUTLINED_FUNCTION_63_9();
  v99 = *(_QWORD *)(v98 - 256);
  v100(v99);
  sub_1C00638E8((uint64_t)a1 + v8[15], v3, (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726EB8);
  OUTLINED_FUNCTION_38_6();
  v101 = OUTLINED_FUNCTION_44_7();
  v58 = (uint64_t)v123;
  *v123 = sub_1C028A5F4(v101);
  *(_QWORD *)&v131 = sub_1C0301D74();
  *((_QWORD *)&v131 + 1) = v102;
  sub_1C004F408();
  sub_1C0304504();
  swift_bridgeObjectRelease();
  v103 = sub_1C0303F10();
  v105 = v104;
  OUTLINED_FUNCTION_28();
  (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v99, v19);
  v123[1] = v103;
  v123[2] = v105;
  v106 = type metadata accessor for RelationshipAliasGenerator();
  v56 = v3;
  sub_1C004555C(v3, (uint64_t)v123 + *(int *)(v106 + 24), (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
  __swift_storeEnumTagSinglePayload((uint64_t)v123, 0, 1, v106);
  swift_release();
LABEL_26:
  sub_1C005A718(v58, v125 + v130[6], &qword_1ED726CA8);
  *(_QWORD *)(v125 + v130[8]) = *(_QWORD *)((char *)a1 + v8[17]);
  v60 = (_QWORD *)((char *)a1 + v8[16]);
  v61 = *v60;
  v62 = v8;
  if (*v60)
    v63 = v60[1];
  else
    v63 = 0;
  v64 = (uint64_t *)(v125 + v130[7]);
  *v64 = v61;
  v64[1] = v63;
  sub_1C0049024((uint64_t)a1 + v8[8], (uint64_t)&v131);
  v124 = (uint64_t)a1 + v8[15];
  sub_1C00638E8(v124, v56, (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
  v117 = a2 + *(int *)(v121 + 32);
  v126 = (uint64_t)a1;
  v107 = *(void (**)(uint64_t))(v120 + 16);
  v107(v127);
  v109 = (char *)a1 + v8[7];
  v65 = v125 + v130[9];
  OUTLINED_FUNCTION_196();
  v66 = OUTLINED_FUNCTION_218();
  sub_1C00638E8(v56, v65 + *(int *)(v66 + 20), (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
  swift_retain();
  sub_1C008B5CC(v61);
  sub_1C0212B30();
  v108 = *(void (**)(uint64_t, uint64_t))(v120 + 8);
  v108(v127, v116);
  sub_1C003DD84(v56, (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v131);
  OUTLINED_FUNCTION_104_7();
  v67 = *(void **)(v126 + v8[12]);
  v68 = v125 + v130[10];
  v69 = OUTLINED_FUNCTION_219();
  sub_1C00638E8(v124, v68 + *(int *)(v69 + 20), (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
  ((void (*)(uint64_t, uint64_t, uint64_t))v107)(v68, v117, v116);
  *(_QWORD *)(v68 + *(int *)(type metadata accessor for SiriVocabularySearcher(0) + 20)) = v67;
  sub_1C0049024(v126 + v8[9], (uint64_t)&v131);
  OUTLINED_FUNCTION_76_5(v124, v56);
  ((void (*)(uint64_t, uint64_t, uint64_t))v107)(v127, v117, v116);
  v70 = v125 + v130[13];
  OUTLINED_FUNCTION_196();
  OUTLINED_FUNCTION_76_5(v56, v70 + *(int *)(v66 + 20));
  v71 = v67;
  sub_1C0212B30();
  v108(v127, v116);
  sub_1C003DD84(v56, (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v131);
  OUTLINED_FUNCTION_104_7();
  if (v109[2] == 1)
  {
    ((void (*)(uint64_t, uint64_t, uint64_t))v107)(v127, v117, v116);
    sub_1C00638E8(v124, v56, (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
    v72 = v110;
    sub_1C0183B08(v127, v56, v110);
    v73 = 0;
  }
  else
  {
    v73 = 1;
    v72 = v110;
  }
  Expander = type metadata accessor for EmojiQueryExpander();
  OUTLINED_FUNCTION_154_2(v72, v73, v75, Expander);
  sub_1C005A718(v72, v125 + v130[15], &qword_1EF5C2668);
  if (v109[6] == 1)
  {
    sub_1C0049024(v126 + v8[10], (uint64_t)&v131);
    OUTLINED_FUNCTION_201(v76, (uint64_t)v133 + 8);
  }
  else
  {
    v132 = 0u;
    memset(v133, 0, sizeof(v133));
    v131 = 0u;
  }
  sub_1C005A718((uint64_t)&v131, v125 + v130[11], &qword_1EF5C2690);
  OUTLINED_FUNCTION_76_5(a2, v112);
  *((_QWORD *)&v132 + 1) = v111;
  *(_QWORD *)&v133[0] = &off_1E7992348;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v131);
  OUTLINED_FUNCTION_191_0((uint64_t)boxed_opaque_existential_0, (uint64_t)boxed_opaque_existential_0);
  type metadata accessor for CandidateContactDeduplicator();
  v78 = OUTLINED_FUNCTION_38_6();
  sub_1C004555C(v112, v78 + OBJC_IVAR____TtC13SiriInference28CandidateContactDeduplicator_config, type metadata accessor for ContactResolverConfig);
  sub_1C004CD5C(&v131, v78 + OBJC_IVAR____TtC13SiriInference28CandidateContactDeduplicator_tokenizer);
  *(_QWORD *)(v125 + v130[17]) = v78;
  sub_1C00638E8(v126, v113, (uint64_t (*)(_QWORD))type metadata accessor for ContactResolverCache);
  OUTLINED_FUNCTION_76_5(a2, v112);
  sub_1C027324C(v113, v112, v125 + v130[18]);
  OUTLINED_FUNCTION_191_0(v79, v125 + v130[12]);
  sub_1C027E590(v126 + v8[25], v125 + v130[19]);
  *(_BYTE *)(v125 + v130[20]) = *(_BYTE *)(v126 + v8[26]);
  v80 = (unsigned __int8 *)(v126 + v8[27]);
  v81 = *v80;
  v82 = *((_QWORD *)v80 + 1);
  v83 = *((_QWORD *)v80 + 2);
  v84 = *((_QWORD *)v80 + 3);
  v85 = *((_QWORD *)v80 + 4);
  v86 = *((_QWORD *)v80 + 5);
  v87 = *((_QWORD *)v80 + 6);
  v88 = v80[56];
  v89 = v125 + v130[21];
  *(_BYTE *)v89 = v81;
  v128 = v82;
  *(_QWORD *)(v89 + 8) = v82;
  *(_QWORD *)(v89 + 16) = v83;
  v122 = v84;
  *(_QWORD *)(v89 + 24) = v84;
  *(_QWORD *)(v89 + 32) = v85;
  v118 = v85;
  *(_QWORD *)(v89 + 40) = v86;
  *(_QWORD *)(v89 + 48) = v87;
  *(_BYTE *)(v89 + 56) = v88;
  v90 = *(_QWORD *)(v126 + v62[22]);
  *(_QWORD *)(v125 + v130[23]) = v90;
  v91 = *(_QWORD *)(v126 + v62[21]);
  *(_QWORD *)(v125 + v130[24]) = v91;
  OUTLINED_FUNCTION_21();
  swift_retain();
  OUTLINED_FUNCTION_44_7();
  swift_release();
  v92 = 0;
  *(_QWORD *)(v125 + v119) = 0;
  if (v81 == 1)
  {
    if (v90 && v91)
    {
      type metadata accessor for E3Orchestrator();
      v92 = OUTLINED_FUNCTION_16_0();
      *(_QWORD *)(v92 + 16) = v90;
      *(_QWORD *)(v92 + 24) = v91;
      *(_QWORD *)(v125 + v119) = v92;
      swift_retain();
      OUTLINED_FUNCTION_44_7();
    }
    else
    {
      type metadata accessor for EuclidVectorDb();
      OUTLINED_FUNCTION_16_0();
      v93 = sub_1C0180A70();
      type metadata accessor for EuclidEmbeddingApi();
      OUTLINED_FUNCTION_16_0();
      v94 = sub_1C0181380();
      type metadata accessor for E3Orchestrator();
      v92 = OUTLINED_FUNCTION_16_0();
      *(_QWORD *)(v92 + 16) = v93;
      *(_QWORD *)(v92 + 24) = v94;
      *(_QWORD *)(v125 + v119) = v92;
    }
  }
  sub_1C00638E8(v124, v115, (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
  OUTLINED_FUNCTION_201(v95, v115 + v114[5]);
  v96 = v114[7];
  v97 = v115 + v114[6];
  *(_BYTE *)v97 = v81;
  *(_QWORD *)(v97 + 8) = v128;
  *(_QWORD *)(v97 + 16) = v83;
  *(_QWORD *)(v97 + 24) = v122;
  *(_QWORD *)(v97 + 32) = v118;
  *(_QWORD *)(v97 + 40) = v86;
  *(_QWORD *)(v97 + 48) = v87;
  *(_BYTE *)(v97 + 56) = v88;
  *(_QWORD *)(v115 + v96) = v92;
  OUTLINED_FUNCTION_102_5();
  OUTLINED_FUNCTION_21();
  sub_1C003DD84(a2, type metadata accessor for ContactResolverConfig);
  sub_1C003DD84(v126, (uint64_t (*)(_QWORD))type metadata accessor for ContactResolverCache);
  sub_1C004555C(v115, v125 + v130[16], (uint64_t (*)(_QWORD))type metadata accessor for AsrE3CandidateExpander);
  OUTLINED_FUNCTION_111();
}

void sub_1C027324C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __int128 v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v39[40];

  v36 = sub_1C030367C();
  v6 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_53();
  v35 = v7;
  OUTLINED_FUNCTION_8_4();
  v34 = (int *)type metadata accessor for SiriRemembersContactSignalProvider();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_21_0();
  v9 = (int *)type metadata accessor for ContactResolverCache();
  sub_1C00638E8(a1 + v9[15], a3, (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
  v37 = a1;
  v10 = *(void **)(a1 + v9[11]);
  if (v10)
  {
    v11 = objc_msgSend(v10, sel_identifier);
    v12 = sub_1C0303EB0();
    v14 = v13;

  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  v32 = (int *)OUTLINED_FUNCTION_176_1();
  v33 = a3;
  v15 = (uint64_t *)(a3 + v32[5]);
  *v15 = v12;
  v15[1] = v14;
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v16(v35, v37 + v9[6], v36);
  v30 = *(_BYTE *)a2;
  v17 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for ContactResolverConfig(0) + 52));
  sub_1C0045DFC(v37 + v9[30], (uint64_t)v39, &qword_1EF5BA420);
  v18 = *(_QWORD *)(a2 + 16);
  v31 = *(_QWORD *)(a2 + 8);
  v19 = v3 + v34[7];
  *(_QWORD *)(v19 + 32) = 0;
  *(_OWORD *)v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  v20 = (_QWORD *)(v3 + v34[8]);
  *v20 = 0;
  v20[1] = 0;
  v16(v3, v35, v36);
  *(_BYTE *)(v3 + v34[5]) = v30;
  if (v17 == 4)
  {
    OUTLINED_FUNCTION_45_0();
    OUTLINED_FUNCTION_188();
    v21 = v34[6];
    v22 = xmmword_1C030A410;
  }
  else
  {
    if (v17 != 1)
    {
      OUTLINED_FUNCTION_45_0();
      OUTLINED_FUNCTION_188();
      v23 = (_QWORD *)(v3 + v34[6]);
      *v23 = 0;
      v23[1] = 0;
      goto LABEL_10;
    }
    OUTLINED_FUNCTION_45_0();
    OUTLINED_FUNCTION_188();
    v21 = v34[6];
    v22 = xmmword_1C030A420;
  }
  *(_OWORD *)(v3 + v21) = v22;
LABEL_10:
  sub_1C00F721C((uint64_t)v39, v19);
  swift_bridgeObjectRelease();
  *v20 = v31;
  v20[1] = v18;
  sub_1C003DD84(a2, type metadata accessor for ContactResolverConfig);
  sub_1C004555C(v3, v33 + v32[6], (uint64_t (*)(_QWORD))type metadata accessor for SiriRemembersContactSignalProvider);
  *(_QWORD *)(v33 + v32[7]) = *(_QWORD *)(v37 + v9[13]);
  v24 = v37 + v9[28];
  v25 = *(_BYTE *)v24;
  v26 = *(_BYTE *)(v24 + 1);
  v27 = *(_BYTE *)(v24 + 2);
  v28 = *(_QWORD *)(v24 + 8);
  swift_bridgeObjectRetain();
  sub_1C003DD84(v37, (uint64_t (*)(_QWORD))type metadata accessor for ContactResolverCache);
  v29 = v33 + v32[8];
  *(_BYTE *)v29 = v25;
  *(_BYTE *)(v29 + 1) = v26;
  *(_BYTE *)(v29 + 2) = v27;
  *(_QWORD *)(v29 + 8) = v28;
  OUTLINED_FUNCTION_111();
}

void sub_1C027350C()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_class *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void *v66;
  char *v67;
  id v68;
  id v69;
  __n128 *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  NSObject *v74;
  uint64_t v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  id v79;
  __n128 *v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  int *v87;
  int v88;
  BOOL v89;
  _DWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  unint64_t v96;
  int *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  NSObject *v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  NSObject *v106;
  NSObject *v107;
  __n128 *v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  os_log_type_t v112;
  uint8_t *v113;
  _OWORD *v114;
  NSObject *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  NSObject *v130;
  int *v131;
  uint64_t v132;
  NSObject *v133;
  os_log_type_t v134;
  uint8_t *v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  os_log_type_t v139;
  _BOOL4 v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  char v144;
  uint64_t v145;
  id v146;
  __n128 *v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  os_log_type_t v151;
  _WORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int v160;
  NSObject *v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  int v165;
  char v166;
  void *v167;
  uint64_t v168;
  id v169;
  uint64_t v170;
  __n128 *v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t v174;
  os_log_type_t v175;
  uint64_t v176;
  uint64_t v177;
  void *v178;
  os_log_type_t v179;
  _WORD *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unsigned int *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t *v194;
  os_log_type_t v195;
  NSObject *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  id v202;
  __n128 *v203;
  uint64_t v204;
  unint64_t v205;
  unint64_t v206;
  os_log_type_t v207;
  _WORD *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  void *v215;
  void *v216;
  os_log_type_t v217;
  _BOOL4 v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  void *v223;
  uint64_t v224;
  id v225;
  __n128 *v226;
  uint64_t v227;
  unint64_t v228;
  unint64_t v229;
  uint64_t v230;
  uint64_t v231;
  os_log_type_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  unint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  unint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  NSObject *v248;
  void *v249;
  void *v250;
  os_log_type_t v251;
  _BOOL4 v252;
  NSObject *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t *v256;
  uint64_t v257;
  uint64_t v258;
  void *v259;
  uint64_t v260;
  uint64_t v261;
  id v262;
  id v263;
  __n128 *v264;
  uint64_t v265;
  unint64_t v266;
  unint64_t v267;
  os_log_type_t v268;
  _WORD *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t (*v276)(uint64_t, _QWORD, _QWORD);
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  os_log_type_t v283;
  uint8_t *v284;
  uint64_t v285;
  unint64_t v286;
  uint64_t v287;
  uint64_t v288;
  id v289;
  uint64_t v290;
  __n128 *v291;
  __n128 *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  id v297;
  uint64_t v298;
  unint64_t v299;
  unint64_t v300;
  uint64_t v301;
  uint64_t *v302;
  void *v303;
  uint64_t v304;
  uint64_t v305;
  os_log_type_t v306;
  _BOOL4 v307;
  uint64_t v308;
  _WORD *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t (*v315)(uint64_t, _QWORD, _QWORD);
  uint64_t v316;
  uint64_t v317;
  int v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  _QWORD *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  void *v331;
  uint64_t v332;
  uint64_t v333;
  os_log_type_t v334;
  _BOOL4 v335;
  Class isa;
  _WORD *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  _BYTE *v341;
  uint64_t (*v342)(uint64_t, _QWORD, _QWORD);
  uint64_t v343;
  NSObject *v344;
  int v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  NSObject *KeyPath;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  int v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  int *v363;
  uint64_t v364;
  uint64_t v365;
  os_log_type_t v366;
  _WORD *v367;
  uint64_t v368;
  uint64_t v369;
  void (*v370)(uint64_t, NSObject *, uint64_t);
  NSObject *v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  char v385;
  int *v386;
  __n128 *v387;
  objc_class *v388;
  objc_class *v389;
  __n128 *v390;
  uint64_t v391;
  unint64_t v392;
  unint64_t v393;
  os_log_type_t v394;
  _WORD *v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  __n128 *v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t *v406;
  uint64_t v407;
  uint64_t (*v408)(uint64_t, _QWORD, _QWORD);
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  int *v424;
  uint64_t v425;
  objc_class *v426;
  objc_class *v427;
  uint64_t *v428;
  __n128 *v429;
  uint64_t v430;
  unint64_t v431;
  unint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  void (*v444)(uint64_t);
  _QWORD v445[2];
  _OWORD *v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  __n128 *v452;
  uint64_t v453;
  NSObject v454;
  int *v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t *v465;
  uint64_t v466;
  char *v467;
  char *v468;
  uint64_t Expander;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  void (*v483)(uint64_t, uint64_t);
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  int *v494;
  int *v495;
  uint64_t v496;
  unint64_t v497;
  uint64_t v498;
  uint64_t v499;
  __n128 v500;
  uint64_t v501;
  NSObject *v502;
  uint64_t v503;
  NSObject *v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  __int128 v508;
  __int128 v509;
  __int128 v510;
  _QWORD v511[4];
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  _OWORD v517[5];
  uint64_t v518[11];
  uint64_t v519[3];
  uint64_t v520;

  OUTLINED_FUNCTION_40_0();
  v503 = (uint64_t)v1;
  v496 = v0;
  v482 = v2;
  v493 = v3;
  v455 = (int *)type metadata accessor for ContactResolverConfig(0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_27();
  v449 = v5;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_37();
  v453 = v7;
  OUTLINED_FUNCTION_8_4();
  v491 = sub_1C0303B98();
  v480 = *(_QWORD *)(v491 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_27();
  v481 = v9;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_181();
  v448 = v11;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_181();
  v451 = v13;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_181();
  v454.isa = v15;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_37();
  v456 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2660);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_53();
  v477 = v19;
  OUTLINED_FUNCTION_8_4();
  v476 = type metadata accessor for MeCardContactGenerator();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_27();
  v462 = v21;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_181();
  v461 = v23;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_37();
  v488 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726CA8);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_53();
  v474 = v27;
  OUTLINED_FUNCTION_8_4();
  v473 = type metadata accessor for RelationshipAliasGenerator();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_53();
  v487 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2668);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_53();
  v470 = v31;
  OUTLINED_FUNCTION_8_4();
  Expander = type metadata accessor for EmojiQueryExpander();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_53();
  v486 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2688);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_53();
  v501 = v35;
  v520 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
  v464 = *(_QWORD *)(v520 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_27();
  v505 = v37;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_37();
  v499 = v39;
  OUTLINED_FUNCTION_8_4();
  v492 = sub_1C0303B74();
  v502 = *(NSObject **)(v492 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v40);
  OUTLINED_FUNCTION_27();
  v457 = v41;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_181();
  v479 = v43;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v44);
  OUTLINED_FUNCTION_37();
  v494 = v45;
  OUTLINED_FUNCTION_8_4();
  v46 = type metadata accessor for Signpost();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v47);
  OUTLINED_FUNCTION_27();
  v450 = v48;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v49);
  OUTLINED_FUNCTION_181();
  v452 = v50;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v51);
  OUTLINED_FUNCTION_181();
  v484 = v52;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v53);
  OUTLINED_FUNCTION_181();
  v478 = v54;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v55);
  OUTLINED_FUNCTION_181();
  v475 = v56;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v57);
  OUTLINED_FUNCTION_181();
  v472 = v58;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v59);
  OUTLINED_FUNCTION_181();
  v471 = v60;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v61);
  OUTLINED_FUNCTION_181();
  v485 = v62;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v63);
  v65 = (char *)&v446 - v64;
  if (qword_1ED728440 != -1)
    swift_once();
  v66 = (void *)qword_1ED729668;
  v67 = &v65[*(int *)(v46 + 20)];
  *(_QWORD *)v67 = "ContactResolver.CandidateContactGenerator.generate";
  *((_QWORD *)v67 + 1) = 50;
  v467 = v67;
  v67[16] = 2;
  v68 = v66;
  sub_1C0303B68();
  v495 = (int *)v46;
  v466 = *(int *)(v46 + 24);
  *(_QWORD *)&v65[v466] = v68;
  v69 = v68;
  OUTLINED_FUNCTION_120_4();
  v498 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v70 = (__n128 *)OUTLINED_FUNCTION_16_0();
  v500 = (__n128)xmmword_1C0305B60;
  OUTLINED_FUNCTION_70_10(v70, (__n128)xmmword_1C0305B60);
  v71 = OUTLINED_FUNCTION_23_0();
  v73 = v72;
  v70[3].n128_u64[1] = MEMORY[0x1E0DEA968];
  v497 = sub_1C00A6A70();
  v70[4].n128_u64[0] = v497;
  v70[2].n128_u64[0] = v71;
  v70[2].n128_u64[1] = v73;
  v445[0] = v70;
  OUTLINED_FUNCTION_35_18();
  v468 = v65;
  sub_1C0303B50();
  OUTLINED_FUNCTION_8_1();

  if (qword_1ED727970 != -1)
    swift_once();
  v74 = __swift_project_value_buffer(v491, (uint64_t)&unk_1ED7295C8);
  v75 = v482;
  OUTLINED_FUNCTION_74_1();
  v504 = v74;
  sub_1C0303B80();
  v76 = OUTLINED_FUNCTION_9_1();
  if (OUTLINED_FUNCTION_13_2(v76))
  {
    v77 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v77 = 134217984;
    v518[0] = *(_QWORD *)(v75 + 16);
    sub_1C03044B0();
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v74, (os_log_type_t)v68, "generating matches from %ld queries", v77);
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_55_0();
  v78 = v496;
  v79 = (id)qword_1ED729668;
  OUTLINED_FUNCTION_131_2();
  sub_1C03043E4();
  v80 = (__n128 *)OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_205(v80);
  v81 = OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_164_0(v81, v82);
  LOBYTE(v447) = 2;
  OUTLINED_FUNCTION_35_18();
  OUTLINED_FUNCTION_49_21();
  OUTLINED_FUNCTION_17_0();
  v83 = v503;
  sub_1C0277250(v493, v518);
  if (!v83)
  {
    sub_1C03043D8();
    OUTLINED_FUNCTION_121_4();
    v84 = OUTLINED_FUNCTION_199();
    v483 = (void (*)(uint64_t, uint64_t))v85;
    v85(v84);

    v86 = v518[0];
    OUTLINED_FUNCTION_9_2();
    v87 = (int *)OUTLINED_FUNCTION_18_41();
    v88 = sub_1C03042E8();
    v89 = OUTLINED_FUNCTION_198((os_log_type_t)v88);
    v489 = v86;
    v503 = 0;
    if (v89)
    {
      LODWORD(v502) = v88;
      v90 = (_DWORD *)OUTLINED_FUNCTION_4_0();
      v91 = OUTLINED_FUNCTION_4_0();
      v518[0] = v91;
      *v90 = 136315138;
      swift_getKeyPath();
      v92 = *(_QWORD *)(v86 + 16);
      if (v92)
      {
        v490 = v91;
        v494 = v87;
        *(_QWORD *)&v517[0] = MEMORY[0x1E0DEE9D8];
        OUTLINED_FUNCTION_44_29();
        v93 = *(_QWORD *)&v517[0];
        v94 = (uint64_t *)(v86 + 32);
        do
        {
          v513 = *v94;
          OUTLINED_FUNCTION_31_6();
          swift_getAtKeyPath();
          OUTLINED_FUNCTION_8_1();
          v95 = v508;
          *(_QWORD *)&v517[0] = v93;
          v96 = *(_QWORD *)(v93 + 16);
          if (v96 >= *(_QWORD *)(v93 + 24) >> 1)
          {
            OUTLINED_FUNCTION_45_25();
            v93 = *(_QWORD *)&v517[0];
          }
          *(_QWORD *)(v93 + 16) = v96 + 1;
          *(_QWORD *)(v93 + 8 * v96 + 32) = v95;
          ++v94;
          --v92;
        }
        while (v92);
      }
      OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_51_21();
    }

    OUTLINED_FUNCTION_2();
    v97 = v495;
    v98 = v498;
    v519[0] = v86;
    v99 = OUTLINED_FUNCTION_16_0();
    v490 = v99;
    *(_QWORD *)(v99 + 16) = MEMORY[0x1E0DEE9D8];
    v465 = (uint64_t *)(v99 + 16);
    v100 = type metadata accessor for CandidateContactGenerator(0);
    v101 = v78;
    v102 = *(NSObject **)(v78 + *(int *)(v100 + 32));
    v494 = (int *)v100;
    if (v102)
    {
      v103 = (void *)qword_1ED729668;
      v104 = v485;
      v105 = v485 + v97[5];
      *(_QWORD *)v105 = "CRR.NormalizationQueryExpander";
      *(_QWORD *)(v105 + 8) = 30;
      v459 = v105;
      *(_BYTE *)(v105 + 16) = 2;
      v83 = v103;
      OUTLINED_FUNCTION_22();
      v106 = v83;
      v502 = v102;
      OUTLINED_FUNCTION_183_0();
      sub_1C0303B68();
      v458 = v97[6];
      *(_QWORD *)(v104 + v458) = v106;
      v107 = v106;
      OUTLINED_FUNCTION_120_4();
      v108 = (__n128 *)OUTLINED_FUNCTION_16_0();
      OUTLINED_FUNCTION_70_10(v108, v500);
      v109 = OUTLINED_FUNCTION_23_0();
      v110 = v497;
      v108[3].n128_u64[1] = MEMORY[0x1E0DEA968];
      v108[4].n128_u64[0] = v110;
      v108[2].n128_u64[0] = v109;
      v108[2].n128_u64[1] = v111;
      v448 = (uint64_t)v108;
      LOBYTE(v447) = 2;
      OUTLINED_FUNCTION_35_18();
      OUTLINED_FUNCTION_49_21();
      OUTLINED_FUNCTION_8_1();

      OUTLINED_FUNCTION_18_41();
      v112 = OUTLINED_FUNCTION_9_1();
      if (OUTLINED_FUNCTION_13_2(v112))
      {
        v113 = (uint8_t *)OUTLINED_FUNCTION_4_0();
        *(_WORD *)v113 = 0;
        _os_log_impl(&dword_1C0039000, (os_log_t)"CRR.NormalizationQueryExpander", (os_log_type_t)v106, "running NormalizationQueryExpander", v113, 2u);
        OUTLINED_FUNCTION_5();
      }

      v114 = *(_OWORD **)(v519[0] + 16);
      v115 = v503;
      v116 = v101;
      if (v114)
      {
        v463 = v519[0] + 32;
        v447 = v519[0];
        swift_bridgeObjectRetain();
        v117 = 0;
        v118 = v501;
        v446 = v114;
        while (1)
        {
          v503 = v117;
          v119 = *(_QWORD *)(v463 + 8 * v117);
          v120 = *(_QWORD *)(v119 + 16);
          if (v120)
            break;
          v124 = MEMORY[0x1E0DEE9D8];
LABEL_35:
          v129 = v503;
          if (*(_QWORD *)(v124 + 16))
          {
            v106 = v519[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C01F5B28();
              v106 = v130;
            }
            if ((Class)v129 >= v106[2].isa)
            {
              __break(1u);
              goto LABEL_238;
            }
            sub_1C004F9C0();
            v129 = v503;
            v519[0] = (uint64_t)v106;
          }
          else
          {
            OUTLINED_FUNCTION_17_0();
          }
          v117 = v129 + 1;
          if ((_OWORD *)v117 == v114)
          {
            swift_bridgeObjectRelease();
            goto LABEL_47;
          }
        }
        v121 = v464;
        v106 = ((*(unsigned __int8 *)(v464 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v464 + 80));
        v122 = (char *)v106 + v119;
        v460 = v119;
        OUTLINED_FUNCTION_9_2();
        v123 = *(_QWORD *)(v121 + 72);
        v124 = MEMORY[0x1E0DEE9D8];
        while (1)
        {
          v83 = v115;
          sub_1C023A768(v122, v118);
          if (v115)
            break;
          if (__swift_getEnumTagSinglePayload(v118, 1, v520) == 1)
          {
            sub_1C0044B78(v118, &qword_1EF5C2688);
          }
          else
          {
            v125 = v499;
            sub_1C005A718(v118, v499, (uint64_t *)&unk_1ED726D98);
            sub_1C005A718(v125, v505, (uint64_t *)&unk_1ED726D98);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              OUTLINED_FUNCTION_65_11();
              sub_1C0050278();
              v124 = v127;
            }
            v126 = *(_QWORD *)(v124 + 16);
            if (v126 >= *(_QWORD *)(v124 + 24) >> 1)
            {
              sub_1C0050278();
              v124 = v128;
            }
            *(_QWORD *)(v124 + 16) = v126 + 1;
            sub_1C005A718(v505, (uint64_t)v106 + v124 + v126 * v123, (uint64_t *)&unk_1ED726D98);
            v115 = 0;
            v118 = v501;
          }
          v122 += v123;
          if (!--v120)
          {
            OUTLINED_FUNCTION_2();
            v97 = v495;
            v116 = v496;
            v114 = v446;
            goto LABEL_35;
          }
        }
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_17_0();
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_106_5();
        OUTLINED_FUNCTION_106_5();
        v133 = OUTLINED_FUNCTION_18_41();
        v134 = sub_1C03042F4();
        if (OUTLINED_FUNCTION_16_2(v134))
        {
          v135 = (uint8_t *)OUTLINED_FUNCTION_4_0();
          v518[0] = OUTLINED_FUNCTION_4_0();
          *(_DWORD *)v135 = 136315138;
          *(_QWORD *)&v517[0] = v115;
          OUTLINED_FUNCTION_106_5();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7281B0);
          v136 = sub_1C0303EF8();
          v138 = sub_1C003E6D8(v136, v137, v518);
          OUTLINED_FUNCTION_189_0(v138);
          sub_1C03044B0();
          OUTLINED_FUNCTION_31();
          OUTLINED_FUNCTION_57_15();
          OUTLINED_FUNCTION_57_15();
          OUTLINED_FUNCTION_13_0(&dword_1C0039000, v133, (os_log_type_t)v118, "error when running NormalizationQueryExpander: %s", v135);
          OUTLINED_FUNCTION_23();
          OUTLINED_FUNCTION_5();
        }
        OUTLINED_FUNCTION_57_15();
        OUTLINED_FUNCTION_57_15();
        OUTLINED_FUNCTION_57_15();

        v503 = 0;
        v97 = v495;
        v116 = v496;
        v98 = v498;
        v131 = v494;
      }
      else
      {
LABEL_47:
        v503 = (uint64_t)v115;
        OUTLINED_FUNCTION_18_41();
        v139 = OUTLINED_FUNCTION_98();
        v140 = OUTLINED_FUNCTION_35_41(v139);
        v131 = v494;
        if (v140)
        {
          v141 = OUTLINED_FUNCTION_4_0();
          v505 = OUTLINED_FUNCTION_4_0();
          v518[0] = v505;
          *(_DWORD *)v141 = 136315138;
          OUTLINED_FUNCTION_55_1();
          v142 = v519[0];
          swift_getKeyPath();
          if (*(_QWORD *)(v142 + 16))
          {
            v499 = v141;
            v501 = (uint64_t)v106;
            *(_QWORD *)&v517[0] = MEMORY[0x1E0DEE9D8];
            OUTLINED_FUNCTION_32();
            OUTLINED_FUNCTION_22_48();
            OUTLINED_FUNCTION_162_0();
            do
            {
              v513 = *(_QWORD *)(v142 + 8 * v141 + 32);
              OUTLINED_FUNCTION_21();
              OUTLINED_FUNCTION_155_2();
              OUTLINED_FUNCTION_17_0();
              OUTLINED_FUNCTION_26_42();
              if (v143)
                OUTLINED_FUNCTION_12_62();
              OUTLINED_FUNCTION_14_66();
            }
            while (!v144);
            OUTLINED_FUNCTION_29_0();
            OUTLINED_FUNCTION_28_9();
          }
          else
          {
            OUTLINED_FUNCTION_28_9();
          }
          OUTLINED_FUNCTION_51_21();
        }

        v98 = v498;
      }
      v132 = v470;
      sub_1C03043D8();
      OUTLINED_FUNCTION_92_7();
      OUTLINED_FUNCTION_110_4();
      v145 = OUTLINED_FUNCTION_207();
      OUTLINED_FUNCTION_82_4(v145, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    }
    else
    {
      v131 = (int *)v100;
      OUTLINED_FUNCTION_22();
      v132 = v470;
      v116 = v101;
    }
    sub_1C0045DFC(v116 + v131[15], v132, &qword_1EF5C2668);
    if (__swift_getEnumTagSinglePayload(v132, 1, Expander) == 1)
    {
      sub_1C0044B78(v132, &qword_1EF5C2668);
    }
    else
    {
      sub_1C004555C(v132, v486, (uint64_t (*)(_QWORD))type metadata accessor for EmojiQueryExpander);
      v146 = OUTLINED_FUNCTION_137_2((void *)qword_1ED729668);
      OUTLINED_FUNCTION_131_2();
      OUTLINED_FUNCTION_144_2();
      OUTLINED_FUNCTION_120_4();
      v147 = (__n128 *)OUTLINED_FUNCTION_16_0();
      v147[1] = v500;
      v148 = OUTLINED_FUNCTION_23_0();
      v149 = v497;
      v147[3].n128_u64[1] = MEMORY[0x1E0DEA968];
      v147[4].n128_u64[0] = v149;
      v147[2].n128_u64[0] = v148;
      v147[2].n128_u64[1] = v150;
      v448 = (uint64_t)v147;
      LOBYTE(v447) = (_BYTE)v131;
      OUTLINED_FUNCTION_35_18();
      OUTLINED_FUNCTION_163_0();
      OUTLINED_FUNCTION_49_21();
      OUTLINED_FUNCTION_55_0();

      OUTLINED_FUNCTION_18_41();
      v151 = OUTLINED_FUNCTION_9_1();
      if (OUTLINED_FUNCTION_13_2(v151))
      {
        v152 = (_WORD *)OUTLINED_FUNCTION_4_0();
        OUTLINED_FUNCTION_10_4(v152);
        OUTLINED_FUNCTION_45_1(&dword_1C0039000, v153, v154, "running EmojiQueryExpander");
        OUTLINED_FUNCTION_5();
      }

      OUTLINED_FUNCTION_25_27();
      OUTLINED_FUNCTION_161_1();
      MEMORY[0x1E0C80A78](v155);
      OUTLINED_FUNCTION_10();
      *(_QWORD *)(v156 - 16) = v486;
      OUTLINED_FUNCTION_47();
      OUTLINED_FUNCTION_86_10((uint64_t)sub_1C027E620, v157, v158, (uint64_t)&v506);
      v503 = (uint64_t)v83;
      OUTLINED_FUNCTION_14();
      OUTLINED_FUNCTION_59_17();
      v159 = OUTLINED_FUNCTION_18_41();
      v160 = sub_1C03042E8();
      if (OUTLINED_FUNCTION_198((os_log_type_t)v160))
      {
        LODWORD(v501) = v160;
        v161 = OUTLINED_FUNCTION_4_0();
        v499 = OUTLINED_FUNCTION_4_0();
        v518[0] = v499;
        v502 = v161;
        LODWORD(v161->isa) = 136315138;
        v162 = v519[0];
        swift_getKeyPath();
        OUTLINED_FUNCTION_179_0();
        if (v98)
        {
          v485 = v159;
          *(_QWORD *)&v517[0] = MEMORY[0x1E0DEE9D8];
          OUTLINED_FUNCTION_2_1();
          OUTLINED_FUNCTION_22_48();
          OUTLINED_FUNCTION_162_0();
          do
          {
            v513 = *(_QWORD *)(v162 + 8 * v159 + 32);
            OUTLINED_FUNCTION_21();
            OUTLINED_FUNCTION_140_3();
            OUTLINED_FUNCTION_17_0();
            OUTLINED_FUNCTION_26_42();
            if (v143)
              OUTLINED_FUNCTION_12_62();
            OUTLINED_FUNCTION_14_66();
          }
          while (!v144);
          OUTLINED_FUNCTION_31();
          OUTLINED_FUNCTION_22_2();
        }
        else
        {
          OUTLINED_FUNCTION_22_2();
        }
        OUTLINED_FUNCTION_51_21();
      }

      v131 = v494;
      v97 = v495;
      sub_1C03043D8();
      v163 = OUTLINED_FUNCTION_50_4();
      OUTLINED_FUNCTION_94(v163, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
      sub_1C003DD84(v486, (uint64_t (*)(_QWORD))type metadata accessor for EmojiQueryExpander);
    }
    v164 = (void *)sub_1C0060BA8(v493);
    v165 = (int)v164;
    sub_1C0061538(*(unsigned __int8 *)(v116 + v131[20]), v164);
    if ((v166 & 1) != 0)
    {
      LODWORD(v502) = v165;
      v167 = (void *)qword_1ED729668;
      v168 = v472 + v97[5];
      *(_QWORD *)v168 = "ContactResolver.PLUS.QueryExpander";
      *(_QWORD *)(v168 + 8) = 34;
      *(_BYTE *)(v168 + 16) = 2;
      v169 = v167;
      OUTLINED_FUNCTION_131_2();
      OUTLINED_FUNCTION_143_3();
      v170 = OUTLINED_FUNCTION_203();
      v171 = (__n128 *)OUTLINED_FUNCTION_16_0();
      v171[1] = v500;
      v172 = OUTLINED_FUNCTION_23_0();
      v173 = v497;
      v171[3].n128_u64[1] = MEMORY[0x1E0DEA968];
      v171[4].n128_u64[0] = v173;
      v171[2].n128_u64[0] = v172;
      v171[2].n128_u64[1] = v174;
      v448 = (uint64_t)v171;
      LOBYTE(v447) = 2;
      OUTLINED_FUNCTION_35_18();
      OUTLINED_FUNCTION_49_21();
      OUTLINED_FUNCTION_28();

      OUTLINED_FUNCTION_18_41();
      v175 = OUTLINED_FUNCTION_98();
      if (OUTLINED_FUNCTION_35_41(v175))
      {
        LODWORD(v501) = "ContactResolver.PLUS.QueryExpander";
        v176 = OUTLINED_FUNCTION_4_0();
        v499 = OUTLINED_FUNCTION_4_0();
        v518[0] = v499;
        *(_DWORD *)v176 = 136315138;
        OUTLINED_FUNCTION_55_1();
        v177 = v519[0];
        swift_getKeyPath();
        if (*(_QWORD *)(v177 + 16))
        {
          v485 = v176;
          v486 = 2;
          *(_QWORD *)&v517[0] = MEMORY[0x1E0DEE9D8];
          OUTLINED_FUNCTION_32();
          OUTLINED_FUNCTION_22_48();
          OUTLINED_FUNCTION_162_0();
          do
          {
            v513 = *(_QWORD *)(v177 + 8 * v176 + 32);
            OUTLINED_FUNCTION_21();
            OUTLINED_FUNCTION_155_2();
            OUTLINED_FUNCTION_17_0();
            OUTLINED_FUNCTION_26_42();
            if (v143)
              OUTLINED_FUNCTION_12_62();
            OUTLINED_FUNCTION_14_66();
          }
          while (!v144);
          OUTLINED_FUNCTION_29_0();
          OUTLINED_FUNCTION_28_9();
        }
        else
        {
          OUTLINED_FUNCTION_28_9();
        }
        OUTLINED_FUNCTION_51_21();
      }

      memset(v518, 0, 48);
      v131 = v494;
      if (v502 == 1)
      {
        OUTLINED_FUNCTION_152_1();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C26A0);
        OUTLINED_FUNCTION_220();
        v184 = OUTLINED_FUNCTION_55_18();
        v185 = OUTLINED_FUNCTION_221(v184);
        v186 = (unsigned int *)MEMORY[0x1E0DA3B18];
      }
      else
      {
        OUTLINED_FUNCTION_152_1();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C26A0);
        OUTLINED_FUNCTION_220();
        v187 = OUTLINED_FUNCTION_55_18();
        v185 = OUTLINED_FUNCTION_221(v187);
        v186 = (unsigned int *)MEMORY[0x1E0DA3B20];
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v170 + 104))(v185, *v186, 2);
      sub_1C011F538();
      v189 = v188;
      v190 = &qword_1EF5C26A8;
      sub_1C0044B78((uint64_t)v518, &qword_1EF5C26A8);
      v517[0] = v508;
      v517[1] = v509;
      *(_QWORD *)&v517[2] = v510;
      *((_QWORD *)&v517[2] + 1) = v189;
      sub_1C005A718((uint64_t)v517, (uint64_t)v518, &qword_1EF5C26A8);
      sub_1C0045DFC((uint64_t)v518, (uint64_t)&v508, &qword_1EF5C26A8);
      if (*((_QWORD *)&v510 + 1))
      {
        v517[0] = v508;
        v517[1] = v509;
        v517[2] = v510;
        v191 = OUTLINED_FUNCTION_25_27();
        LODWORD(v189) = v519[0];
        MEMORY[0x1E0C80A78](v191);
        v83 = v445;
        v446 = v517;
        v447 = v116;
        v448 = v493;
        OUTLINED_FUNCTION_47();
        OUTLINED_FUNCTION_86_10((uint64_t)sub_1C027E5CC, v192, v193, (uint64_t)&v507);
        v190 = v194;
        v503 = (uint64_t)v445;
        OUTLINED_FUNCTION_14();
        sub_1C027E5EC((uint64_t)v517);
        OUTLINED_FUNCTION_59_17();
      }
      else
      {
        sub_1C0044B78((uint64_t)&v508, &qword_1EF5C26A8);
      }
      v97 = v495;
      OUTLINED_FUNCTION_18_41();
      v195 = OUTLINED_FUNCTION_98();
      if (OUTLINED_FUNCTION_35_41(v195))
      {
        LODWORD(v501) = v189;
        v196 = OUTLINED_FUNCTION_4_0();
        v499 = OUTLINED_FUNCTION_4_0();
        *(_QWORD *)&v517[0] = v499;
        v502 = v196;
        LODWORD(v196->isa) = 136315138;
        OUTLINED_FUNCTION_55_1();
        v197 = v519[0];
        swift_getKeyPath();
        OUTLINED_FUNCTION_179_0();
        if (v98)
        {
          v486 = (uint64_t)v190;
          *(_QWORD *)&v508 = MEMORY[0x1E0DEE9D8];
          OUTLINED_FUNCTION_2_1();
          OUTLINED_FUNCTION_44_29();
          v198 = v508;
          do
          {
            v511[1] = *(_QWORD *)(v197 + 32);
            OUTLINED_FUNCTION_21();
            OUTLINED_FUNCTION_140_3();
            OUTLINED_FUNCTION_17_0();
            *(_QWORD *)&v508 = v198;
            if (*(_QWORD *)(v198 + 16) >= *(_QWORD *)(v198 + 24) >> 1)
            {
              OUTLINED_FUNCTION_45_25();
              v198 = v508;
            }
            OUTLINED_FUNCTION_14_66();
          }
          while (!v144);
          OUTLINED_FUNCTION_31();
          OUTLINED_FUNCTION_22_2();
        }
        else
        {
          OUTLINED_FUNCTION_22_2();
        }
        OUTLINED_FUNCTION_51_21();
      }

      v183 = v474;
      sub_1C03043D8();
      OUTLINED_FUNCTION_92_7();
      OUTLINED_FUNCTION_110_4();
      sub_1C0044B78((uint64_t)v518, &qword_1EF5C26A8);
      OUTLINED_FUNCTION_82_4(v199, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    }
    else
    {
      v178 = (void *)OUTLINED_FUNCTION_18_41();
      v179 = sub_1C03042DC();
      if (OUTLINED_FUNCTION_13_2(v179))
      {
        v180 = (_WORD *)OUTLINED_FUNCTION_4_0();
        OUTLINED_FUNCTION_10_4(v180);
        OUTLINED_FUNCTION_45_1(&dword_1C0039000, v181, v182, "PLUS queryExpander did not run");
        OUTLINED_FUNCTION_5();
      }

      v183 = v474;
    }
    sub_1C0045DFC(v116 + v131[6], v183, &qword_1ED726CA8);
    if (__swift_getEnumTagSinglePayload(v183, 1, v473) == 1)
    {
      sub_1C0044B78(v183, &qword_1ED726CA8);
      v200 = v476;
      v201 = v477;
    }
    else
    {
      sub_1C004555C(v183, v487, (uint64_t (*)(_QWORD))type metadata accessor for RelationshipAliasGenerator);
      v202 = OUTLINED_FUNCTION_137_2((void *)qword_1ED729668);
      OUTLINED_FUNCTION_131_2();
      OUTLINED_FUNCTION_144_2();
      OUTLINED_FUNCTION_120_4();
      v203 = (__n128 *)OUTLINED_FUNCTION_16_0();
      OUTLINED_FUNCTION_70_10(v203, v500);
      v204 = OUTLINED_FUNCTION_23_0();
      v205 = v497;
      v203[3].n128_u64[1] = MEMORY[0x1E0DEA968];
      v203[4].n128_u64[0] = v205;
      v203[2].n128_u64[0] = v204;
      v203[2].n128_u64[1] = v206;
      v448 = (uint64_t)v203;
      LOBYTE(v447) = (_BYTE)v131;
      OUTLINED_FUNCTION_35_18();
      OUTLINED_FUNCTION_163_0();
      OUTLINED_FUNCTION_49_21();
      OUTLINED_FUNCTION_55_0();

      OUTLINED_FUNCTION_18_41();
      v207 = OUTLINED_FUNCTION_9_1();
      if (OUTLINED_FUNCTION_13_2(v207))
      {
        v208 = (_WORD *)OUTLINED_FUNCTION_4_0();
        OUTLINED_FUNCTION_10_4(v208);
        OUTLINED_FUNCTION_45_1(&dword_1C0039000, v209, v210, "running RelationshipAliasExpander");
        OUTLINED_FUNCTION_5();
      }

      OUTLINED_FUNCTION_25_27();
      OUTLINED_FUNCTION_161_1();
      MEMORY[0x1E0C80A78](v211);
      OUTLINED_FUNCTION_10();
      *(_QWORD *)(v212 - 16) = v487;
      OUTLINED_FUNCTION_47();
      OUTLINED_FUNCTION_86_10((uint64_t)sub_1C027E578, v213, v214, (uint64_t)v511);
      v216 = v215;
      OUTLINED_FUNCTION_14();
      OUTLINED_FUNCTION_59_17();
      OUTLINED_FUNCTION_18_41();
      v217 = OUTLINED_FUNCTION_98();
      v218 = OUTLINED_FUNCTION_35_41(v217);
      v503 = (uint64_t)v83;
      if (v218)
      {
        LODWORD(v502) = "ContactResolver.RelationshipAliasExpander";
        v219 = OUTLINED_FUNCTION_4_0();
        v501 = OUTLINED_FUNCTION_4_0();
        v518[0] = v501;
        *(_DWORD *)v219 = 136315138;
        v220 = v519[0];
        swift_getKeyPath();
        OUTLINED_FUNCTION_179_0();
        if (v98)
        {
          v486 = v219;
          v499 = (uint64_t)v216;
          *(_QWORD *)&v517[0] = MEMORY[0x1E0DEE9D8];
          OUTLINED_FUNCTION_2_1();
          OUTLINED_FUNCTION_22_48();
          OUTLINED_FUNCTION_162_0();
          do
          {
            v513 = *(_QWORD *)(v220 + 8 * v219 + 32);
            OUTLINED_FUNCTION_21();
            OUTLINED_FUNCTION_140_3();
            OUTLINED_FUNCTION_17_0();
            OUTLINED_FUNCTION_26_42();
            if (v143)
              OUTLINED_FUNCTION_12_62();
            OUTLINED_FUNCTION_14_66();
          }
          while (!v144);
          OUTLINED_FUNCTION_31();
          OUTLINED_FUNCTION_22_2();
        }
        else
        {
          OUTLINED_FUNCTION_22_2();
        }
        OUTLINED_FUNCTION_51_21();
      }

      v131 = v494;
      v97 = v495;
      v200 = v476;
      v201 = v477;
      sub_1C03043D8();
      v221 = sub_1C0303B5C();
      OUTLINED_FUNCTION_187_0(v221, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
      sub_1C003DD84(v487, (uint64_t (*)(_QWORD))type metadata accessor for RelationshipAliasGenerator);
    }
    sub_1C0045DFC(v116 + v131[5], v201, &qword_1EF5C2660);
    if (__swift_getEnumTagSinglePayload(v201, 1, v200) == 1)
    {
      sub_1C0044B78(v201, &qword_1EF5C2660);
    }
    else
    {
      v222 = v488;
      sub_1C004555C(v201, v488, (uint64_t (*)(_QWORD))type metadata accessor for MeCardContactGenerator);
      v223 = (void *)qword_1ED729668;
      v224 = v478 + v97[5];
      *(_QWORD *)v224 = "ContactResolver.MeCardExpander";
      *(_QWORD *)(v224 + 8) = 30;
      *(_BYTE *)(v224 + 16) = 2;
      v225 = v223;
      OUTLINED_FUNCTION_131_2();
      OUTLINED_FUNCTION_143_3();
      OUTLINED_FUNCTION_203();
      v226 = (__n128 *)OUTLINED_FUNCTION_16_0();
      OUTLINED_FUNCTION_205(v226);
      v227 = OUTLINED_FUNCTION_23_0();
      v228 = v497;
      v226[3].n128_u64[1] = MEMORY[0x1E0DEA968];
      v226[4].n128_u64[0] = v228;
      v226[2].n128_u64[0] = v227;
      v226[2].n128_u64[1] = v229;
      v448 = (uint64_t)v226;
      LOBYTE(v447) = 2;
      OUTLINED_FUNCTION_35_18();
      OUTLINED_FUNCTION_49_21();
      OUTLINED_FUNCTION_28();

      v230 = v461;
      sub_1C00638E8(v222, v461, (uint64_t (*)(_QWORD))type metadata accessor for MeCardContactGenerator);
      v231 = v462;
      sub_1C00638E8(v222, v462, (uint64_t (*)(_QWORD))type metadata accessor for MeCardContactGenerator);
      OUTLINED_FUNCTION_18_41();
      v232 = OUTLINED_FUNCTION_9_1();
      if (OUTLINED_FUNCTION_13_2(v232))
      {
        v233 = OUTLINED_FUNCTION_4_0();
        LODWORD(v502) = "ContactResolver.MeCardExpander";
        v234 = v233;
        v501 = OUTLINED_FUNCTION_4_0();
        v518[0] = v501;
        *(_DWORD *)v234 = 136315394;
        v235 = OUTLINED_FUNCTION_31_6();
        v236 = MEMORY[0x1C3B97040](v235, &type metadata for MeCardContactGenerator.Relation);
        v238 = v237;
        OUTLINED_FUNCTION_8_1();
        *(_QWORD *)&v517[0] = sub_1C003E6D8(v236, v238, v518);
        sub_1C03044B0();
        OUTLINED_FUNCTION_29_0();
        sub_1C003DD84(v230, (uint64_t (*)(_QWORD))type metadata accessor for MeCardContactGenerator);
        *(_WORD *)(v234 + 12) = 2080;
        v239 = OUTLINED_FUNCTION_2_1();
        v240 = MEMORY[0x1C3B97040](v239, &type metadata for MeCardContactGenerator.Relation);
        v241 = v231;
        v243 = v242;
        OUTLINED_FUNCTION_31();
        *(_QWORD *)&v517[0] = sub_1C003E6D8(v240, v243, v518);
        sub_1C03044B0();
        OUTLINED_FUNCTION_28();
        sub_1C003DD84(v241, (uint64_t (*)(_QWORD))type metadata accessor for MeCardContactGenerator);
        _os_log_impl(&dword_1C0039000, (os_log_t)type metadata accessor for MeCardContactGenerator, (os_log_type_t)v502, "running MeCardExpander. semanticRelations=%s customRelations=%s", (uint8_t *)v234, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_5();
      }
      sub_1C003DD84(v230, (uint64_t (*)(_QWORD))type metadata accessor for MeCardContactGenerator);
      sub_1C003DD84(v231, (uint64_t (*)(_QWORD))type metadata accessor for MeCardContactGenerator);

      v244 = v503;
      OUTLINED_FUNCTION_25_27();
      OUTLINED_FUNCTION_161_1();
      MEMORY[0x1E0C80A78](v245);
      OUTLINED_FUNCTION_10();
      *(_QWORD *)(v246 - 16) = v488;
      OUTLINED_FUNCTION_47();
      v247 = (uint64_t)v83;
      v248 = v244;
      sub_1C01F07A8((uint64_t)sub_1C027E53C, v247, (uint64_t)type metadata accessor for MeCardContactGenerator, (uint64_t)&v512);
      v250 = v249;
      v503 = (uint64_t)v248;
      OUTLINED_FUNCTION_14();
      OUTLINED_FUNCTION_59_17();
      OUTLINED_FUNCTION_18_41();
      v251 = OUTLINED_FUNCTION_98();
      v252 = OUTLINED_FUNCTION_35_41(v251);
      v131 = v494;
      if (v252)
      {
        LODWORD(v501) = type metadata accessor for MeCardContactGenerator;
        v253 = OUTLINED_FUNCTION_4_0();
        v499 = OUTLINED_FUNCTION_4_0();
        v518[0] = v499;
        v502 = v253;
        LODWORD(v253->isa) = 136315138;
        v254 = v519[0];
        swift_getKeyPath();
        OUTLINED_FUNCTION_179_0();
        v487 = (uint64_t)v250;
        *(_QWORD *)&v517[0] = MEMORY[0x1E0DEE9D8];
        OUTLINED_FUNCTION_2_1();
        OUTLINED_FUNCTION_22_48();
        OUTLINED_FUNCTION_162_0();
        while (1)
        {
          v516 = *(_QWORD *)(v254 + 8 * (_QWORD)&loc_1C0305000 + 32);
          OUTLINED_FUNCTION_21();
          OUTLINED_FUNCTION_140_3();
          OUTLINED_FUNCTION_17_0();
          OUTLINED_FUNCTION_26_42();
          if (v143)
            OUTLINED_FUNCTION_12_62();
          OUTLINED_FUNCTION_14_66();
          if (v144)
          {
            OUTLINED_FUNCTION_31();
            OUTLINED_FUNCTION_22_2();
            OUTLINED_FUNCTION_51_21();
          }
        }
      }

      v97 = v495;
      v116 = v496;
      sub_1C03043D8();
      OUTLINED_FUNCTION_92_7();
      v255 = OUTLINED_FUNCTION_50_4();
      OUTLINED_FUNCTION_94(v255, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
      sub_1C003DD84(v488, (uint64_t (*)(_QWORD))type metadata accessor for MeCardContactGenerator);
    }
    v256 = (uint64_t *)(v116 + v131[7]);
    v257 = *v256;
    if (*v256)
    {
      v258 = v256[1];
      v259 = (void *)qword_1ED729668;
      v260 = v484;
      v261 = v484 + v97[5];
      *(_QWORD *)v261 = "ContactResolver.TransliterationQueryExpander";
      *(_QWORD *)(v261 + 8) = 44;
      v502 = v261;
      *(_BYTE *)(v261 + 16) = 2;
      v262 = v259;
      sub_1C008B5CC(v257);
      sub_1C0303B68();
      v501 = v97[6];
      *(_QWORD *)(v260 + v501) = v262;
      v263 = v262;
      OUTLINED_FUNCTION_120_4();
      v264 = (__n128 *)OUTLINED_FUNCTION_16_0();
      OUTLINED_FUNCTION_70_10(v264, v500);
      v265 = OUTLINED_FUNCTION_23_0();
      v266 = v497;
      v264[3].n128_u64[1] = MEMORY[0x1E0DEA968];
      v264[4].n128_u64[0] = v266;
      v264[2].n128_u64[0] = v265;
      v264[2].n128_u64[1] = v267;
      v448 = (uint64_t)v264;
      LOBYTE(v447) = 2;
      OUTLINED_FUNCTION_35_18();
      OUTLINED_FUNCTION_163_0();
      sub_1C0303B50();
      OUTLINED_FUNCTION_55_0();

      OUTLINED_FUNCTION_18_41();
      v268 = OUTLINED_FUNCTION_9_1();
      if (OUTLINED_FUNCTION_13_2(v268))
      {
        v269 = (_WORD *)OUTLINED_FUNCTION_4_0();
        OUTLINED_FUNCTION_10_4(v269);
        OUTLINED_FUNCTION_45_1(&dword_1C0039000, v270, v271, "running TransliterationQueryExpander");
        OUTLINED_FUNCTION_5();
      }

      OUTLINED_FUNCTION_25_27();
      OUTLINED_FUNCTION_12_3();
      OUTLINED_FUNCTION_44_7();
      v272 = OUTLINED_FUNCTION_47();
      v505 = v257;
      v273 = v503;
      v274 = sub_1C0271164(v272, v257, v258);
      v275 = v481;
      if (v273)
      {
        OUTLINED_FUNCTION_14();
        OUTLINED_FUNCTION_169_1();
        OUTLINED_FUNCTION_93_6(v275, v276);
        v277 = OUTLINED_FUNCTION_16_0();
        *(_QWORD *)(v277 + 16) = v273;
        OUTLINED_FUNCTION_106_5();
        OUTLINED_FUNCTION_106_5();
        v503 = sub_1C0303B80();
        LODWORD(v488) = sub_1C03042F4();
        v278 = OUTLINED_FUNCTION_16_0();
        *(_BYTE *)(v278 + 16) = 32;
        v279 = OUTLINED_FUNCTION_16_0();
        *(_BYTE *)(v279 + 16) = 8;
        v280 = OUTLINED_FUNCTION_16_0();
        *(_QWORD *)(v280 + 16) = sub_1C027E52C;
        *(_QWORD *)(v280 + 24) = v277;
        v281 = OUTLINED_FUNCTION_16_0();
        *(_QWORD *)(v281 + 16) = sub_1C027E768;
        *(_QWORD *)(v281 + 24) = v280;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727350);
        v282 = OUTLINED_FUNCTION_16_0();
        *(_OWORD *)(v282 + 16) = xmmword_1C03067E0;
        *(_QWORD *)(v282 + 32) = sub_1C027E770;
        *(_QWORD *)(v282 + 40) = v278;
        *(_QWORD *)(v282 + 48) = sub_1C027E770;
        *(_QWORD *)(v282 + 56) = v279;
        *(_QWORD *)(v282 + 64) = sub_1C027E76C;
        *(_QWORD *)(v282 + 72) = v281;
        swift_setDeallocating();
        v499 = v277;
        OUTLINED_FUNCTION_9_3();
        OUTLINED_FUNCTION_183_0();
        OUTLINED_FUNCTION_111_2();
        OUTLINED_FUNCTION_102_5();
        OUTLINED_FUNCTION_63_6();
        sub_1C00F7184();
        v283 = v488;
        if (os_log_type_enabled((os_log_t)v503, (os_log_type_t)v488))
        {
          v284 = (uint8_t *)OUTLINED_FUNCTION_4_0();
          v488 = OUTLINED_FUNCTION_4_0();
          v518[0] = v488;
          *(_WORD *)v284 = 258;
          v284[2] = 32;
          OUTLINED_FUNCTION_4_2();
          v284[3] = 8;
          OUTLINED_FUNCTION_56();
          *(_QWORD *)&v517[0] = v273;
          OUTLINED_FUNCTION_106_5();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7281B0);
          v285 = sub_1C0303EF8();
          *(_QWORD *)&v517[0] = sub_1C003E6D8(v285, v286, v518);
          sub_1C03044B0();
          OUTLINED_FUNCTION_107_4();
          OUTLINED_FUNCTION_22_2();
          OUTLINED_FUNCTION_28_9();
          OUTLINED_FUNCTION_55_0();
          OUTLINED_FUNCTION_57_15();
          OUTLINED_FUNCTION_13_0(&dword_1C0039000, v503, v283, "error when running TransliterationQueryExpander: %s", v284);
          OUTLINED_FUNCTION_23();
          OUTLINED_FUNCTION_5();
        }
        OUTLINED_FUNCTION_57_15();
        OUTLINED_FUNCTION_107_4();
        OUTLINED_FUNCTION_22_2();
        OUTLINED_FUNCTION_28_9();
        OUTLINED_FUNCTION_56();
        OUTLINED_FUNCTION_4_2();
        OUTLINED_FUNCTION_57_15();

        OUTLINED_FUNCTION_78_11(v481, *(uint64_t (**)(uint64_t, _QWORD))(v480 + 8));
        v503 = 0;
        v116 = v496;
      }
      else
      {
        v287 = v274;
        v503 = 0;
        OUTLINED_FUNCTION_14();
        v519[0] = v287;
        swift_bridgeObjectRelease();
        v116 = v496;
      }
      sub_1C03043D8();
      OUTLINED_FUNCTION_92_7();
      OUTLINED_FUNCTION_50_4();
      swift_release();
      v288 = swift_release();
      OUTLINED_FUNCTION_94(v288, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    }
    v289 = (id)qword_1ED729668;
    v290 = v479;
    sub_1C0303B68();
    sub_1C03043E4();
    v291 = (__n128 *)OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_205(v291);
    v292 = (__n128 *)"ContactResolver.FirstContactQuery";
    v293 = OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_164_0(v293, v294);
    LOBYTE(v451) = 2;
    OUTLINED_FUNCTION_35_18();
    OUTLINED_FUNCTION_211();
    OUTLINED_FUNCTION_17_0();
    v295 = v503;
    sub_1C0278CB8(v490, v116, v493, v519);
    if (v295)
    {
      sub_1C03043D8();
      sub_1C0303B5C();
      v483(v290, v492);
      OUTLINED_FUNCTION_1_0();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C03043D8();
      v296 = OUTLINED_FUNCTION_50_4();
      OUTLINED_FUNCTION_94(v296, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
LABEL_144:
      OUTLINED_FUNCTION_28_0();
      return;
    }
    sub_1C03043D8();
    OUTLINED_FUNCTION_110_4();
    OUTLINED_FUNCTION_87_11();

    sub_1C0045DFC(v116 + v494[11], (uint64_t)v517, &qword_1EF5C2690);
    if (*((_QWORD *)&v517[1] + 1))
    {
      memcpy(v518, v517, 0x50uLL);
      v297 = (id)qword_1ED729668;
      sub_1C0303B68();
      sub_1C03043E4();
      v292 = (__n128 *)OUTLINED_FUNCTION_16_0();
      OUTLINED_FUNCTION_205(v292);
      v298 = OUTLINED_FUNCTION_23_0();
      v299 = v497;
      v292[3].n128_u64[1] = MEMORY[0x1E0DEA968];
      v292[4].n128_u64[0] = v299;
      v292[2].n128_u64[0] = v298;
      v292[2].n128_u64[1] = v300;
      v452 = v292;
      LOBYTE(v451) = 2;
      OUTLINED_FUNCTION_35_18();
      sub_1C0303B50();
      OUTLINED_FUNCTION_55_0();
      v301 = v490;
      sub_1C027918C((uint64_t)v519, v490, (uint64_t)v518);
      sub_1C03043D8();
      OUTLINED_FUNCTION_110_4();
      OUTLINED_FUNCTION_87_11();
      sub_1C026F114((uint64_t)v518);

    }
    else
    {
      sub_1C0044B78((uint64_t)v517, &qword_1EF5C2690);
      v301 = v490;
    }
    v302 = v465;
    OUTLINED_FUNCTION_25_27();
    v303 = (void *)*v302;
    v304 = *(_QWORD *)(*v302 + 16);
    if (v304)
    {
      OUTLINED_FUNCTION_9_2();
      v305 = 0;
      while (1)
      {
        OUTLINED_FUNCTION_89_8();
        *(_QWORD *)&v517[0] = v292;
        OUTLINED_FUNCTION_74_1();
        OUTLINED_FUNCTION_88_7();
        OUTLINED_FUNCTION_55_0();
        OUTLINED_FUNCTION_4_2();
        if (v516 != 1)
          break;
        if (v304 == ++v305)
        {
          OUTLINED_FUNCTION_88();
          v301 = v490;
          v302 = v465;
          goto LABEL_153;
        }
      }
      OUTLINED_FUNCTION_88();
    }
    else
    {
LABEL_153:
      OUTLINED_FUNCTION_18_41();
      v306 = OUTLINED_FUNCTION_9_1();
      v307 = OUTLINED_FUNCTION_37_1(v306);
      v308 = v456;
      if (v307)
      {
        v309 = (_WORD *)OUTLINED_FUNCTION_4_0();
        OUTLINED_FUNCTION_15_21(v309);
        OUTLINED_FUNCTION_0_4(&dword_1C0039000, v310, v311, "running SearchByPartialName");
        OUTLINED_FUNCTION_5();
      }

      v312 = *v302;
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_130_2();
      sub_1C0279684();
      v314 = v313;
      OUTLINED_FUNCTION_17_0();
      *(_QWORD *)(v301 + 16) = v314;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_169_1();
      OUTLINED_FUNCTION_93_6(v308, v315);
      v316 = OUTLINED_FUNCTION_16_0();
      *(_QWORD *)(v316 + 16) = sub_1C027E46C;
      *(_QWORD *)(v316 + 24) = v301;
      swift_retain_n();
      v317 = sub_1C0303B80();
      v318 = sub_1C03042E8();
      v319 = OUTLINED_FUNCTION_16_0();
      *(_BYTE *)(v319 + 16) = 32;
      v320 = OUTLINED_FUNCTION_16_0();
      OUTLINED_FUNCTION_103_3(v320);
      v321 = OUTLINED_FUNCTION_16_0();
      *(_QWORD *)(v321 + 16) = sub_1C027E764;
      *(_QWORD *)(v321 + 24) = v316;
      v292 = (__n128 *)OUTLINED_FUNCTION_16_0();
      v292[1].n128_u64[0] = (unint64_t)sub_1C027E768;
      v292[1].n128_u64[1] = v321;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727350);
      v322 = OUTLINED_FUNCTION_16_0();
      *(_OWORD *)(v322 + 16) = xmmword_1C03067E0;
      *(_QWORD *)(v322 + 32) = sub_1C027E770;
      *(_QWORD *)(v322 + 40) = v319;
      *(_QWORD *)(v322 + 48) = sub_1C027E770;
      *(_QWORD *)(v322 + 56) = v312;
      *(_QWORD *)(v322 + 64) = sub_1C027E76C;
      *(_QWORD *)(v322 + 72) = v292;
      swift_setDeallocating();
      OUTLINED_FUNCTION_63_6();
      OUTLINED_FUNCTION_9_3();
      OUTLINED_FUNCTION_111_2();
      OUTLINED_FUNCTION_39();
      OUTLINED_FUNCTION_102_5();
      sub_1C00F7184();
      LODWORD(v505) = v318;
      if (os_log_type_enabled((os_log_t)v317, (os_log_type_t)v318))
      {
        v499 = (uint64_t)v292;
        v501 = v321;
        v502 = v316;
        v503 = v317;
        v323 = OUTLINED_FUNCTION_4_0();
        v324 = OUTLINED_FUNCTION_4_0();
        OUTLINED_FUNCTION_180_0(v324);
        *(_BYTE *)(v323 + 2) = 32;
        OUTLINED_FUNCTION_4_2();
        *(_BYTE *)(v323 + 3) = 8;
        OUTLINED_FUNCTION_3_4();
        v325 = (_QWORD *)*v465;
        swift_getKeyPath();
        v326 = v325[2];
        if (v326)
        {
          v488 = v317;
          v492 = v323;
          v516 = MEMORY[0x1E0DEE9D8];
          OUTLINED_FUNCTION_45_0();
          OUTLINED_FUNCTION_44_29();
          v327 = 0;
          v328 = v516;
          do
          {
            v329 = v325[v327 + 4];
            v514 = v329;
            OUTLINED_FUNCTION_74_1();
            OUTLINED_FUNCTION_83_6();
            OUTLINED_FUNCTION_55_0();
            v330 = v515;
            v516 = v328;
            OUTLINED_FUNCTION_151_2();
            if (v143)
            {
              OUTLINED_FUNCTION_45_25();
              v328 = v516;
            }
            ++v327;
            *(_QWORD *)(v328 + 16) = v329;
            *(_QWORD *)(v328 + 8 * v317 + 32) = v330;
          }
          while (v326 != v327);
          OUTLINED_FUNCTION_28();
          OUTLINED_FUNCTION_3_4();
        }
        else
        {
          OUTLINED_FUNCTION_3_4();
        }
        OUTLINED_FUNCTION_51_21();
      }

      OUTLINED_FUNCTION_3_0();
      OUTLINED_FUNCTION_28_9();
      OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_56();
      OUTLINED_FUNCTION_3_4();
      OUTLINED_FUNCTION_4_2();
      OUTLINED_FUNCTION_78_11(v456, *(uint64_t (**)(uint64_t, _QWORD))(v480 + 8));
      v116 = v496;
    }
    v331 = (void *)*v465;
    v332 = *(_QWORD *)(*v465 + 16);
    if (v332)
    {
      OUTLINED_FUNCTION_9_2();
      v333 = 0;
      while (1)
      {
        OUTLINED_FUNCTION_89_8();
        *(_QWORD *)&v517[0] = v292;
        OUTLINED_FUNCTION_74_1();
        OUTLINED_FUNCTION_88_7();
        OUTLINED_FUNCTION_55_0();
        OUTLINED_FUNCTION_4_2();
        if (v516 != 1)
          break;
        if (v332 == ++v333)
        {
          OUTLINED_FUNCTION_88();
          goto LABEL_172;
        }
      }
      OUTLINED_FUNCTION_88();
      v341 = (_BYTE *)v498;
    }
    else
    {
LABEL_172:
      OUTLINED_FUNCTION_18_41();
      v334 = OUTLINED_FUNCTION_9_1();
      v335 = OUTLINED_FUNCTION_37_1(v334);
      isa = v454.isa;
      if (v335)
      {
        v337 = (_WORD *)OUTLINED_FUNCTION_4_0();
        OUTLINED_FUNCTION_15_21(v337);
        OUTLINED_FUNCTION_0_4(&dword_1C0039000, v338, v339, "running SearchByHypocorism");
        OUTLINED_FUNCTION_5();
      }

      v340 = *v465;
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_130_2();
      sub_1C027987C();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_181_0();
      OUTLINED_FUNCTION_169_1();
      OUTLINED_FUNCTION_93_6((uint64_t)isa, v342);
      v343 = OUTLINED_FUNCTION_16_0();
      OUTLINED_FUNCTION_82_10(v343, (uint64_t)sub_1C027E46C);
      v344 = sub_1C0303B80();
      v345 = sub_1C03042E8();
      v346 = OUTLINED_FUNCTION_16_0();
      *(_BYTE *)(v346 + 16) = 32;
      v347 = OUTLINED_FUNCTION_16_0();
      OUTLINED_FUNCTION_103_3(v347);
      v332 = OUTLINED_FUNCTION_16_0();
      *(_QWORD *)(v332 + 16) = sub_1C027E764;
      *(_QWORD *)(v332 + 24) = v343;
      v348 = OUTLINED_FUNCTION_16_0();
      *(_QWORD *)(v348 + 16) = sub_1C027E768;
      *(_QWORD *)(v348 + 24) = v332;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727350);
      v349 = OUTLINED_FUNCTION_16_0();
      *(_OWORD *)(v349 + 16) = xmmword_1C03067E0;
      *(_QWORD *)(v349 + 32) = sub_1C027E770;
      *(_QWORD *)(v349 + 40) = v346;
      *(_QWORD *)(v349 + 48) = sub_1C027E770;
      *(_QWORD *)(v349 + 56) = v340;
      *(_QWORD *)(v349 + 64) = sub_1C027E76C;
      *(_QWORD *)(v349 + 72) = v348;
      swift_setDeallocating();
      OUTLINED_FUNCTION_102_5();
      OUTLINED_FUNCTION_9_3();
      OUTLINED_FUNCTION_111_2();
      OUTLINED_FUNCTION_39();
      OUTLINED_FUNCTION_12_3();
      sub_1C00F7184();
      LODWORD(v502) = v345;
      if (os_log_type_enabled(v344, (os_log_type_t)v345))
      {
        v499 = v348;
        v505 = v343;
        v501 = (uint64_t)v344;
        v350 = OUTLINED_FUNCTION_4_0();
        v488 = OUTLINED_FUNCTION_4_0();
        *(_QWORD *)&v517[0] = v488;
        *(_WORD *)v350 = 258;
        *(_BYTE *)(v350 + 2) = 32;
        OUTLINED_FUNCTION_4_2();
        v492 = v350;
        *(_BYTE *)(v350 + 3) = 8;
        OUTLINED_FUNCTION_3_4();
        v351 = *v465;
        KeyPath = swift_getKeyPath();
        v353 = *(_QWORD *)(v351 + 16);
        v354 = v332;
        if (v353)
        {
          v503 = (uint64_t)KeyPath;
          v516 = MEMORY[0x1E0DEE9D8];
          OUTLINED_FUNCTION_45_0();
          OUTLINED_FUNCTION_44_29();
          v355 = 0;
          v356 = v516;
          do
          {
            v357 = *(_QWORD *)(v351 + 8 * v355 + 32);
            v514 = v357;
            OUTLINED_FUNCTION_74_1();
            swift_getAtKeyPath();
            OUTLINED_FUNCTION_55_0();
            v358 = v515;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              OUTLINED_FUNCTION_210();
              OUTLINED_FUNCTION_45_25();
              v356 = v516;
            }
            OUTLINED_FUNCTION_151_2();
            if (v143)
            {
              OUTLINED_FUNCTION_45_25();
              v356 = v516;
            }
            ++v355;
            *(_QWORD *)(v356 + 16) = v357;
            *(_QWORD *)(v356 + 8 * v354 + 32) = v358;
          }
          while (v353 != v355);
          OUTLINED_FUNCTION_28();
          swift_release();
        }
        else
        {
          swift_release();
        }
        OUTLINED_FUNCTION_51_21();
      }

      OUTLINED_FUNCTION_3_0();
      OUTLINED_FUNCTION_56();
      OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_57();
      OUTLINED_FUNCTION_3_4();
      OUTLINED_FUNCTION_4_2();
      OUTLINED_FUNCTION_78_11((uint64_t)v454.isa, *(uint64_t (**)(uint64_t, _QWORD))(v480 + 8));
      v116 = v496;
      v341 = (_BYTE *)v498;
    }
    v359 = *(unsigned __int8 *)(v493 + v455[12]);
    v360 = v453;
    sub_1C00638E8(v493, v453, type metadata accessor for ContactResolverConfig);
    v363 = v494;
    if (v359 != 1)
    {
      sub_1C003DD84(v360, type metadata accessor for ContactResolverConfig);
      OUTLINED_FUNCTION_46_16();
LABEL_214:
      if (*(_BYTE *)(v116 + v363[21]) == 1)
      {
        v386 = v495;
        v387 = v452;
        v388 = (objc_class *)OUTLINED_FUNCTION_138_2((void *)qword_1ED729668);
        sub_1C0303B68();
        v503 = v386[6];
        *(unint64_t *)((char *)v387->n128_u64 + v503) = (unint64_t)v388;
        v389 = v388;
        sub_1C03043E4();
        v390 = (__n128 *)OUTLINED_FUNCTION_16_0();
        OUTLINED_FUNCTION_70_10(v390, v500);
        v391 = OUTLINED_FUNCTION_23_0();
        v392 = v497;
        v390[3].n128_u64[1] = MEMORY[0x1E0DEA968];
        v390[4].n128_u64[0] = v392;
        v390[2].n128_u64[0] = v391;
        v390[2].n128_u64[1] = v393;
        v452 = v390;
        LOBYTE(v451) = v332;
        OUTLINED_FUNCTION_35_18();
        OUTLINED_FUNCTION_211();
        OUTLINED_FUNCTION_28();

        OUTLINED_FUNCTION_18_41();
        v394 = OUTLINED_FUNCTION_9_1();
        if (OUTLINED_FUNCTION_37_1(v394))
        {
          v395 = (_WORD *)OUTLINED_FUNCTION_4_0();
          OUTLINED_FUNCTION_15_21(v395);
          OUTLINED_FUNCTION_0_4(&dword_1C0039000, v396, v397, "running E3 expander");
          OUTLINED_FUNCTION_5();
        }

        v398 = *v465;
        MEMORY[0x1E0C80A78](v399);
        v452 = v400;
        v453 = v493;
        v401 = v482;
        OUTLINED_FUNCTION_45_0();
        OUTLINED_FUNCTION_47();
        sub_1C0272020(v401, v398, (uint64_t (*)(_QWORD *, uint64_t))sub_1C027E454);
        v403 = v448;
        v404 = v490;
        v407 = v402;
        OUTLINED_FUNCTION_14();
        OUTLINED_FUNCTION_28();
        *(_QWORD *)(v404 + 16) = v407;
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_169_1();
        OUTLINED_FUNCTION_93_6(v403, v408);
        v409 = OUTLINED_FUNCTION_16_0();
        OUTLINED_FUNCTION_82_10(v409, (uint64_t)sub_1C027E46C);
        sub_1C0303B80();
        LODWORD(v504) = OUTLINED_FUNCTION_98();
        v410 = OUTLINED_FUNCTION_16_0();
        *(_BYTE *)(v410 + 16) = 32;
        v411 = OUTLINED_FUNCTION_16_0();
        OUTLINED_FUNCTION_103_3(v411);
        v412 = OUTLINED_FUNCTION_16_0();
        *(_QWORD *)(v412 + 16) = sub_1C027E480;
        *(_QWORD *)(v412 + 24) = v409;
        v413 = OUTLINED_FUNCTION_16_0();
        *(_QWORD *)(v413 + 16) = sub_1C027E4BC;
        *(_QWORD *)(v413 + 24) = v412;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727350);
        v414 = OUTLINED_FUNCTION_16_0();
        *(_OWORD *)(v414 + 16) = xmmword_1C03067E0;
        *(_QWORD *)(v414 + 32) = sub_1C027E48C;
        *(_QWORD *)(v414 + 40) = v410;
        *(_QWORD *)(v414 + 48) = sub_1C027E770;
        *(_QWORD *)(v414 + 56) = 32;
        *(_QWORD *)(v414 + 64) = sub_1C027E4C4;
        *(_QWORD *)(v414 + 72) = v413;
        swift_setDeallocating();
        OUTLINED_FUNCTION_102_5();
        OUTLINED_FUNCTION_63_6();
        OUTLINED_FUNCTION_111_2();
        OUTLINED_FUNCTION_39();
        OUTLINED_FUNCTION_12_3();
        sub_1C00F7184();
        if (os_log_type_enabled(&v454, (os_log_type_t)v504))
        {
          v492 = v413;
          v499 = v412;
          v501 = v409;
          v502 = &v454;
          v415 = OUTLINED_FUNCTION_4_0();
          v416 = OUTLINED_FUNCTION_4_0();
          OUTLINED_FUNCTION_180_0(v416);
          *(_BYTE *)(v415 + 2) = 32;
          OUTLINED_FUNCTION_4_2();
          *(_BYTE *)(v415 + 3) = 8;
          OUTLINED_FUNCTION_3_4();
          v417 = *v465;
          swift_getKeyPath();
          if (*(_QWORD *)(v417 + 16))
          {
            v488 = v116;
            v489 = v415;
            v516 = MEMORY[0x1E0DEE9D8];
            OUTLINED_FUNCTION_45_0();
            OUTLINED_FUNCTION_44_29();
            v418 = 0;
            do
            {
              v419 = *(_QWORD *)(v417 + 8 * v418++ + 32);
              OUTLINED_FUNCTION_47();
              v514 = v419;
              OUTLINED_FUNCTION_83_6();
              OUTLINED_FUNCTION_14();
              OUTLINED_FUNCTION_213();
              OUTLINED_FUNCTION_71_13();
            }
            while (!v144);
            OUTLINED_FUNCTION_28();
            OUTLINED_FUNCTION_3_4();
          }
          else
          {
            OUTLINED_FUNCTION_3_4();
          }
          OUTLINED_FUNCTION_51_21();
        }

        OUTLINED_FUNCTION_3_0();
        OUTLINED_FUNCTION_56();
        OUTLINED_FUNCTION_28_9();
        OUTLINED_FUNCTION_57();
        OUTLINED_FUNCTION_3_4();
        OUTLINED_FUNCTION_4_2();
        OUTLINED_FUNCTION_78_11(v448, *(uint64_t (**)(uint64_t, _QWORD))(v480 + 8));
        v406 = v465;
        sub_1C03043D8();
        OUTLINED_FUNCTION_92_7();
        v420 = OUTLINED_FUNCTION_50_4();
        OUTLINED_FUNCTION_94(v420, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
        v405 = v493;
      }
      else
      {
        v405 = v493;
        v406 = v465;
      }
      OUTLINED_FUNCTION_21();
      sub_1C0279EA8();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_200();
      OUTLINED_FUNCTION_47();
      sub_1C027A8BC();
      v422 = v421;
      OUTLINED_FUNCTION_14();
      *v406 = v422;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_21();
      sub_1C027AC48();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_200();
      v423 = v405 + v455[16];
      if (*(_QWORD *)v423)
      {
        v504 = *(NSObject **)v423;
        v502 = *(NSObject **)(v423 + 8);
        v424 = v495;
        v425 = v450;
        v426 = (objc_class *)OUTLINED_FUNCTION_138_2((void *)qword_1ED729668);
        sub_1C0303B68();
        v503 = v424[6];
        *(_QWORD *)(v425 + v503) = v426;
        v427 = v426;
        OUTLINED_FUNCTION_203();
        v428 = v406;
        v429 = (__n128 *)OUTLINED_FUNCTION_16_0();
        OUTLINED_FUNCTION_70_10(v429, v500);
        v430 = OUTLINED_FUNCTION_23_0();
        v431 = v497;
        v429[3].n128_u64[1] = MEMORY[0x1E0DEA968];
        v429[4].n128_u64[0] = v431;
        v429[2].n128_u64[0] = v430;
        v429[2].n128_u64[1] = v432;
        v452 = v429;
        LOBYTE(v451) = v405;
        OUTLINED_FUNCTION_35_18();
        sub_1C0303B50();
        OUTLINED_FUNCTION_8_1();

        v433 = *v428;
        v434 = *(_QWORD *)(*v428 + 16);
        v435 = MEMORY[0x1E0DEE9D8];
        if (v434)
        {
          *(_QWORD *)&v517[0] = MEMORY[0x1E0DEE9D8];
          OUTLINED_FUNCTION_74_1();
          sub_1C00B1A18();
          v436 = 0;
          v435 = *(_QWORD *)&v517[0];
          do
          {
            v437 = *(_QWORD *)(v433 + 8 * v436 + 32);
            OUTLINED_FUNCTION_2_1();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              OUTLINED_FUNCTION_65_11();
              sub_1C00B1A18();
              v435 = *(_QWORD *)&v517[0];
            }
            ++v436;
            v438 = *(_QWORD *)(v435 + 16);
            sub_1C027E394(v438, (uint64_t (*)(BOOL))sub_1C00B1A18);
            v435 = *(_QWORD *)&v517[0];
            *(_QWORD *)(*(_QWORD *)&v517[0] + 16) = v438 + 1;
            *(_QWORD *)(v435 + 8 * v438 + 32) = v437;
          }
          while (v434 != v436);
          OUTLINED_FUNCTION_55_0();
        }
        *(_QWORD *)&v517[0] = v435;
        ((void (*)(uint64_t *__return_ptr, _OWORD *))v504)(&v516, v517);
        OUTLINED_FUNCTION_8_1();
        v439 = sub_1C02713D0(v516);
        OUTLINED_FUNCTION_14();
        *v465 = v439;
        swift_bridgeObjectRelease();
        sub_1C03043D8();
        OUTLINED_FUNCTION_92_7();
        v440 = OUTLINED_FUNCTION_50_4();
        OUTLINED_FUNCTION_94(v440, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
      }
      v441 = OUTLINED_FUNCTION_21();
      sub_1C00BD4B8(v441);
      OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_17_0();
      swift_bridgeObjectRelease();
      sub_1C03043D8();
      OUTLINED_FUNCTION_92_7();
      v442 = OUTLINED_FUNCTION_110_4();
      OUTLINED_FUNCTION_82_4(v442, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
      goto LABEL_144;
    }
    v364 = *(_QWORD *)(*v465 + 16);
    if (v364)
    {
      OUTLINED_FUNCTION_9_2();
      v365 = 0;
      v341 = byte_1C03229F0;
      while (1)
      {
        OUTLINED_FUNCTION_89_8();
        *(_QWORD *)&v517[0] = v363;
        OUTLINED_FUNCTION_74_1();
        OUTLINED_FUNCTION_88_7();
        OUTLINED_FUNCTION_55_0();
        OUTLINED_FUNCTION_4_2();
        if (v516 != 1)
          break;
        if (v364 == ++v365)
        {
          v361 = OUTLINED_FUNCTION_88();
          v360 = v453;
          goto LABEL_194;
        }
      }
      v383 = OUTLINED_FUNCTION_88();
      v360 = v453;
      OUTLINED_FUNCTION_168_1(v383, v384, type metadata accessor for ContactResolverConfig);
      if (byte_1C03229F0[v455[14]])
      {
        v363 = v494;
        v332 = v451;
        v385 = sub_1C0304A08();
        OUTLINED_FUNCTION_14();
        OUTLINED_FUNCTION_38_10(v449);
        OUTLINED_FUNCTION_38_10(v360);
        if ((v385 & 1) == 0)
        {
          OUTLINED_FUNCTION_46_16();
          goto LABEL_214;
        }
LABEL_196:
        OUTLINED_FUNCTION_18_41();
        v366 = OUTLINED_FUNCTION_9_1();
        if (OUTLINED_FUNCTION_37_1(v366))
        {
          v367 = (_WORD *)OUTLINED_FUNCTION_4_0();
          OUTLINED_FUNCTION_15_21(v367);
          OUTLINED_FUNCTION_0_4(&dword_1C0039000, v368, v369, "running SearchByFoundInApps");
          OUTLINED_FUNCTION_5();
        }

        OUTLINED_FUNCTION_21();
        sub_1C0279CB0();
        OUTLINED_FUNCTION_17_0();
        OUTLINED_FUNCTION_55_0();
        OUTLINED_FUNCTION_181_0();
        OUTLINED_FUNCTION_169_1();
        v370(v332, v504, v491);
        v332 = OUTLINED_FUNCTION_16_0();
        OUTLINED_FUNCTION_82_10(v332, (uint64_t)sub_1C027E46C);
        v371 = sub_1C0303B80();
        LODWORD(v505) = sub_1C03042E8();
        v372 = OUTLINED_FUNCTION_16_0();
        *(_BYTE *)(v372 + 16) = 32;
        v373 = OUTLINED_FUNCTION_16_0();
        OUTLINED_FUNCTION_103_3(v373);
        v374 = OUTLINED_FUNCTION_16_0();
        *(_QWORD *)(v374 + 16) = sub_1C027E764;
        *(_QWORD *)(v374 + 24) = v332;
        v375 = OUTLINED_FUNCTION_16_0();
        *(_QWORD *)(v375 + 16) = sub_1C027E768;
        *(_QWORD *)(v375 + 24) = v374;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727350);
        v376 = OUTLINED_FUNCTION_16_0();
        *(_OWORD *)(v376 + 16) = xmmword_1C03067E0;
        *(_QWORD *)(v376 + 32) = sub_1C027E770;
        *(_QWORD *)(v376 + 40) = v372;
        *(_QWORD *)(v376 + 48) = sub_1C027E770;
        *(_QWORD *)(v376 + 56) = 32;
        *(_QWORD *)(v376 + 64) = sub_1C027E76C;
        *(_QWORD *)(v376 + 72) = v375;
        swift_setDeallocating();
        OUTLINED_FUNCTION_9_3();
        OUTLINED_FUNCTION_12_3();
        OUTLINED_FUNCTION_111_2();
        OUTLINED_FUNCTION_39();
        OUTLINED_FUNCTION_102_5();
        sub_1C00F7184();
        if (os_log_type_enabled(v371, (os_log_type_t)v505))
        {
          v499 = v375;
          v501 = v374;
          v502 = v332;
          v503 = (uint64_t)v371;
          v377 = OUTLINED_FUNCTION_4_0();
          v378 = OUTLINED_FUNCTION_4_0();
          *(_QWORD *)&v517[0] = v378;
          *(_WORD *)v377 = 258;
          *(_BYTE *)(v377 + 2) = 32;
          OUTLINED_FUNCTION_4_2();
          *(_BYTE *)(v377 + 3) = 8;
          OUTLINED_FUNCTION_3_4();
          v379 = *v465;
          swift_getKeyPath();
          v380 = *(_QWORD *)(v379 + 16);
          if (v380)
          {
            v489 = v378;
            v492 = v377;
            v516 = MEMORY[0x1E0DEE9D8];
            OUTLINED_FUNCTION_45_0();
            sub_1C027DFA0(v380);
            v381 = 0;
            do
            {
              v382 = *(_QWORD *)(v379 + 8 * v381++ + 32);
              OUTLINED_FUNCTION_47();
              v514 = v382;
              OUTLINED_FUNCTION_83_6();
              OUTLINED_FUNCTION_14();
              OUTLINED_FUNCTION_213();
              OUTLINED_FUNCTION_71_13();
            }
            while (!v144);
            OUTLINED_FUNCTION_28();
            OUTLINED_FUNCTION_3_4();
          }
          else
          {
            OUTLINED_FUNCTION_3_4();
          }
          OUTLINED_FUNCTION_51_21();
        }

        OUTLINED_FUNCTION_3_0();
        OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_57();
        OUTLINED_FUNCTION_56();
        OUTLINED_FUNCTION_3_4();
        OUTLINED_FUNCTION_4_2();
        OUTLINED_FUNCTION_78_11(v451, *(uint64_t (**)(uint64_t, _QWORD))(v480 + 8));
        v363 = v494;
        goto LABEL_214;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_194:
      OUTLINED_FUNCTION_168_1(v361, v362, type metadata accessor for ContactResolverConfig);
    }
    v332 = v451;
    OUTLINED_FUNCTION_38_10((uint64_t)v341);
    OUTLINED_FUNCTION_38_10(v360);
    goto LABEL_196;
  }
LABEL_238:
  sub_1C03043D8();
  OUTLINED_FUNCTION_121_4();
  v443 = OUTLINED_FUNCTION_199();
  v444(v443);
  __break(1u);
}

void sub_1C0277250(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t Expander;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  Expander = type metadata accessor for StripDiacriticsQueryExpander();
  MEMORY[0x1E0C80A78](Expander);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED727970 != -1)
    swift_once();
  v7 = sub_1C0303B98();
  __swift_project_value_buffer(v7, (uint64_t)&unk_1ED7295C8);
  v8 = sub_1C0303B80();
  v9 = sub_1C03042E8();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1C0039000, v8, v9, "running initial expanders", v10, 2u);
    MEMORY[0x1C3B98378](v10, -1, -1);
  }

  v11 = a1 + *(int *)(type metadata accessor for ContactResolverConfig(0) + 32);
  v12 = sub_1C0301DB0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v6, v11, v12);
  KeyPath = swift_getKeyPath();
  v14 = swift_getKeyPath();
  v15 = swift_getKeyPath();
  v16 = MEMORY[0x1E0C80A78](v15);
  *(&v19 - 10) = (uint64_t)v6;
  *(&v19 - 9) = (uint64_t)sub_1C01969F4;
  *(&v19 - 8) = 0;
  *(&v19 - 7) = KeyPath;
  *(&v19 - 6) = (uint64_t)sub_1C01969F0;
  *(&v19 - 5) = 0;
  *(&v19 - 4) = v14;
  *(&v19 - 3) = (uint64_t)sub_1C01969F8;
  *(&v19 - 2) = 0;
  *(&v19 - 1) = v16;
  sub_1C01F14FC();
  v18 = v17;
  swift_release();
  swift_release();
  swift_release();
  sub_1C003DD84((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StripDiacriticsQueryExpander);
  *a2 = v18;
}

void sub_1C0277478(const void *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(uint64_t, uint64_t)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t (*a10)(uint64_t, uint64_t), uint64_t a11, _QWORD *a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t Expander;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t (*v108)(uint64_t, uint64_t);
  uint64_t v109;
  uint64_t (*v110)(uint64_t, uint64_t);
  _QWORD *v111;
  char v112;
  char v113;
  _QWORD *v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  unint64_t v122;
  _QWORD *v123;
  _QWORD *v124;
  _QWORD *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t (*v133)(uint64_t, uint64_t);
  uint64_t (*v134)(uint64_t, uint64_t);
  _QWORD *v135;
  char v136;
  char v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  BOOL v144;
  uint64_t v145;
  uint64_t v146;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t (*v155)(uint64_t, uint64_t);
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  char v160;
  char v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  int EnumTagSinglePayload;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD v173[2];
  uint64_t v174;
  _QWORD *v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  _QWORD *v189;
  _QWORD *v190;
  _QWORD *v191;
  _QWORD *v192;
  _QWORD *v193;
  _QWORD *v194;
  _QWORD *v195;
  _QWORD *v196;
  uint64_t (*v197)(uint64_t, uint64_t);
  _QWORD *v198;
  _QWORD *v199;
  uint64_t (*v200)(uint64_t, uint64_t);
  uint64_t v201;
  _QWORD *v202;
  _QWORD *v203;
  _QWORD *v204;
  _QWORD *v205;
  _QWORD *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char v212;
  _QWORD v213[33];
  _QWORD v214[34];
  _QWORD *v215;

  v186 = a5;
  v187 = a8;
  v183 = a4;
  v184 = a7;
  v200 = a6;
  v197 = a3;
  v174 = a2;
  v175 = a9;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2688);
  v14 = MEMORY[0x1E0C80A78](v13);
  v185 = (char *)v173 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v199 = (_QWORD *)((char *)v173 - v17);
  v18 = MEMORY[0x1E0C80A78](v16);
  v196 = (_QWORD *)((char *)v173 - v19);
  v20 = MEMORY[0x1E0C80A78](v18);
  v204 = (_QWORD *)((char *)v173 - v21);
  MEMORY[0x1E0C80A78](v20);
  v190 = (_QWORD *)((char *)v173 - v22);
  Expander = type metadata accessor for StripDiacriticsQueryExpander();
  MEMORY[0x1E0C80A78](Expander);
  v203 = (_QWORD *)((char *)v173 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = type metadata accessor for ContactResolver.SignalSet(0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)v173 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = MEMORY[0x1E0C80A78](v28);
  v201 = (uint64_t)v173 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x1E0C80A78](v30);
  v202 = (_QWORD *)((char *)v173 - v33);
  v34 = MEMORY[0x1E0C80A78](v32);
  v182 = (uint64_t)v173 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v198 = (_QWORD *)((char *)v173 - v37);
  v38 = MEMORY[0x1E0C80A78](v36);
  v206 = (_QWORD *)((char *)v173 - v39);
  v40 = MEMORY[0x1E0C80A78](v38);
  v181 = (uint64_t)v173 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v209 = (uint64_t)v173 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v195 = (_QWORD *)((char *)v173 - v45);
  v46 = MEMORY[0x1E0C80A78](v44);
  v205 = (_QWORD *)((char *)v173 - v47);
  v48 = MEMORY[0x1E0C80A78](v46);
  v180 = (uint64_t)v173 - v49;
  v50 = MEMORY[0x1E0C80A78](v48);
  v208 = (uint64_t)v173 - v51;
  v52 = MEMORY[0x1E0C80A78](v50);
  v194 = (_QWORD *)((char *)v173 - v53);
  v54 = MEMORY[0x1E0C80A78](v52);
  v179 = (unint64_t)v173 - v55;
  v56 = MEMORY[0x1E0C80A78](v54);
  v207 = (uint64_t)v173 - v57;
  v58 = MEMORY[0x1E0C80A78](v56);
  v192 = (_QWORD *)((char *)v173 - v59);
  v60 = MEMORY[0x1E0C80A78](v58);
  v191 = (_QWORD *)((char *)v173 - v61);
  v62 = MEMORY[0x1E0C80A78](v60);
  v178 = (uint64_t)v173 - v63;
  v64 = MEMORY[0x1E0C80A78](v62);
  v193 = (_QWORD *)((char *)v173 - v65);
  v66 = MEMORY[0x1E0C80A78](v64);
  v68 = (char *)v173 - v67;
  MEMORY[0x1E0C80A78](v66);
  v70 = (_QWORD *)((char *)v173 - v69);
  memcpy(v213, a1, sizeof(v213));
  sub_1C010E578((uint64_t)v27);
  memcpy(v214, v27 + 8, 0x108uLL);
  sub_1C003F648(v213);
  sub_1C003F648(v213);
  sub_1C0040644(v214);
  memcpy(v27 + 8, v213, 0x108uLL);
  sub_1C00638E8((uint64_t)v27, (uint64_t)v70 + *(int *)(v28 + 36), type metadata accessor for ContactResolver.SignalSet);
  memcpy(v70, v213, 0x108uLL);
  sub_1C003DD84((uint64_t)v27, type metadata accessor for ContactResolver.SignalSet);
  v71 = sub_1C0242FE8((uint64_t)v70);
  sub_1C0044B78((uint64_t)v70, (uint64_t *)&unk_1ED726D98);
  v215 = (_QWORD *)v71;
  v72 = *(_QWORD *)(v71 + 16);
  v211 = v28;
  v176 = v29;
  if (v72)
  {
    v177 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v73 = v71 + v177;
    v74 = *(_QWORD **)(v29 + 72);
    v188 = v70 + 41;
    v189 = v74;
    v173[1] = v71;
    swift_bridgeObjectRetain();
    v75 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v76 = v75;
      sub_1C0045DFC(v73, (uint64_t)v68, (uint64_t *)&unk_1ED726D98);
      v77 = *((_QWORD *)v68 + 6);
      if ((v77 & 0x2000000000000000) != 0)
        v78 = HIBYTE(v77) & 0xF;
      else
        v78 = *((_QWORD *)v68 + 5) & 0xFFFFFFFFFFFFLL;
      v79 = v191;
      sub_1C0045DFC((uint64_t)v68, (uint64_t)v191, (uint64_t *)&unk_1ED726D98);
      if (v78)
      {
        sub_1C0044B78((uint64_t)v79, (uint64_t *)&unk_1ED726D98);
      }
      else
      {
        v80 = v79[16];
        if ((v80 & 0x2000000000000000) != 0)
          v81 = HIBYTE(v80) & 0xF;
        else
          v81 = v79[15] & 0xFFFFFFFFFFFFLL;
        sub_1C0044B78((uint64_t)v79, (uint64_t *)&unk_1ED726D98);
        if (!v81)
        {
          v83 = v190;
          __swift_storeEnumTagSinglePayload((uint64_t)v190, 1, 1, v211);
          goto LABEL_13;
        }
      }
      sub_1C0045DFC((uint64_t)v68, (uint64_t)v70, (uint64_t *)&unk_1ED726D98);
      swift_bridgeObjectRelease();
      v70[5] = 0;
      v70[6] = 0xE000000000000000;
      swift_bridgeObjectRelease();
      v70[15] = 0;
      v70[16] = 0xE000000000000000;
      v82 = v211;
      *((_BYTE *)v188 + *(int *)(v211 + 36)) = 1;
      v83 = v190;
      sub_1C0045DFC((uint64_t)v70, (uint64_t)v190, (uint64_t *)&unk_1ED726D98);
      __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v82);
      sub_1C0044B78((uint64_t)v70, (uint64_t *)&unk_1ED726D98);
LABEL_13:
      v75 = v76;
      sub_1C0044B78((uint64_t)v68, (uint64_t *)&unk_1ED726D98);
      if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v211) == 1)
      {
        sub_1C0044B78((uint64_t)v83, &qword_1EF5C2688);
        v84 = v189;
      }
      else
      {
        v85 = (uint64_t)v83;
        v86 = v178;
        sub_1C005A718(v85, v178, (uint64_t *)&unk_1ED726D98);
        sub_1C005A718(v86, (uint64_t)v192, (uint64_t *)&unk_1ED726D98);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C0050278();
          v75 = v88;
        }
        v87 = *(_QWORD *)(v75 + 16);
        if (v87 >= *(_QWORD *)(v75 + 24) >> 1)
        {
          sub_1C0050278();
          v75 = v89;
        }
        *(_QWORD *)(v75 + 16) = v87 + 1;
        v84 = v189;
        sub_1C005A718((uint64_t)v192, v75 + v177 + v87 * (_QWORD)v189, (uint64_t *)&unk_1ED726D98);
      }
      v73 += (uint64_t)v84;
      if (!--v72)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_1C004F9C0();
  v90 = v215;
  sub_1C00638E8(v174, (uint64_t)v203, (uint64_t (*)(_QWORD))type metadata accessor for StripDiacriticsQueryExpander);
  v91 = v90[2];
  v191 = v90;
  if (v91)
  {
    v192 = (_QWORD *)((*(unsigned __int8 *)(v176 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80));
    v92 = (char *)v192 + (_QWORD)v90;
    v93 = *(_QWORD *)(v176 + 72);
    swift_bridgeObjectRetain();
    v94 = MEMORY[0x1E0DEE9D8];
    v95 = v204;
    v96 = v193;
    do
    {
      sub_1C0045DFC((uint64_t)v92, (uint64_t)v96, (uint64_t *)&unk_1ED726D98);
      sub_1C02423F8((uint64_t)v96, (uint64_t)v95);
      v95 = v204;
      sub_1C0044B78((uint64_t)v96, (uint64_t *)&unk_1ED726D98);
      if (__swift_getEnumTagSinglePayload((uint64_t)v95, 1, v211) == 1)
      {
        sub_1C0044B78((uint64_t)v95, &qword_1EF5C2688);
      }
      else
      {
        v97 = (uint64_t)v95;
        v98 = v179;
        sub_1C005A718(v97, v179, (uint64_t *)&unk_1ED726D98);
        sub_1C005A718(v98, (uint64_t)v194, (uint64_t *)&unk_1ED726D98);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C0050278();
          v94 = v100;
        }
        v99 = *(_QWORD *)(v94 + 16);
        if (v99 >= *(_QWORD *)(v94 + 24) >> 1)
        {
          sub_1C0050278();
          v94 = v101;
        }
        *(_QWORD *)(v94 + 16) = v99 + 1;
        sub_1C005A718((uint64_t)v194, (uint64_t)v192 + v94 + v99 * v93, (uint64_t *)&unk_1ED726D98);
        v95 = v204;
      }
      v92 += v93;
      --v91;
    }
    while (v91);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_1C003DD84((uint64_t)v203, (uint64_t (*)(_QWORD))type metadata accessor for StripDiacriticsQueryExpander);
  swift_bridgeObjectRelease();
  sub_1C004F9C0();
  v102 = (uint64_t)v215;
  v103 = v215[2];
  if (v103)
  {
    v179 = (*(unsigned __int8 *)(v176 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80);
    v104 = (uint64_t)v215 + v179;
    v105 = *(_QWORD *)(v176 + 72);
    v106 = v205;
    v203 = v205 + 3;
    v193 = v205 + 9;
    v194 = v205 + 7;
    v191 = v205 + 5;
    v192 = v205 + 11;
    v189 = v205 + 17;
    v190 = v205 + 15;
    v188 = v205 + 19;
    swift_retain();
    v178 = v102;
    swift_bridgeObjectRetain();
    swift_retain();
    v204 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v107 = v207;
      sub_1C0045DFC(v104, v207, (uint64_t *)&unk_1ED726D98);
      sub_1C0045DFC(v107, (uint64_t)v106, (uint64_t *)&unk_1ED726D98);
      v108 = v197;
      v109 = v210;
      sub_1C0272474(v203, v197);
      sub_1C0272474(v194, v108);
      sub_1C0272474(v193, v108);
      sub_1C0272474(v192, v108);
      sub_1C0272474(v191, v108);
      sub_1C0272474(v190, v108);
      sub_1C0272474(v189, v108);
      v110 = v108;
      v111 = v205;
      sub_1C0272474(v188, v110);
      v210 = v109;
      static ContactQuery.== infix(_:_:)(v107, (uint64_t)v111);
      if ((v112 & 1) != 0 && (static ContactResolver.SignalSet.== infix(_:_:)(), (v113 & 1) != 0))
      {
        sub_1C0044B78((uint64_t)v111, (uint64_t *)&unk_1ED726D98);
        v114 = v196;
        v115 = v196;
        v116 = 1;
        v117 = v211;
      }
      else
      {
        v118 = v211;
        v212 = 1;
        swift_setAtWritableKeyPath();
        v119 = (uint64_t)v111;
        v114 = v196;
        sub_1C005A718(v119, (uint64_t)v196, (uint64_t *)&unk_1ED726D98);
        v115 = v114;
        v116 = 0;
        v117 = v118;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v115, v116, 1, v117);
      sub_1C0044B78(v207, (uint64_t *)&unk_1ED726D98);
      if (__swift_getEnumTagSinglePayload((uint64_t)v114, 1, v211) == 1)
      {
        sub_1C0044B78((uint64_t)v114, &qword_1EF5C2688);
        v106 = v205;
      }
      else
      {
        v120 = v180;
        sub_1C005A718((uint64_t)v114, v180, (uint64_t *)&unk_1ED726D98);
        sub_1C005A718(v120, (uint64_t)v195, (uint64_t *)&unk_1ED726D98);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
          v121 = v204;
          v106 = v205;
        }
        else
        {
          sub_1C0050278();
          v121 = v123;
          v106 = v205;
        }
        v122 = v121[2];
        if (v122 >= v121[3] >> 1)
        {
          sub_1C0050278();
          v121 = v124;
        }
        v121[2] = v122 + 1;
        v204 = v121;
        sub_1C005A718((uint64_t)v195, (uint64_t)v121 + v179 + v122 * v105, (uint64_t *)&unk_1ED726D98);
      }
      v104 += v105;
      --v103;
    }
    while (v103);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  sub_1C004F9C0();
  v125 = v215;
  v126 = v215[2];
  if (v126)
  {
    v192 = (_QWORD *)((*(unsigned __int8 *)(v176 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80));
    v127 = (char *)v192 + (_QWORD)v215;
    v128 = *(_QWORD *)(v176 + 72);
    v129 = v206;
    v204 = v206 + 7;
    v205 = v206 + 3;
    v203 = v206 + 9;
    v196 = v206 + 5;
    v197 = (uint64_t (*)(uint64_t, uint64_t))(v206 + 11);
    v194 = v206 + 17;
    v195 = v206 + 15;
    v193 = v206 + 19;
    swift_retain();
    v191 = v125;
    swift_bridgeObjectRetain();
    swift_retain();
    v130 = MEMORY[0x1E0DEE9D8];
    v131 = v210;
    do
    {
      v207 = v126;
      v210 = v130;
      v132 = v208;
      sub_1C0045DFC((uint64_t)v127, v208, (uint64_t *)&unk_1ED726D98);
      sub_1C0045DFC(v132, (uint64_t)v129, (uint64_t *)&unk_1ED726D98);
      v133 = v200;
      sub_1C0272474(v205, v200);
      sub_1C0272474(v204, v133);
      sub_1C0272474(v203, v133);
      sub_1C0272474(v197, v133);
      sub_1C0272474(v196, v133);
      sub_1C0272474(v195, v133);
      sub_1C0272474(v194, v133);
      v134 = v133;
      v135 = v206;
      sub_1C0272474(v193, v134);
      static ContactQuery.== infix(_:_:)(v132, (uint64_t)v135);
      if ((v136 & 1) != 0 && (static ContactResolver.SignalSet.== infix(_:_:)(), (v137 & 1) != 0))
      {
        sub_1C0044B78((uint64_t)v135, (uint64_t *)&unk_1ED726D98);
        v138 = v199;
        v139 = v199;
        v140 = 1;
        v141 = v211;
      }
      else
      {
        v142 = v211;
        v212 = 1;
        swift_setAtWritableKeyPath();
        v143 = (uint64_t)v135;
        v138 = v199;
        sub_1C005A718(v143, (uint64_t)v199, (uint64_t *)&unk_1ED726D98);
        v139 = v138;
        v140 = 0;
        v141 = v142;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v139, v140, 1, v141);
      sub_1C0044B78(v208, (uint64_t *)&unk_1ED726D98);
      v144 = __swift_getEnumTagSinglePayload((uint64_t)v138, 1, v211) == 1;
      v130 = v210;
      if (v144)
      {
        sub_1C0044B78((uint64_t)v138, &qword_1EF5C2688);
        v129 = v206;
        v145 = v207;
      }
      else
      {
        v146 = v181;
        sub_1C005A718((uint64_t)v138, v181, (uint64_t *)&unk_1ED726D98);
        sub_1C005A718(v146, (uint64_t)v198, (uint64_t *)&unk_1ED726D98);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C0050278();
          v130 = v149;
        }
        v129 = v206;
        v145 = v207;
        v148 = *(_QWORD *)(v130 + 16);
        if (v148 >= *(_QWORD *)(v130 + 24) >> 1)
        {
          sub_1C0050278();
          v130 = v150;
        }
        *(_QWORD *)(v130 + 16) = v148 + 1;
        sub_1C005A718((uint64_t)v198, (uint64_t)v192 + v130 + v148 * v128, (uint64_t *)&unk_1ED726D98);
      }
      v127 += v128;
      v126 = v145 - 1;
    }
    while (v126);
    v210 = v131;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  sub_1C004F9C0();
  v151 = v215;
  v152 = v215[2];
  v153 = (uint64_t)v185;
  if (v152)
  {
    v194 = (_QWORD *)((*(unsigned __int8 *)(v176 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80));
    v195 = a12;
    v154 = (char *)v194 + (_QWORD)v215;
    v205 = v202 + 7;
    v206 = v202 + 3;
    v203 = v202 + 11;
    v204 = v202 + 9;
    v155 = *(uint64_t (**)(uint64_t, uint64_t))(v176 + 72);
    v198 = v202 + 15;
    v199 = v202 + 5;
    v196 = v202 + 19;
    v197 = (uint64_t (*)(uint64_t, uint64_t))(v202 + 17);
    swift_retain();
    v193 = v151;
    swift_bridgeObjectRetain();
    swift_retain();
    v156 = MEMORY[0x1E0DEE9D8];
    v200 = v155;
    do
    {
      v207 = v152;
      v208 = v156;
      v157 = v209;
      sub_1C0045DFC((uint64_t)v154, v209, (uint64_t *)&unk_1ED726D98);
      v158 = v202;
      sub_1C0045DFC(v157, (uint64_t)v202, (uint64_t *)&unk_1ED726D98);
      v159 = v210;
      sub_1C0272474(v206, a10);
      sub_1C0272474(v205, a10);
      sub_1C0272474(v204, a10);
      sub_1C0272474(v203, a10);
      sub_1C0272474(v199, a10);
      sub_1C0272474(v198, a10);
      sub_1C0272474(v197, a10);
      sub_1C0272474(v196, a10);
      v210 = v159;
      static ContactQuery.== infix(_:_:)(v157, (uint64_t)v158);
      if ((v160 & 1) != 0 && (static ContactResolver.SignalSet.== infix(_:_:)(), (v161 & 1) != 0))
      {
        sub_1C0044B78((uint64_t)v158, (uint64_t *)&unk_1ED726D98);
        v162 = v153;
        v163 = 1;
        v164 = v211;
      }
      else
      {
        v165 = v211;
        v212 = 1;
        swift_setAtWritableKeyPath();
        sub_1C005A718((uint64_t)v158, v153, (uint64_t *)&unk_1ED726D98);
        v162 = v153;
        v163 = 0;
        v164 = v165;
      }
      __swift_storeEnumTagSinglePayload(v162, v163, 1, v164);
      sub_1C0044B78(v209, (uint64_t *)&unk_1ED726D98);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v153, 1, v211);
      v156 = v208;
      if (EnumTagSinglePayload == 1)
      {
        sub_1C0044B78(v153, &qword_1EF5C2688);
        v167 = v207;
      }
      else
      {
        v168 = v153;
        v169 = v182;
        sub_1C005A718(v168, v182, (uint64_t *)&unk_1ED726D98);
        sub_1C005A718(v169, v201, (uint64_t *)&unk_1ED726D98);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C0050278();
          v156 = v171;
        }
        v170 = *(_QWORD *)(v156 + 16);
        v167 = v207;
        if (v170 >= *(_QWORD *)(v156 + 24) >> 1)
        {
          sub_1C0050278();
          v156 = v172;
        }
        *(_QWORD *)(v156 + 16) = v170 + 1;
        sub_1C005A718(v201, (uint64_t)v194 + v156 + v170 * (_QWORD)v155, (uint64_t *)&unk_1ED726D98);
        v153 = (uint64_t)v185;
      }
      v154 = (char *)v155 + (_QWORD)v154;
      v152 = v167 - 1;
    }
    while (v152);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  sub_1C004F9C0();
  *v175 = v215;
}

void sub_1C0278690(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  if (*(_QWORD *)(v8 + 16))
  {
    sub_1C0045DFC(v8 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t)v7, (uint64_t *)&unk_1ED726D98);
    sub_1C0184610(v7);
    v10 = v8;
    swift_bridgeObjectRetain();
    sub_1C004F9C0();
    v8 = v10;
    sub_1C0044B78((uint64_t)v7, (uint64_t *)&unk_1ED726D98);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  *a2 = v8;
}

void sub_1C0278780(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v24[2] = a2;
  v25 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2688);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v24 - v17;
  v19 = *a1;
  if (!*(_QWORD *)(v19 + 16))
    goto LABEL_4;
  v24[0] = a5;
  v24[1] = v5;
  v20 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  sub_1C0045DFC(v19 + v20, (uint64_t)v24 - v17, (uint64_t *)&unk_1ED726D98);
  v21 = type metadata accessor for CandidateContactGenerator(0);
  sub_1C01D8970(v18, *(unsigned __int8 *)(a3 + *(int *)(v21 + 80)), v25, (uint64_t)v11);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) == 1)
  {
    sub_1C0044B78((uint64_t)v18, (uint64_t *)&unk_1ED726D98);
    sub_1C0044B78((uint64_t)v11, &qword_1EF5C2688);
    a5 = (_QWORD *)v24[0];
LABEL_4:
    *a5 = v19;
    swift_bridgeObjectRetain();
    return;
  }
  sub_1C005A718((uint64_t)v11, (uint64_t)v16, (uint64_t *)&unk_1ED726D98);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726FF0);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C0305B60;
  sub_1C0045DFC((uint64_t)v16, v22 + v20, (uint64_t *)&unk_1ED726D98);
  v26 = v19;
  swift_bridgeObjectRetain();
  sub_1C004F9C0();
  v23 = v26;
  sub_1C0044B78((uint64_t)v16, (uint64_t *)&unk_1ED726D98);
  sub_1C0044B78((uint64_t)v18, (uint64_t *)&unk_1ED726D98);
  *(_QWORD *)v24[0] = v23;
}

void sub_1C0278994(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for RelationshipAliasGenerator();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  sub_1C00638E8(a2, (uint64_t)v8, v10);
  v11 = MEMORY[0x1E0DEE9D8];
  v17 = MEMORY[0x1E0DEE9D8];
  v12 = *(_QWORD *)(v9 + 16);
  if (v12)
  {
    v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98) - 8);
    v14 = v9 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v15 = *(_QWORD *)(v13 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C00D2358(v14);
      sub_1C004F9C0();
      v14 += v15;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    v11 = v17;
  }
  sub_1C003DD84((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RelationshipAliasGenerator);
  *a3 = v11;
}

uint64_t sub_1C0278AAC@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;

  v2 = *(_QWORD *)result;
  v3 = *(_QWORD *)(*(_QWORD *)result + 16);
  if (v3)
  {
    v19 = a2;
    v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98) - 8);
    v20 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v5 = v2 + v20;
    v6 = *(_QWORD *)(v4 + 72);
    swift_bridgeObjectRetain();
    v7 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      sub_1C0156844(v5);
      v9 = *(_QWORD *)(v8 + 16);
      v10 = *(_QWORD *)(v7 + 16);
      if (__OFADD__(v10, v9))
        break;
      v11 = v8;
      if (!swift_isUniquelyReferenced_nonNull_native() || v10 + v9 > *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_1C0050278();
        v7 = v12;
      }
      if (*(_QWORD *)(v11 + 16))
      {
        v13 = *(_QWORD *)(v7 + 16);
        if ((*(_QWORD *)(v7 + 24) >> 1) - v13 < v9)
          goto LABEL_24;
        v14 = v7 + v20 + v13 * v6;
        if (v11 + v20 < v14 + v9 * v6 && v14 < v11 + v20 + v9 * v6)
          goto LABEL_26;
        swift_arrayInitWithCopy();
        if (v9)
        {
          v16 = *(_QWORD *)(v7 + 16);
          v17 = __OFADD__(v16, v9);
          v18 = v16 + v9;
          if (v17)
            goto LABEL_25;
          *(_QWORD *)(v7 + 16) = v18;
        }
      }
      else if (v9)
      {
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
      v5 += v6;
      if (!--v3)
      {
        result = swift_bridgeObjectRelease();
        a2 = v19;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    result = sub_1C0304828();
    __break(1u);
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9D8];
LABEL_21:
    *a2 = v7;
  }
  return result;
}

uint64_t sub_1C0278C80(void *a1)
{
  id v1;

  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7281B0);
  return sub_1C0303EF8();
}

void sub_1C0278CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (qword_1ED727970 != -1)
    swift_once();
  v8 = sub_1C0303B98();
  __swift_project_value_buffer(v8, (uint64_t)&unk_1ED7295C8);
  v9 = sub_1C0303B80();
  v10 = sub_1C03042E8();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_1C0039000, v9, v10, "running FirstContactQuery", v11, 2u);
    MEMORY[0x1C3B98378](v11, -1, -1);
  }

  swift_beginAccess();
  v12 = *a4;
  swift_bridgeObjectRetain();
  sub_1C0279084(a3, v12);
  v14 = v13;
  swift_bridgeObjectRelease();
  if (!v4)
  {
    swift_beginAccess();
    *(_QWORD *)(a1 + 16) = v14;
    swift_bridgeObjectRelease();
    swift_retain_n();
    v15 = sub_1C0303B80();
    v16 = sub_1C03042E8();
    if (os_log_type_enabled(v15, v16))
    {
      v28 = v16;
      v17 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v31 = v27;
      *(_DWORD *)v17 = 136315138;
      swift_beginAccess();
      v18 = *(_QWORD *)(a1 + 16);
      swift_getKeyPath();
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        v26 = v17;
        v30 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1C00B1A78();
        v20 = 0;
        v21 = v30;
        do
        {
          swift_bridgeObjectRetain();
          swift_getAtKeyPath();
          swift_bridgeObjectRelease();
          v22 = *(_QWORD *)(v30 + 16);
          if (v22 >= *(_QWORD *)(v30 + 24) >> 1)
            sub_1C00B1A78();
          ++v20;
          *(_QWORD *)(v30 + 16) = v22 + 1;
          *(_QWORD *)(v30 + 8 * v22 + 32) = v29;
        }
        while (v19 != v20);
        swift_bridgeObjectRelease();
        swift_release();
        v17 = v26;
      }
      else
      {
        swift_release();
        v21 = MEMORY[0x1E0DEE9D8];
      }
      v23 = MEMORY[0x1C3B97040](v21, MEMORY[0x1E0DEB418]);
      v25 = v24;
      swift_bridgeObjectRelease();
      sub_1C003E6D8(v23, v25, &v31);
      sub_1C03044B0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0039000, v15, v28, "matches after FirstContactQuery: %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v27, -1, -1);
      MEMORY[0x1C3B98378](v17, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

void sub_1C0279084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  _QWORD v12[4];

  v4 = v2;
  if (qword_1ED727970 != -1)
    swift_once();
  v7 = sub_1C0303B98();
  v8 = __swift_project_value_buffer(v7, (uint64_t)&unk_1ED7295C8);
  sub_1C0303B80();
  v9 = OUTLINED_FUNCTION_9_1();
  if (OUTLINED_FUNCTION_16_2(v9))
  {
    v10 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1C0039000, v8, v3, "finding contact matches", v10, 2u);
    OUTLINED_FUNCTION_5();
  }

  MEMORY[0x1E0C80A78](v11);
  v12[2] = a1;
  v12[3] = v4;
  sub_1C01F15F4((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))sub_1C027E670, (uint64_t)v12, a2);
}

void sub_1C027918C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint8_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v4 = v3;
  v7 = (uint64_t *)(a2 + 16);
  swift_beginAccess();
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v9 = &unk_1ED727000;
  if (v8)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v10 = -v8;
    v11 = 4;
    v40 = v7;
    v41 = -v8;
    while (1)
    {
      v12 = v11 - 4;
      if ((unint64_t)(v11 - 4) >= *(_QWORD *)(*v7 + 16))
        break;
      if (!*(_QWORD *)(*(_QWORD *)(*v7 + 8 * v11) + 16))
      {
        v13 = v9[302];
        swift_bridgeObjectRetain();
        if (v13 != -1)
          swift_once();
        v14 = sub_1C0303B98();
        __swift_project_value_buffer(v14, (uint64_t)&unk_1ED7295C8);
        v15 = sub_1C0303B80();
        v16 = sub_1C03042E8();
        if (os_log_type_enabled(v15, v16))
        {
          v17 = v9;
          v18 = v4;
          v19 = a3;
          v20 = swift_slowAlloc();
          *(_DWORD *)v20 = 134217984;
          *(_QWORD *)(v20 + 4) = v12;
          _os_log_impl(&dword_1C0039000, v15, v16, "running SRRSearchProvider for query %ld", (uint8_t *)v20, 0xCu);
          v21 = v20;
          a3 = v19;
          v4 = v18;
          v9 = v17;
          v7 = v40;
          MEMORY[0x1C3B98378](v21, -1, -1);
        }

        sub_1C01EA510();
        v23 = v22;
        swift_bridgeObjectRelease();
        if (v4)
        {
          swift_bridgeObjectRelease();
          return;
        }
        swift_beginAccess();
        v24 = *v7;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v7 = v24;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C01F5B08();
          v24 = v26;
          *v7 = v26;
        }
        if (v12 >= *(_QWORD *)(v24 + 16))
          goto LABEL_29;
        *(_QWORD *)(v24 + 8 * v11) = v23;
        swift_endAccess();
        swift_bridgeObjectRelease();
        v10 = v41;
      }
      ++v11;
      if (v10 + v11 == 4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
  }
  else
  {
LABEL_16:
    if (v9[302] == -1)
      goto LABEL_17;
  }
  swift_once();
LABEL_17:
  v27 = sub_1C0303B98();
  __swift_project_value_buffer(v27, (uint64_t)&unk_1ED7295C8);
  swift_retain_n();
  v28 = sub_1C0303B80();
  v29 = sub_1C03042E8();
  if (os_log_type_enabled(v28, v29))
  {
    v43 = v29;
    v30 = (uint8_t *)swift_slowAlloc();
    v42 = swift_slowAlloc();
    v46 = v42;
    *(_DWORD *)v30 = 136315138;
    swift_beginAccess();
    v31 = *v7;
    swift_getKeyPath();
    v32 = *(_QWORD *)(v31 + 16);
    if (v32)
    {
      v39 = v30;
      v45 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1C00B1A78();
      v33 = 0;
      v34 = v45;
      do
      {
        swift_bridgeObjectRetain();
        swift_getAtKeyPath();
        swift_bridgeObjectRelease();
        v35 = *(_QWORD *)(v45 + 16);
        if (v35 >= *(_QWORD *)(v45 + 24) >> 1)
          sub_1C00B1A78();
        ++v33;
        *(_QWORD *)(v45 + 16) = v35 + 1;
        *(_QWORD *)(v45 + 8 * v35 + 32) = v44;
      }
      while (v32 != v33);
      swift_bridgeObjectRelease();
      swift_release();
      v30 = v39;
    }
    else
    {
      swift_release();
      v34 = MEMORY[0x1E0DEE9D8];
    }
    v36 = MEMORY[0x1C3B97040](v34, MEMORY[0x1E0DEB418]);
    v38 = v37;
    swift_bridgeObjectRelease();
    sub_1C003E6D8(v36, v38, &v46);
    sub_1C03044B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v28, v43, "matches after SRRSearchProvider: %s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v42, -1, -1);
    MEMORY[0x1C3B98378](v30, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

void sub_1C0279684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  __n128 *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_40_0();
  v20 = v3;
  v21 = v1;
  v5 = v4;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_160();
  if (qword_1ED728440 != -1)
    swift_once();
  v10 = (void *)qword_1ED729668;
  v11 = v0 + *(int *)(v8 + 20);
  *(_QWORD *)v11 = "ContactResolver.SearchByPartialName";
  *(_QWORD *)(v11 + 8) = 35;
  *(_BYTE *)(v11 + 16) = 2;
  v12 = v10;
  sub_1C0303B68();
  *(_QWORD *)(v0 + *(int *)(v8 + 24)) = v12;
  v13 = v12;
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v14 = (__n128 *)OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_70_10(v14, (__n128)xmmword_1C0305B60);
  v15 = OUTLINED_FUNCTION_23_0();
  v17 = v16;
  v14[3].n128_u64[1] = MEMORY[0x1E0DEA968];
  v14[4].n128_u64[0] = sub_1C00A6A70();
  v14[2].n128_u64[0] = v15;
  v14[2].n128_u64[1] = v17;
  OUTLINED_FUNCTION_35_18();
  OUTLINED_FUNCTION_142_1();
  OUTLINED_FUNCTION_17_0();

  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_10();
  *(_QWORD *)(v19 - 16) = v21;
  *(_QWORD *)(v19 - 8) = v20;
  OUTLINED_FUNCTION_74_1();
  OUTLINED_FUNCTION_22();
  sub_1C0271D54((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))sub_1C027E638, v2, v7, v5);
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_55_0();
  sub_1C03043D8();
  sub_1C0303B5C();
  sub_1C003DD84(v0, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  OUTLINED_FUNCTION_28_0();
}

void sub_1C027987C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_40_0();
  v3 = v0;
  v5 = v4;
  v37 = v6;
  v35 = v7;
  v8 = OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_6_0();
  v12 = v11 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2658);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_6_0();
  v16 = v15 - v14;
  v17 = type metadata accessor for HypocorismGenerator();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_21_0();
  v36 = v3;
  sub_1C0045DFC(v3, v16, &qword_1EF5C2658);
  if (__swift_getEnumTagSinglePayload(v16, 1, v17) == 1)
  {
    sub_1C0044B78(v16, &qword_1EF5C2658);
    type metadata accessor for InferenceError();
    swift_initStackObject();
    sub_1C026A508(9, 0, 0xE000000000000000, 0xD000000000000094, 0x80000001C03356F0, 0xD00000000000002BLL, 0x80000001C0335790, 423, MEMORY[0x1E0DEE9D8], 1);
    if (qword_1ED728430 != -1)
      swift_once();
    v19 = sub_1C0303B98();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED729650);
    sub_1C026A800();
    swift_release();
    OUTLINED_FUNCTION_22();
  }
  else
  {
    v34[1] = v1;
    sub_1C004555C(v16, v2, (uint64_t (*)(_QWORD))type metadata accessor for HypocorismGenerator);
    if (qword_1ED728440 != -1)
      swift_once();
    v20 = (void *)qword_1ED729668;
    v21 = v12 + *(int *)(v8 + 20);
    *(_QWORD *)v21 = "ContactResolver.SearchByHypocorism";
    *(_QWORD *)(v21 + 8) = 34;
    *(_BYTE *)(v21 + 16) = 2;
    v22 = v20;
    sub_1C0303B68();
    v34[0] = *(int *)(v8 + 24);
    *(_QWORD *)(v12 + v34[0]) = v22;
    v23 = v22;
    sub_1C03043E4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
    v24 = OUTLINED_FUNCTION_16_0();
    *(_OWORD *)(v24 + 16) = xmmword_1C0305B60;
    v25 = OUTLINED_FUNCTION_23_0();
    v27 = v26;
    *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v24 + 64) = sub_1C00A6A70();
    *(_QWORD *)(v24 + 32) = v25;
    *(_QWORD *)(v24 + 40) = v27;
    OUTLINED_FUNCTION_35_18();
    sub_1C0303B50();
    OUTLINED_FUNCTION_8_1();

    MEMORY[0x1E0C80A78](v28);
    v31 = v2;
    v32 = v36;
    v33 = v35;
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_22();
    sub_1C0271D54((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))sub_1C027E6D4, (uint64_t)&v34[-6], v37, v5);
    OUTLINED_FUNCTION_18();
    OUTLINED_FUNCTION_29_0();
    sub_1C03043D8();
    OUTLINED_FUNCTION_185_0();
    v29 = OUTLINED_FUNCTION_50_4();
    OUTLINED_FUNCTION_94(v29, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    OUTLINED_FUNCTION_187_0(v30, (uint64_t (*)(_QWORD))type metadata accessor for HypocorismGenerator);
  }
  OUTLINED_FUNCTION_28_0();
}

uint64_t sub_1C0279C4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  swift_beginAccess();
  v2 = OUTLINED_FUNCTION_44();
  v3 = sub_1C027149C(v2);
  result = OUTLINED_FUNCTION_33();
  *a1 = v3;
  return result;
}

void sub_1C0279CB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_40_0();
  v18 = v1;
  v3 = v2;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_160();
  if (qword_1ED728440 != -1)
    swift_once();
  v8 = (void *)qword_1ED729668;
  v9 = v0 + *(int *)(v6 + 20);
  *(_QWORD *)v9 = "ContactResolver.SearchByFoundInApps";
  *(_QWORD *)(v9 + 8) = 35;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = v8;
  sub_1C0303B68();
  *(_QWORD *)(v0 + *(int *)(v6 + 24)) = v10;
  v11 = v10;
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v12 = OUTLINED_FUNCTION_16_0();
  *(_OWORD *)(v12 + 16) = xmmword_1C0305B60;
  v13 = OUTLINED_FUNCTION_23_0();
  v15 = v14;
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v12 + 32) = v13;
  *(_QWORD *)(v12 + 40) = v15;
  OUTLINED_FUNCTION_35_18();
  OUTLINED_FUNCTION_142_1();
  OUTLINED_FUNCTION_31();

  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_10();
  *(_QWORD *)(v17 - 16) = v18;
  OUTLINED_FUNCTION_74_1();
  OUTLINED_FUNCTION_22();
  sub_1C0271A9C(v5, v3, sub_1C027E6F4);
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_55_0();
  sub_1C03043D8();
  sub_1C0303B5C();
  sub_1C003DD84(v0, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  OUTLINED_FUNCTION_28_0();
}

void sub_1C0279EA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  char *v17;
  id v18;
  id v19;
  char *v20;
  __n128 *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint8_t *v30;
  id v31;
  __n128 *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  __n128 *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void *v54;
  int *v55;
  char *v56;
  id v57;
  __n128 *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t *v63;
  uint64_t v64;
  id v65;
  __n128 *v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  __n128 v88;
  uint64_t v89;
  id v90[3];
  uint64_t v91;
  _UNKNOWN **v92;
  __int128 v93;
  ValueMetadata *v94;
  unint64_t v95;
  uint64_t v96[2];

  OUTLINED_FUNCTION_18_0();
  v89 = v0;
  v81 = v2;
  v87 = v3;
  type metadata accessor for IsRecentSignalProvider();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_58_0();
  v86 = sub_1C0303B74();
  v82 = *(_QWORD *)(v86 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_27();
  v78 = v6;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_37();
  v83 = v8;
  OUTLINED_FUNCTION_8_4();
  v9 = (int *)type metadata accessor for Signpost();
  OUTLINED_FUNCTION_12_0();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v74 - v14;
  if (qword_1ED728440 != -1)
    goto LABEL_39;
  while (1)
  {
    v16 = (void *)qword_1ED729668;
    v17 = &v15[v9[5]];
    *(_QWORD *)v17 = "ContactResolver.AddSignalsToContacts";
    *((_QWORD *)v17 + 1) = 36;
    v76 = v17;
    v17[16] = 2;
    v18 = v16;
    sub_1C0303B68();
    v79 = v9;
    v75 = v9[6];
    *(_QWORD *)&v15[v75] = v18;
    v19 = v18;
    sub_1C03043E4();
    v85 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
    v20 = v15;
    v21 = (__n128 *)OUTLINED_FUNCTION_7_3();
    v88 = (__n128)xmmword_1C0305B60;
    OUTLINED_FUNCTION_70_10(v21, (__n128)xmmword_1C0305B60);
    v22 = OUTLINED_FUNCTION_23_0();
    v24 = v23;
    v21[3].n128_u64[1] = MEMORY[0x1E0DEA968];
    v84 = sub_1C00A6A70();
    v21[4].n128_u64[0] = v84;
    v21[2].n128_u64[0] = v22;
    v21[2].n128_u64[1] = v24;
    OUTLINED_FUNCTION_35_18();
    v77 = (uint64_t)v20;
    sub_1C0303B50();
    OUTLINED_FUNCTION_33();

    if (qword_1ED727970 != -1)
      swift_once();
    v80 = v13;
    v25 = OUTLINED_FUNCTION_9_0();
    v26 = OUTLINED_FUNCTION_7(v25, (uint64_t)&unk_1ED7295C8);
    v27 = sub_1C03042E8();
    v28 = os_log_type_enabled(v26, v27);
    v29 = v89;
    if (v28)
    {
      v30 = (uint8_t *)OUTLINED_FUNCTION_6();
      *(_WORD *)v30 = 0;
      OUTLINED_FUNCTION_10_3(&dword_1C0039000, v26, v27, "Attempting to add signals to contact candidates", v30);
      OUTLINED_FUNCTION_5();
    }

    v96[0] = v81;
    v74 = type metadata accessor for ContactResolverConfig(0);
    LOWORD(v93) = *(_WORD *)&v87[*(int *)(v74 + 60)];
    OUTLINED_FUNCTION_44();
    sub_1C027CDD8();
    v31 = (id)qword_1ED729668;
    OUTLINED_FUNCTION_156_1();
    sub_1C03043E4();
    v32 = (__n128 *)OUTLINED_FUNCTION_7_3();
    v32[1] = v88;
    v33 = OUTLINED_FUNCTION_23_0();
    v34 = v84;
    v32[3].n128_u64[1] = MEMORY[0x1E0DEA968];
    v32[4].n128_u64[0] = v34;
    v32[2].n128_u64[0] = v33;
    v32[2].n128_u64[1] = v35;
    OUTLINED_FUNCTION_35_18();
    OUTLINED_FUNCTION_124_3();
    sub_1C0303B50();
    OUTLINED_FUNCTION_28();
    sub_1C01F2580(v96);
    sub_1C03043D8();
    OUTLINED_FUNCTION_124_3();
    sub_1C0303B5C();
    v82 = *(_QWORD *)(v82 + 8);
    ((void (*)(uint64_t, uint64_t))v82)(2, v86);

    v13 = (char *)v96[0];
    v15 = *(char **)(v96[0] + 16);
    if (v15)
    {
      OUTLINED_FUNCTION_32();
      v36 = 0;
      v37 = (uint64_t)v13;
      v9 = (int *)&qword_1ED726DB0;
      while (v36 < *((_QWORD *)v13 + 2))
      {
        if (*(_QWORD *)(*(_QWORD *)&v13[8 * v36 + 32] + 16) == 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C01F5B08();
            v37 = v43;
          }
          if (v36 >= *(_QWORD *)(v37 + 16))
            goto LABEL_37;
          v38 = v37 + 8 * v36;
          v39 = *(_QWORD *)(v38 + 32);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v38 + 32) = v39;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1C01F5AF8();
            v39 = v44;
            *(_QWORD *)(v38 + 32) = v44;
          }
          if (!*(_QWORD *)(v39 + 16))
            goto LABEL_38;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
          OUTLINED_FUNCTION_175_1();
          *(_BYTE *)(v39 + v41 + v42 + *(int *)(type metadata accessor for ContactResolver.SignalSet(0) + 224)) = 1;
          v96[0] = v37;
        }
        if (v15 == (char *)++v36)
        {
          swift_bridgeObjectRelease();
          v29 = v89;
          goto LABEL_19;
        }
      }
      __break(1u);
      goto LABEL_36;
    }
LABEL_19:
    v81 = OUTLINED_FUNCTION_176_1();
    v45 = (uint64_t *)(v29 + *(int *)(v81 + 20));
    v46 = v45[1];
    if (v46)
      sub_1C024DFBC(v96, *v45, v46);
    v47 = (id)qword_1ED729668;
    v48 = v78;
    sub_1C0303B68();
    sub_1C03043E4();
    v49 = (__n128 *)OUTLINED_FUNCTION_7_3();
    v49[1] = v88;
    v50 = OUTLINED_FUNCTION_23_0();
    v51 = v84;
    v49[3].n128_u64[1] = MEMORY[0x1E0DEA968];
    v49[4].n128_u64[0] = v51;
    v49[2].n128_u64[0] = v50;
    v49[2].n128_u64[1] = v52;
    OUTLINED_FUNCTION_35_18();
    v53 = v48;
    OUTLINED_FUNCTION_212();
    OUTLINED_FUNCTION_29();
    sub_1C027D2B0(v89, v96);
    v13 = v80;
    sub_1C03043D8();
    OUTLINED_FUNCTION_122_3();
    OUTLINED_FUNCTION_90_9(v53);

    sub_1C0301CF0();
    v54 = (void *)qword_1ED729668;
    v55 = v79;
    v56 = &v13[v79[5]];
    *(_QWORD *)v56 = "ContactResolver.IsRecentSignalProvider";
    *((_QWORD *)v56 + 1) = 38;
    v56[16] = 2;
    v57 = v54;
    sub_1C0303B68();
    *(_QWORD *)&v13[v55[6]] = v57;
    v9 = (int *)v57;
    sub_1C03043E4();
    v58 = (__n128 *)OUTLINED_FUNCTION_7_3();
    OUTLINED_FUNCTION_70_10(v58, v88);
    v59 = OUTLINED_FUNCTION_23_0();
    v58[3].n128_u64[1] = MEMORY[0x1E0DEA968];
    v58[4].n128_u64[0] = v51;
    v58[2].n128_u64[0] = v59;
    v58[2].n128_u64[1] = v60;
    OUTLINED_FUNCTION_35_18();
    OUTLINED_FUNCTION_212();
    swift_bridgeObjectRelease();

    v61 = v96[0];
    v15 = *(char **)(v96[0] + 16);
    if (!v15)
      break;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C01F5B08();
      v61 = v73;
    }
    v62 = 0;
    v63 = (uint64_t *)(v61 + 32);
    while ((unint64_t)v62 < *(_QWORD *)(v61 + 16))
    {
      ++v62;
      sub_1C005AAE0(v63++);
      if (v15 == v62)
      {
        v96[0] = v61;
        goto LABEL_28;
      }
    }
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    swift_once();
  }
LABEL_28:
  sub_1C03043D8();
  sub_1C0303B5C();
  sub_1C003DD84((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  sub_1C003DD84(v1, (uint64_t (*)(_QWORD))type metadata accessor for IsRecentSignalProvider);
  v64 = v81;
  if ((v87[*(int *)(v74 + 48)] & 1) != 0)
  {
    v65 = (id)qword_1ED729668;
    OUTLINED_FUNCTION_156_1();
    sub_1C03043E4();
    v66 = (__n128 *)OUTLINED_FUNCTION_7_3();
    v66[1] = v88;
    v67 = OUTLINED_FUNCTION_23_0();
    v66[3].n128_u64[1] = MEMORY[0x1E0DEA968];
    v66[4].n128_u64[0] = v51;
    v66[2].n128_u64[0] = v67;
    v66[2].n128_u64[1] = v68;
    OUTLINED_FUNCTION_35_18();
    OUTLINED_FUNCTION_125_2();
    sub_1C0303B50();
    OUTLINED_FUNCTION_29();
    sub_1C005C608(v96, *(_QWORD *)(v89 + *(int *)(v64 + 28)));
    sub_1C03043D8();
    OUTLINED_FUNCTION_125_2();
    sub_1C0303B5C();
    OUTLINED_FUNCTION_90_9((uint64_t)&unk_1ED729000);

  }
  LOBYTE(v93) = *v87;
  sub_1C004C1D4();
  if ((v69 & 1) != 0)
  {
    v70 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D34310]), sel_init);
    v91 = sub_1C00447B0(0, (unint64_t *)&qword_1EF5BA428);
    v92 = &off_1E7994C08;
    v90[0] = v70;
    sub_1C0124718((uint64_t)v90, &v93);
    sub_1C0124898(v96);
    sub_1C00F732C((uint64_t)&v93);
  }
  if (qword_1EF5B8038 != -1)
    swift_once();
  v71 = qword_1EF5FC7B0;
  v91 = type metadata accessor for MegadomeClient();
  v92 = &off_1E79A7230;
  v90[0] = (id)v71;
  v94 = &type metadata for ContactFeatures;
  v95 = sub_1C0041A44();
  LOBYTE(v93) = 7;
  OUTLINED_FUNCTION_44_7();
  sub_1C0302428();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v93);
  sub_1C02B7660();
  sub_1C005C9EC();
  sub_1C004D14C((uint64_t)&v93);
  sub_1C03043D8();
  v72 = v77;
  OUTLINED_FUNCTION_92_7();
  sub_1C0303B5C();
  sub_1C003DD84(v72, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  OUTLINED_FUNCTION_1();
}

void sub_1C027A8BC()
{
  NSObject *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_18_0();
  v2 = v1;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v35 = *(_QWORD *)(v42 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_27();
  v41 = v4;
  OUTLINED_FUNCTION_42();
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v33 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v33 - v9;
  if (qword_1ED727970 != -1)
    goto LABEL_31;
  while (1)
  {
    v11 = OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7(v11, (uint64_t)&unk_1ED7295C8);
    v12 = OUTLINED_FUNCTION_9_1();
    if (os_log_type_enabled(v0, v12))
    {
      v13 = (uint8_t *)OUTLINED_FUNCTION_6();
      *(_WORD *)v13 = 0;
      OUTLINED_FUNCTION_10_3(&dword_1C0039000, v0, v12, "Attempting to remove weak organization matches when stronger primary token matches exist.", v13);
      OUTLINED_FUNCTION_5();
    }

    v14 = v2[2];
    if (!v14)
      break;
    v44 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1960();
    v15 = 0;
    v36 = v2 + 4;
    v2 = &qword_1ED726DB0;
    v34 = v14;
    while (1)
    {
      v16 = v36[v15];
      v17 = *(_QWORD *)(v16 + 16);
      if (v17)
        break;
      OUTLINED_FUNCTION_74_1();
LABEL_24:
      v31 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_210();
        OUTLINED_FUNCTION_65_11();
        sub_1C00B1960();
        v31 = v44;
      }
      v32 = *(_QWORD *)(v31 + 16);
      if (v32 >= *(_QWORD *)(v31 + 24) >> 1)
      {
        sub_1C00B1960();
        v31 = v44;
      }
      ++v15;
      *(_QWORD *)(v31 + 16) = v32 + 1;
      *(_QWORD *)(v31 + 8 * v32 + 32) = v16;
      if (v15 == v14)
        goto LABEL_29;
    }
    v18 = v35;
    v19 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    v37 = v15;
    v38 = v19;
    v20 = v16 + v19;
    v40 = v16;
    swift_bridgeObjectRetain_n();
    v21 = *(_QWORD *)(v18 + 72);
    v22 = v20;
    v39 = v17;
    v23 = v17;
    while (1)
    {
      sub_1C0045DFC(v22, (uint64_t)v10, &qword_1ED726DB0);
      v24 = &v10[*(int *)(v42 + 36)];
      v25 = type metadata accessor for ContactResolver.SignalSet(0);
      LODWORD(v24) = v24[*(int *)(v25 + 132) + 14];
      sub_1C0044B78((uint64_t)v10, &qword_1ED726DB0);
      if ((_DWORD)v24 != 1)
        break;
      v22 += v21;
      if (!--v23)
      {
        v16 = v40;
        swift_bridgeObjectRelease();
LABEL_23:
        v15 = v37;
        goto LABEL_24;
      }
    }
    v26 = v40;
    OUTLINED_FUNCTION_29();
    v0 = MEMORY[0x1E0DEE9D8];
    v43 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    v27 = 0;
    v28 = v39;
    while (v27 < *(_QWORD *)(v26 + 16))
    {
      sub_1C0045DFC(v20, (uint64_t)v8, &qword_1ED726DB0);
      if ((v8[*(int *)(v42 + 36) + 14 + *(int *)(v25 + 132)] & 1) != 0)
      {
        sub_1C0044B78((uint64_t)v8, &qword_1ED726DB0);
      }
      else
      {
        sub_1C005A718((uint64_t)v8, v41, &qword_1ED726DB0);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_210();
          OUTLINED_FUNCTION_65_11();
          sub_1C00B1738();
        }
        v0 = v43;
        v30 = *(_QWORD *)(v43 + 16);
        v29 = *(_QWORD *)(v43 + 24);
        if (v30 >= v29 >> 1)
        {
          OUTLINED_FUNCTION_153_2(v29);
          sub_1C00B1738();
          v0 = v43;
        }
        v0[2].isa = (Class)(v30 + 1);
        sub_1C005A718(v41, (uint64_t)v0 + v38 + v30 * v21, &qword_1ED726DB0);
        v28 = v39;
        v26 = v40;
      }
      ++v27;
      v20 += v21;
      if (v28 == v27)
      {
        swift_bridgeObjectRelease_n();
        v16 = v43;
        v14 = v34;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_31:
    swift_once();
  }
LABEL_29:
  OUTLINED_FUNCTION_1();
}

void sub_1C027AC48()
{
  __n128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  __n128 *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  __n128 *v19;
  _WORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];
  __n128 *v25;
  uint64_t v26;
  __n128 *v27;
  uint64_t v28;

  OUTLINED_FUNCTION_18_0();
  v3 = v2;
  v5 = v4;
  v6 = type metadata accessor for Signpost();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v7);
  v8 = OUTLINED_FUNCTION_129_2();
  if (*(_BYTE *)(v5 + *(int *)(type metadata accessor for ContactResolverConfig(v8) + 56)) == 2)
  {
    v27 = v0;
    if (qword_1ED728440 != -1)
      swift_once();
    v9 = (void *)qword_1ED729668;
    v10 = v1 + *(int *)(v6 + 20);
    *(_QWORD *)v10 = "ContactResolver.SuggestedContactsFilter";
    *(_QWORD *)(v10 + 8) = 39;
    *(_BYTE *)(v10 + 16) = 2;
    v11 = v9;
    sub_1C0303B68();
    v26 = *(int *)(v6 + 24);
    *(_QWORD *)(v1 + v26) = v11;
    v12 = v11;
    sub_1C03043E4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
    v13 = (__n128 *)OUTLINED_FUNCTION_7_3();
    OUTLINED_FUNCTION_70_10(v13, (__n128)xmmword_1C0305B60);
    v14 = OUTLINED_FUNCTION_23_0();
    v16 = v15;
    v13[3].n128_u64[1] = MEMORY[0x1E0DEA968];
    v13[4].n128_u64[0] = sub_1C00A6A70();
    v13[2].n128_u64[0] = v14;
    v13[2].n128_u64[1] = v16;
    v25 = v13;
    v24[8] = 2;
    OUTLINED_FUNCTION_35_18();
    sub_1C0303B50();
    OUTLINED_FUNCTION_28();

    if (qword_1ED727970 != -1)
      swift_once();
    v17 = OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7(v17, (uint64_t)&unk_1ED7295C8);
    v18 = OUTLINED_FUNCTION_9_1();
    v19 = v27;
    if (OUTLINED_FUNCTION_37_1(v18))
    {
      v20 = (_WORD *)OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_15_21(v20);
      OUTLINED_FUNCTION_0_4(&dword_1C0039000, v21, v22, "filtering suggested contacts");
      OUTLINED_FUNCTION_5();
    }

    MEMORY[0x1E0C80A78](v23);
    v25 = v19;
    sub_1C01F078C((uint64_t)sub_1C027E70C, (uint64_t)v24, v3, (uint64_t)&v28);
    sub_1C03043D8();
    sub_1C0303B5C();
    sub_1C003DD84(v1, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  }
  else
  {
    OUTLINED_FUNCTION_44();
  }
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C027AEB0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t *a5@<X8>)
{
  void *v5;
  void *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Expander;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t *v28;
  const void *v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  uint8_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  BOOL v76;
  uint64_t *v77;
  uint64_t v78;
  uint8_t *v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t inited;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  char *v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  uint64_t *v119;
  uint64_t v120;
  uint8_t *v121;
  uint8_t *v122;
  uint64_t *v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128[16];
  _QWORD v129[2];
  _QWORD v130[33];
  _QWORD v131[34];

  v103 = a4;
  v104 = a3;
  v6 = v5;
  v105 = a2;
  v106 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StringTokenizer();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ContactResolver.SignalSet(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  Expander = type metadata accessor for PartialNameQueryExpander();
  MEMORY[0x1E0C80A78](Expander);
  v20 = (char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[1];
  if (*(_QWORD *)(v21 + 16))
  {
    *v106 = v21;
    return swift_bridgeObjectRetain();
  }
  v112 = v17;
  v124 = (uint64_t *)v14;
  v116 = v8;
  v102 = v9;
  v114 = v11;
  v23 = *a1;
  v24 = type metadata accessor for CandidateContactGenerator(0);
  sub_1C00638E8(v105 + *(int *)(v24 + 48), (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for PartialNameQueryExpander);
  v111 = *(_QWORD *)(v23 + 16);
  if (!v111)
  {
    v26 = MEMORY[0x1E0DEE9D8];
LABEL_58:
    sub_1C003DD84((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for PartialNameQueryExpander);
    if (qword_1ED727970 != -1)
      goto LABEL_79;
    goto LABEL_59;
  }
  v108 = (*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
  v110 = v23 + v108;
  v115 = *(_QWORD *)(v102 + 72);
  v119 = v128;
  v101 = v23;
  swift_bridgeObjectRetain();
  v25 = 0;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v27 = 136315138;
  v118 = v27;
  v117 = MEMORY[0x1E0DEE9B8] + 8;
  v28 = v124;
  v107 = v20;
  while (1)
  {
    v120 = v25;
    v29 = (const void *)(v110 + v115 * v25);
    v30 = (uint64_t)v29 + *(int *)(v116 + 36);
    if ((*(_BYTE *)(v30 + 336) & 1) == 0)
      break;
    v31 = MEMORY[0x1E0DEE9D8];
LABEL_39:
    v65 = *(_QWORD *)(v31 + 16);
    v66 = v26;
    v26 = *(_QWORD *)(v26 + 16);
    if (__OFADD__(v26, v65))
      goto LABEL_75;
    if (swift_isUniquelyReferenced_nonNull_native() && v26 + v65 <= *(_QWORD *)(v66 + 24) >> 1)
    {
      v26 = v66;
    }
    else
    {
      sub_1C0050278();
      v26 = v67;
    }
    if (*(_QWORD *)(v31 + 16))
    {
      v68 = *(_QWORD *)(v26 + 16);
      if ((*(_QWORD *)(v26 + 24) >> 1) - v68 < v65)
        goto LABEL_77;
      v69 = v26 + v108 + v68 * v115;
      if (v31 + v108 < v69 + v65 * v115 && v69 < v31 + v108 + v65 * v115)
      {
LABEL_80:
        result = sub_1C0304828();
        __break(1u);
        return result;
      }
      swift_arrayInitWithCopy();
      if (v65)
      {
        v71 = *(_QWORD *)(v26 + 16);
        v61 = __OFADD__(v71, v65);
        v72 = v71 + v65;
        if (v61)
          goto LABEL_78;
        *(_QWORD *)(v26 + 16) = v72;
      }
    }
    else if (v65)
    {
      goto LABEL_76;
    }
    swift_bridgeObjectRelease();
    v25 = v120 + 1;
    if (v120 + 1 == v111)
    {
      swift_bridgeObjectRelease();
      goto LABEL_58;
    }
  }
  v113 = v26;
  v32 = (uint64_t)v112;
  sub_1C00638E8(v30, (uint64_t)v112, type metadata accessor for ContactResolver.SignalSet);
  *(_BYTE *)(v32 + 335) = 1;
  memcpy(v131, v29, 0x108uLL);
  sub_1C00638E8((uint64_t)v20, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
  memcpy(v130, v131, sizeof(v130));
  sub_1C003F648(v131);
  v33 = sub_1C004EDE0();
  v34 = *(_QWORD *)(v33 + 16);
  v109 = v33;
  if (!v34)
  {
    v26 = MEMORY[0x1E0DEE9D8];
LABEL_38:
    swift_bridgeObjectRelease();
    v63 = sub_1C01AACEC(v26);
    sub_1C0040644(v131);
    sub_1C003DD84((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
    v64 = (uint64_t)v112;
    v31 = sub_1C027158C(v63, (uint64_t)v112);
    swift_bridgeObjectRelease();
    sub_1C003DD84(v64, type metadata accessor for ContactResolver.SignalSet);
    v26 = v113;
    v20 = v107;
    goto LABEL_39;
  }
  v35 = (uint64_t *)(v33 + 40);
  v26 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v36 = *v35;
    v129[0] = *(v35 - 1);
    v129[1] = v36;
    swift_bridgeObjectRetain_n();
    sub_1C00E5A34(v129);
    v37 = *v28;
    v126 = v34;
    if (!v37)
    {
      v50 = sub_1C004F310();
      swift_bridgeObjectRelease();
LABEL_17:
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    v125 = v36;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C03024AC();
    if (!v6)
    {
      v51 = swift_bridgeObjectRelease();
      v123 = &v100;
      MEMORY[0x1E0C80A78](v51);
      v52 = v124;
      sub_1C00E4994();
      v50 = v53;
      swift_release();
      swift_bridgeObjectRelease();
      v28 = v52;
      swift_release();
      goto LABEL_17;
    }
    swift_bridgeObjectRelease();
    if (qword_1ED727970 != -1)
      swift_once();
    v38 = sub_1C0303B98();
    __swift_project_value_buffer(v38, (uint64_t)&unk_1ED7295C8);
    v39 = v6;
    v40 = v6;
    v41 = sub_1C0303B80();
    v42 = sub_1C03042F4();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v122 = v43;
      v123 = (uint64_t *)v44;
      v127 = (uint64_t)v6;
      v128[0] = v44;
      *(_DWORD *)v43 = v118;
      v121 = v43 + 4;
      v45 = v6;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7281B0);
      v46 = sub_1C0303EF8();
      v127 = sub_1C003E6D8(v46, v47, v128);
      sub_1C03044B0();
      swift_bridgeObjectRelease();

      v48 = v122;
      _os_log_impl(&dword_1C0039000, v41, v42, "morphun tokenizer failed: %s", v122, 0xCu);
      v49 = v123;
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v49, -1, -1);
      MEMORY[0x1C3B98378](v48, -1, -1);
    }
    else
    {

    }
    v28 = v124;
    v50 = sub_1C004F310();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_release();
    v6 = 0;
LABEL_20:
    v54 = *(_QWORD *)(v50 + 16);
    v55 = *(_QWORD *)(v26 + 16);
    if (__OFADD__(v55, v54))
      break;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0 || v55 + v54 > *(_QWORD *)(v26 + 24) >> 1)
    {
      sub_1C00500A0();
      v26 = v56;
    }
    if (*(_QWORD *)(v50 + 16))
    {
      v57 = *(_QWORD *)(v26 + 16);
      if ((*(_QWORD *)(v26 + 24) >> 1) - v57 < v54)
        goto LABEL_73;
      v58 = v26 + 16 * v57 + 32;
      if (v50 + 32 < v58 + 16 * v54 && v58 < v50 + 32 + 16 * v54)
        goto LABEL_80;
      swift_arrayInitWithCopy();
      if (v54)
      {
        v60 = *(_QWORD *)(v26 + 16);
        v61 = __OFADD__(v60, v54);
        v62 = v60 + v54;
        if (v61)
          goto LABEL_74;
        *(_QWORD *)(v26 + 16) = v62;
      }
    }
    else if (v54)
    {
      goto LABEL_72;
    }
    v35 += 2;
    swift_bridgeObjectRelease();
    v34 = v126 - 1;
    if (v126 == 1)
      goto LABEL_38;
  }
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  swift_once();
LABEL_59:
  v73 = sub_1C0303B98();
  __swift_project_value_buffer(v73, (uint64_t)&unk_1ED7295C8);
  swift_bridgeObjectRetain();
  v74 = sub_1C0303B80();
  v75 = sub_1C03042E8();
  v76 = os_log_type_enabled(v74, v75);
  v77 = v106;
  if (v76)
  {
    v78 = v26;
    v79 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v79 = 134217984;
    v131[0] = *(_QWORD *)(v78 + 16);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v74, v75, "queries after PartialNameQueryExpander: %ld", v79, 0xCu);
    v80 = v79;
    v26 = v78;
    MEMORY[0x1C3B98378](v80, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  v81 = v104;
  v130[0] = MEMORY[0x1E0DEE9E8];
  v82 = *(_QWORD *)(v26 + 16);
  v113 = v26;
  if (v82)
  {
    v83 = v26 + ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80));
    v84 = *(_QWORD *)(v102 + 72);
    swift_bridgeObjectRetain();
    v85 = (uint64_t)v114;
    do
    {
      sub_1C0045DFC(v83, v85, (uint64_t *)&unk_1ED726D98);
      v86 = *(_QWORD *)(v85 + 56);
      v87 = *(_QWORD *)(v85 + 64);
      swift_bridgeObjectRetain();
      sub_1C022D204((uint64_t)v131, v86, v87, v88, v89, v90, v91, v92, v100, v101);
      v85 = (uint64_t)v114;
      swift_bridgeObjectRelease();
      sub_1C0044B78(v85, (uint64_t *)&unk_1ED726D98);
      v83 += v84;
      --v82;
    }
    while (v82);
    v26 = v113;
    swift_bridgeObjectRelease();
    v81 = v104;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED727040);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
  *(_QWORD *)(inited + 32) = v26;
  swift_bridgeObjectRetain();
  sub_1C0279084(v81, inited);
  if (v6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    result = sub_1C004F078();
    *v103 = v6;
  }
  else
  {
    v95 = v94;
    swift_setDeallocating();
    sub_1C004F078();
    if (*(_QWORD *)(v95 + 16))
      swift_bridgeObjectRetain();
    v96 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v96);
    sub_1C0270958();
    v98 = v97;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED728180);
    v99 = swift_initStackObject();
    *(_OWORD *)(v99 + 16) = xmmword_1C03084B0;
    *(_QWORD *)(v99 + 32) = 0xD00000000000001DLL;
    *(_QWORD *)(v99 + 40) = 0x80000001C03356B0;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v99 + 48) = sub_1C030427C();
    *(_QWORD *)(v99 + 56) = 0xD00000000000001CLL;
    *(_QWORD *)(v99 + 64) = 0x80000001C03356D0;
    *(_QWORD *)(v99 + 72) = sub_1C030427C();
    sub_1C00447B0(0, (unint64_t *)&qword_1ED728130);
    sub_1C0303DB4();
    sub_1C0071A5C();
    result = swift_bridgeObjectRelease();
    *v77 = v98;
  }
  return result;
}

uint64_t sub_1C027BA68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Expander;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a3;
  Expander = type metadata accessor for PartialNameQueryExpander();
  MEMORY[0x1E0C80A78](Expander);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StringTokenizer();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CandidateContactGenerator(0);
  sub_1C00638E8(a2 + *(int *)(v11 + 48), (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for PartialNameQueryExpander);
  sub_1C004555C((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
  v12 = sub_1C0203A74();
  v13 = *(_QWORD *)(v12 + 16);
  v33 = v3;
  v31 = v12;
  if (v13)
  {
    v14 = (uint64_t *)(v12 + 40);
    v15 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v16 = *(v14 - 1);
      v17 = *v14;
      swift_bridgeObjectRetain();
      v18 = StringTokenizer.tokenize(_:useMorphun:removeEmojis:)(v16, v17, 1, 1);
      swift_bridgeObjectRelease();
      v19 = *(_QWORD *)(v18 + 16);
      v20 = *(_QWORD *)(v15 + 16);
      if (__OFADD__(v20, v19))
        break;
      if (!swift_isUniquelyReferenced_nonNull_native() || v20 + v19 > *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_1C00500A0();
        v15 = v21;
      }
      if (*(_QWORD *)(v18 + 16))
      {
        v22 = *(_QWORD *)(v15 + 16);
        if ((*(_QWORD *)(v15 + 24) >> 1) - v22 < v19)
          goto LABEL_24;
        v23 = v15 + 16 * v22 + 32;
        if (v18 + 32 < v23 + 16 * v19 && v23 < v18 + 32 + 16 * v19)
          goto LABEL_26;
        swift_arrayInitWithCopy();
        if (v19)
        {
          v25 = *(_QWORD *)(v15 + 16);
          v26 = __OFADD__(v25, v19);
          v27 = v25 + v19;
          if (v26)
            goto LABEL_25;
          *(_QWORD *)(v15 + 16) = v27;
        }
      }
      else if (v19)
      {
        goto LABEL_23;
      }
      v14 += 2;
      swift_bridgeObjectRelease();
      if (!--v13)
        goto LABEL_21;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    result = sub_1C0304828();
    __break(1u);
  }
  else
  {
    v15 = MEMORY[0x1E0DEE9D8];
LABEL_21:
    swift_bridgeObjectRelease();
    v28 = sub_1C01AACEC(v15);
    sub_1C003DD84((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
    v29 = sub_1C01F22D0(v32, v28);
    swift_bridgeObjectRelease();
    return v29 & 1;
  }
  return result;
}

uint64_t sub_1C027BD20@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint64_t *v27;
  uint8_t *v28;
  uint64_t result;
  char *v30;
  uint64_t v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t inited;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t *v67;
  uint64_t v68;

  v66 = a5;
  v67 = a6;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726D98);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for HypocorismGenerator();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1C0303B74();
  v19 = MEMORY[0x1E0C80A78](v18);
  v22 = a1[1];
  if (*(_QWORD *)(v22 + 16))
  {
    if (qword_1ED727970 != -1)
      swift_once();
    v23 = sub_1C0303B98();
    __swift_project_value_buffer(v23, (uint64_t)&unk_1ED7295C8);
    v24 = sub_1C0303B80();
    v25 = sub_1C03042E8();
    v26 = os_log_type_enabled(v24, v25);
    v27 = v67;
    if (v26)
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1C0039000, v24, v25, "Skipping hypocorism expander since matches are already present", v28, 2u);
      MEMORY[0x1C3B98378](v28, -1, -1);
    }

    *v27 = v22;
    return swift_bridgeObjectRetain();
  }
  else
  {
    v58 = a2;
    v30 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    v57 = v12;
    v60 = v21;
    v61 = v19;
    v63 = a4;
    v64 = a3;
    v65 = v6;
    v31 = *a1;
    if (qword_1ED728440 != -1)
      swift_once();
    v32 = (id)qword_1ED729668;
    v33 = v30;
    sub_1C0303B68();
    LODWORD(v59) = sub_1C03043E4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
    v34 = swift_allocObject();
    v62 = xmmword_1C0305B60;
    *(_OWORD *)(v34 + 16) = xmmword_1C0305B60;
    v35 = sub_1C03046E4();
    v37 = v36;
    *(_QWORD *)(v34 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v34 + 64) = sub_1C00A6A70();
    *(_QWORD *)(v34 + 32) = v35;
    *(_QWORD *)(v34 + 40) = v37;
    v59 = v32;
    sub_1C0303B50();
    swift_bridgeObjectRelease();
    sub_1C00638E8(v58, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for HypocorismGenerator);
    v68 = MEMORY[0x1E0DEE9D8];
    v38 = *(_QWORD *)(v31 + 16);
    if (v38)
    {
      v39 = v31 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
      v40 = v31;
      v41 = *(_QWORD *)(v57 + 72);
      v58 = v40;
      swift_bridgeObjectRetain();
      do
      {
        sub_1C0045DFC(v39, (uint64_t)v14, (uint64_t *)&unk_1ED726D98);
        sub_1C01A91A4(v14);
        sub_1C0044B78((uint64_t)v14, (uint64_t *)&unk_1ED726D98);
        sub_1C004F9C0();
        v39 += v41;
        --v38;
      }
      while (v38);
      v42 = v68;
    }
    else
    {
      swift_bridgeObjectRetain();
      v42 = MEMORY[0x1E0DEE9D8];
    }
    sub_1C003DD84((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for HypocorismGenerator);
    swift_bridgeObjectRelease();
    sub_1C03043D8();
    v43 = v59;
    sub_1C0303B5C();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v33, v61);

    v44 = v65;
    if (qword_1ED727970 != -1)
      swift_once();
    v45 = sub_1C0303B98();
    __swift_project_value_buffer(v45, (uint64_t)&unk_1ED7295C8);
    swift_bridgeObjectRetain();
    v46 = sub_1C0303B80();
    v47 = sub_1C03042E8();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v48 = 134217984;
      v68 = *(_QWORD *)(v42 + 16);
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0039000, v46, v47, "queries after HypocorismNameExpander: %ld", v48, 0xCu);
      MEMORY[0x1C3B98378](v48, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
    v49 = v63;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED727040);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v62;
    *(_QWORD *)(inited + 32) = v42;
    swift_bridgeObjectRetain();
    sub_1C0279084(v49, inited);
    if (v44)
    {
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      result = sub_1C004F078();
      *v66 = v44;
    }
    else
    {
      v52 = v51;
      swift_setDeallocating();
      sub_1C004F078();
      if (*(_QWORD *)(v52 + 16))
      {
        v53 = *(_QWORD *)(v52 + 32);
        swift_bridgeObjectRetain();
      }
      else
      {
        v53 = MEMORY[0x1E0DEE9D8];
      }
      v54 = v67;
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED728180);
      v55 = swift_initStackObject();
      *(_OWORD *)(v55 + 16) = xmmword_1C03084B0;
      *(_QWORD *)(v55 + 32) = 0xD00000000000001CLL;
      *(_QWORD *)(v55 + 40) = 0x80000001C0335850;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v55 + 48) = sub_1C030427C();
      *(_QWORD *)(v55 + 56) = 0xD00000000000001BLL;
      *(_QWORD *)(v55 + 64) = 0x80000001C0335870;
      *(_QWORD *)(v55 + 72) = sub_1C030427C();
      sub_1C00447B0(0, (unint64_t *)&qword_1ED728130);
      sub_1C0303DB4();
      sub_1C0071A5C();
      result = swift_bridgeObjectRelease();
      *v54 = v53;
    }
  }
  return result;
}

uint64_t sub_1C027C3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t inited;

  if (*(_QWORD *)(a2 + 16))
  {
    v4 = a2;
    swift_bridgeObjectRetain();
  }
  else
  {
    v4 = a3 + *(int *)(type metadata accessor for CandidateContactGenerator(0) + 52);
    v6 = sub_1C01C93A8(a1);
    if (!v3)
    {
      v4 = v6;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED728180);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
      *(_QWORD *)(inited + 32) = 0xD000000000000016;
      *(_QWORD *)(inited + 40) = 0x80000001C0335900;
      *(_QWORD *)(inited + 48) = sub_1C030427C();
      sub_1C00447B0(0, (unint64_t *)&qword_1ED728130);
      sub_1C0303DB4();
      sub_1C0071A5C();
      swift_bridgeObjectRelease();
    }
  }
  return v4;
}

uint64_t sub_1C027C510@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  type metadata accessor for CandidateContactGenerator(0);
  result = sub_1C00917EC(v3);
  *a2 = result;
  return result;
}

uint64_t sub_1C027C570@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v51 = a5;
  v10 = type metadata accessor for ContactsFrameworkMatcher();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = *a1;
  v61 = MEMORY[0x1E0DEE9D8];
  v60 = MEMORY[0x1E0DEE9D8];
  v13 = (int *)type metadata accessor for ContactResolverConfig(0);
  if (*(_BYTE *)(a2 + v13[12]) == 1)
  {
    v14 = type metadata accessor for CandidateContactGenerator(0);
    sub_1C00638E8(a3 + *(int *)(v14 + 36), (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ContactsFrameworkMatcher);
    if (!*(_BYTE *)(a2 + v13[14]))
    {
      sub_1C003DD84((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ContactsFrameworkMatcher);
      sub_1C00638E8(a3 + *(int *)(v14 + 52), (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ContactsFrameworkMatcher);
    }
    v15 = sub_1C01C93A8(v52);
    if (v5)
    {
      sub_1C003DD84((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ContactsFrameworkMatcher);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *a4 = v5;
      return result;
    }
    v17 = v15;
    swift_bridgeObjectRelease();
    v61 = v17;
    if (qword_1ED727970 != -1)
      swift_once();
    v50 = 0;
    v18 = sub_1C0303B98();
    __swift_project_value_buffer(v18, (uint64_t)&unk_1ED7295C8);
    v19 = sub_1C0303B80();
    v20 = sub_1C03042E8();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v21 = 134217984;
      swift_beginAccess();
      v57 = *(_QWORD *)(v61 + 16);
      sub_1C03044B0();
      _os_log_impl(&dword_1C0039000, v19, v20, "found %ld 1p candidates", v21, 0xCu);
      MEMORY[0x1C3B98378](v21, -1, -1);
    }

    sub_1C003DD84((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ContactsFrameworkMatcher);
  }
  else
  {
    v50 = v5;
  }
  v22 = *(_QWORD *)(a2 + v13[11]);
  v23 = *(_QWORD *)(v22 + 16);
  if (!v23)
  {
    v27 = MEMORY[0x1E0DEE9D8];
LABEL_26:
    v34 = v52;
    goto LABEL_27;
  }
  v48 = a3;
  swift_bridgeObjectRetain();
  v24 = sub_1C004F444();
  v25 = sub_1C004F480();
  v49 = v22;
  v26 = (uint64_t *)(v22 + 40);
  v27 = MEMORY[0x1E0DEE9D8];
  v53 = v25;
  v54 = v24;
  do
  {
    v29 = *(v26 - 1);
    v28 = *v26;
    v57 = v29;
    v58 = v28;
    v55 = 0x6C7070612E6D6F63;
    v56 = 0xEA00000000002E65;
    swift_bridgeObjectRetain();
    if ((sub_1C0303E44() & 1) != 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v59 = v27;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C00B1764();
        v27 = v59;
      }
      v31 = *(_QWORD *)(v27 + 16);
      if (v31 >= *(_QWORD *)(v27 + 24) >> 1)
      {
        sub_1C00B1764();
        v27 = v59;
      }
      *(_QWORD *)(v27 + 16) = v31 + 1;
      v32 = v27 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v29;
      *(_QWORD *)(v32 + 40) = v28;
    }
    v26 += 2;
    --v23;
  }
  while (v23);
  v33 = v49;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v33 + 16))
    goto LABEL_26;
  v34 = v52;
  if (*(_QWORD *)(v27 + 16))
  {
LABEL_27:
    swift_bridgeObjectRelease();
    if (qword_1ED727970 != -1)
      swift_once();
    v35 = sub_1C0303B98();
    __swift_project_value_buffer(v35, (uint64_t)&unk_1ED7295C8);
    v36 = sub_1C0303B80();
    v37 = sub_1C03042E8();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_1C0039000, v36, v37, "Attempting search for 3p contacts", v38, 2u);
      MEMORY[0x1C3B98378](v38, -1, -1);
    }

    type metadata accessor for CandidateContactGenerator(0);
    v39 = sub_1C01AACEC(v27);
    sub_1C0137F88(v34, v39);
    v41 = v40;
    swift_bridgeObjectRelease();
    v60 = v41;
    swift_bridgeObjectRetain();
    v42 = sub_1C0303B80();
    v43 = sub_1C03042E8();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v44 = 134217984;
      v57 = *(_QWORD *)(v41 + 16);
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0039000, v42, v43, "found %ld 3p candidates", v44, 0xCu);
      MEMORY[0x1C3B98378](v44, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
    goto LABEL_34;
  }
  swift_release();
LABEL_34:
  v45 = v51;
  swift_beginAccess();
  swift_beginAccess();
  sub_1C004F764();
  swift_endAccess();
  v46 = swift_bridgeObjectRetain();
  v47 = sub_1C027CB94(v46);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *v45 = v47;
  return result;
}

uint64_t sub_1C027CB94(uint64_t a1)
{
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  unsigned __int8 v23[8];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = a1;
  if (!*(_QWORD *)(a1 + 16)
    || (__swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0),
        OUTLINED_FUNCTION_175_1(),
        v5 = (_QWORD *)(v2 + v3 + v4),
        (v6 = v5[27]) == 0))
  {
LABEL_13:
    OUTLINED_FUNCTION_44();
    return v2;
  }
  v7 = v5[29];
  v8 = v5[30];
  v9 = v5[28];
  v10 = v5[25];
  v11 = v5[26];
  v23[0] = v10;
  v24 = v11;
  v25 = v6;
  v26 = v9;
  v27 = v7;
  v28 = v8;
  sub_1C003F79C(v10, v11, v6);
  v12 = OUTLINED_FUNCTION_44();
  sub_1C0270744(v12, v23);
  v14 = v13;
  if (!*(_QWORD *)(v13 + 16))
  {
    OUTLINED_FUNCTION_29();
    if (qword_1ED727970 != -1)
      swift_once();
    v19 = OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7(v19, (uint64_t)&unk_1ED7295C8);
    v20 = OUTLINED_FUNCTION_9_1();
    if (os_log_type_enabled(v1, v20))
    {
      v21 = (uint8_t *)OUTLINED_FUNCTION_6();
      *(_WORD *)v21 = 0;
      OUTLINED_FUNCTION_10_3(&dword_1C0039000, v1, v20, "Filtered the candidate contacts down to none based on handles. Returning the original results.", v21);
      OUTLINED_FUNCTION_5();
    }

    goto LABEL_13;
  }
  if (qword_1ED727970 != -1)
    swift_once();
  v15 = OUTLINED_FUNCTION_9_0();
  v16 = __swift_project_value_buffer(v15, (uint64_t)&unk_1ED7295C8);
  OUTLINED_FUNCTION_44();
  swift_bridgeObjectRetain();
  sub_1C0303B80();
  v17 = OUTLINED_FUNCTION_9_1();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    *(_DWORD *)v18 = 134218240;
    OUTLINED_FUNCTION_202();
    OUTLINED_FUNCTION_33();
    *(_WORD *)(v18 + 12) = 2048;
    OUTLINED_FUNCTION_202();
    OUTLINED_FUNCTION_29();
    _os_log_impl(&dword_1C0039000, v16, v17, "Filtered the contacts from %ld candidates to %ld candidates by handles.", (uint8_t *)v18, 0x16u);
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_33();
  return v14;
}

void sub_1C027CDC4()
{
  sub_1C027350C();
}

void sub_1C027CDD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int16 *v3;
  unsigned __int16 *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  uint64_t v18;
  unint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t *v65;
  unint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  unint64_t v73;
  uint64_t *v74;
  uint64_t v75[2];
  char v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  OUTLINED_FUNCTION_18_0();
  v84 = v1;
  v85 = v2;
  v4 = v3;
  v6 = v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DA8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_129_2();
  v68 = type metadata accessor for Contact();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_53();
  v67 = v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726F18);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_53();
  v63 = v13;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726F20);
  OUTLINED_FUNCTION_12_0();
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (unint64_t *)((char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v19 = (unint64_t *)((char *)&v58 - v18);
  v74 = v6;
  v20 = *v6;
  v59 = *(_QWORD *)(*v6 + 16);
  if (v59)
  {
    v72 = *v4;
    v60 = v20 + 32;
    v61 = v20;
    swift_bridgeObjectRetain();
    v21 = 0;
    v64 = v11;
    v66 = v17;
    v65 = v19;
    while (2)
    {
      if (v21 >= *(_QWORD *)(v61 + 16))
      {
LABEL_35:
        __break(1u);
      }
      else
      {
        v22 = *(_QWORD *)(v60 + 8 * v21);
        v73 = v21;
        v62 = v21 + 1;
        v70 = *(_QWORD *)(v22 + 16);
        OUTLINED_FUNCTION_31_6();
        v23 = 0;
        v69 = v22;
        while (1)
        {
          if (v23 == v70)
          {
            v24 = 1;
            v25 = v70;
          }
          else
          {
            if ((v23 & 0x8000000000000000) != 0)
              goto LABEL_33;
            if (v23 >= *(_QWORD *)(v22 + 16))
              goto LABEL_34;
            v71 = v23 + 1;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
            OUTLINED_FUNCTION_6_21();
            v28 = v63 + *(int *)(v11 + 48);
            sub_1C0045DFC(v22 + v26 + *(_QWORD *)(v27 + 72) * v23, v28, &qword_1ED726DB0);
            v29 = (uint64_t)v17 + *(int *)(v11 + 48);
            *v17 = v23;
            sub_1C005A718(v28, v29, &qword_1ED726DB0);
            v24 = 0;
            v25 = v71;
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v17, v24, 1, v11);
          sub_1C005A718((uint64_t)v17, (uint64_t)v19, (uint64_t *)&unk_1ED726F20);
          if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v11) == 1)
            break;
          v71 = v25;
          v30 = *v19;
          v31 = (uint64_t)v19 + *(int *)(v11 + 48);
          v32 = v67;
          sub_1C00638E8(v31, v67, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
          sub_1C0044B78(v31, &qword_1ED726DB0);
          v33 = *(_QWORD *)(v32 + *(int *)(v68 + 80));
          OUTLINED_FUNCTION_45_0();
          sub_1C003DD84(v32, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
          v34 = *(_QWORD *)(v33 + 16);
          if (v34)
          {
            v83 = MEMORY[0x1E0DEE9D8];
            sub_1C00B198C();
            v35 = 0;
            v36 = v83;
            do
            {
              v37 = *(_QWORD *)(v33 + v35 + 40);
              v38 = *(_BYTE *)(v33 + v35 + 48);
              v39 = *(_OWORD *)(v33 + v35 + 56);
              v40 = *(_OWORD *)(v33 + v35 + 72);
              v41 = *(_QWORD *)(v33 + v35 + 88);
              v42 = *(_QWORD *)(v33 + v35 + 96);
              v43 = *(_BYTE *)(v33 + v35 + 104);
              v44 = *(_BYTE *)(v33 + v35 + 105);
              v75[0] = *(_QWORD *)(v33 + v35 + 32);
              v75[1] = v37;
              v76 = v38;
              v77 = v39;
              v78 = v40;
              v79 = v41;
              v80 = v42;
              v81 = v43;
              v82 = v44;
              sub_1C027D570(v75, v72, v74, v73, v30, v0);
              v83 = v36;
              v46 = *(_QWORD *)(v36 + 16);
              v45 = *(_QWORD *)(v36 + 24);
              if (v46 >= v45 >> 1)
              {
                OUTLINED_FUNCTION_153_2(v45);
                sub_1C00B198C();
                v36 = v83;
              }
              *(_QWORD *)(v36 + 16) = v46 + 1;
              sub_1C005A718(v0, v36+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v46, &qword_1ED726DA8);
              v35 += 80;
              --v34;
            }
            while (v34);
            OUTLINED_FUNCTION_28();
            v11 = v64;
          }
          else
          {
            OUTLINED_FUNCTION_28();
            v36 = MEMORY[0x1E0DEE9D8];
          }
          v47 = *v74;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v49 = v73;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1C01F5B08();
            v47 = v56;
          }
          if (v49 >= *(_QWORD *)(v47 + 16))
          {
            __break(1u);
LABEL_31:
            __break(1u);
LABEL_32:
            __break(1u);
LABEL_33:
            __break(1u);
LABEL_34:
            __break(1u);
            goto LABEL_35;
          }
          v50 = v11;
          v51 = *(_QWORD *)(v47 + 32 + 8 * v49);
          v52 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v47 + 32 + 8 * v49) = v51;
          if ((v52 & 1) != 0)
          {
            if ((v30 & 0x8000000000000000) != 0)
              goto LABEL_32;
          }
          else
          {
            sub_1C01F5AF8();
            v51 = v57;
            *(_QWORD *)(v47 + 32 + 8 * v73) = v57;
            if ((v30 & 0x8000000000000000) != 0)
              goto LABEL_32;
          }
          if (v30 >= *(_QWORD *)(v51 + 16))
            goto LABEL_31;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
          OUTLINED_FUNCTION_6_21();
          *(_QWORD *)(v51 + v53 + *(_QWORD *)(v54 + 72) * v30 + *(int *)(v55 + 36) + 272) = v36;
          swift_bridgeObjectRelease();
          *v74 = v47;
          v17 = v66;
          v19 = v65;
          v22 = v69;
          v11 = v50;
          v23 = v71;
        }
        swift_bridgeObjectRelease();
        v21 = v62;
        if (v62 != v59)
          continue;
        swift_bridgeObjectRelease();
      }
      break;
    }
  }
}

void sub_1C027D2B0(uint64_t a1, uint64_t *a2)
{
  void *v2;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  type metadata accessor for ContactSignalProviders(0);
  sub_1C00578B8(a2);
  if (v2)
  {
    if (qword_1ED727970 != -1)
      swift_once();
    v4 = sub_1C0303B98();
    __swift_project_value_buffer(v4, (uint64_t)&unk_1ED7295C8);
    v5 = v2;
    v6 = v2;
    v7 = sub_1C0303B80();
    v8 = sub_1C03042F4();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v14 = v10;
      *(_DWORD *)v9 = 136446210;
      v11 = v2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7281B0);
      v12 = sub_1C0303EF8();
      sub_1C003E6D8(v12, v13, &v14);
      sub_1C03044B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C0039000, v7, v8, "SiriRemembersContactSignalProvider failed: %{public}s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v10, -1, -1);
      MEMORY[0x1C3B98378](v9, -1, -1);
    }
    else
    {

    }
    type metadata accessor for InferenceError();
    swift_initStackObject();
    sub_1C026A508(26, 0, 0xE000000000000000, 0xD000000000000094, 0x80000001C03356F0, 0xD000000000000029, 0x80000001C0335A10, 587, MEMORY[0x1E0DEE9D8], 1);
    if (qword_1ED728430 != -1)
      swift_once();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED729650);
    sub_1C026A800();
    swift_release();

  }
}

void sub_1C027D570(uint64_t *a1@<X0>, __int16 a2@<W1>, uint64_t *a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  BOOL v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  int v69;

  v58 = a5;
  v11 = (int *)type metadata accessor for ContactResolver.HandleSignalSet(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[1];
  v63 = *a1;
  v64 = v15;
  v69 = *((unsigned __int8 *)a1 + 16);
  v16 = a1[3];
  v17 = a1[4];
  v61 = a1[5];
  v62 = v16;
  v18 = a1[6];
  v65 = v17;
  v66 = v18;
  v60 = a1[7];
  v67 = a1[8];
  v19 = *((unsigned __int8 *)a1 + 72);
  v59 = *((unsigned __int8 *)a1 + 73);
  v20 = (uint64_t)&v14[*(int *)(v12 + 36)];
  *(_DWORD *)(v14 + 1) = 0;
  v21 = sub_1C0303550();
  v22 = 1;
  __swift_storeEnumTagSinglePayload(v20, 1, 1, v21);
  v14[v11[10]] = 0;
  v23 = v11[12];
  v14[v23] = 0;
  v14[v11[13]] = 0;
  v14[v11[14]] = 0;
  v68 = v19;
  *v14 = v19;
  v24 = a2;
  v25 = HIBYTE(a2);
  if (a2 != 2)
  {
    if (v69 == (unsigned __int16)(a2 & 0xFF00) >> 8)
    {
      v57 = HIBYTE(a2);
      v14[v23] = 1;
      v26 = *a3;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a3 = v26;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        goto LABEL_4;
      goto LABEL_30;
    }
    if ((a2 & 1) != 0)
      goto LABEL_23;
  }
  v14[v23] = 1;
  v38 = *a3;
  v39 = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v38;
  if ((v39 & 1) == 0)
  {
    sub_1C01F5B08();
    v38 = v50;
    *a3 = v50;
  }
  v22 = v58;
  if ((a4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (*(_QWORD *)(v38 + 16) <= a4)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v38 += 32;
  a3 = *(uint64_t **)(v38 + 8 * a4);
  v40 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v38 + 8 * a4) = a3;
  if ((v40 & 1) != 0)
  {
    if ((v22 & 0x8000000000000000) == 0)
      goto LABEL_20;
    goto LABEL_28;
  }
LABEL_27:
  sub_1C01F5AF8();
  a3 = v51;
  *(_QWORD *)(v38 + 8 * a4) = v51;
  if ((v22 & 0x8000000000000000) == 0)
  {
LABEL_20:
    if (a3[2] > v22)
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
      v42 = (unint64_t)a3
          + ((*(unsigned __int8 *)(*(_QWORD *)(v41 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v41 - 8) + 80))
          + *(_QWORD *)(*(_QWORD *)(v41 - 8) + 72) * v22
          + *(int *)(v41 + 36);
      *(_BYTE *)(v42 + *(int *)(type metadata accessor for ContactResolver.SignalSet(0) + 192)) = 1;
      if (v24 == 2)
      {
        v43 = 0;
        v44 = v69;
LABEL_24:
        v14[v11[11]] = v43;
        v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DA8);
        sub_1C004555C((uint64_t)v14, a6 + *(int *)(v45 + 36), type metadata accessor for ContactResolver.HandleSignalSet);
        v46 = v64;
        *(_QWORD *)a6 = v63;
        *(_QWORD *)(a6 + 8) = v46;
        *(_BYTE *)(a6 + 16) = v44;
        v48 = v65;
        v47 = v66;
        *(_QWORD *)(a6 + 24) = v62;
        *(_QWORD *)(a6 + 32) = v48;
        *(_QWORD *)(a6 + 40) = v61;
        *(_QWORD *)(a6 + 48) = v47;
        v49 = v67;
        *(_QWORD *)(a6 + 56) = v60;
        *(_QWORD *)(a6 + 64) = v49;
        *(_BYTE *)(a6 + 72) = v68;
        *(_BYTE *)(a6 + 73) = v59;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return;
      }
LABEL_23:
      v44 = v69;
      v43 = v69 == v25;
      goto LABEL_24;
    }
    goto LABEL_29;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  sub_1C01F5B08();
  v26 = v52;
  *a3 = v52;
LABEL_4:
  v28 = v58;
  if ((a4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  if (*(_QWORD *)(v26 + 16) <= a4)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v26 += 32;
  v29 = *(_QWORD *)(v26 + 8 * a4);
  v30 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v26 + 8 * a4) = v29;
  if ((v30 & 1) != 0)
  {
    if ((v28 & 0x8000000000000000) == 0)
      goto LABEL_8;
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
LABEL_33:
  sub_1C01F5AF8();
  v29 = v53;
  *(_QWORD *)(v26 + 8 * a4) = v53;
  if ((v28 & 0x8000000000000000) != 0)
    goto LABEL_34;
LABEL_8:
  if (*(_QWORD *)(v29 + 16) <= v28)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v31 = *(_QWORD *)(v26 - 8);
  v58 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v32 = *(_QWORD *)(v31 + 72) * v28;
  v33 = v29 + v58 + *(int *)(v26 + 36);
  v56 = v32;
  v22 = v33 + v32;
  v34 = type metadata accessor for ContactResolver.SignalSet(0);
  *(_BYTE *)(v22 + *(int *)(v34 + 188)) = 1;
  v35 = *a3;
  if (*(_QWORD *)(*a3 + 16) > a4)
  {
    v29 = v34;
    v22 = v35 + 32;
    v36 = *(_QWORD *)(v35 + 32 + 8 * a4);
    v37 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v22 + 8 * a4) = v36;
    if ((v37 & 1) != 0)
      goto LABEL_11;
    goto LABEL_37;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  sub_1C01F5AF8();
  v36 = v54;
  *(_QWORD *)(v22 + 8 * a4) = v54;
LABEL_11:
  if (*(_QWORD *)(v36 + 16) > v28)
  {
    *(_BYTE *)(v36 + v58 + *(int *)(v26 + 36) + v56 + *(int *)(v29 + 192)) = 1;
    v25 = v57;
    goto LABEL_23;
  }
  __break(1u);
}

uint64_t sub_1C027D9A4(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  char v31;
  __int128 v32;
  unsigned __int8 v33;
  int v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  __int128 *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  __int128 v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v49;
  int v50;
  uint64_t v51;
  unsigned __int8 *v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  _OWORD v58[3];
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Contact() + 80));
  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
    return 0;
  v5 = *a2;
  v49 = *MEMORY[0x1E0D13768];
  swift_bridgeObjectRetain_n();
  v6 = v5;
  v7 = 0;
  v50 = v5;
  v51 = v3;
  v52 = a2;
  do
  {
    v8 = *(_QWORD *)(v3 + v7 + 32);
    v9 = *(_QWORD *)(v3 + v7 + 40);
    v10 = *(unsigned __int8 *)(v3 + v7 + 48);
    v11 = *(_QWORD *)(v3 + v7 + 56);
    v12 = *(_QWORD *)(v3 + v7 + 64);
    v13 = *(_QWORD *)(v3 + v7 + 72);
    v14 = *(_QWORD *)(v3 + v7 + 80);
    v15 = *(_QWORD *)(v3 + v7 + 96);
    v67 = *(_QWORD *)(v3 + v7 + 88);
    v16 = *(_BYTE *)(v3 + v7 + 104);
    v17 = *(_BYTE *)(v3 + v7 + 105);
    if (v6 && v6 != v10)
      goto LABEL_30;
    v18 = *((_QWORD *)a2 + 4);
    v19 = *((_QWORD *)a2 + 5);
    *(_QWORD *)&v57 = v8;
    *((_QWORD *)&v57 + 1) = v9;
    v55 = v13;
    v56 = v11;
    v53 = v17;
    v54 = v16;
    if (!v6)
    {
      *(_QWORD *)&v59 = v18;
      *((_QWORD *)&v59 + 1) = v19;
      *(_QWORD *)&v58[0] = 64;
      *((_QWORD *)&v58[0] + 1) = 0xE100000000000000;
      sub_1C004F408();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((sub_1C030454C() & 1) != 0)
      {
        v20 = (void *)sub_1C0303E8C();
        v21 = (void *)(*(uint64_t (**)(uint64_t, void *))(v49 + 16))(v49, v20);
        goto LABEL_10;
      }
      sub_1C00447B0(0, (unint64_t *)&qword_1ED727C40);
LABEL_13:
      swift_bridgeObjectRetain();
      v26 = sub_1C01FF97C();
      sub_1C0207D2C(v26);
      if (v28)
        v23 = v27;
      else
        v23 = 0;
      if (v28)
        v25 = v28;
      else
        v25 = 0xE000000000000000;
      goto LABEL_19;
    }
    if (v6 != 1)
    {
      sub_1C00447B0(0, (unint64_t *)&qword_1ED727C40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = (void *)sub_1C0303E8C();
    v21 = (void *)(*(uint64_t (**)(uint64_t, void *))(v49 + 16))(v49, v20);
LABEL_10:
    v22 = v21;

    v23 = sub_1C0303EB0();
    v25 = v24;

LABEL_19:
    v29 = HIBYTE(v25) & 0xF;
    if ((v25 & 0x2000000000000000) == 0)
      v29 = v23 & 0xFFFFFFFFFFFFLL;
    a2 = v52;
    if (!v29 || (v23 == v67 ? (v30 = v25 == v15) : (v30 = 0), v30))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v31 = sub_1C0304A08();
      swift_bridgeObjectRelease();
      if ((v31 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v3 = v51;
        v6 = v50;
        goto LABEL_30;
      }
    }
    v59 = v57;
    LOBYTE(v60) = v10;
    *((_QWORD *)&v60 + 1) = v56;
    *(_QWORD *)&v61 = v12;
    *((_QWORD *)&v61 + 1) = v55;
    v62 = v14;
    v63 = v67;
    v64 = v15;
    v65 = v54;
    v66 = v53;
    v32 = *((_OWORD *)v52 + 1);
    v58[0] = *(_OWORD *)v52;
    v58[1] = v32;
    v58[2] = *((_OWORD *)v52 + 2);
    sub_1C02057DC();
    v34 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = v51;
    v6 = v50;
    if (v34)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
LABEL_30:
    v7 += 80;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  if (qword_1ED727970 != -1)
    swift_once();
  v35 = sub_1C0303B98();
  __swift_project_value_buffer(v35, (uint64_t)&unk_1ED7295C8);
  sub_1C027E68C((uint64_t)a2);
  swift_bridgeObjectRetain();
  sub_1C027E68C((uint64_t)a2);
  v36 = sub_1C0303B80();
  v37 = sub_1C03042E8();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (__int128 *)a2;
    v39 = swift_slowAlloc();
    v40 = swift_slowAlloc();
    *(_QWORD *)&v58[0] = v40;
    *(_DWORD *)v39 = 136315394;
    v41 = swift_bridgeObjectRetain();
    v42 = MEMORY[0x1C3B97040](v41, &type metadata for ContactHandle);
    v44 = v43;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v59 = sub_1C003E6D8(v42, v44, (uint64_t *)v58);
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 12) = 2080;
    v45 = v38[1];
    v59 = *v38;
    v60 = v45;
    v61 = v38[2];
    v46 = ContactHandleQuery.description.getter();
    *(_QWORD *)&v59 = sub_1C003E6D8(v46, v47, (uint64_t *)v58);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    sub_1C01ECA20((uint64_t)v38);
    sub_1C01ECA20((uint64_t)v38);
    _os_log_impl(&dword_1C0039000, v36, v37, "Nominating contact with %s for removal because it doesn't match the query for %s", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v40, -1, -1);
    MEMORY[0x1C3B98378](v39, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1C01ECA20((uint64_t)a2);
    sub_1C01ECA20((uint64_t)a2);
  }

  return 0;
}

uint64_t sub_1C027DF40(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v1;
  uint64_t v3;

  a1(&v3);
  v1 = MEMORY[0x1C3B97040](v3, MEMORY[0x1E0DEB418]);
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1C027DFA0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  int isUniquelyReferenced_nonNull_native;

  v3 = *v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (isUniquelyReferenced_nonNull_native && a1 <= *(_QWORD *)(v3 + 24) >> 1)
    OUTLINED_FUNCTION_37_0();
  else
    sub_1C00B1A78();
}

void sub_1C027DFFC(uint64_t a1)
{
  sub_1C027E250(a1, &qword_1ED726DB0);
}

void sub_1C027E008(uint64_t a1)
{
  sub_1C027E250(a1, &qword_1ED726F08);
}

void sub_1C027E014(uint64_t a1)
{
  sub_1C027E2D8(a1, (void (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

void sub_1C027E020(uint64_t a1)
{
  sub_1C027E0D4(a1);
}

void sub_1C027E02C(uint64_t a1)
{
  sub_1C027E1D0(a1, (void (*)(_QWORD))type metadata accessor for DateTimeConstraint);
}

void sub_1C027E038(uint64_t a1)
{
  sub_1C027E0D4(a1);
}

void sub_1C027E044(uint64_t a1)
{
  sub_1C027E2D8(a1, (void (*)(_QWORD))type metadata accessor for ContactMatchRuntimeData);
}

void sub_1C027E050(uint64_t a1)
{
  sub_1C027E0D4(a1);
}

void sub_1C027E05C(uint64_t a1)
{
  sub_1C027E158(a1, &qword_1EF5BA7C0);
}

void sub_1C027E068(uint64_t a1)
{
  sub_1C027E0D4(a1);
}

void sub_1C027E074(uint64_t a1)
{
  sub_1C027E0D4(a1);
}

void sub_1C027E080(uint64_t a1)
{
  sub_1C027E0D4(a1);
}

void sub_1C027E08C(uint64_t a1)
{
  sub_1C027E2D8(a1, (void (*)(_QWORD))type metadata accessor for StitchableInteraction);
}

void sub_1C027E098(uint64_t a1)
{
  sub_1C027E250(a1, &qword_1ED726F30);
}

void sub_1C027E0A4(uint64_t a1)
{
  sub_1C027E158(a1, (uint64_t *)&unk_1EF5B8EA0);
}

void sub_1C027E0B0(uint64_t a1)
{
  sub_1C027E1D0(a1, (void (*)(_QWORD))type metadata accessor for DateTime.Date);
}

void sub_1C027E0BC(uint64_t a1)
{
  sub_1C027E0D4(a1);
}

void sub_1C027E0C8(uint64_t a1)
{
  sub_1C027E0D4(a1);
}

void sub_1C027E0D4(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_23_41();
    OUTLINED_FUNCTION_13_62();
    __break(1u);
  }
  else
  {
    if (a1)
      *(_QWORD *)(OUTLINED_FUNCTION_184_0() + 16) = a1;
    OUTLINED_FUNCTION_140();
  }
}

void sub_1C027E134(uint64_t a1)
{
  sub_1C027E158(a1, &qword_1EF5B8D70);
}

void sub_1C027E140(uint64_t a1)
{
  sub_1C027E158(a1, &qword_1EF5B9050);
}

void sub_1C027E14C(uint64_t a1)
{
  sub_1C027E158(a1, &qword_1EF5B9040);
}

void sub_1C027E158(uint64_t a1, uint64_t *a2)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_23_41();
    OUTLINED_FUNCTION_13_62();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      __swift_instantiateConcreteTypeFromMangledName(a2);
      *(_QWORD *)(OUTLINED_FUNCTION_184_0() + 16) = a1;
    }
    OUTLINED_FUNCTION_140();
  }
}

void sub_1C027E1C4(uint64_t a1)
{
  sub_1C027E1D0(a1, MEMORY[0x1E0D9A798]);
}

void sub_1C027E1D0(uint64_t a1, void (*a2)(_QWORD))
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_23_41();
    OUTLINED_FUNCTION_13_62();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      a2(0);
      *(_QWORD *)((OUTLINED_FUNCTION_184_0() & 0xFFFFFFFFFFFFF8) + 0x10) = a1;
    }
    OUTLINED_FUNCTION_140();
  }
}

void sub_1C027E244(uint64_t a1)
{
  sub_1C027E250(a1, &qword_1EF5B90D0);
}

void sub_1C027E250(uint64_t a1, uint64_t *a2)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_23_41();
    OUTLINED_FUNCTION_13_62();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      __swift_instantiateConcreteTypeFromMangledName(a2);
      *(_QWORD *)(OUTLINED_FUNCTION_206() + 16) = a1;
    }
    __swift_instantiateConcreteTypeFromMangledName(a2);
    OUTLINED_FUNCTION_139_2();
    OUTLINED_FUNCTION_40();
  }
}

void sub_1C027E2CC(uint64_t a1)
{
  sub_1C027E2D8(a1, (void (*)(_QWORD))type metadata accessor for UnstitchedTask);
}

void sub_1C027E2D8(uint64_t a1, void (*a2)(_QWORD))
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_23_41();
    OUTLINED_FUNCTION_13_62();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      a2(0);
      *(_QWORD *)(OUTLINED_FUNCTION_206() + 16) = a1;
    }
    a2(0);
    OUTLINED_FUNCTION_139_2();
    OUTLINED_FUNCTION_40();
  }
}

void sub_1C027E354()
{
  uint64_t *v0;
  uint64_t v1;
  char isUniquelyReferenced_nonNull_native;

  v1 = *v0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v0 = v1;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    OUTLINED_FUNCTION_9();
  }
  else
  {
    OUTLINED_FUNCTION_65_11();
    sub_1C00B1A78();
  }
}

uint64_t sub_1C027E394(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
    return a2(v3 > 1);
  return result;
}

uint64_t sub_1C027E3C0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C027E3E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF5C2698;
  if (!qword_1EF5C2698)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED726EE8);
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF5C2698);
  }
  return result;
}

void sub_1C027E42C(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = sub_1C0271154(*a1);
  OUTLINED_FUNCTION_9();
}

Class sub_1C027E454(const void *a1, objc_class *a2)
{
  uint64_t v2;

  return sub_1C012C21C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1C027E46C@<X0>(uint64_t *a1@<X8>)
{
  return OUTLINED_FUNCTION_174_0(a1);
}

uint64_t sub_1C027E480()
{
  uint64_t v0;

  return sub_1C027DF40(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

_BYTE **sub_1C027E48C(_BYTE **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C0260D78(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

uint64_t sub_1C027E498()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C027E4BC()
{
  uint64_t v0;

  return sub_1C0260ABC(*(uint64_t (**)(void))(v0 + 16));
}

void sub_1C027E4C4(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1C0260ADC(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

void sub_1C027E4CC(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = sub_1C01AC87C(*a1);
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C027E508()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1C027E52C()
{
  uint64_t v0;

  return sub_1C0278C80(*(void **)(v0 + 16));
}

uint64_t sub_1C027E53C()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_208();
  return sub_1C0278AAC(v0, v1);
}

void sub_1C027E554(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = sub_1C01AC780(*a1);
  OUTLINED_FUNCTION_9();
}

void sub_1C027E578()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_208();
  sub_1C0278994(v0, v1, v2);
}

uint64_t sub_1C027E590(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PLUSSuggestionHandler(a2, a1);
  return a2;
}

void sub_1C027E5CC(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;

  sub_1C0278780(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1C027E5EC(uint64_t a1)
{
  destroy for PLUSQueryExpander(a1);
  return a1;
}

void sub_1C027E620()
{
  uint64_t *v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_208();
  sub_1C0278690(v0, v1);
}

uint64_t sub_1C027E638@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1C027AEB0(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a2, a3);
}

uint64_t sub_1C027E654(uint64_t a1)
{
  uint64_t v1;

  return sub_1C027BA68(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_1C027E670@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1C027C570(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a2, a3);
}

uint64_t sub_1C027E68C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C027E6D4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;

  return sub_1C027BD20(a1, v3[2], v3[3], v3[4], a2, a3);
}

uint64_t sub_1C027E6F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C027C3E8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1C027E70C()
{
  uint64_t *v0;
  uint64_t *v1;

  OUTLINED_FUNCTION_208();
  return sub_1C027C510(v0, v1);
}

void sub_1C027E724(const void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1C0277478(a1, *(_QWORD *)(v2 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), a2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD **)(v2 + 88));
}

uint64_t OUTLINED_FUNCTION_1_129()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_11_77(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 768) = a1;
  return sub_1C03044B0();
}

void OUTLINED_FUNCTION_12_62()
{
  sub_1C00B1A78();
}

uint64_t OUTLINED_FUNCTION_13_62()
{
  return sub_1C03047E0();
}

void OUTLINED_FUNCTION_14_66()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 8 * v1 + 32) = v2;
}

uint64_t OUTLINED_FUNCTION_18_41()
{
  return sub_1C0303B80();
}

void OUTLINED_FUNCTION_22_48()
{
  sub_1C00B1A78();
}

uint64_t OUTLINED_FUNCTION_24_30(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 760) = a1;
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_34_37()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1C003E6D8(v0, v1, (uint64_t *)(v2 - 192));
}

BOOL OUTLINED_FUNCTION_35_41(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void OUTLINED_FUNCTION_45_25()
{
  sub_1C00B1A78();
}

void OUTLINED_FUNCTION_57_15()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_70_10(__n128 *a1, __n128 a2)
{
  uint64_t v2;

  a1[1] = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_74_9()
{
  return sub_1C0304768();
}

uint64_t OUTLINED_FUNCTION_78_11@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 360));
}

uint64_t OUTLINED_FUNCTION_90_9(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 - 288))(a1, *(_QWORD *)(v1 - 256));
}

uint64_t OUTLINED_FUNCTION_93_6@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 472), *(_QWORD *)(v2 + 360));
}

uint64_t OUTLINED_FUNCTION_102_5()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_103_3(uint64_t result)
{
  *(_BYTE *)(result + 16) = 8;
  return result;
}

id OUTLINED_FUNCTION_106_5()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_107_4()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_110_4()
{
  return sub_1C0303B5C();
}

uint64_t OUTLINED_FUNCTION_118_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t (*v12)(uint64_t *);
  uint64_t v13;

  a12 = v13;
  return v12(&a12);
}

uint64_t OUTLINED_FUNCTION_120_4()
{
  return sub_1C03043E4();
}

uint64_t OUTLINED_FUNCTION_121_4()
{
  return sub_1C0303B5C();
}

uint64_t OUTLINED_FUNCTION_122_3()
{
  return sub_1C0303B5C();
}

uint64_t OUTLINED_FUNCTION_129_2()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_130_2()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 376);
}

uint64_t OUTLINED_FUNCTION_131_2()
{
  return sub_1C0303B68();
}

id OUTLINED_FUNCTION_137_2@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)v2 = v3;
  *(_QWORD *)(v2 + 8) = v1;
  *(_QWORD *)(v4 - 72) = v2;
  *(_BYTE *)(v2 + 16) = 2;
  return a1;
}

id OUTLINED_FUNCTION_138_2@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)v2 = v4;
  *(_QWORD *)(v2 + 8) = v1;
  *(_QWORD *)(v3 + 480) = v2;
  *(_BYTE *)(v2 + 16) = 2;
  return a1;
}

uint64_t OUTLINED_FUNCTION_139_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_140_3()
{
  return swift_getAtKeyPath();
}

uint64_t OUTLINED_FUNCTION_142_1()
{
  return sub_1C0303B50();
}

id OUTLINED_FUNCTION_143_3()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(int *)(v2 + 24);
  *(_QWORD *)(v0 + 480) = v4;
  *(_QWORD *)(v3 + v4) = v1;
  return v1;
}

id OUTLINED_FUNCTION_144_2()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(int *)(v2 + 24);
  *(_QWORD *)(v0 + 480) = v4;
  *(_QWORD *)(v3 + v4) = v1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_145_2()
{
  return sub_1C03047F8();
}

uint64_t OUTLINED_FUNCTION_152_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1C027E590(v2 + *(int *)(v1 + 76), v0 + 624);
}

BOOL OUTLINED_FUNCTION_153_2@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_154_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, a4);
}

uint64_t OUTLINED_FUNCTION_155_2()
{
  return swift_getAtKeyPath();
}

uint64_t OUTLINED_FUNCTION_156_1()
{
  return sub_1C0303B68();
}

uint64_t OUTLINED_FUNCTION_163_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_164_0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v3 + 408);
  v4[7] = v2;
  v4[8] = v5;
  v4[4] = result;
  v4[5] = a2;
  return result;
}

void OUTLINED_FUNCTION_168_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_1C00638E8(v4, *(_QWORD *)(v3 + 24), a3);
}

uint64_t OUTLINED_FUNCTION_171_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + a1);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t OUTLINED_FUNCTION_174_0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C0279C4C(a1);
}

uint64_t OUTLINED_FUNCTION_176_1()
{
  return type metadata accessor for ContactSignalProviders(0);
}

uint64_t OUTLINED_FUNCTION_178_1()
{
  return type metadata accessor for RequestMatchSignalProvider();
}

uint64_t OUTLINED_FUNCTION_180_0(uint64_t result)
{
  uint64_t v1;
  _WORD *v2;

  *(_QWORD *)(v1 + 768) = result;
  *v2 = 258;
  return result;
}

uint64_t OUTLINED_FUNCTION_181_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_182()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_183_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_184_0()
{
  return sub_1C0304174();
}

void OUTLINED_FUNCTION_187_0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1C003DD84(v2, a2);
}

uint64_t OUTLINED_FUNCTION_188()
{
  uint64_t (*v0)(_QWORD, _QWORD);
  uint64_t v1;

  return v0(*(_QWORD *)(v1 - 168), *(_QWORD *)(v1 - 160));
}

uint64_t OUTLINED_FUNCTION_189_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 768) = a1;
  return v1 + 768;
}

void OUTLINED_FUNCTION_191_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);
  uint64_t v3;

  sub_1C00638E8(v3, a2, v2);
}

void OUTLINED_FUNCTION_194()
{
  JUMPOUT(0x1C3B975ECLL);
}

void OUTLINED_FUNCTION_196()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0049024(v1 - 208, v0);
}

BOOL OUTLINED_FUNCTION_198(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_199()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_200()
{
  uint64_t v0;
  _QWORD *v1;

  *v1 = v0;
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_201(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C0049024(*(_QWORD *)(v2 - 328), a2);
}

uint64_t OUTLINED_FUNCTION_202()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_203()
{
  return sub_1C03043E4();
}

__n128 OUTLINED_FUNCTION_205(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  result = v1[27];
  a1[1] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_206()
{
  return sub_1C0304174();
}

uint64_t OUTLINED_FUNCTION_207()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_209()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_211()
{
  return sub_1C0303B50();
}

uint64_t OUTLINED_FUNCTION_212()
{
  return sub_1C0303B50();
}

void OUTLINED_FUNCTION_213()
{
  sub_1C027E354();
}

uint64_t OUTLINED_FUNCTION_215()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_217()
{
  return type metadata accessor for AsrE3CandidateExpander();
}

uint64_t OUTLINED_FUNCTION_218()
{
  return type metadata accessor for ContactsFrameworkMatcher();
}

uint64_t OUTLINED_FUNCTION_219()
{
  return type metadata accessor for ThirdPartyContactMatcher(0);
}

uint64_t OUTLINED_FUNCTION_220()
{
  return sub_1C0303AA8();
}

uint64_t OUTLINED_FUNCTION_221(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 432);
  return a1 + v2;
}

void sub_1C027ED3C(void *a1)
{
  id v1;

  v1 = objc_msgSend(a1, sel_spokenPhrase);
  sub_1C0303EB0();
  OUTLINED_FUNCTION_175_0();
  sub_1C0303F10();
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C027ED94(void *a1)
{
  id v1;

  v1 = objc_msgSend(a1, sel_spokenPhrase);
  sub_1C0303EB0();
  OUTLINED_FUNCTION_175_0();
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C027EDD4()
{
  return 0x476567617373654DLL;
}

void sub_1C027EDF4()
{
  void **v0;

  sub_1C027ED3C(*v0);
}

void sub_1C027EDFC()
{
  void **v0;

  sub_1C027ED94(*v0);
}

void sub_1C027EE04()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_2_122();
  v2 = OUTLINED_FUNCTION_3_130((uint64_t)v1);
  sub_1C027EEF4(v2, v3);
  *(_QWORD *)(v0 + 32) = v4;
  OUTLINED_FUNCTION_37_0();
}

void sub_1C027EE38()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_2_122();
  v2 = OUTLINED_FUNCTION_3_130((uint64_t)v1);
  sub_1C027EF44(v2, v3);
  *(_QWORD *)(v0 + 32) = v4;
  OUTLINED_FUNCTION_37_0();
}

void sub_1C027EE68()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_2_122();
  v2 = OUTLINED_FUNCTION_3_130((uint64_t)v1);
  sub_1C027EF8C(v2, v3);
  *(_QWORD *)(v0 + 32) = v4;
  OUTLINED_FUNCTION_37_0();
}

void sub_1C027EE98()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_2_122();
  v2 = OUTLINED_FUNCTION_3_130((uint64_t)v1);
  sub_1C027EFCC(v2, v3);
  *(_QWORD *)(v0 + 32) = v4;
  OUTLINED_FUNCTION_37_0();
}

void sub_1C027EEC8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void sub_1C027EEF4(uint64_t a1, uint64_t a2)
{
  id *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_1_130(a1, a2);
  sub_1C02CFE78(v4, v5, v6);
  if (v3)
    OUTLINED_FUNCTION_4_101();
  *v2 = OUTLINED_FUNCTION_7_93();
  OUTLINED_FUNCTION_37_0();
}

ValueMetadata *_s12MessageGroupVMa()
{
  return &_s12MessageGroupVN;
}

void sub_1C027EF44(uint64_t a1, uint64_t a2)
{
  id *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_1_130(a1, a2);
  sub_1C02CFE78(v4, v5, v6);
  if (v3)
    OUTLINED_FUNCTION_4_101();
  *v2 = OUTLINED_FUNCTION_7_93();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C027EF84(id *a1)
{

}

void sub_1C027EF8C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_1_130(a1, a2);
  sub_1C02CFE78(v4, v5, v6);
  if (v3)
    OUTLINED_FUNCTION_4_101();
  *v2 = OUTLINED_FUNCTION_5_92();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C027EFCC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_1_130(a1, a2);
  sub_1C02CFE78(v4, v5, v6);
  if (v3)
    OUTLINED_FUNCTION_4_101();
  *v2 = OUTLINED_FUNCTION_5_92();
  OUTLINED_FUNCTION_37_0();
}

uint64_t OUTLINED_FUNCTION_1_130(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *OUTLINED_FUNCTION_2_122()
{
  return malloc(0x28uLL);
}

uint64_t OUTLINED_FUNCTION_3_130(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

void OUTLINED_FUNCTION_4_101()
{
  JUMPOUT(0x1C3B975ECLL);
}

uint64_t OUTLINED_FUNCTION_5_92()
{
  return swift_retain();
}

char *OUTLINED_FUNCTION_6_97(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

id OUTLINED_FUNCTION_7_93()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(v0 + 8 * v1 + 32);
}

char *OUTLINED_FUNCTION_8_73(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

id OUTLINED_FUNCTION_12_63()
{
  void *v0;

  return v0;
}

uint64_t SportsSignalSet.version.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t SportsSignalSet.version.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*SportsSignalSet.version.modify())(_QWORD)
{
  return nullsub_1;
}

BOOL static SportsSignalSet.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && *((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1);
}

uint64_t sub_1C027F100()
{
  sub_1C027F260();
  return sub_1C0304BAC();
}

uint64_t sub_1C027F128()
{
  sub_1C027F260();
  return sub_1C0304BB8();
}

void SportsSignalSet.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v8[2];
  char v9;
  char v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C26B0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C027F260();
  sub_1C0304BA0();
  v10 = 0;
  sub_1C030496C();
  if (!v2)
  {
    v9 = 1;
    sub_1C0304990();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  OUTLINED_FUNCTION_28_0();
}

unint64_t sub_1C027F260()
{
  unint64_t result;

  result = qword_1EF5C26B8;
  if (!qword_1EF5C26B8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0322CCC, &type metadata for SportsSignalSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C26B8);
  }
  return result;
}

void SportsSignalSet.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C26C0);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C027F260();
  sub_1C0304B88();
  if (!v2)
  {
    v6 = sub_1C03048B8();
    v7 = sub_1C03048DC();
    OUTLINED_FUNCTION_3_44();
    *(_BYTE *)a2 = v6 & 1;
    *(_QWORD *)(a2 + 8) = v7;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  OUTLINED_FUNCTION_28_0();
}

_UNKNOWN **sub_1C027F3C0()
{
  return &off_1E79A59E0;
}

unint64_t sub_1C027F3D0()
{
  unint64_t result;

  result = qword_1EF5C26C8;
  if (!qword_1EF5C26C8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for SportsSignalSet, &type metadata for SportsSignalSet);
    atomic_store(result, (unint64_t *)&qword_1EF5C26C8);
  }
  return result;
}

unint64_t sub_1C027F410()
{
  unint64_t result;

  result = qword_1EF5C26D0;
  if (!qword_1EF5C26D0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for SportsSignalSet, &type metadata for SportsSignalSet);
    atomic_store(result, (unint64_t *)&qword_1EF5C26D0);
  }
  return result;
}

unint64_t sub_1C027F450()
{
  unint64_t result;

  result = qword_1EF5C26D8;
  if (!qword_1EF5C26D8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for SportsSignalSet, &type metadata for SportsSignalSet);
    atomic_store(result, (unint64_t *)&qword_1EF5C26D8);
  }
  return result;
}

unint64_t sub_1C027F48C(_QWORD *a1)
{
  unint64_t result;

  a1[2] = sub_1C027F3D0();
  a1[3] = sub_1C027F410();
  result = sub_1C027F450();
  a1[4] = result;
  return result;
}

void sub_1C027F4C0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  SportsSignalSet.init(from:)(a1, a2);
}

void sub_1C027F4D4(_QWORD *a1)
{
  SportsSignalSet.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SportsSignalSet()
{
  return &type metadata for SportsSignalSet;
}

uint64_t storeEnumTagSinglePayload for SportsSignalSet.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C027F548 + 4 * byte_1C0322B45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C027F57C + 4 * byte_1C0322B40[v4]))();
}

uint64_t sub_1C027F57C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C027F584(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C027F58CLL);
  return result;
}

uint64_t sub_1C027F598(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C027F5A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C027F5A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C027F5AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsSignalSet.CodingKeys()
{
  return &type metadata for SportsSignalSet.CodingKeys;
}

unint64_t sub_1C027F5CC()
{
  unint64_t result;

  result = qword_1EF5C2738;
  if (!qword_1EF5C2738)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0322CA4, &type metadata for SportsSignalSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C2738);
  }
  return result;
}

unint64_t sub_1C027F60C()
{
  unint64_t result;

  result = qword_1EF5C2740;
  if (!qword_1EF5C2740)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0322C14, &type metadata for SportsSignalSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C2740);
  }
  return result;
}

unint64_t sub_1C027F64C()
{
  unint64_t result;

  result = qword_1EF5C2748;
  if (!qword_1EF5C2748)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0322C3C, &type metadata for SportsSignalSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C2748);
  }
  return result;
}

ValueMetadata *type metadata accessor for Thanksgiving()
{
  return &type metadata for Thanksgiving;
}

uint64_t sub_1C027F698(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B88D0);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_6_0();
  v6 = v5 - v4;
  v7 = sub_1C0301DC8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_6_0();
  v11 = v10 - v9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B88D8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_6_0();
  v15 = v14 - v13;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E0CB0EF8], v7);
  sub_1C0301DD4();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  v16 = sub_1C0301EC4();
  __swift_storeEnumTagSinglePayload(v15, 0, 1, v16);
  v17 = sub_1C0301F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v6, a2, v17);
  __swift_storeEnumTagSinglePayload(v6, 0, 1, v17);
  return sub_1C0301918();
}

uint64_t sub_1C027F898(uint64_t a1, uint64_t a2)
{
  return sub_1C027F698(a1, a2);
}

double static SportsRetentionTime.secondsIn30Sec.getter()
{
  return 30.0;
}

double static SportsRetentionTime.secondsIn2Mins.getter()
{
  return 120.0;
}

double static SportsRetentionTime.secondsIn10Mins.getter()
{
  return 600.0;
}

double static SportsRetentionTime.secondsIn1Hr.getter()
{
  return 3600.0;
}

double static SportsRetentionTime.secondsIn6Hrs.getter()
{
  return 21600.0;
}

double static SportsRetentionTime.secondsIn1Day.getter()
{
  return 86400.0;
}

double static SportsRetentionTime.secondsIn7Days.getter()
{
  return 604800.0;
}

double static SportsRetentionTime.secondsIn14Days.getter()
{
  return 1209600.0;
}

double static SportsRetentionTime.secondsIn28Days.getter()
{
  return 2419200.0;
}

ValueMetadata *type metadata accessor for SportsRetentionTime()
{
  return &type metadata for SportsRetentionTime;
}

dispatch_semaphore_t sub_1C027F924()
{
  dispatch_semaphore_t result;

  result = dispatch_semaphore_create(1);
  qword_1ED728080 = (uint64_t)result;
  return result;
}

void sub_1C027F944()
{
  qword_1ED728078 = MEMORY[0x1E0DEE9E8];
}

uint64_t static XPCActivity.register(name:repeatInterval:isPrivacyCritical:makeOperation:)()
{
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C0303FD0();
  swift_bridgeObjectRelease();
  sub_1C027FA1C();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1C027FA1C()
{
  __int128 *v0;
  __int128 v1;
  id v2;
  uint64_t v3;
  __int128 v4;
  char v5;
  char v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  __int128 v22;
  void *v23;
  uint64_t v24;
  id v25;
  __int128 aBlock;
  __int128 v27;
  void (*v28)(_xpc_activity_s *);
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  void (*v32)(_xpc_activity_s *);

  v1 = v0[1];
  v30 = *v0;
  v31 = v1;
  v32 = (void (*)(_xpc_activity_s *))*((_QWORD *)v0 + 4);
  if (qword_1ED728280 != -1)
    swift_once();
  v2 = (id)qword_1ED728080;
  sub_1C03043FC();

  if (qword_1ED728278 != -1)
    swift_once();
  v3 = qword_1ED728078;
  v4 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C005546C(v30, *((uint64_t *)&v30 + 1), v3);
  v6 = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    if (qword_1ED728430 != -1)
      swift_once();
    v7 = sub_1C0303B98();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED729650);
    sub_1C02819E0((uint64_t)&v30);
    v8 = sub_1C0303B80();
    v9 = sub_1C03042E8();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      *(_QWORD *)&aBlock = v11;
      *(_DWORD *)v10 = 136446210;
      swift_bridgeObjectRetain();
      sub_1C003E6D8(v4, *((unint64_t *)&v4 + 1), (uint64_t *)&aBlock);
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      sub_1C0281A14((uint64_t)&v30);
      _os_log_impl(&dword_1C0039000, v8, v9, "XPC activity is already registered. id=%{public}s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v11, -1, -1);
      MEMORY[0x1C3B98378](v10, -1, -1);
    }
    else
    {
      sub_1C0281A14((uint64_t)&v30);
    }

  }
  else
  {
    if (qword_1ED728430 != -1)
      swift_once();
    v12 = sub_1C0303B98();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED729650);
    sub_1C02819E0((uint64_t)&v30);
    sub_1C02819E0((uint64_t)&v30);
    sub_1C02819E0((uint64_t)&v30);
    sub_1C02819E0((uint64_t)&v30);
    sub_1C02819E0((uint64_t)&v30);
    sub_1C02819E0((uint64_t)&v30);
    v13 = sub_1C0303B80();
    v14 = sub_1C03042E8();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v16 = swift_slowAlloc();
      *(_QWORD *)&aBlock = v16;
      *(_DWORD *)v15 = 136315906;
      swift_bridgeObjectRetain();
      sub_1C003E6D8(v4, *((unint64_t *)&v4 + 1), (uint64_t *)&aBlock);
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2080;
      v17 = sub_1C0303EF8();
      sub_1C003E6D8(v17, v18, (uint64_t *)&aBlock);
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      sub_1C0281A14((uint64_t)&v30);
      sub_1C0281A14((uint64_t)&v30);
      *(_WORD *)(v15 + 22) = 1024;
      sub_1C0281A14((uint64_t)&v30);
      sub_1C03044B0();
      sub_1C0281A14((uint64_t)&v30);
      *(_WORD *)(v15 + 28) = 1024;
      sub_1C0281A14((uint64_t)&v30);
      sub_1C03044B0();
      sub_1C0281A14((uint64_t)&v30);
      _os_log_impl(&dword_1C0039000, v13, v14, "registering XPC activity\nid=%s\nrepeatInterval=%s\nrequireScreenSleep=%{BOOL}d\nallowBattery=%{BOOL}d", (uint8_t *)v15, 0x22u);
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v16, -1, -1);
      MEMORY[0x1C3B98378](v15, -1, -1);
    }
    else
    {
      sub_1C0281A14((uint64_t)&v30);
      sub_1C0281A14((uint64_t)&v30);
      sub_1C0281A14((uint64_t)&v30);
      sub_1C0281A14((uint64_t)&v30);
      sub_1C0281A14((uint64_t)&v30);
      sub_1C0281A14((uint64_t)&v30);
    }

    aBlock = v30;
    v27 = v31;
    v28 = v32;
    sub_1C02811A4();
    v20 = v19;
    v21 = swift_allocObject();
    v22 = v31;
    *(_OWORD *)(v21 + 16) = v30;
    *(_OWORD *)(v21 + 32) = v22;
    *(_QWORD *)(v21 + 48) = v32;
    v28 = sub_1C0281A74;
    v29 = v21;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v27 = sub_1C0280334;
    *((_QWORD *)&v27 + 1) = &block_descriptor_33;
    v23 = _Block_copy(&aBlock);
    sub_1C02819E0((uint64_t)&v30);
    swift_release();
    v24 = sub_1C0303F28();
    xpc_activity_register((const char *)(v24 + 32), v20, v23);
    swift_release();
    _Block_release(v23);
    swift_unknownObjectRelease();
  }
  v25 = (id)qword_1ED728080;
  sub_1C0304408();

}

uint64_t static XPCActivity.unregister(name:)()
{
  uint64_t v0;

  sub_1C0303FD0();
  v0 = sub_1C0303F28();
  OUTLINED_FUNCTION_33();
  xpc_activity_unregister((const char *)(v0 + 32));
  return swift_release();
}

void static XPCActivity.registerFirstBoot()()
{
  uint64_t v0;
  xpc_object_t v1;
  uint64_t v2;
  xpc_object_t v3;
  uint64_t v4;
  xpc_object_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728170);
  v0 = OUTLINED_FUNCTION_12_64();
  *(_OWORD *)(v0 + 16) = xmmword_1C0309BD0;
  *(_QWORD *)(v0 + 32) = *MEMORY[0x1E0C80898];
  v1 = OUTLINED_FUNCTION_25_33();
  v2 = *MEMORY[0x1E0C80878];
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = v2;
  v3 = xpc_string_create((const char *)*MEMORY[0x1E0C80888]);
  v4 = *MEMORY[0x1E0C80760];
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v0 + 64) = v4;
  v5 = OUTLINED_FUNCTION_23_42();
  v6 = *MEMORY[0x1E0C80790];
  *(_QWORD *)(v0 + 72) = v5;
  *(_QWORD *)(v0 + 80) = v6;
  *(_QWORD *)(v0 + 88) = xpc_int64_create(120);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7275F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728100);
  sub_1C028017C();
  OUTLINED_FUNCTION_15_56();
  swift_bridgeObjectRetain();
  sub_1C00B162C();
  OUTLINED_FUNCTION_33();
  v7 = OUTLINED_FUNCTION_44();
  v8 = sub_1C00B1640(v7);
  OUTLINED_FUNCTION_33();
  sub_1C00A78FC(v8);
  OUTLINED_FUNCTION_28_38();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_21_44();
  OUTLINED_FUNCTION_15();
  swift_bridgeObjectRelease();
  v9 = OUTLINED_FUNCTION_2_33((uint64_t)sub_1C0280334, MEMORY[0x1E0C809B0], 1107296256, v10, v11);
  OUTLINED_FUNCTION_35_42("com.apple.siri.inference.FirstBoot");
  _Block_release(v9);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_22_49();
}

unint64_t sub_1C028017C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED727928;
  if (!qword_1ED727928)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7275F8);
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0DEA550], v1);
    atomic_store(result, (unint64_t *)&qword_1ED727928);
  }
  return result;
}

void sub_1C02801C0(_xpc_activity_s *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  os_log_type_t v6;
  uint8_t *v7;
  NSObject *oslog;

  if (qword_1ED727E88 != -1)
    swift_once();
  v2 = sub_1C0303B98();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED7295E8);
  v3 = sub_1C0303B80();
  v4 = sub_1C03042E8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1C0039000, v3, v4, "received FirstBoot XPC Activity", v5, 2u);
    MEMORY[0x1C3B98378](v5, -1, -1);
  }

  if (!xpc_activity_set_state(a1, 5))
  {
    oslog = sub_1C0303B80();
    v6 = sub_1C03042F4();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1C0039000, oslog, v6, "failed to set FirstBoot to DONE", v7, 2u);
      MEMORY[0x1C3B98378](v7, -1, -1);
    }

  }
}

uint64_t sub_1C0280334(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

void static XPCActivity.registerDailySignalRefresh(refreshSignalCallback:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  xpc_object_t v3;
  uint64_t v4;
  xpc_object_t v5;
  uint64_t v6;
  xpc_object_t v7;
  xpc_object_t v8;
  uint64_t v9;
  xpc_object_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_3_131();
  sub_1C03046CC();
  OUTLINED_FUNCTION_31_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728170);
  v2 = OUTLINED_FUNCTION_12_64();
  *(_OWORD *)(v2 + 16) = xmmword_1C030AAE0;
  v3 = OUTLINED_FUNCTION_4_102(v2, *MEMORY[0x1E0C80898]);
  v4 = *MEMORY[0x1E0C807A8];
  *(_QWORD *)(v2 + 40) = v3;
  *(_QWORD *)(v2 + 48) = v4;
  v5 = xpc_int64_create(*MEMORY[0x1E0C807B8]);
  v6 = *MEMORY[0x1E0C80878];
  *(_QWORD *)(v2 + 56) = v5;
  *(_QWORD *)(v2 + 64) = v6;
  v7 = xpc_string_create((const char *)*MEMORY[0x1E0C80888]);
  v8 = OUTLINED_FUNCTION_11_78((uint64_t)v7, *MEMORY[0x1E0C80790]);
  v9 = *MEMORY[0x1E0C80760];
  *(_QWORD *)(v2 + 88) = v8;
  *(_QWORD *)(v2 + 96) = v9;
  v10 = OUTLINED_FUNCTION_23_42();
  v11 = *MEMORY[0x1E0C80738];
  *(_QWORD *)(v2 + 104) = v10;
  *(_QWORD *)(v2 + 112) = v11;
  *(_QWORD *)(v2 + 120) = OUTLINED_FUNCTION_25_33();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7275F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728100);
  OUTLINED_FUNCTION_24_31();
  OUTLINED_FUNCTION_2_123();
  OUTLINED_FUNCTION_33_35();
  sub_1C00B162C();
  OUTLINED_FUNCTION_14();
  v12 = OUTLINED_FUNCTION_47();
  sub_1C00B1640(v12);
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_31_38();
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_9_88();
  OUTLINED_FUNCTION_33_26();
  OUTLINED_FUNCTION_55_0();
  v13 = OUTLINED_FUNCTION_17_24();
  *(_QWORD *)(v13 + 16) = v1;
  *(_QWORD *)(v13 + 24) = v0;
  OUTLINED_FUNCTION_20_38(v13, 0xD00000000000002BLL);
  OUTLINED_FUNCTION_2_33((uint64_t)sub_1C0280334, MEMORY[0x1E0C809B0], 1107296256, v14, v15);
  OUTLINED_FUNCTION_6_98();
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_7_94();
  OUTLINED_FUNCTION_27_45();
  OUTLINED_FUNCTION_30_37();
  OUTLINED_FUNCTION_13_63();
}

void static XPCActivity.registerDailyTaskSuccessEvaluation()()
{
  uint64_t v0;
  xpc_object_t v1;
  uint64_t v2;
  xpc_object_t v3;
  uint64_t v4;
  xpc_object_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C03046CC();
  OUTLINED_FUNCTION_31_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728170);
  v0 = OUTLINED_FUNCTION_12_64();
  *(_OWORD *)(v0 + 16) = xmmword_1C0309BD0;
  v1 = OUTLINED_FUNCTION_4_102(v0, *MEMORY[0x1E0C80898]);
  v2 = *MEMORY[0x1E0C80878];
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = v2;
  v3 = xpc_string_create((const char *)*MEMORY[0x1E0C80888]);
  v4 = *MEMORY[0x1E0C80760];
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v0 + 64) = v4;
  v5 = xpc_int64_create(86400);
  v6 = *MEMORY[0x1E0C80738];
  *(_QWORD *)(v0 + 72) = v5;
  *(_QWORD *)(v0 + 80) = v6;
  *(_QWORD *)(v0 + 88) = OUTLINED_FUNCTION_25_33();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7275F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728100);
  sub_1C028017C();
  OUTLINED_FUNCTION_15_56();
  swift_bridgeObjectRetain();
  sub_1C00B162C();
  OUTLINED_FUNCTION_33();
  v7 = OUTLINED_FUNCTION_44();
  v8 = sub_1C00B1640(v7);
  OUTLINED_FUNCTION_33();
  sub_1C00A78FC(v8);
  OUTLINED_FUNCTION_28_38();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_21_44();
  OUTLINED_FUNCTION_15();
  swift_bridgeObjectRelease();
  v9 = OUTLINED_FUNCTION_2_33((uint64_t)sub_1C0280334, MEMORY[0x1E0C809B0], 1107296256, v10, v11);
  OUTLINED_FUNCTION_35_42("com.apple.siri.inference.DailyTaskSuccessEvaluation");
  _Block_release(v9);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_22_49();
}

xpc_activity_state_t sub_1C02806AC(_xpc_activity_s *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  char *v7;
  xpc_activity_state_t result;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  _QWORD v28[2];
  char *v29;
  uint64_t v30;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728360);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for TaskSuccessMetricsPublisher();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = xpc_activity_get_state(a1);
  if (result == 2)
  {
    sub_1C00447B0(0, (unint64_t *)&qword_1ED725F20);
    sub_1C0302410();
    sub_1C00447B0(0, qword_1EF5BFA00);
    sub_1C0302410();
    v9 = &v7[v5[6]];
    *((_QWORD *)v9 + 3) = &type metadata for SELFTaskSuccessLogger;
    *((_QWORD *)v9 + 4) = &off_1E79999D0;
    type metadata accessor for SystemUserDefaultsProvider();
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v11 = (uint64_t *)&v7[v5[8]];
    *v11 = v10;
    v11[1] = (uint64_t)&off_1E7990890;
    v12 = &v7[v5[7]];
    *(_QWORD *)v12 = 0;
    *((_QWORD *)v12 + 1) = 0;

    v13 = sub_1C0301CFC();
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v13);
    sub_1C0303940();
    swift_allocObject();
    swift_unknownObjectRetain();
    sub_1C0303928();
    if (xpc_activity_should_defer(a1))
    {
      if (qword_1ED728430 != -1)
        swift_once();
      v14 = sub_1C0303B98();
      __swift_project_value_buffer(v14, (uint64_t)qword_1ED729650);
      v15 = sub_1C0303B80();
      v16 = sub_1C03042E8();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_1C0039000, v15, v16, "Defer PSE collections.", v17, 2u);
        MEMORY[0x1C3B98378](v17, -1, -1);
      }

    }
    v29 = v7;
    v18 = swift_allocObject();
    *(_BYTE *)(v18 + 16) = 0;
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = 0;
    v28[1] = v19 + 16;
    v20 = swift_allocBox();
    __swift_storeEnumTagSinglePayload(v21, 1, 1, v13);
    swift_beginAccess();
    while (!xpc_activity_should_defer(a1))
    {
      if ((*(_BYTE *)(v18 + 16) & 1) != 0)
        break;
      v22 = (_QWORD *)swift_allocObject();
      v22[2] = v18;
      v22[3] = v20;
      v22[4] = v19;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1C0303934();
      swift_release();
    }
    if (qword_1ED728430 != -1)
      swift_once();
    v23 = sub_1C0303B98();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED729650);
    swift_retain();
    v24 = sub_1C0303B80();
    v25 = sub_1C03042E8();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v26 = 134217984;
      swift_beginAccess();
      v30 = *(_QWORD *)(v19 + 16);
      sub_1C03044B0();
      swift_release();
      _os_log_impl(&dword_1C0039000, v24, v25, "Processed %lu PSE collections.", v26, 0xCu);
      MEMORY[0x1C3B98378](v26, -1, -1);
      swift_release();

    }
    else
    {
      swift_release();

      swift_release();
    }
    v27 = (uint64_t)v29;
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    return sub_1C02819A4(v27);
  }
  return result;
}

xpc_object_t static XPCActivity.registerRecurringAudioAppSignalsSync(audioAppSignalsSync:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  xpc_object_t v3;
  uint64_t v4;
  xpc_object_t v5;
  uint64_t v6;
  xpc_object_t v7;
  xpc_object_t v8;
  uint64_t v9;
  xpc_object_t v10;
  uint64_t v11;
  xpc_object_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_3_131();
  sub_1C03046CC();
  OUTLINED_FUNCTION_31_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728170);
  v2 = OUTLINED_FUNCTION_12_64();
  *(_OWORD *)(v2 + 16) = xmmword_1C03080B0;
  v3 = OUTLINED_FUNCTION_4_102(v2, *MEMORY[0x1E0C80898]);
  v4 = *MEMORY[0x1E0C807A8];
  *(_QWORD *)(v2 + 40) = v3;
  *(_QWORD *)(v2 + 48) = v4;
  v5 = xpc_int64_create(*MEMORY[0x1E0C807D8]);
  v6 = *MEMORY[0x1E0C80878];
  *(_QWORD *)(v2 + 56) = v5;
  *(_QWORD *)(v2 + 64) = v6;
  v7 = xpc_string_create((const char *)*MEMORY[0x1E0C80880]);
  v8 = OUTLINED_FUNCTION_11_78((uint64_t)v7, *MEMORY[0x1E0C80790]);
  v9 = *MEMORY[0x1E0C80760];
  *(_QWORD *)(v2 + 88) = v8;
  *(_QWORD *)(v2 + 96) = v9;
  v10 = OUTLINED_FUNCTION_23_42();
  v11 = *MEMORY[0x1E0C80738];
  *(_QWORD *)(v2 + 104) = v10;
  *(_QWORD *)(v2 + 112) = v11;
  result = OUTLINED_FUNCTION_5_93();
  *(_QWORD *)(v2 + 120) = result;
  if (*MEMORY[0x1E0C808C8])
  {
    *(_QWORD *)(v2 + 128) = *MEMORY[0x1E0C808C8];
    *(_QWORD *)(v2 + 136) = OUTLINED_FUNCTION_5_93();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7275F8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728100);
    OUTLINED_FUNCTION_24_31();
    OUTLINED_FUNCTION_2_123();
    OUTLINED_FUNCTION_33_35();
    sub_1C00B162C();
    OUTLINED_FUNCTION_14();
    v13 = OUTLINED_FUNCTION_47();
    sub_1C00B1640(v13);
    OUTLINED_FUNCTION_14();
    OUTLINED_FUNCTION_31_38();
    OUTLINED_FUNCTION_3_4();
    OUTLINED_FUNCTION_14();
    OUTLINED_FUNCTION_9_88();
    OUTLINED_FUNCTION_33_26();
    OUTLINED_FUNCTION_55_0();
    v14 = OUTLINED_FUNCTION_17_24();
    *(_QWORD *)(v14 + 16) = v1;
    *(_QWORD *)(v14 + 24) = v0;
    OUTLINED_FUNCTION_20_38(v14, 0xD000000000000035);
    OUTLINED_FUNCTION_2_33((uint64_t)sub_1C0280334, MEMORY[0x1E0C809B0], 1107296256, v15, v16);
    OUTLINED_FUNCTION_6_98();
    OUTLINED_FUNCTION_3_4();
    OUTLINED_FUNCTION_7_94();
    OUTLINED_FUNCTION_27_45();
    return (xpc_object_t)OUTLINED_FUNCTION_30_37();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void static XPCActivity.registerHourlySignalRefresh(hourlySignalRefresh:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  xpc_object_t v3;
  uint64_t v4;
  xpc_object_t v5;
  uint64_t v6;
  xpc_object_t v7;
  xpc_object_t v8;
  uint64_t v9;
  xpc_object_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_3_131();
  sub_1C03046CC();
  OUTLINED_FUNCTION_31_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728170);
  v2 = OUTLINED_FUNCTION_12_64();
  *(_OWORD *)(v2 + 16) = xmmword_1C030AAE0;
  v3 = OUTLINED_FUNCTION_4_102(v2, *MEMORY[0x1E0C80898]);
  v4 = *MEMORY[0x1E0C807A8];
  *(_QWORD *)(v2 + 40) = v3;
  *(_QWORD *)(v2 + 48) = v4;
  v5 = xpc_int64_create(*MEMORY[0x1E0C807C0]);
  v6 = *MEMORY[0x1E0C80878];
  *(_QWORD *)(v2 + 56) = v5;
  *(_QWORD *)(v2 + 64) = v6;
  v7 = xpc_string_create((const char *)*MEMORY[0x1E0C80888]);
  v8 = OUTLINED_FUNCTION_11_78((uint64_t)v7, *MEMORY[0x1E0C80790]);
  v9 = *MEMORY[0x1E0C80760];
  *(_QWORD *)(v2 + 88) = v8;
  *(_QWORD *)(v2 + 96) = v9;
  v10 = xpc_int64_create(60);
  v11 = *MEMORY[0x1E0C80738];
  *(_QWORD *)(v2 + 104) = v10;
  *(_QWORD *)(v2 + 112) = v11;
  *(_QWORD *)(v2 + 120) = OUTLINED_FUNCTION_5_93();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7275F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728100);
  OUTLINED_FUNCTION_24_31();
  OUTLINED_FUNCTION_2_123();
  OUTLINED_FUNCTION_33_35();
  sub_1C00B162C();
  OUTLINED_FUNCTION_14();
  v12 = OUTLINED_FUNCTION_47();
  sub_1C00B1640(v12);
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_31_38();
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_9_88();
  OUTLINED_FUNCTION_33_26();
  OUTLINED_FUNCTION_55_0();
  v13 = OUTLINED_FUNCTION_17_24();
  *(_QWORD *)(v13 + 16) = v1;
  *(_QWORD *)(v13 + 24) = v0;
  OUTLINED_FUNCTION_20_38(v13, 0xD00000000000002CLL);
  OUTLINED_FUNCTION_2_33((uint64_t)sub_1C0280334, MEMORY[0x1E0C809B0], 1107296256, v14, v15);
  OUTLINED_FUNCTION_6_98();
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_7_94();
  OUTLINED_FUNCTION_27_45();
  OUTLINED_FUNCTION_30_37();
  OUTLINED_FUNCTION_13_63();
}

xpc_activity_state_t sub_1C0280F60(_xpc_activity_s *a1, void (*a2)(void), uint64_t a3, uint64_t a4, unint64_t a5, const char *a6)
{
  xpc_activity_state_t result;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;

  result = xpc_activity_get_state(a1);
  if (result == 2)
  {
    if (qword_1ED727E88 != -1)
      swift_once();
    v11 = sub_1C0303B98();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED7295E8);
    v12 = sub_1C0303B80();
    v13 = sub_1C03042E8();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1C0039000, v12, v13, a6, v14, 2u);
      OUTLINED_FUNCTION_5();
    }

    a2();
    if (qword_1ED728430 != -1)
      swift_once();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED729650);
    swift_bridgeObjectRetain_n();
    v15 = sub_1C0303B80();
    v16 = sub_1C03042E8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      v18 = OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v17 = 136315138;
      OUTLINED_FUNCTION_44();
      sub_1C003E6D8(a4, a5, &v18);
      sub_1C03044B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0039000, v15, v16, "queued XPC activity. id=%s", v17, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }

    return swift_bridgeObjectRelease_n();
  }
  return result;
}

void sub_1C02811A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;

  v1 = *(unsigned __int8 *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED728160);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0313400;
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0C807A8];
  __asm { BR              X10 }
}

xpc_object_t sub_1C0281220()
{
  _QWORD *v0;
  BOOL v1;
  BOOL v2;
  int v3;
  xpc_object_t v4;
  uint64_t v5;
  xpc_object_t v6;
  uint64_t v7;
  xpc_object_t v8;
  uint64_t v9;
  xpc_object_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  xpc_object_t v18;

  v4 = xpc_int64_create(*MEMORY[0x1E0C807D8]);
  v5 = *MEMORY[0x1E0C80898];
  v0[5] = v4;
  v0[6] = v5;
  v6 = xpc_BOOL_create(v3 != 0);
  v7 = *MEMORY[0x1E0C80878];
  v0[7] = v6;
  v0[8] = v7;
  v8 = xpc_string_create((const char *)*MEMORY[0x1E0C80888]);
  v9 = *MEMORY[0x1E0C808D8];
  v0[9] = v8;
  v0[10] = v9;
  v10 = xpc_BOOL_create(v2);
  v11 = *MEMORY[0x1E0C80738];
  v0[11] = v10;
  v0[12] = v11;
  v0[13] = xpc_BOOL_create(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7275F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728108);
  sub_1C028017C();
  v12 = sub_1C0303DB4();
  swift_bridgeObjectRetain();
  sub_1C00B162C();
  v14 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C00B1618();
  v16 = v15;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRelease();
  v18 = xpc_dictionary_create((const char *const *)(v14 + 32), (xpc_object_t *)(v16 + 32), v17);
  swift_release();
  swift_release();
  return v18;
}

void sub_1C0281370(_xpc_activity_s *a1, uint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;

  if (xpc_activity_get_state(a1) == 2)
  {
    v11 = (id)(*(uint64_t (**)(_xpc_activity_s *))(a2 + 24))(a1);
    if (qword_1ED728460 != -1)
      swift_once();
    objc_msgSend((id)qword_1ED728388, sel_addOperation_);
    if (qword_1ED728430 != -1)
      swift_once();
    v4 = sub_1C0303B98();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED729650);
    sub_1C02819E0(a2);
    v5 = sub_1C0303B80();
    v6 = sub_1C03042E8();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v12 = v8;
      *(_DWORD *)v7 = 136315138;
      v9 = *(_QWORD *)a2;
      v10 = *(_QWORD *)(a2 + 8);
      swift_bridgeObjectRetain();
      sub_1C003E6D8(v9, v10, &v12);
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      sub_1C0281A14(a2);
      _os_log_impl(&dword_1C0039000, v5, v6, "queued XPC activity. id=%s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v8, -1, -1);
      MEMORY[0x1C3B98378](v7, -1, -1);

    }
    else
    {
      sub_1C0281A14(a2);

    }
  }
}

BOOL static XPCActivity.RepeatInterval.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t XPCActivity.RepeatInterval.hash(into:)()
{
  return sub_1C0304B10();
}

uint64_t XPCActivity.RepeatInterval.hashValue.getter()
{
  sub_1C0304B04();
  sub_1C0304B10();
  return sub_1C0304B40();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

xpc_activity_state_t sub_1C0281644(_xpc_activity_s *a1)
{
  uint64_t v1;

  return sub_1C0280F60(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), "received DailySignalRefresh XPC Activity");
}

xpc_activity_state_t sub_1C028166C(_xpc_activity_s *a1)
{
  uint64_t v1;

  return sub_1C0280F60(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), "received RecurringAudioAppSignalsSync XPC Activity");
}

uint64_t objectdestroyTm_1()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

xpc_activity_state_t sub_1C02816C0(_xpc_activity_s *a1)
{
  uint64_t v1;

  return sub_1C0280F60(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), "received HourlySignalRefresh XPC Activity");
}

unint64_t sub_1C02816E8()
{
  unint64_t result;

  result = qword_1EF5C2750[0];
  if (!qword_1EF5C2750[0])
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for XPCActivity.RepeatInterval, &type metadata for XPCActivity.RepeatInterval);
    atomic_store(result, qword_1EF5C2750);
  }
  return result;
}

uint64_t destroy for XPCActivity()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for XPCActivity(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for XPCActivity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for XPCActivity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for XPCActivity()
{
  return &type metadata for XPCActivity;
}

uint64_t storeEnumTagSinglePayload for XPCActivity.RepeatInterval(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C02818CC + 4 * byte_1C0322D82[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C0281900 + 4 * byte_1C0322D7D[v4]))();
}

uint64_t sub_1C0281900(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0281908(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0281910);
  return result;
}

uint64_t sub_1C028191C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0281924);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C0281928(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0281930(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCActivity.RepeatInterval()
{
  return &type metadata for XPCActivity.RepeatInterval;
}

uint64_t sub_1C028194C()
{
  return OUTLINED_FUNCTION_32_3();
}

uint64_t sub_1C0281958()
{
  return OUTLINED_FUNCTION_32_3();
}

uint64_t sub_1C0281964()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0281998(uint64_t a1)
{
  uint64_t v1;

  return sub_1C021D268(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint8_t **)(v1 + 32));
}

uint64_t sub_1C02819A4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TaskSuccessMetricsPublisher();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C02819E0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1C0281A14(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0281A48()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1C0281A74(_xpc_activity_s *a1)
{
  uint64_t v1;

  sub_1C0281370(a1, v1 + 16);
}

uint64_t OUTLINED_FUNCTION_2_123()
{
  return sub_1C0303DB4();
}

xpc_object_t OUTLINED_FUNCTION_4_102@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a1 + 32) = a2;
  return xpc_BOOL_create(1);
}

xpc_object_t OUTLINED_FUNCTION_5_93()
{
  return xpc_BOOL_create(1);
}

uint64_t OUTLINED_FUNCTION_6_98()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_7_94()
{
  void *v0;
  const char *v1;
  void *v2;

  xpc_activity_register(v1, v0, v2);
}

xpc_object_t OUTLINED_FUNCTION_9_88()
{
  uint64_t v0;
  size_t v1;
  uint64_t v2;

  return xpc_dictionary_create((const char *const *)(v0 + 32), (xpc_object_t *)(v2 + 32), v1);
}

xpc_object_t OUTLINED_FUNCTION_11_78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return xpc_int64_create(60);
}

uint64_t OUTLINED_FUNCTION_12_64()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_15_56()
{
  return sub_1C0303DB4();
}

uint64_t OUTLINED_FUNCTION_20_38@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(result + 32) = a2;
  *(_QWORD *)(result + 40) = (v2 - 32) | 0x8000000000000000;
  return result;
}

xpc_object_t OUTLINED_FUNCTION_21_44()
{
  uint64_t v0;
  size_t v1;
  uint64_t v2;

  return xpc_dictionary_create((const char *const *)(v0 + 32), (xpc_object_t *)(v2 + 32), v1);
}

xpc_object_t OUTLINED_FUNCTION_23_42()
{
  return xpc_int64_create(0);
}

unint64_t OUTLINED_FUNCTION_24_31()
{
  return sub_1C028017C();
}

xpc_object_t OUTLINED_FUNCTION_25_33()
{
  return xpc_BOOL_create(0);
}

void OUTLINED_FUNCTION_27_45()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t OUTLINED_FUNCTION_30_37()
{
  return swift_unknownObjectRelease();
}

void OUTLINED_FUNCTION_35_42(const char *a1)
{
  void *v1;
  void *v2;

  xpc_activity_register(a1, v1, v2);
}

uint64_t ResolutionResult.eraseToAnyResolutionResult()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  return sub_1C0281D00((uint64_t)v5, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v7, a2);
}

uint64_t ResolutionResult.result.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;

  v6 = type metadata accessor for ResolutionState(0, *(_QWORD *)(a1 + 16), a2, a3);
  return OUTLINED_FUNCTION_136(a4, v4, v6, *(uint64_t (**)(void))(*(_QWORD *)(v6 - 8) + 16));
}

uint64_t ResolutionResult.result.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  v6 = type metadata accessor for ResolutionState(0, *(_QWORD *)(a2 + 16), a3, a4);
  return OUTLINED_FUNCTION_136(v4, a1, v6, *(uint64_t (**)(void))(*(_QWORD *)(v6 - 8) + 40));
}

uint64_t (*ResolutionResult.result.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ResolutionResult.resolutionInfo.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t ResolutionResult.resolutionInfo.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40))(v2 + *(int *)(a2 + 36), a1);
}

uint64_t (*ResolutionResult.resolutionInfo.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C0281D00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t *boxed_opaque_existential_0;

  v7 = type metadata accessor for ResolutionResult(0, a2, a3, a4);
  a5[3] = v7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a5);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(boxed_opaque_existential_0, a1, v7);
}

uint64_t type metadata accessor for ResolutionState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ResolutionState);
}

void static ResolutionState<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  _QWORD v18[6];
  uint64_t v19;
  uint64_t v20;

  v18[3] = a4;
  v19 = a1;
  v20 = a2;
  v18[5] = *(_QWORD *)(a3 - 8);
  v4 = MEMORY[0x1E0C80A78](a1);
  v18[2] = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v18[1] = (char *)v18 - v6;
  v9 = type metadata accessor for ResolutionState(0, v7, v7, v8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v12 = MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v14 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v16 = (char *)v18 + *(int *)(v14 + 48) - v15;
  v18[4] = v10;
  OUTLINED_FUNCTION_6_61((uint64_t)v18 - v15, v19);
  OUTLINED_FUNCTION_6_61((uint64_t)v16, v20);
  v17 = (char *)sub_1C0281EE4 + 4 * byte_1C0322E30[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1C0281EE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_6_61(v5, v2);
  if (OUTLINED_FUNCTION_1_73())
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 104) + 8))(v5, v1);
    v3 = 0;
  }
  else
  {
    v8 = *(_QWORD *)(v7 - 104);
    OUTLINED_FUNCTION_16_36(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
    OUTLINED_FUNCTION_14_45();
    OUTLINED_FUNCTION_9_50();
    ((void (*)(uint64_t, uint64_t))v8)(v5, v1);
    v6 = *(_QWORD *)(v7 - 112);
    v4 = v0;
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
  return v3 & 1;
}

void sub_1C0282030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  static ResolutionState<A>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t AnyResolutionResult.unbox<A, B>()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v11;

  sub_1C003E8FC(v3, (uint64_t)&v11);
  v8 = type metadata accessor for ResolutionResult(0, a1, a2, v7);
  v9 = swift_dynamicCast();
  return __swift_storeEnumTagSinglePayload(a3, v9 ^ 1u, 1, v8);
}

uint64_t type metadata accessor for ResolutionResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ResolutionResult);
}

uint64_t sub_1C02820D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v6;

  result = type metadata accessor for ResolutionState(319, *(_QWORD *)(a1 + 16), a3, a4);
  if (v5 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v6 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *sub_1C028215C(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;

  v4 = __dst;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v6 + 64) <= 8uLL)
    v7 = 8;
  else
    v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  v11 = v7 + 1 + v9;
  v12 = v9 | *(_DWORD *)(v6 + 80) & 0xF8;
  v13 = (*(_DWORD *)(v6 + 80) | v9) & 0x100000;
  if (v12 > 7 || v13 != 0 || (v11 & (unint64_t)~v10) + *(_QWORD *)(v8 + 64) > 0x18)
  {
    v16 = *(_QWORD *)__src;
    *v4 = *(_QWORD *)__src;
    v4 = (_QWORD *)(v16 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
    swift_retain();
  }
  else
  {
    v17 = __src[v7];
    if (v17 >= 3)
    {
      if (v7 <= 3)
        v18 = v7;
      else
        v18 = 4;
      __asm { BR              X15 }
    }
    v19 = ~v10;
    if (v17 == 2)
    {
      *(_QWORD *)__dst = *(_QWORD *)__src;
      __dst[v7] = 2;
      swift_bridgeObjectRetain();
    }
    else if (v17 == 1)
    {
      (*(void (**)(_BYTE *, unsigned __int8 *))(v6 + 16))(__dst, __src);
      *((_BYTE *)v4 + v7) = 1;
    }
    else
    {
      (*(void (**)(_BYTE *, unsigned __int8 *))(v6 + 16))(__dst, __src);
      *((_BYTE *)v4 + v7) = 0;
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v11) & v19, (unint64_t)&__src[v11] & v19, v5);
  }
  return v4;
}

uint64_t sub_1C028231C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a1 + v5);
  if (v6 >= 3)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 2)
    swift_bridgeObjectRelease();
  else
    (*(void (**)(uint64_t))(v4 + 8))(a1);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((a1 + v5 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

_BYTE *sub_1C0282418(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v6 + 64) <= 8uLL)
    v7 = 8;
  else
    v7 = *(_QWORD *)(v6 + 64);
  v8 = __src[v7];
  if (v8 >= 3)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X13 }
  }
  if (v8 == 2)
  {
    *(_QWORD *)__dst = *(_QWORD *)__src;
    __dst[v7] = 2;
    swift_bridgeObjectRetain();
  }
  else if (v8 == 1)
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v6 + 16))(__dst, __src);
    __dst[v7] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v6 + 16))(__dst, __src);
    __dst[v7] = 0;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 16))((unint64_t)&__dst[v7 + 1 + *(unsigned __int8 *)(v10 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), (unint64_t)&__src[v7 + 1 + *(unsigned __int8 *)(v10 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return __dst;
}

unsigned __int8 *sub_1C028256C(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v8 = 8;
  else
    v8 = *(_QWORD *)(v7 + 64);
  if (__dst != __src)
  {
    v9 = __dst[v8];
    if (v9 >= 3)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 2)
      swift_bridgeObjectRelease();
    else
      (*(void (**)(unsigned __int8 *, _QWORD))(v7 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v11 = __src[v8];
    if (v11 >= 3)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 2)
    {
      *(_QWORD *)__dst = *(_QWORD *)__src;
      __dst[v8] = 2;
      swift_bridgeObjectRetain();
    }
    else if (v11 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(__dst, __src, v6);
      __dst[v8] = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(__dst, __src, v6);
      __dst[v8] = 0;
    }
  }
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 24))((unint64_t)&__dst[v8 + 1 + *(unsigned __int8 *)(v13 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (unint64_t)&__src[v8 + 1 + *(unsigned __int8 *)(v13 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return __dst;
}

_BYTE *sub_1C028277C(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v6 + 64) <= 8uLL)
    v7 = 8;
  else
    v7 = *(_QWORD *)(v6 + 64);
  v8 = __src[v7];
  if (v8 >= 3)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X13 }
  }
  if (v8 == 2)
  {
    *(_QWORD *)__dst = *(_QWORD *)__src;
    v10 = 2;
LABEL_14:
    __dst[v7] = v10;
    goto LABEL_15;
  }
  if (v8 == 1)
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v6 + 32))(__dst, __src);
    v10 = 1;
    goto LABEL_14;
  }
  (*(void (**)(_BYTE *, unsigned __int8 *))(v6 + 32))(__dst, __src);
  __dst[v7] = 0;
LABEL_15:
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 32))((unint64_t)&__dst[v7 + 1 + *(unsigned __int8 *)(v11 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (unint64_t)&__src[v7 + 1 + *(unsigned __int8 *)(v11 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return __dst;
}

unsigned __int8 *sub_1C02828C8(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v8 = 8;
  else
    v8 = *(_QWORD *)(v7 + 64);
  if (__dst != __src)
  {
    v9 = __dst[v8];
    if (v9 >= 3)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 2)
      swift_bridgeObjectRelease();
    else
      (*(void (**)(unsigned __int8 *, _QWORD))(v7 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v11 = __src[v8];
    if (v11 >= 3)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 2)
    {
      *(_QWORD *)__dst = *(_QWORD *)__src;
      v13 = 2;
    }
    else
    {
      if (v11 != 1)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(__dst, __src, v6);
        __dst[v8] = 0;
        goto LABEL_24;
      }
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(__dst, __src, v6);
      v13 = 1;
    }
    __dst[v8] = v13;
  }
LABEL_24:
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v14 + 40))((unint64_t)&__dst[v8 + 1 + *(unsigned __int8 *)(v14 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v14 + 80), (unint64_t)&__src[v8 + 1 + *(unsigned __int8 *)(v14 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  return __dst;
}

uint64_t sub_1C0282AD0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char v15;
  int v16;
  unsigned int v18;
  int v19;
  unsigned int v20;

  v5 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
  v7 = 8;
  if (v6 > 8)
    v7 = v6;
  v8 = *(_QWORD *)(v4 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= 0xFC)
    v10 = 252;
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (!a2)
    return 0;
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = v7 + v11 + 1;
  v13 = a2 - v10;
  if (a2 <= v10)
    goto LABEL_24;
  v14 = (v12 & ~v11) + *(_QWORD *)(v8 + 64);
  v15 = 8 * v14;
  if (v14 <= 3)
  {
    v18 = ((v13 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v18))
    {
      v16 = *(_DWORD *)(a1 + v14);
      if (!v16)
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v18 > 0xFF)
    {
      v16 = *(unsigned __int16 *)(a1 + v14);
      if (!*(_WORD *)(a1 + v14))
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v18 < 2)
    {
LABEL_24:
      if (v9 > 0xFC)
        return __swift_getEnumTagSinglePayload((v12 + a1) & ~v11, v9, v4);
      v20 = *(unsigned __int8 *)(a1 + v7);
      if (v20 >= 4)
        return (v20 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v16 = *(unsigned __int8 *)(a1 + v14);
  if (!*(_BYTE *)(a1 + v14))
    goto LABEL_24;
LABEL_17:
  v19 = (v16 - 1) << v15;
  if (v14 > 3)
    v19 = 0;
  if (!(_DWORD)v14)
    return v10 + v19 + 1;
  if (v14 > 3)
    LODWORD(v14) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C0282BBC + 4 * byte_1C0322E5C[(v14 - 1)]))();
}

void sub_1C0282C24(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unsigned int v9;
  size_t v10;
  char v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(a4 + 16);
  v5 = *(_QWORD *)(a4 + 24);
  v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  if (v7 <= 8)
    v7 = 8;
  v8 = *(_QWORD *)(v5 - 8);
  if (*(_DWORD *)(v8 + 84) <= 0xFCu)
    v9 = 252;
  else
    v9 = *(_DWORD *)(v8 + 84);
  v10 = ((v7 + 1 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
      + *(_QWORD *)(v8 + 64);
  v11 = 8 * v10;
  if (a3 > v9)
  {
    if (v10 <= 3)
    {
      v14 = ((a3 - v9 + ~(-1 << v11)) >> v11) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v9 < a2)
  {
    v13 = ~v9 + a2;
    if (v10 < 4)
    {
      if ((_DWORD)v10)
      {
        v15 = v13 & ~(-1 << v11);
        bzero(a1, v10);
        if ((_DWORD)v10 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v10 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t *sub_1C0282E94(uint64_t *__dst, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v10;
  uint64_t v11;

  v3 = __dst;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    v10 = *((unsigned __int8 *)a2 + v5);
    if (v10 >= 3)
    {
      if (v5 <= 3)
        v11 = v5;
      else
        v11 = 4;
      __asm { BR              X14 }
    }
    if (v10 == 2)
    {
      *__dst = *a2;
      *((_BYTE *)__dst + v5) = 2;
      swift_bridgeObjectRetain();
    }
    else if (v10 == 1)
    {
      (*(void (**)(uint64_t *))(v4 + 16))(__dst);
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      (*(void (**)(uint64_t *))(v4 + 16))(__dst);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_1C0282FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 < 3)
  {
    if (v4 == 2)
      return swift_bridgeObjectRelease();
    else
      return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_1C0283028 + 4 * byte_1C0322E6F[v5]))();
  }
}

_BYTE *sub_1C0283090(_BYTE *__dst, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 3)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 2)
  {
    *(_QWORD *)__dst = *a2;
    __dst[v5] = 2;
    swift_bridgeObjectRetain();
  }
  else if (v6 == 1)
  {
    (*(void (**)(_BYTE *))(v4 + 16))(__dst);
    __dst[v5] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *))(v4 + 16))(__dst);
    __dst[v5] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1C028319C(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = __dst[v7];
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 2)
      swift_bridgeObjectRelease();
    else
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v10 = __src[v7];
    if (v10 >= 3)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 2)
    {
      *(_QWORD *)__dst = *(_QWORD *)__src;
      __dst[v7] = 2;
      swift_bridgeObjectRetain();
    }
    else if (v10 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v7] = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v7] = 0;
    }
  }
  return __dst;
}

_BYTE *sub_1C0283374(_BYTE *__dst, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 3)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 2)
  {
    *(_QWORD *)__dst = *a2;
    v8 = 2;
LABEL_14:
    __dst[v5] = v8;
    return __dst;
  }
  if (v6 == 1)
  {
    (*(void (**)(_BYTE *))(v4 + 32))(__dst);
    v8 = 1;
    goto LABEL_14;
  }
  (*(void (**)(_BYTE *))(v4 + 32))(__dst);
  __dst[v5] = 0;
  return __dst;
}

unsigned __int8 *sub_1C0283478(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = __dst[v7];
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 2)
      swift_bridgeObjectRelease();
    else
      (*(void (**)(unsigned __int8 *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v10 = __src[v7];
    if (v10 >= 3)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 2)
    {
      *(_QWORD *)__dst = *(_QWORD *)__src;
      v12 = 2;
    }
    else
    {
      if (v10 != 1)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
        __dst[v7] = 0;
        return __dst;
      }
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      v12 = 1;
    }
    __dst[v7] = v12;
  }
  return __dst;
}

uint64_t sub_1C0283648(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 252) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 4)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 253);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C028370C + 4 * byte_1C0322E92[(v4 - 1)]))();
}

void sub_1C0283758(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFD)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 252) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFC)
    __asm { BR              X11 }
  v9 = a2 - 253;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_1C02838FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 3u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C0283944 + 4 * byte_1C0322EA0[v3]))();
}

uint64_t initializeWithCopy for AnyResolutionResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for AnyResolutionResult(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_0(a1, a2);
  return a1;
}

_OWORD *assignWithTake for AnyResolutionResult(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for StringSignal(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StringSignal(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyResolutionResult()
{
  return &type metadata for AnyResolutionResult;
}

uint64_t sub_1C0283AA4(uint64_t a1, uint64_t a2, char a3)
{
  int v3;
  uint64_t result;
  double v6;
  int v7;
  char v8;
  int v9;
  BOOL v10;
  char v11;
  uint64_t v12;
  char *v13;
  char v14;
  double v15;
  int v16;
  int v17;
  double v19;
  int v20;
  int v21;
  double v23;
  int v24;
  int v25;
  double v27;
  int v28;
  int v29;
  double v31;
  int v32;
  int v33;
  double v35;
  int v36;
  int v37;

  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    return 0;
  v3 = *(unsigned __int8 *)(a1 + 25);
  if (v3 == 13)
    return 0;
  result = 0;
  switch(v3)
  {
    case 1:
      OUTLINED_FUNCTION_4_103();
      if (v10)
      {
        __break(1u);
        goto LABEL_84;
      }
      if (v6 <= -9.22337204e18)
      {
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
        JUMPOUT(0x1C0283DF4);
      }
      OUTLINED_FUNCTION_2_124();
      if (!v8)
        goto LABEL_85;
      v10 = v7 == 20;
      v9 = v7 & 0xFE;
      v10 = v10 || v9 == 8;
      v11 = !v10;
      OUTLINED_FUNCTION_0_140();
      OUTLINED_FUNCTION_7_14();
      OUTLINED_FUNCTION_3_132();
      v14 = 5;
      return sub_1C0078A30(v14, v12, a3, 1, v13, 1, v11, 0);
    case 4:
      OUTLINED_FUNCTION_4_103();
      if (v10)
        goto LABEL_86;
      if (v15 <= -9.22337204e18)
        goto LABEL_87;
      OUTLINED_FUNCTION_2_124();
      if (!v8)
        goto LABEL_88;
      v10 = v16 == 20;
      v17 = v16 & 0xFE;
      v11 = !v10 && v17 != 8;
      OUTLINED_FUNCTION_0_140();
      OUTLINED_FUNCTION_7_14();
      OUTLINED_FUNCTION_3_132();
      v14 = 4;
      return sub_1C0078A30(v14, v12, a3, 1, v13, 1, v11, 0);
    case 6:
      OUTLINED_FUNCTION_4_103();
      if (v10)
        goto LABEL_89;
      if (v19 <= -9.22337204e18)
        goto LABEL_90;
      OUTLINED_FUNCTION_2_124();
      if (!v8)
        goto LABEL_91;
      v10 = v20 == 20;
      v21 = v20 & 0xFE;
      v11 = !v10 && v21 != 8;
      OUTLINED_FUNCTION_0_140();
      OUTLINED_FUNCTION_7_14();
      OUTLINED_FUNCTION_3_132();
      v14 = 2;
      return sub_1C0078A30(v14, v12, a3, 1, v13, 1, v11, 0);
    case 7:
      OUTLINED_FUNCTION_4_103();
      if (v10)
        goto LABEL_92;
      if (v23 <= -9.22337204e18)
        goto LABEL_93;
      OUTLINED_FUNCTION_2_124();
      if (!v8)
        goto LABEL_94;
      v10 = v24 == 20;
      v25 = v24 & 0xFE;
      v11 = !v10 && v25 != 8;
      OUTLINED_FUNCTION_0_140();
      OUTLINED_FUNCTION_7_14();
      OUTLINED_FUNCTION_3_132();
      v14 = 9;
      return sub_1C0078A30(v14, v12, a3, 1, v13, 1, v11, 0);
    case 10:
      OUTLINED_FUNCTION_4_103();
      if (v10)
        goto LABEL_95;
      if (v27 <= -9.22337204e18)
        goto LABEL_96;
      OUTLINED_FUNCTION_2_124();
      if (!v8)
        goto LABEL_97;
      v10 = v28 == 20;
      v29 = v28 & 0xFE;
      v11 = !v10 && v29 != 8;
      OUTLINED_FUNCTION_0_140();
      OUTLINED_FUNCTION_7_14();
      OUTLINED_FUNCTION_3_132();
      v14 = 1;
      return sub_1C0078A30(v14, v12, a3, 1, v13, 1, v11, 0);
    case 11:
      OUTLINED_FUNCTION_4_103();
      if (v10)
        goto LABEL_98;
      if (v31 <= -9.22337204e18)
        goto LABEL_99;
      OUTLINED_FUNCTION_2_124();
      if (!v8)
        goto LABEL_100;
      v10 = v32 == 20;
      v33 = v32 & 0xFE;
      v11 = !v10 && v33 != 8;
      OUTLINED_FUNCTION_0_140();
      OUTLINED_FUNCTION_7_14();
      OUTLINED_FUNCTION_3_132();
      v14 = 8;
      return sub_1C0078A30(v14, v12, a3, 1, v13, 1, v11, 0);
    case 12:
      OUTLINED_FUNCTION_4_103();
      if (v10)
        goto LABEL_101;
      if (v35 <= -9.22337204e18)
        goto LABEL_102;
      OUTLINED_FUNCTION_2_124();
      if (!v8)
        goto LABEL_103;
      v10 = v36 == 20;
      v37 = v36 & 0xFE;
      v11 = !v10 && v37 != 8;
      OUTLINED_FUNCTION_0_140();
      OUTLINED_FUNCTION_7_14();
      OUTLINED_FUNCTION_3_132();
      v14 = 11;
      return sub_1C0078A30(v14, v12, a3, 1, v13, 1, v11, 0);
    default:
      return result;
  }
}

uint64_t OUTLINED_FUNCTION_0_140()
{
  return type metadata accessor for DateTimeConstraint();
}

void sub_1C0283E64(int a1, unint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  void *v5;
  void *v6;

  sub_1C00923CC(a1 & 0x10101, a2, a3, a4 & 0x10101);
  if (!v4)
  {
    sub_1C0303E8C();
    OUTLINED_FUNCTION_2_125();
    sub_1C0303D84();
    OUTLINED_FUNCTION_0_141();
    swift_bridgeObjectRelease();

  }
  OUTLINED_FUNCTION_1_131();
}

void sub_1C0283EF0()
{
  uint64_t v0;
  void *v1;
  void *v2;

  sub_1C009277C();
  if (!v0)
  {
    sub_1C0303E8C();
    OUTLINED_FUNCTION_2_125();
    sub_1C0303D84();
    OUTLINED_FUNCTION_0_141();
    swift_bridgeObjectRelease();

  }
  OUTLINED_FUNCTION_1_131();
}

void sub_1C0283F6C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  sub_1C0092564();
  if (!v0)
  {
    v1 = (void *)sub_1C0303E8C();
    sub_1C0071A20();
    v2 = (void *)sub_1C0303D84();
    AnalyticsSendEvent();
    swift_bridgeObjectRelease();

  }
}

void __swiftcall SportsResolverMetrics.init(config:isSiriInstructionExecuted:isDisambiguation:isRecommendationFound:isTaskSuccess:)(SiriInference::SportsResolverMetrics *__return_ptr retstr, SiriInference::SportsResolverConfig config, Swift::Bool isSiriInstructionExecuted, Swift::Bool isDisambiguation, Swift::Bool isRecommendationFound, Swift::Bool isTaskSuccess)
{
  Swift::String v6;
  uint64_t v7;
  void *v8;

  v6 = *(Swift::String *)config.intentTypeName._countAndFlagsBits;
  v7 = *(_QWORD *)(config.intentTypeName._countAndFlagsBits + 16);
  v8 = *(void **)(config.intentTypeName._countAndFlagsBits + 24);
  retstr->isSiriInstructionExecuted = (Swift::Bool)config.intentTypeName._object;
  retstr->isDisambiguation = config.bundleId._countAndFlagsBits;
  retstr->isRecommendationFound = (Swift::Bool)config.bundleId._object;
  retstr->isTaskSuccess = isSiriInstructionExecuted;
  retstr->intentTypeName = v6;
  retstr->bundleId._countAndFlagsBits = v7;
  retstr->bundleId._object = v8;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SportsResolverMetrics.logSportsMetric()()
{
  sub_1C0283F6C();
}

uint64_t initializeWithCopy for SportsResolverMetrics(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsResolverMetrics(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SportsResolverMetrics(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsResolverMetrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsResolverMetrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsResolverMetrics()
{
  return &type metadata for SportsResolverMetrics;
}

uint64_t OUTLINED_FUNCTION_0_141()
{
  return AnalyticsSendEvent();
}

unint64_t OUTLINED_FUNCTION_2_125()
{
  return sub_1C0071A20();
}

ValueMetadata *type metadata accessor for CalendarComponentConstraintSolver()
{
  return &type metadata for CalendarComponentConstraintSolver;
}

uint64_t sub_1C0284264(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v28;
  int64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;
  uint64_t v38;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C03045C4();
    type metadata accessor for DateTimeConstraint();
    sub_1C0068358((unint64_t *)&qword_1EF5B9808, (uint64_t (*)(uint64_t))type metadata accessor for DateTimeConstraint, (uint64_t)&unk_1C031D374);
    sub_1C0304270();
    v2 = v33;
    v31 = v34;
    v3 = v35;
    v4 = v36;
    v5 = v37;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v31 = a1 + 56;
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v4 = 0;
  }
  v30 = (unint64_t)(v3 + 64) >> 6;
  while (1)
  {
    v9 = v4;
    if ((v2 & 0x8000000000000000) == 0)
      break;
    if (!sub_1C0304624())
      goto LABEL_65;
    type metadata accessor for DateTimeConstraint();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v12 = v38;
    swift_unknownObjectRelease();
    if (!v38)
      goto LABEL_65;
LABEL_31:
    if (*(_BYTE *)(v12 + 16) == 9)
    {
      v16 = v2;
      v17 = *(unsigned __int8 *)(v12 + 49);
      v18 = *(unsigned __int8 *)(a2 + 49);
      if (v17 == 1)
        v19 = 6581861;
      else
        v19 = 0x746573746F6ELL;
      if (v17 == 1)
        v20 = 0xE300000000000000;
      else
        v20 = 0xE600000000000000;
      if (*(_BYTE *)(v12 + 49))
        v21 = v19;
      else
        v21 = 0x7472617473;
      if (*(_BYTE *)(v12 + 49))
        v22 = v20;
      else
        v22 = 0xE500000000000000;
      if (v18 == 1)
        v23 = 6581861;
      else
        v23 = 0x746573746F6ELL;
      if (v18 == 1)
        v24 = 0xE300000000000000;
      else
        v24 = 0xE600000000000000;
      if (*(_BYTE *)(a2 + 49))
        v25 = v23;
      else
        v25 = 0x7472617473;
      if (*(_BYTE *)(a2 + 49))
        v26 = v24;
      else
        v26 = 0xE500000000000000;
      if (v21 == v25 && v22 == v26)
      {
        swift_release();
        swift_bridgeObjectRelease_n();
LABEL_64:
        sub_1C00B7078();
        swift_release();
        return 1;
      }
      v28 = sub_1C0304A08();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v2 = v16;
      if ((v28 & 1) != 0)
        goto LABEL_64;
    }
    else
    {
      swift_release();
    }
  }
  if (v5)
  {
    v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v11 = v10 | (v4 << 6);
    goto LABEL_30;
  }
  v13 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    JUMPOUT(0x1C0284660);
  }
  if (v13 >= v30)
    goto LABEL_65;
  v14 = *(_QWORD *)(v31 + 8 * v13);
  ++v4;
  if (v14)
    goto LABEL_29;
  v4 = v9 + 2;
  if (v9 + 2 >= v30)
    goto LABEL_65;
  v14 = *(_QWORD *)(v31 + 8 * v4);
  if (v14)
    goto LABEL_29;
  v4 = v9 + 3;
  if (v9 + 3 >= v30)
    goto LABEL_65;
  v14 = *(_QWORD *)(v31 + 8 * v4);
  if (v14)
    goto LABEL_29;
  v4 = v9 + 4;
  if (v9 + 4 >= v30)
    goto LABEL_65;
  v14 = *(_QWORD *)(v31 + 8 * v4);
  if (v14)
    goto LABEL_29;
  v4 = v9 + 5;
  if (v9 + 5 >= v30)
    goto LABEL_65;
  v14 = *(_QWORD *)(v31 + 8 * v4);
  if (v14)
  {
LABEL_29:
    v5 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_30:
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v11);
    swift_retain();
    if (!v12)
      goto LABEL_65;
    goto LABEL_31;
  }
  v15 = v9 + 6;
  while (v15 < v30)
  {
    v14 = *(_QWORD *)(v31 + 8 * v15++);
    if (v14)
    {
      v4 = v15 - 1;
      goto LABEL_29;
    }
  }
LABEL_65:
  sub_1C00B7078();
  swift_release();
  return 0;
}

uint64_t sub_1C0284680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unint64_t *a6)
{
  return sub_1C007C740(a1, a2, a3, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_4_104()
{
  return sub_1C0304A08();
}

uint64_t OUTLINED_FUNCTION_9_89@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v1 + 800);
  *(_QWORD *)(v1 + 536) = a1;
  return a1(v3, v2, v4);
}

uint64_t OUTLINED_FUNCTION_10_75()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v0, 3, v1);
}

uint64_t OUTLINED_FUNCTION_11_79()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  *(_QWORD *)(v0 + 640) = v4;
  return v4(v1, v3);
}

uint64_t OUTLINED_FUNCTION_12_65()
{
  _QWORD *v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[69] + 16);
  v2 = v0[68];
  v3 = v0[79];
  v4 = v0[97];
  v0[88] = v1;
  return v1(v2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_17_58()
{
  return sub_1C0303B80();
}

uint64_t OUTLINED_FUNCTION_18_42(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 704))(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_20_39()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD, uint64_t, uint64_t);

  return v4(*(_QWORD *)(v0 + 840), *(_QWORD *)(v1 + 48) + v2 * *(_QWORD *)(v0 + 856), v3);
}

uint64_t OUTLINED_FUNCTION_21_45()
{
  return sub_1C03049E4();
}

BOOL OUTLINED_FUNCTION_22_50(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

__n128 OUTLINED_FUNCTION_24_32(uint64_t a1)
{
  __n128 *v1;
  _DWORD *v2;
  uint64_t v3;
  __n128 result;

  *(_QWORD *)(v3 - 136) = a1;
  result = v1[16];
  *v2 = result.n128_u32[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_27_46(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1C003E6D8(a1, a2, (uint64_t *)(v2 - 136));
}

uint64_t OUTLINED_FUNCTION_29_35(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, _QWORD);
  uint64_t v3;

  return v2(a1, v3, *(_QWORD *)(v1 + 800));
}

uint64_t OUTLINED_FUNCTION_30_38()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_34_38()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_37_31(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_40_30()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 544);
}

uint64_t OUTLINED_FUNCTION_41_25()
{
  return sub_1C03016CC();
}

uint64_t OUTLINED_FUNCTION_42_25(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return __swift_storeEnumTagSinglePayload(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_43_27()
{
  return sub_1C03016CC();
}

uint64_t OUTLINED_FUNCTION_45_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 3, *(_QWORD *)(v2 + 752));
}

void OUTLINED_FUNCTION_47_27(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_56_22()
{
  return sub_1C0303E80();
}

uint64_t OUTLINED_FUNCTION_57_16@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_60_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_0_142()
{
  return sub_1C0304A08();
}

uint64_t sub_1C0284868()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B87E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C03067E0;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = 0;
  *(_BYTE *)(inited + 48) = 2;
  type metadata accessor for DateTime();
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_2_126();
  OUTLINED_FUNCTION_0_143(9, v1, v2, v3, v4, v5, v6, v7);
  *(_QWORD *)(inited + 56) = v8;
  *(_OWORD *)(inited + 64) = xmmword_1C0322FE0;
  *(_BYTE *)(inited + 80) = 0;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_2_126();
  OUTLINED_FUNCTION_0_143(10, v9, v10, v11, v12, v13, v14, v15);
  *(_QWORD *)(inited + 88) = v16;
  *(_OWORD *)(inited + 96) = xmmword_1C031C660;
  *(_BYTE *)(inited + 112) = 0;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_2_126();
  DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(12, 0, 0, v17, 2, 0, 0, v18);
  *(_QWORD *)(inited + 120) = v19;
  sub_1C0099A4C();
  return sub_1C0303DB4();
}

void OUTLINED_FUNCTION_0_143(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(a1, 0, 0, a4, 12, 0, 0, a8);
}

void sub_1C02849A4(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v20 = (uint64_t)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - v9;
  v21 = MEMORY[0x1E0DEE9D8];
  v19 = *(_QWORD *)(a1 + 16);
  if (v19)
  {
    v11 = 0;
    v17 = a1;
    v18 = a2;
    while (v11 < *(_QWORD *)(a1 + 16))
    {
      v12 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v13 = *(_QWORD *)(v6 + 72);
      sub_1C0045DFC(a1 + v12 + v13 * v11, (uint64_t)v10, &qword_1ED726DB0);
      v14 = sub_1C029D77C((uint64_t)v10, a2);
      if (v2)
      {
        sub_1C0044B78((uint64_t)v10, &qword_1ED726DB0);
        swift_release();
        swift_bridgeObjectRelease();
        sub_1C01ECA20((uint64_t)a2);
        return;
      }
      if ((v14 & 1) != 0)
      {
        sub_1C005A718((uint64_t)v10, v20, &qword_1ED726DB0);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1C00B1738();
        v15 = v21;
        v16 = *(_QWORD *)(v21 + 16);
        if (v16 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          sub_1C00B1738();
          v15 = v21;
        }
        *(_QWORD *)(v15 + 16) = v16 + 1;
        sub_1C005A718(v20, v15 + v12 + v16 * v13, &qword_1ED726DB0);
        a1 = v17;
        a2 = v18;
      }
      else
      {
        sub_1C0044B78((uint64_t)v10, &qword_1ED726DB0);
      }
      if (v19 == ++v11)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    sub_1C01ECA20((uint64_t)a2);
  }
}

void sub_1C0284BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  v29 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v34 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v35 = (uint64_t)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (uint64_t *)((char *)&v28 - v8);
  v10 = MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v28 - v12;
  v38 = MEMORY[0x1E0DEE9D8];
  v33 = *(_QWORD *)(a1 + 16);
  if (!v33)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  v30 = v11;
  v28 = v2;
  v14 = 0;
  v31 = v4;
  v32 = a1;
  v15 = v11;
  while (v14 < *(_QWORD *)(a1 + 16))
  {
    v16 = v9;
    v17 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    v36 = *(_QWORD *)(v34 + 72);
    v37 = v17;
    sub_1C0045DFC(a1 + v17 + v36 * v14, (uint64_t)v13, &qword_1ED726DB0);
    v18 = v4;
    v19 = &v13[*(int *)(v4 + 36)];
    v20 = type metadata accessor for ContactResolver.SignalSet(0);
    LOBYTE(v19) = v19[*(int *)(v20 + 204)];
    sub_1C0045DFC((uint64_t)v13, v15, &qword_1ED726DB0);
    if ((v19 & 1) != 0)
    {
      sub_1C0044B78(v15, &qword_1ED726DB0);
      v9 = v16;
      sub_1C0045DFC((uint64_t)v13, (uint64_t)v16, &qword_1ED726DB0);
LABEL_7:
      sub_1C0044B78((uint64_t)v9, &qword_1ED726DB0);
LABEL_8:
      sub_1C005A718((uint64_t)v13, v35, &qword_1ED726DB0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1C00B1738();
      v22 = v38;
      v23 = *(_QWORD *)(v38 + 16);
      if (v23 >= *(_QWORD *)(v38 + 24) >> 1)
      {
        sub_1C00B1738();
        v22 = v38;
      }
      *(_QWORD *)(v22 + 16) = v23 + 1;
      sub_1C005A718(v35, v22 + v37 + v23 * v36, &qword_1ED726DB0);
      goto LABEL_13;
    }
    v21 = *(_BYTE *)(v15 + *(int *)(v18 + 36) + *(int *)(v20 + 140));
    sub_1C0044B78(v15, &qword_1ED726DB0);
    v9 = v16;
    sub_1C0045DFC((uint64_t)v13, (uint64_t)v16, &qword_1ED726DB0);
    if ((v21 & 1) != 0)
      goto LABEL_7;
    v24 = *v16;
    v25 = v16[1];
    swift_bridgeObjectRetain();
    sub_1C005546C(v24, v25, v29);
    v27 = v26;
    swift_bridgeObjectRelease();
    sub_1C0044B78((uint64_t)v16, &qword_1ED726DB0);
    if ((v27 & 1) != 0)
      goto LABEL_8;
    sub_1C0044B78((uint64_t)v13, &qword_1ED726DB0);
LABEL_13:
    a1 = v32;
    ++v14;
    v4 = v31;
    if (v33 == v14)
      goto LABEL_17;
  }
  __break(1u);
}

void sub_1C0284EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v28 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v25 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v32 = (uint64_t *)((char *)&v23 - v8);
  v33 = MEMORY[0x1E0DEE9D8];
  v27 = *(_QWORD *)(a1 + 16);
  if (!v27)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  v9 = 0;
  v23 = v2;
  v24 = (_QWORD *)(a2 + 56);
  v10 = &qword_1ED726DB0;
  v26 = a1;
  v31 = a2;
  while (1)
  {
    if (v9 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
      goto LABEL_28;
    }
    v11 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v29 = *(_QWORD *)(v28 + 72);
    v30 = v11;
    v12 = v10;
    sub_1C0045DFC(a1 + v11 + v29 * v9, (uint64_t)v32, v10);
    v13 = *(_QWORD *)(a2 + 16);
    if (!v13)
      goto LABEL_20;
    v14 = *v32;
    v15 = v32[1];
    v16 = *(_QWORD *)(v31 + 32) == *v32 && *(_QWORD *)(v31 + 40) == v15;
    if (!v16 && (sub_1C0304A08() & 1) == 0)
      break;
LABEL_10:
    v10 = v12;
    sub_1C0044B78((uint64_t)v32, v12);
LABEL_25:
    a1 = v26;
    a2 = v31;
    if (++v9 == v27)
      goto LABEL_26;
  }
  if (v13 == 1)
  {
LABEL_20:
    v10 = v12;
    sub_1C005A718((uint64_t)v32, v25, v12);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_1C00B1738();
    v21 = v33;
    v22 = *(_QWORD *)(v33 + 16);
    if (v22 >= *(_QWORD *)(v33 + 24) >> 1)
    {
      sub_1C00B1738();
      v21 = v33;
    }
    *(_QWORD *)(v21 + 16) = v22 + 1;
    sub_1C005A718(v25, v21 + v30 + v22 * v29, v12);
    goto LABEL_25;
  }
  v17 = v24;
  v18 = 1;
  while (1)
  {
    v19 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    v20 = *(v17 - 1) == v14 && *v17 == v15;
    if (v20 || (sub_1C0304A08() & 1) != 0)
      goto LABEL_10;
    v17 += 2;
    ++v18;
    if (v19 == v13)
      goto LABEL_20;
  }
LABEL_28:
  __break(1u);
}

void sub_1C0285130(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  _QWORD v25[2];
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v29 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v31 = (uint64_t)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v25 - v8;
  v34 = MEMORY[0x1E0DEE9D8];
  v28 = *(_QWORD *)(a1 + 16);
  if (!v28)
  {
LABEL_27:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  v10 = a2;
  v11 = 0;
  v30 = v10;
  v25[1] = v2;
  v26 = v10 + 7;
  v27 = a1;
  while (1)
  {
    if (v11 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
      goto LABEL_29;
    }
    v12 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v32 = *(_QWORD *)(v29 + 72);
    v33 = v12;
    sub_1C0045DFC(a1 + v12 + v32 * v11, (uint64_t)v9, &qword_1ED726DB0);
    v13 = (uint64_t)v9;
    v14 = &v9[*(int *)(type metadata accessor for Contact() + 88)];
    v15 = *((_QWORD *)v14 + 1);
    if (!v15)
    {
LABEL_11:
      v9 = (char *)v13;
      sub_1C005A718(v13, v31, &qword_1ED726DB0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1C00B1738();
      v19 = v34;
      v20 = *(_QWORD *)(v34 + 16);
      if (v20 >= *(_QWORD *)(v34 + 24) >> 1)
      {
        sub_1C00B1738();
        v19 = v34;
      }
      *(_QWORD *)(v19 + 16) = v20 + 1;
      sub_1C005A718(v31, v19 + v33 + v20 * v32, &qword_1ED726DB0);
      goto LABEL_26;
    }
    v16 = v30[2];
    if (v16)
    {
      v17 = *(_QWORD *)v14;
      v18 = v30[4] == *(_QWORD *)v14 && v15 == v30[5];
      if (v18 || (sub_1C0304A08() & 1) != 0)
        goto LABEL_11;
      if (v16 != 1)
        break;
    }
LABEL_25:
    v9 = (char *)v13;
    sub_1C0044B78(v13, &qword_1ED726DB0);
LABEL_26:
    a1 = v27;
    if (++v11 == v28)
      goto LABEL_27;
  }
  v21 = v26;
  v22 = 1;
  while (1)
  {
    v23 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    v24 = *(v21 - 1) == v17 && v15 == *v21;
    if (v24 || (sub_1C0304A08() & 1) != 0)
      goto LABEL_11;
    v21 += 2;
    ++v22;
    if (v23 == v16)
      goto LABEL_25;
  }
LABEL_29:
  __break(1u);
}

void sub_1C02853D4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, _QWORD *))
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27[2];
  _BYTE v28[8];
  _QWORD v29[2];
  uint64_t v30;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = 0;
    v6 = a1 + 40;
    v23 = v4 - 1;
    v7 = MEMORY[0x1E0DEE9D8];
    v24 = a1 + 40;
    do
    {
      v25 = v7;
      v8 = (uint64_t *)(v6 + 16 * v5);
      v9 = v5;
      while (1)
      {
        if (v9 >= *(_QWORD *)(a1 + 16))
        {
          __break(1u);
          return;
        }
        v10 = *(v8 - 1);
        v11 = *v8;
        v5 = v9 + 1;
        v29[0] = v10;
        v29[1] = v11;
        swift_bridgeObjectRetain();
        a3(v27, v29);
        sub_1C022D204((uint64_t)v28, v27[0], v27[1], v12, v13, v14, v15, v16, v23, v24);
        v18 = v17;
        swift_bridgeObjectRelease();
        if ((v18 & 1) != 0)
          break;
        swift_bridgeObjectRelease();
        v8 += 2;
        ++v9;
        if (v4 == v5)
          goto LABEL_13;
      }
      v7 = v25;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v30 = v25;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C00B1764();
        v7 = v30;
      }
      v20 = *(_QWORD *)(v7 + 16);
      v21 = v20 + 1;
      if (v20 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_1C00B1764();
        v21 = v20 + 1;
        v7 = v30;
      }
      *(_QWORD *)(v7 + 16) = v21;
      v22 = v7 + 16 * v20;
      *(_QWORD *)(v22 + 32) = v10;
      *(_QWORD *)(v22 + 40) = v11;
      v6 = v24;
    }
    while (v23 != v9);
  }
LABEL_13:
  swift_bridgeObjectRelease();
}

uint64_t sub_1C028556C(uint64_t result)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;

  v1 = 0;
  v2 = result + 56;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(result + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  while (v5)
  {
    v7 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v8 = v7 | (v1 << 6);
LABEL_22:
    if (!*(_BYTE *)(*(_QWORD *)(result + 48) + 48 * v8 + 40))
      return 1;
  }
  v9 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v9 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v9);
  ++v1;
  if (v10)
    goto LABEL_21;
  v1 = v9 + 1;
  if (v9 + 1 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v1);
  if (v10)
    goto LABEL_21;
  v1 = v9 + 2;
  if (v9 + 2 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v1);
  if (v10)
    goto LABEL_21;
  v1 = v9 + 3;
  if (v9 + 3 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v1);
  if (v10)
  {
LABEL_21:
    v5 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v1 << 6);
    goto LABEL_22;
  }
  v11 = v9 + 4;
  if (v11 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v11);
  if (v10)
  {
    v1 = v11;
    goto LABEL_21;
  }
  while (1)
  {
    v1 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v1 >= v6)
      return 0;
    v10 = *(_QWORD *)(v2 + 8 * v1);
    ++v11;
    if (v10)
      goto LABEL_21;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C028568C(uint64_t result)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;

  v1 = 0;
  v2 = result + 56;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(result + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  while (v5)
  {
    v7 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v8 = v7 | (v1 << 6);
LABEL_22:
    if (*(_BYTE *)(*(_QWORD *)(result + 48) + 48 * v8 + 40) == 1)
      return 1;
  }
  v9 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v9 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v9);
  ++v1;
  if (v10)
    goto LABEL_21;
  v1 = v9 + 1;
  if (v9 + 1 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v1);
  if (v10)
    goto LABEL_21;
  v1 = v9 + 2;
  if (v9 + 2 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v1);
  if (v10)
    goto LABEL_21;
  v1 = v9 + 3;
  if (v9 + 3 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v1);
  if (v10)
  {
LABEL_21:
    v5 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v1 << 6);
    goto LABEL_22;
  }
  v11 = v9 + 4;
  if (v11 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v11);
  if (v10)
  {
    v1 = v11;
    goto LABEL_21;
  }
  while (1)
  {
    v1 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v1 >= v6)
      return 0;
    v10 = *(_QWORD *)(v2 + 8 * v1);
    ++v11;
    if (v10)
      goto LABEL_21;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C02857B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int *v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v37;
  _OWORD *v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v52;
  uint64_t v53;
  int v54;
  _OWORD *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[6];
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char v90;
  uint64_t v91;
  unsigned __int8 v92;
  _BYTE v93[23];
  uint64_t v94;
  uint64_t v95;
  _BYTE v96[31];
  int v97;
  int v98;

  v60 = a4;
  v70 = type metadata accessor for ContactResolver.HandleSignalSet(0);
  MEMORY[0x1E0C80A78](v70);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DA8);
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v52 = v4;
    v91 = MEMORY[0x1E0DEE9D8];
    sub_1C00B198C();
    v71 = v91;
    v62 = sub_1C0303550();
    v59 = v93;
    v53 = *MEMORY[0x1E0D13768];
    v55 = (_OWORD *)((char *)v79 + 1);
    v61 = a3;
    v54 = a3;
    v56 = BYTE1(a3);
    v13 = (unsigned __int8 *)(a1 + 105);
    v65 = a2;
    while (1)
    {
      v69 = v12;
      v75 = *(_QWORD *)(v13 - 73);
      v14 = *(_QWORD *)(v13 - 65);
      v98 = *(v13 - 57);
      v73 = *(_QWORD *)(v13 - 49);
      v15 = *(_QWORD *)(v13 - 41);
      v72 = *(_QWORD *)(v13 - 33);
      v16 = *(_QWORD *)(v13 - 25);
      v76 = *(_QWORD *)(v13 - 17);
      v17 = *(_QWORD *)(v13 - 9);
      v18 = *(v13 - 1);
      v68 = *v13;
      v19 = (int *)v70;
      v20 = (uint64_t)&v9[*(int *)(v70 + 36)];
      *(_DWORD *)(v9 + 1) = 0;
      __swift_storeEnumTagSinglePayload(v20, 1, 1, v62);
      v9[v19[10]] = 0;
      v67 = v19[12];
      v9[v67] = 0;
      v9[v19[13]] = 0;
      v9[v19[14]] = 0;
      v97 = v18;
      *v9 = v18;
      sub_1C005A718(v65, (uint64_t)&v92, &qword_1ED726478);
      v74 = v14;
      v78 = v15;
      v77 = v16;
      if (!*(_QWORD *)&v93[15])
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v22 = v17;
        v24 = v69;
        v25 = v68;
        goto LABEL_32;
      }
      v66 = v17;
      v21 = v92;
      *(_OWORD *)v96 = *v59;
      *(_OWORD *)&v96[15] = *(_OWORD *)((char *)v59 + 15);
      if (!v92 || v92 == v98)
        break;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22 = v66;
      swift_bridgeObjectRetain();
      v23 = 0;
      v24 = v69;
      v25 = v68;
LABEL_31:
      v9[3] = v23 != 0;
      v9[2] = v23 == 2;
      v9[4] = v23 == 1;
LABEL_32:
      if (v61 == 2)
        goto LABEL_36;
      if (v56 != v98)
      {
        if ((v54 & 1) != 0)
        {
          v39 = 0;
          goto LABEL_38;
        }
LABEL_36:
        v9[v67] = 1;
        v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
        v41 = v60 + *(int *)(v43 + 36);
        v42 = type metadata accessor for ContactResolver.SignalSet(0);
        v39 = 0;
        goto LABEL_37;
      }
      v39 = 1;
      v9[v67] = 1;
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
      v41 = v60 + *(int *)(v40 + 36);
      v42 = type metadata accessor for ContactResolver.SignalSet(0);
      *(_BYTE *)(v41 + *(int *)(v42 + 188)) = 1;
LABEL_37:
      *(_BYTE *)(v41 + *(int *)(v42 + 192)) = 1;
LABEL_38:
      v9[*(int *)(v70 + 44)] = v39;
      sub_1C004555C((uint64_t)v9, (uint64_t)&v11[*(int *)(v64 + 36)], type metadata accessor for ContactResolver.HandleSignalSet);
      v11[16] = v98;
      v44 = v78;
      *((_QWORD *)v11 + 3) = v73;
      *((_QWORD *)v11 + 4) = v44;
      v45 = v77;
      *((_QWORD *)v11 + 5) = v72;
      *((_QWORD *)v11 + 6) = v45;
      *((_QWORD *)v11 + 7) = v76;
      *((_QWORD *)v11 + 8) = v22;
      v11[72] = v97;
      v11[73] = v25;
      v46 = v71;
      v48 = *(_QWORD *)(v71 + 16);
      v47 = *(_QWORD *)(v71 + 24);
      v49 = v74;
      *(_QWORD *)v11 = v75;
      *((_QWORD *)v11 + 1) = v49;
      v91 = v46;
      if (v48 >= v47 >> 1)
      {
        sub_1C00B198C();
        v46 = v91;
      }
      *(_QWORD *)(v46 + 16) = v48 + 1;
      v50 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
      v71 = v46;
      sub_1C005A718((uint64_t)v11, v46 + v50 + *(_QWORD *)(v63 + 72) * v48, &qword_1ED726DA8);
      v13 += 80;
      v12 = v24 - 1;
      if (!v12)
      {
        sub_1C02A2CA4(v65);
        return v71;
      }
    }
    v58 = v94;
    v57 = v95;
    if (v92)
    {
      if (v92 == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v26 = (void *)sub_1C0303E8C();
        v27 = (void *)(*(uint64_t (**)(uint64_t, void *))(v53 + 16))(v53, v26);
LABEL_13:
        v28 = v27;

        v29 = sub_1C0303EB0();
        v31 = v30;

        goto LABEL_19;
      }
      sub_1C00447B0(0, (unint64_t *)&qword_1ED727C40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v80 = v94;
      v81 = v95;
      v79[0] = 64;
      v79[1] = 0xE100000000000000;
      sub_1C004F408();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((sub_1C030454C() & 1) != 0)
      {
        v26 = (void *)sub_1C0303E8C();
        v27 = (void *)(*(uint64_t (**)(uint64_t, void *))(v53 + 16))(v53, v26);
        goto LABEL_13;
      }
      sub_1C00447B0(0, (unint64_t *)&qword_1ED727C40);
    }
    swift_bridgeObjectRetain();
    v32 = sub_1C01FF97C();
    sub_1C0207D2C(v32);
    if (v34)
    {
      v29 = v33;
      v31 = v34;
    }
    else
    {
      v29 = 0;
      v31 = 0xE000000000000000;
    }
LABEL_19:
    v24 = v69;
    v25 = v68;
    v35 = HIBYTE(v31) & 0xF;
    if ((v31 & 0x2000000000000000) == 0)
      v35 = v29 & 0xFFFFFFFFFFFFLL;
    if (v35)
    {
      v22 = v66;
      if (v29 != v76 || v31 != v66)
      {
        v37 = sub_1C0304A08();
        swift_bridgeObjectRelease();
        v23 = 0;
        if ((v37 & 1) == 0)
          goto LABEL_31;
        goto LABEL_30;
      }
    }
    else
    {
      v22 = v66;
    }
    swift_bridgeObjectRelease();
LABEL_30:
    v80 = v75;
    v81 = v74;
    v82 = v98;
    v83 = v73;
    v84 = v78;
    v85 = v72;
    v86 = v77;
    v87 = v76;
    v88 = v22;
    v89 = v97;
    v90 = v25;
    LOBYTE(v79[0]) = v21;
    v38 = v55;
    *v55 = *(_OWORD *)v96;
    *(_OWORD *)((char *)v38 + 15) = *(_OWORD *)&v96[15];
    v79[4] = v58;
    v79[5] = v57;
    sub_1C02057DC();
    goto LABEL_31;
  }
  sub_1C02A2CA4(a2);
  return MEMORY[0x1E0DEE9D8];
}

