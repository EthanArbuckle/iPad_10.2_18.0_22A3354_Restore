void sub_1C0286038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_40_0();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = v0;
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1764();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
    OUTLINED_FUNCTION_294();
    v4 = *(_QWORD *)(v3 + 72);
    v6 = (uint64_t *)(v5 + v2 + 8);
    do
    {
      v8 = *(v6 - 1);
      v7 = *v6;
      v10 = *(_QWORD *)(v12 + 16);
      v9 = *(_QWORD *)(v12 + 24);
      OUTLINED_FUNCTION_21();
      if (v10 >= v9 >> 1)
        sub_1C00B1764();
      v6 = (uint64_t *)((char *)v6 + v4);
      *(_QWORD *)(v12 + 16) = v10 + 1;
      v11 = v12 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v8;
      *(_QWORD *)(v11 + 40) = v7;
      --v1;
    }
    while (v1);
  }
  OUTLINED_FUNCTION_28_0();
}

void sub_1C028610C(uint64_t a1, void (*a2)(_QWORD *, _QWORD *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void (*v34)(_QWORD *, _QWORD *);
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD v39[4];
  _QWORD v40[6];
  uint64_t v41;

  v34 = a2;
  v35 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v33 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v28[1] = v3;
    v41 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1738();
    v9 = v41;
    v10 = sub_1C013AC90(a1);
    if ((v10 & 0x8000000000000000) == 0)
    {
      v12 = v10;
      if (v10 < 1 << *(_BYTE *)(a1 + 32))
      {
        v13 = a1 + 64;
        v31 = a1;
        v32 = v40;
        v29 = a1 + 64;
        v30 = v7;
        while (1)
        {
          v38 = v8;
          if ((*(_QWORD *)(v13 + 8 * (v12 >> 6)) & (1 << v12)) == 0)
            break;
          if ((_DWORD)v11 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v36 = v11;
          v37 = v12 >> 6;
          v14 = *(_QWORD *)(a1 + 56);
          v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 32 * v12);
          v16 = *v15;
          v17 = v15[1];
          v18 = v15[2];
          v19 = v15[3];
          v20 = (uint64_t *)(v14 + 40 * v12);
          v21 = *v20;
          v22 = v20[1];
          v23 = v20[2];
          v24 = v20[3];
          v25 = v20[4];
          v39[0] = v16;
          v39[1] = v17;
          v39[2] = v18;
          v39[3] = v19;
          v40[0] = v21;
          v40[1] = v22;
          v40[2] = v23;
          v40[3] = v24;
          v40[4] = v25;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v34(v39, v32);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v41 = v9;
          v26 = *(_QWORD *)(v9 + 16);
          if (v26 >= *(_QWORD *)(v9 + 24) >> 1)
          {
            sub_1C00B1738();
            v9 = v41;
          }
          *(_QWORD *)(v9 + 16) = v26 + 1;
          sub_1C005A718((uint64_t)v30, v9+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v26, &qword_1ED726DB0);
          a1 = v31;
          if ((uint64_t)v12 >= -(-1 << *(_BYTE *)(v31 + 32)))
            goto LABEL_19;
          v13 = v29;
          if ((*(_QWORD *)(v29 + 8 * v37) & (1 << v12)) == 0)
            goto LABEL_20;
          if ((_DWORD)v36 != *(_DWORD *)(v31 + 36))
            goto LABEL_21;
          v27 = sub_1C03045A0();
          v8 = v38 - 1;
          if (v38 == 1)
            return;
          v12 = v27;
          if ((v27 & 0x8000000000000000) == 0)
          {
            v11 = *(unsigned int *)(a1 + 36);
            if (v27 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t sub_1C02863D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v34;
  uint64_t v35;
  _QWORD v37[2];
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;

  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v5 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v7 = (_QWORD *)((char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  v37[1] = v2;
  v46 = MEMORY[0x1E0DEE9D8];
  sub_1C00B1738();
  v9 = v46;
  v42 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = a1 + v42;
  v41 = (_QWORD *)(a2 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_tokenizer);
  v11 = *(_QWORD *)(v5 + 72);
  v39 = a2;
  v40 = v11;
  v38 = v7;
  do
  {
    sub_1C0045DFC(v10, (uint64_t)v7, &qword_1ED726DB0);
    __swift_project_boxed_opaque_existential_1(v41, v41[3]);
    sub_1C020A6E8();
    v13 = *(_QWORD *)(v12 + 16);
    swift_bridgeObjectRelease();
    v14 = (char *)v7 + *(int *)(v43 + 36);
    v15 = type metadata accessor for ContactResolver.SignalSet(0);
    *(_QWORD *)&v14[*(int *)(v15 + 132)] = v13;
    v14[*(int *)(v15 + 236)] = 1;
    v16 = *(void **)(a2 + 104);
    if (!v16)
      goto LABEL_15;
    v17 = v15;
    v45 = v8;
    v19 = *v7;
    v18 = v7[1];
    v20 = v16;
    swift_bridgeObjectRetain();
    v44 = v20;
    v21 = objc_msgSend(v20, sel_identifier);
    v22 = sub_1C0303EB0();
    v24 = v23;

    if (v19 == v22 && v18 == v24)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v26 = sub_1C0304A08();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
      {

        v7 = v38;
        a2 = v39;
        v8 = v45;
        goto LABEL_15;
      }
    }
    v27 = v44;
    v28 = objc_msgSend(v44, sel_identifier);
    v29 = sub_1C0303EB0();
    v31 = v30;

    swift_bridgeObjectRelease();
    v32 = HIBYTE(v31) & 0xF;
    if ((v31 & 0x2000000000000000) == 0)
      v32 = v29 & 0xFFFFFFFFFFFFLL;
    v7 = v38;
    a2 = v39;
    v8 = v45;
    if (v32)
    {
      *((_BYTE *)v38 + 16) = 1;
      v14[*(int *)(v17 + 136)] = 1;
    }
LABEL_15:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v46 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1C00B1738();
      v9 = v46;
    }
    v34 = *(_QWORD *)(v9 + 16);
    if (v34 >= *(_QWORD *)(v9 + 24) >> 1)
    {
      sub_1C00B1738();
      v9 = v46;
    }
    *(_QWORD *)(v9 + 16) = v34 + 1;
    v35 = v40;
    sub_1C005A718((uint64_t)v7, v9 + v42 + v34 * v40, &qword_1ED726DB0);
    v10 += v35;
    --v8;
  }
  while (v8);
  swift_release();
  return v9;
}

int64_t sub_1C0286704(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t result;
  int64_t v5;
  int v6;
  int v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v18 = MEMORY[0x1E0DEE9D8];
  sub_1C00B1764();
  v2 = v18;
  result = sub_1C00824B4(a1);
  v5 = result;
  v7 = v6;
  v9 = v8 & 1;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
      goto LABEL_13;
    if (*(_DWORD *)(a1 + 36) != v7)
      goto LABEL_14;
    v17 = v9;
    v10 = sub_1C02E5C48(*(_WORD *)(*(_QWORD *)(a1 + 48) + 2 * v5));
    v12 = v11;
    v13 = *(_QWORD *)(v18 + 16);
    if (v13 >= *(_QWORD *)(v18 + 24) >> 1)
      sub_1C00B1764();
    *(_QWORD *)(v18 + 16) = v13 + 1;
    v14 = v18 + 16 * v13;
    *(_QWORD *)(v14 + 32) = v10;
    *(_QWORD *)(v14 + 40) = v12;
    result = sub_1C0082610(v5, v7, v17 & 1, a1);
    v5 = result;
    v7 = v15;
    v9 = v16 & 1;
    if (!--v1)
    {
      sub_1C00A6E5C(result, v15, v9);
      return v2;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

int64_t sub_1C0286878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t result;
  int64_t v9;
  int v10;
  int v11;
  char v12;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v6 = a1;
    v26 = MEMORY[0x1E0DEE9D8];
    sub_1C00B23B4(0, v5, 0);
    v7 = v26;
    result = sub_1C00824B4(v6);
    v9 = result;
    v11 = v10;
    v13 = v12 & 1;
    v22 = v6 + 56;
    while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(_BYTE *)(v6 + 32))
    {
      if (((*(_QWORD *)(v22 + (((unint64_t)v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_14;
      if (*(_DWORD *)(v6 + 36) != v11)
        goto LABEL_15;
      v25 = v13;
      v14 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v9);
      v24 = *v14;
      v15 = v6;
      v16 = v14[1];
      v18 = *(_QWORD *)(v26 + 16);
      v17 = *(_QWORD *)(v26 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v18 >= v17 >> 1)
        sub_1C00B23B4(v17 > 1, v18 + 1, 1);
      *(_QWORD *)(v26 + 16) = v18 + 1;
      v19 = (_QWORD *)(v26 + 32 * v18);
      v19[4] = a3;
      v19[5] = a4;
      v19[6] = v24;
      v19[7] = v16;
      result = sub_1C0082610(v9, v11, v25 & 1, v15);
      v9 = result;
      v11 = v20;
      v13 = v21 & 1;
      --v5;
      v6 = v15;
      if (!v5)
      {
        sub_1C00A6E5C(result, v20, v13);
        swift_bridgeObjectRelease();
        swift_release();
        return v7;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

void sub_1C0286A50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[5];
  char v27;
  uint64_t v28;
  _BYTE v29[56];
  uint64_t v30;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1;
    v30 = MEMORY[0x1E0DEE9D8];
    sub_1C00B2364();
    v3 = v30;
    v4 = sub_1C013AC90(v2);
    if ((v4 & 0x8000000000000000) == 0)
    {
      v6 = v4;
      if (v4 < 1 << *(_BYTE *)(v2 + 32))
      {
        v7 = v2 + 64;
        v8 = 1;
        v21 = v2 + 64;
        v22 = v2;
        v20 = v1;
        while ((*(_QWORD *)(v7 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
        {
          if (v5 != *(_DWORD *)(v2 + 36))
            goto LABEL_23;
          v23 = v5;
          v9 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v6);
          v10 = v9[1];
          v24 = *v9;
          v11 = v9[3];
          v25 = v9[2];
          v12 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C02A2D30();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v13 = sub_1C0304258();
          v28 = v13;
          v14 = *(_QWORD *)(v12 + 16);
          if (v14)
          {
            v15 = v12 + 32;
            do
            {
              sub_1C015898C(v15, (uint64_t)v29);
              sub_1C02A2D6C((uint64_t)v29);
              sub_1C022EDFC((uint64_t)v26, (uint64_t)v29);
              sub_1C0120AE0(v26[0], v26[1], v26[2], v26[3], v26[4], v27);
              v15 += 48;
              --v14;
            }
            while (v14);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            v16 = v28;
          }
          else
          {
            v16 = v13;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
          }
          v30 = v3;
          v17 = *(_QWORD *)(v3 + 16);
          if (v17 >= *(_QWORD *)(v3 + 24) >> 1)
          {
            sub_1C00B2364();
            v3 = v30;
          }
          *(_QWORD *)(v3 + 16) = v17 + 1;
          v18 = (_QWORD *)(v3 + 40 * v17);
          v18[4] = v24;
          v18[5] = v10;
          v18[6] = v25;
          v18[7] = v11;
          v18[8] = v16;
          v2 = v22;
          if ((uint64_t)v6 >= -(-1 << *(_BYTE *)(v22 + 32)))
            goto LABEL_24;
          v7 = v21;
          if ((*(_QWORD *)(v21 + 8 * (v6 >> 6)) & (1 << v6)) == 0)
            goto LABEL_25;
          if (v23 != *(_DWORD *)(v22 + 36))
            goto LABEL_26;
          v19 = sub_1C03045A0();
          if (v8 == v20)
            return;
          v6 = v19;
          if ((v19 & 0x8000000000000000) == 0)
          {
            v5 = *(_DWORD *)(v22 + 36);
            ++v8;
            if (v19 < 1 << *(_BYTE *)(v22 + 32))
              continue;
          }
          goto LABEL_27;
        }
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
      }
    }
LABEL_27:
    __break(1u);
  }
}

uint64_t sub_1C0286D30(uint64_t a1, _QWORD *a2)
{
  int64_t v3;
  uint64_t v5;
  uint64_t *v6;
  int64_t i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _BYTE __dst[264];
  _BYTE __src[264];
  uint64_t v17;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1ED8(0, v3, 0);
    v5 = v17;
    v6 = (uint64_t *)(a1 + 56);
    for (i = v3 - 1; ; --i)
    {
      v8 = *(v6 - 3);
      v9 = *(v6 - 2);
      v10 = *(v6 - 1);
      v11 = *v6;
      memcpy(__dst, a2, sizeof(__dst));
      swift_bridgeObjectRetain();
      sub_1C003F648(a2);
      MEMORY[0x1C3B96E30](v8, v9, v10, v11);
      swift_setAtWritableKeyPath();
      swift_bridgeObjectRelease();
      memcpy(__src, __dst, sizeof(__src));
      v17 = v5;
      v13 = *(_QWORD *)(v5 + 16);
      v12 = *(_QWORD *)(v5 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1C00B1ED8(v12 > 1, v13 + 1, 1);
        v5 = v17;
      }
      *(_QWORD *)(v5 + 16) = v13 + 1;
      memcpy((void *)(v5 + 264 * v13 + 32), __src, 0x108uLL);
      if (!i)
        break;
      v6 += 4;
    }
    sub_1C0040644(a2);
  }
  else
  {
    sub_1C0040644(a2);
    v5 = MEMORY[0x1E0DEE9D8];
  }
  swift_release();
  return v5;
}

uint64_t sub_1C0286EB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _BYTE v13[24];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_retain();
  sub_1C0055938(0);
  sub_1C007073C();
  if (v0)
    goto LABEL_19;
  v2 = v1;
  v3 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (!v2)
    {
      swift_release();
      return v3;
    }
    if (!*(_QWORD *)(v2 + 16))
      break;
    sub_1C0045DFC(v2 + 32, (uint64_t)v13, &qword_1ED727520);
    if (!v14)
    {
      sub_1C0044B78((uint64_t)v13, &qword_1ED727520);
LABEL_9:
      v15 = 0;
      v16 = 0;
      goto LABEL_10;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727518);
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_9;
LABEL_10:
    swift_bridgeObjectRelease();
    v4 = v16;
    if (v16)
    {
      v6 = v15;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C00500A0();
        v3 = v10;
      }
      v8 = *(_QWORD *)(v3 + 16);
      if (v8 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_1C00500A0();
        v3 = v11;
      }
      *(_QWORD *)(v3 + 16) = v8 + 1;
      v9 = v3 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v17;
      *(_QWORD *)(v9 + 40) = v4;
    }
    sub_1C007073C();
    v2 = v5;
  }
  __break(1u);
LABEL_19:
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

void sub_1C0287068()
{
  uint64_t v0;
  int64_t v1;
  unint64_t v2;
  int64_t v3;
  unint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];
  uint64_t v21;

  sub_1C006F164(v20);
  v0 = v20[0];
  v21 = v20[1];
  v1 = v20[3];
  v2 = v20[4];
  v3 = (unint64_t)(v20[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  v19 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v2)
    {
      v4 = __clz(__rbit64(v2));
      v2 &= v2 - 1;
      v5 = v4 | (v1 << 6);
      goto LABEL_15;
    }
    v6 = v1 + 1;
    if (__OFADD__(v1, 1))
      break;
    if (v6 >= v3)
      goto LABEL_28;
    v7 = *(_QWORD *)(v21 + 8 * v6);
    if (!v7)
    {
      v8 = v1 + 2;
      if (v1 + 2 >= v3)
        goto LABEL_28;
      v7 = *(_QWORD *)(v21 + 8 * v8);
      if (v7)
        goto LABEL_13;
      v8 = v1 + 3;
      if (v1 + 3 >= v3)
        goto LABEL_28;
      v7 = *(_QWORD *)(v21 + 8 * v8);
      if (v7)
        goto LABEL_13;
      v8 = v1 + 4;
      if (v1 + 4 >= v3)
        goto LABEL_28;
      v7 = *(_QWORD *)(v21 + 8 * v8);
      if (v7)
      {
LABEL_13:
        v6 = v8;
      }
      else
      {
        v6 = v1 + 5;
        if (v1 + 5 >= v3)
          goto LABEL_28;
        v7 = *(_QWORD *)(v21 + 8 * v6);
        if (!v7)
        {
          v16 = v1 + 6;
          while (v16 < v3)
          {
            v7 = *(_QWORD *)(v21 + 8 * v16++);
            if (v7)
            {
              v6 = v16 - 1;
              goto LABEL_14;
            }
          }
LABEL_28:
          swift_release();
          return;
        }
      }
    }
LABEL_14:
    v2 = (v7 - 1) & v7;
    v5 = __clz(__rbit64(v7)) + (v6 << 6);
    v1 = v6;
LABEL_15:
    v9 = (uint64_t *)(*(_QWORD *)(v0 + 48) + 16 * v5);
    v11 = *v9;
    v10 = v9[1];
    swift_bridgeObjectRetain();
    v12 = swift_bridgeObjectRetain();
    v13 = sub_1C028568C(v12);
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C00500A0();
        v19 = v17;
      }
      v14 = *(_QWORD *)(v19 + 16);
      if (v14 >= *(_QWORD *)(v19 + 24) >> 1)
      {
        sub_1C00500A0();
        v19 = v18;
      }
      *(_QWORD *)(v19 + 16) = v14 + 1;
      v15 = v19 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v11;
      *(_QWORD *)(v15 + 40) = v10;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  __break(1u);
}

void sub_1C028728C()
{
  unint64_t v0;
  unint64_t v1;
  int64_t v2;
  unint64_t v3;
  int64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  int64_t v22;
  _QWORD v23[5];
  uint64_t v24;

  sub_1C006F164(v23);
  v21 = v23[0];
  v22 = v23[3];
  v0 = v23[4];
  v19 = v23[1];
  v20 = (unint64_t)(v23[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  v18 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v0)
    {
      v24 = (v0 - 1) & v0;
      v1 = __clz(__rbit64(v0)) | (v22 << 6);
      goto LABEL_15;
    }
    v2 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v2 >= v20)
      goto LABEL_28;
    v3 = *(_QWORD *)(v19 + 8 * v2);
    if (!v3)
    {
      v4 = v22 + 2;
      if (v22 + 2 >= v20)
        goto LABEL_28;
      v3 = *(_QWORD *)(v19 + 8 * v4);
      if (v3)
        goto LABEL_13;
      v4 = v22 + 3;
      if (v22 + 3 >= v20)
        goto LABEL_28;
      v3 = *(_QWORD *)(v19 + 8 * v4);
      if (v3)
        goto LABEL_13;
      v4 = v22 + 4;
      if (v22 + 4 >= v20)
        goto LABEL_28;
      v3 = *(_QWORD *)(v19 + 8 * v4);
      if (v3)
      {
LABEL_13:
        v2 = v4;
      }
      else
      {
        v2 = v22 + 5;
        if (v22 + 5 >= v20)
          goto LABEL_28;
        v3 = *(_QWORD *)(v19 + 8 * v2);
        if (!v3)
        {
          v15 = v22 + 6;
          while (v15 < v20)
          {
            v3 = *(_QWORD *)(v19 + 8 * v15++);
            if (v3)
            {
              v2 = v15 - 1;
              goto LABEL_14;
            }
          }
LABEL_28:
          swift_release();
          return;
        }
      }
    }
LABEL_14:
    v24 = (v3 - 1) & v3;
    v1 = __clz(__rbit64(v3)) + (v2 << 6);
    v22 = v2;
LABEL_15:
    v5 = (uint64_t *)(*(_QWORD *)(v21 + 48) + 32 * v1);
    v6 = *v5;
    v7 = v5[1];
    v8 = v5[2];
    v9 = v5[3];
    v10 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 40 * v1 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1C028568C(v10);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
    {
      v12 = v18;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C00AC7C4();
        v12 = v16;
      }
      v13 = *(_QWORD *)(v12 + 16);
      if (v13 >= *(_QWORD *)(v12 + 24) >> 1)
      {
        sub_1C00AC7C4();
        v12 = v17;
      }
      *(_QWORD *)(v12 + 16) = v13 + 1;
      v18 = v12;
      v14 = (_QWORD *)(v12 + 32 * v13);
      v14[4] = v6;
      v14[5] = v7;
      v14[6] = v8;
      v14[7] = v9;
      v0 = v24;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v0 = v24;
    }
  }
  __break(1u);
}

void sub_1C0287548(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = a1 + 56;
  OUTLINED_FUNCTION_24_23();
  v5 = v4 & v3;
  v7 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  v9 = MEMORY[0x1E0DEE9D8];
  while (v5)
  {
    v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v11 = v10 | (v8 << 6);
LABEL_20:
    v17 = *(_QWORD *)(a1 + 48) + 48 * v11;
    if (*(_BYTE *)(v17 + 40) == 2)
    {
      v18 = *(_QWORD *)(v17 + 24);
      v24 = *(_QWORD *)(v17 + 16);
      OUTLINED_FUNCTION_21();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_79_6();
        sub_1C00500A0();
        v9 = v22;
      }
      v19 = *(_QWORD *)(v9 + 16);
      v20 = v9;
      if (v19 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_1C00500A0();
        v20 = v23;
      }
      *(_QWORD *)(v20 + 16) = v19 + 1;
      v9 = v20;
      v21 = v20 + 16 * v19;
      *(_QWORD *)(v21 + 32) = v24;
      *(_QWORD *)(v21 + 40) = v18;
    }
  }
  v12 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v12 >= v7)
    goto LABEL_26;
  ++v8;
  if (*(_QWORD *)(v2 + 8 * v12))
    goto LABEL_19;
  v8 = v12 + 1;
  if (v12 + 1 >= v7)
    goto LABEL_26;
  if (*(_QWORD *)(v2 + 8 * v8))
    goto LABEL_19;
  v8 = v12 + 2;
  if (v12 + 2 >= v7)
    goto LABEL_26;
  if (*(_QWORD *)(v2 + 8 * v8))
    goto LABEL_19;
  v8 = v12 + 3;
  if (v12 + 3 >= v7)
    goto LABEL_26;
  if (*(_QWORD *)(v2 + 8 * v8))
  {
LABEL_19:
    OUTLINED_FUNCTION_31_25();
    v5 = v15 & v14;
    v11 = v16 + (v8 << 6);
    goto LABEL_20;
  }
  v13 = v12 + 4;
  if (v13 >= v7)
  {
LABEL_26:
    OUTLINED_FUNCTION_5_3();
    return;
  }
  if (*(_QWORD *)(v2 + 8 * v13))
  {
    v8 = v13;
    goto LABEL_19;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      goto LABEL_26;
    ++v13;
    if (*(_QWORD *)(v2 + 8 * v8))
      goto LABEL_19;
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_1C0287708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;

  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v23 = a4;
    v24 = v4;
    v8 = *(_QWORD *)(sub_1C03026F8() - 8);
    v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v25 = *(_QWORD *)(v8 + 72);
    v22 = a1;
    swift_bridgeObjectRetain();
    v16 = MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1C0297C10(a2, a3, v10, v11, v12, v13, v14, v15, v22, v23, v24, v25, v26, *((uint64_t *)&v26 + 1), v27, v28, v29, v30, *((uint64_t *)&v30 + 1),
        v31);
      if (v29)
      {
        v26 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C00AC7E0();
          v16 = v19;
        }
        v17 = *(_QWORD *)(v16 + 16);
        if (v17 >= *(_QWORD *)(v16 + 24) >> 1)
        {
          sub_1C00AC7E0();
          v16 = v20;
        }
        *(_QWORD *)(v16 + 16) = v17 + 1;
        v18 = v16 + 40 * v17;
        *(_QWORD *)(v18 + 32) = v28;
        *(_QWORD *)(v18 + 40) = v29;
        *(_OWORD *)(v18 + 48) = v30;
        *(_QWORD *)(v18 + 64) = v31;
      }
      v9 += v25;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  swift_release();
  return v16;
}

void sub_1C0287890(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  __int16 v11;
  __int16 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = a1 + 56;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 56);
  v5 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  v6 = 0;
  v7 = MEMORY[0x1E0DEE9D8];
  while (v4)
  {
    v4 &= v4 - 1;
LABEL_22:
    swift_bridgeObjectRetain();
    v11 = sub_1C005257C();
    if (v11 != 376)
    {
      v12 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C0050604();
        v7 = v14;
      }
      v13 = *(_QWORD *)(v7 + 16);
      if (v13 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_1C0050604();
        v7 = v15;
      }
      *(_QWORD *)(v7 + 16) = v13 + 1;
      *(_WORD *)(v7 + 2 * v13 + 32) = v12;
    }
  }
  v8 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v8 >= v5)
    goto LABEL_28;
  v9 = *(_QWORD *)(v1 + 8 * v8);
  ++v6;
  if (v9)
    goto LABEL_21;
  v6 = v8 + 1;
  if (v8 + 1 >= v5)
    goto LABEL_28;
  v9 = *(_QWORD *)(v1 + 8 * v6);
  if (v9)
    goto LABEL_21;
  v6 = v8 + 2;
  if (v8 + 2 >= v5)
    goto LABEL_28;
  v9 = *(_QWORD *)(v1 + 8 * v6);
  if (v9)
    goto LABEL_21;
  v6 = v8 + 3;
  if (v8 + 3 >= v5)
    goto LABEL_28;
  v9 = *(_QWORD *)(v1 + 8 * v6);
  if (v9)
  {
LABEL_21:
    v4 = (v9 - 1) & v9;
    goto LABEL_22;
  }
  v10 = v8 + 4;
  if (v10 >= v5)
  {
LABEL_28:
    swift_release();
    return;
  }
  v9 = *(_QWORD *)(v1 + 8 * v10);
  if (v9)
  {
    v6 = v10;
    goto LABEL_21;
  }
  while (1)
  {
    v6 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v6 >= v5)
      goto LABEL_28;
    v9 = *(_QWORD *)(v1 + 8 * v6);
    ++v10;
    if (v9)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
}

void sub_1C0287A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[5];
  char v60;
  uint64_t v61;

  v7 = v6;
  v36 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a1 + 56);
  v37 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  v11 = 0;
  v12 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v61 = v12;
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v11 >= v37)
      goto LABEL_32;
    v16 = *(_QWORD *)(v36 + 8 * v11);
    if (!v16)
      break;
LABEL_18:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_19:
    v18 = *(_QWORD *)(a1 + 48) + 48 * v14;
    v19 = *(_QWORD *)(v18 + 8);
    v21 = *(_QWORD *)(v18 + 16);
    v22 = *(_QWORD *)(v18 + 24);
    v23 = *(_QWORD *)(v18 + 32);
    v24 = *(_BYTE *)(v18 + 40);
    v59[0] = *(_QWORD *)v18;
    v20 = v59[0];
    v59[1] = v19;
    v59[2] = v21;
    v59[3] = v22;
    v59[4] = v23;
    v60 = v24;
    sub_1C0120A8C(v59[0], v19, v21, v22, v23, v24);
    sub_1C029B3B0((uint64_t)v59, a2, a3, a4, a5, a6, &v49);
    if (v7)
    {
      sub_1C0120AE0(v20, v19, v21, v22, v23, v24);
      swift_bridgeObjectRelease();
LABEL_32:
      swift_release();
      sub_1C02A2DD8(a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    sub_1C0120AE0(v20, v19, v21, v22, v23, v24);
    v25 = v50;
    if (v50)
    {
      v26 = v49;
      v27 = v53;
      v47 = v54;
      v48 = v51;
      v46 = v55;
      v28 = v56;
      v29 = v57;
      v44 = v58;
      v45 = v52;
      v30 = v61;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C00AC810();
        v30 = v34;
      }
      v31 = *(_QWORD *)(v30 + 16);
      v32 = v30;
      if (v31 >= *(_QWORD *)(v30 + 24) >> 1)
      {
        sub_1C00AC810();
        v32 = v35;
      }
      *(_QWORD *)(v32 + 16) = v31 + 1;
      v12 = v32;
      v33 = v32 + 104 * v31;
      *(_QWORD *)(v33 + 32) = v26;
      *(_QWORD *)(v33 + 40) = v25;
      *(_OWORD *)(v33 + 48) = v48;
      *(_QWORD *)(v33 + 64) = v45;
      *(_QWORD *)(v33 + 72) = v27;
      *(_OWORD *)(v33 + 80) = v47;
      *(_OWORD *)(v33 + 96) = v46;
      *(_QWORD *)(v33 + 112) = v28;
      *(_QWORD *)(v33 + 120) = v29;
      *(_QWORD *)(v33 + 128) = v44;
      v7 = 0;
    }
    else
    {
      v12 = v61;
    }
  }
  v17 = v11 + 1;
  if (v11 + 1 >= v37)
    goto LABEL_32;
  v16 = *(_QWORD *)(v36 + 8 * v17);
  if (v16)
    goto LABEL_17;
  v17 = v11 + 2;
  if (v11 + 2 >= v37)
    goto LABEL_32;
  v16 = *(_QWORD *)(v36 + 8 * v17);
  if (v16)
    goto LABEL_17;
  v17 = v11 + 3;
  if (v11 + 3 >= v37)
    goto LABEL_32;
  v16 = *(_QWORD *)(v36 + 8 * v17);
  if (v16)
    goto LABEL_17;
  v17 = v11 + 4;
  if (v11 + 4 >= v37)
    goto LABEL_32;
  v16 = *(_QWORD *)(v36 + 8 * v17);
  if (v16)
  {
LABEL_17:
    v11 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v37)
      goto LABEL_32;
    v16 = *(_QWORD *)(v36 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_18;
  }
LABEL_35:
  __break(1u);
}

void sub_1C0287DC0(void (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];

  v6 = type metadata accessor for Contact();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726E50);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0045DFC(v2, (uint64_t)v11, &qword_1ED726E50);
  v12 = 1;
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6) != 1)
  {
    sub_1C004555C((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
    a1(v8);
    sub_1C003DD84((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
    if (v3)
      return;
    v12 = 0;
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  __swift_storeEnumTagSinglePayload(a2, v12, 1, v13);
}

uint64_t sub_1C0287F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  int64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[5];
  uint64_t v29;

  v29 = a1;
  sub_1C006F164(v28);
  v7 = v28[0];
  v8 = v28[3];
  v9 = v28[4];
  v22 = v28[1];
  v23 = (unint64_t)(v28[2] + 64) >> 6;
  result = swift_bridgeObjectRetain();
  if (!v9)
    goto LABEL_3;
LABEL_2:
  v11 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v12 = v11 | (v8 << 6);
  while (1)
  {
    v16 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 40 * v12);
    v17 = v16[1];
    v18 = v16[2];
    v19 = v16[3];
    v20 = v16[4];
    *(_QWORD *)&v24 = *v16;
    *((_QWORD *)&v24 + 1) = v17;
    v25 = v18;
    v26 = v19;
    v27 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C028D3A8((uint64_t)&v29, &v24, a3, a4);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return a3;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_2;
LABEL_3:
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v13 >= v23)
      goto LABEL_24;
    v14 = *(_QWORD *)(v22 + 8 * v13);
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v23)
        goto LABEL_24;
      v14 = *(_QWORD *)(v22 + 8 * v15);
      if (v14)
        goto LABEL_12;
      v15 = v8 + 3;
      if (v8 + 3 >= v23)
        goto LABEL_24;
      v14 = *(_QWORD *)(v22 + 8 * v15);
      if (v14)
        goto LABEL_12;
      v15 = v8 + 4;
      if (v8 + 4 >= v23)
        goto LABEL_24;
      v14 = *(_QWORD *)(v22 + 8 * v15);
      if (v14)
      {
LABEL_12:
        v13 = v15;
      }
      else
      {
        v13 = v8 + 5;
        if (v8 + 5 >= v23)
          goto LABEL_24;
        v14 = *(_QWORD *)(v22 + 8 * v13);
        if (!v14)
        {
          v21 = v8 + 6;
          while (v21 < v23)
          {
            v14 = *(_QWORD *)(v22 + 8 * v21++);
            if (v14)
            {
              v13 = v21 - 1;
              goto LABEL_13;
            }
          }
LABEL_24:
          swift_bridgeObjectRelease();
          swift_release();
          a3 = v29;
          swift_bridgeObjectRelease();
          return a3;
        }
      }
    }
LABEL_13:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v13 << 6);
    v8 = v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0288170(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  uint64_t v10;
  id v12;
  uint64_t v13;

  v6 = (void *)a1;
  v13 = a1;
  if (a2 >> 62)
    goto LABEL_13;
  v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; v7 = sub_1C03047F8())
  {
    for (i = 4; ; ++i)
    {
      v9 = (a2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B975EC](i - 4, a2) : *(id *)(a2 + 8 * i);
      v6 = v9;
      v10 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v12 = v9;
      sub_1C028F790(&v13, &v12, a3);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return (uint64_t)v6;
      }

      if (v10 == v7)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return (uint64_t)v6;
}

void sub_1C02882B8(uint64_t a1, int64_t a2, int64_t a3, void (*a4)(uint64_t *__return_ptr, unint64_t), uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(char *, char *), uint64_t a9)
{
  uint64_t v9;
  int64_t v12;
  uint64_t v17;

  v17 = a1;
  if (a2 == a3)
  {
LABEL_6:
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = a2;
    if (a3 >= a2)
    {
      while (v12 < a3)
      {
        sub_1C028A33C(&v17, v12, a4, a5, a6, a7, a8, a9);
        if (v9)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return;
        }
        if (a3 == ++v12)
          goto LABEL_6;
      }
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_1C02883A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t i;
  BOOL v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  unsigned __int16 v30;

  v26 = a1 + 56;
  OUTLINED_FUNCTION_85_8();
  v27 = v6;
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = MEMORY[0x1E0DEE9D8];
  if (!v4)
    goto LABEL_3;
LABEL_2:
  OUTLINED_FUNCTION_261();
  for (i = v9 | (v7 << 6); ; i = __clz(__rbit64(v12)) + (v7 << 6))
  {
    v30 = *(_WORD *)(*(_QWORD *)(a1 + 48) + 2 * i);
    sub_1C029AEC4(&v30, a3, &v29);
    if (v3)
    {
      swift_release();
      OUTLINED_FUNCTION_14();
LABEL_44:
      OUTLINED_FUNCTION_1_0();
      return v8;
    }
    v15 = v29;
    v16 = *(_QWORD *)(v29 + 16);
    v17 = *(_QWORD *)(v8 + 16);
    if (__OFADD__(v17, v16))
    {
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    if (!OUTLINED_FUNCTION_14_1() || v17 + v16 > *(_QWORD *)(v8 + 24) >> 1)
    {
      sub_1C00AC8AC();
      v8 = v18;
    }
    if (*(_QWORD *)(v15 + 16))
    {
      OUTLINED_FUNCTION_185_1();
      if (v13 != v11)
        goto LABEL_47;
      v20 = v8 + 32 * v19 + 32;
      if (v15 + 32 < v20 + 32 * v16 && v20 < v15 + 32 + 32 * v16)
        goto LABEL_51;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8D88);
      OUTLINED_FUNCTION_250();
      swift_arrayInitWithCopy();
      if (v16)
      {
        v22 = *(_QWORD *)(v8 + 16);
        v11 = __OFADD__(v22, v16);
        v23 = v22 + v16;
        if (v11)
          goto LABEL_49;
        *(_QWORD *)(v8 + 16) = v23;
      }
    }
    else if (v16)
    {
      goto LABEL_46;
    }
    OUTLINED_FUNCTION_8_1();
    if (v4)
      goto LABEL_2;
LABEL_3:
    v11 = __OFADD__(v7++, 1);
    if (v11)
      goto LABEL_48;
    if (v7 >= v27)
      goto LABEL_43;
    v12 = *(_QWORD *)(v26 + 8 * v7);
    if (!v12)
    {
      OUTLINED_FUNCTION_60_3();
      if (v13 == v11)
        goto LABEL_43;
      OUTLINED_FUNCTION_258();
      if (v12)
        goto LABEL_15;
      OUTLINED_FUNCTION_60_3();
      if (v13 == v11)
        goto LABEL_43;
      OUTLINED_FUNCTION_258();
      if (v12)
        goto LABEL_15;
      OUTLINED_FUNCTION_60_3();
      if (v13 == v11)
        goto LABEL_43;
      OUTLINED_FUNCTION_258();
      if (v12)
      {
LABEL_15:
        v7 = v14;
        goto LABEL_16;
      }
      OUTLINED_FUNCTION_60_3();
      if (v13 == v11)
      {
LABEL_43:
        swift_release();
        goto LABEL_44;
      }
      OUTLINED_FUNCTION_258();
      v7 = v24;
      if (!v12)
        break;
    }
LABEL_16:
    v4 = (v12 - 1) & v12;
  }
  while (1)
  {
    v7 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v7 >= v27)
      goto LABEL_43;
    v12 = *(_QWORD *)(v26 + 8 * v7);
    ++v24;
    if (v12)
      goto LABEL_16;
  }
LABEL_50:
  __break(1u);
LABEL_51:
  OUTLINED_FUNCTION_18_43();
  result = OUTLINED_FUNCTION_85_7();
  __break(1u);
  return result;
}

uint64_t sub_1C0288620(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t i;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  int64_t v31;

  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 56);
  v31 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  if (!v4)
    goto LABEL_5;
LABEL_4:
  v7 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (i = v7 | (v5 << 6); ; i = __clz(__rbit64(v10)) + (v5 << 6))
  {
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v14 = *v12;
    v13 = v12[1];
    swift_bridgeObjectRetain_n();
    sub_1C028F630();
    v16 = v15;
    if (*(_QWORD *)(v15 + 16))
    {
      v17 = sub_1C00B3C3C(v14, v13);
      v18 = MEMORY[0x1E0DEE9D8];
      if ((v19 & 1) != 0)
      {
        v18 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v17);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      v18 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v20 = *(_QWORD *)(v18 + 16);
    v21 = *(_QWORD *)(v6 + 16);
    if (__OFADD__(v21, v20))
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    if (!swift_isUniquelyReferenced_nonNull_native() || v21 + v20 > *(_QWORD *)(v6 + 24) >> 1)
    {
      sub_1C00500A0();
      v6 = v22;
    }
    if (*(_QWORD *)(v18 + 16))
    {
      v23 = *(_QWORD *)(v6 + 16);
      if ((*(_QWORD *)(v6 + 24) >> 1) - v23 < v20)
        goto LABEL_45;
      v24 = v6 + 16 * v23 + 32;
      if (v18 + 32 < v24 + 16 * v20 && v24 < v18 + 32 + 16 * v20)
        goto LABEL_49;
      swift_arrayInitWithCopy();
      if (v20)
      {
        v26 = *(_QWORD *)(v6 + 16);
        v27 = __OFADD__(v26, v20);
        v28 = v26 + v20;
        if (v27)
          goto LABEL_46;
        *(_QWORD *)(v6 + 16) = v28;
      }
    }
    else if (v20)
    {
      goto LABEL_44;
    }
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_4;
LABEL_5:
    v9 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_47;
    if (v9 >= v31)
      goto LABEL_42;
    v10 = *(_QWORD *)(v30 + 8 * v9);
    ++v5;
    if (!v10)
    {
      v5 = v9 + 1;
      if (v9 + 1 >= v31)
        goto LABEL_42;
      v10 = *(_QWORD *)(v30 + 8 * v5);
      if (!v10)
      {
        v5 = v9 + 2;
        if (v9 + 2 >= v31)
          goto LABEL_42;
        v10 = *(_QWORD *)(v30 + 8 * v5);
        if (!v10)
        {
          v5 = v9 + 3;
          if (v9 + 3 >= v31)
            goto LABEL_42;
          v10 = *(_QWORD *)(v30 + 8 * v5);
          if (!v10)
            break;
        }
      }
    }
LABEL_20:
    v4 = (v10 - 1) & v10;
  }
  v11 = v9 + 4;
  if (v11 >= v31)
  {
LABEL_42:
    swift_release();
    swift_release();
    return v6;
  }
  v10 = *(_QWORD *)(v30 + 8 * v11);
  if (v10)
  {
    v5 = v11;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v5 >= v31)
      goto LABEL_42;
    v10 = *(_QWORD *)(v30 + 8 * v5);
    ++v11;
    if (v10)
      goto LABEL_20;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  result = sub_1C0304828();
  __break(1u);
  return result;
}

uint64_t sub_1C0288948(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t result;

  v3 = v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
    v6 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v7 = *(v5 - 1);
      v8 = *v5;
      v9 = *(v5 - 3);
      v10 = *(v5 - 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11 = a2(v9, v10, v7, v8);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v6;
      }
      v12 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v6 + 16);
      if (__OFADD__(v14, v13))
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0 || v14 + v13 > *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_1C00AC810();
        v6 = v15;
      }
      if (*(_QWORD *)(v12 + 16))
      {
        v16 = *(_QWORD *)(v6 + 16);
        if ((*(_QWORD *)(v6 + 24) >> 1) - v16 < v13)
          goto LABEL_26;
        v17 = v6 + 104 * v16 + 32;
        if (v12 + 32 < v17 + 104 * v13 && v17 < v12 + 32 + 104 * v13)
          goto LABEL_28;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8D98);
        swift_arrayInitWithCopy();
        if (v13)
        {
          v19 = *(_QWORD *)(v6 + 16);
          v20 = __OFADD__(v19, v13);
          v21 = v19 + v13;
          if (v20)
            goto LABEL_27;
          *(_QWORD *)(v6 + 16) = v21;
        }
      }
      else if (v13)
      {
        goto LABEL_25;
      }
      v5 += 4;
      swift_bridgeObjectRelease();
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        return v6;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    result = sub_1C0304828();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1C0288B68(uint64_t a1, uint64_t (*a2)(uint64_t, _BYTE *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  _QWORD __dst[34];
  _BYTE v16[272];
  uint64_t v17;

  v3 = v2;
  v17 = MEMORY[0x1E0DEE9D8];
  sub_1C00B1960();
  v5 = v17;
  v6 = *(_QWORD *)(a1 + 16);
  v14 = a1;
  swift_bridgeObjectRetain();
  if (v6)
  {
    v7 = 0;
    v8 = 32;
    while (1)
    {
      memcpy(__dst, (const void *)(v14 + v8), 0x108uLL);
      memcpy(v16, (const void *)(v14 + v8), 0x108uLL);
      __dst[33] = v7;
      sub_1C003F648(__dst);
      v9 = a2(v7, v16);
      if (v3)
        break;
      v10 = v9;
      sub_1C0040644(__dst);
      v17 = v5;
      v11 = *(_QWORD *)(v5 + 16);
      if (v11 >= *(_QWORD *)(v5 + 24) >> 1)
      {
        sub_1C00B1960();
        v5 = v17;
      }
      ++v7;
      *(_QWORD *)(v5 + 16) = v11 + 1;
      *(_QWORD *)(v5 + 8 * v11 + 32) = v10;
      v8 += 264;
      if (v6 == v7)
        goto LABEL_9;
    }
    sub_1C0040644(__dst);
    swift_release();
  }
LABEL_9:
  swift_bridgeObjectRelease();
  return v5;
}

void sub_1C0288CD4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_298();
  if (v7)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v8 = v6;
  v9 = OUTLINED_FUNCTION_33_37();
  if (!(_DWORD)v9 || v5 > *(_QWORD *)(v2 + 24) >> 1)
  {
    if (v4 <= v5)
      v10 = v5;
    else
      v10 = v4;
    v2 = OUTLINED_FUNCTION_280(v9, v10);
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_14;
    goto LABEL_16;
  }
  if ((*(_QWORD *)(v2 + 24) >> 1) - *(_QWORD *)(v2 + 16) < v3)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(v8);
  OUTLINED_FUNCTION_57_17(v11);
  if (!v3)
  {
LABEL_14:
    OUTLINED_FUNCTION_33();
    *v1 = v2;
    OUTLINED_FUNCTION_1();
    return;
  }
  OUTLINED_FUNCTION_114_3();
  if (!v7)
  {
    *(_QWORD *)(v2 + 16) = v12;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_1C0288D80(unint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = a2;
  sub_1C02A1BBC(a1, a2);
  v6 = *v2;
  v7 = *(_QWORD *)(*v2 + 16);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v9 = v5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v6;
  if (!isUniquelyReferenced_nonNull_native || (v11 = *(_QWORD *)(v6 + 24) >> 1, v11 < v8))
  {
    sub_1C00AC2DC();
    v6 = v12;
    *v2 = v12;
    v11 = *(_QWORD *)(v12 + 24) >> 1;
  }
  v13 = *(_QWORD *)(v6 + 16);
  v14 = v11 - v13;
  v15 = sub_1C02A1DF8(&v31, v6 + 4 * v13 + 32, v11 - v13, a1, v3);
  if (v15 < v9)
    goto LABEL_12;
  if (v15 >= 1)
  {
    v16 = *(_QWORD *)(v6 + 16);
    v17 = __OFADD__(v16, v15);
    v18 = v16 + v15;
    if (v17)
    {
      __break(1u);
      goto LABEL_20;
    }
    *(_QWORD *)(v6 + 16) = v18;
  }
  if (v15 == v14)
  {
LABEL_13:
    v9 = v33;
    v14 = v34;
    if (v33 >= v34)
      goto LABEL_10;
    v8 = *(_QWORD *)(v6 + 16);
    v6 = v31;
    v3 = v32;
    if ((v32 & 0x1000000000000000) != 0)
    {
      v20 = sub_1C03046C0();
      v22 = (v3 & 0x2000000000000000) == 0;
      goto LABEL_21;
    }
    if ((v32 & 0x2000000000000000) == 0)
    {
      if ((v31 & 0x1000000000000000) == 0)
        sub_1C0304720();
      v20 = sub_1C030472C();
      v22 = 1;
      goto LABEL_21;
    }
LABEL_20:
    v20 = sub_1C030472C();
    v22 = 0;
LABEL_21:
    v23 = v21 + v9;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)(*v2 + 24) >> 1;
      v26 = v8 + 1;
      if (v25 < v8 + 1)
      {
        v29 = v20;
        sub_1C00AC2DC();
        v26 = v8 + 1;
        v24 = v30;
        v20 = v29;
        *v2 = v24;
        v25 = *(_QWORD *)(v24 + 24) >> 1;
      }
      if (v8 < v25)
      {
        *(_DWORD *)(v24 + 4 * v8 + 32) = v20;
        if (v23 >= v14)
        {
LABEL_38:
          v6 = *v2;
          *(_QWORD *)(*v2 + 16) = v26;
          break;
        }
        v27 = v24 + 36;
        while (1)
        {
          if ((v3 & 0x1000000000000000) != 0)
          {
            v20 = sub_1C03046C0();
          }
          else
          {
            if (v22 && (v6 & 0x1000000000000000) == 0)
              sub_1C0304720();
            v20 = sub_1C030472C();
          }
          v23 += v28;
          if (v8 + 1 >= v25)
            break;
          *(_DWORD *)(v27 + 4 * v8++) = v20;
          if (v23 >= v14)
          {
            v26 = v8 + 1;
            goto LABEL_38;
          }
        }
        v24 = *v2;
        ++v8;
      }
      *(_QWORD *)(v24 + 16) = v8;
    }
  }
LABEL_10:
  result = swift_bridgeObjectRelease();
  *v2 = v6;
  return result;
}

void sub_1C0289040(uint64_t a1)
{
  sub_1C028956C(a1, (uint64_t (*)(void))sub_1C00AC430, (void (*)(uint64_t))sub_1C00AF450);
}

void sub_1C0289054(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v5 = a1;
  if (!OUTLINED_FUNCTION_116() || (v6 = *(_QWORD *)(v3 + 24) >> 1, v6 < v4 + v2))
  {
    sub_1C00AC588();
    v3 = v7;
    v6 = *(_QWORD *)(v7 + 24) >> 1;
  }
  v8 = v6 - *(_QWORD *)(v3 + 16);
  sub_1C013514C();
  if (v9 < v2)
    goto LABEL_12;
  if (v9)
  {
    v13 = *(_QWORD *)(v3 + 16);
    v14 = __OFADD__(v13, v9);
    v15 = v13 + v9;
    if (v14)
    {
      __break(1u);
      goto LABEL_42;
    }
    *(_QWORD *)(v3 + 16) = v15;
  }
  if (v9 != v8)
  {
LABEL_10:
    sub_1C00B7078();
    *v1 = v3;
    OUTLINED_FUNCTION_134_2();
    return;
  }
LABEL_13:
  v5 = *(_QWORD *)(v3 + 16);
  v9 = v44;
  v10 = v45;
  v11 = v46;
  v12 = v47;
  if (!v48)
  {
LABEL_42:
    v30 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_60;
    v18 = (unint64_t)(v11 + 64) >> 6;
    if (v30 >= v18)
      goto LABEL_10;
    v31 = *(_QWORD *)(v10 + 8 * v30);
    v32 = v12 + 1;
    if (!v31)
    {
      if (v12 + 2 >= v18)
        goto LABEL_10;
      v9 = OUTLINED_FUNCTION_71_14();
      if (!v31)
      {
        if (v33 + 2 >= v18)
          goto LABEL_10;
        v9 = OUTLINED_FUNCTION_71_14();
        if (!v31)
        {
          if (v34 + 3 >= v18)
            goto LABEL_10;
          v9 = OUTLINED_FUNCTION_71_14();
          if (!v31)
          {
            if (v35 + 4 >= v18)
              goto LABEL_10;
            v9 = OUTLINED_FUNCTION_71_14();
            if (!v31)
            {
              v40 = v36 + 6;
              do
              {
                if (v40 >= v18)
                  goto LABEL_10;
                v31 = *(_QWORD *)(v38 + 8 * v40++);
              }
              while (!v31);
              v32 = v40 - 1;
              v11 = v37;
              v10 = v38;
              v9 = v39;
            }
          }
        }
      }
    }
    v16 = (v31 - 1) & v31;
    v17 = __clz(__rbit64(v31)) + (v32 << 6);
    v12 = v32;
    goto LABEL_15;
  }
  v16 = (v48 - 1) & v48;
  v17 = __clz(__rbit64(v48)) | (v47 << 6);
  v18 = (unint64_t)(v46 + 64) >> 6;
LABEL_15:
  v19 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v17);
  while (1)
  {
    v20 = *(_QWORD *)(v3 + 24) >> 1;
    if (v20 < v5 + 1)
    {
      v42 = v10;
      v43 = v9;
      v41 = v11;
      v27 = v12;
      v28 = v16;
      sub_1C00AC588();
      v16 = v28;
      v12 = v27;
      v11 = v41;
      v10 = v42;
      v3 = v29;
      v9 = v43;
      v20 = *(_QWORD *)(v3 + 24) >> 1;
    }
    if (v5 < v20)
      break;
LABEL_38:
    *(_QWORD *)(v3 + 16) = v5;
  }
  while (1)
  {
    *(_QWORD *)(v3 + 32 + 8 * v5++) = v19;
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v12 << 6);
      goto LABEL_37;
    }
    v23 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v23 >= v18)
      goto LABEL_39;
    v24 = *(_QWORD *)(v10 + 8 * v23);
    v25 = v12 + 1;
    if (!v24)
    {
      v25 = v12 + 2;
      if (v12 + 2 >= v18)
        goto LABEL_39;
      v24 = *(_QWORD *)(v10 + 8 * v25);
      if (!v24)
      {
        v25 = v12 + 3;
        if (v12 + 3 >= v18)
          goto LABEL_39;
        v24 = *(_QWORD *)(v10 + 8 * v25);
        if (!v24)
        {
          v25 = v12 + 4;
          if (v12 + 4 >= v18)
            goto LABEL_39;
          v24 = *(_QWORD *)(v10 + 8 * v25);
          if (!v24)
          {
            v25 = v12 + 5;
            if (v12 + 5 >= v18)
              goto LABEL_39;
            v24 = *(_QWORD *)(v10 + 8 * v25);
            if (!v24)
            {
              v26 = v12 + 6;
              while (v26 < v18)
              {
                v24 = *(_QWORD *)(v10 + 8 * v26++);
                if (v24)
                {
                  v25 = v26 - 1;
                  goto LABEL_36;
                }
              }
LABEL_39:
              *(_QWORD *)(v3 + 16) = v5;
              goto LABEL_10;
            }
          }
        }
      }
    }
LABEL_36:
    v16 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v25 << 6);
    v12 = v25;
LABEL_37:
    v19 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22);
    if (v5 >= v20)
      goto LABEL_38;
  }
  __break(1u);
LABEL_60:
  __break(1u);
}

void sub_1C0289394(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  if (a1 >> 62)
  {
    OUTLINED_FUNCTION_74_1();
    v2 = sub_1C03047F8();
    OUTLINED_FUNCTION_55_0();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = *v1;
  if (*v1 >> 62)
  {
    OUTLINED_FUNCTION_31_6();
    v4 = sub_1C03047F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_24;
  }
  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  v4 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v3 & 0x8000000000000000) == 0 && (v3 & 0x4000000000000000) == 0)
  {
    v7 = v3 & 0xFFFFFFFFFFFFFF8;
    if (v5 <= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_16;
    v4 = 1;
  }
  v13 = v2;
  if (v3 >> 62)
    goto LABEL_25;
  v8 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v8 <= v5)
      v8 = v5;
    OUTLINED_FUNCTION_31_6();
    v3 = MEMORY[0x1C3B975F8](v4, v8, 1, v3);
    OUTLINED_FUNCTION_238();
    *v1 = v3;
    v7 = v3 & 0xFFFFFFFFFFFFFF8;
    v2 = v13;
LABEL_16:
    OUTLINED_FUNCTION_80_9(v7);
    sub_1C02A1A4C();
    if (v9 >= v2)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    OUTLINED_FUNCTION_31_6();
    v8 = sub_1C03047F8();
    swift_bridgeObjectRelease();
  }
  if (v9 < 1)
    goto LABEL_20;
  OUTLINED_FUNCTION_117_4();
  if (!v12)
  {
    *(_QWORD *)(v10 + 16) = v11;
LABEL_20:
    swift_bridgeObjectRelease();
    sub_1C0304150();
    return;
  }
  __break(1u);
}

void sub_1C028956C(uint64_t a1, uint64_t (*a2)(void), void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (__OFADD__(v7, v5))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_33_37() || v7 + v5 > *(_QWORD *)(v6 + 24) >> 1)
  {
    OUTLINED_FUNCTION_200_0();
    v6 = a2();
  }
  if (!*(_QWORD *)(v3 + 16))
  {
    if (!v5)
      goto LABEL_11;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_37_32();
  if (v10 != v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v12 = OUTLINED_FUNCTION_36_36();
  a3(v12);
  if (!v5)
  {
LABEL_11:
    OUTLINED_FUNCTION_33();
    *v4 = v6;
    return;
  }
  OUTLINED_FUNCTION_114_3();
  if (!v11)
  {
    *(_QWORD *)(v6 + 16) = v13;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1C028962C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_298();
  if (v7)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v8 = v6;
  v9 = OUTLINED_FUNCTION_33_37();
  if (!(_DWORD)v9 || v5 > *(_QWORD *)(v2 + 24) >> 1)
  {
    if (v4 <= v5)
      v10 = v5;
    else
      v10 = v4;
    v2 = OUTLINED_FUNCTION_280(v9, v10);
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_14;
    goto LABEL_16;
  }
  v11 = (*(_QWORD *)(v2 + 24) >> 1) - *(_QWORD *)(v2 + 16);
  v12 = v8(0);
  if (v11 < v3)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_57_17(v12);
  if (!v3)
  {
LABEL_14:
    OUTLINED_FUNCTION_33();
    *v1 = v2;
    OUTLINED_FUNCTION_1();
    return;
  }
  OUTLINED_FUNCTION_114_3();
  if (!v7)
  {
    *(_QWORD *)(v2 + 16) = v13;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_1C02896D8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v4 + v2 > *(_QWORD *)(v3 + 24) >> 1)
  {
    sub_1C0050554();
    v3 = v6;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v2)
      goto LABEL_11;
    goto LABEL_13;
  }
  if ((*(_QWORD *)(v3 + 24) >> 1) - *(_QWORD *)(v3 + 16) < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1C00AF904();
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8 = __OFADD__(v7, v2);
  v9 = v7 + v2;
  if (!v8)
  {
    *(_QWORD *)(v3 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1C02897B4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v4 + v2 > *(_QWORD *)(v3 + 24) >> 1)
  {
    sub_1C00AC810();
    v3 = v6;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v2)
      goto LABEL_11;
    goto LABEL_13;
  }
  if ((*(_QWORD *)(v3 + 24) >> 1) - *(_QWORD *)(v3 + 16) < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1C00B072C(a1 + 32, v2);
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8 = __OFADD__(v7, v2);
  v9 = v7 + v2;
  if (!v8)
  {
    *(_QWORD *)(v3 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1C0289890(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v4 + v2 > *(_QWORD *)(v3 + 24) >> 1)
  {
    sub_1C00AC8AC();
    v3 = v6;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v2)
      goto LABEL_11;
    goto LABEL_13;
  }
  if ((*(_QWORD *)(v3 + 24) >> 1) - *(_QWORD *)(v3 + 16) < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1C00B07D0(a1 + 32, v2);
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8 = __OFADD__(v7, v2);
  v9 = v7 + v2;
  if (!v8)
  {
    *(_QWORD *)(v3 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_1C0289968(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v3 = a3;
  if (*(_QWORD *)(a3 + 16) > 1uLL)
  {
    v8 = sub_1C0304258();
    v5 = swift_bridgeObjectRetain();
    sub_1C02853D4(v5, (uint64_t)&v8, a1);
    v3 = v6;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_1C02899F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = a1;
  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_1C0303FD0();
    sub_1C0303FD0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return a1;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v4;
}

void sub_1C0289A88(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = 0;
  v3 = a1 + 56;
  OUTLINED_FUNCTION_24_23();
  v6 = v5 & v4;
  v8 = (unint64_t)(v7 + 63) >> 6;
  if ((v5 & v4) == 0)
    goto LABEL_3;
LABEL_2:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v2 << 6); ; i = v15 + (v2 << 6))
  {
    sub_1C022E388(&v16, *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * i));
    if (v6)
      goto LABEL_2;
LABEL_3:
    v11 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v11 >= v8)
      goto LABEL_21;
    ++v2;
    if (!*(_QWORD *)(v3 + 8 * v11))
    {
      v2 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_21;
      if (!*(_QWORD *)(v3 + 8 * v2))
      {
        v2 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_21;
        if (!*(_QWORD *)(v3 + 8 * v2))
        {
          v2 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_21;
          if (!*(_QWORD *)(v3 + 8 * v2))
            break;
        }
      }
    }
LABEL_18:
    OUTLINED_FUNCTION_31_25();
    v6 = v14 & v13;
  }
  v12 = v11 + 4;
  if (v12 >= v8)
  {
LABEL_21:
    swift_release();
    return;
  }
  if (*(_QWORD *)(v3 + 8 * v12))
  {
    v2 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v8)
      goto LABEL_21;
    ++v12;
    if (*(_QWORD *)(v3 + 8 * v2))
      goto LABEL_18;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_1C0289BB8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0) - 8);
  v5 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C020FAFC();
    v5 = v6;
  }
  v7 = *(_QWORD *)(v5 + 16);
  v9[0] = v5 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v9[1] = v7;
  swift_bridgeObjectRetain();
  sub_1C029DFBC(v9, a2);
  *a1 = v5;
  return swift_bridgeObjectRelease_n();
}

void sub_1C0289C74(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C020FBFC();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_1C029EF40(v5);
  *a1 = v2;
}

uint64_t sub_1C0289CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = a2;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = a1 + 40;
    do
    {
      OUTLINED_FUNCTION_22();
      OUTLINED_FUNCTION_11_50((uint64_t)&v14, v4, v5, v6, v7, v8, v9, v10, v13, v14);
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
    OUTLINED_FUNCTION_33();
    return v15;
  }
  else
  {
    v11 = a2;
    OUTLINED_FUNCTION_33();
  }
  return v11;
}

uint64_t sub_1C0289D60(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14[5];
  char v15;
  uint64_t v16;
  _BYTE v17[48];

  v2 = result;
  v3 = 0;
  v16 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v9 | (v3 << 6); ; i = __clz(__rbit64(v12)) + (v3 << 6))
  {
    sub_1C015898C(*(_QWORD *)(v2 + 48) + 48 * i, (uint64_t)v17);
    sub_1C02A2D6C((uint64_t)v17);
    sub_1C022EDFC((uint64_t)v14, (uint64_t)v17);
    result = sub_1C0120AE0(v14[0], v14[1], v14[2], v14[3], v14[4], v15);
    if (v7)
      goto LABEL_4;
LABEL_5:
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_20:
    v7 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v16;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1C0289EFC()
{
  sub_1C030484C();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_9();
}

void sub_1C0289F3C(char a1)
{
  if (a1)
    OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_9();
}

void sub_1C0289FBC(char a1)
{
  if (a1)
  {
    if (a1 == 1)
      goto LABEL_6;
  }
  else
  {
    OUTLINED_FUNCTION_242();
  }
  OUTLINED_FUNCTION_176();
LABEL_6:
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_9();
}

void sub_1C028A038(char a1)
{
  if (!a1)
  {
    OUTLINED_FUNCTION_242();
LABEL_5:
    OUTLINED_FUNCTION_176();
    goto LABEL_6;
  }
  if (a1 == 1)
    goto LABEL_5;
LABEL_6:
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C028A0AC()
{
  return sub_1C0301D08();
}

uint64_t sub_1C028A0FC(void (*a1)(uint64_t *__return_ptr, unint64_t), uint64_t a2, void (*a3)(char *, char *), uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v28 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a5;
  v13 = *(_QWORD *)(a5 + 16);
  swift_bridgeObjectRetain();
  v14 = MEMORY[0x1E0DEE9D8];
  v15 = sub_1C0303DB4();
  swift_bridgeObjectRetain();
  sub_1C02882B8(v15, 0, v13, a1, a2, a5, (uint64_t)&v30, a3, a4);
  swift_bridgeObjectRetain();
  sub_1C00B16BC();
  v17 = v16;
  swift_bridgeObjectRelease();
  v29 = v17;
  sub_1C0289C74(&v29);
  swift_bridgeObjectRelease();
  v18 = v29;
  v19 = *(_QWORD *)(v29 + 16);
  if (v19)
  {
    v29 = v14;
    sub_1C00B1738();
    v20 = 0;
    v14 = v29;
    v21 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v26 = v30 + v21;
    v27 = v30;
    while (1)
    {
      v22 = *(_QWORD *)(v18 + 8 * v20 + 32);
      if ((v22 & 0x8000000000000000) != 0)
        break;
      if (v22 >= *(_QWORD *)(v27 + 16))
        goto LABEL_10;
      v23 = *(_QWORD *)(v28 + 72);
      sub_1C0045DFC(v26 + v23 * v22, (uint64_t)v12, &qword_1ED726DB0);
      v29 = v14;
      v24 = *(_QWORD *)(v14 + 16);
      if (v24 >= *(_QWORD *)(v14 + 24) >> 1)
      {
        sub_1C00B1738();
        v14 = v29;
      }
      ++v20;
      *(_QWORD *)(v14 + 16) = v24 + 1;
      sub_1C005A718((uint64_t)v12, v14 + v21 + v24 * v23, &qword_1ED726DB0);
      if (v19 == v20)
        goto LABEL_8;
    }
    __break(1u);
LABEL_10:
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_release();
    swift_bridgeObjectRelease();
    return v14;
  }
  return result;
}

void sub_1C028A33C(uint64_t *a1, unint64_t a2, void (*a3)(uint64_t *__return_ptr, unint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(char *, char *), uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *);
  char *v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;

  v9 = v8;
  v39 = a8;
  v40 = a7;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v38 - v20;
  MEMORY[0x1E0C80A78](v19);
  v41 = (char *)&v38 - v23;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (*(_QWORD *)(a5 + 16) <= a2)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v46 = v8;
  v42 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v43 = (_QWORD *)a6;
  v9 = *(_QWORD **)(v22 + 72);
  a6 = (_QWORD)v9 * a2;
  a3(&v44, a5 + v42 + (_QWORD)v9 * a2);
  v24 = v44;
  a5 = v45;
  v25 = sub_1C00A9B84(v44, v45, *a1);
  if ((v26 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C00B5220(a2, v24, a5, v32, v33, v34, v35, v36, v38, v39);
    swift_bridgeObjectRelease_n();
    return;
  }
  a3 = (void (*)(uint64_t *__return_ptr, unint64_t))v25;
  if ((v25 & 0x8000000000000000) != 0)
    goto LABEL_13;
  v27 = *v43;
  v28 = *(_QWORD *)(*v43 + 16);
  if (v25 >= v28)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v29 = v27 + v42;
  a5 = v25 * (_QWORD)v9;
  sub_1C0045DFC(v27 + v42 + v25 * (_QWORD)v9, (uint64_t)v21, &qword_1ED726DB0);
  if (v28 > a2)
  {
    sub_1C0045DFC(v29 + a6, (uint64_t)v18, &qword_1ED726DB0);
    a6 = (uint64_t)v41;
    v40(v21, v18);
    sub_1C0044B78((uint64_t)v18, &qword_1ED726DB0);
    sub_1C0044B78((uint64_t)v21, &qword_1ED726DB0);
    v9 = v43;
    v30 = *v43;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v9 = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_8;
    goto LABEL_16;
  }
LABEL_15:
  __break(1u);
LABEL_16:
  sub_1C01F5AF8();
  v30 = v37;
  *v9 = v37;
LABEL_8:
  if ((unint64_t)a3 >= *(_QWORD *)(v30 + 16))
  {
    __break(1u);
  }
  else
  {
    sub_1C006CC50(a6, v30 + v42 + a5, &qword_1ED726DB0);
    swift_bridgeObjectRelease();
  }
}

void sub_1C028A5A4(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_0_95(a1);
}

BOOL sub_1C028A5AC(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & a2;
  if (v3 != a2)
    *v2 |= a2;
  *a1 = a2;
  return v3 != a2;
}

BOOL sub_1C028A5DC(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_1C028A5E8(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

uint64_t sub_1C028A5F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1C0301B70();
  OUTLINED_FUNCTION_232();
  __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  v7 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 104));
  *v7 = 0;
  swift_beginAccess();
  *v7 = a1;
  swift_release();
  return v1;
}

uint64_t sub_1C028A67C(uint64_t result)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;

  v1 = 0;
  v2 = result + 56;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(result + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  while (v5)
  {
    v7 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v8 = v7 | (v1 << 6);
LABEL_22:
    if (*(_BYTE *)(*(_QWORD *)(result + 48) + 48 * v8 + 40) != 2)
      return 0;
  }
  v9 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v9 >= v6)
    return 1;
  v10 = *(_QWORD *)(v2 + 8 * v9);
  ++v1;
  if (v10)
    goto LABEL_21;
  v1 = v9 + 1;
  if (v9 + 1 >= v6)
    return 1;
  v10 = *(_QWORD *)(v2 + 8 * v1);
  if (v10)
    goto LABEL_21;
  v1 = v9 + 2;
  if (v9 + 2 >= v6)
    return 1;
  v10 = *(_QWORD *)(v2 + 8 * v1);
  if (v10)
    goto LABEL_21;
  v1 = v9 + 3;
  if (v9 + 3 >= v6)
    return 1;
  v10 = *(_QWORD *)(v2 + 8 * v1);
  if (v10)
  {
LABEL_21:
    v5 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v1 << 6);
    goto LABEL_22;
  }
  v11 = v9 + 4;
  if (v11 >= v6)
    return 1;
  v10 = *(_QWORD *)(v2 + 8 * v11);
  if (v10)
  {
    v1 = v11;
    goto LABEL_21;
  }
  while (1)
  {
    v1 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v1 >= v6)
      return 1;
    v10 = *(_QWORD *)(v2 + 8 * v1);
    ++v11;
    if (v10)
      goto LABEL_21;
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_1C028A7A0()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727E60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C03080B0;
  *(_QWORD *)(inited + 32) = sub_1C0303EB0();
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 48) = sub_1C0303EB0();
  *(_QWORD *)(inited + 56) = v2;
  *(_QWORD *)(inited + 64) = sub_1C0303EB0();
  *(_QWORD *)(inited + 72) = v3;
  *(_QWORD *)(inited + 80) = sub_1C0303EB0();
  *(_QWORD *)(inited + 88) = v4;
  *(_QWORD *)(inited + 96) = sub_1C0303EB0();
  *(_QWORD *)(inited + 104) = v5;
  *(_QWORD *)(inited + 112) = sub_1C0303EB0();
  *(_QWORD *)(inited + 120) = v6;
  *(_QWORD *)(inited + 128) = sub_1C0303EB0();
  *(_QWORD *)(inited + 136) = v7;
  sub_1C011F3A8();
  qword_1EF5FC778 = v8;
}

uint64_t sub_1C028A880()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  type metadata accessor for StringTokenizer();
  sub_1C0301DB0();
  v0 = OUTLINED_FUNCTION_189();
  return v1(v0);
}

void sub_1C028A8C4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  _QWORD *v40;
  int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  int v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  uint64_t v68;
  uint64_t v69;

  OUTLINED_FUNCTION_18_0();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = sub_1C0301690();
  v65 = *(_QWORD *)(v10 - 8);
  v66 = v10;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_6_0();
  v14 = v13 - v12;
  type metadata accessor for UCGStringTokenizer(0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_6_0();
  v18 = v17 - v16;
  v19 = StringTokenizer.tokenize(_:useMorphun:removeEmojis:)(v9, v7, v5, v3);
  type metadata accessor for StringTokenizer();
  v20 = sub_1C004D2B4();
  sub_1C00638E8(v1, v18, type metadata accessor for UCGStringTokenizer);
  if ((v20 & 1) != 0)
  {
    OUTLINED_FUNCTION_187_0(v21, type metadata accessor for UCGStringTokenizer);
  }
  else
  {
    v68 = sub_1C0301D74();
    v69 = v22;
    v67[0] = 28523;
    v67[1] = 0xE200000000000000;
    sub_1C004F444();
    sub_1C004F480();
    v23 = sub_1C0303E44();
    v24 = OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_187_0(v24, type metadata accessor for UCGStringTokenizer);
    if ((v23 & 1) == 0)
      goto LABEL_45;
  }
  v25 = MEMORY[0x1E0DEE9D8];
  v68 = MEMORY[0x1E0DEE9D8];
  v26 = *(_QWORD *)(v19 + 16);
  if (v26)
  {
    OUTLINED_FUNCTION_22();
    v27 = (unint64_t *)(v19 + 40);
    do
    {
      v28 = *(v27 - 1);
      v29 = *v27;
      OUTLINED_FUNCTION_74_1();
      sub_1C0288D80(v28, v29);
      v27 += 2;
      --v26;
    }
    while (v26);
    OUTLINED_FUNCTION_2();
    v30 = v68;
  }
  else
  {
    OUTLINED_FUNCTION_18();
    v30 = MEMORY[0x1E0DEE9D8];
  }
  v31 = *(_QWORD *)(v30 + 16);
  if (v31)
  {
    v68 = v25;
    OUTLINED_FUNCTION_207_0();
    v32 = 0;
    do
    {
      v33 = *(_DWORD *)(v30 + 4 * v32 + 32);
      if (v33 > 0x7F)
      {
        v41 = (*(_DWORD *)(v30 + 4 * v32 + 32) & 0x3F) << 8;
        if (v33 >= 0x800)
        {
          v42 = v33 >> 12;
          v43 = (v41 | (v33 >> 6) & 0x3F) << 8;
          v44 = HIWORD(v33);
          v34 = (((v43 | (v33 >> 12) & 0x3F) << 8) | (v33 >> 18)) - 2122219023;
          v45 = (v43 | v42) + 8487393;
          if (!v44)
            v34 = v45;
        }
        else
        {
          v34 = (v41 | (v33 >> 6)) + 33217;
        }
      }
      else
      {
        v34 = v33 + 1;
      }
      v67[0] = (v34 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * (4 - (__clz(v34) >> 3))));
      v35 = MEMORY[0x1C3B96E6C](v67);
      v37 = v36;
      v38 = (_QWORD *)v68;
      if ((OUTLINED_FUNCTION_245() & 1) == 0)
      {
        OUTLINED_FUNCTION_113_6();
        v38 = (_QWORD *)v68;
      }
      v39 = v38[2];
      if (v39 >= v38[3] >> 1)
      {
        OUTLINED_FUNCTION_31_0();
        v38 = (_QWORD *)v68;
      }
      ++v32;
      v38[2] = v39 + 1;
      v40 = &v38[2 * v39];
      v40[4] = v35;
      v40[5] = v37;
    }
    while (v31 != v32);
    OUTLINED_FUNCTION_17_0();
    v25 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    OUTLINED_FUNCTION_17_0();
    v38 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v46 = v38[2];
  if (v46)
  {
    v67[0] = v25;
    OUTLINED_FUNCTION_207_0();
    v47 = v38 + 5;
    do
    {
      v48 = *v47;
      v68 = *(v47 - 1);
      v69 = v48;
      OUTLINED_FUNCTION_21();
      sub_1C0301678();
      sub_1C004F408();
      v49 = sub_1C03044F8();
      v51 = v50;
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v14, v66);
      OUTLINED_FUNCTION_17_0();
      v52 = (_QWORD *)v67[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_31_0();
        v52 = (_QWORD *)v67[0];
      }
      v53 = v52[2];
      if (v53 >= v52[3] >> 1)
      {
        OUTLINED_FUNCTION_31_0();
        v52 = (_QWORD *)v67[0];
      }
      v47 += 2;
      v52[2] = v53 + 1;
      v54 = &v52[2 * v53];
      v54[4] = v49;
      v54[5] = v51;
      --v46;
    }
    while (v46);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    OUTLINED_FUNCTION_18();
    v52 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v55 = v52[2];
  if (v55)
  {
    v56 = v52 + 5;
    v57 = MEMORY[0x1E0DEE9D8];
    do
    {
      v59 = *(v56 - 1);
      v58 = *v56;
      v60 = HIBYTE(*v56) & 0xF;
      if ((*v56 & 0x2000000000000000) == 0)
        v60 = v59 & 0xFFFFFFFFFFFFLL;
      if (v60)
      {
        OUTLINED_FUNCTION_44();
        v61 = OUTLINED_FUNCTION_245();
        v68 = v57;
        if ((v61 & 1) == 0)
        {
          OUTLINED_FUNCTION_113_6();
          v57 = v68;
        }
        v63 = *(_QWORD *)(v57 + 16);
        v62 = *(_QWORD *)(v57 + 24);
        if (v63 >= v62 >> 1)
        {
          OUTLINED_FUNCTION_74_0(v62);
          OUTLINED_FUNCTION_31_0();
          v57 = v68;
        }
        *(_QWORD *)(v57 + 16) = v63 + 1;
        v64 = v57 + 16 * v63;
        *(_QWORD *)(v64 + 32) = v59;
        *(_QWORD *)(v64 + 40) = v58;
      }
      v56 += 2;
      --v55;
    }
    while (v55);
  }
  OUTLINED_FUNCTION_17_0();
LABEL_45:
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C028AD50(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v25[2];

  if (qword_1ED727970 != -1)
    swift_once();
  v11 = OUTLINED_FUNCTION_9_0();
  v12 = __swift_project_value_buffer(v11, (uint64_t)&unk_1ED7295C8);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_9_2();
  sub_1C0303B80();
  v13 = OUTLINED_FUNCTION_9_1();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = OUTLINED_FUNCTION_4_0();
    v25[0] = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v14 = 136315650;
    OUTLINED_FUNCTION_44();
    sub_1C003E6D8(a5, a6, v25);
    OUTLINED_FUNCTION_189_1();
    OUTLINED_FUNCTION_8_2();
    *(_WORD *)(v14 + 12) = 2080;
    OUTLINED_FUNCTION_32();
    sub_1C003E6D8(a3, a4, v25);
    OUTLINED_FUNCTION_189_1();
    OUTLINED_FUNCTION_8_2();
    *(_WORD *)(v14 + 22) = 2080;
    OUTLINED_FUNCTION_21();
    sub_1C003E6D8(a1, a2, v25);
    sub_1C03044B0();
    OUTLINED_FUNCTION_8_2();
    _os_log_impl(&dword_1C0039000, v12, v13, "[UCG] Relationship alias lookup: locale='%s' normalizedLabel='%s' label='%s'", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_2();
  v15 = sub_1C028B140(a1, a2, a5, a6);
  if ((v16 & 1) == 0)
    return v15;
  v15 = sub_1C028B140(a3, a4, a5, a6);
  if ((v17 & 1) == 0)
    return v15;
  v18 = sub_1C0056DBC(a1, a2);
  if ((v19 & 1) != 0)
  {
    v20 = a1;
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_9_2();
    sub_1C0303B80();
    v21 = OUTLINED_FUNCTION_9_1();
    if (os_log_type_enabled(v12, v21))
    {
      v22 = OUTLINED_FUNCTION_4_0();
      v25[0] = OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v22 = 136315394;
      OUTLINED_FUNCTION_21();
      sub_1C003E6D8(v20, a2, v25);
      OUTLINED_FUNCTION_188_0();
      OUTLINED_FUNCTION_8_2();
      *(_WORD *)(v22 + 12) = 2080;
      OUTLINED_FUNCTION_44();
      sub_1C003E6D8(a5, a6, v25);
      OUTLINED_FUNCTION_188_0();
      OUTLINED_FUNCTION_8_2();
      OUTLINED_FUNCTION_38_8(&dword_1C0039000, v12, v21, "[UCG] Label '%s' does not map to a valid relationship in locale '%s'", (uint8_t *)v22);
      OUTLINED_FUNCTION_21_2();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_2();
  }
  return v18;
}

uint64_t sub_1C028B140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t inited;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (!OUTLINED_FUNCTION_183_1())
    return 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C03084B0;
  v10 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 64) = &off_1E799BE20;
  *(_QWORD *)(inited + 32) = a3;
  *(_QWORD *)(inited + 40) = a4;
  *(_QWORD *)(inited + 96) = v10;
  *(_QWORD *)(inited + 104) = &off_1E799BE20;
  *(_QWORD *)(inited + 72) = a1;
  *(_QWORD *)(inited + 80) = a2;
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_74_1();
  v11 = OUTLINED_FUNCTION_121_5();
  v16 = sub_1C0054DE4(v11, v12, v13, v14, v15);
  if (!v4)
    a2 = v16;
  OUTLINED_FUNCTION_45_19();
  OUTLINED_FUNCTION_44_21();
  OUTLINED_FUNCTION_1_0();
  return a2;
}

uint64_t sub_1C028B234(uint64_t a1)
{
  uint64_t v1;
  uint64_t inited;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (!OUTLINED_FUNCTION_183_1())
    return 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
  inited = swift_initStackObject();
  v4 = MEMORY[0x1E0DEDC60];
  *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
  *(_QWORD *)(inited + 56) = v4;
  *(_QWORD *)(inited + 64) = &off_1E799BE18;
  *(_QWORD *)(inited + 32) = a1;
  v5 = OUTLINED_FUNCTION_251();
  v9 = sub_1C0054ED4(v5, v6, inited, v7, v8);
  if (!v1)
    a1 = v9;
  swift_setDeallocating();
  sub_1C004EFEC();
  OUTLINED_FUNCTION_1_0();
  return a1;
}

uint64_t sub_1C028B324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (!OUTLINED_FUNCTION_183_1())
    return MEMORY[0x1E0DEE9E8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
  inited = swift_initStackObject();
  v9 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(inited + 16) = xmmword_1C03084B0;
  *(_QWORD *)(inited + 56) = v9;
  *(_QWORD *)(inited + 64) = &off_1E799BE20;
  v10 = MEMORY[0x1E0DEDC60];
  *(_QWORD *)(inited + 32) = a2;
  *(_QWORD *)(inited + 40) = a3;
  *(_QWORD *)(inited + 96) = v10;
  *(_QWORD *)(inited + 104) = &off_1E799BE18;
  *(_QWORD *)(inited + 72) = a1;
  OUTLINED_FUNCTION_74_1();
  v11 = OUTLINED_FUNCTION_121_5();
  sub_1C006890C(v11, v12, v13);
  OUTLINED_FUNCTION_45_19();
  OUTLINED_FUNCTION_44_21();
  if (v4)
  {
    OUTLINED_FUNCTION_1_0();
  }
  else
  {
    v14 = sub_1C0286EB0();
    v3 = sub_1C01AACEC(v14);
    OUTLINED_FUNCTION_1_0();
    swift_release();
  }
  return v3;
}

uint64_t sub_1C028B43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a3 & ~a4) == 0)
  {
    OUTLINED_FUNCTION_253();
    swift_bridgeObjectRetain();
  }
  return OUTLINED_FUNCTION_165();
}

void sub_1C028B478(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[5];
  uint64_t v4;

  v4 = a1;
  if (qword_1EF5B8018 != -1)
    a1 = swift_once();
  v1 = qword_1EF5FC780;
  MEMORY[0x1E0C80A78](a1);
  v3[2] = &v4;
  OUTLINED_FUNCTION_44();
  v2 = sub_1C00E4858((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1C02A35DC, (uint64_t)v3, v1);
  OUTLINED_FUNCTION_33();
  MEMORY[0x1C3B97040](v2, MEMORY[0x1E0DEA968]);
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C028B540()
{
  qword_1EF5FC780 = (uint64_t)&unk_1E79878D0;
}

void sub_1C028B554(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_0_95(a1);
}

void sub_1C028B55C()
{
  uint64_t *v0;

  sub_1C028B478(*v0);
}

void sub_1C028B564(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_172_0(a1);
  *v1 = j__OUTLINED_FUNCTION_145_3(v2, v3);
  OUTLINED_FUNCTION_9();
}

void sub_1C028B584(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_172_0(a1);
  *v1 = j__OUTLINED_FUNCTION_5_63(v2, v3);
  OUTLINED_FUNCTION_9();
}

BOOL sub_1C028B5A4(_QWORD *a1, uint64_t *a2)
{
  return sub_1C028A5AC(a1, *a2);
}

uint64_t sub_1C028B5AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_1C01C1A28(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1C028B5DC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_1C01C1A68(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1C028B60C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_1C01C1A94(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_1C028B638(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1C028A5DC(*a1, *v1);
}

BOOL sub_1C028B644(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1C028A5E8(*a1, *v1);
}

void sub_1C028B650(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_0_95(a1);
}

void sub_1C028B658()
{
  uint64_t v0;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_135_3();
  OUTLINED_FUNCTION_18();
  sub_1C0304B10();
  if (*(_QWORD *)(v0 + 32))
  {
    sub_1C0304B1C();
    OUTLINED_FUNCTION_65();
    OUTLINED_FUNCTION_165();
    OUTLINED_FUNCTION_169_0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C0304B1C();
    OUTLINED_FUNCTION_37_0();
  }
}

void sub_1C028B6D4()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  BOOL v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_253();
  v3 = *v2 == *v0 && v1[1] == v0[1];
  if (v3 || (OUTLINED_FUNCTION_176(), OUTLINED_FUNCTION_23_1(), (v4 & 1) != 0))
  {
    if (v1[2] == v0[2])
    {
      v5 = v1[4];
      v6 = v0[4];
      if (v5)
      {
        if (v6)
        {
          if (v1[3] != v0[3] || v5 != v6)
            OUTLINED_FUNCTION_176();
        }
      }
    }
  }
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C028B75C()
{
  OUTLINED_FUNCTION_0_1();
  sub_1C028B658();
  return OUTLINED_FUNCTION_78_0();
}

uint64_t sub_1C028B794()
{
  sub_1C0304B04();
  sub_1C028B658();
  return sub_1C0304B40();
}

void sub_1C028B7D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[5];
  uint64_t v4;

  v4 = a1;
  if (qword_1EF5B8020 != -1)
    a1 = swift_once();
  v1 = qword_1EF5FC788;
  MEMORY[0x1E0C80A78](a1);
  v3[2] = &v4;
  OUTLINED_FUNCTION_44();
  v2 = sub_1C00E4858((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1C02A37C4, (uint64_t)v3, v1);
  OUTLINED_FUNCTION_33();
  MEMORY[0x1C3B97040](v2, MEMORY[0x1E0DEA968]);
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C028B898()
{
  qword_1EF5FC788 = (uint64_t)&unk_1E79879E0;
}

void sub_1C028B8AC()
{
  OUTLINED_FUNCTION_220_0();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_270();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_283();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C028B8E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1 != a4 || a2 != a5)
  {
    OUTLINED_FUNCTION_176();
    OUTLINED_FUNCTION_23_1();
  }
  OUTLINED_FUNCTION_9();
}

void sub_1C028B928()
{
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_270();
  OUTLINED_FUNCTION_14();
  sub_1C0304B10();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_44();
}

uint64_t sub_1C028B974()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_169_0();
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_44();
  OUTLINED_FUNCTION_1_16();
  return OUTLINED_FUNCTION_94_9();
}

void sub_1C028B9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v12;
  char v13;
  BOOL v14;

  v12 = a1 == a5 && a2 == a6;
  if ((v12 || (OUTLINED_FUNCTION_176(), OUTLINED_FUNCTION_23_1(), (v13 & 1) != 0))
    && (a3 == a7 ? (v14 = a4 == a8) : (v14 = 0), !v14))
  {
    sub_1C0304A08();
  }
  else
  {
    OUTLINED_FUNCTION_37_0();
  }
}

void sub_1C028BA4C()
{
  OUTLINED_FUNCTION_220_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_169_0();
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_44();
  OUTLINED_FUNCTION_1_16();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_44();
}

void sub_1C028BA9C()
{
  uint64_t *v0;

  sub_1C028B7D0(*v0);
}

void sub_1C028BAA4()
{
  sub_1C028B928();
}

void sub_1C028BAB0()
{
  sub_1C028B8AC();
}

uint64_t sub_1C028BABC()
{
  sub_1C0304B04();
  swift_bridgeObjectRetain();
  sub_1C0303E20();
  swift_bridgeObjectRelease();
  sub_1C0304B10();
  return sub_1C0304B40();
}

void sub_1C028BB28(uint64_t *a1, uint64_t *a2)
{
  sub_1C028B8E4(*a1, a1[1], a1[2], *a2, a2[1]);
}

void sub_1C028BB44()
{
  sub_1C028BA4C();
}

uint64_t sub_1C028BB50()
{
  return sub_1C028B974();
}

uint64_t sub_1C028BB5C()
{
  sub_1C0304B04();
  swift_bridgeObjectRetain();
  sub_1C0303E20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C0303E20();
  swift_bridgeObjectRelease();
  return sub_1C0304B40();
}

void sub_1C028BBDC(uint64_t *a1, uint64_t *a2)
{
  sub_1C028B9D0(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_1C028BBF8()
{
  uint64_t v0;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  char v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  sub_1C015898C(v0, (uint64_t)&v2);
  if (v5)
  {
    v6 = v2;
    if (v5 == 1)
    {
      *(_QWORD *)&v7 = v3;
      swift_bridgeObjectRetain();
    }
    else
    {
      v7 = v3;
      v9 = v3;
      v10 = v2;
      sub_1C0098758((uint64_t)&v10);
      sub_1C0098758((uint64_t)&v9);
    }
  }
  else
  {
    v6 = v2;
    v7 = v3;
    v8 = v4;
    v10 = v2;
    sub_1C005A718((uint64_t)&v7 + 8, (uint64_t)&v9, qword_1ED727DC0);
    sub_1C0098758((uint64_t)&v10);
    sub_1C0098758((uint64_t)&v9);
  }
  return sub_1C0303EF8();
}

void sub_1C028BCD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v10;

  OUTLINED_FUNCTION_181_1(a1, a2, a3, a4, a5, a6, a7, a8, v9);
  if (v10)
  {
    OUTLINED_FUNCTION_145_0();
    if (v10 == 1)
    {
      OUTLINED_FUNCTION_21();
      sub_1C0303E20();
      sub_1C02A2D6C(v8);
      sub_1C0304B10();
    }
    else
    {
      OUTLINED_FUNCTION_22();
      OUTLINED_FUNCTION_135_3();
      OUTLINED_FUNCTION_18();
      OUTLINED_FUNCTION_74_1();
      OUTLINED_FUNCTION_259();
      OUTLINED_FUNCTION_55_0();
    }
  }
  else
  {
    OUTLINED_FUNCTION_145_0();
    sub_1C028B658();
  }
}

uint64_t sub_1C028BDBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  sub_1C015898C(a1, (uint64_t)&v33);
  if (v38)
  {
    if (v38 == 1)
    {
      v3 = v33;
      v4 = v34;
      v5 = v35;
      sub_1C015898C(a2, (uint64_t)&v27);
      if (v32 != 1)
        return 0;
      v6 = v29;
      if (v3 != v27 || v4 != v28)
      {
        OUTLINED_FUNCTION_189();
        if ((OUTLINED_FUNCTION_176() & 1) == 0)
          return 0;
      }
      return v5 == v6;
    }
    v18 = v33;
    v19 = v34;
    v20 = v35;
    v21 = v36;
    sub_1C015898C(a2, (uint64_t)&v27);
    if (v32 != 2)
      return 0;
    v22 = v29;
    v23 = v30;
    v24 = v18 == v27 && v19 == v28;
    if (!v24 && (OUTLINED_FUNCTION_176() & 1) == 0)
      return 0;
    if (v20 == v22 && v21 == v23)
      return 1;
  }
  else
  {
    v8 = v33;
    v9 = v34;
    v11 = v35;
    v10 = v36;
    v12 = v37;
    sub_1C015898C(a2, (uint64_t)&v27);
    if (v32)
      return 0;
    v14 = v29;
    v13 = v30;
    v15 = v31;
    v16 = v8 == v27 && v9 == v28;
    if (!v16 && (OUTLINED_FUNCTION_176() & 1) == 0 || v11 != v14)
      return 0;
    if (!v12)
      return !v15;
    if (!v15)
      return 0;
    if (v10 == v13 && v12 == v15)
      return 1;
  }
  OUTLINED_FUNCTION_189();
  return (OUTLINED_FUNCTION_176() & 1) != 0;
}

uint64_t sub_1C028BF44()
{
  uint64_t v0;
  _OWORD v2[2];
  uint64_t v3;
  char v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  OUTLINED_FUNCTION_0_1();
  sub_1C015898C(v0, (uint64_t)v2);
  if (v4)
  {
    if (v4 == 1)
    {
      OUTLINED_FUNCTION_87_10();
      OUTLINED_FUNCTION_22();
      OUTLINED_FUNCTION_135_3();
      sub_1C02A2D6C(v0);
      sub_1C0304B10();
    }
    else
    {
      sub_1C0304B10();
      OUTLINED_FUNCTION_65();
      OUTLINED_FUNCTION_169_0();
      OUTLINED_FUNCTION_29();
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_100_5();
      OUTLINED_FUNCTION_17_0();
    }
  }
  else
  {
    v5 = v2[0];
    v6 = v2[1];
    v7 = v3;
    OUTLINED_FUNCTION_96_6();
    sub_1C028B658();
  }
  return OUTLINED_FUNCTION_78_0();
}

uint64_t sub_1C028C038()
{
  uint64_t v0;
  uint64_t v2;

  sub_1C015898C(v0, (uint64_t)&v2);
  return sub_1C028BF44();
}

void sub_1C028C06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_181_1(a1, a2, a3, a4, a5, a6, a7, a8, v16);
  sub_1C028BCD8(v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_1C028C09C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(unsigned __int8 *)(v0 + 40);
  sub_1C0304B04();
  if (v6)
  {
    if (v6 == 1)
    {
      OUTLINED_FUNCTION_87_10();
      OUTLINED_FUNCTION_22();
      OUTLINED_FUNCTION_135_3();
      sub_1C0120AE0(v2, v1, v3, v4, v5, 1);
      sub_1C0304B10();
    }
    else
    {
      sub_1C0304B10();
      OUTLINED_FUNCTION_22();
      OUTLINED_FUNCTION_135_3();
      OUTLINED_FUNCTION_18();
      OUTLINED_FUNCTION_65();
      OUTLINED_FUNCTION_169_0();
      OUTLINED_FUNCTION_29();
    }
  }
  else
  {
    OUTLINED_FUNCTION_96_6();
    sub_1C028B658();
  }
  return sub_1C0304B40();
}

uint64_t sub_1C028C194()
{
  uint64_t v0;
  uint64_t v2;

  sub_1C015898C(v0, (uint64_t)&v2);
  return sub_1C028BBF8();
}

uint64_t sub_1C028C1C8(uint64_t a1, uint64_t a2)
{
  _BYTE v4[48];
  _BYTE v5[48];

  sub_1C015898C(a1, (uint64_t)v4);
  sub_1C015898C(a2, (uint64_t)v5);
  return sub_1C028BDBC((uint64_t)v4, (uint64_t)v5) & 1;
}

uint64_t sub_1C028C210()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0;
  if (v0[3])
  {
    v3 = *v0;
    OUTLINED_FUNCTION_44();
    OUTLINED_FUNCTION_257();
    sub_1C0303FD0();
    return v3;
  }
  else
  {
    OUTLINED_FUNCTION_44();
  }
  return v1;
}

void sub_1C028C284()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  OUTLINED_FUNCTION_74_1();
  OUTLINED_FUNCTION_259();
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_283();
  if (v1)
  {
    OUTLINED_FUNCTION_44();
    OUTLINED_FUNCTION_1_16();
    OUTLINED_FUNCTION_94_9();
  }
  else
  {
    OUTLINED_FUNCTION_17_1();
  }
}

void sub_1C028C2EC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;

  v2 = a1[2];
  v3 = a1[3];
  v5 = a2[2];
  v4 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (OUTLINED_FUNCTION_176(), OUTLINED_FUNCTION_23_1(), (v7 & 1) != 0))
  {
    if (v3)
    {
      if (v4)
      {
        if (v2 != v5 || v3 != v4)
        {
          OUTLINED_FUNCTION_165();
          OUTLINED_FUNCTION_176();
        }
      }
    }
    else if (!v4)
    {
      OUTLINED_FUNCTION_2();
    }
  }
  OUTLINED_FUNCTION_37_0();
}

void sub_1C028C37C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_100_5();
  OUTLINED_FUNCTION_17_0();
  if (v1)
  {
    OUTLINED_FUNCTION_87_10();
    OUTLINED_FUNCTION_44();
    OUTLINED_FUNCTION_1_16();
    OUTLINED_FUNCTION_33();
  }
  else
  {
    OUTLINED_FUNCTION_96_6();
  }
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_148_2();
}

void sub_1C028C3E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1C0304B04();
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_100_5();
  OUTLINED_FUNCTION_17_0();
  if (v1)
  {
    OUTLINED_FUNCTION_87_10();
    OUTLINED_FUNCTION_44();
    OUTLINED_FUNCTION_1_16();
    OUTLINED_FUNCTION_33();
  }
  else
  {
    OUTLINED_FUNCTION_96_6();
  }
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_148_2();
}

uint64_t sub_1C028C458()
{
  uint64_t v0;

  sub_1C01ABC7C();
  *(_QWORD *)(v0 + 16) = sub_1C0303DB4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2DA8);
  *(_QWORD *)(v0 + 24) = sub_1C0303DB4();
  return v0;
}

uint64_t sub_1C028C4CC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t inited;
  uint64_t result;
  uint64_t v42;
  _QWORD *v43;
  void (*v44)(_QWORD *@<X8>);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50[3];
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  char v54;
  _BYTE v55[48];
  _QWORD v56[5];
  char v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  char v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _BYTE v70[32];

  v3 = a1[3];
  v2 = a1[4];
  v48 = v2 + 56;
  v4 = a1[1];
  v47 = *a1;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v43 = (_QWORD *)(v1 + 24);
  v49 = (unint64_t)(v5 + 63) >> 6;
  v46 = a1[2];
  swift_bridgeObjectRetain();
  v44 = 0;
  v8 = 0;
  while (v7)
  {
    v9 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v10 = v9 | (v8 << 6);
LABEL_20:
    sub_1C015898C(*(_QWORD *)(v2 + 48) + 48 * v10, (uint64_t)v55);
    sub_1C02A2D6C((uint64_t)v55);
    if (qword_1ED727970 != -1)
      swift_once();
    v14 = sub_1C0303B98();
    __swift_project_value_buffer(v14, (uint64_t)&unk_1ED7295C8);
    sub_1C02A2D6C((uint64_t)v55);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C02A2D6C((uint64_t)v55);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_1C0303B80();
    v16 = sub_1C03042E8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      v50[0] = v18;
      *(_DWORD *)v17 = 136315394;
      if (v3)
      {
        *(_QWORD *)&v51 = v47;
        *((_QWORD *)&v51 + 1) = v4;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1C0303FD0();
        sub_1C0303FD0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v20 = *((_QWORD *)&v51 + 1);
        v19 = v51;
      }
      else
      {
        swift_bridgeObjectRetain();
        v19 = v47;
        v20 = v4;
      }
      *(_QWORD *)(v17 + 4) = sub_1C003E6D8(v19, v20, v50);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      sub_1C015898C((uint64_t)v55, (uint64_t)&v58);
      if (v61)
      {
        if (v61 == 1)
        {
          v51 = v58;
          *(_QWORD *)&v52 = v59;
          swift_bridgeObjectRetain();
        }
        else
        {
          v65 = v58;
          v66 = v59;
          v67 = v58;
          v68 = v59;
          v51 = v58;
          v52 = v59;
          sub_1C0098758((uint64_t)&v67);
          sub_1C0098758((uint64_t)&v68);
        }
      }
      else
      {
        v62 = v58;
        v63 = v59;
        v64 = v60;
        v69 = v58;
        sub_1C005A718((uint64_t)&v63 + 8, (uint64_t)v70, qword_1ED727DC0);
        v51 = v62;
        v52 = v63;
        v53 = v64;
        sub_1C0098758((uint64_t)&v69);
        sub_1C0098758((uint64_t)v70);
      }
      v21 = sub_1C0303EF8();
      *(_QWORD *)(v17 + 14) = sub_1C003E6D8(v21, v22, v50);
      swift_bridgeObjectRelease();
      sub_1C02A2D6C((uint64_t)v55);
      sub_1C02A2D6C((uint64_t)v55);
      _os_log_impl(&dword_1C0039000, v15, v16, "[UCG] Adding new match type for candidate[%s]: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v18, -1, -1);
      MEMORY[0x1C3B98378](v17, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_1C02A2D6C((uint64_t)v55);
      sub_1C02A2D6C((uint64_t)v55);

    }
    sub_1C015898C((uint64_t)v55, (uint64_t)v56);
    if (v57 == 2)
    {
      sub_1C02A2D6C((uint64_t)v55);
    }
    else
    {
      v23 = v56[1];
      v24 = v56[0];
      swift_bridgeObjectRetain();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1C003D798((uint64_t)v44);
      swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v51 = *v43;
      v25 = v51;
      *v43 = 0x8000000000000000;
      v45 = v24;
      v26 = v23;
      v27 = sub_1C00B3C3C(v24, v23);
      if (__OFADD__(*(_QWORD *)(v25 + 16), (v28 & 1) == 0))
        goto LABEL_49;
      v29 = v27;
      v30 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2D48);
      v31 = sub_1C03047BC();
      v32 = v51;
      if ((v31 & 1) != 0)
      {
        v33 = sub_1C00B3C3C(v45, v26);
        if ((v30 & 1) != (v34 & 1))
          goto LABEL_51;
        v29 = v33;
      }
      *v43 = v32;
      swift_bridgeObjectRelease();
      v35 = (_QWORD *)*v43;
      if ((v30 & 1) == 0)
      {
        v35[(v29 >> 6) + 8] |= 1 << v29;
        v36 = (uint64_t *)(v35[6] + 16 * v29);
        *v36 = v45;
        v36[1] = v26;
        *(_QWORD *)(v35[7] + 8 * v29) = MEMORY[0x1E0DEE9E8];
        v37 = v35[2];
        v38 = v37 + 1;
        v39 = __OFADD__(v37, 1);
        swift_bridgeObjectRetain();
        if (v39)
          goto LABEL_50;
        v35[2] = v38;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1C022EDFC((uint64_t)&v51, (uint64_t)v55);
      swift_endAccess();
      swift_bridgeObjectRelease_n();
      sub_1C0120AE0(v51, *((uint64_t *)&v51 + 1), v52, *((uint64_t *)&v52 + 1), v53, v54);
      v44 = sub_1C028CC9C;
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v11 >= v49)
    goto LABEL_46;
  v12 = *(_QWORD *)(v48 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_19;
  v8 = v11 + 1;
  if (v11 + 1 >= v49)
    goto LABEL_46;
  v12 = *(_QWORD *)(v48 + 8 * v8);
  if (v12)
    goto LABEL_19;
  v8 = v11 + 2;
  if (v11 + 2 >= v49)
    goto LABEL_46;
  v12 = *(_QWORD *)(v48 + 8 * v8);
  if (v12)
  {
LABEL_19:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_20;
  }
  v13 = v11 + 3;
  if (v13 >= v49)
  {
LABEL_46:
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2D50);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
    *(_QWORD *)(inited + 32) = v47;
    *(_QWORD *)(inited + 40) = v4;
    *(_QWORD *)(inited + 48) = v46;
    *(_QWORD *)(inited + 56) = v3;
    *(_QWORD *)(inited + 64) = v47;
    *(_QWORD *)(inited + 72) = v4;
    *(_QWORD *)(inited + 80) = v46;
    *(_QWORD *)(inited + 88) = v3;
    *(_QWORD *)(inited + 96) = v2;
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1C02A0AD4(inited, (uint64_t *)(v42 + 16));
    swift_endAccess();
    return sub_1C003D798((uint64_t)v44);
  }
  v12 = *(_QWORD *)(v48 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_19;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v49)
      goto LABEL_46;
    v12 = *(_QWORD *)(v48 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_19;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  result = sub_1C0304A68();
  __break(1u);
  return result;
}

void sub_1C028CC9C(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1C028CCAC(void *__src)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _QWORD *v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  _QWORD v47[7];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[7];
  _QWORD v51[36];
  uint64_t v52;
  _QWORD v53[33];
  _BYTE v54[24];
  _BYTE v55[24];
  char v56[8];
  uint64_t v57;
  unint64_t v58;

  memcpy(v53, __src, sizeof(v53));
  swift_beginAccess();
  v52 = *(_QWORD *)(v1 + 16);
  v2 = qword_1ED727970;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = sub_1C0303B98();
  v4 = __swift_project_value_buffer(v3, (uint64_t)&unk_1ED7295C8);
  v5 = sub_1C0303B80();
  v6 = sub_1C03042E8();
  v7 = &unk_1C0307000;
  if (os_log_type_enabled(v5, v6))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v8 = 134217984;
    swift_beginAccess();
    v51[0] = *(_QWORD *)(v52 + 16);
    sub_1C03044B0();
    _os_log_impl(&dword_1C0039000, v5, v6, "[UCG] Beginning merge and filter stage for %ld match records...", v8, 0xCu);
    MEMORY[0x1C3B98378](v8, -1, -1);
  }

  memcpy(v51, v53, 0x108uLL);
  if (((sub_1C0049AF8() & 1) != 0
     || ((v53[20] & 0x2000000000000000) != 0 ? (v9 = HIBYTE(v53[20]) & 0xFLL) : (v9 = v53[19] & 0xFFFFFFFFFFFFLL), v9))
    && (sub_1C005A718((uint64_t)&v53[21], (uint64_t)v54, &qword_1EF5C2D40),
        sub_1C005A718((uint64_t)v54, (uint64_t)v56, &qword_1EF5C2D40),
        v58)
    && ((v58 & 0x2000000000000000) != 0 ? (v10 = HIBYTE(v58) & 0xF) : (v10 = v57 & 0xFFFFFFFFFFFFLL), v10))
  {
    swift_beginAccess();
    v11 = v52;
    v12 = swift_bridgeObjectRetain();
    v13 = 0;
    v14 = sub_1C02A0B44(v12);
    swift_bridgeObjectRelease();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v48 = 0;
      v16 = *(_QWORD *)(v11 + 16);
      v17 = sub_1C0303B80();
      v18 = sub_1C03042E8();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = v16 - v15;
        v20 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v20 = 134217984;
        v51[0] = v19;
        sub_1C03044B0();
        _os_log_impl(&dword_1C0039000, v17, v18, "[UCG] We have at least one candidate that was specified with a name AND relationship. Discarding %ld other candidates", v20, 0xCu);
        MEMORY[0x1C3B98378](v20, -1, -1);
      }

      v52 = v14;
      swift_bridgeObjectRelease();
      v13 = v48;
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    v13 = 0;
  }
  memcpy(v51, v53, 0x108uLL);
  if ((sub_1C0049AF8() & 1) != 0
    || ((v53[20] & 0x2000000000000000) != 0 ? (v21 = HIBYTE(v53[20]) & 0xFLL) : (v21 = v53[19] & 0xFFFFFFFFFFFFLL),
        v21
     || (sub_1C005A718((uint64_t)&v53[21], (uint64_t)v55, &qword_1EF5C2D40),
         sub_1C005A718((uint64_t)v55, (uint64_t)v51, &qword_1EF5C2D40),
         v51[2])
     && ((v51[2] & 0x2000000000000000) != 0 ? (v46 = HIBYTE(v51[2]) & 0xFLL) : (v46 = v51[1] & 0xFFFFFFFFFFFFLL), v46)))
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1C0287068();
    v23 = v22;
    swift_bridgeObjectRelease();
    v24 = sub_1C01AACEC(v23);
    swift_bridgeObjectRetain();
    sub_1C028728C();
    v26 = v25;
    swift_bridgeObjectRelease();
    v27 = sub_1C01AB634(v26);
    if (*(_QWORD *)(v24 + 16))
    {
      swift_bridgeObjectRetain_n();
      v28 = sub_1C0303B80();
      v29 = sub_1C03042E8();
      if (os_log_type_enabled(v28, v29))
      {
        v48 = v13;
        v30 = (uint8_t *)swift_slowAlloc();
        v31 = swift_slowAlloc();
        v50[0] = v31;
        v47[6] = v4;
        *(_DWORD *)v30 = 136315138;
        v47[5] = v30 + 4;
        swift_bridgeObjectRetain();
        v32 = sub_1C030424C();
        v34 = v33;
        swift_bridgeObjectRelease();
        v49 = sub_1C003E6D8(v32, v34, v50);
        sub_1C03044B0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C0039000, v28, v29, "[UCG] We have MeCard relationship matches, will filter out partial name matches: %s", v30, 0xCu);
        swift_arrayDestroy();
        v35 = v31;
        v7 = (_QWORD *)&unk_1C0307000;
        MEMORY[0x1C3B98378](v35, -1, -1);
        MEMORY[0x1C3B98378](v30, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      swift_beginAccess();
      v36 = v52;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v37 = sub_1C0287F1C(MEMORY[0x1E0DEE9E0], v36, v24, v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v52 = v37;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  v38 = sub_1C0303B80();
  v39 = sub_1C03042E8();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v40 = v7[117];
    swift_beginAccess();
    v49 = *(_QWORD *)(v52 + 16);
    sub_1C03044B0();
    _os_log_impl(&dword_1C0039000, v38, v39, "[UCG] Consolidating %ld filtered match records into candidates...", v40, 0xCu);
    MEMORY[0x1C3B98378](v40, -1, -1);
  }

  v41 = swift_beginAccess();
  MEMORY[0x1E0C80A78](v41);
  v47[2] = v53;
  v42 = swift_bridgeObjectRetain();
  sub_1C028610C(v42, (void (*)(_QWORD *, _QWORD *))sub_1C02A2EF4, (uint64_t)v47);
  v44 = v43;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v44;
}

void sub_1C028D3A8(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  unint64_t v19;
  _OWORD v20[2];
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v6 = a2[1];
  v22 = *a2;
  v23 = v6;
  v7 = *((_QWORD *)a2 + 4);
  v24 = v7;
  v25 = v7;
  swift_bridgeObjectRetain();
  sub_1C02A2D90((uint64_t)&v22);
  swift_bridgeObjectRetain();
  sub_1C00CDCC8((uint64_t)&v25);
  v8 = sub_1C02A0044(v7, a3, (uint64_t)&v22, a4);
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = v22;
    v10 = v23;
    v20[0] = v22;
    v20[1] = v23;
    v21 = v8;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1C00B535C((uint64_t)v20, v9, *((uint64_t *)&v9 + 1), v10, *((uint64_t *)&v10 + 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    if (qword_1ED727970 != -1)
      swift_once();
    v11 = sub_1C0303B98();
    __swift_project_value_buffer(v11, (uint64_t)&unk_1ED7295C8);
    sub_1C02A2D90((uint64_t)&v22);
    sub_1C02A2D90((uint64_t)&v22);
    v12 = sub_1C0303B80();
    v13 = sub_1C03042E8();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      *(_DWORD *)v14 = 136315138;
      *(_QWORD *)&v20[0] = v15;
      v16 = v22;
      v17 = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18 = sub_1C02899F8(v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1));
      sub_1C003E6D8(v18, v19, (uint64_t *)v20);
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      sub_1C02A2DD8((uint64_t)&v22);
      sub_1C02A2DD8((uint64_t)&v22);
      _os_log_impl(&dword_1C0039000, v12, v13, "[UCG] Discarding match [%s] after relationship filtering - looks like this was a partial name match containing a relationship label", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v15, -1, -1);
      MEMORY[0x1C3B98378](v14, -1, -1);
    }
    else
    {
      sub_1C02A2DD8((uint64_t)&v22);
      sub_1C02A2DD8((uint64_t)&v22);
    }

  }
}

void sub_1C028D640(uint64_t *a1@<X0>, unint64_t *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  NSObject *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  BOOL v54;
  uint64_t v55;
  unint64_t v56;
  NSObject *v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  NSObject *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  uint64_t v67;
  uint64_t *v68;
  int *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t, uint64_t);
  char *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int *v99;
  char *v100;
  char *v101;
  char v102;
  int64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  int64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  int64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD v127[2];
  const void *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  NSObject *v132;
  _QWORD *v133;
  __int128 v134;
  char *v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  int64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  os_log_t v149;
  NSObject *v150;
  uint64_t *v151;
  unint64_t v152;
  unint64_t v153;
  int *v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  _QWORD v161[33];
  uint64_t v162;
  uint64_t v163[34];
  _QWORD v164[33];
  _BYTE v165[48];
  _BYTE v166[24];
  char v167[8];
  uint64_t v168;
  uint64_t v169;

  v133 = a3;
  v129 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
  v7 = MEMORY[0x1E0C80A78](v6);
  v159 = (char *)v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v135 = (char *)v127 - v9;
  v10 = sub_1C0301D5C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v158 = (char *)v127 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v155 = (char *)v127 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v160 = (char *)v127 - v17;
  MEMORY[0x1E0C80A78](v16);
  v157 = (char *)v127 - v18;
  v154 = (int *)type metadata accessor for ContactResolver.SignalSet(0);
  MEMORY[0x1E0C80A78](v154);
  v156 = (char *)v127 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for Contact();
  MEMORY[0x1E0C80A78](v138);
  v151 = (_QWORD *)((char *)v127 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = *a1;
  v22 = a1[1];
  v23 = a1[3];
  v130 = a1[2];
  v131 = v21;
  v24 = *a2;
  v25 = a2[1];
  v26 = a2[3];
  v152 = a2[2];
  v153 = v24;
  v27 = a2[4];
  if (qword_1ED727970 != -1)
LABEL_125:
    swift_once();
  v28 = sub_1C0303B98();
  v29 = __swift_project_value_buffer(v28, (uint64_t)&unk_1ED7295C8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v127[1] = v29;
  v30 = sub_1C0303B80();
  LODWORD(v150) = sub_1C03042E8();
  v31 = os_log_type_enabled(v30, (os_log_type_t)v150);
  v145 = v27;
  v132 = v22;
  if (v31)
  {
    v149 = v30;
    v32 = v23;
    v33 = swift_slowAlloc();
    v148 = swift_slowAlloc();
    v163[0] = v148;
    *(_DWORD *)v33 = 136315394;
    if (v32)
    {
      v164[0] = v131;
      v164[1] = v22;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1C0303FD0();
      sub_1C0303FD0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v34 = v164[0];
      v35 = v164[1];
    }
    else
    {
      swift_bridgeObjectRetain();
      v34 = v131;
      v35 = v22;
    }
    v164[0] = sub_1C003E6D8(v34, v35, v163);
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    v164[0] = v153;
    v164[1] = v25;
    v164[2] = v152;
    v164[3] = v26;
    v27 = v145;
    v164[4] = v145;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36 = sub_1C0303EF8();
    v164[0] = sub_1C003E6D8(v36, v37, v163);
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v38 = v149;
    _os_log_impl(&dword_1C0039000, v149, (os_log_type_t)v150, "[UCG] Peeking at matches for [%s]: %s", (uint8_t *)v33, 0x16u);
    v39 = v148;
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v39, -1, -1);
    MEMORY[0x1C3B98378](v33, -1, -1);

    v23 = v32;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v40 = swift_bridgeObjectRetain();
  v136 = sub_1C028A67C(v40);
  swift_bridgeObjectRelease();
  v41 = swift_bridgeObjectRetain();
  v141 = sub_1C02A02E0(v41);
  v146 = 0;
  v42 = v133;
  memcpy(v164, v133, sizeof(v164));
  sub_1C003F648(v133);
  v43 = v151;
  sub_1C006484C(v164, (uint64_t)v151);
  v26 = v132;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v43 = v131;
  v43[1] = (uint64_t)v26;
  v44 = (uint64_t *)((char *)v43 + *(int *)(v138 + 88));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v44 = v130;
  v44[1] = v23;
  v137 = v23;
  v45 = v156;
  sub_1C010E578((uint64_t)v156);
  v45[v154[57]] = 1;
  v45 += 8;
  memcpy(v164, v45, sizeof(v164));
  v128 = v45;
  memcpy(v45, v42, 0x108uLL);
  sub_1C003F648(v42);
  sub_1C0040644(v164);
  v46 = *(_QWORD *)(v27 + 56);
  v147 = v27 + 56;
  v47 = 1 << *(_BYTE *)(v27 + 32);
  v48 = -1;
  if (v47 < 64)
    v48 = ~(-1 << v47);
  v49 = v48 & v46;
  v144 = (unint64_t)(v47 + 63) >> 6;
  swift_bridgeObjectRetain();
  v50 = 0;
  v134 = xmmword_1C0305B60;
  v51 = v27;
  v22 = (uint64_t)v159;
  v140 = v11;
  while (v49)
  {
    v52 = __clz(__rbit64(v49));
    v49 &= v49 - 1;
    v53 = v52 | ((_QWORD)v50 << 6);
LABEL_22:
    v58 = *(_QWORD *)(v51 + 48) + 48 * v53;
    v26 = *(NSObject **)v58;
    v23 = *(_QWORD *)(v58 + 8);
    v27 = *(_QWORD *)(v58 + 16);
    v25 = *(_QWORD *)(v58 + 24);
    v59 = *(_QWORD *)(v58 + 32);
    v60 = *(unsigned __int8 *)(v58 + 40);
    if (v60)
    {
      if (v60 == 1)
      {
        if (!*(_QWORD *)(v151[27] + 16))
        {
          v61 = v26;
          v153 = v49;
          v26 = v50;
          v62 = v51;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8CC8);
          v63 = swift_allocObject();
          v64 = v23;
          v23 = v27;
          v65 = v63;
          *(_OWORD *)(v63 + 16) = v134;
          *(_QWORD *)(v63 + 64) = 0;
          *(_QWORD *)(v63 + 72) = 0xE000000000000000;
          *(_QWORD *)(v63 + 32) = 0;
          *(_QWORD *)(v63 + 40) = 0xE000000000000000;
          *(_QWORD *)(v63 + 48) = v61;
          *(_QWORD *)(v63 + 56) = v64;
          v11 = v140;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v51 = v62;
          v50 = v26;
          v49 = v153;
          v151[27] = v65;
          v27 = v23;
        }
        v66 = v154;
        v67 = (uint64_t)v156;
        v156[v154[35]] = 1;
        *(_BYTE *)(v67 + v66[36]) = v27 & 1;
        *(_BYTE *)(v67 + v66[37]) = (v27 & 2) != 0;
        *(_BYTE *)(v67 + 338) = 1;
      }
      else if ((v136 & 1) != 0)
      {
        v148 = v59;
        v149 = v26;
        v152 = v27;
        v153 = v49;
        v150 = v50;
        v69 = v154;
        v70 = (uint64_t)v156;
        *((_BYTE *)v151 + *(int *)(v138 + 92)) = (v156[v154[53]] & 1) == 0;
        *(_BYTE *)(v70 + v69[51]) = 1;
        *(_WORD *)(v70 + 338) = 0;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v71 = v146;
        sub_1C0287548(v141);
        v73 = v72;
        v146 = v71;
        v74 = *(_QWORD *)(v72 + 16);
        if (v74)
        {
          v139 = v23;
          swift_bridgeObjectRetain();
          v143 = v73;
          v75 = v73 + 40;
          v27 = MEMORY[0x1E0DEE9D8];
          do
          {
            v26 = *(NSObject **)(v75 - 8);
            swift_bridgeObjectRetain();
            sub_1C0301D08();
            swift_bridgeObjectRelease();
            if (__swift_getEnumTagSinglePayload(v22, 1, v10) == 1)
            {
              sub_1C0044B78(v22, &qword_1ED728070);
            }
            else
            {
              v26 = *(NSObject **)(v11 + 32);
              v76 = v155;
              ((void (*)(char *, uint64_t, uint64_t))v26)(v155, v22, v10);
              ((void (*)(char *, char *, uint64_t))v26)(v158, v76, v10);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1C004FA94();
                v27 = v78;
              }
              v77 = *(_QWORD *)(v27 + 16);
              if (v77 >= *(_QWORD *)(v27 + 24) >> 1)
              {
                sub_1C004FA94();
                v27 = v79;
              }
              *(_QWORD *)(v27 + 16) = v77 + 1;
              ((void (*)(unint64_t, char *, uint64_t))v26)(v27+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v77, v158, v10);
              v22 = (uint64_t)v159;
            }
            v75 += 16;
            --v74;
          }
          while (v74);
          swift_bridgeObjectRelease();
          v23 = v139;
        }
        else
        {
          v27 = MEMORY[0x1E0DEE9D8];
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1C028962C();
        sub_1C0120AE0((uint64_t)v149, v23, v152, v25, v148, 2);
        swift_bridgeObjectRelease();
        goto LABEL_66;
      }
    }
    else
    {
      v150 = v50;
      v153 = v49;
      if (v137)
      {
        if (!v59)
        {
          swift_bridgeObjectRetain();
          v143 = 0;
          goto LABEL_45;
        }
        v68 = v151;
        sub_1C0120A8C((uint64_t)v26, v23, v27, v25, v59, 0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v68[5] = v25;
        v68[6] = v59;
        swift_bridgeObjectRelease();
        v68[9] = 0;
        v68[10] = 0xE000000000000000;
        swift_bridgeObjectRelease();
        v68[7] = 0;
        v68[8] = 0xE000000000000000;
        swift_bridgeObjectRelease();
        v68[15] = 0;
        v68[16] = 0xE000000000000000;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v143 = v59;
LABEL_45:
      v80 = (v27 & 0x20) != 0;
      v81 = (uint64_t)v156;
      v156[333] = v80;
      v82 = v81 + v154[33];
      *(_BYTE *)(v82 + 8) = v80;
      *(_BYTE *)(v82 + 10) = v27 & 1;
      *(_BYTE *)(v82 + 12) = (v27 & 2) != 0;
      *(_BYTE *)(v82 + 11) = (v27 & 4) != 0;
      *(_BYTE *)(v82 + 13) = (v27 & 8) != 0;
      *(_BYTE *)(v82 + 15) = (v27 & 0x10) != 0;
      v152 = v27;
      v149 = v26;
      *(_QWORD *)(v82 + 24) = v26;
      *(_QWORD *)(v82 + 32) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v27 = *(_QWORD *)(v82 + 48);
      v142 = v25;
      *(_QWORD *)(v82 + 40) = v25;
      *(_QWORD *)(v82 + 48) = v59;
      v148 = v59;
      swift_bridgeObjectRetain();
      v83 = v152;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v81 + 338) = 1;
      if ((v83 & 0x40) != 0)
      {
        v156[336] = 1;
        *(_BYTE *)(v82 + 10) = 0;
      }
      v84 = v145;
      v11 = v140;
      v85 = v141;
      v25 = (uint64_t)v135;
      if ((v83 & 0x80) != 0)
        v156[335] = 1;
      if (!*(_QWORD *)(v85 + 16))
      {
        v97 = v83;
        v98 = v84;
        sub_1C0120AE0((uint64_t)v149, v23, v97, v142, v148, 0);
        v51 = v98;
        goto LABEL_67;
      }
      v86 = v154;
      v87 = (uint64_t)v156;
      *((_BYTE *)v151 + *(int *)(v138 + 92)) = (v156[v154[53]] & 1) == 0;
      *(_BYTE *)(v87 + v86[51]) = 1;
      *(_WORD *)(v87 + 338) = 0;
      v88 = v146;
      sub_1C0287548(v85);
      v146 = v88;
      v143 = v89;
      v90 = *(_QWORD *)(v89 + 16);
      if (v90)
      {
        v139 = v23;
        v91 = swift_bridgeObjectRetain() + 40;
        v27 = MEMORY[0x1E0DEE9D8];
        do
        {
          swift_bridgeObjectRetain();
          sub_1C0301D08();
          swift_bridgeObjectRelease();
          if (__swift_getEnumTagSinglePayload(v25, 1, v10) == 1)
          {
            sub_1C0044B78(v25, &qword_1ED728070);
          }
          else
          {
            v92 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 32);
            v93 = v157;
            v92(v157, v25, v10);
            v92(v160, (uint64_t)v93, v10);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C004FA94();
              v27 = v95;
            }
            v94 = *(_QWORD *)(v27 + 16);
            if (v94 >= *(_QWORD *)(v27 + 24) >> 1)
            {
              sub_1C004FA94();
              v27 = v96;
            }
            *(_QWORD *)(v27 + 16) = v94 + 1;
            v92((char *)(v27+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v94), (uint64_t)v160, v10);
            v22 = (uint64_t)v159;
          }
          v91 += 16;
          --v90;
        }
        while (v90);
        swift_bridgeObjectRelease();
        v23 = v139;
      }
      else
      {
        v27 = MEMORY[0x1E0DEE9D8];
      }
      swift_bridgeObjectRelease();
      v99 = v154;
      v26 = v156;
      sub_1C028962C();
      sub_1C0120AE0((uint64_t)v149, v23, v152, v142, v148, 0);
      *((_BYTE *)&v26->isa + v99[54]) = 1;
LABEL_66:
      v51 = v145;
LABEL_67:
      v50 = v150;
      v49 = v153;
    }
  }
  v54 = __OFADD__(v50, 1);
  v50 = ((char *)v50 + 1);
  if (v54)
  {
    __break(1u);
LABEL_120:
    v120 = (unint64_t)v132;
    swift_bridgeObjectRetain();
    v119 = v120;
    v118 = v131;
    goto LABEL_121;
  }
  v55 = v51;
  if ((uint64_t)v50 < v144)
  {
    v56 = *(_QWORD *)(v147 + 8 * (_QWORD)v50);
    if (!v56)
    {
      v57 = ((char *)&v50->isa + 1);
      if ((uint64_t)&v50->isa + 1 >= v144)
        goto LABEL_75;
      v56 = *(_QWORD *)(v147 + 8 * (_QWORD)v57);
      if (v56)
        goto LABEL_20;
      v57 = ((char *)&v50->isa + 2);
      if ((uint64_t)&v50->isa + 2 >= v144)
        goto LABEL_75;
      v56 = *(_QWORD *)(v147 + 8 * (_QWORD)v57);
      if (v56)
      {
LABEL_20:
        v50 = v57;
      }
      else
      {
        v100 = (char *)&v50->isa + 3;
        if ((uint64_t)&v50->isa + 3 >= v144)
          goto LABEL_75;
        v56 = *(_QWORD *)(v147 + 8 * (_QWORD)v100);
        if (!v56)
        {
          while (1)
          {
            v50 = (v100 + 1);
            if (__OFADD__(v100, 1))
              break;
            if ((uint64_t)v50 >= v144)
              goto LABEL_75;
            v56 = *(_QWORD *)(v147 + 8 * (_QWORD)v50);
            ++v100;
            if (v56)
              goto LABEL_21;
          }
LABEL_124:
          __break(1u);
          goto LABEL_125;
        }
        v50 = ((char *)v50 + 3);
      }
    }
LABEL_21:
    v49 = (v56 - 1) & v56;
    v53 = __clz(__rbit64(v56)) + ((_QWORD)v50 << 6);
    goto LABEL_22;
  }
LABEL_75:
  swift_release();
  swift_release();
  v101 = &v156[v154[33]];
  v27 = (uint64_t)v133;
  if ((v101[13] & 1) == 0 || (v101[9] & 1) != 0 || (v101[10] & 1) != 0 || (v101[11] & 1) != 0 || (v101[12] & 1) != 0)
    v102 = 0;
  else
    v102 = v101[15] ^ 1;
  v103 = 0;
  v101[14] = v102 & 1;
  v104 = 1 << *(_BYTE *)(v55 + 32);
  v105 = -1;
  if (v104 < 64)
    v105 = ~(-1 << v104);
  v106 = v105 & *(_QWORD *)(v55 + 56);
  v107 = (unint64_t)(v104 + 63) >> 6;
  while (1)
  {
    if (v106)
    {
      v108 = __clz(__rbit64(v106));
      v106 &= v106 - 1;
      v109 = v108 | (v103 << 6);
      goto LABEL_101;
    }
    v54 = __OFADD__(v103++, 1);
    if (v54)
    {
      __break(1u);
      goto LABEL_124;
    }
    if (v103 >= v107)
      break;
    v110 = *(_QWORD *)(v147 + 8 * v103);
    if (!v110)
    {
      v111 = v103 + 1;
      if (v103 + 1 >= v107)
        break;
      v110 = *(_QWORD *)(v147 + 8 * v111);
      if (!v110)
      {
        v111 = v103 + 2;
        if (v103 + 2 >= v107)
          break;
        v110 = *(_QWORD *)(v147 + 8 * v111);
        if (!v110)
        {
          v111 = v103 + 3;
          if (v103 + 3 >= v107)
            break;
          v110 = *(_QWORD *)(v147 + 8 * v111);
          if (!v110)
          {
            v111 = v103 + 4;
            if (v103 + 4 >= v107)
              break;
            v110 = *(_QWORD *)(v147 + 8 * v111);
            if (!v110)
            {
              v111 = v103 + 5;
              if (v103 + 5 >= v107)
                break;
              v110 = *(_QWORD *)(v147 + 8 * v111);
              if (!v110)
              {
                while (1)
                {
                  v103 = v111 + 1;
                  if (__OFADD__(v111, 1))
                    break;
                  if (v103 >= v107)
                    goto LABEL_107;
                  v110 = *(_QWORD *)(v147 + 8 * v103);
                  ++v111;
                  if (v110)
                    goto LABEL_100;
                }
                __break(1u);
                return;
              }
            }
          }
        }
      }
      v103 = v111;
    }
LABEL_100:
    v112 = __clz(__rbit64(v110));
    v106 = (v110 - 1) & v110;
    v109 = v112 + (v103 << 6);
LABEL_101:
    if (*(_BYTE *)(*(_QWORD *)(v55 + 48) + 48 * v109 + 40) == 1)
      goto LABEL_122;
  }
LABEL_107:
  memcpy(v163, (const void *)v27, 0x108uLL);
  if ((sub_1C0049AF8() & 1) != 0)
    goto LABEL_122;
  v113 = *(_QWORD *)(v27 + 160);
  if ((v113 & 0x2000000000000000) != 0)
  {
    if ((v113 & 0xF00000000000000) != 0)
      goto LABEL_122;
  }
  else if ((*(_QWORD *)(v27 + 152) & 0xFFFFFFFFFFFFLL) != 0)
  {
    goto LABEL_122;
  }
  sub_1C005A718(v27 + 168, (uint64_t)v166, &qword_1EF5C2D40);
  sub_1C005A718((uint64_t)v166, (uint64_t)v167, &qword_1EF5C2D40);
  v114 = v169;
  if (v169)
  {
    v115 = v168;
    memcpy(v163, v128, 0x108uLL);
    v116 = (uint64_t)v156;
    *((_QWORD *)v156 + 1) = 0;
    *(_QWORD *)(v116 + 16) = 0xE000000000000000;
    *(_BYTE *)(v116 + 24) = 0;
    *(_QWORD *)(v116 + 48) = 0;
    *(_QWORD *)(v116 + 56) = 0xE000000000000000;
    *(_QWORD *)(v116 + 64) = 0;
    *(_QWORD *)(v116 + 72) = 0xE000000000000000;
    *(_QWORD *)(v116 + 80) = 0;
    *(_QWORD *)(v116 + 88) = 0xE000000000000000;
    *(_QWORD *)(v116 + 96) = 0;
    *(_QWORD *)(v116 + 104) = 0xE000000000000000;
    *(_QWORD *)(v116 + 112) = 0;
    *(_QWORD *)(v116 + 120) = 0xE000000000000000;
    *(_QWORD *)(v116 + 128) = 0;
    *(_QWORD *)(v116 + 136) = 0xE000000000000000;
    *(_QWORD *)(v116 + 144) = 0;
    *(_QWORD *)(v116 + 152) = 0xE000000000000000;
    *(_QWORD *)(v116 + 160) = 0;
    *(_QWORD *)(v116 + 168) = 0xE000000000000000;
    *(_QWORD *)(v116 + 176) = 0;
    *(_QWORD *)(v116 + 184) = 0;
    *(_QWORD *)(v116 + 192) = 0;
    *(_QWORD *)(v116 + 248) = MEMORY[0x1E0DEE9D8];
    *(_BYTE *)(v116 + 256) = 1;
    *(_QWORD *)(v116 + 264) = 0;
    swift_bridgeObjectRetain();
    sub_1C0040644(v163);
    *(_QWORD *)(v116 + 32) = v115;
    *(_QWORD *)(v116 + 40) = v114;
    *(_BYTE *)(v116 + 336) = 0;
    sub_1C005A718(v27 + 192, (uint64_t)v165, &qword_1ED726478);
    sub_1C005A718((uint64_t)v165, v116 + 200, &qword_1ED726478);
    swift_bridgeObjectRetain_n();
    v117 = v137;
    swift_bridgeObjectRetain_n();
    sub_1C02A2CA4((uint64_t)v165);
    v49 = sub_1C0303B80();
    LOBYTE(v22) = sub_1C03042E8();
    if (!os_log_type_enabled((os_log_t)v49, (os_log_type_t)v22))
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_122;
    }
    v27 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v162 = v23;
    *(_DWORD *)v27 = 136315394;
    if (!v117)
      goto LABEL_120;
    v161[0] = v131;
    v161[1] = v132;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1C0303FD0();
    sub_1C0303FD0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v118 = v161[0];
    v119 = v161[1];
LABEL_121:
    v161[0] = sub_1C003E6D8(v118, v119, &v162);
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    swift_beginAccess();
    memcpy(v161, v128, sizeof(v161));
    v121 = ContactQuery.description.getter();
    v161[0] = sub_1C003E6D8(v121, v122, &v162);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, (os_log_t)v49, (os_log_type_t)v22, "[UCG] Note: we've re-written the originalQuery of the signals for %s to be a name query instead of a relationship one: %s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v23, -1, -1);
    MEMORY[0x1C3B98378](v27, -1, -1);

  }
LABEL_122:
  v123 = (uint64_t)v151;
  v124 = v129;
  sub_1C00638E8((uint64_t)v151, v129, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
  v125 = (uint64_t)v156;
  swift_beginAccess();
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  sub_1C00638E8(v125, v124 + *(int *)(v126 + 36), type metadata accessor for ContactResolver.SignalSet);
  sub_1C003DD84(v125, type metadata accessor for ContactResolver.SignalSet);
  sub_1C003DD84(v123, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
}

uint64_t sub_1C028E944(char a1)
{
  if (!a1)
    return 0x737961776C61;
  if (a1 == 1)
    return 0x6E49646E61436F6ELL;
  return 1701736302;
}

void sub_1C028E998(unsigned __int8 *a1, char *a2)
{
  sub_1C025DD1C(*a1, *a2);
}

void sub_1C028E9A4()
{
  sub_1C00CECDC();
}

uint64_t sub_1C028E9AC()
{
  return sub_1C00C1E84();
}

void sub_1C028E9B4()
{
  sub_1C02EAFE0();
}

void sub_1C028E9BC(_BYTE *a1@<X8>)
{
  char v2;

  sub_1C0289EFC();
  *a1 = v2;
}

void sub_1C028E9E8(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;

  *a1 = sub_1C028E944(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_9();
}

void static ContactRecall.search(config:locale:stringQuery:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD);
  uint64_t inited;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD v56[33];
  __int128 v57;
  __int128 v58;
  _UNKNOWN **v59;
  _BYTE v60[32];
  uint64_t v61;
  _BYTE v62[24];
  __int128 v63;
  _BYTE v64[40];
  _QWORD v65[5];
  _BYTE v66[80];

  OUTLINED_FUNCTION_40_0();
  v49 = v1;
  v50 = v2;
  v45 = v3;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2858);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_53();
  v47 = v7;
  OUTLINED_FUNCTION_8_4();
  v8 = sub_1C0301DB0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = OUTLINED_FUNCTION_138_3();
  type metadata accessor for UCGStringTokenizer(v10);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_27();
  v46 = v12;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)&v44 - v14);
  OUTLINED_FUNCTION_203_0();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_6_0();
  v19 = v18 - v17;
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C972A0]), sel_init);
  objc_msgSend(v20, sel_setUseOutOfProcessMapperExclusively_, 1);
  v21 = objc_allocWithZone(MEMORY[0x1E0C97298]);
  v48 = v20;
  v22 = objc_msgSend(v21, sel_initWithConfiguration_, v20);
  v65[3] = sub_1C00447B0(0, &qword_1ED726F38);
  v65[4] = &off_1E798FBE0;
  v65[0] = v22;
  v54 = v65;
  v23 = (void *)sub_1C028EE44(0x64726143654DLL, 0xE600000000000000, (void (*)(uint64_t *__return_ptr))sub_1C028F3C4);
  v24 = sub_1C028F0C0();
  v44 = objc_msgSend((id)objc_opt_self(), sel_indexMatcher);
  v51 = v5;
  sub_1C00638E8(v5, v19, type metadata accessor for ContactResolverConfig);
  (*(void (**)(char *, id, uint64_t))(v9 + 16))(v0, v45, v8);
  StringTokenizer.init(locale:)(v0, v15);
  sub_1C0049024((uint64_t)v65, (uint64_t)v64);
  memset(v62, 0, sizeof(v62));
  v63 = xmmword_1C0306800;
  v61 = 0;
  memset(v60, 0, sizeof(v60));
  if (v24)
  {
    v25 = type metadata accessor for RelationshipLocalizer();
    v59 = &off_1E79A63C8;
    *((_QWORD *)&v58 + 1) = v25;
    *(_QWORD *)&v57 = v24;
  }
  else
  {
    v59 = 0;
    v57 = 0uLL;
    v58 = 0uLL;
  }
  type metadata accessor for AsrPhoneticSequenceFetcher();
  memset(v66, 0, 57);
  v26 = v47;
  OUTLINED_FUNCTION_232();
  __swift_storeEnumTagSinglePayload(v27, v28, v29, v30);
  type metadata accessor for UnifiedContactGenerator(0);
  v31 = OUTLINED_FUNCTION_38_6();
  v32 = v46;
  sub_1C00638E8((uint64_t)v15, v46, type metadata accessor for UCGStringTokenizer);
  v45 = v23;
  swift_retain();
  v43 = v26;
  v33 = MEMORY[0x1E0DEE9D8];
  sub_1C02A2250((uint64_t)v44, MEMORY[0x1E0DEE9D8], v19, 0, v32, (uint64_t)v66, (uint64_t)v64, v23, (uint64_t)v62, (uint64_t)v60, (uint64_t)&v57, 0, 0, 0, 2, 0, v43, v31);
  v34 = OUTLINED_FUNCTION_250();
  sub_1C003DD84(v34, v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726FA8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
  v56[0] = 0;
  v56[1] = 0xE000000000000000;
  LOBYTE(v56[2]) = 0;
  v56[3] = v49;
  v56[4] = v50;
  v56[5] = 0;
  v56[6] = 0xE000000000000000;
  v56[7] = 0;
  v56[8] = 0xE000000000000000;
  v56[9] = 0;
  v56[10] = 0xE000000000000000;
  v56[11] = 0;
  v56[12] = 0xE000000000000000;
  v56[13] = 0;
  v56[14] = 0xE000000000000000;
  v56[15] = 0;
  v56[16] = 0xE000000000000000;
  v56[17] = 0;
  v56[18] = 0xE000000000000000;
  v56[19] = 0;
  v56[20] = 0xE000000000000000;
  memset(&v56[21], 0, 72);
  v56[30] = v33;
  LOBYTE(v56[31]) = 1;
  v56[32] = 0;
  memcpy((void *)(inited + 32), v56, 0x108uLL);
  OUTLINED_FUNCTION_74_1();
  sub_1C003F648(v56);
  sub_1C004DDF8(v51, inited, v37, v38, v39, v40, v41, v42, (uint64_t)v44, (uint64_t)v45, v46, v47, (uint64_t)v48, v49, v50, v51, v52, v53, (uint64_t)v54,
    v55);
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_1_0();

  OUTLINED_FUNCTION_45_19();
  sub_1C004EFA0();
  sub_1C0040644(v56);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v65);
  OUTLINED_FUNCTION_28_0();
}

uint64_t type metadata accessor for UCGStringTokenizer(uint64_t a1)
{
  return sub_1C003CD30(a1, qword_1EF5C2C98);
}

uint64_t sub_1C028EE44(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v4;

  a3(&v4);
  return v4;
}

uint64_t sub_1C028F0C0()
{
  uint64_t v1;

  sub_1C028F3DC(&v1);
  return v1;
}

uint64_t sub_1C028F338@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  if (qword_1ED727E80 != -1)
    swift_once();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(qword_1ED7295E0, v4, v5);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1C028F3C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1C028F338(*(_QWORD **)(v1 + 16), a1);
}

uint64_t sub_1C028F3DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7283F0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (_QWORD *)((char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1C0301B70();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v17 - v11;
  if (qword_1ED7261D0 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED7294D0);
  sub_1C0045DFC(v13, (uint64_t)v5, &qword_1ED7283F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17[0] = *v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7281B0);
    return swift_willThrowTypedImpl();
  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v7 + 32))(v12, v5, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726EB8);
    swift_allocObject();
    sub_1C006CA94((uint64_t)v10);
    if (v1)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      sub_1C004D988();
      result = swift_release();
      if (v17[1])
      {
        type metadata accessor for RelationshipLocalizer();
        v15 = swift_allocObject();
        swift_allocObject();
        v16 = swift_retain();
        *(_QWORD *)(v15 + 16) = sub_1C028A5F8(v16);
        result = swift_release();
      }
      else
      {
        v15 = 0;
      }
      *a1 = v15;
    }
  }
  return result;
}

void sub_1C028F630()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator____lazy_storage___semanticRelationshipMapping;
  if (!*(_QWORD *)(v0
                  + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator____lazy_storage___semanticRelationshipMapping))
  {
    *(_QWORD *)(v0 + v1) = sub_1C028F688(v0);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_29();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C028F688(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  unint64_t v6;
  uint64_t v7;

  v1 = *(void **)(a1 + 104);
  if (v1)
  {
    v3 = (id)*MEMORY[0x1E0C96840];
    v4 = v1;
    v5 = objc_msgSend(v4, sel_contactRelations);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726F40);
    v6 = sub_1C0304138();

    swift_retain();
    v7 = sub_1C0288170(MEMORY[0x1E0DEE9E0], v6, a1);
    swift_bridgeObjectRelease();

    return v7;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
    return sub_1C0303DB4();
  }
}

id sub_1C028F790(uint64_t *a1, id *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id result;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F70);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a2;
  result = objc_msgSend(*a2, sel_label);
  if (result)
  {
    v12 = result;
    v74 = v3;
    v13 = sub_1C0303EB0();
    v15 = v14;

    v16 = objc_msgSend(v10, sel_value);
    v17 = objc_msgSend(v16, sel_name);

    v18 = sub_1C0303EB0();
    v20 = v19;

    swift_bridgeObjectRelease();
    v21 = HIBYTE(v20) & 0xF;
    if ((v20 & 0x2000000000000000) == 0)
      v21 = v18 & 0xFFFFFFFFFFFFLL;
    if (!v21)
      return (id)swift_bridgeObjectRelease();
    v72 = v13;
    v73 = v15;
    v22 = a3 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_config;
    v23 = v22 + *(int *)(type metadata accessor for ContactResolverConfig(0) + 32);
    v24 = sub_1C0301DB0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v9, v23, v24);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v24);
    sub_1C004F408();
    v25 = sub_1C03044E0();
    v70 = v26;
    v71 = v25;
    sub_1C0044B78((uint64_t)v9, &qword_1ED725F70);
    swift_bridgeObjectRetain();
    v27 = objc_msgSend(v10, sel_value);
    v28 = objc_msgSend(v27, sel_name);

    v29 = sub_1C0303EB0();
    v68 = v30;
    v69 = v29;

    swift_isUniquelyReferenced_nonNull_native();
    v72 = *a1;
    v31 = v72;
    *a1 = 0x8000000000000000;
    v32 = sub_1C00B3C3C(v13, v15);
    if (__OFADD__(*(_QWORD *)(v31 + 16), (v33 & 1) == 0))
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v34 = v32;
    v35 = v33;
    v67[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8CA8);
    if ((sub_1C03047BC() & 1) != 0)
    {
      v36 = sub_1C00B3C3C(v13, v15);
      if ((v35 & 1) != (v37 & 1))
      {
LABEL_29:
        result = (id)sub_1C0304A68();
        __break(1u);
        return result;
      }
      v34 = v36;
    }
    *a1 = v72;
    swift_bridgeObjectRelease();
    v38 = *a1;
    swift_bridgeObjectRetain();
    if ((v35 & 1) == 0)
    {
      sub_1C00B6E64(v34, v13, v15, MEMORY[0x1E0DEE9D8], v38);
      swift_bridgeObjectRetain();
    }
    v39 = *(_QWORD *)(v38 + 56);
    swift_bridgeObjectRelease();
    v40 = (uint64_t *)(v39 + 8 * v34);
    sub_1C00ABB7C();
    v41 = *(_QWORD *)(*v40 + 16);
    sub_1C00ABD74();
    v42 = *v40;
    *(_QWORD *)(v42 + 16) = v41 + 1;
    v43 = v42 + 16 * v41;
    v44 = v68;
    *(_QWORD *)(v43 + 32) = v69;
    *(_QWORD *)(v43 + 40) = v44;
    swift_bridgeObjectRelease();
    v46 = v70;
    v45 = v71;
    if (v13 != v71 || v15 != v70)
    {
      v48 = sub_1C0304A08();
      swift_bridgeObjectRelease();
      if ((v48 & 1) != 0)
        return (id)swift_bridgeObjectRelease();
      v49 = objc_msgSend(v10, sel_value);
      v50 = objc_msgSend(v49, sel_name);

      v51 = sub_1C0303EB0();
      v53 = v52;

      swift_isUniquelyReferenced_nonNull_native();
      v72 = *a1;
      v54 = v72;
      *a1 = 0x8000000000000000;
      v55 = sub_1C00B3C3C(v45, v46);
      v57 = v56;
      if (!__OFADD__(*(_QWORD *)(v54 + 16), (v56 & 1) == 0))
      {
        v58 = v55;
        if ((sub_1C03047BC() & 1) == 0)
        {
LABEL_20:
          *a1 = v72;
          swift_bridgeObjectRelease();
          v61 = *a1;
          swift_bridgeObjectRetain();
          if ((v57 & 1) == 0)
          {
            sub_1C00B6E64(v58, v71, v46, MEMORY[0x1E0DEE9D8], v61);
            swift_bridgeObjectRetain();
          }
          v62 = *(_QWORD *)(v61 + 56);
          swift_bridgeObjectRelease();
          v63 = (uint64_t *)(v62 + 8 * v58);
          sub_1C00ABB7C();
          v64 = *(_QWORD *)(*v63 + 16);
          sub_1C00ABD74();
          v65 = *v63;
          *(_QWORD *)(v65 + 16) = v64 + 1;
          v66 = v65 + 16 * v64;
          *(_QWORD *)(v66 + 32) = v51;
          *(_QWORD *)(v66 + 40) = v53;
          return (id)swift_bridgeObjectRelease();
        }
        v59 = sub_1C00B3C3C(v71, v46);
        if ((v57 & 1) == (v60 & 1))
        {
          v58 = v59;
          goto LABEL_20;
        }
        goto LABEL_29;
      }
      goto LABEL_28;
    }
    return (id)swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1C028FC6C(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  Class isa;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  _BOOL4 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t result;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  uint8_t *v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  char v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  NSObject *v147;
  os_log_type_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  id v166;
  id v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  _QWORD *v192;
  char v193;
  uint64_t v194;
  NSObject *v195;
  os_log_type_t v196;
  uint8_t *v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t *v208;
  _QWORD *v209;
  uint64_t v210;
  uint64_t v211;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v213;
  _QWORD *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  os_log_type_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t **v229;
  __int128 v230;
  unint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  NSObject *v239;
  os_log_type_t v240;
  uint64_t v241;
  unint64_t v242;
  unint64_t v243;
  char *v244;
  uint64_t v245;
  unint64_t v246;
  unint64_t v247;
  char *v248;
  uint64_t v249;
  unint64_t v250;
  NSObject *v251;
  uint64_t v252;
  char v253;
  char v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char v258;
  NSObject *v259;
  os_log_type_t v260;
  uint8_t *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  NSObject *v266;
  os_log_type_t v267;
  uint8_t *v268;
  uint64_t v269;
  uint64_t v270;
  __int128 v271;
  uint64_t v272;
  NSObject *v273;
  os_log_type_t v274;
  _DWORD *v275;
  char *v276;
  uint64_t v277;
  unint64_t v278;
  unint64_t v279;
  uint64_t v280;
  uint8_t *v281;
  uint64_t v282;
  NSObject *v283;
  os_log_type_t v284;
  uint8_t *v285;
  uint64_t v286;
  char v287;
  uint64_t v288;
  uint64_t v289;
  NSObject *v290;
  os_log_type_t v291;
  uint8_t *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  __int128 v296;
  uint64_t v297;
  NSObject *v298;
  os_log_type_t v299;
  uint64_t v300;
  char *v301;
  uint64_t v302;
  unint64_t v303;
  unint64_t v304;
  char *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  _QWORD *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t *v313;
  uint64_t v314;
  uint64_t v315;
  unint64_t v316;
  _QWORD *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  NSObject *v321;
  os_log_type_t v322;
  uint8_t *v323;
  uint64_t v324;
  char *v325;
  NSObject *v326;
  os_log_type_t v327;
  uint8_t *v328;
  uint64_t v329;
  uint64_t v330;
  __int128 v331;
  uint64_t v332;
  NSObject *v333;
  os_log_type_t v334;
  _DWORD *v335;
  char *v336;
  uint64_t v337;
  unint64_t v338;
  unint64_t v339;
  uint64_t v340;
  uint8_t *v341;
  uint64_t v342;
  os_log_type_t v343;
  uint8_t *v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  unint64_t v348;
  unint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  char *v354;
  char *v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  char *v359;
  uint64_t *v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;
  char *v367;
  uint64_t v368;
  uint64_t v369;
  __int128 v370;
  uint64_t v371;
  char *v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  char *v376;
  char *v377;
  uint64_t v378;
  uint64_t *v379;
  uint64_t **v380;
  unint64_t v381;
  uint64_t v382;
  uint64_t v383;
  unint64_t v384;
  uint64_t v385;
  unint64_t *v386;
  NSObject *v387;
  Class v388;
  _QWORD v389[3];
  uint64_t v390;
  unint64_t v391;
  _QWORD *v392;
  uint64_t v393;
  uint64_t v394[33];
  uint64_t v395[33];
  _QWORD v396[34];
  uint64_t v397;

  v368 = a4;
  v369 = a3;
  v363 = a1;
  v378 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726F18);
  MEMORY[0x1E0C80A78](v378);
  v376 = (char *)&v354 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726F20);
  v7 = MEMORY[0x1E0C80A78](v6);
  v386 = (unint64_t *)((char *)&v354 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t **)((char *)&v354 - v9);
  v11 = sub_1C0301A5C();
  v373 = *(_QWORD *)(v11 - 8);
  v374 = v11;
  MEMORY[0x1E0C80A78](v11);
  v372 = (char *)&v354 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v356 = type metadata accessor for Signpost();
  MEMORY[0x1E0C80A78](v356);
  v358 = (uint64_t)&v354 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  isa = v14[-1].isa;
  v387 = v14;
  v388 = isa;
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v354 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v354 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v381 = (unint64_t)&v354 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  *(_QWORD *)&v370 = (char *)&v354 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v367 = (char *)&v354 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v355 = (char *)&v354 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v354 = (char *)&v354 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v357 = (uint64_t)&v354 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v384 = (unint64_t)&v354 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  *(_QWORD *)&v366 = (char *)&v354 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  *(_QWORD *)&v364 = (char *)&v354 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v385 = (uint64_t)&v354 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v360 = (uint64_t *)((char *)&v354 - v43);
  v44 = MEMORY[0x1E0C80A78](v42);
  v379 = (uint64_t *)((char *)&v354 - v45);
  v46 = MEMORY[0x1E0C80A78](v44);
  v371 = (uint64_t)&v354 - v47;
  v48 = MEMORY[0x1E0C80A78](v46);
  v50 = (char *)&v354 - v49;
  v51 = MEMORY[0x1E0C80A78](v48);
  v375 = (uint64_t)&v354 - v52;
  MEMORY[0x1E0C80A78](v51);
  *(_QWORD *)&v365 = (char *)&v354 - v53;
  v362 = type metadata accessor for ContactResolverConfig(0);
  MEMORY[0x1E0C80A78](v362);
  v361 = (uint64_t)&v354 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v396, a2, 0x108uLL);
  if (qword_1ED727970 != -1)
    swift_once();
  v55 = sub_1C0303B98();
  v56 = __swift_project_value_buffer(v55, (uint64_t)&unk_1ED7295C8);
  sub_1C003F648(v396);
  sub_1C003F648(v396);
  v382 = v56;
  v57 = sub_1C0303B80();
  v58 = sub_1C03042E8();
  v59 = os_log_type_enabled(v57, v58);
  v380 = v10;
  v359 = v18;
  v377 = v21;
  if (v59)
  {
    v60 = swift_slowAlloc();
    v61 = swift_slowAlloc();
    v394[0] = v61;
    *(_DWORD *)v60 = 134218242;
    v395[0] = v363;
    sub_1C03044B0();
    *(_WORD *)(v60 + 12) = 2080;
    memcpy(v395, v396, sizeof(v395));
    v62 = ContactQuery.description.getter();
    v395[0] = sub_1C003E6D8(v62, v63, v394);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    sub_1C0040644(v396);
    sub_1C0040644(v396);
    _os_log_impl(&dword_1C0039000, v57, v58, "[UCG] Beginning search for query [%ld]: %s", (uint8_t *)v60, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v61, -1, -1);
    MEMORY[0x1C3B98378](v60, -1, -1);
  }
  else
  {
    sub_1C0040644(v396);
    sub_1C0040644(v396);
  }

  memcpy(v395, v396, sizeof(v395));
  sub_1C0292A3C();
  v65 = v64;
  v390 = MEMORY[0x1E0DEE9D8];
  v66 = *(_QWORD *)(v64 + 16);
  v67 = (unint64_t)v387;
  v68 = v365;
  if (v66)
  {
    swift_bridgeObjectRetain();
    memcpy(v395, (const void *)(v65 + 32), sizeof(v395));
    memcpy(v394, v395, sizeof(v394));
    sub_1C003F648(v395);
    v69 = v383;
    sub_1C0292E78(v394, v369, v368, v389);
    if (v69)
    {
LABEL_11:
      v383 = v69;
      sub_1C0040644(v395);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v70 = 296;
    while (1)
    {
      v383 = v69;
      sub_1C0040644(v395);
      sub_1C0288CD4();
      if (!--v66)
        break;
      memcpy(v395, (const void *)(v65 + v70), sizeof(v395));
      memcpy(v394, v395, sizeof(v394));
      sub_1C003F648(v395);
      v69 = v383;
      sub_1C0292E78(v394, v369, v368, v389);
      v70 += 264;
      if (v69)
        goto LABEL_11;
    }
    swift_bridgeObjectRelease_n();
    v67 = (unint64_t)v387;
    v68 = v365;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  memcpy(v395, v396, sizeof(v395));
  swift_bridgeObjectRetain();
  sub_1C029BE18();
  v73 = v72;
  swift_bridgeObjectRelease_n();
  v397 = v73;
  swift_bridgeObjectRetain();
  v74 = sub_1C028A0FC((void (*)(uint64_t *__return_ptr, unint64_t))sub_1C02959F4, 0, (void (*)(char *, char *))sub_1C0295A00, 0, v73);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v397 = v74;
  memcpy(v395, v396, sizeof(v395));
  LOBYTE(v73) = sub_1C0049AF8();
  v75 = v361;
  sub_1C00638E8(v369, v361, type metadata accessor for ContactResolverConfig);
  v76 = MEMORY[0x1E0DEE9D8];
  if ((v73 & 1) == 0)
  {
    sub_1C003DD84(v75, type metadata accessor for ContactResolverConfig);
    v78 = v397;
    goto LABEL_33;
  }
  v77 = sub_1C0212B30();
  sub_1C003DD84(v75, type metadata accessor for ContactResolverConfig);
  v78 = v397;
  if ((v77 & 1) == 0)
    goto LABEL_33;
  v395[0] = v76;
  v79 = *(_QWORD *)(v397 + 16);
  swift_bridgeObjectRetain();
  v363 = v79;
  if (!v79)
  {
    v85 = v76;
LABEL_32:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v397 = v85;
    v78 = v85;
LABEL_33:
    v86 = *(_QWORD *)(v78 + 16);
    if (v86)
    {
      v87 = v78 + ((*((unsigned __int8 *)v388 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v388 + 80));
      v88 = *((_QWORD *)v388 + 9);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1C0045DFC(v87, (uint64_t)v50, &qword_1ED726DB0);
        v89 = &v50[*(int *)(v67 + 36)];
        LOBYTE(v89) = v89[*(int *)(type metadata accessor for ContactResolver.SignalSet(0) + 140)];
        sub_1C0044B78((uint64_t)v50, &qword_1ED726DB0);
        if ((v89 & 1) != 0)
          break;
        v87 += v88;
        --v86;
        v67 = (unint64_t)v387;
        if (!v86)
        {
          swift_bridgeObjectRelease();
          v78 = v397;
          v90 = *(_QWORD *)(v397 + 16);
          v76 = MEMORY[0x1E0DEE9D8];
          goto LABEL_39;
        }
      }
      swift_bridgeObjectRelease();
      v67 = (unint64_t)v387;
    }
    else
    {
      v90 = 0;
LABEL_39:
      v395[0] = v76;
      v91 = swift_bridgeObjectRetain();
      if (v90)
      {
        v92 = v90;
        v66 = 0;
        v93 = v371;
        v375 = v371 + 336;
        v94 = &qword_1ED726DB0;
        *(_QWORD *)&v365 = v90;
        do
        {
          if (v66 >= *(_QWORD *)(v78 + 16))
            goto LABEL_215;
          v95 = (*((unsigned __int8 *)v388 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v388 + 80);
          v96 = *((_QWORD *)v388 + 9);
          sub_1C0045DFC(v78 + v95 + v96 * v66, v93, &qword_1ED726DB0);
          if ((*(_BYTE *)(v375 + *(int *)(v67 + 36)) & 1) != 0)
          {
            sub_1C0044B78(v93, &qword_1ED726DB0);
          }
          else
          {
            sub_1C005A718(v93, (uint64_t)v379, &qword_1ED726DB0);
            v97 = v395[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C00B1738();
              v97 = v395[0];
            }
            v98 = *(_QWORD *)(v97 + 16);
            if (v98 >= *(_QWORD *)(v97 + 24) >> 1)
            {
              sub_1C00B1738();
              v97 = v395[0];
            }
            *(_QWORD *)(v97 + 16) = v98 + 1;
            sub_1C005A718((uint64_t)v379, v97 + v95 + v98 * v96, &qword_1ED726DB0);
            v67 = (unint64_t)v387;
            v93 = v371;
            v92 = v365;
          }
          ++v66;
        }
        while (v92 != v66);
      }
      swift_bridgeObjectRelease();
      v99 = v395[0];
      if (*(_QWORD *)(v395[0] + 16))
      {
        swift_bridgeObjectRetain();
        v100 = v383;
        sub_1C0286038();
        v102 = v101;
        swift_bridgeObjectRelease();
        v103 = sub_1C01AACEC(v102);
        sub_1C0286038();
        v383 = v100;
        sub_1C02A13E8(v104, v103);
        swift_bridgeObjectRelease();
        swift_retain();
        v105 = sub_1C0303B80();
        v106 = sub_1C03042E8();
        if (os_log_type_enabled(v105, v106))
        {
          v107 = (uint8_t *)swift_slowAlloc();
          v379 = (uint64_t *)swift_slowAlloc();
          v395[0] = (uint64_t)v379;
          *(_DWORD *)v107 = 136315138;
          v375 = (uint64_t)(v107 + 4);
          swift_retain();
          v108 = sub_1C030424C();
          v110 = v109;
          swift_release();
          v394[0] = sub_1C003E6D8(v108, v110, v395);
          sub_1C03044B0();
          swift_release_n();
          v67 = (unint64_t)v387;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C0039000, v105, v106, "[UCG] There are non-hypocorism matches. Discarding hypocorism candidate(s): %s", v107, 0xCu);
          v111 = (uint64_t)v379;
          swift_arrayDestroy();
          MEMORY[0x1C3B98378](v111, -1, -1);
          MEMORY[0x1C3B98378](v107, -1, -1);

        }
        else
        {

          swift_release_n();
        }
        v112 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRelease();
        v397 = v99;
        goto LABEL_58;
      }
      swift_release();
    }
    v112 = MEMORY[0x1E0DEE9D8];
LABEL_58:
    v113 = *(_QWORD *)(v397 + 16);
    v94 = v360;
    if (v113)
    {
      v114 = v397 + ((*((unsigned __int8 *)v388 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v388 + 80));
      v115 = *((_QWORD *)v388 + 9);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1C0045DFC(v114, (uint64_t)v94, &qword_1ED726DB0);
        v116 = (char *)v94 + *(int *)(v67 + 36);
        LOBYTE(v116) = v116[*(int *)(type metadata accessor for ContactResolver.SignalSet(0) + 140)];
        sub_1C0044B78((uint64_t)v94, &qword_1ED726DB0);
        if ((v116 & 1) != 0)
          break;
        v114 += v115;
        if (!--v113)
        {
          swift_bridgeObjectRelease();
          v117 = *(_QWORD *)(v397 + 16);
          v112 = MEMORY[0x1E0DEE9D8];
          goto LABEL_64;
        }
      }
      swift_bridgeObjectRelease();
      v66 = 0x1C030D000;
      goto LABEL_91;
    }
    v117 = 0;
LABEL_64:
    v395[0] = v112;
    v91 = swift_bridgeObjectRetain();
    v118 = v364;
    if (!v117)
    {
      v128 = v112;
LABEL_80:
      swift_bridgeObjectRelease();
      v129 = *(_QWORD *)(v128 + 16);
      if (v129)
      {
        v395[0] = v112;
        sub_1C00B1764();
        v130 = *((unsigned __int8 *)v388 + 80);
        v379 = (uint64_t *)v128;
        v131 = v128 + ((v130 + 32) & ~v130);
        v385 = *((_QWORD *)v388 + 9);
        do
        {
          v132 = (uint64_t *)v384;
          sub_1C0045DFC(v131, v384, &qword_1ED726DB0);
          v133 = *v132;
          v134 = v132[1];
          swift_bridgeObjectRetain();
          sub_1C0044B78((uint64_t)v132, &qword_1ED726DB0);
          v112 = v395[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C00B1764();
            v112 = v395[0];
          }
          v135 = *(_QWORD *)(v112 + 16);
          if (v135 >= *(_QWORD *)(v112 + 24) >> 1)
          {
            sub_1C00B1764();
            v112 = v395[0];
          }
          *(_QWORD *)(v112 + 16) = v135 + 1;
          v136 = v112 + 16 * v135;
          *(_QWORD *)(v136 + 32) = v133;
          *(_QWORD *)(v136 + 40) = v134;
          v131 += v385;
          --v129;
          v67 = (unint64_t)v387;
        }
        while (v129);
      }
      swift_release();
      v137 = sub_1C01AACEC(v112);
      v66 = (unint64_t)&unk_1C030D000;
      if (*(_QWORD *)(v137 + 16))
      {
        v138 = swift_bridgeObjectRetain();
        v139 = v137;
        v140 = v383;
        sub_1C0284BB8(v138, v139);
        v142 = v141;
        swift_bridgeObjectRetain();
        sub_1C0286038();
        v144 = v143;
        swift_bridgeObjectRelease();
        v145 = sub_1C01AACEC(v144);
        sub_1C0286038();
        v383 = v140;
        sub_1C02A13E8(v146, v145);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain_n();
        swift_retain();
        v147 = sub_1C0303B80();
        v148 = sub_1C03042E8();
        if (os_log_type_enabled(v147, v148))
        {
          v149 = swift_slowAlloc();
          v385 = swift_slowAlloc();
          v395[0] = v385;
          *(_DWORD *)v149 = 134218242;
          v150 = *(_QWORD *)(v142 + 16);
          swift_bridgeObjectRelease();
          v394[0] = v150;
          sub_1C03044B0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v149 + 12) = 2080;
          v379 = (uint64_t *)(v149 + 14);
          swift_retain();
          v151 = sub_1C030424C();
          v153 = v152;
          swift_release();
          v154 = v151;
          v66 = 0x1C030D000;
          v394[0] = sub_1C003E6D8(v154, v153, v395);
          sub_1C03044B0();
          swift_release_n();
          v67 = (unint64_t)v387;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C0039000, v147, v148, "[UCG] We have %ld candidate(s) with exact name matches or from PICS. Discarding other non-exact candidate(s): %s", (uint8_t *)v149, 0x16u);
          v155 = v385;
          swift_arrayDestroy();
          MEMORY[0x1C3B98378](v155, -1, -1);
          MEMORY[0x1C3B98378](v149, -1, -1);

        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
        }
        v156 = (uint64_t)v367;
        swift_bridgeObjectRelease();
        v397 = v142;
LABEL_94:
        v157 = swift_bridgeObjectRetain();
        v158 = sub_1C005722C(v157);
        swift_bridgeObjectRelease_n();
        v397 = v158;
        if (*(_BYTE *)(v368 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_e3TrialFactors) != 1)
          goto LABEL_122;
        v159 = *(_QWORD *)(v368 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_e3Orchestrator);
        v160 = v369;
        if (v159)
        {
          v371 = v368 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_e3TrialFactors;
          v161 = qword_1ED728440;
          v385 = v159;
          swift_retain();
          if (v161 == -1)
            goto LABEL_97;
          goto LABEL_242;
        }
LABEL_123:
        if ((*(_BYTE *)(v160 + *(int *)(v362 + 48)) & 1) == 0)
        {
          v195 = sub_1C0303B80();
          v196 = sub_1C03042E8();
          if (os_log_type_enabled(v195, v196))
          {
            v197 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v197 = 0;
            _os_log_impl(&dword_1C0039000, v195, v196, "[UCG] Filtering out contacts that are first party based on config...", v197, 2u);
            MEMORY[0x1C3B98378](v197, -1, -1);
          }

          swift_beginAccess();
          v94 = (uint64_t *)v397;
          v198 = MEMORY[0x1E0DEE9D8];
          v395[0] = MEMORY[0x1E0DEE9D8];
          v199 = *(_QWORD *)(v397 + 16);
          v91 = swift_bridgeObjectRetain();
          v385 = v199;
          if (v199)
          {
            v66 = 0;
            v384 = v156 + 8;
            do
            {
              if (v66 >= v94[2])
                goto LABEL_217;
              v200 = (*((unsigned __int8 *)v388 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v388 + 80);
              v201 = *((_QWORD *)v388 + 9);
              sub_1C0045DFC((uint64_t)v94 + v200 + v201 * v66, v156, &qword_1ED726DB0);
              v202 = *(_QWORD *)(v384 + *(int *)(type metadata accessor for Contact() + 88));
              swift_bridgeObjectRelease();
              if (v202)
              {
                sub_1C005A718(v156, v370, &qword_1ED726DB0);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  sub_1C00B1738();
                v203 = v395[0];
                v204 = *(_QWORD *)(v395[0] + 16);
                if (v204 >= *(_QWORD *)(v395[0] + 24) >> 1)
                {
                  sub_1C00B1738();
                  v203 = v395[0];
                }
                *(_QWORD *)(v203 + 16) = v204 + 1;
                sub_1C005A718(v370, v203 + v200 + v204 * v201, &qword_1ED726DB0);
                v67 = (unint64_t)v387;
                v156 = (uint64_t)v367;
              }
              else
              {
                swift_bridgeObjectRelease();
                sub_1C0044B78(v156, &qword_1ED726DB0);
                v67 = (unint64_t)v387;
              }
              ++v66;
            }
            while (v385 != v66);
            v198 = v395[0];
            v66 = (unint64_t)&unk_1C030D000;
          }
          swift_bridgeObjectRelease();
          v397 = v198;
          swift_bridgeObjectRelease();
          v160 = v369;
        }
        v205 = *(_QWORD *)(v160 + *(int *)(v362 + 44));
        v206 = *(_QWORD *)(v205 + 16);
        if (v206)
        {
          swift_bridgeObjectRetain();
          v207 = sub_1C004F444();
          v385 = sub_1C004F480();
          v379 = (uint64_t *)v205;
          v208 = (uint64_t *)(v205 + 40);
          v209 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          v384 = v207;
          do
          {
            v210 = *(v208 - 1);
            v211 = *v208;
            v395[0] = v210;
            v395[1] = v211;
            v390 = 0x6C7070612E6D6F63;
            v391 = 0xEA00000000002E65;
            swift_bridgeObjectRetain();
            if ((sub_1C0303E44() & 1) != 0)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v392 = v209;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_1C00B1764();
                v209 = v392;
              }
              v213 = v209[2];
              if (v213 >= v209[3] >> 1)
              {
                sub_1C00B1764();
                v209 = v392;
              }
              v209[2] = v213 + 1;
              v214 = &v209[2 * v213];
              v214[4] = v210;
              v214[5] = v211;
              v66 = 0x1C030D000;
            }
            v208 += 2;
            --v206;
          }
          while (v206);
          swift_bridgeObjectRelease();
          v67 = (unint64_t)v387;
        }
        else
        {
          v209 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        }
        swift_beginAccess();
        v215 = swift_bridgeObjectRetain();
        v216 = v383;
        sub_1C0285130(v215, v209);
        v218 = v217;
        v383 = v216;
        v397 = v217;
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v218 + 16) == 1)
        {
          swift_beginAccess();
          v219 = v397;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C01F5AF8();
            v219 = v351;
          }
          if (!*(_QWORD *)(v219 + 16))
          {
            __break(1u);
LABEL_242:
            swift_once();
LABEL_97:
            v162 = (void *)qword_1ED729668;
            v163 = v356;
            v164 = v358;
            v165 = v358 + *(int *)(v356 + 20);
            *(_QWORD *)v165 = "ContactResolver.UCG.ASRE3";
            *(_QWORD *)(v165 + 8) = 25;
            v379 = (uint64_t *)v165;
            *(_BYTE *)(v165 + 16) = 2;
            v166 = v162;
            sub_1C0303B68();
            v375 = *(int *)(v163 + 24);
            *(_QWORD *)(v164 + v375) = v166;
            v167 = v166;
            sub_1C03043E4();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
            v168 = swift_allocObject();
            v366 = xmmword_1C0305B60;
            *(_OWORD *)(v168 + 16) = xmmword_1C0305B60;
            v169 = sub_1C03046E4();
            v171 = v170;
            *(_QWORD *)(v168 + 56) = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v168 + 64) = sub_1C00A6A70();
            *(_QWORD *)(v168 + 32) = v169;
            *(_QWORD *)(v168 + 40) = v171;
            sub_1C0303B50();
            swift_bridgeObjectRelease();

            v172 = v396[3];
            v173 = v396[4];
            v174 = v396[4] & 0x2000000000000000;
            v175 = HIBYTE(v396[4]) & 0xFLL;
            v176 = v396[3] & 0xFFFFFFFFFFFFLL;
            if ((v396[4] & 0x2000000000000000) != 0)
              v177 = HIBYTE(v396[4]) & 0xFLL;
            else
              v177 = v396[3] & 0xFFFFFFFFFFFFLL;
            if (!v177)
            {
              v172 = v396[7];
              v173 = v396[8];
              v174 = v396[8] & 0x2000000000000000;
              v175 = HIBYTE(v396[8]) & 0xFLL;
              v176 = v396[7] & 0xFFFFFFFFFFFFLL;
              if (!((v396[8] & 0x2000000000000000) != 0 ? HIBYTE(v396[8]) & 0xFLL : v396[7] & 0xFFFFFFFFFFFFLL))
              {
                v172 = v396[11];
                v173 = v396[12];
                v174 = v396[12] & 0x2000000000000000;
                v175 = HIBYTE(v396[12]) & 0xFLL;
                v176 = v396[11] & 0xFFFFFFFFFFFFLL;
              }
            }
            v67 = (unint64_t)v387;
            v66 = 0x1C030D000;
            v156 = (uint64_t)v367;
            swift_bridgeObjectRetain();
            if (v174)
              v179 = v175;
            else
              v179 = v176;
            if (!v179)
              goto LABEL_121;
            v395[0] = v172;
            v395[1] = v173;
            v394[0] = 31868;
            v394[1] = 0xE200000000000000;
            sub_1C004F408();
            if ((sub_1C030454C() & 1) != 0)
            {
              v395[0] = v172;
              v395[1] = v173;
              v180 = sub_1C0304558();
              swift_bridgeObjectRelease();
              v181 = *(_QWORD *)(v180 + 16);
              if (v181)
              {
                v395[0] = MEMORY[0x1E0DEE9D8];
                sub_1C00B1764();
                v182 = (_QWORD *)v395[0];
                *(_QWORD *)&v366 = v180;
                v183 = (uint64_t *)(v180 + 56);
                do
                {
                  v185 = *(v183 - 3);
                  v184 = *(v183 - 2);
                  v186 = *(v183 - 1);
                  v187 = *v183;
                  swift_bridgeObjectRetain();
                  v188 = MEMORY[0x1C3B96E30](v185, v184, v186, v187);
                  v190 = v189;
                  swift_bridgeObjectRelease();
                  v395[0] = (uint64_t)v182;
                  v191 = v182[2];
                  if (v191 >= v182[3] >> 1)
                  {
                    sub_1C00B1764();
                    v182 = (_QWORD *)v395[0];
                  }
                  v182[2] = v191 + 1;
                  v192 = &v182[2 * v191];
                  v192[4] = v188;
                  v192[5] = v190;
                  v183 += 4;
                  --v181;
                }
                while (v181);
                swift_bridgeObjectRelease();
                v67 = (unint64_t)v387;
                v66 = 0x1C030D000;
                v156 = (uint64_t)v367;
              }
              else
              {
                swift_bridgeObjectRelease();
                v182 = (_QWORD *)MEMORY[0x1E0DEE9D8];
              }
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727E60);
              v182 = (_QWORD *)swift_allocObject();
              *((_OWORD *)v182 + 1) = v366;
              v182[4] = v172;
              v182[5] = v173;
            }
            swift_bridgeObjectRetain();
            sub_1C0289EFC();
            if (v193 == 3)
              goto LABEL_121;
            v253 = v193;
            sub_1C0289F3C(v193);
            if ((v254 & 1) != 0)
            {
              v255 = sub_1C0296824((uint64_t)v182);
              swift_bridgeObjectRelease();
              memcpy(v395, v396, sizeof(v395));
              v256 = v383;
              v257 = sub_1C0296B9C(v255, v395);
              v383 = v256;
              if (v256)
              {
                swift_bridgeObjectRelease();
                swift_release();
LABEL_191:
                sub_1C003DD84(v358, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
                return swift_bridgeObjectRelease();
              }
              v289 = v257;
              v361 = v255;
              v290 = sub_1C0303B80();
              v291 = sub_1C03042E8();
              if (os_log_type_enabled(v290, v291))
              {
                v292 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v292 = 0;
                _os_log_impl(&dword_1C0039000, v290, v291, "[UCG][ASR-E3] Candidates:", v292, 2u);
                MEMORY[0x1C3B98378](v292, -1, -1);
              }

              v293 = *(_QWORD *)(v289 + 16);
              v363 = v289;
              if (v293)
              {
                v294 = v289
                     + ((*((unsigned __int8 *)v388 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v388 + 80));
                v295 = *((_QWORD *)v388 + 9);
                swift_bridgeObjectRetain();
                *(_QWORD *)&v296 = 136315138;
                v365 = v296;
                *(_QWORD *)&v364 = MEMORY[0x1E0DEE9B8] + 8;
                v297 = v357;
                *(_QWORD *)&v366 = v295;
                do
                {
                  sub_1C0045DFC(v294, v297, &qword_1ED726DB0);
                  v298 = sub_1C0303B80();
                  v299 = sub_1C03042E8();
                  if (os_log_type_enabled(v298, v299))
                  {
                    v300 = swift_slowAlloc();
                    v371 = swift_slowAlloc();
                    v395[0] = v371;
                    *(_DWORD *)v300 = v365;
                    v301 = v372;
                    Contact.nameComponents.getter();
                    v302 = sub_1C0301A44();
                    v304 = v303;
                    v305 = v301;
                    v295 = v366;
                    (*(void (**)(char *, uint64_t))(v373 + 8))(v305, v374);
                    *(_QWORD *)(v300 + 4) = sub_1C003E6D8(v302, v304, v395);
                    v67 = (unint64_t)v387;
                    swift_bridgeObjectRelease();
                    sub_1C0044B78(v357, &qword_1ED726DB0);
                    _os_log_impl(&dword_1C0039000, v298, v299, "%s", (uint8_t *)v300, 0xCu);
                    v306 = v371;
                    swift_arrayDestroy();
                    MEMORY[0x1C3B98378](v306, -1, -1);
                    v307 = v300;
                    v297 = v357;
                    MEMORY[0x1C3B98378](v307, -1, -1);

                  }
                  else
                  {

                    sub_1C0044B78(v297, &qword_1ED726DB0);
                  }
                  v294 += v295;
                  --v293;
                }
                while (v293);
                v289 = v363;
                swift_bridgeObjectRelease();
                v66 = 0x1C030D000;
              }
              v308 = v397;
              v309 = *(_QWORD *)(v397 + 16);
              v310 = (_QWORD *)MEMORY[0x1E0DEE9D8];
              if (v309)
              {
                v395[0] = MEMORY[0x1E0DEE9D8];
                swift_bridgeObjectRetain();
                sub_1C00B1764();
                v311 = *((unsigned __int8 *)v388 + 80);
                *(_QWORD *)&v366 = v308;
                v312 = v308 + ((v311 + 32) & ~v311);
                v371 = *((_QWORD *)v388 + 9);
                v310 = (_QWORD *)v395[0];
                do
                {
                  v313 = (uint64_t *)v384;
                  sub_1C0045DFC(v312, v384, &qword_1ED726DB0);
                  v315 = *v313;
                  v314 = v313[1];
                  swift_bridgeObjectRetain();
                  sub_1C0044B78((uint64_t)v313, &qword_1ED726DB0);
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    sub_1C00B1764();
                    v310 = (_QWORD *)v395[0];
                  }
                  v316 = v310[2];
                  if (v316 >= v310[3] >> 1)
                  {
                    sub_1C00B1764();
                    v310 = (_QWORD *)v395[0];
                  }
                  v310[2] = v316 + 1;
                  v317 = &v310[2 * v316];
                  v317[4] = v315;
                  v317[5] = v314;
                  v312 += v371;
                  --v309;
                  v67 = (unint64_t)v387;
                }
                while (v309);
                swift_bridgeObjectRelease();
                v66 = 0x1C030D000;
                v289 = v363;
              }
              swift_bridgeObjectRetain();
              v318 = v383;
              sub_1C0284EB4(v289, (uint64_t)v310);
              v320 = v319;
              sub_1C012C014(v361, v310);
              v383 = v318;
              swift_bridgeObjectRetain();
              sub_1C0288CD4();
              swift_bridgeObjectRetain();
              v321 = sub_1C0303B80();
              v322 = sub_1C03042E8();
              if (os_log_type_enabled(v321, v322))
              {
                v323 = (uint8_t *)swift_slowAlloc();
                *(_DWORD *)v323 = 134217984;
                v324 = *(_QWORD *)(v320 + 16);
                swift_bridgeObjectRelease();
                v395[0] = v324;
                v67 = (unint64_t)v387;
                v66 = 0x1C030D000;
                sub_1C03044B0();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_1C0039000, v321, v322, "[UCG][ASR-E3] Generated new (%ld) candidates from Euclid match and appending it in CRR since triggering condition is set to always", v323, 0xCu);
                MEMORY[0x1C3B98378](v323, -1, -1);

              }
              else
              {

                swift_bridgeObjectRelease_n();
              }
              v156 = (uint64_t)v367;
LABEL_213:
              sub_1C02964AC();
              goto LABEL_121;
            }
            sub_1C0289FBC(v253);
            if ((v258 & 1) != 0)
            {
              v259 = sub_1C0303B80();
              v260 = sub_1C03042E8();
              if (os_log_type_enabled(v259, v260))
              {
                v261 = (uint8_t *)swift_slowAlloc();
                *(_DWORD *)v261 = 134217984;
                swift_beginAccess();
                v395[0] = *(_QWORD *)(v397 + 16);
                v66 = 0x1C030D000;
                v156 = (uint64_t)v367;
                sub_1C03044B0();
                _os_log_impl(&dword_1C0039000, v259, v260, "[UCG][ASR-E3] Candidate count to CRR pre ASR-E3: %ld", v261, 0xCu);
                MEMORY[0x1C3B98378](v261, -1, -1);
              }

              swift_beginAccess();
              if (*(_QWORD *)(v397 + 16))
                goto LABEL_121;
              v262 = sub_1C0296824((uint64_t)v182);
              swift_bridgeObjectRelease();
              memcpy(v395, v396, sizeof(v395));
              v263 = v383;
              v264 = sub_1C0296B9C(v262, v395);
              v383 = v263;
              if (!v263)
              {
                v265 = v264;
                v363 = v262;
                v266 = sub_1C0303B80();
                v267 = sub_1C03042E8();
                if (os_log_type_enabled(v266, v267))
                {
                  v268 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)v268 = 0;
                  _os_log_impl(&dword_1C0039000, v266, v267, "[UCG][ASR-E3] Candidates:", v268, 2u);
                  MEMORY[0x1C3B98378](v268, -1, -1);
                }

                v269 = *(_QWORD *)(v265 + 16);
                if (v269)
                {
                  v270 = v265
                       + ((*((unsigned __int8 *)v388 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v388 + 80));
                  v384 = *((_QWORD *)v388 + 9);
                  v361 = v265;
                  swift_bridgeObjectRetain();
                  *(_QWORD *)&v271 = 136315138;
                  v365 = v271;
                  *(_QWORD *)&v364 = MEMORY[0x1E0DEE9B8] + 8;
                  v272 = (uint64_t)v354;
                  do
                  {
                    sub_1C0045DFC(v270, v272, &qword_1ED726DB0);
                    v273 = sub_1C0303B80();
                    v274 = sub_1C03042E8();
                    if (os_log_type_enabled(v273, v274))
                    {
                      v275 = (_DWORD *)swift_slowAlloc();
                      *(_QWORD *)&v366 = v275;
                      v371 = swift_slowAlloc();
                      v395[0] = v371;
                      *v275 = v365;
                      v276 = v372;
                      Contact.nameComponents.getter();
                      v277 = sub_1C0301A44();
                      v279 = v278;
                      (*(void (**)(char *, uint64_t))(v373 + 8))(v276, v374);
                      v280 = sub_1C003E6D8(v277, v279, v395);
                      v281 = (uint8_t *)v366;
                      *(_QWORD *)(v366 + 4) = v280;
                      v67 = (unint64_t)v387;
                      swift_bridgeObjectRelease();
                      sub_1C0044B78(v272, &qword_1ED726DB0);
                      _os_log_impl(&dword_1C0039000, v273, v274, "%s", v281, 0xCu);
                      v282 = v371;
                      swift_arrayDestroy();
                      MEMORY[0x1C3B98378](v282, -1, -1);
                      MEMORY[0x1C3B98378](v281, -1, -1);

                    }
                    else
                    {

                      sub_1C0044B78(v272, &qword_1ED726DB0);
                    }
                    v270 += v384;
                    --v269;
                  }
                  while (v269);
                  v265 = v361;
                  swift_bridgeObjectRelease();
                  v66 = 0x1C030D000;
                }
                v397 = v265;
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRelease();
                v283 = sub_1C0303B80();
                v284 = sub_1C03042E8();
                if (os_log_type_enabled(v283, v284))
                {
                  v285 = (uint8_t *)swift_slowAlloc();
                  *(_DWORD *)v285 = 134217984;
                  v286 = *(_QWORD *)(v265 + 16);
                  swift_bridgeObjectRelease();
                  v395[0] = v286;
                  v66 = 0x1C030D000;
                  sub_1C03044B0();
                  swift_bridgeObjectRelease();
                  _os_log_impl(&dword_1C0039000, v283, v284, "[UCG][ASR-E3] Generated (%ld) candidates from Euclid match and appending it in CRR since triggering condition is set to noCandidatesInCrr", v285, 0xCu);
                  MEMORY[0x1C3B98378](v285, -1, -1);

                }
                else
                {

                  swift_bridgeObjectRelease_n();
                }
                v156 = (uint64_t)v367;
                goto LABEL_213;
              }
            }
            else
            {
              sub_1C028A038(v253);
              if ((v287 & 1) == 0)
                goto LABEL_121;
              v94 = (uint64_t *)sub_1C0296824((uint64_t)v182);
              swift_bridgeObjectRelease();
              memcpy(v395, v396, sizeof(v395));
              v288 = v383;
              v91 = sub_1C0296B9C((uint64_t)v94, v395);
              v383 = v288;
              if (!v288)
                goto LABEL_218;
            }
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_191;
          }
          v220 = v219
               + *(int *)(v67 + 36)
               + ((*((unsigned __int8 *)v388 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v388 + 80));
          *(_BYTE *)(v220 + *(int *)(type metadata accessor for ContactResolver.SignalSet(0) + 224)) = 1;
          v397 = v219;
          swift_endAccess();
        }
        sub_1C003F648(v396);
        sub_1C003F648(v396);
        v94 = (uint64_t *)sub_1C0303B80();
        v221 = sub_1C03042E8();
        if (os_log_type_enabled((os_log_t)v94, v221))
        {
          v222 = swift_slowAlloc();
          v223 = swift_slowAlloc();
          v392 = (_QWORD *)v223;
          *(_DWORD *)v222 = *(_QWORD *)(v66 + 3008);
          v395[0] = *(_QWORD *)(v397 + 16);
          sub_1C03044B0();
          *(_WORD *)(v222 + 12) = 2080;
          memcpy(v395, v396, sizeof(v395));
          v224 = ContactQuery.description.getter();
          v395[0] = sub_1C003E6D8(v224, v225, (uint64_t *)&v392);
          sub_1C03044B0();
          swift_bridgeObjectRelease();
          sub_1C0040644(v396);
          sub_1C0040644(v396);
          _os_log_impl(&dword_1C0039000, (os_log_t)v94, v221, "[UCG] Final candidates (%ld) before signal generation for query: %s", (uint8_t *)v222, 0x16u);
          v226 = MEMORY[0x1E0DEE9B8];
          swift_arrayDestroy();
          MEMORY[0x1C3B98378](v223, -1, -1);
          MEMORY[0x1C3B98378](v222, -1, -1);

          v228 = (uint64_t)v377;
          v227 = v378;
          v229 = v380;
          v67 = v381;
          v66 = (unint64_t)v359;
        }
        else
        {
          sub_1C0040644(v396);
          sub_1C0040644(v396);

          v228 = (uint64_t)v377;
          v227 = v378;
          v229 = v380;
          v67 = v381;
          v66 = (unint64_t)v359;
          v226 = MEMORY[0x1E0DEE9B8];
        }
        v385 = *(_QWORD *)(v397 + 16);
        v371 = (uint64_t)&v393;
        v375 = v397;
        v91 = swift_bridgeObjectRetain();
        *(_QWORD *)&v230 = 134218498;
        v370 = v230;
        v369 = v226 + 8;
        v231 = 0;
        while (1)
        {
          if (v231 == v385)
          {
            v232 = 1;
            v231 = v385;
          }
          else
          {
            if (v231 >= *(_QWORD *)(v375 + 16))
            {
              __break(1u);
LABEL_215:
              __break(1u);
LABEL_216:
              __break(1u);
LABEL_217:
              __break(1u);
LABEL_218:
              v325 = (char *)v91;
              v361 = (uint64_t)v94;
              v326 = sub_1C0303B80();
              v327 = sub_1C03042E8();
              if (os_log_type_enabled(v326, v327))
              {
                v328 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v328 = 0;
                _os_log_impl(&dword_1C0039000, v326, v327, "[UCG][ASR-E3] Candidates:", v328, 2u);
                MEMORY[0x1C3B98378](v328, -1, -1);
              }

              v329 = *((_QWORD *)v325 + 2);
              if (v329)
              {
                v330 = (uint64_t)&v325[(*((unsigned __int8 *)v388 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v388 + 80)];
                v384 = *((_QWORD *)v388 + 9);
                v360 = (uint64_t *)v325;
                swift_bridgeObjectRetain();
                *(_QWORD *)&v331 = 136315138;
                v364 = v331;
                v363 = MEMORY[0x1E0DEE9B8] + 8;
                v332 = (uint64_t)v355;
                do
                {
                  sub_1C0045DFC(v330, v332, &qword_1ED726DB0);
                  v333 = sub_1C0303B80();
                  v334 = sub_1C03042E8();
                  if (os_log_type_enabled(v333, v334))
                  {
                    v335 = (_DWORD *)swift_slowAlloc();
                    *(_QWORD *)&v365 = v335;
                    *(_QWORD *)&v366 = swift_slowAlloc();
                    v395[0] = v366;
                    *v335 = v364;
                    v336 = v372;
                    Contact.nameComponents.getter();
                    v337 = sub_1C0301A44();
                    v339 = v338;
                    (*(void (**)(char *, uint64_t))(v373 + 8))(v336, v374);
                    v340 = sub_1C003E6D8(v337, v339, v395);
                    v341 = (uint8_t *)v365;
                    *(_QWORD *)(v365 + 4) = v340;
                    v67 = (unint64_t)v387;
                    swift_bridgeObjectRelease();
                    sub_1C0044B78(v332, &qword_1ED726DB0);
                    _os_log_impl(&dword_1C0039000, v333, v334, "%s", v341, 0xCu);
                    v342 = v366;
                    swift_arrayDestroy();
                    MEMORY[0x1C3B98378](v342, -1, -1);
                    MEMORY[0x1C3B98378](v341, -1, -1);

                  }
                  else
                  {

                    sub_1C0044B78(v332, &qword_1ED726DB0);
                  }
                  v330 += v384;
                  --v329;
                }
                while (v329);
                v325 = (char *)v360;
                swift_bridgeObjectRelease();
                v66 = 0x1C030D000;
              }
              swift_bridgeObjectRetain();
              v80 = sub_1C0303B80();
              v343 = sub_1C03042E8();
              if (os_log_type_enabled(v80, v343))
              {
                v344 = (uint8_t *)swift_slowAlloc();
                *(_DWORD *)v344 = 134217984;
                v345 = *((_QWORD *)v325 + 2);
                swift_bridgeObjectRelease();
                v395[0] = v345;
                v66 = 0x1C030D000;
                sub_1C03044B0();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_1C0039000, v80, v343, "[UCG][ASR-E3] Generated (%ld) candidates from Euclid match and not passing any to CRR since triggering condition is set to None", v344, 0xCu);
                MEMORY[0x1C3B98378](v344, -1, -1);

                goto LABEL_231;
              }
LABEL_230:

              swift_bridgeObjectRelease_n();
LABEL_231:
              v156 = (uint64_t)v367;
              if (*(_BYTE *)(v371 + 56) == 1)
              {
                sub_1C00AC61C();
                v347 = v346;
                v348 = *(_QWORD *)(v346 + 16);
                v349 = v348 + 1;
                if (v348 >= *(_QWORD *)(v346 + 24) >> 1)
                {
                  sub_1C00AC61C();
                  v347 = v352;
                }
                *(_QWORD *)(v347 + 16) = v349;
                *(_BYTE *)(v347 + v348 + 32) = 0;
                if (!*(_QWORD *)(v397 + 16))
                {
                  v350 = v348 + 2;
                  if (v350 > *(_QWORD *)(v347 + 24) >> 1)
                  {
                    sub_1C00AC61C();
                    v347 = v353;
                  }
                  *(_QWORD *)(v347 + 16) = v350;
                  *(_BYTE *)(v347 + v349 + 32) = 1;
                }
              }
              sub_1C02964AC();
              swift_bridgeObjectRelease();
LABEL_121:
              swift_bridgeObjectRelease();
              sub_1C03043D8();
              v194 = v358;
              sub_1C0303B5C();
              swift_release();
              sub_1C003DD84(v194, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
LABEL_122:
              v160 = v369;
              goto LABEL_123;
            }
            v387 = (v231 + 1);
            v233 = (uint64_t)&v376[*(int *)(v227 + 48)];
            v234 = v228;
            v235 = v386;
            sub_1C0045DFC(v375+ ((*((unsigned __int8 *)v388 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v388 + 80))+ *((_QWORD *)v388 + 9) * v231, v233, &qword_1ED726DB0);
            v236 = (uint64_t)v235 + *(int *)(v227 + 48);
            *v235 = v231;
            v228 = v234;
            v67 = v381;
            sub_1C005A718(v233, v236, &qword_1ED726DB0);
            v232 = 0;
            v231 = (unint64_t)v387;
          }
          v237 = (uint64_t)v386;
          __swift_storeEnumTagSinglePayload((uint64_t)v386, v232, 1, v227);
          sub_1C005A718(v237, (uint64_t)v229, (uint64_t *)&unk_1ED726F20);
          if (__swift_getEnumTagSinglePayload((uint64_t)v229, 1, v227) == 1)
          {
            swift_bridgeObjectRelease();
            return v397;
          }
          v94 = *v229;
          sub_1C005A718((uint64_t)v229 + *(int *)(v227 + 48), v67, &qword_1ED726DB0);
          sub_1C0045DFC(v67, v228, &qword_1ED726DB0);
          sub_1C0045DFC(v67, v66, &qword_1ED726DB0);
          v238 = v228;
          v239 = sub_1C0303B80();
          v240 = sub_1C03042E8();
          v387 = v239;
          LODWORD(v384) = v240;
          if (os_log_type_enabled(v239, v240))
          {
            v241 = swift_slowAlloc();
            v379 = (uint64_t *)swift_slowAlloc();
            v395[0] = (uint64_t)v379;
            *(_DWORD *)v241 = v370;
            v392 = v94;
            sub_1C03044B0();
            *(_WORD *)(v241 + 12) = 2080;
            v242 = v231;
            v243 = v66;
            v244 = v372;
            Contact.nameComponents.getter();
            v245 = sub_1C0301A44();
            v247 = v246;
            v248 = v244;
            v66 = v243;
            v231 = v242;
            (*(void (**)(char *, uint64_t))(v373 + 8))(v248, v374);
            v392 = (_QWORD *)sub_1C003E6D8(v245, v247, v395);
            sub_1C03044B0();
            swift_bridgeObjectRelease();
            v228 = (uint64_t)v377;
            sub_1C0044B78((uint64_t)v377, &qword_1ED726DB0);
            *(_WORD *)(v241 + 22) = 2080;
            v249 = sub_1C00C6F6C();
            v392 = (_QWORD *)sub_1C003E6D8(v249, v250, v395);
            sub_1C03044B0();
            swift_bridgeObjectRelease();
            sub_1C0044B78(v66, &qword_1ED726DB0);
            v251 = v387;
            _os_log_impl(&dword_1C0039000, v387, (os_log_type_t)v384, "[UCG] Candidate [%ld] (\"%s\"): %s", (uint8_t *)v241, 0x20u);
            v94 = v379;
            swift_arrayDestroy();
            MEMORY[0x1C3B98378](v94, -1, -1);
            v252 = v241;
            v227 = v378;
            MEMORY[0x1C3B98378](v252, -1, -1);

            v67 = v381;
            sub_1C0044B78(v381, &qword_1ED726DB0);
            v229 = v380;
          }
          else
          {

            sub_1C0044B78(v66, &qword_1ED726DB0);
            sub_1C0044B78(v238, &qword_1ED726DB0);
            sub_1C0044B78(v67, &qword_1ED726DB0);
            v229 = v380;
            v228 = v238;
          }
        }
      }
      swift_bridgeObjectRelease();
LABEL_91:
      v156 = (uint64_t)v367;
      goto LABEL_94;
    }
    v66 = 0;
    v375 = v385 + 333;
    *(_QWORD *)&v365 = v364 + 334;
    v119 = &qword_1ED726DB0;
    v379 = (uint64_t *)v117;
    v371 = v91;
    while (1)
    {
      if (v66 >= *(_QWORD *)(v91 + 16))
        goto LABEL_216;
      v120 = (*((unsigned __int8 *)v388 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v388 + 80);
      v121 = *((_QWORD *)v388 + 9);
      v94 = (uint64_t *)v67;
      v122 = v385;
      sub_1C0045DFC(v91 + v120 + v121 * v66, v385, v119);
      v123 = *(unsigned __int8 *)(v375 + *((int *)v94 + 9));
      sub_1C0045DFC(v122, v118, v119);
      if (v123 == 1)
      {
        v124 = *(_BYTE *)(v365 + *((int *)v94 + 9));
        sub_1C0044B78(v118, v119);
        v67 = (unint64_t)v94;
        if ((v124 & 1) != 0)
        {
          v94 = v119;
          sub_1C005A718(v385, v366, v119);
          v125 = v395[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C00B1738();
            v125 = v395[0];
          }
          v126 = *(_QWORD *)(v125 + 16);
          if (v126 >= *(_QWORD *)(v125 + 24) >> 1)
          {
            sub_1C00B1738();
            v125 = v395[0];
          }
          *(_QWORD *)(v125 + 16) = v126 + 1;
          v127 = v125 + v120 + v126 * v121;
          v119 = v94;
          sub_1C005A718(v366, v127, v94);
          v67 = (unint64_t)v387;
          v118 = v364;
          goto LABEL_76;
        }
      }
      else
      {
        sub_1C0044B78(v118, v119);
        v67 = (unint64_t)v94;
      }
      sub_1C0044B78(v385, v119);
LABEL_76:
      ++v66;
      v91 = v371;
      if (v379 == (uint64_t *)v66)
      {
        v128 = v395[0];
        v112 = MEMORY[0x1E0DEE9D8];
        goto LABEL_80;
      }
    }
  }
  v67 = 0;
  v80 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v67 >= *(_QWORD *)(v78 + 16))
    {
      __break(1u);
      goto LABEL_230;
    }
    v66 = (*((unsigned __int8 *)v388 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v388 + 80);
    v81 = *((_QWORD *)v388 + 9);
    sub_1C0045DFC(v78 + v66 + v81 * v67, v68, &qword_1ED726DB0);
    v82 = v383;
    v83 = sub_1C0296148(v68);
    if (v82)
      break;
    v383 = 0;
    if ((v83 & 1) != 0)
    {
      sub_1C005A718(v68, v375, &qword_1ED726DB0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1C00B1738();
      v80 = v395[0];
      v84 = *(_QWORD *)(v395[0] + 16);
      if (v84 >= *(_QWORD *)(v395[0] + 24) >> 1)
      {
        sub_1C00B1738();
        v80 = v395[0];
      }
      v80[2].isa = (Class)(v84 + 1);
      sub_1C005A718(v375, (uint64_t)v80 + v66 + v84 * v81, &qword_1ED726DB0);
      v68 = v365;
    }
    else
    {
      sub_1C0044B78(v68, &qword_1ED726DB0);
    }
    ++v67;
    v76 = MEMORY[0x1E0DEE9D8];
    if (v363 == v67)
    {
      v85 = v395[0];
      v67 = (unint64_t)v387;
      goto LABEL_32;
    }
  }
  sub_1C0044B78(v68, &qword_1ED726DB0);
  swift_release();
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

void sub_1C0292A3C()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  BOOL v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v33;
  uint64_t v34;
  _OWORD v35[17];
  _OWORD v36[4];
  __int128 v37;
  _QWORD v38[7];
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _QWORD v43[35];

  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_27_0(v43, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726FA8);
  v1 = OUTLINED_FUNCTION_16_0();
  *(_OWORD *)(v1 + 16) = xmmword_1C0305B60;
  OUTLINED_FUNCTION_27_0((void *)(v1 + 32), v0);
  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v35[0] = MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_27_0(v38, v0);
  swift_getKeyPath();
  v40 = v39;
  v36[0] = v39;
  sub_1C003F648(v43);
  sub_1C003F648(v38);
  sub_1C0098758((uint64_t)&v40);
  sub_1C004F408();
  OUTLINED_FUNCTION_123_3();
  v3 = sub_1C0304558();
  sub_1C0098780((uint64_t)&v40);
  sub_1C003F648(v38);
  swift_retain();
  v4 = sub_1C0286D30(v3, v38);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_14();
  sub_1C0040644(v38);
  sub_1C02896D8(v4);
  swift_setDeallocating();
  sub_1C004EFA0();
  v5 = *(_QWORD *)&v35[0];
  v6 = *(_QWORD *)(*(_QWORD *)&v35[0] + 16);
  if (v6)
  {
    OUTLINED_FUNCTION_21();
    v7 = 32;
    while (1)
    {
      OUTLINED_FUNCTION_27_0(v36, (const void *)(v5 + v7));
      swift_getKeyPath();
      v41 = v37;
      v35[0] = v37;
      sub_1C003F648(v36);
      sub_1C0098758((uint64_t)&v41);
      OUTLINED_FUNCTION_123_3();
      sub_1C0304558();
      sub_1C0098780((uint64_t)&v41);
      sub_1C003F648(v36);
      v8 = OUTLINED_FUNCTION_183_0();
      v9 = OUTLINED_FUNCTION_249(v8, v36);
      OUTLINED_FUNCTION_22_2();
      OUTLINED_FUNCTION_31();
      sub_1C0040644(v36);
      v10 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v2 + 16);
      if (__OFADD__(v11, v10))
        break;
      if (!OUTLINED_FUNCTION_116() || v11 + v10 > *(_QWORD *)(v2 + 24) >> 1)
      {
        sub_1C0050554();
        v2 = v12;
      }
      if (*(_QWORD *)(v9 + 16))
      {
        OUTLINED_FUNCTION_185_1();
        if (v14 != v15)
          goto LABEL_44;
        v16 = OUTLINED_FUNCTION_144_3(v2 + 264 * v13);
        v18 = v18 || v16 >= v17;
        if (!v18)
          goto LABEL_48;
        swift_arrayInitWithCopy();
        if (v10)
        {
          v19 = *(_QWORD *)(v2 + 16);
          v15 = __OFADD__(v19, v10);
          v20 = v19 + v10;
          if (v15)
            goto LABEL_46;
          *(_QWORD *)(v2 + 16) = v20;
        }
      }
      else if (v10)
      {
        goto LABEL_41;
      }
      OUTLINED_FUNCTION_14();
      v7 += 264;
      if (!--v6)
      {
        OUTLINED_FUNCTION_17_0();
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_41:
    __break(1u);
  }
  else
  {
LABEL_20:
    OUTLINED_FUNCTION_17_0();
    v21 = *(_QWORD *)(v2 + 16);
    if (!v21)
    {
LABEL_39:
      OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_1();
      return;
    }
    OUTLINED_FUNCTION_44();
    v22 = MEMORY[0x1E0DEE9D8];
    v23 = 32;
    while (1)
    {
      OUTLINED_FUNCTION_27_0(v35, (const void *)(v2 + v23));
      swift_getKeyPath();
      v42 = *(_OWORD *)((char *)&v35[1] + 8);
      sub_1C003F648(v35);
      sub_1C0098758((uint64_t)&v42);
      OUTLINED_FUNCTION_123_3();
      sub_1C0304558();
      sub_1C0098780((uint64_t)&v42);
      sub_1C003F648(v35);
      v24 = OUTLINED_FUNCTION_183_0();
      v25 = OUTLINED_FUNCTION_249(v24, v35);
      OUTLINED_FUNCTION_22_2();
      OUTLINED_FUNCTION_31();
      sub_1C0040644(v35);
      v26 = *(_QWORD *)(v25 + 16);
      v27 = *(_QWORD *)(v22 + 16);
      if (__OFADD__(v27, v26))
        break;
      if (!swift_isUniquelyReferenced_nonNull_native() || v27 + v26 > *(_QWORD *)(v22 + 24) >> 1)
      {
        sub_1C0050554();
        v22 = v28;
      }
      if (*(_QWORD *)(v25 + 16))
      {
        OUTLINED_FUNCTION_185_1();
        if (v14 != v15)
          goto LABEL_45;
        v30 = OUTLINED_FUNCTION_144_3(v22 + 264 * v29);
        if (!v18 && v30 < v31)
          goto LABEL_48;
        swift_arrayInitWithCopy();
        if (v26)
        {
          v33 = *(_QWORD *)(v22 + 16);
          v15 = __OFADD__(v33, v26);
          v34 = v33 + v26;
          if (v15)
            goto LABEL_47;
          *(_QWORD *)(v22 + 16) = v34;
        }
      }
      else if (v26)
      {
        goto LABEL_43;
      }
      OUTLINED_FUNCTION_14();
      v23 += 264;
      if (!--v21)
      {
        OUTLINED_FUNCTION_33();
        goto LABEL_39;
      }
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  OUTLINED_FUNCTION_18_43();
  OUTLINED_FUNCTION_85_7();
  __break(1u);
}

void sub_1C0292E78(const void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  void (*v54)(char *, uint64_t, _QWORD *);
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  char v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  NSObject *v110;
  os_log_type_t v111;
  uint8_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  NSObject *v120;
  os_log_type_t v121;
  uint8_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  NSObject *v134;
  os_log_type_t v135;
  uint8_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  void *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unsigned __int8 *v195;
  _QWORD *v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  uint64_t v200;
  uint64_t v201;
  _QWORD *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  _QWORD *v212;
  uint64_t v213;
  __int128 v214;
  char *v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  _QWORD *v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  uint64_t v229[33];
  _QWORD v230[34];

  v213 = a3;
  v207 = a2;
  v196 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v195 = *(unsigned __int8 **)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v210 = (uint64_t *)((char *)&v194 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v211 = (uint64_t)&v194 - v8;
  v9 = sub_1C0303B74();
  v197 = *(_QWORD *)(v9 - 8);
  v198 = v9;
  MEMORY[0x1E0C80A78](v9);
  v201 = (uint64_t)&v194 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = (_QWORD *)sub_1C0301DB0();
  v218 = *(v225 - 1);
  v11 = MEMORY[0x1E0C80A78](v225);
  v217 = (char *)&v194 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v216 = (char *)&v194 - v14;
  MEMORY[0x1E0C80A78](v13);
  v215 = (char *)&v194 - v15;
  v16 = type metadata accessor for Signpost();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v194 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v230, a1, 0x108uLL);
  if (qword_1ED728440 != -1)
    goto LABEL_101;
  while (1)
  {
    v19 = (void *)qword_1ED729668;
    v20 = (uint64_t)&v18[*(int *)(v16 + 20)];
    *(_QWORD *)v20 = "UCG.GenerateCandidatesForQuery";
    *(_QWORD *)(v20 + 8) = 30;
    v204 = v20;
    *(_BYTE *)(v20 + 16) = 2;
    v21 = v19;
    sub_1C0303B68();
    v203 = *(int *)(v16 + 24);
    *(_QWORD *)&v18[v203] = v21;
    v22 = v21;
    sub_1C03043E4();
    v200 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
    v23 = swift_allocObject();
    v214 = xmmword_1C0305B60;
    *(_OWORD *)(v23 + 16) = xmmword_1C0305B60;
    v24 = sub_1C03046E4();
    v26 = v25;
    *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
    v199 = sub_1C00A6A70();
    *(_QWORD *)(v23 + 64) = v199;
    *(_QWORD *)(v23 + 32) = v24;
    *(_QWORD *)(v23 + 40) = v26;
    v192 = v23;
    LOBYTE(v191) = 2;
    v190 = 22;
    v205 = v18;
    sub_1C0303B50();
    swift_bridgeObjectRelease();

    type metadata accessor for ContactSearchResultCollector();
    swift_allocObject();
    v27 = sub_1C028C458();
    if (qword_1ED727970 != -1)
      swift_once();
    v28 = sub_1C0303B98();
    v29 = __swift_project_value_buffer(v28, (uint64_t)&unk_1ED7295C8);
    sub_1C003F648(v230);
    sub_1C003F648(v230);
    v206 = v29;
    v30 = sub_1C0303B80();
    v31 = sub_1C03042E8();
    v32 = os_log_type_enabled(v30, v31);
    v208 = v27;
    if (v32)
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v227 = v34;
      *(_DWORD *)v33 = 136315138;
      memcpy(v229, v230, sizeof(v229));
      v35 = ContactQuery.description.getter();
      v229[0] = sub_1C003E6D8(v35, v36, &v227);
      v37 = v209;
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      sub_1C0040644(v230);
      sub_1C0040644(v230);
      _os_log_impl(&dword_1C0039000, v30, v31, "[UCG] Looking at ASR candidate: %s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v34, -1, -1);
      MEMORY[0x1C3B98378](v33, -1, -1);

    }
    else
    {
      sub_1C0040644(v230);
      sub_1C0040644(v230);

      v37 = v209;
    }
    v38 = v218;
    memcpy(v229, v230, sizeof(v229));
    v39 = sub_1C0049AF8();
    v40 = v207;
    if ((v39 & 1) == 0)
    {
      v41 = v230[19] & 0xFFFFFFFFFFFFLL;
      if ((v230[20] & 0x2000000000000000) != 0)
        v41 = HIBYTE(v230[20]) & 0xFLL;
      if (!v41)
        goto LABEL_56;
    }
    memcpy(v229, v230, sizeof(v229));
    v42 = sub_1C004EDE0();
    MEMORY[0x1E0C80A78](v42);
    v192 = v40;
    v202 = v43;
    v44 = sub_1C0289968((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1C02A2F30, (uint64_t)&v190, (uint64_t)v43);
    v45 = *(_QWORD *)(v44 + 16);
    if (!v45)
      break;
    v46 = v40 + *(int *)(type metadata accessor for ContactResolverConfig(0) + 32);
    v212 = (_QWORD *)(v213 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_tokenizer);
    swift_bridgeObjectRetain();
    v194 = v44;
    v47 = (uint64_t *)(v44 + 40);
    v48 = MEMORY[0x1E0DEE9D8];
    v219 = v46;
    while (1)
    {
      v221 = v45;
      v222 = v48;
      v49 = *v47;
      v223 = *(v47 - 1);
      v224 = v49;
      v220 = v47;
      swift_bridgeObjectRetain();
      v50 = v46;
      v229[0] = sub_1C0301D74();
      v229[1] = v51;
      v227 = 26746;
      v228 = 0xE200000000000000;
      v52 = sub_1C004F444();
      v16 = sub_1C004F480();
      v226 = v52;
      v53 = sub_1C0303E44();
      swift_bridgeObjectRelease();
      v54 = *(void (**)(char *, uint64_t, _QWORD *))(v38 + 16);
      v55 = v215;
      v56 = (uint64_t)v225;
      v54(v215, v50, v225);
      if ((v53 & 1) != 0)
      {
        v57 = *(void (**)(char *, uint64_t))(v38 + 8);
        v57(v55, v56);
        v58 = v216;
        v54(v216, v50, (_QWORD *)v56);
        v59 = 1;
      }
      else
      {
        v229[0] = sub_1C0301D74();
        v229[1] = v60;
        v227 = 6649209;
        v228 = 0xE300000000000000;
        v61 = sub_1C0303E44();
        v56 = (uint64_t)v225;
        swift_bridgeObjectRelease();
        v57 = *(void (**)(char *, uint64_t))(v38 + 8);
        v57(v55, v56);
        v58 = v216;
        v54(v216, v50, (_QWORD *)v56);
        if ((v61 & 1) != 0)
        {
          v59 = 1;
        }
        else
        {
          v229[0] = sub_1C0301D74();
          v229[1] = v62;
          v227 = 24938;
          v228 = 0xE200000000000000;
          v59 = sub_1C0303E44();
          v56 = (uint64_t)v225;
          swift_bridgeObjectRelease();
        }
        v50 = v219;
      }
      v57(v58, v56);
      v63 = v217;
      v54(v217, v50, (_QWORD *)v56);
      if ((v59 & 1) != 0)
      {
        v57(v63, v56);
        v48 = v222;
LABEL_22:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727E60);
        v66 = swift_allocObject();
        *(_OWORD *)(v66 + 16) = v214;
        v67 = v224;
        *(_QWORD *)(v66 + 32) = v223;
        *(_QWORD *)(v66 + 40) = v67;
        v68 = 1;
        goto LABEL_24;
      }
      v229[0] = sub_1C0301D74();
      v229[1] = v64;
      v227 = 28523;
      v228 = 0xE200000000000000;
      v65 = sub_1C0303E44();
      swift_bridgeObjectRelease();
      v57(v63, (uint64_t)v225);
      v48 = v222;
      if ((v65 & 1) != 0)
        goto LABEL_22;
      v69 = v212[3];
      v70 = v212[4];
      __swift_project_boxed_opaque_existential_1(v212, v69);
      v66 = sub_1C00E59C4(v223, v224, v69, v70);
      swift_bridgeObjectRelease();
      v68 = *(_QWORD *)(v66 + 16);
LABEL_24:
      v71 = *(_QWORD *)(v48 + 16);
      v18 = (char *)MEMORY[0x1E0DEA968];
      if (__OFADD__(v71, v68))
        break;
      if (!swift_isUniquelyReferenced_nonNull_native() || v71 + v68 > *(_QWORD *)(v48 + 24) >> 1)
      {
        sub_1C00500A0();
        v48 = v72;
      }
      v38 = v218;
      if (*(_QWORD *)(v66 + 16))
      {
        v73 = *(_QWORD *)(v48 + 16);
        if ((*(_QWORD *)(v48 + 24) >> 1) - v73 < v68)
          goto LABEL_99;
        v74 = v48 + 16 * v73 + 32;
        if (v66 + 32 < v74 + 16 * v68 && v74 < v66 + 32 + 16 * v68)
        {
          LODWORD(v192) = 0;
          v191 = 1092;
          LOBYTE(v190) = 2;
          sub_1C0304828();
          __break(1u);
          return;
        }
        swift_arrayInitWithCopy();
        if (v68)
        {
          v76 = *(_QWORD *)(v48 + 16);
          v77 = __OFADD__(v76, v68);
          v78 = v76 + v68;
          if (v77)
            goto LABEL_100;
          *(_QWORD *)(v48 + 16) = v78;
        }
      }
      else if (v68)
      {
        goto LABEL_98;
      }
      v47 = v220 + 2;
      swift_bridgeObjectRelease();
      v45 = v221 - 1;
      v46 = v219;
      if (v221 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_42;
      }
    }
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    swift_once();
  }
  v48 = MEMORY[0x1E0DEE9D8];
LABEL_42:
  swift_bridgeObjectRelease();
  v229[0] = v48;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
  sub_1C0150A88(&qword_1ED7283B0, (uint64_t *)&unk_1ED7283A0);
  v79 = sub_1C0303E50();
  v81 = v80;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v82 = sub_1C0303B80();
  v83 = sub_1C03042E8();
  if (os_log_type_enabled(v82, v83))
  {
    v84 = swift_slowAlloc();
    v226 = swift_slowAlloc();
    v229[0] = v226;
    *(_DWORD *)v84 = 136315394;
    v225 = (_QWORD *)(v84 + 4);
    v85 = swift_bridgeObjectRetain();
    v86 = v79;
    v87 = MEMORY[0x1C3B97040](v85, MEMORY[0x1E0DEA968]);
    v89 = v88;
    swift_bridgeObjectRelease();
    v227 = sub_1C003E6D8(v87, v89, v229);
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v84 + 12) = 2080;
    swift_bridgeObjectRetain();
    v227 = sub_1C003E6D8(v86, v81, v229);
    v79 = v86;
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0039000, v82, v83, "[UCG] Searching for contacts by name tokens: %s (\"%s\")", (uint8_t *)v84, 0x16u);
    v90 = v226;
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v90, -1, -1);
    MEMORY[0x1C3B98378](v84, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v97 = v209;
  sub_1C0297288(v79, v81, v91, v92, v93, v94, v95, v96, v194, v195, (uint64_t)v196, v197, v198, v199, v200, v201, (uint64_t)v202, v203, v204,
    (uint64_t)v205);
  if (v97)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_94;
  }
  v99 = v98;
  v209 = 0;
  swift_bridgeObjectRelease();
  v100 = *(_QWORD *)(v99 + 16);
  if (v100)
  {
    v101 = (uint64_t *)(v99 + 64);
    do
    {
      v102 = *(v101 - 4);
      v103 = *(v101 - 3);
      v104 = *(v101 - 2);
      v105 = *(v101 - 1);
      v106 = *v101;
      v101 += 5;
      v229[0] = v102;
      v229[1] = v103;
      v229[2] = v104;
      v229[3] = v105;
      v229[4] = v106;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C028C4CC(v229);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v100;
    }
    while (v100);
  }
  swift_bridgeObjectRelease();
  v107 = v202[2];
  if (!v107)
  {
    swift_bridgeObjectRelease();
    v37 = v209;
    goto LABEL_56;
  }
  v109 = v202[4];
  v108 = v202[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = v209;
  if (v107 != 1)
  {
LABEL_55:
    swift_bridgeObjectRelease();
    goto LABEL_56;
  }
  swift_bridgeObjectRetain_n();
  v110 = sub_1C0303B80();
  v111 = sub_1C03042E8();
  if (os_log_type_enabled(v110, v111))
  {
    v112 = (uint8_t *)swift_slowAlloc();
    v113 = swift_slowAlloc();
    v229[0] = v113;
    *(_DWORD *)v112 = 136315138;
    swift_bridgeObjectRetain();
    v227 = sub_1C003E6D8(v109, v108, v229);
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0039000, v110, v111, "[UCG] Searching for contacts by relationship using name field as relationship label: %s", v112, 0xCu);
    swift_arrayDestroy();
    v114 = v113;
    v37 = v209;
    MEMORY[0x1C3B98378](v114, -1, -1);
    MEMORY[0x1C3B98378](v112, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v229[0] = v109;
  v229[1] = v108;
  v139 = sub_1C0304084();
  v229[0] = 0;
  v229[1] = v139;
  v229[2] = v140;
  type metadata accessor for ContactResolverConfig(0);
  sub_1C0299158();
  if (v37)
  {
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_94;
  }
  v142 = *(_QWORD *)(v141 + 16);
  if (!v142)
  {
    swift_bridgeObjectRelease();
    goto LABEL_55;
  }
  v209 = 0;
  v143 = (uint64_t *)(v141 + 64);
  do
  {
    v144 = *(v143 - 4);
    v145 = *(v143 - 3);
    v146 = *(v143 - 2);
    v147 = *(v143 - 1);
    v148 = *v143;
    v143 += 5;
    v229[0] = v144;
    v229[1] = v145;
    v229[2] = v146;
    v229[3] = v147;
    v229[4] = v148;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C028C4CC(v229);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    --v142;
  }
  while (v142);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v37 = v209;
LABEL_56:
  v115 = v230[23];
  if (v230[23])
  {
    v116 = v230[22];
    v117 = HIBYTE(v230[23]) & 0xFLL;
    if ((v230[23] & 0x2000000000000000) == 0)
      v117 = v230[22] & 0xFFFFFFFFFFFFLL;
    if (v117)
    {
      v118 = v37;
      v119 = v230[21];
      sub_1C003F770(v230[21], v230[22], v230[23]);
      swift_retain();
      swift_bridgeObjectRetain();
      v120 = sub_1C0303B80();
      v121 = sub_1C03042E8();
      if (os_log_type_enabled(v120, v121))
      {
        v122 = (uint8_t *)swift_slowAlloc();
        v123 = swift_slowAlloc();
        v226 = v119;
        v124 = v123;
        v229[0] = v123;
        v209 = v118;
        *(_DWORD *)v122 = 136315138;
        swift_bridgeObjectRetain();
        v227 = sub_1C003E6D8(v116, v115, v229);
        v118 = v209;
        sub_1C03044B0();
        swift_bridgeObjectRelease();
        sub_1C0040774(v226, v116, v115);
        _os_log_impl(&dword_1C0039000, v120, v121, "[UCG] Searching for contacts by relationship label: %s", v122, 0xCu);
        swift_arrayDestroy();
        v125 = v124;
        v119 = v226;
        MEMORY[0x1C3B98378](v125, -1, -1);
        MEMORY[0x1C3B98378](v122, -1, -1);
      }
      else
      {
        sub_1C0040774(v119, v116, v115);
      }

      v229[0] = v119;
      v229[1] = v116;
      v229[2] = v115;
      type metadata accessor for ContactResolverConfig(0);
      sub_1C0299158();
      if (v118)
        goto LABEL_78;
      v225 = (_QWORD *)v116;
      v226 = v119;
      v209 = 0;
      v127 = *(_QWORD *)(v126 + 16);
      if (v127)
      {
        v128 = (uint64_t *)(v126 + 64);
        do
        {
          v129 = *(v128 - 4);
          v130 = *(v128 - 3);
          v131 = *(v128 - 2);
          v132 = *(v128 - 1);
          v133 = *v128;
          v128 += 5;
          v229[0] = v129;
          v229[1] = v130;
          v229[2] = v131;
          v229[3] = v132;
          v229[4] = v133;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C028C4CC(v229);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          --v127;
        }
        while (v127);
      }
      swift_bridgeObjectRelease();
      v116 = (uint64_t)v225;
      v119 = v226;
      sub_1C003F770(v226, (uint64_t)v225, v115);
      v134 = sub_1C0303B80();
      v135 = sub_1C03042E8();
      if (os_log_type_enabled(v134, v135))
      {
        v136 = (uint8_t *)swift_slowAlloc();
        v137 = swift_slowAlloc();
        v229[0] = v137;
        *(_DWORD *)v136 = 136315138;
        swift_bridgeObjectRetain();
        v227 = sub_1C003E6D8((uint64_t)v225, v115, v229);
        v116 = (uint64_t)v225;
        sub_1C03044B0();
        swift_bridgeObjectRelease();
        sub_1C0040774(v226, v116, v115);
        _os_log_impl(&dword_1C0039000, v134, v135, "[UCG] Searching for contacts by name using the relationship label as a search term: %s", v136, 0xCu);
        swift_arrayDestroy();
        v138 = v137;
        v119 = v226;
        MEMORY[0x1C3B98378](v138, -1, -1);
        MEMORY[0x1C3B98378](v136, -1, -1);
      }
      else
      {
        sub_1C0040774(v119, v116, v115);
      }

      v149 = v209;
      sub_1C0297288(v116, v115, v150, v151, v152, v153, v154, v155, v194, v195, (uint64_t)v196, v197, v198, v199, v200, v201, (uint64_t)v202, v203, v204,
        (uint64_t)v205);
      if (v149)
      {
LABEL_78:
        swift_release();
        sub_1C0040774(v119, v116, v115);
        goto LABEL_94;
      }
      v209 = 0;
      v157 = *(_QWORD *)(v156 + 16);
      if (v157)
      {
        v158 = (uint64_t *)(v156 + 64);
        do
        {
          v159 = *(v158 - 4);
          v160 = *(v158 - 3);
          v161 = *(v158 - 2);
          v162 = *(v158 - 1);
          v163 = *v158;
          v158 += 5;
          v229[0] = v159;
          v229[1] = v160;
          v229[2] = v161;
          v229[3] = v162;
          v229[4] = v163;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C028C4CC(v229);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          --v157;
        }
        while (v157);
      }
      swift_bridgeObjectRelease();
      sub_1C0040774(v226, (uint64_t)v225, v115);
      v37 = v209;
    }
  }
  v164 = (id)qword_1ED729668;
  sub_1C0303B68();
  sub_1C03043E4();
  v165 = swift_allocObject();
  *(_OWORD *)(v165 + 16) = v214;
  v166 = sub_1C03046E4();
  v167 = v199;
  *(_QWORD *)(v165 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v165 + 64) = v167;
  *(_QWORD *)(v165 + 32) = v166;
  *(_QWORD *)(v165 + 40) = v168;
  v192 = v165;
  LOBYTE(v191) = 2;
  v190 = 22;
  v225 = v164;
  sub_1C0303B50();
  swift_bridgeObjectRelease();
  memcpy(v229, v230, sizeof(v229));
  v169 = sub_1C028CCAC(v229);
  v170 = *(_QWORD *)(v169 + 16);
  if (!v170)
  {
LABEL_91:
    v183 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v183);
    v192 = v213;
    v193 = v207;
    sub_1C01F16E4();
    v185 = v184;
    swift_bridgeObjectRelease();
    sub_1C03043D8();
    v186 = v225;
    v187 = v201;
    sub_1C0303B5C();
    (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v187, v198);
    swift_release();

    *v196 = v185;
    sub_1C03043D8();
    v188 = (uint64_t)v205;
    sub_1C0303B5C();
    v189 = v188;
    goto LABEL_95;
  }
  v171 = v37;
  v229[0] = MEMORY[0x1E0DEE9D8];
  sub_1C00B1738();
  v172 = v195[80];
  v224 = v169;
  v226 = (v172 + 32) & ~v172;
  v173 = v169 + v226;
  v174 = *((_QWORD *)v195 + 9);
  v175 = v211;
  while (1)
  {
    v176 = v210;
    sub_1C0045DFC(v173, (uint64_t)v210, &qword_1ED726DB0);
    sub_1C0294624(v176, v213, &v227, v175);
    if (v171)
      break;
    v171 = 0;
    sub_1C0044B78((uint64_t)v176, &qword_1ED726DB0);
    v177 = v229[0];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C00B1738();
      v177 = v229[0];
    }
    v178 = *(_QWORD *)(v177 + 16);
    if (v178 >= *(_QWORD *)(v177 + 24) >> 1)
    {
      sub_1C00B1738();
      v177 = v229[0];
    }
    *(_QWORD *)(v177 + 16) = v178 + 1;
    v179 = v177 + v226 + v178 * v174;
    v175 = v211;
    sub_1C005A718(v211, v179, &qword_1ED726DB0);
    v173 += v174;
    if (!--v170)
      goto LABEL_91;
  }
  sub_1C0044B78((uint64_t)v176, &qword_1ED726DB0);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C03043D8();
  v180 = v225;
  v181 = v201;
  sub_1C0303B5C();
  (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v181, v198);
  swift_release();

LABEL_94:
  v182 = (uint64_t)v205;
  sub_1C03043D8();
  sub_1C0303B5C();
  v189 = v182;
LABEL_95:
  sub_1C003DD84(v189, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
}

void sub_1C0294528(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F70);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[1];
  v15[0] = *a1;
  v15[1] = v9;
  v10 = a2 + *(int *)(type metadata accessor for ContactResolverConfig(0) + 32);
  v11 = sub_1C0301DB0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v10, v11);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v11);
  sub_1C004F408();
  v12 = sub_1C03044E0();
  v14 = v13;
  sub_1C0044B78((uint64_t)v8, &qword_1ED725F70);
  *a3 = v12;
  a3[1] = v14;
}

void sub_1C0294624(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  NSObject *v60;
  os_log_type_t v61;
  _BOOL4 v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  char *v69;
  uint64_t *v70;
  _QWORD *v71;
  int *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  _BOOL4 v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  char v124;
  char *v125;
  char *v126;
  _QWORD *v127;
  char v128;
  char *v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t *v139;
  NSObject *v140;
  os_log_type_t v141;
  uint8_t *v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint8_t *v146;
  char *v147;
  uint64_t inited;
  uint64_t v149;
  uint64_t v150;
  char v151;
  char v152;
  void *v153;
  uint64_t v154;
  uint64_t v155;
  id v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t *v178;
  uint64_t *v179;
  uint64_t *v180;
  uint64_t v181;
  int *v182;
  NSObject *v183;
  uint64_t v184;
  _QWORD *v185;
  _QWORD *v186;
  uint8_t *v187;
  char v188;
  uint64_t v189;
  uint64_t v190[3];
  uint64_t v191;
  uint64_t v192[3];
  __int128 v193;
  uint64_t v194;
  _QWORD v195[3];
  uint64_t v196;
  uint64_t v197;
  _QWORD v198[34];

  v186 = a3;
  v187 = (uint8_t *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v8 = MEMORY[0x1E0C80A78](v187);
  v178 = (uint64_t *)((char *)&v170 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x1E0C80A78](v8);
  v184 = (uint64_t)&v170 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v183 = ((char *)&v170 - v13);
  v14 = MEMORY[0x1E0C80A78](v12);
  v182 = (int *)((char *)&v170 - v15);
  v16 = MEMORY[0x1E0C80A78](v14);
  v181 = (uint64_t)&v170 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v180 = (uint64_t *)((char *)&v170 - v19);
  v20 = MEMORY[0x1E0C80A78](v18);
  v179 = (uint64_t *)((char *)&v170 - v21);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v170 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726E50);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v170 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5B8298);
  v28 = MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v170 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&v170 - v31;
  sub_1C0045DFC(a2 + 56, (uint64_t)&v193, &qword_1EF5C2D38);
  if (!v194)
  {
    sub_1C0044B78((uint64_t)&v193, &qword_1EF5C2D38);
LABEL_23:
    sub_1C0045DFC((uint64_t)a1, a4, &qword_1ED726DB0);
    return;
  }
  v176 = a2;
  v177 = v32;
  sub_1C004CD5C(&v193, (uint64_t)v195);
  v33 = *a1;
  v34 = a1[1];
  v35 = HIBYTE(v34) & 0xF;
  if ((v34 & 0x2000000000000000) == 0)
    v35 = *a1 & 0xFFFFFFFFFFFFLL;
  if (!v35)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v195);
    goto LABEL_23;
  }
  v185 = a1;
  v175 = a4;
  v37 = v196;
  v36 = v197;
  __swift_project_boxed_opaque_existential_1(v195, v196);
  v38 = (void *)(*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v36 + 24))(v33, v34, v37, v36);
  if (v4)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v195);
    *v186 = v4;
    return;
  }
  if (v38)
  {
    v39 = v38;
    sub_1C01FFC7C();
    v40 = type metadata accessor for Contact();
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v40);

  }
  else
  {
    v42 = type metadata accessor for Contact();
    v41 = __swift_storeEnumTagSinglePayload((uint64_t)v26, 1, 1, v42);
  }
  a4 = v175;
  MEMORY[0x1E0C80A78](v41);
  *(&v170 - 2) = v43;
  v44 = (uint64_t)v177;
  sub_1C0287DC0((void (*)(char *))sub_1C02A2F38, (uint64_t)v177);
  sub_1C0044B78((uint64_t)v26, &qword_1ED726E50);
  v45 = v44;
  sub_1C0045DFC(v44, (uint64_t)v30, (uint64_t *)&unk_1EF5B8298);
  if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, (uint64_t)v187) == 1)
  {
    sub_1C0044B78((uint64_t)v30, (uint64_t *)&unk_1EF5B8298);
    if (qword_1ED727970 != -1)
      swift_once();
    v46 = sub_1C0303B98();
    __swift_project_value_buffer(v46, (uint64_t)&unk_1ED7295C8);
    a1 = v185;
    v47 = v179;
    sub_1C0045DFC((uint64_t)v185, (uint64_t)v179, &qword_1ED726DB0);
    v48 = sub_1C0303B80();
    v49 = sub_1C03042E8();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = swift_slowAlloc();
      v174 = 0;
      v51 = (uint8_t *)v50;
      v52 = swift_slowAlloc();
      *(_QWORD *)&v193 = v52;
      *(_DWORD *)v51 = 136315138;
      v187 = v51 + 4;
      v53 = (uint64_t)v47;
      v54 = *v47;
      v55 = v47[1];
      swift_bridgeObjectRetain();
      v192[0] = sub_1C003E6D8(v54, v55, (uint64_t *)&v193);
      a1 = v185;
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      sub_1C0044B78(v53, &qword_1ED726DB0);
      _os_log_impl(&dword_1C0039000, v48, v49, "[UCG] Unable to find candidate %s in the contact store. Skipping hydration of it...", v51, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v52, -1, -1);
      MEMORY[0x1C3B98378](v51, -1, -1);

      v56 = (uint64_t)v177;
    }
    else
    {

      sub_1C0044B78((uint64_t)v47, &qword_1ED726DB0);
      v56 = v45;
    }
    sub_1C0044B78(v56, (uint64_t *)&unk_1EF5B8298);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v195);
    goto LABEL_23;
  }
  sub_1C005A718((uint64_t)v30, (uint64_t)v23, &qword_1ED726DB0);
  if (qword_1ED727970 != -1)
    swift_once();
  v57 = sub_1C0303B98();
  v58 = __swift_project_value_buffer(v57, (uint64_t)&unk_1ED7295C8);
  v59 = v180;
  sub_1C0045DFC((uint64_t)v185, (uint64_t)v180, &qword_1ED726DB0);
  v173 = v58;
  v60 = sub_1C0303B80();
  v61 = sub_1C03042E8();
  v62 = os_log_type_enabled(v60, v61);
  v174 = 0;
  if (v62)
  {
    v63 = swift_slowAlloc();
    v186 = (_QWORD *)swift_slowAlloc();
    *(_QWORD *)&v193 = v186;
    *(_DWORD *)v63 = 136315394;
    v64 = *v59;
    v65 = v59[1];
    swift_bridgeObjectRetain();
    v192[0] = sub_1C003E6D8(v64, v65, (uint64_t *)&v193);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    sub_1C0044B78((uint64_t)v59, &qword_1ED726DB0);
    *(_WORD *)(v63 + 12) = 2080;
    swift_beginAccess();
    v66 = Contact.description.getter();
    v192[0] = sub_1C003E6D8(v66, v67, (uint64_t *)&v193);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v60, v61, "[UCG] Found candidate %s in address book: %s", (uint8_t *)v63, 0x16u);
    v68 = v186;
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v68, -1, -1);
    MEMORY[0x1C3B98378](v63, -1, -1);
  }
  else
  {
    sub_1C0044B78((uint64_t)v59, &qword_1ED726DB0);
  }

  v69 = (char *)v185 + *((int *)v187 + 9);
  memcpy(v198, v69 + 8, 0x108uLL);
  v70 = (uint64_t *)(v176 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_tokenizer);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v176 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_tokenizer), *(_QWORD *)(v176 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_tokenizer + 24));
  sub_1C003F648(v198);
  sub_1C020A430();
  v186 = v71;
  sub_1C0040644(v198);
  v72 = (int *)type metadata accessor for ContactResolver.SignalSet(0);
  v73 = &v69[v72[33]];
  v74 = *((_QWORD *)v73 + 4);
  v179 = v70;
  if (v74)
  {
    v75 = *((_QWORD *)v73 + 3);
    v76 = v70[3];
    v77 = v70[4];
    __swift_project_boxed_opaque_existential_1(v70, v76);
    swift_bridgeObjectRetain();
    v78 = sub_1C00E59C4(v75, v74, v76, v77);
    v79 = sub_1C01AACEC(v78);
    swift_bridgeObjectRelease();
  }
  else
  {
    v79 = 0;
  }
  v80 = v181;
  sub_1C0045DFC((uint64_t)v185, v181, &qword_1ED726DB0);
  v81 = (uint64_t)v187;
  if (v79)
  {
    v180 = (uint64_t *)v79;
    v82 = v179;
  }
  else
  {
    v82 = v179;
    __swift_project_boxed_opaque_existential_1(v179, v179[3]);
    sub_1C020A6E8();
    v180 = (uint64_t *)v83;
  }
  sub_1C0044B78(v80, &qword_1ED726DB0);
  swift_beginAccess();
  __swift_project_boxed_opaque_existential_1(v82, v82[3]);
  sub_1C020A6E8();
  v181 = v84;
  v85 = *((_QWORD *)v73 + 6);
  if (v85)
  {
    v86 = *((_QWORD *)v73 + 5);
    v87 = v82;
    v88 = v82[3];
    v89 = v82[4];
    __swift_project_boxed_opaque_existential_1(v87, v88);
    swift_bridgeObjectRetain();
    v90 = sub_1C00E59C4(v86, v85, v88, v89);
    v91 = sub_1C01AACEC(v90);
    swift_bridgeObjectRelease();
  }
  else
  {
    v91 = 0;
  }
  v93 = (uint64_t)v182;
  v92 = (uint64_t *)v183;
  sub_1C0045DFC((uint64_t)v185, (uint64_t)v182, &qword_1ED726DB0);
  if (!v91)
  {
    __swift_project_boxed_opaque_existential_1(v179, v179[3]);
    sub_1C020A6E8();
    v91 = v94;
  }
  sub_1C0044B78(v93, &qword_1ED726DB0);
  sub_1C0045DFC((uint64_t)v185, (uint64_t)v92, &qword_1ED726DB0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v95 = v181;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v96 = sub_1C0303B80();
  v97 = sub_1C03042E8();
  v183 = v96;
  v172 = v97;
  v98 = os_log_type_enabled(v96, v97);
  v182 = v72;
  if (v98)
  {
    v99 = v92;
    v100 = swift_slowAlloc();
    v171 = swift_slowAlloc();
    v192[0] = v171;
    *(_DWORD *)v100 = 136316162;
    v101 = *v99;
    v102 = v99[1];
    swift_bridgeObjectRetain();
    v191 = sub_1C003E6D8(v101, v102, v192);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    sub_1C0044B78((uint64_t)v99, &qword_1ED726DB0);
    *(_WORD *)(v100 + 12) = 2080;
    swift_bridgeObjectRetain();
    v103 = sub_1C030424C();
    v105 = v104;
    swift_bridgeObjectRelease();
    v191 = sub_1C003E6D8(v103, v105, v192);
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v100 + 22) = 2080;
    v106 = swift_bridgeObjectRetain();
    v107 = sub_1C030424C();
    v109 = v108;
    v180 = (uint64_t *)v106;
    swift_bridgeObjectRelease();
    v191 = sub_1C003E6D8(v107, v109, v192);
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v100 + 32) = 2080;
    swift_bridgeObjectRetain();
    v110 = sub_1C030424C();
    v112 = v111;
    swift_bridgeObjectRelease();
    v191 = sub_1C003E6D8(v110, v112, v192);
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v100 + 42) = 2080;
    swift_bridgeObjectRetain();
    v113 = sub_1C030424C();
    v115 = v114;
    swift_bridgeObjectRelease();
    v116 = v113;
    v95 = v181;
    v117 = (uint64_t)v185;
    v191 = sub_1C003E6D8(v116, v115, v192);
    v72 = v182;
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    v81 = (uint64_t)v187;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v183, (os_log_type_t)v172, "[UCG] Candidate %s match:\n  queryTokens=%s matchedQueryTokens=%s\n  contactTokens=%s matchedContactTokens=%s", (uint8_t *)v100, 0x34u);
    v118 = v91;
    v119 = v171;
    swift_arrayDestroy();
    v120 = v119;
    v91 = v118;
    MEMORY[0x1C3B98378](v120, -1, -1);
    MEMORY[0x1C3B98378](v100, -1, -1);

    v121 = (uint64_t)v180;
  }
  else
  {
    sub_1C0044B78((uint64_t)v92, &qword_1ED726DB0);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v121 = (uint64_t)v180;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v117 = (uint64_t)v185;
  }
  v122 = sub_1C01F22D0(v91, v95);
  swift_bridgeObjectRelease();
  v123 = v184;
  sub_1C0045DFC(v117, v184, &qword_1ED726DB0);
  if ((v122 & 1) != 0)
    v124 = *(_BYTE *)(v123 + *(int *)(v81 + 36) + 335) ^ 1;
  else
    v124 = 0;
  sub_1C0044B78(v123, &qword_1ED726DB0);
  swift_beginAccess();
  v125 = &v23[*(int *)(v81 + 36)];
  v125[334] = v124 & 1;
  v126 = &v125[v72[33]];
  v126[9] = v124 & 1;
  *(_QWORD *)v126 = *(_QWORD *)(v95 + 16);
  swift_bridgeObjectRelease();
  v127 = v186;
  v128 = sub_1C01F22D0(v121, (uint64_t)v186);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v129 = &v23[*(int *)(v81 + 36)];
  v129[333] = v128 & 1;
  v129[v72[33] + 8] = v128 & 1;
  v130 = *((_QWORD *)v23 + 15);
  v131 = *((_QWORD *)v23 + 16);
  v132 = HIBYTE(v131) & 0xF;
  if ((v131 & 0x2000000000000000) == 0)
    v132 = v130 & 0xFFFFFFFFFFFFLL;
  if (v132)
  {
    v133 = v179[3];
    v134 = v179[4];
    __swift_project_boxed_opaque_existential_1(v179, v133);
    swift_bridgeObjectRetain();
    v135 = sub_1C00E59C4(v130, v131, v133, v134);
    swift_bridgeObjectRelease();
    v136 = sub_1C01AACEC(v135);
    v137 = sub_1C01F22D0(v136, (uint64_t)v127);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v138 = (uint64_t)v185;
    if ((v137 & 1) != 0)
    {
      v139 = v178;
      sub_1C0045DFC((uint64_t)v185, (uint64_t)v178, &qword_1ED726DB0);
      v140 = sub_1C0303B80();
      v141 = sub_1C03042E8();
      if (os_log_type_enabled(v140, v141))
      {
        v142 = (uint8_t *)swift_slowAlloc();
        v143 = swift_slowAlloc();
        v190[0] = v143;
        *(_DWORD *)v142 = 136315138;
        v186 = v142 + 4;
        v144 = *v139;
        v145 = v139[1];
        swift_bridgeObjectRetain();
        v189 = sub_1C003E6D8(v144, v145, v190);
        v138 = (uint64_t)v185;
        sub_1C03044B0();
        v81 = (uint64_t)v187;
        swift_bridgeObjectRelease();
        sub_1C0044B78((uint64_t)v139, &qword_1ED726DB0);
        _os_log_impl(&dword_1C0039000, v140, v141, "[UCG] Candidate %s is an exact nickname match. Overriding exact match signals...", v142, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B98378](v143, -1, -1);
        v146 = v142;
        v72 = v182;
        MEMORY[0x1C3B98378](v146, -1, -1);
      }
      else
      {
        sub_1C0044B78((uint64_t)v139, &qword_1ED726DB0);
      }

      swift_beginAccess();
      v147 = &v23[*(int *)(v81 + 36)];
      v147[333] = 1;
      v147[v72[33] + 8] = 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v138 = (uint64_t)v185;
  }
  swift_beginAccess();
  v23[*(int *)(v81 + 36) + v72[59]] = 1;
  *((_QWORD *)v23 + 27) = *(_QWORD *)(v138 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727640);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0322FF0;
  *(_QWORD *)(inited + 32) = swift_getKeyPath();
  *(_QWORD *)(inited + 40) = swift_getKeyPath();
  *(_QWORD *)(inited + 48) = swift_getKeyPath();
  v189 = inited;
  sub_1C0304150();
  v149 = v189;
  sub_1C02CFE78(0, (v189 & 0xC000000000000001) == 0, v189);
  sub_1C02CFE78(2uLL, (v149 & 0xC000000000000001) == 0, v149);
  v150 = 0;
  do
  {
    if ((v149 & 0xC000000000000001) != 0)
      MEMORY[0x1C3B975EC](v150, v149);
    else
      swift_retain();
    swift_beginAccess();
    swift_getAtKeyPath();
    v151 = v188;
    swift_endAccess();
    if ((v151 & 1) != 0)
      v152 = 1;
    else
      v152 = v23[*(int *)(v81 + 36) + v72[36]];
    ++v150;
    swift_beginAccess();
    v188 = v152;
    swift_setAtWritableKeyPath();
    swift_endAccess();
    swift_release();
  }
  while (v150 != 3);
  swift_bridgeObjectRelease();
  v153 = *(void **)(v176 + 104);
  if (!v153)
  {
    sub_1C0044B78((uint64_t)v177, (uint64_t *)&unk_1EF5B8298);
    goto LABEL_67;
  }
  v155 = *(_QWORD *)v23;
  v154 = *((_QWORD *)v23 + 1);
  v156 = v153;
  swift_bridgeObjectRetain();
  v157 = objc_msgSend(v156, sel_identifier);
  v158 = sub_1C0303EB0();
  v160 = v159;

  if (v155 == v158 && v154 == v160)
  {
    swift_bridgeObjectRelease_n();
    v163 = (uint64_t)v182;
LABEL_69:
    v165 = objc_msgSend(v156, sel_identifier);
    v166 = sub_1C0303EB0();
    v168 = v167;

    swift_bridgeObjectRelease();
    if ((v168 & 0x2000000000000000) != 0)
      v169 = HIBYTE(v168) & 0xF;
    else
      v169 = v166 & 0xFFFFFFFFFFFFLL;
    sub_1C0044B78((uint64_t)v177, (uint64_t *)&unk_1EF5B8298);
    v164 = v175;
    if (v169)
    {
      swift_beginAccess();
      v23[16] = 1;
      v23[*((int *)v187 + 9) + *(int *)(v163 + 136)] = 1;
    }
    goto LABEL_74;
  }
  v162 = sub_1C0304A08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v163 = (uint64_t)v182;
  if ((v162 & 1) != 0)
    goto LABEL_69;
  sub_1C0044B78((uint64_t)v177, (uint64_t *)&unk_1EF5B8298);

LABEL_67:
  v164 = v175;
LABEL_74:
  sub_1C0045DFC((uint64_t)v23, v164, &qword_1ED726DB0);
  sub_1C0044B78((uint64_t)v23, &qword_1ED726DB0);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v195);
}

void sub_1C0295990(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  sub_1C00638E8(a1, a3, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  sub_1C00638E8(a2 + *(int *)(v5 + 36), a3 + *(int *)(v5 + 36), type metadata accessor for ContactResolver.SignalSet);
}

uint64_t sub_1C02959F4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0295A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t inited;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a2;
  v45 = a3;
  v4 = type metadata accessor for ContactResolver.SignalSet(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1ED727970 != -1)
    swift_once();
  v11 = sub_1C0303B98();
  v12 = __swift_project_value_buffer(v11, (uint64_t)&unk_1ED7295C8);
  sub_1C0045DFC(a1, (uint64_t)v10, &qword_1ED726DB0);
  v13 = sub_1C0303B80();
  v14 = sub_1C03042E8();
  v15 = os_log_type_enabled(v13, v14);
  v43 = v6;
  v44 = v4;
  v46 = v7;
  if (v15)
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v50 = v17;
    v42 = v12;
    *(_DWORD *)v16 = 136315138;
    *(_QWORD *)&v47 = a1;
    v18 = *v10;
    v19 = v10[1];
    swift_bridgeObjectRetain();
    v49 = sub_1C003E6D8(v18, v19, &v50);
    sub_1C03044B0();
    a1 = v47;
    swift_bridgeObjectRelease();
    sub_1C0044B78((uint64_t)v10, &qword_1ED726DB0);
    _os_log_impl(&dword_1C0039000, v13, v14, "[UCG] We found candidate %s multiple ways - attempting to de-duplicate it...", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v17, -1, -1);
    v20 = v16;
    v7 = v46;
    MEMORY[0x1C3B98378](v20, -1, -1);
  }
  else
  {
    sub_1C0044B78((uint64_t)v10, &qword_1ED726DB0);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8FD8);
  inited = swift_initStackObject();
  v47 = xmmword_1C03084B0;
  *(_OWORD *)(inited + 16) = xmmword_1C03084B0;
  *(_QWORD *)(inited + 32) = swift_getKeyPath();
  *(_QWORD *)(inited + 40) = 10;
  *(_QWORD *)(inited + 48) = swift_getKeyPath();
  *(_QWORD *)(inited + 56) = 10;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED727010);
  v22 = *(_QWORD *)(v8 + 72);
  v23 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = v47;
  sub_1C0045DFC(a1, v24 + v23, &qword_1ED726DB0);
  sub_1C0045DFC(v48, v24 + v23 + v22, &qword_1ED726DB0);
  v50 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C0289BB8(&v50, inited);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1C00F71B4();
  v25 = v50;
  swift_retain_n();
  v26 = sub_1C0303B80();
  v27 = sub_1C03042E8();
  if (!os_log_type_enabled(v26, (os_log_type_t)v27))
  {

    swift_release_n();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v28 = swift_slowAlloc();
  v29 = swift_slowAlloc();
  v50 = v29;
  *(_DWORD *)v28 = 136315650;
  if (!*(_QWORD *)(v25 + 16))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v42 = v29;
  LODWORD(v47) = v27;
  v48 = v23;
  v30 = v25 + v23;
  v31 = *(_QWORD *)(v25 + v23);
  v32 = *(_QWORD *)(v25 + v23 + 8);
  swift_bridgeObjectRetain();
  v49 = sub_1C003E6D8(v31, v32, &v50);
  sub_1C03044B0();
  swift_bridgeObjectRelease();
  *(_WORD *)(v28 + 12) = 2080;
  v33 = v30 + *(int *)(v7 + 36);
  v34 = (uint64_t)v43;
  sub_1C00638E8(v33, (uint64_t)v43, type metadata accessor for ContactResolver.SignalSet);
  v35 = sub_1C0303EF8();
  v49 = sub_1C003E6D8(v35, v36, &v50);
  sub_1C03044B0();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v28 + 22) = 2080;
  if (*(_QWORD *)(v25 + 16) >= 2uLL)
  {
    sub_1C00638E8(v30 + v22 + *(int *)(v46 + 36), v34, type metadata accessor for ContactResolver.SignalSet);
    v37 = sub_1C0303EF8();
    v49 = sub_1C003E6D8(v37, v38, &v50);
    sub_1C03044B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v26, (os_log_type_t)v47, "[UCG] Picking match [a] over [b] in de-dup for %s:\n  [a] %s\n  [b] %s", (uint8_t *)v28, 0x20u);
    v39 = v42;
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v39, -1, -1);
    MEMORY[0x1C3B98378](v28, -1, -1);

    v23 = v48;
LABEL_11:
    if (*(_QWORD *)(v25 + 16))
    {
      sub_1C0045DFC(v25 + v23, v45, &qword_1ED726DB0);
      return swift_release();
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C0295FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  _QWORD v16[4];
  _QWORD *v17;

  v16[2] = a1;
  swift_bridgeObjectRetain();
  sub_1C0270FFC((uint64_t (*)(_QWORD *))sub_1C02A3768, (uint64_t)v16, a2);
  v4 = v3;
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
    v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    sub_1C00B1A78();
    v6 = v17;
    v7 = v17[2];
    v8 = 40;
    do
    {
      v9 = *(_QWORD *)(v4 + v8);
      v17 = v6;
      if (v7 >= v6[3] >> 1)
      {
        sub_1C00B1A78();
        v6 = v17;
      }
      v6[2] = v7 + 1;
      v6[v7 + 4] = v9;
      v8 += 16;
      ++v7;
      --v5;
    }
    while (v5);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v11 = v6[2];
  if (v11)
  {
    v12 = 0;
    v13 = v6 + 4;
    while (1)
    {
      v14 = *v13++;
      v15 = __OFADD__(v12, v14);
      v12 += v14;
      if (v15)
        break;
      if (!--v11)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    v12 = 0;
LABEL_14:
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_1C02960F4()
{
  unsigned __int8 v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  swift_getAtKeyPath();
  return v1;
}

uint64_t sub_1C0296148(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BYTE *v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[34];
  uint64_t v32;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v30 = (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v28 - v6);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v28 - v9;
  v11 = (_BYTE *)(a1 + *(int *)(v8 + 36));
  v12 = type metadata accessor for ContactResolver.SignalSet(0);
  v13 = v11[*(int *)(v12 + 204)];
  sub_1C0045DFC(a1, (uint64_t)v10, &qword_1ED726DB0);
  if ((v13 & 1) != 0)
    v14 = 1;
  else
    v14 = v10[*(int *)(v2 + 36) + *(int *)(v12 + 140)];
  sub_1C0044B78((uint64_t)v10, &qword_1ED726DB0);
  memcpy(v31, v11 + 8, 0x108uLL);
  v15 = *(_QWORD *)(sub_1C008F258() + 16);
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(sub_1C02038FC() + 16);
  swift_bridgeObjectRelease();
  result = 1;
  if (v15 && v16 && (v14 & 1) == 0 && (v11[333] & 1) == 0 && (v11[334] & 1) == 0)
  {
    if (qword_1ED727970 != -1)
      swift_once();
    v18 = sub_1C0303B98();
    __swift_project_value_buffer(v18, (uint64_t)&unk_1ED7295C8);
    sub_1C0045DFC(a1, (uint64_t)v7, &qword_1ED726DB0);
    v19 = v30;
    sub_1C0045DFC(a1, v30, &qword_1ED726DB0);
    v20 = sub_1C0303B80();
    v21 = sub_1C03042E8();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v31[0] = v29;
      *(_DWORD *)v22 = 136315394;
      v23 = *v7;
      v24 = v7[1];
      swift_bridgeObjectRetain();
      v32 = sub_1C003E6D8(v23, v24, v31);
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      sub_1C0044B78((uint64_t)v7, &qword_1ED726DB0);
      *(_WORD *)(v22 + 12) = 2080;
      v25 = sub_1C00C6F6C();
      v32 = sub_1C003E6D8(v25, v26, v31);
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      sub_1C0044B78(v19, &qword_1ED726DB0);
      _os_log_impl(&dword_1C0039000, v20, v21, "[UCG] Discarding overmatched candidate %s (queryOvermatch && nameOvermatch): %s", (uint8_t *)v22, 0x16u);
      v27 = v29;
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v27, -1, -1);
      MEMORY[0x1C3B98378](v22, -1, -1);
    }
    else
    {
      sub_1C0044B78((uint64_t)v7, &qword_1ED726DB0);
      sub_1C0044B78(v19, &qword_1ED726DB0);
    }

    return 0;
  }
  return result;
}

void sub_1C02964AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  float v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  OUTLINED_FUNCTION_18_0();
  v53 = v2;
  v4 = v3;
  v5 = sub_1C0301D5C();
  v55 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_27();
  v54 = v7;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_37();
  v52 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
  OUTLINED_FUNCTION_12_0();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v45 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v45 - v17;
  v19 = type metadata accessor for InferenceEuclidLog(0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_58_0();
  sub_1C017FFA8(v4, v1);
  v21 = v1 + *(int *)(v19 + 20);
  v22 = type metadata accessor for InferenceEuclidDebugMetrics(0);
  v23 = *(int *)(v22 + 28);
  v50 = v21;
  v24 = v21 + v23;
  if (*(_QWORD *)(v24 + 8) != 1)
  {
    v25 = *(double *)(v0 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_e3TrialFactors + 48);
    *(float *)(v24 + 16) = v25;
    *(_BYTE *)(v24 + 20) = 0;
  }
  v26 = *(_QWORD *)(v53 + 16);
  if (v26)
  {
    v45 = v22;
    v46 = v18;
    v47 = v1;
    v48 = v13;
    v49 = v0;
    OUTLINED_FUNCTION_47();
    v27 = 0;
    v28 = MEMORY[0x1E0DEE9D8];
    v51 = v26;
    do
    {
      sub_1C0301D08();
      OUTLINED_FUNCTION_33_1((uint64_t)v16, 1, v5);
      if (v29)
      {
        sub_1C0044B78((uint64_t)v16, &qword_1ED728070);
      }
      else
      {
        v30 = v52;
        OUTLINED_FUNCTION_214(v52, (uint64_t)v16);
        OUTLINED_FUNCTION_214(v54, v30);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          OUTLINED_FUNCTION_79_6();
          sub_1C004FA94();
          v28 = v37;
        }
        v33 = *(_QWORD *)(v28 + 16);
        v32 = *(_QWORD *)(v28 + 24);
        if (v33 >= v32 >> 1)
        {
          OUTLINED_FUNCTION_74_0(v32);
          sub_1C004FA94();
          v28 = v38;
        }
        *(_QWORD *)(v28 + 16) = v33 + 1;
        OUTLINED_FUNCTION_161_2();
        OUTLINED_FUNCTION_214(v34 + v35 * v33, v36);
        v26 = v51;
      }
      ++v27;
    }
    while (v26 != v27);
    OUTLINED_FUNCTION_14();
    v13 = v48;
    v18 = v46;
    v1 = v47;
    v22 = v45;
  }
  else
  {
    v28 = MEMORY[0x1E0DEE9D8];
  }
  v39 = *(int *)(v22 + 20);
  v40 = v50;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v40 + v39) = v28;
  OUTLINED_FUNCTION_65();
  sub_1C0289EFC();
  if (v41 == 3)
  {
    OUTLINED_FUNCTION_232();
    __swift_storeEnumTagSinglePayload(v42, v43, v44, v5);
  }
  else
  {
    sub_1C028A0AC();
  }
  sub_1C006CC50((uint64_t)v18, v40, &qword_1ED728070);
  sub_1C00438F0();
  sub_1C00A36D0();
  sub_1C0044B78((uint64_t)v13, &qword_1ED728070);
  sub_1C003DD84(v1, type metadata accessor for InferenceEuclidLog);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C0296824(uint64_t a1)
{
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;

  if (qword_1ED727970 != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_9_0();
  v5 = __swift_project_value_buffer(v4, (uint64_t)&unk_1ED7295C8);
  OUTLINED_FUNCTION_9_2();
  sub_1C0303B80();
  v6 = OUTLINED_FUNCTION_9_1();
  if (OUTLINED_FUNCTION_78(v6))
  {
    v7 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v19 = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v7 = 136315138;
    v8 = OUTLINED_FUNCTION_44();
    v9 = MEMORY[0x1C3B97040](v8, MEMORY[0x1E0DEA968]);
    v11 = v10;
    OUTLINED_FUNCTION_33();
    sub_1C003E6D8(v9, v11, &v19);
    sub_1C03044B0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_18();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v5, v2, "[UCG][ASR-E3] Running Euclid embedding on queries: %s", v7);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_2();
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_e3Orchestrator))
    return MEMORY[0x1E0DEE9D8];
  v13 = *(double *)(v1 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_e3TrialFactors + 40);
  v12 = *(double *)(v1 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_e3TrialFactors + 48);
  v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_e3TrialFactors + 24);
  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_e3TrialFactors + 32);
  v16 = (_QWORD *)(v1 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_tokenizer);
  OUTLINED_FUNCTION_10_6();
  v17 = sub_1C017F76C(a1, v14, v12, v13, v15, v16);
  OUTLINED_FUNCTION_5_3();
  return v17;
}

uint64_t sub_1C0296B9C(uint64_t a1, const void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  uint64_t v7;
  _BYTE v8[40];
  _BYTE v9[264];

  memcpy(v9, a2, sizeof(v9));
  sub_1C0045DFC(v2 + 56, (uint64_t)&v6, &qword_1EF5C2D38);
  if (v7)
  {
    v4 = sub_1C004CD5C(&v6, (uint64_t)v8);
    MEMORY[0x1E0C80A78](v4);
    sub_1C00E4BF4();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v8);
    if (v3)
      return v2;
  }
  else
  {
    sub_1C0044B78((uint64_t)&v6, &qword_1EF5C2D38);
  }
  v2 = sub_1C02971BC();
  OUTLINED_FUNCTION_17_0();
  return v2;
}

void sub_1C0296CAC(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  float v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  os_log_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _BYTE *v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  uint64_t v54;
  _QWORD v55[2];
  os_log_t v56;
  int v57;
  uint64_t v58;
  char *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  double v69;
  uint64_t v70[34];

  v67 = a4;
  v63 = a3;
  v66 = type metadata accessor for ContactResolver.SignalSet(0);
  MEMORY[0x1E0C80A78](v66);
  v64 = (uint64_t)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C0301A5C();
  v61 = *(_QWORD *)(v7 - 8);
  v62 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Contact();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v55 - v14;
  v16 = *(_QWORD *)(a1 + 8);
  v65 = *(_QWORD *)a1;
  v17 = *(_QWORD *)(a1 + 16);
  v18 = *(float *)(a1 + 24);
  v20 = a2[3];
  v19 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v20);
  v21 = v68;
  v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 24))(v16, v17, v20, v19);
  if (!v21)
  {
    v68 = v9;
    v23 = (uint64_t)v13;
    v25 = v65;
    v24 = v66;
    if (v22)
    {
      v60 = v22;
      sub_1C01FFC7C();
      if (qword_1ED727970 != -1)
        swift_once();
      v26 = sub_1C0303B98();
      __swift_project_value_buffer(v26, (uint64_t)&unk_1ED7295C8);
      v59 = v15;
      sub_1C00638E8((uint64_t)v15, v23, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
      swift_bridgeObjectRetain_n();
      v27 = v17;
      swift_bridgeObjectRetain_n();
      v28 = sub_1C0303B80();
      v29 = sub_1C03042E8();
      v30 = v29;
      v31 = v24;
      if (os_log_type_enabled(v28, v29))
      {
        v32 = swift_slowAlloc();
        v57 = v30;
        v33 = v23;
        v34 = v32;
        v58 = swift_slowAlloc();
        v70[0] = v58;
        *(_DWORD *)v34 = 136315394;
        v55[0] = v34 + 4;
        v35 = v68;
        v56 = v28;
        Contact.nameComponents.getter();
        v36 = sub_1C0301A44();
        v55[1] = v27;
        v38 = v37;
        v39 = v35;
        v31 = v24;
        (*(void (**)(char *, uint64_t))(v61 + 8))(v39, v62);
        v69 = COERCE_DOUBLE(sub_1C003E6D8(v36, v38, v70));
        sub_1C03044B0();
        swift_bridgeObjectRelease();
        sub_1C003DD84(v33, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
        *(_WORD *)(v34 + 12) = 2048;
        v69 = v18;
        sub_1C03044B0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v40 = v56;
        _os_log_impl(&dword_1C0039000, v56, (os_log_type_t)v57, "[UCG][ASR-E3] Euclid candidate found: %s, with score: %f", (uint8_t *)v34, 0x16u);
        v41 = v58;
        swift_arrayDestroy();
        MEMORY[0x1C3B98378](v41, -1, -1);
        MEMORY[0x1C3B98378](v34, -1, -1);

      }
      else
      {
        sub_1C003DD84(v23, (uint64_t (*)(_QWORD))type metadata accessor for Contact);

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      v43 = v67;
      v44 = v25;
      v46 = v63;
      v45 = v64;
      sub_1C010E578(v64);
      memcpy(v70, (const void *)(v45 + 8), 0x108uLL);
      sub_1C003F648(v46);
      sub_1C0040644(v70);
      memcpy((void *)(v45 + 8), v46, 0x108uLL);
      *(_BYTE *)(v45 + *(int *)(v31 + 232)) = 1;
      sub_1C01884E8(1, v44);
      v47 = (_BYTE *)(v45 + *(int *)(v31 + 132));
      v47[10] = v48 & 1;
      sub_1C01884E8(4, v44);
      v47[11] = v49 & 1;
      sub_1C01884E8(2, v44);
      v47[12] = v50 & 1;
      sub_1C01884E8(16, v44);
      v47[15] = v51 & 1;
      sub_1C01884E8(32, v44);
      v53 = v52;

      v47[8] = v53 & 1;
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
      sub_1C00638E8(v45, v43 + *(int *)(v54 + 36), type metadata accessor for ContactResolver.SignalSet);
      sub_1C004555C((uint64_t)v59, v43, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
      __swift_storeEnumTagSinglePayload(v43, 0, 1, v54);
      sub_1C003DD84(v45, type metadata accessor for ContactResolver.SignalSet);
    }
    else
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
      __swift_storeEnumTagSinglePayload(v67, 1, 1, v42);
    }
  }
}

uint64_t sub_1C02971BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_10_6();
  v0 = OUTLINED_FUNCTION_189();
  sub_1C02863D4(v0, v1);
  sub_1C01F16E4();
  v3 = v2;
  OUTLINED_FUNCTION_33();
  return v3;
}

void sub_1C029722C(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  unsigned __int16 v5;

  v5 = *(_WORD *)(a2 + *(int *)(OUTLINED_FUNCTION_203_0() + 60));
  sub_1C029D6C4(a1, &v5, a3);
}

void sub_1C0297288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  char *v37;
  _QWORD *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  os_log_type_t v51;
  _DWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  NSObject *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  id v67;
  os_log_type_t v68;
  uint8_t *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  Class isa;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  BOOL v87;
  uint64_t v88;
  BOOL v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;

  OUTLINED_FUNCTION_40_0();
  a19 = v23;
  a20 = v24;
  v105 = v22;
  v101 = v21;
  v102 = v25;
  v103 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2858);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_6_0();
  v30 = (v29 - v28);
  v31 = type metadata accessor for AsrPhoneticSequenceFetcher();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_53();
  v104 = v33;
  v34 = OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_160();
  if (qword_1ED728440 != -1)
    goto LABEL_68;
  while (1)
  {
    v36 = (void *)qword_1ED729668;
    v37 = "UCG.SearchForCandidatesByName";
    v38 = (_QWORD *)(v20 + *(int *)(v34 + 20));
    *v38 = "UCG.SearchForCandidatesByName";
    v38[1] = 29;
    v39 = OUTLINED_FUNCTION_299(v36);
    sub_1C0303B68();
    *(_QWORD *)(v20 + *(int *)(v34 + 24)) = v39;
    v40 = v39;
    sub_1C03043E4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
    v41 = OUTLINED_FUNCTION_7_3();
    *(_OWORD *)(v41 + 16) = xmmword_1C0305B60;
    v42 = OUTLINED_FUNCTION_23_0();
    v44 = v43;
    *(_QWORD *)(v41 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v41 + 64) = sub_1C00A6A70();
    *(_QWORD *)(v41 + 32) = v42;
    *(_QWORD *)(v41 + 40) = v44;
    OUTLINED_FUNCTION_53_1();
    sub_1C0303B50();
    OUTLINED_FUNCTION_8_1();

    v45 = (_QWORD *)v101;
    sub_1C0045DFC(v101 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_phoneSequenceFetcher, (uint64_t)v30, &qword_1EF5C2858);
    if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31) == 1)
    {
      sub_1C0044B78((uint64_t)v30, &qword_1EF5C2858);
      v46 = 0;
      v48 = v102;
      v47 = v103;
    }
    else
    {
      v49 = v104;
      sub_1C004555C((uint64_t)v30, v104, (uint64_t (*)(_QWORD))type metadata accessor for AsrPhoneticSequenceFetcher);
      v48 = v102;
      if (qword_1ED727970 != -1)
        swift_once();
      v50 = OUTLINED_FUNCTION_9_0();
      __swift_project_value_buffer(v50, (uint64_t)&unk_1ED7295C8);
      OUTLINED_FUNCTION_9_2();
      OUTLINED_FUNCTION_6_60();
      v51 = OUTLINED_FUNCTION_9_1();
      if (OUTLINED_FUNCTION_37_1(v51))
      {
        v52 = (_DWORD *)OUTLINED_FUNCTION_4_0();
        a10 = (id)OUTLINED_FUNCTION_4_0();
        *v52 = 136315138;
        OUTLINED_FUNCTION_32();
        v54 = OUTLINED_FUNCTION_105_2(v103, v53, (uint64_t *)&a10);
        OUTLINED_FUNCTION_95_3(v54);
        sub_1C03044B0();
        OUTLINED_FUNCTION_8_2();
        OUTLINED_FUNCTION_6_3(&dword_1C0039000, v55, v56, "[UCG] fetching ASR phone sequence for %s");
        OUTLINED_FUNCTION_7_1();
        OUTLINED_FUNCTION_5();
      }

      OUTLINED_FUNCTION_2();
      v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9F970]), sel_init);
      if (v57)
      {
        v58 = v57;
        v47 = v103;
        v59 = v104;
        v60 = sub_1C02EF164(v103, v102);
        v99 = v58;
        if (v60)
        {
          v61 = v60;
          v62 = *(_QWORD *)(v60 + 16);
          if (v62)
          {
            v59 = sub_1C00447B0(0, &qword_1EF5C2D18);
            OUTLINED_FUNCTION_22();
            v63 = (uint64_t *)(v61 + 40);
            do
            {
              v64 = *(v63 - 1);
              v65 = *v63;
              OUTLINED_FUNCTION_9_2();
              sub_1C02EFC18(v64, v65);
              v37 = v66;
              objc_msgSend(v99, sel_addAsrTokens_, v66);
              OUTLINED_FUNCTION_55_0();

              v63 += 2;
              --v62;
            }
            while (v62);
            OUTLINED_FUNCTION_18();
            v47 = v103;
            v49 = v104;
            v45 = (_QWORD *)v101;
          }
          OUTLINED_FUNCTION_18();
          v58 = v99;
        }
        v67 = v58;
        OUTLINED_FUNCTION_6_60();
        v68 = OUTLINED_FUNCTION_9_1();
        if (OUTLINED_FUNCTION_37_1(v68))
        {
          v69 = (uint8_t *)OUTLINED_FUNCTION_4_0();
          *(_DWORD *)v69 = 134217984;
          a10 = objc_msgSend(v67, sel_asrTokensCount);
          sub_1C03044B0();

          OUTLINED_FUNCTION_13_0(&dword_1C0039000, v59, (os_log_type_t)v37, "[UCG] finished fetching asr tokens. Found %lu token(s) matching search string", v69);
          OUTLINED_FUNCTION_5();
        }

        sub_1C003DD84(v49, (uint64_t (*)(_QWORD))type metadata accessor for AsrPhoneticSequenceFetcher);
        v46 = v99;
      }
      else
      {
        OUTLINED_FUNCTION_6_60();
        v70 = OUTLINED_FUNCTION_9_1();
        v47 = v103;
        if (OUTLINED_FUNCTION_13_2(v70))
        {
          v71 = (uint8_t *)OUTLINED_FUNCTION_4_0();
          *(_WORD *)v71 = 0;
          _os_log_impl(&dword_1C0039000, v30, (os_log_type_t)v31, "[UCG] failed to initialize SIRINLUEXTERNALAsrHypothesis. Skipping phone sequence fetching", v71, 2u);
          OUTLINED_FUNCTION_5();
        }

        sub_1C003DD84(v104, (uint64_t (*)(_QWORD))type metadata accessor for AsrPhoneticSequenceFetcher);
        v46 = 0;
      }
    }
    v72 = v45[5];
    v73 = v45[6];
    __swift_project_boxed_opaque_existential_1(v45 + 2, v72);
    v74 = (char *)v45 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_config;
    v75 = OUTLINED_FUNCTION_203_0();
    v76 = (*(uint64_t (**)(uint64_t, uint64_t, char *, void *, uint64_t, uint64_t))(v73 + 8))(v47, v48, &v74[*(int *)(v75 + 32)], v46, v72, v73);
    if (v105)
    {

      sub_1C03043D8();
      v77 = OUTLINED_FUNCTION_168_2();
      OUTLINED_FUNCTION_67_4(v77, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
      goto LABEL_61;
    }
    v78 = v76;
    if (v76 >> 62)
    {
      OUTLINED_FUNCTION_32();
      v79 = sub_1C03047F8();
    }
    else
    {
      v79 = *(_QWORD *)((v76 & 0xFFFFFFFFFFFFF8) + 0x10);
      OUTLINED_FUNCTION_32();
    }
    v100 = v46;
    v80 = MEMORY[0x1E0DEE9D8];
    if (!v79)
      break;
    v105 = v78 & 0xC000000000000001;
    v31 = sub_1C0302D7C();
    v20 = 4;
    v104 = v79;
    while (1)
    {
      v30 = (v20 - 4);
      if (v105)
        MEMORY[0x1C3B975EC](v20 - 4, v78);
      else
        swift_retain();
      v34 = v20 - 3;
      if (__OFADD__(v30, 1))
        break;
      sub_1C0302E54();
      if (a10 || (sub_1C0302F74(), sub_1C0302E54(), a10))
      {
        v81 = sub_1C0302AB8();
        swift_release();
        OUTLINED_FUNCTION_5_3();
        if (v81)
          v30 = v81;
        else
          v30 = MEMORY[0x1E0DEE9D8];
      }
      else
      {
        swift_release();
        v30 = MEMORY[0x1E0DEE9D8];
      }
      isa = v30[2].isa;
      v46 = *(void **)(v80 + 16);
      if (__OFADD__(v46, isa))
        goto LABEL_64;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0
        || (uint64_t)isa + (uint64_t)v46 > *(_QWORD *)(v80 + 24) >> 1)
      {
        sub_1C00AC7FC();
        v80 = v83;
      }
      if (v30[2].isa)
      {
        v46 = *(void **)(v80 + 16);
        v84 = (*(_QWORD *)(v80 + 24) >> 1) - (_QWORD)v46;
        sub_1C03026F8();
        if (v84 < (uint64_t)isa)
          goto LABEL_66;
        OUTLINED_FUNCTION_294();
        OUTLINED_FUNCTION_205_0();
        v87 = v87 || v85 >= v86;
        if (!v87)
        {
          OUTLINED_FUNCTION_18_43();
          OUTLINED_FUNCTION_85_7();
          __break(1u);
          return;
        }
        swift_arrayInitWithCopy();
        if (isa)
        {
          v88 = *(_QWORD *)(v80 + 16);
          v89 = __OFADD__(v88, isa);
          v90 = (char *)isa + v88;
          if (v89)
            goto LABEL_67;
          *(_QWORD *)(v80 + 16) = v90;
        }
      }
      else if (isa)
      {
        goto LABEL_65;
      }
      OUTLINED_FUNCTION_14();
      ++v20;
      if (v34 == v104)
        goto LABEL_54;
    }
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    swift_once();
  }
LABEL_54:
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_44_7();
  v91 = sub_1C0287708(v80, v103, v102, v101);
  OUTLINED_FUNCTION_17_0();
  if (*(_QWORD *)(v91 + 16))
  {

  }
  else
  {
    if (qword_1ED727970 != -1)
      swift_once();
    v92 = OUTLINED_FUNCTION_9_0();
    v93 = __swift_project_value_buffer(v92, (uint64_t)&unk_1ED7295C8);
    OUTLINED_FUNCTION_9_2();
    sub_1C0303B80();
    v94 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_78(v94))
    {
      v95 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      a10 = (id)OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v95 = 136315138;
      OUTLINED_FUNCTION_45_0();
      v97 = OUTLINED_FUNCTION_248(v103, v96, (uint64_t *)&a10);
      OUTLINED_FUNCTION_95_3(v97);
      sub_1C03044B0();
      OUTLINED_FUNCTION_8_2();
      OUTLINED_FUNCTION_13_0(&dword_1C0039000, v93, (os_log_type_t)v46, "[UCG] Span matching for \"%s\" returned empty results", v95);
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_2();
  }
  sub_1C03043D8();
  v98 = OUTLINED_FUNCTION_168_2();
  OUTLINED_FUNCTION_67_4(v98, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
LABEL_61:
  OUTLINED_FUNCTION_28_0();
}

void sub_1C0297C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  char v74;
  char v75;
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  _BOOL4 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  uint64_t v96;
  _OWORD *v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  NSObject *v109;
  const char *v110;
  uint64_t v111;
  os_log_type_t v112;
  uint8_t *v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, char *, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t (*v132)(uint64_t, _QWORD);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(unint64_t, uint64_t, uint64_t);
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  unint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  __n128 *inited;
  __n128 *v154;
  uint64_t v155;
  NSObject *v156;
  os_log_type_t v157;
  uint8_t *v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  void (*v168)(uint64_t, uint64_t);
  uint64_t v169;
  uint64_t v170;
  char v171;
  uint64_t v172;
  uint64_t v173;
  void (*v174)(uint64_t, uint64_t);
  char v175;
  uint64_t v176;
  char v177;
  uint64_t v178;
  unsigned int v179;
  uint64_t v180;
  uint64_t v181;
  NSObject *v182;
  os_log_type_t v183;
  uint8_t *v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void (*v196)(uint64_t, uint64_t, uint64_t);
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  void (*v203)(uint64_t);
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  char v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t (*v210)(uint64_t, _QWORD);
  __n128 *v211;
  __n128 *v212;
  uint64_t v213;
  unint64_t v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  uint64_t v219;
  unint64_t v220;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;
  unint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  NSObject *v238;
  uint64_t v239;
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243[7];
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;

  OUTLINED_FUNCTION_18_0();
  a19 = v22;
  a20 = v23;
  v239 = v24;
  v240 = v25;
  v27 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2D20);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_19((uint64_t)&v216 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = sub_1C0302BA8();
  OUTLINED_FUNCTION_30_21(v30, (uint64_t)&a9);
  v236 = v31;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_19((uint64_t)&v216 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = sub_1C0303358();
  OUTLINED_FUNCTION_30_21(v34, (uint64_t)&v245);
  v224 = v35;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_53();
  v229 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2D28);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_19(v39);
  v40 = sub_1C030337C();
  OUTLINED_FUNCTION_30_21(v40, (uint64_t)&v244);
  v227 = v41;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_27();
  v225 = v43;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v44);
  OUTLINED_FUNCTION_37();
  v226 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2D30);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v46);
  OUTLINED_FUNCTION_1_3();
  v47 = sub_1C0302698();
  OUTLINED_FUNCTION_30_21(v47, (uint64_t)&a13);
  v242 = v48;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v49);
  OUTLINED_FUNCTION_27();
  v233 = v50;
  OUTLINED_FUNCTION_42();
  v52 = MEMORY[0x1E0C80A78](v51);
  v54 = (char *)&v216 - v53;
  MEMORY[0x1E0C80A78](v52);
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_19(v55);
  v234 = sub_1C03026F8();
  v56 = *(_QWORD *)(v234 - 8);
  v57 = MEMORY[0x1E0C80A78](v234);
  v59 = (char *)&v216 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = MEMORY[0x1E0C80A78](v57);
  v62 = (char *)&v216 - v61;
  MEMORY[0x1E0C80A78](v60);
  v64 = (char *)&v216 - v63;
  v65 = sub_1C03026C8();
  if (!v66)
    goto LABEL_23;
  v67 = v65;
  v68 = v66;
  v69 = sub_1C03026A4();
  v232 = v70;
  if (v70)
  {
    v221 = v69;
    v223 = v27;
    v222 = v20;
    v71 = sub_1C03026D4();
    if (!v72)
      goto LABEL_9;
    v73 = v71 == 0x50646574616C6552 && v72 == 0xED00006E6F737265;
    if (v73)
    {
      OUTLINED_FUNCTION_29_0();
    }
    else
    {
      v74 = OUTLINED_FUNCTION_176();
      OUTLINED_FUNCTION_14();
      if ((v74 & 1) == 0)
      {
LABEL_9:
        if (qword_1EF5B8010 != -1)
          swift_once();
        sub_1C005546C(v67, v68, qword_1EF5FC778);
        if ((v75 & 1) != 0
          || (v76 = sub_1C03026BC(), (v76 & 0x100000000) != 0)
          || (v77 = v76, v78 = sub_1C03026E0(), (v78 & 0x100000000) != 0))
        {
          OUTLINED_FUNCTION_26();
          OUTLINED_FUNCTION_29_0();
LABEL_31:
          v97 = (_OWORD *)v223;
          *(_QWORD *)(v223 + 32) = 0;
          *v97 = 0u;
          v97[1] = 0u;
          goto LABEL_32;
        }
        v79 = v77;
        v218 = v77;
        v219 = v78;
        v27 = v240;
        v80 = v239;
        sub_1C029DD18(v240, v239, v79, v78);
        v246 = v27;
        v247 = v80;
        v220 = sub_1C004F408();
        OUTLINED_FUNCTION_47();
        v218 = OUTLINED_FUNCTION_267();
        v246 = v27;
        v247 = v80;
        OUTLINED_FUNCTION_47();
        v81 = (unint64_t)OUTLINED_FUNCTION_267() >> 14;
        if (v81 <= v218 >> 14)
          goto LABEL_18;
        v82 = HIBYTE(v80) & 0xF;
        if ((v80 & 0x2000000000000000) == 0)
          v82 = v240 & 0xFFFFFFFFFFFFLL;
        if (v81 > 4 * v82)
        {
LABEL_18:
          OUTLINED_FUNCTION_26();
          OUTLINED_FUNCTION_29_0();
          if (qword_1ED727970 != -1)
            swift_once();
          v83 = OUTLINED_FUNCTION_9_0();
          __swift_project_value_buffer(v83, (uint64_t)&unk_1ED7295C8);
          (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v59, v222, v234);
          v84 = v239;
          OUTLINED_FUNCTION_9_2();
          v85 = sub_1C0303B80();
          v86 = sub_1C03042F4();
          v87 = os_log_type_enabled(v85, v86);
          v88 = v240;
          if (v87)
          {
            v89 = OUTLINED_FUNCTION_4_0();
            v246 = OUTLINED_FUNCTION_4_0();
            *(_DWORD *)v89 = 136315394;
            OUTLINED_FUNCTION_65();
            v243[0] = sub_1C003E6D8(v88, v84, &v246);
            sub_1C03044B0();
            OUTLINED_FUNCTION_8_2();
            *(_WORD *)(v89 + 12) = 2080;
            v90 = sub_1C02FBE38();
            v243[0] = sub_1C003E6D8(v90, v102, &v246);
            sub_1C03044B0();
            OUTLINED_FUNCTION_14();
            OUTLINED_FUNCTION_190_0();
            OUTLINED_FUNCTION_38_8(&dword_1C0039000, v85, v86, "[UCG] Indexes look wrong for query string '%s': %s", (uint8_t *)v89);
            OUTLINED_FUNCTION_21_2();
            OUTLINED_FUNCTION_5();
          }
          OUTLINED_FUNCTION_2();
          OUTLINED_FUNCTION_190_0();

          goto LABEL_31;
        }
        v98 = sub_1C0304090();
        v219 = MEMORY[0x1C3B96E30](v98);
        v239 = v99;
        OUTLINED_FUNCTION_14();
        if (v67 == sub_1C0303EB0() && v68 == v100)
        {
          OUTLINED_FUNCTION_14();
        }
        else
        {
          v27 = OUTLINED_FUNCTION_176();
          OUTLINED_FUNCTION_14();
          if ((v27 & 1) == 0)
          {
            if (v67 == 0xD00000000000001BLL && v68 == 0x80000001C03323C0)
            {
              v218 = 0;
              v217 = 0;
              OUTLINED_FUNCTION_68_12();
              goto LABEL_48;
            }
            OUTLINED_FUNCTION_176();
            OUTLINED_FUNCTION_68_12();
            if ((v160 & 1) != 0)
            {
              v104 = 0;
              v103 = 0;
            }
            else
            {
              OUTLINED_FUNCTION_32();
              v104 = v67;
              v103 = v68;
            }
LABEL_44:
            if (v67 == 0xD000000000000014 && v68 == 0x80000001C0335F20)
            {
              OUTLINED_FUNCTION_29_0();
              v105 = v222;
LABEL_50:
              OUTLINED_FUNCTION_14();
              v107 = v234;
              if (qword_1ED727970 != -1)
                swift_once();
              v108 = OUTLINED_FUNCTION_9_0();
              v109 = __swift_project_value_buffer(v108, (uint64_t)&unk_1ED7295C8);
              v110 = *(const char **)(v56 + 16);
              v111 = OUTLINED_FUNCTION_284();
              ((void (*)(uint64_t))v110)(v111);
              v238 = v109;
              sub_1C0303B80();
              v112 = OUTLINED_FUNCTION_9_1();
              if (OUTLINED_FUNCTION_78(v112))
              {
                v113 = (uint8_t *)OUTLINED_FUNCTION_4_0();
                v246 = OUTLINED_FUNCTION_4_0();
                *(_DWORD *)v113 = 136315138;
                OUTLINED_FUNCTION_137_3((uint64_t)(v113 + 4));
                ((void (*)(char *, char *, uint64_t))v110)(v62, v64, v107);
                v114 = sub_1C0303EF8();
                v116 = sub_1C003E6D8(v114, v115, &v246);
                OUTLINED_FUNCTION_223(v116);
                sub_1C03044B0();
                OUTLINED_FUNCTION_28();
                OUTLINED_FUNCTION_191_1();
                OUTLINED_FUNCTION_13_0(&dword_1C0039000, v109, (os_log_type_t)v27, "[UCG] Found a potential pics span: %s", v113);
                OUTLINED_FUNCTION_23();
                OUTLINED_FUNCTION_5();
              }
              OUTLINED_FUNCTION_191_1();

              OUTLINED_FUNCTION_68_12();
              v117 = v232;
              v118 = sub_1C03026D4();
              if (!v119)
                goto LABEL_60;
              if (v118 == 0x4364656E7261656CLL && v119 == 0xEE00746361746E6FLL)
              {
                OUTLINED_FUNCTION_33();
              }
              else
              {
                v121 = OUTLINED_FUNCTION_176();
                OUTLINED_FUNCTION_33();
                if ((v121 & 1) == 0)
                {
LABEL_60:
                  OUTLINED_FUNCTION_91_9();
                  goto LABEL_22;
                }
              }
              v134 = v105;
              v135 = *(_QWORD *)(sub_1C03026B0() + 16);
              if (v135)
              {
                OUTLINED_FUNCTION_21_1();
                v138 = v136 + v137;
                v140 = *(_QWORD *)(v139 + 72);
                v141 = *(void (**)(unint64_t, uint64_t, uint64_t))(v139 + 16);
                v237 = v136;
                swift_bridgeObjectRetain();
                v142 = (_QWORD *)MEMORY[0x1E0DEE9D8];
                v110 = "UserFeedbackLearning";
                OUTLINED_FUNCTION_137_3(0x80000001C0335F40);
                OUTLINED_FUNCTION_212_0();
                while (1)
                {
                  v141(v117, v138, v134);
                  if (sub_1C030268C() == 0xD000000000000012 && v143 == v240)
                  {
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    v27 = OUTLINED_FUNCTION_176();
                    OUTLINED_FUNCTION_14();
                    if ((v27 & 1) == 0)
                      goto LABEL_87;
                  }
                  v144 = sub_1C0302674();
                  if (v145)
                  {
                    v27 = v144;
                    v134 = v145;
                    v146 = HIBYTE(v145) & 0xF;
                    if ((v145 & 0x2000000000000000) == 0)
                      v146 = v144 & 0xFFFFFFFFFFFFLL;
                    if (v146)
                    {
                      OUTLINED_FUNCTION_93_7();
                      if ((OUTLINED_FUNCTION_116() & 1) == 0)
                      {
                        OUTLINED_FUNCTION_4_10();
                        v142 = v149;
                      }
                      v117 = v142[2];
                      v147 = v142[3];
                      if (v117 >= v147 >> 1)
                      {
                        OUTLINED_FUNCTION_74_0(v147);
                        OUTLINED_FUNCTION_4_10();
                        v142 = v150;
                      }
                      v142[2] = v117 + 1;
                      v148 = &v142[2 * v117];
                      v148[4] = v27;
                      v148[5] = v134;
                      OUTLINED_FUNCTION_68_12();
                      OUTLINED_FUNCTION_212_0();
                      goto LABEL_88;
                    }
                    OUTLINED_FUNCTION_14();
                  }
LABEL_87:
                  v134 = v241;
                  (*(void (**)(unint64_t, uint64_t))(v242 + 8))(v117, v241);
                  OUTLINED_FUNCTION_68_12();
LABEL_88:
                  v138 += v140;
                  if (!--v135)
                  {
                    OUTLINED_FUNCTION_2();
                    v117 = v232;
                    goto LABEL_91;
                  }
                }
              }
              swift_bridgeObjectRelease();
              v142 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_91:
              if (v142[2] != 1)
              {
                OUTLINED_FUNCTION_91_9();
                OUTLINED_FUNCTION_18();
                OUTLINED_FUNCTION_44();
                v156 = v238;
                sub_1C0303B80();
                v157 = OUTLINED_FUNCTION_9_1();
                if (OUTLINED_FUNCTION_6_1(v157))
                {
                  v158 = (uint8_t *)OUTLINED_FUNCTION_4_0();
                  *(_DWORD *)v158 = 134217984;
                  v159 = v142[2];
                  OUTLINED_FUNCTION_33();
                  v246 = v159;
                  OUTLINED_FUNCTION_265();
                  OUTLINED_FUNCTION_68_12();
                  sub_1C03044B0();
                  OUTLINED_FUNCTION_33();
                  OUTLINED_FUNCTION_13_0(&dword_1C0039000, v156, (os_log_type_t)v110, "[UCG] ignoring PICs span. Expected exactly one suggested contact but got %ld", v158);
                  OUTLINED_FUNCTION_5();
                }

                OUTLINED_FUNCTION_2();
                goto LABEL_23;
              }
              v152 = v142[4];
              v151 = v142[5];
              OUTLINED_FUNCTION_47();
              OUTLINED_FUNCTION_33();
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8DA8);
              inited = (__n128 *)swift_initStackObject();
              v154 = OUTLINED_FUNCTION_140_4(inited, (__n128)xmmword_1C0305B60);
              v154[3].n128_u64[0] = v221;
              v154[3].n128_u64[1] = v117;
              v154[4].n128_u64[0] = 0;
              v154[4].n128_u8[8] = 2;
              sub_1C0120670((uint64_t)v154);
              *(_QWORD *)v27 = v152;
              *(_QWORD *)(v27 + 8) = v151;
              *(_QWORD *)(v27 + 16) = 0;
              *(_QWORD *)(v27 + 24) = 0;
LABEL_149:
              *(_QWORD *)(v27 + 32) = v155;
              goto LABEL_32;
            }
            v217 = v104;
            v218 = v103;
LABEL_48:
            v106 = OUTLINED_FUNCTION_176();
            OUTLINED_FUNCTION_29_0();
            if ((v106 & 1) != 0)
            {
              v105 = v222;
              goto LABEL_50;
            }
            swift_bridgeObjectRetain();
            v122 = OUTLINED_FUNCTION_287();
            v123 = *(_QWORD *)(v122 + 16);
            if (v123)
            {
              v68 = 0x6369746E616D6573;
              OUTLINED_FUNCTION_21_1();
              v64 = (char *)(v122 + v124);
              v125 = v122;
              v127 = *(_QWORD *)(v126 + 72);
              v128 = *(void (**)(char *, char *, uint64_t))(v126 + 16);
              v240 = v125;
              swift_bridgeObjectRetain();
              v129 = v241;
              while (1)
              {
                v128(v54, v64, v129);
                if (sub_1C030268C() == 0x6369746E616D6573 && v130 == 0xEE0065756C61765FLL)
                {
                  OUTLINED_FUNCTION_31();
                  swift_bridgeObjectRelease();
                  goto LABEL_102;
                }
                v27 = OUTLINED_FUNCTION_176();
                OUTLINED_FUNCTION_14();
                if ((v27 & 1) != 0)
                  break;
                OUTLINED_FUNCTION_167_0();
                OUTLINED_FUNCTION_169_2((uint64_t)v54, v132);
                v64 += v127;
                --v123;
                v27 = v223;
                if (!v123)
                {
                  OUTLINED_FUNCTION_31();
                  OUTLINED_FUNCTION_58_22();
                  goto LABEL_103;
                }
              }
              OUTLINED_FUNCTION_31();
              OUTLINED_FUNCTION_68_12();
LABEL_102:
              v129 = v241;
              OUTLINED_FUNCTION_58_22();
              OUTLINED_FUNCTION_57_16(v21, (uint64_t)v54, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v242 + 32));
              v133 = 0;
            }
            else
            {
              v129 = v241;
              OUTLINED_FUNCTION_58_22();
            }
LABEL_103:
            __swift_storeEnumTagSinglePayload(v21, v133, 1, v129);
            OUTLINED_FUNCTION_31();
            OUTLINED_FUNCTION_33_1(v21, 1, v129);
            if (v73)
            {
              sub_1C0044B78(v21, &qword_1EF5C2D30);
              v234 = 0;
              v162 = 0;
              v164 = 0;
              v161 = v123;
            }
            else
            {
              v162 = sub_1C0302674();
              v164 = v163;
              OUTLINED_FUNCTION_93_7();
              v161 = v123;
              if (v164)
              {
                OUTLINED_FUNCTION_2_1();
                v234 = v162;
              }
              else
              {
                v234 = 0;
              }
            }
            sub_1C03026EC();
            OUTLINED_FUNCTION_33_1((uint64_t)v64, 1, v161);
            if (v73)
            {
              OUTLINED_FUNCTION_91_9();
              OUTLINED_FUNCTION_31();
              sub_1C0044B78((uint64_t)v64, &qword_1EF5C2D28);
              v240 = 0;
              goto LABEL_132;
            }
            v165 = (uint64_t)v64;
            v166 = v226;
            OUTLINED_FUNCTION_57_16(v226, v165, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v227 + 32));
            sub_1C0303340();
            v167 = OUTLINED_FUNCTION_247();
            v168 = *(void (**)(uint64_t, uint64_t))(v224 + 8);
            OUTLINED_FUNCTION_240(v68);
            v169 = 32;
            if ((v167 & 1) == 0)
              v169 = 0;
            OUTLINED_FUNCTION_137_3(v169);
            if (v164)
            {
              v246 = v162;
              v247 = v164;
              v243[0] = v219;
              v243[1] = v239;
              v170 = sub_1C0304510();
              OUTLINED_FUNCTION_31();
              OUTLINED_FUNCTION_18();
              LODWORD(v231) = v170 == 0;
            }
            else
            {
              OUTLINED_FUNCTION_91_9();
              LODWORD(v231) = 0;
            }
            sub_1C0303328();
            v171 = OUTLINED_FUNCTION_247();
            v172 = v230;
            v168(v68, v230);
            v173 = v227;
            OUTLINED_FUNCTION_57_16(v225, v166, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v227 + 16));
            if ((v171 & 1) != 0)
            {
              v174 = *(void (**)(uint64_t, uint64_t))(v173 + 8);
              OUTLINED_FUNCTION_243();
            }
            else
            {
              sub_1C030334C();
              v175 = sub_1C030331C();
              v168(v68, v172);
              v174 = *(void (**)(uint64_t, uint64_t))(v173 + 8);
              OUTLINED_FUNCTION_243();
              if (v231 & 1 | ((v175 & 1) == 0))
              {
LABEL_121:
                v176 = v229;
                sub_1C0303334();
                v177 = OUTLINED_FUNCTION_247();
                OUTLINED_FUNCTION_240(v176);
                if ((v177 & 1) != 0)
                {
                  v178 = sub_1C0303364();
                  if ((v178 & 0x100000000) == 0)
                  {
                    v179 = v178;
                    v180 = sub_1C0303370();
                    if ((v180 & 0x100000000) == 0 && v179 < v180)
                    {
                      if (qword_1ED727970 != -1)
                        swift_once();
                      v181 = OUTLINED_FUNCTION_9_0();
                      __swift_project_value_buffer(v181, (uint64_t)&unk_1ED7295C8);
                      v27 = v218;
                      OUTLINED_FUNCTION_9_2();
                      OUTLINED_FUNCTION_9_2();
                      v182 = sub_1C0303B80();
                      v183 = sub_1C03042E8();
                      if (os_log_type_enabled(v182, v183))
                      {
                        v184 = (uint8_t *)OUTLINED_FUNCTION_4_0();
                        v243[0] = OUTLINED_FUNCTION_4_0();
                        *(_DWORD *)v184 = 136315138;
                        if (v27)
                        {
                          v246 = v221;
                          v247 = v232;
                          OUTLINED_FUNCTION_9_2();
                          OUTLINED_FUNCTION_45_0();
                          OUTLINED_FUNCTION_257();
                          sub_1C0303FD0();
                          OUTLINED_FUNCTION_28();
                          OUTLINED_FUNCTION_55_0();
                          v185 = v246;
                          v186 = v247;
                        }
                        else
                        {
                          v186 = v232;
                          OUTLINED_FUNCTION_47();
                          v185 = v221;
                        }
                        v246 = sub_1C003E6D8(v185, v186, v243);
                        OUTLINED_FUNCTION_265();
                        sub_1C03044B0();
                        OUTLINED_FUNCTION_2();
                        OUTLINED_FUNCTION_2();
                        OUTLINED_FUNCTION_14();
                        OUTLINED_FUNCTION_13_0(&dword_1C0039000, v182, v183, "[UCG] Skipping hypocorism annotation of match for %s because there are also non-alias token matches", v184);
                        OUTLINED_FUNCTION_23();
                        OUTLINED_FUNCTION_5();
                      }
                      OUTLINED_FUNCTION_2();
                      OUTLINED_FUNCTION_2();

                      v174(v226, v228);
                      OUTLINED_FUNCTION_68_12();
                      goto LABEL_132;
                    }
                  }
                  OUTLINED_FUNCTION_137_3(v240 | 0x40);
                }
                v187 = OUTLINED_FUNCTION_284();
                ((void (*)(uint64_t))v174)(v187);
LABEL_132:
                v188 = sub_1C0303DB4();
                v189 = OUTLINED_FUNCTION_287();
                v190 = *(_QWORD *)(v189 + 16);
                v191 = v233;
                if (v190)
                {
                  v231 = v164;
                  OUTLINED_FUNCTION_21_1();
                  v230 = v189;
                  v193 = v189 + v192;
                  v195 = *(_QWORD *)(v194 + 72);
                  v196 = *(void (**)(uint64_t, uint64_t, uint64_t))(v194 + 16);
                  v197 = v241;
                  do
                  {
                    v196(v191, v193, v197);
                    v198 = (uint64_t)v238;
                    sub_1C0302680();
                    v199 = v198;
                    v200 = v198;
                    v201 = v237;
                    OUTLINED_FUNCTION_33_1(v200, 1, v237);
                    if (v73)
                    {
                      OUTLINED_FUNCTION_167_0();
                      v202 = OUTLINED_FUNCTION_284();
                      v203(v202);
                      sub_1C0044B78(v199, &qword_1EF5C2D20);
                    }
                    else
                    {
                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v236 + 32))(v235, v199, v201);
                      v204 = sub_1C0302B9C();
                      v27 = v205;
                      if (*(_QWORD *)(v188 + 16) && (v206 = sub_1C00B3C3C(v204, v205), (v207 & 1) != 0))
                      {
                        v208 = *(_QWORD *)(*(_QWORD *)(v188 + 56) + 8 * v206);
                        OUTLINED_FUNCTION_55_0();
                        if ((v208 & ~v240) != 0)
                          v209 = v208;
                        else
                          v209 = 0;
                        v240 |= v209;
                      }
                      else
                      {
                        OUTLINED_FUNCTION_55_0();
                      }
                      (*(void (**)(uint64_t, uint64_t))(v236 + 8))(v235, v201);
                      OUTLINED_FUNCTION_167_0();
                      v191 = v233;
                      OUTLINED_FUNCTION_169_2(v233, v210);
                      OUTLINED_FUNCTION_68_12();
                    }
                    v193 += v195;
                    --v190;
                  }
                  while (v190);
                  OUTLINED_FUNCTION_29();
                  OUTLINED_FUNCTION_26();
                  v164 = v231;
                }
                else
                {
                  OUTLINED_FUNCTION_29();
                  OUTLINED_FUNCTION_14();
                }
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8DA8);
                v211 = (__n128 *)swift_initStackObject();
                v212 = OUTLINED_FUNCTION_140_4(v211, (__n128)xmmword_1C0305B60);
                v213 = v234;
                v212[3].n128_u64[0] = v240;
                v212[3].n128_u64[1] = v213;
                v212[4].n128_u64[0] = v164;
                v212[4].n128_u8[8] = 0;
                sub_1C0120670((uint64_t)v212);
                v214 = v232;
                *(_QWORD *)v27 = v221;
                *(_QWORD *)(v27 + 8) = v214;
                v215 = v218;
                *(_QWORD *)(v27 + 16) = v217;
                *(_QWORD *)(v27 + 24) = v215;
                goto LABEL_149;
              }
            }
            OUTLINED_FUNCTION_137_3(v240 | 0x80);
            goto LABEL_121;
          }
        }
        v103 = 0;
        OUTLINED_FUNCTION_68_12();
        goto LABEL_44;
      }
    }
    OUTLINED_FUNCTION_29_0();
    if (qword_1ED727970 != -1)
      swift_once();
    v91 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v91, (uint64_t)&unk_1ED7295C8);
    v92 = v232;
    OUTLINED_FUNCTION_45_0();
    v93 = sub_1C0303B80();
    v94 = sub_1C03042E8();
    if (os_log_type_enabled(v93, v94))
    {
      v95 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      v246 = OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v95 = 136315138;
      OUTLINED_FUNCTION_45_0();
      v96 = sub_1C003E6D8(v221, v92, &v246);
      OUTLINED_FUNCTION_223(v96);
      sub_1C03044B0();
      OUTLINED_FUNCTION_8_2();
      OUTLINED_FUNCTION_13_0(&dword_1C0039000, v93, v94, "[UCG] Ignoring span match '%s' - this is a relationship origin match, not a name match", v95);
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_2();
    goto LABEL_31;
  }
LABEL_22:
  swift_bridgeObjectRelease();
LABEL_23:
  *(_QWORD *)(v27 + 32) = 0;
  *(_OWORD *)v27 = 0u;
  *(_OWORD *)(v27 + 16) = 0u;
LABEL_32:
  OUTLINED_FUNCTION_1();
}

void sub_1C0299158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t i;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  __int128 v66;
  uint64_t v67;
  NSObject *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  _QWORD *v86;
  int64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  char v94;
  unint64_t v95;
  __int128 v96;
  char v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  NSObject *v120;
  NSObject *v121;
  os_log_type_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  os_log_type_t v128;
  _DWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __int128 v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  unint64_t v148;
  unint64_t v149;
  __int128 v150;
  _QWORD *v151;
  uint64_t v152;
  os_log_type_t v153;
  _DWORD *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  NSObject *v167;
  uint64_t v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  os_log_type_t v177;
  uint8_t *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  int64_t v184;
  _QWORD v185[2];
  uint64_t v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  __int128 v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  NSObject *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  os_log_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  _QWORD *v207;
  __int128 v208;
  __int128 v209;
  uint64_t *v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  uint64_t v214;
  unint64_t v215;
  _QWORD *v216;
  uint64_t v217;
  os_log_t v218;
  __int128 v219;
  uint64_t v220;
  __int128 v221;
  __int128 v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;

  OUTLINED_FUNCTION_40_0();
  *(_QWORD *)&v213 = v1;
  *(_QWORD *)&v209 = v0;
  v203 = v3;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_1_3();
  v204 = *v5;
  v8 = v5[2];
  v210 = (uint64_t *)v5[1];
  if (qword_1ED728440 != -1)
LABEL_95:
    swift_once();
  v9 = (void *)qword_1ED729668;
  v10 = (_QWORD *)(v2 + *(int *)(v6 + 20));
  *v10 = "UCG.SearchForCandidatesByRelationship";
  v10[1] = 37;
  v192 = v10;
  v11 = OUTLINED_FUNCTION_299(v9);
  sub_1C0303B68();
  v191 = *(int *)(v6 + 24);
  *(_QWORD *)(v2 + v191) = v11;
  v12 = v11;
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v13 = OUTLINED_FUNCTION_7_3();
  v212 = xmmword_1C0305B60;
  *(_OWORD *)(v13 + 16) = xmmword_1C0305B60;
  v14 = OUTLINED_FUNCTION_23_0();
  v16 = v15;
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v13 + 32) = v14;
  *(_QWORD *)(v13 + 40) = v16;
  v186 = v13;
  OUTLINED_FUNCTION_53_1();
  v193 = v2;
  sub_1C0303B50();
  OUTLINED_FUNCTION_28();

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727E60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v212;
  v18 = v210;
  *(_QWORD *)(inited + 32) = v210;
  *(_QWORD *)(inited + 40) = v8;
  v227 = MEMORY[0x1E0DEE9E8];
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_47();
  v216 = v18;
  v217 = v8;
  OUTLINED_FUNCTION_2_1();
  sub_1C029A7D8((uint64_t)&v227, (uint64_t *)&v216, v209);
  v6 = v213;
  if ((_QWORD)v213)
  {
    OUTLINED_FUNCTION_14();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_18();
    swift_setDeallocating();
    sub_1C004F004();
LABEL_37:
    sub_1C03043D8();
    v61 = v193;
    sub_1C0303B5C();
    sub_1C003DD84(v61, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
LABEL_38:
    OUTLINED_FUNCTION_28_0();
    return;
  }
  v202 = v2;
  v205 = 0;
  v198 = v8;
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_14();
  swift_setDeallocating();
  sub_1C004F004();
  v19 = v227;
  *(_QWORD *)&v211 = v227 + 56;
  OUTLINED_FUNCTION_85_8();
  v230 = v20;
  OUTLINED_FUNCTION_45_0();
  v21 = 0;
  v22 = &unk_1ED727000;
  *(_QWORD *)&v23 = 136315394;
  v208 = v23;
  v206 = MEMORY[0x1E0DEE9B8] + 8;
  v207 = (_QWORD *)v19;
  while (1)
  {
    v27 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
LABEL_94:
      __break(1u);
      goto LABEL_95;
    }
    v28 = v210;
    v6 = v209;
    if (v27 >= v230)
      goto LABEL_25;
    if (!*(_QWORD *)(v211 + 8 * v27))
    {
      if (v21 + 2 >= v230)
        goto LABEL_25;
      if (!*(_QWORD *)(v211 + 8 * (v21 + 2)))
      {
        if (v21 + 3 >= v230)
          goto LABEL_25;
        if (!*(_QWORD *)(v211 + 8 * (v21 + 3)))
          break;
      }
    }
LABEL_18:
    OUTLINED_FUNCTION_31_25();
    v6 = v32 & v31;
    *(_QWORD *)&v213 = v33;
    for (i = v34 + (v33 << 6); ; i = v25 | (v24 << 6))
    {
      v8 = *(unsigned __int16 *)(*(_QWORD *)(v19 + 48) + 2 * i);
      if (qword_1ED727970 != -1)
        swift_once();
      v35 = OUTLINED_FUNCTION_9_0();
      v36 = __swift_project_value_buffer(v35, (uint64_t)&unk_1ED7295C8);
      sub_1C0303B80();
      v37 = OUTLINED_FUNCTION_9_1();
      if (OUTLINED_FUNCTION_13_2(v37))
      {
        v38 = OUTLINED_FUNCTION_4_0();
        v39 = OUTLINED_FUNCTION_4_0();
        *(_DWORD *)v38 = OUTLINED_FUNCTION_166_0(v39).n128_u32[0];
        v40 = sub_1C02E5C48(v8);
        *(_QWORD *)(v38 + 4) = sub_1C003E6D8(v40, v41, (uint64_t *)&v216);
        OUTLINED_FUNCTION_29_0();
        *(_WORD *)(v38 + 12) = 2080;
        sub_1C02E23A0(v8);
        MEMORY[0x1C3B97040]();
        OUTLINED_FUNCTION_29_0();
        *(_QWORD *)(v38 + 14) = OUTLINED_FUNCTION_163_1();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_38_8(&dword_1C0039000, v36, (os_log_type_t)v2, "[UCG] CN relationship keys for: '%s': %s", (uint8_t *)v38);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_5();
      }

      v21 = v213;
      if (!v6)
        break;
      OUTLINED_FUNCTION_261();
      *(_QWORD *)&v213 = v24;
    }
  }
  v29 = v21 + 4;
  if (v21 + 4 < v230)
  {
    if (!*(_QWORD *)(v211 + 8 * v29))
    {
      while (1)
      {
        v30 = v29 + 1;
        if (__OFADD__(v29, 1))
          goto LABEL_94;
        if (v30 >= v230)
          goto LABEL_25;
        ++v29;
        if (*(_QWORD *)(v211 + 8 * v30))
          goto LABEL_18;
      }
    }
    goto LABEL_18;
  }
LABEL_25:
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_39();
  v42 = v205;
  v43 = v205;
  v229 = sub_1C02883A8(v19, v209, (uint64_t (*)(void))sub_1C02E23A0);
  if (!*(_QWORD *)(v229 + 16))
  {
    OUTLINED_FUNCTION_39();
    v44 = sub_1C02883A8(v19, v209, (uint64_t (*)(void))sub_1C02E5984);
    OUTLINED_FUNCTION_14();
    v229 = v44;
    if (!*(_QWORD *)(v44 + 16))
    {
      v226 = MEMORY[0x1E0DEE9E8];
      v101 = swift_initStackObject();
      *(_OWORD *)(v101 + 16) = xmmword_1C0313400;
      *(_QWORD *)&v213 = v42;
      v102 = v198;
      *(_QWORD *)(v101 + 32) = v28;
      *(_QWORD *)(v101 + 40) = v102;
      v216 = v28;
      v217 = v102;
      v227 = 32;
      v228 = 0xE100000000000000;
      v214 = 0;
      v215 = 0xE000000000000000;
      v103 = sub_1C004F408();
      OUTLINED_FUNCTION_31_6();
      v104 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v101 + 48) = OUTLINED_FUNCTION_22_51();
      *(_QWORD *)(v101 + 56) = v105;
      v216 = v28;
      v217 = v102;
      v227 = 32;
      v228 = 0xE100000000000000;
      v214 = 45;
      v215 = 0xE100000000000000;
      *(_QWORD *)(v101 + 64) = OUTLINED_FUNCTION_22_51();
      *(_QWORD *)(v101 + 72) = v106;
      v216 = v28;
      v217 = v102;
      v227 = 32;
      v228 = 0xE100000000000000;
      v214 = 95;
      v215 = 0xE100000000000000;
      v186 = v103;
      v187 = v103;
      v185[0] = v104;
      v185[1] = v103;
      *(_QWORD *)(v101 + 80) = OUTLINED_FUNCTION_22_51();
      *(_QWORD *)(v101 + 88) = v107;
      v108 = *(_QWORD *)(v209 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_tokenizer + 24);
      v109 = *(_QWORD *)(v209 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_tokenizer + 32);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v209 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_tokenizer), v108);
      v216 = (_QWORD *)sub_1C00E59C4((uint64_t)v28, v102, v108, v109);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
      sub_1C0150A88(&qword_1ED7283B0, (uint64_t *)&unk_1ED7283A0);
      v110 = sub_1C0303E50();
      v112 = v111;
      OUTLINED_FUNCTION_55_0();
      *(_QWORD *)(v101 + 96) = v110;
      *(_QWORD *)(v101 + 104) = v112;
      OUTLINED_FUNCTION_264();
      v113 = v213;
      sub_1C0286704((uint64_t)v207);
      OUTLINED_FUNCTION_14();
      v114 = OUTLINED_FUNCTION_264();
      v115 = v226;
      MEMORY[0x1E0C80A78](v114);
      v186 = v203;
      OUTLINED_FUNCTION_47();
      sub_1C01F17EC((uint64_t)sub_1C02A2D14, (uint64_t)v185, v115);
      v117 = v116;
      OUTLINED_FUNCTION_14();
      v118 = sub_1C01AACEC(v117);
      swift_bridgeObjectRelease();
      v226 = v118;
      if (qword_1ED727970 != -1)
        swift_once();
      v119 = OUTLINED_FUNCTION_9_0();
      v120 = __swift_project_value_buffer(v119, (uint64_t)&unk_1ED7295C8);
      swift_retain();
      OUTLINED_FUNCTION_31_6();
      v121 = sub_1C0303B80();
      v122 = sub_1C03042E8();
      if (os_log_type_enabled(v121, v122))
      {
        v123 = OUTLINED_FUNCTION_4_0();
        *(_QWORD *)&v213 = v113;
        v124 = v123;
        v125 = OUTLINED_FUNCTION_4_0();
        *(_DWORD *)v124 = OUTLINED_FUNCTION_166_0(v125).n128_u32[0];
        OUTLINED_FUNCTION_31_6();
        v227 = sub_1C003E6D8((uint64_t)v210, v102, (uint64_t *)&v216);
        sub_1C03044B0();
        OUTLINED_FUNCTION_1_0();
        OUTLINED_FUNCTION_2();
        *(_WORD *)(v124 + 12) = 2080;
        OUTLINED_FUNCTION_28_2();
        OUTLINED_FUNCTION_22();
        v126 = sub_1C030424C();
        OUTLINED_FUNCTION_18();
        v227 = OUTLINED_FUNCTION_206_0(v126, v127, (uint64_t *)&v216);
        sub_1C03044B0();
        OUTLINED_FUNCTION_31();
        OUTLINED_FUNCTION_38_8(&dword_1C0039000, v121, v122, "[UCG] No semantic CN relationship found for '%s'. Will search for it as a custom relationship using these potential labels: %s", (uint8_t *)v124);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_5();
      }

      OUTLINED_FUNCTION_8_1();
      OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_28_2();
      OUTLINED_FUNCTION_44_7();
      v174 = OUTLINED_FUNCTION_22();
      v175 = sub_1C0288620(v174);
      v43 = v113;
      OUTLINED_FUNCTION_18();
      v176 = sub_1C01AACEC(v175);
      OUTLINED_FUNCTION_9_2();
      sub_1C0303B80();
      v177 = OUTLINED_FUNCTION_9_1();
      if (OUTLINED_FUNCTION_16_2(v177))
      {
        v178 = (uint8_t *)OUTLINED_FUNCTION_4_0();
        v179 = OUTLINED_FUNCTION_4_0();
        *(_QWORD *)&v213 = v113;
        v216 = (_QWORD *)v179;
        *(_DWORD *)v178 = 136315138;
        *(_QWORD *)&v212 = v178 + 4;
        OUTLINED_FUNCTION_21();
        v180 = sub_1C030424C();
        OUTLINED_FUNCTION_17_0();
        v227 = OUTLINED_FUNCTION_206_0(v180, v181, (uint64_t *)&v216);
        sub_1C03044B0();
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_31();
        OUTLINED_FUNCTION_13_0(&dword_1C0039000, v120, v122, "[UCG] MeCard related names matching custom relationship: %s", v178);
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_5();
      }

      OUTLINED_FUNCTION_2();
      v22 = (_QWORD *)&unk_1ED727000;
      v182 = v204;
      OUTLINED_FUNCTION_10_6();
      v183 = v198;
      OUTLINED_FUNCTION_65();
      v184 = sub_1C0286878(v176, v182, (uint64_t)v210, v183);
      OUTLINED_FUNCTION_17_0();
      sub_1C0289890(v184);
    }
  }
  swift_bridgeObjectRelease();
  if (v22[302] != -1)
    swift_once();
  v45 = OUTLINED_FUNCTION_9_0();
  v46 = __swift_project_value_buffer(v45, (uint64_t)&unk_1ED7295C8);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_32();
  v196 = v46;
  sub_1C0303B80();
  v47 = OUTLINED_FUNCTION_9_1();
  if (OUTLINED_FUNCTION_78(v47))
  {
    v48 = OUTLINED_FUNCTION_4_0();
    v49 = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v48 = OUTLINED_FUNCTION_166_0(v49).n128_u32[0];
    *(_QWORD *)&v213 = v43;
    OUTLINED_FUNCTION_32();
    v227 = OUTLINED_FUNCTION_105_2((uint64_t)v210, v50, (uint64_t *)&v216);
    sub_1C03044B0();
    swift_release();
    OUTLINED_FUNCTION_2();
    *(_WORD *)(v48 + 12) = 2080;
    OUTLINED_FUNCTION_28_2();
    v51 = v229;
    OUTLINED_FUNCTION_32();
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8D88);
    MEMORY[0x1C3B97040](v51, v52);
    OUTLINED_FUNCTION_29_0();
    v227 = OUTLINED_FUNCTION_163_1();
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_38_8(&dword_1C0039000, v46, (os_log_type_t)v22, "[UCG] Found possible related names for '%s': %s", (uint8_t *)v48);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_29_0();
  swift_release();
  OUTLINED_FUNCTION_28_2();
  if (!*(_QWORD *)(v229 + 16))
  {
    swift_retain_n();
    v53 = OUTLINED_FUNCTION_159_2();
    v54 = sub_1C03042E8();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      *(_QWORD *)&v212 = OUTLINED_FUNCTION_4_0();
      v216 = (_QWORD *)v212;
      *(_QWORD *)&v213 = v43;
      *(_DWORD *)v55 = 136315138;
      sub_1C028F630();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
      v56 = sub_1C0303D9C();
      OUTLINED_FUNCTION_14();
      v58 = OUTLINED_FUNCTION_105_2(v56, v57, (uint64_t *)&v216);
      OUTLINED_FUNCTION_26_6(v58);
      sub_1C03044B0();
      OUTLINED_FUNCTION_291();
      OUTLINED_FUNCTION_29_0();
      OUTLINED_FUNCTION_13_0(&dword_1C0039000, v53, v54, "[UCG] Couldn't find any MeCard relationships matching query. Here's what's in the MeCard: %s", v55);
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_291();
  }
  v59 = OUTLINED_FUNCTION_47();
  v60 = sub_1C0288948(v59, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C02A2CFC);
  v205 = v43;
  if (v43)
  {
    OUTLINED_FUNCTION_14();
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  v62 = v60;
  OUTLINED_FUNCTION_14();
  v63 = *(_QWORD *)(v62 + 16);
  if (v63)
  {
    OUTLINED_FUNCTION_22();
    v64 = 0;
    v188 = v62;
    v65 = (uint64_t *)(v62 + 64);
    *(_QWORD *)&v66 = 134219010;
    v190 = v66;
    v189 = MEMORY[0x1E0DEE9B8] + 8;
    v197 = v63;
    do
    {
      v67 = *(v65 - 4);
      v68 = *(v65 - 3);
      v69 = *(v65 - 1);
      v200 = (os_log_t)*(v65 - 2);
      v201 = v67;
      v70 = *v65;
      v71 = v65[1];
      v206 = v65[2];
      v207 = (_QWORD *)v70;
      v72 = v65[4];
      v202 = v65[3];
      v73 = v65[6];
      v199 = v65[5];
      v74 = v65[8];
      *(_QWORD *)&v208 = v65[7];
      *(_QWORD *)&v209 = v72;
      OUTLINED_FUNCTION_132_3();
      OUTLINED_FUNCTION_132_3();
      *(_QWORD *)&v211 = v74;
      OUTLINED_FUNCTION_132_3();
      *(_QWORD *)&v213 = v68;
      OUTLINED_FUNCTION_132_3();
      *(_QWORD *)&v212 = v69;
      OUTLINED_FUNCTION_132_3();
      OUTLINED_FUNCTION_132_3();
      OUTLINED_FUNCTION_159_2();
      v75 = OUTLINED_FUNCTION_9_1();
      if (OUTLINED_FUNCTION_13_2(v75))
      {
        v76 = OUTLINED_FUNCTION_4_0();
        v195 = OUTLINED_FUNCTION_4_0();
        v226 = v195;
        *(_DWORD *)v76 = v190;
        *(_QWORD *)(v76 + 4) = v64;
        *(_WORD *)(v76 + 12) = 2080;
        OUTLINED_FUNCTION_45_0();
        *(_QWORD *)(v76 + 14) = OUTLINED_FUNCTION_248(v199, v77, &v226);
        OUTLINED_FUNCTION_28();
        *(_WORD *)(v76 + 22) = 2080;
        v216 = (_QWORD *)v201;
        v217 = v213;
        v218 = v200;
        *(_QWORD *)&v219 = v212;
        v201 = v64;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v78 = sub_1C0303EF8();
        v200 = v68;
        *(_QWORD *)(v76 + 24) = OUTLINED_FUNCTION_254(v78, v79);
        OUTLINED_FUNCTION_2();
        v194 = v73;
        OUTLINED_FUNCTION_2();
        v80 = v209;
        OUTLINED_FUNCTION_2();
        LODWORD(v199) = v69;
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_14();
        *(_WORD *)(v76 + 32) = 2080;
        v216 = v207;
        v217 = v71;
        v218 = (os_log_t)v206;
        *(_QWORD *)&v219 = v202;
        *((_QWORD *)&v219 + 1) = v80;
        OUTLINED_FUNCTION_22();
        OUTLINED_FUNCTION_21();
        v81 = sub_1C0303EF8();
        *(_QWORD *)(v76 + 34) = OUTLINED_FUNCTION_254(v81, v82);
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_14();
        *(_WORD *)(v76 + 42) = 2080;
        OUTLINED_FUNCTION_45_0();
        *(_QWORD *)(v76 + 44) = OUTLINED_FUNCTION_248(v208, v83, &v226);
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_8_2();
        _os_log_impl(&dword_1C0039000, v200, (os_log_type_t)v199, "[UCG] Relationship lookup [%ld] for '%s': %s => %s based on search term %s", (uint8_t *)v76, 0x34u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_5();
      }

      OUTLINED_FUNCTION_133_1();
      OUTLINED_FUNCTION_133_1();
      OUTLINED_FUNCTION_133_1();
      OUTLINED_FUNCTION_133_1();
      OUTLINED_FUNCTION_133_1();
      OUTLINED_FUNCTION_133_1();
      ++v64;
      v65 += 13;
    }
    while (v63 != v64);
    v84 = v188;
    OUTLINED_FUNCTION_14();
    OUTLINED_FUNCTION_47();
    v85 = (uint64_t *)(v84 + 64);
    v86 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v87 = v204;
    do
    {
      if ((v85[2] & 0x20) != 0)
      {
        v209 = *((_OWORD *)v85 + 1);
        v88 = *(v85 - 4);
        *(_QWORD *)&v213 = *(v85 - 3);
        v207 = (_QWORD *)*(v85 - 2);
        *(_QWORD *)&v208 = v88;
        v89 = *v85;
        *(_QWORD *)&v212 = *(v85 - 1);
        v90 = v85[1];
        v91 = v85[7];
        v231 = v85[6];
        v92 = v85[8];
        v93 = v89 == v91 && v90 == v92;
        v211 = *((_OWORD *)v85 + 2);
        if (v93 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          OUTLINED_FUNCTION_32();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          OUTLINED_FUNCTION_45_0();
          v94 = OUTLINED_FUNCTION_14_1();
          v216 = v86;
          v197 = v63;
          if ((v94 & 1) == 0)
          {
            OUTLINED_FUNCTION_119_3();
            v86 = v216;
          }
          OUTLINED_FUNCTION_198_0();
          if (v97)
          {
            sub_1C00B2398(v95 > 1, v87, 1);
            v96 = v209;
            v86 = v216;
          }
          v86[2] = v87;
          v98 = &v86[13 * v63];
          v99 = v213;
          v98[4] = v208;
          v98[5] = v99;
          v100 = v212;
          v98[6] = v207;
          v98[7] = v100;
          v98[8] = v89;
          v98[9] = v90;
          *((_OWORD *)v98 + 5) = v96;
          *((_OWORD *)v98 + 6) = v211;
          v98[14] = v231;
          v98[15] = v91;
          v98[16] = v92;
          v87 = v204;
          v63 = v197;
        }
      }
      v85 += 13;
      --v63;
    }
    while (v63);
    v62 = v188;
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v86 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if (v86[2])
  {
    v206 = (uint64_t)v86;
    OUTLINED_FUNCTION_18();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_159_2();
    v128 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_37_1(v128))
    {
      v129 = (_DWORD *)OUTLINED_FUNCTION_4_0();
      v216 = (_QWORD *)OUTLINED_FUNCTION_4_0();
      *v129 = 136315138;
      OUTLINED_FUNCTION_32();
      v131 = OUTLINED_FUNCTION_105_2((uint64_t)v210, v130, (uint64_t *)&v216);
      OUTLINED_FUNCTION_26_6(v131);
      sub_1C03044B0();
      swift_release();
      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_6_3(&dword_1C0039000, v132, v133, "[UCG] There is an exact relationship match for '%s'. Will discard non-exact matches...");
      OUTLINED_FUNCTION_7_1();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_29_0();
    swift_release();
    v134 = v206;
  }
  else
  {
    OUTLINED_FUNCTION_5_3();
    v134 = v62;
  }
  v135 = *(_QWORD *)(v134 + 16);
  v206 = v134;
  if (v135)
  {
    v136 = swift_bridgeObjectRetain();
    v137 = 0;
    v138 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v139 = v136 + v137;
      if ((~*(_DWORD *)(v136 + v137 + 80) & 3) == 0)
      {
        v213 = *(_OWORD *)(v136 + v137 + 80);
        v140 = *(_QWORD *)(v139 + 32);
        v141 = *(_QWORD *)(v139 + 40);
        v207 = *(_QWORD **)(v139 + 48);
        *(_QWORD *)&v208 = v140;
        v142 = *(_QWORD *)(v139 + 72);
        v143 = *(_OWORD *)(v139 + 96);
        v144 = *(_QWORD *)(v139 + 112);
        v145 = *(_QWORD *)(v139 + 120);
        v146 = *(_QWORD *)(v139 + 128);
        v209 = *(_OWORD *)(v139 + 56);
        v212 = v143;
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_22();
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_74_1();
        OUTLINED_FUNCTION_65();
        OUTLINED_FUNCTION_31_6();
        v147 = OUTLINED_FUNCTION_14_1();
        v216 = v138;
        v232 = v144;
        *(_QWORD *)&v211 = v145;
        if ((v147 & 1) == 0)
        {
          OUTLINED_FUNCTION_119_3();
          v138 = v216;
        }
        v149 = v138[2];
        v148 = v138[3];
        v136 = v206;
        v150 = v213;
        if (v149 >= v148 >> 1)
        {
          sub_1C00B2398(v148 > 1, v149 + 1, 1);
          v150 = v213;
          v136 = v206;
          v138 = v216;
        }
        v138[2] = v149 + 1;
        v151 = &v138[13 * v149];
        v151[4] = v208;
        v151[5] = v141;
        v151[6] = v207;
        *(_OWORD *)(v151 + 7) = v209;
        v151[9] = v142;
        *((_OWORD *)v151 + 5) = v150;
        *((_OWORD *)v151 + 6) = v212;
        v152 = v211;
        v151[14] = v232;
        v151[15] = v152;
        v151[16] = v146;
      }
      v137 += 104;
      --v135;
    }
    while (v135);
    swift_bridgeObjectRelease();
  }
  else
  {
    v138 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if (v138[2])
  {
    *(_QWORD *)&v213 = v138;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_159_2();
    v153 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_37_1(v153))
    {
      v154 = (_DWORD *)OUTLINED_FUNCTION_4_0();
      v216 = (_QWORD *)OUTLINED_FUNCTION_4_0();
      *v154 = 136315138;
      OUTLINED_FUNCTION_2_1();
      v156 = OUTLINED_FUNCTION_206_0((uint64_t)v210, v155, (uint64_t *)&v216);
      OUTLINED_FUNCTION_26_6(v156);
      sub_1C03044B0();
      OUTLINED_FUNCTION_4_2();
      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_6_3(&dword_1C0039000, v157, v158, "[UCG] There is [givenName, familyName] matches for '%s'. Will discard relationship matches without both of these...");
      OUTLINED_FUNCTION_7_1();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_4_2();
    v159 = v213;
  }
  else
  {
    OUTLINED_FUNCTION_5_3();
    v159 = v206;
  }
  v226 = MEMORY[0x1E0DEE9E0];
  v160 = *(_QWORD *)(v159 + 16);
  if (!v160)
  {
LABEL_89:
    OUTLINED_FUNCTION_14();
    sub_1C0286A50(v226);
    OUTLINED_FUNCTION_18();
    swift_bridgeObjectRelease();
    sub_1C03043D8();
    v173 = OUTLINED_FUNCTION_110_4();
    OUTLINED_FUNCTION_82_4(v173, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
    goto LABEL_38;
  }
  OUTLINED_FUNCTION_47();
  v161 = 0;
  *(_QWORD *)&v213 = v159;
  while (1)
  {
    v162 = v159 + v161;
    v163 = *(_QWORD *)(v159 + v161 + 72);
    v164 = *(_QWORD *)(v159 + v161 + 120);
    v165 = *(_QWORD *)(v159 + v161 + 128);
    v166 = *(_QWORD *)(v159 + v161 + 112);
    v168 = *(_QWORD *)(v159 + v161 + 40);
    v167 = *(NSObject **)(v162 + 48);
    v169 = *(_OWORD *)(v162 + 56);
    v170 = *(_OWORD *)(v162 + 80);
    v171 = *(_OWORD *)(v162 + 96);
    v216 = *(_QWORD **)(v162 + 32);
    v217 = v168;
    v219 = v169;
    v218 = v167;
    v220 = v163;
    v221 = v170;
    v222 = v171;
    v223 = v166;
    v224 = v164;
    v225 = v165;
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_74_1();
    OUTLINED_FUNCTION_31_6();
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_22();
    v172 = v205;
    sub_1C029B80C(&v226, (uint64_t)&v216, v204, v210, v198, v203);
    v205 = v172;
    if (v172)
      break;
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_14();
    v161 += 104;
    --v160;
    v159 = v213;
    if (!v160)
    {
      OUTLINED_FUNCTION_14();
      goto LABEL_89;
    }
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_31();
  __break(1u);
}

void sub_1C029A7D8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  os_log_type_t type;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58[5];
  uint64_t v59;

  v4 = v3;
  v6 = a2[1];
  v55 = *a2;
  v7 = sub_1C02E5AD4();
  v14 = &unk_1ED727000;
  if ((unsigned __int16)v7 == 376)
  {
    if (qword_1ED727970 != -1)
      swift_once();
    v15 = sub_1C0303B98();
    __swift_project_value_buffer(v15, (uint64_t)&unk_1ED7295C8);
    swift_bridgeObjectRetain_n();
    v16 = sub_1C0303B80();
    v17 = sub_1C03042E8();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v58[0] = v19;
      *(_DWORD *)v18 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v56 = sub_1C003E6D8(v55, v6, v58);
      v4 = v3;
      sub_1C03044B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0039000, v16, v17, "[UCG] Spoken relationship label '%s' is not a semantic relationship label", v18, 0xCu);
      swift_arrayDestroy();
      v20 = v19;
      v14 = (_QWORD *)&unk_1ED727000;
      MEMORY[0x1C3B98378](v20, -1, -1);
      MEMORY[0x1C3B98378](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    sub_1C022F324((uint64_t)v58, v7, v8, v9, v10, v11, v12, v13, v51, v53);
  }
  sub_1C0045DFC(a3 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_relationshipLocalizer, (uint64_t)&v56, &qword_1EF5C2D10);
  if (v57)
  {
    sub_1C004CD5C(&v56, (uint64_t)v58);
    __swift_project_boxed_opaque_existential_1(v58, v58[3]);
    sub_1C0054754();
    if (!v4)
    {
      v22 = v21;
      if (v14[302] != -1)
        swift_once();
      v23 = sub_1C0303B98();
      __swift_project_value_buffer(v23, (uint64_t)&unk_1ED7295C8);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v24 = sub_1C0303B80();
      v25 = sub_1C03042E8();
      if (os_log_type_enabled(v24, v25))
      {
        type = v25;
        v26 = swift_slowAlloc();
        v52 = swift_slowAlloc();
        *(_QWORD *)&v56 = v52;
        *(_DWORD *)v26 = 136315394;
        swift_bridgeObjectRetain();
        v59 = sub_1C003E6D8(v55, v6, (uint64_t *)&v56);
        sub_1C03044B0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v26 + 12) = 2080;
        swift_bridgeObjectRetain();
        v27 = sub_1C030424C();
        v29 = v28;
        swift_bridgeObjectRelease();
        v59 = sub_1C003E6D8(v27, v29, (uint64_t *)&v56);
        sub_1C03044B0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C0039000, v24, type, "[UCG] Relationship aliases for: '%s': %s", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C3B98378](v52, -1, -1);
        MEMORY[0x1C3B98378](v26, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      sub_1C0287890(v22);
      v35 = v34;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v36 = sub_1C0303B80();
      v37 = sub_1C03042E8();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = swift_slowAlloc();
        v39 = swift_slowAlloc();
        *(_QWORD *)&v56 = v39;
        *(_DWORD *)v38 = 136315394;
        swift_bridgeObjectRetain();
        v59 = sub_1C003E6D8(v55, v6, (uint64_t *)&v56);
        sub_1C03044B0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v38 + 12) = 2080;
        v40 = swift_bridgeObjectRetain();
        v41 = MEMORY[0x1C3B97040](v40, &type metadata for NLSemanticRelationLabel);
        v43 = v42;
        swift_bridgeObjectRelease();
        v59 = sub_1C003E6D8(v41, v43, (uint64_t *)&v56);
        sub_1C03044B0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C0039000, v36, v37, "[UCG] Semantic labels for all aliases of: '%s': %s", (uint8_t *)v38, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C3B98378](v39, -1, -1);
        MEMORY[0x1C3B98378](v38, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      sub_1C0078FCC(v35, v44, v45, v46, v47, v48, v49, v50);
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v58);
  }
  else
  {
    sub_1C0044B78((uint64_t)&v56, &qword_1EF5C2D10);
    if (v14[302] != -1)
      swift_once();
    v30 = sub_1C0303B98();
    __swift_project_value_buffer(v30, (uint64_t)&unk_1ED7295C8);
    v31 = sub_1C0303B80();
    v32 = sub_1C03042F4();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_1C0039000, v31, v32, "[UCG] No relationship localizer available. This will hurt search results...", v33, 2u);
      MEMORY[0x1C3B98378](v33, -1, -1);
    }

  }
}

uint64_t sub_1C029AEC4@<X0>(unsigned __int16 *a1@<X0>, uint64_t (*a2)(void)@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  int64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  int64_t v17;
  int isUniquelyReferenced_nonNull_native;
  int64_t *v19;
  int64_t *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v24;
  BOOL v25;
  int64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t result;
  unsigned __int16 v36;

  v36 = *a1;
  v4 = a2();
  v5 = *(_QWORD *)(v4 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    OUTLINED_FUNCTION_21();
    v7 = (uint64_t *)(v4 + 40);
    v8 = MEMORY[0x1E0DEE9D8];
    v9 = (int64_t *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v10 = *(v7 - 1);
      v11 = *v7;
      OUTLINED_FUNCTION_9_2();
      sub_1C028F630();
      v13 = v12;
      if (*(_QWORD *)(v12 + 16))
      {
        v14 = sub_1C00B3C3C(v10, v11);
        v15 = v8;
        if ((v16 & 1) != 0)
        {
          v15 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v14);
          OUTLINED_FUNCTION_44();
        }
      }
      else
      {
        v15 = v8;
      }
      OUTLINED_FUNCTION_14();
      OUTLINED_FUNCTION_2();
      v3 = *(_QWORD *)(v15 + 16);
      v17 = v9[2];
      if (__OFADD__(v17, v3))
        break;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v19 = v9;
      if (!isUniquelyReferenced_nonNull_native || v17 + v3 > (uint64_t)((unint64_t)v9[3] >> 1))
      {
        sub_1C00500A0();
        v19 = v20;
      }
      if (*(_QWORD *)(v15 + 16))
      {
        v21 = v19[2];
        if ((uint64_t)(((unint64_t)v19[3] >> 1) - v21) < v3)
          goto LABEL_35;
        v22 = (unint64_t)&v19[2 * v21 + 4];
        if (v15 + 32 < v22 + 16 * v3 && v22 < v15 + 32 + 16 * v3)
          goto LABEL_37;
        v9 = v19;
        swift_arrayInitWithCopy();
        if (v3)
        {
          v24 = v9[2];
          v25 = __OFADD__(v24, v3);
          v26 = v24 + v3;
          if (v25)
            goto LABEL_36;
          v9[2] = v26;
        }
      }
      else
      {
        v9 = v19;
        if (v3)
          goto LABEL_34;
      }
      v7 += 2;
      OUTLINED_FUNCTION_33();
      if (!--v5)
      {
        OUTLINED_FUNCTION_17_0();
        v6 = MEMORY[0x1E0DEE9D8];
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    OUTLINED_FUNCTION_18_43();
    result = OUTLINED_FUNCTION_85_7();
    __break(1u);
  }
  else
  {
    v9 = (int64_t *)MEMORY[0x1E0DEE9D8];
LABEL_25:
    OUTLINED_FUNCTION_17_0();
    v27 = v9[2];
    if (v27)
    {
      sub_1C00B23B4(0, v27, 0);
      v28 = v9 + 5;
      do
      {
        v29 = *(v28 - 1);
        v30 = *v28;
        sub_1C02E5C48(v36);
        OUTLINED_FUNCTION_286();
        v32 = *(_QWORD *)(v6 + 16);
        v31 = *(_QWORD *)(v6 + 24);
        OUTLINED_FUNCTION_31_6();
        if (v32 >= v31 >> 1)
          sub_1C00B23B4(v31 > 1, v32 + 1, 1);
        v28 += 2;
        *(_QWORD *)(v6 + 16) = v32 + 1;
        v33 = (_QWORD *)(v6 + 32 * v32);
        v33[4] = v9;
        v33[5] = v3;
        v33[6] = v29;
        v33[7] = v30;
        --v27;
      }
      while (v27);
      result = swift_bridgeObjectRelease();
    }
    else
    {
      result = OUTLINED_FUNCTION_29_0();
    }
    *a3 = v6;
  }
  return result;
}

void sub_1C029B16C(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F70);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[1];
  v14[0] = *a1;
  v14[1] = v9;
  v10 = sub_1C0301DB0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, a2, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  sub_1C004F408();
  v11 = sub_1C03044E0();
  v13 = v12;
  sub_1C0044B78((uint64_t)v8, &qword_1ED725F70);
  *a3 = v11;
  a3[1] = v13;
}

void sub_1C029B260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_1C0297288(a3, a4, a3, a4, a5, a6, a7, a8, v23, v24, v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), v28, v29, v30, v31, v32,
    v33);
  v25 = v13;
  if (!v8)
  {
    v31 = MEMORY[0x1E0DEE9D8];
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      v15 = 32;
      do
      {
        v16 = *(_QWORD *)(v25 + v15 + 32);
        v17 = *(_OWORD *)(v25 + v15 + 16);
        v26 = *(_OWORD *)(v25 + v15);
        v27 = v17;
        v28 = v16;
        sub_1C02A2D90((uint64_t)&v26);
        sub_1C02A2D90((uint64_t)&v26);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18 = swift_bridgeObjectRetain();
        sub_1C0287A84(v18, (uint64_t)&v26, a1, a2, a3, a4);
        v19 = a1;
        v21 = v20;
        swift_bridgeObjectRelease();
        sub_1C02A2DD8((uint64_t)&v26);
        v22 = v21;
        a1 = v19;
        sub_1C02897B4(v22);
        v15 += 40;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1C029B3B0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  __n128 v13;
  __int128 v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  __n128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  const char *v31;
  uint64_t v32;
  __int128 v33;
  __n128 v34;
  __n128 v35;
  __n128 v36;
  uint64_t v37;

  if (*(_BYTE *)(a1 + 40))
  {
    if (qword_1ED727970 != -1)
      swift_once();
    v9 = sub_1C0303B98();
    __swift_project_value_buffer(v9, (uint64_t)&unk_1ED7295C8);
    sub_1C02A2D90(a2);
    sub_1C02A2D90(a2);
    v10 = sub_1C0303B80();
    v11 = sub_1C03042E8();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v37 = v32;
      *(_DWORD *)v12 = 136315138;
      v13 = *(__n128 *)(a2 + 16);
      v33 = *(_OWORD *)a2;
      v34 = v13;
      v14 = v33;
      sub_1C02A2E1C(&v34, &v35);
      sub_1C02A2E1C(&v35, &v36);
      if (v36.n128_u64[1])
      {
        swift_bridgeObjectRetain();
        sub_1C02A2E58((uint64_t)&v33);
        sub_1C0303FD0();
        sub_1C0303FD0();
        sub_1C02A2E8C((uint64_t)&v33);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_1C003E6D8(v14, *((unint64_t *)&v14 + 1), &v37);
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      sub_1C02A2DD8(a2);
      sub_1C02A2DD8(a2);
      v30 = v11;
      v31 = "[UCG] Filtering out relationship match for '%s' since it was not a name based match";
LABEL_20:
      _os_log_impl(&dword_1C0039000, v10, v30, v31, v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v32, -1, -1);
      MEMORY[0x1C3B98378](v12, -1, -1);
      goto LABEL_21;
    }
  }
  else
  {
    v17 = *(_QWORD *)a1;
    v18 = *(_QWORD *)(a1 + 8);
    v19 = *(_QWORD *)(a1 + 16);
    v20 = *(_QWORD *)(a1 + 24);
    v21 = *(_QWORD *)(a1 + 32);
    if ((v19 & 8) == 0 || (v19 & 3) == 3)
    {
      v26 = *(_QWORD *)a2;
      v27 = *(_QWORD *)(a2 + 8);
      v28 = *(_QWORD *)(a2 + 16);
      v29 = *(_QWORD *)(a2 + 24);
      *a7 = v26;
      a7[1] = v27;
      a7[2] = v28;
      a7[3] = v29;
      a7[4] = v17;
      a7[5] = v18;
      a7[6] = v19;
      a7[7] = v20;
      a7[8] = v21;
      a7[9] = a3;
      a7[10] = a4;
      a7[11] = a5;
      a7[12] = a6;
      sub_1C0120A8C(v17, v18, v19, v20, v21, 0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return;
    }
    if (qword_1ED727970 != -1)
      swift_once();
    v22 = sub_1C0303B98();
    __swift_project_value_buffer(v22, (uint64_t)&unk_1ED7295C8);
    sub_1C02A2D90(a2);
    sub_1C02A2D90(a2);
    v10 = sub_1C0303B80();
    v23 = sub_1C03042E8();
    if (os_log_type_enabled(v10, v23))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v37 = v32;
      *(_DWORD *)v12 = 136315138;
      v24 = *(__n128 *)(a2 + 16);
      v33 = *(_OWORD *)a2;
      v34 = v24;
      v25 = v33;
      sub_1C02A2E1C(&v34, &v35);
      sub_1C02A2E1C(&v35, &v36);
      if (v36.n128_u64[1])
      {
        swift_bridgeObjectRetain();
        sub_1C02A2E58((uint64_t)&v33);
        sub_1C0303FD0();
        sub_1C0303FD0();
        sub_1C02A2E8C((uint64_t)&v33);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_1C003E6D8(v25, *((unint64_t *)&v25 + 1), &v37);
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      sub_1C02A2DD8(a2);
      sub_1C02A2DD8(a2);
      v30 = v23;
      v31 = "[UCG] Filtering out relationship match for '%s' since it was an organization match";
      goto LABEL_20;
    }
  }
  sub_1C02A2DD8(a2);
  sub_1C02A2DD8(a2);
LABEL_21:

  a7[12] = 0;
  *((_OWORD *)a7 + 4) = 0u;
  *((_OWORD *)a7 + 5) = 0u;
  *((_OWORD *)a7 + 2) = 0u;
  *((_OWORD *)a7 + 3) = 0u;
  *(_OWORD *)a7 = 0u;
  *((_OWORD *)a7 + 1) = 0u;
}

uint64_t sub_1C029B80C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t isUniquelyReferenced_nonNull_native, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  BOOL v21;
  char v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  _QWORD v53[2];
  uint64_t v54;
  os_log_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;

  v7 = v6;
  v61 = a6;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F70);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a2 + 8);
  v68 = *(_QWORD *)a2;
  v16 = *(_QWORD *)(a2 + 16);
  v17 = *(_QWORD *)(a2 + 24);
  v62 = isUniquelyReferenced_nonNull_native;
  v63 = v16;
  v18 = *(_QWORD *)(a2 + 72);
  v19 = *(_QWORD *)(a2 + 80);
  LOBYTE(v16) = *(_BYTE *)(a2 + 48);
  v60 = v7;
  if ((v16 & 0x20) != 0)
  {
    v57 = v18;
    v59 = a1;
    v20 = *(_QWORD *)(a2 + 96);
    v21 = *(_QWORD *)(a2 + 32) == *(_QWORD *)(a2 + 88) && *(_QWORD *)(a2 + 40) == v20;
    v58 = *(_QWORD *)(a2 + 88);
    if (v21)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v22 = sub_1C0304A08();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v22 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v58 = 0;
        goto LABEL_17;
      }
    }
    if (qword_1ED727970 == -1)
      goto LABEL_11;
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v58 = 0;
  while (1)
  {
    v66 = v18;
    v67 = v19;
    v59 = a4;
    v64 = a4;
    v65 = (char *)isUniquelyReferenced_nonNull_native;
    v30 = sub_1C0301DB0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v14, v61, v30);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v30);
    sub_1C004F408();
    swift_bridgeObjectRetain();
    v61 = sub_1C0304534();
    sub_1C0044B78((uint64_t)v14, &qword_1ED725F70);
    v14 = v65;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v66 = *a1;
    v31 = v66;
    a4 = a1;
    *a1 = 0x8000000000000000;
    v20 = v15;
    v32 = v15;
    v15 = v17;
    v33 = sub_1C00B421C(v68, v32, v63, v17);
    if (!__OFADD__(*(_QWORD *)(v31 + 16), (v34 & 1) == 0))
      break;
    __break(1u);
LABEL_29:
    swift_once();
LABEL_11:
    v23 = sub_1C0303B98();
    __swift_project_value_buffer(v23, (uint64_t)&unk_1ED7295C8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v24 = sub_1C0303B80();
    v56 = sub_1C03042DC();
    if (os_log_type_enabled(v24, (os_log_type_t)v56))
    {
      v55 = v24;
      v25 = swift_slowAlloc();
      v54 = swift_slowAlloc();
      v64 = (uint64_t *)v54;
      *(_DWORD *)v25 = 136315394;
      if (v17)
      {
        v66 = v68;
        v67 = v15;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1C0303FD0();
        sub_1C0303FD0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = v66;
        v27 = v67;
      }
      else
      {
        swift_bridgeObjectRetain();
        v26 = v68;
        v27 = v15;
      }
      v66 = sub_1C003E6D8(v26, v27, (uint64_t *)&v64);
      v53[1] = &v67;
      sub_1C03044B0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain();
      v66 = sub_1C003E6D8(v58, v20, (uint64_t *)&v64);
      sub_1C03044B0();
      swift_bridgeObjectRelease_n();
      v28 = v55;
      _os_log_impl(&dword_1C0039000, v55, (os_log_type_t)v56, "[UCG] relationship based match %s is based on person name %s and is an exact match", (uint8_t *)v25, 0x16u);
      v29 = v54;
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v29, -1, -1);
      MEMORY[0x1C3B98378](v25, -1, -1);

      v58 = 1;
      isUniquelyReferenced_nonNull_native = v62;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v58 = 1;
    }
LABEL_17:
    a1 = v59;
    v18 = v57;
  }
  v35 = v33;
  v36 = v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2D08);
  v37 = sub_1C03047BC();
  v38 = v66;
  v39 = v62;
  v40 = v59;
  if ((v37 & 1) != 0)
  {
    v41 = sub_1C00B421C(v68, v20, v63, v15);
    if ((v36 & 1) != (v42 & 1))
    {
      result = sub_1C0304A68();
      __break(1u);
      return result;
    }
    v35 = v41;
  }
  *a4 = v38;
  swift_bridgeObjectRelease();
  v43 = *a4;
  if ((v36 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    sub_1C00B6FF8(v35, v68, v20, v63, v15, MEMORY[0x1E0DEE9D8], v43);
    swift_bridgeObjectRetain();
  }
  v44 = v58;
  v45 = v61;
  swift_bridgeObjectRetain();
  if (v45)
    v46 = v44 | 2;
  else
    v46 = v44;
  v47 = *(_QWORD *)(v43 + 56);
  swift_bridgeObjectRelease();
  v48 = (uint64_t *)(v47 + 8 * v35);
  sub_1C00ABC48();
  v49 = *(_QWORD *)(*v48 + 16);
  sub_1C00ABE68();
  v50 = *v48;
  *(_QWORD *)(v50 + 16) = v49 + 1;
  v51 = v50 + 48 * v49;
  *(_QWORD *)(v51 + 32) = v40;
  *(_QWORD *)(v51 + 40) = v39;
  *(_QWORD *)(v51 + 56) = 0;
  *(_QWORD *)(v51 + 64) = 0;
  *(_QWORD *)(v51 + 48) = v46;
  *(_BYTE *)(v51 + 72) = 1;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C029BE18()
{
  uint64_t v0;
  uint64_t *v1;
  char *v2;
  const void *v3;
  const void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  void (*v57)(void);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  char *v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint8_t *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint8_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  void (*v104)(char *, char *, uint64_t);
  int v105;
  char v106;
  uint64_t v107;
  NSObject *v108;
  os_log_type_t v109;
  uint8_t *v110;
  uint8_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  BOOL v122;
  uint64_t v123;
  BOOL v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  uint64_t *v129;
  uint64_t *v130;
  unint64_t v131;
  unint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int *v138;
  uint64_t v139;
  char *v140;
  uint64_t *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(_QWORD, _QWORD, _QWORD);
  uint64_t v146;
  uint64_t *v147;
  uint64_t v148;
  void (*v149)(void);
  int v150;
  uint64_t v151;
  uint64_t v152;
  NSObject *v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  NSObject *v159;
  os_log_type_t v160;
  uint8_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  os_log_type_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t v185;
  void (*v186)(char *, char *, uint64_t);
  uint64_t v187;
  uint64_t v188;
  void (*v189)(uint64_t, uint64_t, uint64_t);
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t *v210;
  int v211;
  NSObject *v212;
  os_log_type_t v213;
  uint64_t v214;
  uint8_t *v215;
  uint64_t v216;
  uint64_t *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  int *v226;
  uint64_t v227;
  char v228;
  char v229;
  void (*v230)(char *, char *, uint64_t);
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  void (*v238)(char *, uint64_t);
  unint64_t v239;
  uint64_t v240;
  unint64_t v241;
  char *v242;
  uint64_t v243;
  unint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t *v249;
  uint64_t v250;
  uint64_t v251;
  int v252;
  NSObject *v253;
  os_log_type_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  unint64_t v259;
  uint64_t v260;
  uint64_t *v261;
  uint64_t *v262;
  char *v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  char *v267;
  void (*v268)(char *, char *, uint64_t);
  uint64_t v269;
  uint64_t v270;
  unint64_t v271;
  uint64_t *v272;
  uint64_t v273;
  void (*v274)(char *, char *, uint64_t);
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  __int128 v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t *v281;
  NSObject *v282;
  uint64_t *v283;
  uint64_t v284;
  uint64_t *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t *v288;
  uint64_t v289;
  uint64_t *v290;
  uint64_t v291;
  uint64_t *v292;
  uint64_t v293;
  uint64_t *v294;
  uint64_t v295;
  uint64_t v296;
  char *v297;
  uint64_t *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t *v303;
  uint8_t *v304;
  char *v305;
  char *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  char *v310;
  void (*v311)(void);
  uint64_t v312;
  char *v313;
  void (*v314)(char *, char *, uint64_t);
  uint64_t v315;
  uint64_t v316;
  __int128 v317;
  __int128 v318;
  uint64_t v319;
  __int128 v320;
  __int128 v321;
  uint64_t v322;
  _BYTE v323[272];

  OUTLINED_FUNCTION_18_0();
  v299 = v0;
  v306 = v2;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5B8298);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_53();
  v284 = v6;
  v295 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B9658);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_27();
  v281 = (uint64_t *)v8;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_181();
  v279 = v10;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_181();
  v286 = v12;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_181();
  v276 = v14;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_181();
  v275 = v16;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_181();
  v292 = v18;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_181();
  v277 = v20;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_181();
  v285 = v22;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_181();
  v287 = v24;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_181();
  v283 = v26;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_181();
  v282 = v28;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_37();
  v290 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2CF0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_27();
  v291 = v32;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_37();
  v294 = v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_27();
  v302 = v36;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_37();
  v300 = v38;
  OUTLINED_FUNCTION_8_4();
  v309 = sub_1C0301D5C();
  v307 = *(_QWORD *)(v309 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_27();
  v301 = v40;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v41);
  OUTLINED_FUNCTION_37();
  v303 = v42;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v308 = *(_QWORD *)(v43 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v44);
  OUTLINED_FUNCTION_27();
  v288 = v45;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v46);
  OUTLINED_FUNCTION_181();
  v280 = v47;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v48);
  OUTLINED_FUNCTION_181();
  v293 = v49;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v50);
  OUTLINED_FUNCTION_181();
  v289 = v51;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v52);
  OUTLINED_FUNCTION_181();
  v305 = (char *)v53;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v54);
  OUTLINED_FUNCTION_181();
  v314 = (void (*)(char *, char *, uint64_t))v55;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v56);
  OUTLINED_FUNCTION_181();
  v311 = v57;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v58);
  OUTLINED_FUNCTION_181();
  v313 = (char *)v59;
  OUTLINED_FUNCTION_42();
  v61 = MEMORY[0x1E0C80A78](v60);
  v63 = (uint64_t)&v274 - v62;
  MEMORY[0x1E0C80A78](v61);
  OUTLINED_FUNCTION_181();
  v312 = v64;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v65);
  v67 = (char *)&v274 - v66;
  v68 = type metadata accessor for Signpost();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v69);
  OUTLINED_FUNCTION_58_0();
  OUTLINED_FUNCTION_27_0(v323, v4);
  if (qword_1ED728440 != -1)
    goto LABEL_120;
  while (1)
  {
    v70 = (void *)qword_1ED729668;
    v71 = (char *)v1 + *(int *)(v68 + 20);
    *(_QWORD *)v71 = "UCG.FilterPICSCandidates";
    *((_QWORD *)v71 + 1) = 24;
    v297 = v71;
    v71[16] = 2;
    v72 = v70;
    sub_1C0303B68();
    v296 = *(int *)(v68 + 24);
    *(uint64_t *)((char *)v1 + v296) = (uint64_t)v72;
    v73 = v72;
    LODWORD(v315) = sub_1C03043E4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
    v74 = OUTLINED_FUNCTION_16_0();
    v278 = xmmword_1C0305B60;
    *(_OWORD *)(v74 + 16) = xmmword_1C0305B60;
    v75 = sub_1C03046E4();
    v77 = v76;
    *(_QWORD *)(v74 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v74 + 64) = sub_1C00A6A70();
    *(_QWORD *)(v74 + 32) = v75;
    *(_QWORD *)(v74 + 40) = v77;
    OUTLINED_FUNCTION_53_1();
    v298 = v1;
    sub_1C0303B50();
    OUTLINED_FUNCTION_29_0();

    v78 = (char *)MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v317 = MEMORY[0x1E0DEE9D8];
    v79 = v306;
    v80 = (uint8_t *)*((_QWORD *)v306 + 2);
    OUTLINED_FUNCTION_47();
    v315 = v43;
    v304 = v80;
    if (v80)
    {
      OUTLINED_FUNCTION_21_1();
      v82 = *(_QWORD *)(v81 + 72);
      v310 = v83;
      v84 = (uint64_t)&v83[(_QWORD)v79];
      v85 = v80;
      do
      {
        sub_1C0045DFC(v84, (uint64_t)v67, &qword_1ED726DB0);
        v86 = &v67[*(int *)(v43 + 36)];
        if ((v86[*(int *)(OUTLINED_FUNCTION_1_6() + 204)] & 1) != 0)
        {
          sub_1C0044B78((uint64_t)v67, &qword_1ED726DB0);
        }
        else
        {
          sub_1C005A718((uint64_t)v67, v312, &qword_1ED726DB0);
          if ((OUTLINED_FUNCTION_14_1() & 1) == 0)
            OUTLINED_FUNCTION_42_26();
          v87 = v317;
          OUTLINED_FUNCTION_198_0();
          if (v122)
          {
            OUTLINED_FUNCTION_46_25();
            v87 = v317;
          }
          *(_QWORD *)(v87 + 16) = v86;
          sub_1C005A718(v312, (uint64_t)&v310[v87 + v43 * v82], &qword_1ED726DB0);
          v43 = v315;
        }
        v84 += v82;
        --v85;
      }
      while (v85);
      v88 = v317;
      v78 = (char *)MEMORY[0x1E0DEE9D8];
      v79 = v306;
      v80 = v304;
    }
    else
    {
      v88 = (uint64_t)v78;
    }
    v312 = v88;
    OUTLINED_FUNCTION_14();
    *(_QWORD *)&v317 = v78;
    OUTLINED_FUNCTION_47();
    if (v80)
    {
      v89 = (*(unsigned __int8 *)(v308 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v308 + 80);
      v90 = *(_QWORD *)(v308 + 72);
      v91 = (uint64_t)&v79[v89];
      v92 = v80;
      do
      {
        OUTLINED_FUNCTION_227(v91, v63);
        v93 = v63 + *(int *)(v43 + 36);
        if (*(_BYTE *)(v93 + *(int *)(OUTLINED_FUNCTION_1_6() + 216)) == 1)
        {
          OUTLINED_FUNCTION_173_1(v63, (uint64_t)v313);
          if ((OUTLINED_FUNCTION_14_1() & 1) == 0)
            OUTLINED_FUNCTION_42_26();
          v94 = v317;
          OUTLINED_FUNCTION_198_0();
          if (v122)
          {
            OUTLINED_FUNCTION_46_25();
            v94 = v317;
          }
          *(_QWORD *)(v94 + 16) = v93;
          OUTLINED_FUNCTION_173_1((uint64_t)v313, v94 + v89 + v43 * v90);
          v43 = v315;
        }
        else
        {
          OUTLINED_FUNCTION_39_6(v63);
        }
        v91 += v90;
        --v92;
      }
      while (v92);
      v67 = (char *)v317;
      v78 = (char *)MEMORY[0x1E0DEE9D8];
      v79 = v306;
      v80 = v304;
    }
    else
    {
      v67 = v78;
    }
    OUTLINED_FUNCTION_14();
    *(_QWORD *)&v317 = v78;
    OUTLINED_FUNCTION_47();
    if (v80)
    {
      v313 = v67;
      v95 = (*(unsigned __int8 *)(v308 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v308 + 80);
      v96 = *(_QWORD *)(v308 + 72);
      v97 = (uint64_t)&v79[v95];
      v98 = v80;
      v99 = (uint64_t)v311;
      do
      {
        OUTLINED_FUNCTION_227(v97, v99);
        v100 = v99 + *(int *)(v43 + 36);
        if (*(_BYTE *)(v100 + *(int *)(OUTLINED_FUNCTION_1_6() + 204)) == 1)
        {
          OUTLINED_FUNCTION_173_1(v99, (uint64_t)v314);
          if ((OUTLINED_FUNCTION_14_1() & 1) == 0)
            OUTLINED_FUNCTION_42_26();
          v101 = v317;
          v102 = *(_QWORD *)(v317 + 16);
          if (v102 >= *(_QWORD *)(v317 + 24) >> 1)
          {
            OUTLINED_FUNCTION_46_25();
            v101 = v317;
          }
          *(_QWORD *)(v101 + 16) = v102 + 1;
          OUTLINED_FUNCTION_173_1((uint64_t)v314, v101 + v95 + v102 * v96);
          v99 = (uint64_t)v311;
        }
        else
        {
          OUTLINED_FUNCTION_39_6(v99);
        }
        v97 += v96;
        --v98;
      }
      while (v98);
      v78 = (char *)v317;
      v67 = v313;
      v80 = v304;
    }
    OUTLINED_FUNCTION_14();
    v103 = v299;
    v104 = (void (*)(_QWORD, _QWORD, _QWORD))(v299
                                                       + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_config);
    v105 = sub_1C0060BA8(v299 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_config);
    sub_1C02CDE78((void *)*(unsigned __int8 *)(v103 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_plusTrialFactors), v105);
    v1 = v303;
    v68 = v300;
    if ((v106 & 1) == 0)
    {
      OUTLINED_FUNCTION_22_2();
LABEL_41:
      OUTLINED_FUNCTION_56();
LABEL_42:
      v63 = *(_QWORD *)(v312 + 16);
      if (qword_1ED727970 != -1)
        goto LABEL_122;
      goto LABEL_43;
    }
    sub_1C0045DFC(v103 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_plusSuggestionHandler, (uint64_t)&v317, &qword_1EF5C2CF8);
    if (*((_QWORD *)&v318 + 1) == 1)
    {
      OUTLINED_FUNCTION_22_2();
      OUTLINED_FUNCTION_56();
      sub_1C0044B78((uint64_t)&v317, &qword_1EF5C2CF8);
      goto LABEL_42;
    }
    v320 = v317;
    v321 = v318;
    v322 = v319;
    if (v105 == 2)
    {
      OUTLINED_FUNCTION_22_2();
      OUTLINED_FUNCTION_209_0();
      goto LABEL_41;
    }
    v314 = (void (*)(char *, char *, uint64_t))v104;
    v80 = (uint8_t *)*((_QWORD *)v78 + 2);
    v63 = MEMORY[0x1E0DEE9D8];
    v313 = v67;
    v310 = v78;
    if (v80)
      break;
LABEL_69:
    sub_1C01FC6BC((uint64_t)v314, v68);
    v126 = v309;
    OUTLINED_FUNCTION_33_1(v68, 1, v309);
    v127 = v295;
    if (v128)
    {
      sub_1C0301D50();
      sub_1C0044B78(v68, &qword_1ED728070);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v307 + 32))(v1, v68, v126);
    }
    OUTLINED_FUNCTION_27_0(&v317, v323);
    v129 = v294;
    sub_1C00C66BC(&v317, (char *)v63, (uint64_t)v1, v105, v294);
    OUTLINED_FUNCTION_18();
    v130 = (uint64_t *)v291;
    sub_1C0045DFC((uint64_t)v129, v291, &qword_1EF5C2CF0);
    OUTLINED_FUNCTION_33_1((uint64_t)v130, 1, v127);
    if (!v128)
    {
      v141 = v290;
      v142 = (char *)v290 + *(int *)(v127 + 48);
      v143 = *(int *)(v127 + 64);
      v144 = v127;
      v146 = *v130;
      v145 = (void (*)(_QWORD, _QWORD, _QWORD))v130[1];
      *v290 = *v130;
      v141[1] = (uint64_t)v145;
      v147 = v130;
      v148 = v307;
      v149 = *(void (**)(void))(v307 + 32);
      v306 = v142;
      v311 = v149;
      v149();
      v150 = *((unsigned __int8 *)v147 + v143);
      *((_BYTE *)v141 + v143) = v150;
      v151 = qword_1ED727970;
      OUTLINED_FUNCTION_21();
      if (v151 != -1)
        swift_once();
      v152 = OUTLINED_FUNCTION_9_0();
      v153 = __swift_project_value_buffer(v152, (uint64_t)&unk_1ED7295C8);
      v154 = (uint64_t)v282;
      v155 = (char *)v282 + *(int *)(v144 + 48);
      v156 = *(int *)(v144 + 64);
      v300 = v146;
      v282->isa = (Class)v146;
      *(_QWORD *)(v154 + 8) = v145;
      v314 = *(void (**)(char *, char *, uint64_t))(v148 + 16);
      v314(v155, v306, v309);
      LODWORD(v291) = v150;
      *(_BYTE *)(v154 + v156) = v150;
      v157 = v283;
      OUTLINED_FUNCTION_282(v154);
      v158 = v287;
      sub_1C005A718(v154, v287, &qword_1EF5B9658);
      v274 = v145;
      OUTLINED_FUNCTION_21();
      v282 = v153;
      v159 = v153;
      sub_1C0303B80();
      v160 = OUTLINED_FUNCTION_9_1();
      if (OUTLINED_FUNCTION_13_2(v160))
      {
        v161 = (uint8_t *)OUTLINED_FUNCTION_4_0();
        v162 = OUTLINED_FUNCTION_4_0();
        v305 = (char *)v162;
        *(_DWORD *)v161 = 136315138;
        *(_QWORD *)&v317 = v162;
        v304 = v161 + 4;
        v163 = *v157;
        v164 = v157[1];
        v165 = *(int *)(v295 + 64);
        v166 = *((_BYTE *)v157 + v165);
        v167 = (uint64_t)v285;
        *v285 = v163;
        *(_QWORD *)(v167 + 8) = v164;
        OUTLINED_FUNCTION_199_0();
        *(_BYTE *)(v167 + v165) = v166;
        sub_1C0045DFC(v167, v277, &qword_1EF5B9658);
        OUTLINED_FUNCTION_32();
        v168 = sub_1C0303EF8();
        v170 = v169;
        sub_1C0044B78(v167, &qword_1EF5B9658);
        v171 = sub_1C003E6D8(v168, v170, (uint64_t *)&v317);
        OUTLINED_FUNCTION_269(v171);
        sub_1C03044B0();
        OUTLINED_FUNCTION_55_0();
        sub_1C0044B78(v287, &qword_1EF5B9658);
        v172 = OUTLINED_FUNCTION_250();
        sub_1C0044B78(v172, v173);
        OUTLINED_FUNCTION_13_0(&dword_1C0039000, v159, (os_log_type_t)v148, "[UCG] Found a valid PICS candidate: %s", v161);
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_5();
      }
      OUTLINED_FUNCTION_39_6(v158);
      OUTLINED_FUNCTION_39_6((uint64_t)v157);

      v181 = v288;
      v182 = v302;
      v183 = v292;
      v184 = *(int *)(v295 + 64);
      v185 = v295;
      v186 = (void (*)(char *, char *, uint64_t))v274;
      *v292 = v300;
      v183[1] = (uint64_t)v186;
      OUTLINED_FUNCTION_199_0();
      *((_BYTE *)v183 + v184) = v291;
      v299 = *((_QWORD *)v310 + 2);
      if (v299)
      {
        v305 = &v310[(*(unsigned __int8 *)(v308 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v308 + 80)];
        v304 = *(uint8_t **)(v308 + 72);
        swift_retain();
        OUTLINED_FUNCTION_21();
        v187 = 0;
        v188 = v293;
        v189 = (void (*)(uint64_t, uint64_t, uint64_t))v314;
        do
        {
          sub_1C0045DFC((uint64_t)&v305[(_QWORD)v304 * v187], v188, &qword_1ED726DB0);
          v190 = v188 + *(int *)(v43 + 36);
          v191 = *(_QWORD *)(v190 + *(int *)(OUTLINED_FUNCTION_1_6() + 208));
          v192 = *(_QWORD *)(v191 + 16);
          if (v192)
          {
            v193 = v307;
            v194 = v191
                 + ((*(unsigned __int8 *)(v307 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v307 + 80));
            OUTLINED_FUNCTION_9_2();
            v195 = *(_QWORD *)(v193 + 72);
            while (1)
            {
              v196 = v309;
              v189(v182, v194, v309);
              __swift_storeEnumTagSinglePayload(v182, 0, 1, v196);
              OUTLINED_FUNCTION_33_1(v182, 1, v196);
              if (v128)
                break;
              v197 = v301;
              ((void (*)(uint64_t, uint64_t, uint64_t))v311)(v301, v182, v196);
              sub_1C0150D84(&qword_1EF5B9098, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
              v198 = sub_1C0303E80();
              (*(void (**)(uint64_t, uint64_t))(v307 + 8))(v197, v196);
              if ((v198 & 1) != 0)
              {
                OUTLINED_FUNCTION_1_0();
                OUTLINED_FUNCTION_2();
                v206 = v284;
                sub_1C005A718(v293, v284, &qword_1ED726DB0);
                v202 = 0;
                v185 = v295;
                v204 = v288;
                v203 = v289;
                v205 = v286;
                v43 = v315;
                goto LABEL_103;
              }
              v194 += v195;
              --v192;
              v182 = v302;
              v189 = (void (*)(uint64_t, uint64_t, uint64_t))v314;
              if (!v192)
                goto LABEL_99;
            }
          }
          else
          {
            OUTLINED_FUNCTION_9_2();
LABEL_99:
            OUTLINED_FUNCTION_232();
            __swift_storeEnumTagSinglePayload(v199, v200, v201, v309);
          }
          ++v187;
          OUTLINED_FUNCTION_2();
          v188 = v293;
          sub_1C0044B78(v293, &qword_1ED726DB0);
          v43 = v315;
        }
        while (v187 != v299);
        OUTLINED_FUNCTION_1_0();
        v202 = 1;
        v185 = v295;
        v204 = v288;
        v203 = v289;
        v205 = v286;
        v206 = v284;
LABEL_103:
        v186 = (void (*)(char *, char *, uint64_t))v274;
      }
      else
      {
        OUTLINED_FUNCTION_21();
        v202 = 1;
        v203 = v289;
        v206 = v284;
        v204 = v181;
        v205 = v286;
      }
      OUTLINED_FUNCTION_278(v206, v202);
      swift_release();
      sub_1C0044B78((uint64_t)v292, &qword_1EF5B9658);
      OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_33_1(v206, 1, v43);
      v207 = v309;
      if (v128)
      {
        sub_1C0044B78(v206, (uint64_t *)&unk_1EF5B8298);
        v208 = v185;
        v209 = v279;
        OUTLINED_FUNCTION_108_7(*(int *)(v185 + 48));
        *(_BYTE *)(v209 + v203) = v291;
        v210 = v281;
        sub_1C005A718(v209, (uint64_t)v281, &qword_1EF5B9658);
        v211 = (int)v282;
        v212 = sub_1C0303B80();
        v213 = sub_1C03042E8();
        if (OUTLINED_FUNCTION_194_0(v213))
        {
          LODWORD(v315) = v211;
          v214 = v207;
          v215 = (uint8_t *)OUTLINED_FUNCTION_4_0();
          v313 = (char *)OUTLINED_FUNCTION_4_0();
          *(_QWORD *)&v317 = v313;
          *(_DWORD *)v215 = 136315138;
          v311 = (void (*)(void))(v215 + 4);
          v216 = *(int *)(v208 + 48);
          v217 = v285;
          v218 = (char *)v285 + v216;
          v219 = *(int *)(v208 + 64);
          v220 = v210[1];
          *v285 = *v210;
          v217[1] = v220;
          v186(v218, (char *)v210 + v216, v214);
          *((_BYTE *)v217 + v219) = *((_BYTE *)v210 + v219);
          sub_1C0301D20();
          OUTLINED_FUNCTION_286();
          v221 = (*(uint64_t (**)(char *, uint64_t))(v307 + 8))(v218, v214);
          v223 = OUTLINED_FUNCTION_289(v221, v222, (uint64_t *)&v317);
          OUTLINED_FUNCTION_269(v223);
          sub_1C03044B0();
          OUTLINED_FUNCTION_31();
          OUTLINED_FUNCTION_109_1((uint64_t)v210);
          OUTLINED_FUNCTION_13_0(&dword_1C0039000, v212, (os_log_type_t)v315, "[UCG] PLUS Candidate was not a valid PICs match for this request. Removing... (plusId was %s", v215);
          OUTLINED_FUNCTION_23();
          OUTLINED_FUNCTION_5();
        }

        v248 = (uint64_t)v210;
        v249 = &qword_1EF5B9658;
      }
      else
      {
        sub_1C005A718(v206, v203, &qword_1ED726DB0);
        v224 = v203 + *(int *)(v43 + 36);
        v225 = OUTLINED_FUNCTION_1_6();
        if (*(_BYTE *)(v224 + *(int *)(v225 + 236)) == 1)
        {
          v226 = (int *)v225;
          LODWORD(v315) = *(_QWORD *)(*(_QWORD *)(v224 + *(int *)(v225 + 208)) + 16) > 1uLL;
          v227 = v280;
          sub_1C0045DFC(v289, v280, &qword_1ED726DB0);
          v228 = v291;
          v229 = v291 ^ 1;
          *(_BYTE *)(v227 + *(int *)(OUTLINED_FUNCTION_52_1() + 92)) = v229;
          v230 = (void (*)(_QWORD, _QWORD, _QWORD))v186;
          v231 = v227 + *(int *)(v43 + 36);
          *(_BYTE *)(v231 + v226[51]) = 1;
          v232 = v185;
          v233 = *(int *)(v185 + 48);
          v234 = v285;
          v235 = (char *)v285 + v233;
          v236 = *(int *)(v232 + 64);
          *v285 = v300;
          v234[1] = (uint64_t)v230;
          OUTLINED_FUNCTION_199_0();
          *((_BYTE *)v234 + v236) = v228;
          *(_BYTE *)(v231 + v226[53]) = v228;
          v237 = v307;
          v238 = *(void (**)(char *, uint64_t))(v307 + 8);
          v238(v235, v207);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8D00);
          v239 = (*(unsigned __int8 *)(v237 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v237 + 80);
          v240 = swift_allocObject();
          *(_OWORD *)(v240 + 16) = v278;
          v241 = v240 + v239;
          v242 = (char *)v234 + *(int *)(v295 + 48);
          OUTLINED_FUNCTION_199_0();
          swift_bridgeObjectRelease();
          ((void (*)(unint64_t, char *, uint64_t))v311)(v241, v242, v207);
          v243 = v226[52];
          swift_bridgeObjectRelease();
          *(_QWORD *)(v231 + v243) = v240;
          *(_BYTE *)(v231 + v226[55]) = v315;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED727010);
          v244 = (*(unsigned __int8 *)(v308 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v308 + 80);
          v245 = swift_allocObject();
          *(_OWORD *)(v245 + 16) = v278;
          v246 = v280;
          sub_1C0045DFC(v280, v245 + v244, &qword_1ED726DB0);
          *(_QWORD *)&v317 = v312;
          sub_1C0288CD4();
          sub_1C0044B78(v289, &qword_1ED726DB0);
          sub_1C0044B78((uint64_t)v290, &qword_1EF5B9658);
          OUTLINED_FUNCTION_157_1(v247, &qword_1EF5C2CF0);
          v238((char *)v303, v207);
          OUTLINED_FUNCTION_209_0();
          sub_1C0044B78(v246, &qword_1ED726DB0);
          goto LABEL_46;
        }
        sub_1C0045DFC(v289, (uint64_t)v204, &qword_1ED726DB0);
        v250 = v275;
        OUTLINED_FUNCTION_108_7(*(int *)(v185 + 48));
        *(_BYTE *)(v250 + v203) = v291;
        v251 = v276;
        OUTLINED_FUNCTION_282(v250);
        sub_1C005A718(v250, v205, &qword_1EF5B9658);
        v252 = (int)v282;
        v253 = sub_1C0303B80();
        v254 = sub_1C03042E8();
        v255 = v185;
        if (OUTLINED_FUNCTION_194_0(v254))
        {
          v256 = OUTLINED_FUNCTION_4_0();
          v315 = OUTLINED_FUNCTION_4_0();
          *(_QWORD *)&v317 = v315;
          *(_DWORD *)v256 = 136315394;
          LODWORD(v313) = v252;
          v257 = (uint64_t)v204;
          v258 = *v204;
          v259 = v204[1];
          OUTLINED_FUNCTION_32();
          v316 = sub_1C003E6D8(v258, v259, (uint64_t *)&v317);
          sub_1C03044B0();
          OUTLINED_FUNCTION_29_0();
          sub_1C0044B78(v257, &qword_1ED726DB0);
          *(_WORD *)(v256 + 12) = 2080;
          v311 = (void (*)(void))(v256 + 14);
          v260 = *(int *)(v255 + 48);
          v261 = (uint64_t *)v251;
          v262 = v285;
          v263 = (char *)v285 + v260;
          v264 = *(int *)(v255 + 64);
          v265 = (char *)v261 + v260;
          v266 = v261[1];
          *v285 = *v261;
          v262[1] = v266;
          v267 = (char *)v262 + v260;
          v268 = v186;
          v269 = v309;
          v268(v267, v265, v309);
          *((_BYTE *)v262 + v264) = *((_BYTE *)v261 + v264);
          sub_1C0301D20();
          (*(void (**)(char *, uint64_t))(v307 + 8))(v263, v269);
          v270 = OUTLINED_FUNCTION_250();
          v316 = sub_1C003E6D8(v270, v271, v272);
          sub_1C03044B0();
          OUTLINED_FUNCTION_28();
          OUTLINED_FUNCTION_109_1(v286);
          OUTLINED_FUNCTION_109_1((uint64_t)v261);
          OUTLINED_FUNCTION_38_8(&dword_1C0039000, v253, (os_log_type_t)v313, "[UCG] PLUS Candidate %s no longer exists in the address book. Ignoring... (plusId was %s)", (uint8_t *)v256);
          OUTLINED_FUNCTION_21_2();
          OUTLINED_FUNCTION_5();
        }

        OUTLINED_FUNCTION_109_1(v205);
        OUTLINED_FUNCTION_109_1(v251);
        OUTLINED_FUNCTION_39_6((uint64_t)v204);
        v248 = v289;
        v249 = &qword_1ED726DB0;
      }
      sub_1C0044B78(v248, v249);
      OUTLINED_FUNCTION_109_1((uint64_t)v290);
      OUTLINED_FUNCTION_157_1(v273, &qword_1EF5C2CF0);
      (*(void (**)(uint64_t *, uint64_t))(v307 + 8))(v303, v207);
      OUTLINED_FUNCTION_209_0();
      v112 = (uint64_t)v298;
      goto LABEL_47;
    }
    OUTLINED_FUNCTION_22_2();
    sub_1C0044B78((uint64_t)v130, &qword_1EF5C2CF0);
    v68 = *((_QWORD *)v67 + 2);
    if (!v68)
    {
LABEL_85:
      v174 = v309;
      if (qword_1ED727970 != -1)
        swift_once();
      v175 = OUTLINED_FUNCTION_9_0();
      v176 = (void *)__swift_project_value_buffer(v175, (uint64_t)&unk_1ED7295C8);
      sub_1C0303B80();
      v177 = OUTLINED_FUNCTION_9_1();
      if (OUTLINED_FUNCTION_6_1(v177))
      {
        *(_WORD *)OUTLINED_FUNCTION_4_0() = 0;
        OUTLINED_FUNCTION_4_12(&dword_1C0039000, v178, v179, "[UCG] No valid PICS suggestions found");
        OUTLINED_FUNCTION_5();
      }

      *(_QWORD *)&v317 = v312;
      sub_1C0288CD4();
      OUTLINED_FUNCTION_157_1(v180, &qword_1EF5C2CF0);
      (*(void (**)(uint64_t *, uint64_t))(v307 + 8))(v1, v174);
      OUTLINED_FUNCTION_209_0();
      goto LABEL_46;
    }
    v131 = 0;
    v63 = 2;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C01F5AF8();
        v67 = v140;
      }
      if (v131 >= *((_QWORD *)v67 + 2))
        break;
      v132 = v131 + 1;
      OUTLINED_FUNCTION_161_2();
      v133 = v67;
      v136 = v134 + v135 * v131;
      v137 = v136 + *(int *)(v43 + 36);
      v138 = (int *)OUTLINED_FUNCTION_1_6();
      *(_BYTE *)(v137 + v138[51]) = 0;
      *(_BYTE *)(v136 + *(int *)(v43 + 36) + v138[53]) = 0;
      *(_BYTE *)(v136 + *(int *)(OUTLINED_FUNCTION_52_1() + 92)) = 2;
      v139 = v136 + *(int *)(v43 + 36);
      v67 = v133;
      *(_QWORD *)(v139 + v138[52]) = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
      v131 = v132;
      if (v68 == v132)
        goto LABEL_85;
    }
LABEL_119:
    __break(1u);
LABEL_120:
    swift_once();
  }
  LODWORD(v311) = v105;
  OUTLINED_FUNCTION_21_1();
  v67 = &v78[v113];
  v115 = *(_QWORD *)(v114 + 72);
  OUTLINED_FUNCTION_183_0();
  v1 = &qword_1ED726DB0;
  while (1)
  {
    v116 = (uint64_t)v305;
    sub_1C0045DFC((uint64_t)v67, (uint64_t)v305, &qword_1ED726DB0);
    v117 = v116 + *(int *)(v43 + 36);
    v118 = *(_QWORD *)(v117 + *(int *)(OUTLINED_FUNCTION_1_6() + 208));
    OUTLINED_FUNCTION_32();
    sub_1C0044B78(v116, &qword_1ED726DB0);
    v43 = *(_QWORD *)(v118 + 16);
    v68 = *(_QWORD *)(v63 + 16);
    if (__OFADD__(v68, v43))
    {
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
    if (!OUTLINED_FUNCTION_245() || v68 + v43 > *(_QWORD *)(v63 + 24) >> 1)
    {
      sub_1C004FA94();
      v63 = v119;
    }
    if (*(_QWORD *)(v118 + 16))
      break;
    if (v43)
      goto LABEL_117;
LABEL_67:
    OUTLINED_FUNCTION_29_0();
    v67 += v115;
    --v80;
    v43 = v315;
    if (!v80)
    {
      OUTLINED_FUNCTION_22_2();
      v1 = v303;
      v67 = v313;
      v68 = v300;
      v105 = (int)v311;
      goto LABEL_69;
    }
  }
  if ((*(_QWORD *)(v63 + 24) >> 1) - *(_QWORD *)(v63 + 16) < v43)
    goto LABEL_118;
  OUTLINED_FUNCTION_294();
  OUTLINED_FUNCTION_205_0();
  v122 = v122 || v120 >= v121;
  if (!v122)
  {
    OUTLINED_FUNCTION_18_43();
    OUTLINED_FUNCTION_85_7();
    __break(1u);
    return;
  }
  swift_arrayInitWithCopy();
  if (!v43)
    goto LABEL_67;
  v123 = *(_QWORD *)(v63 + 16);
  v124 = __OFADD__(v123, v43);
  v125 = v123 + v43;
  if (!v124)
  {
    *(_QWORD *)(v63 + 16) = v125;
    goto LABEL_67;
  }
  __break(1u);
LABEL_122:
  swift_once();
LABEL_43:
  v107 = OUTLINED_FUNCTION_9_0();
  v108 = __swift_project_value_buffer(v107, (uint64_t)&unk_1ED7295C8);
  sub_1C0303B80();
  v109 = OUTLINED_FUNCTION_9_1();
  if (OUTLINED_FUNCTION_6_1(v109))
  {
    v110 = &v80[-v63];
    v111 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v111 = 134217984;
    *(_QWORD *)&v317 = v110;
    sub_1C03044B0();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v108, (os_log_type_t)v68, "[UCG] PLUS is not enabled. Will filter out PLUS candidates (%ld removed)", v111);
    OUTLINED_FUNCTION_5();
  }

LABEL_46:
  v112 = (uint64_t)v298;
LABEL_47:
  sub_1C03043D8();
  sub_1C0303B5C();
  sub_1C003DD84(v112, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  OUTLINED_FUNCTION_1();
}

void sub_1C029D6C4(uint64_t a1@<X0>, unsigned __int16 *a2@<X1>, uint64_t a3@<X8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[48];

  v4 = *a2;
  OUTLINED_FUNCTION_227(a1, a3);
  OUTLINED_FUNCTION_52_1();
  v5 = a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0) + 36);
  sub_1C005A718(v5 + 200, (uint64_t)v12, &qword_1ED726478);
  OUTLINED_FUNCTION_241(v6, v7);
  OUTLINED_FUNCTION_241(v8, v9);
  v10 = OUTLINED_FUNCTION_22();
  v11 = sub_1C02857B0(v10, (uint64_t)v12, v4, a3);
  sub_1C02A2CA4((uint64_t)v12);
  OUTLINED_FUNCTION_18();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 + 272) = v11;
  OUTLINED_FUNCTION_134_2();
}

uint64_t sub_1C029D77C(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  char v31;
  __int128 v32;
  unsigned __int8 v33;
  int v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  __int128 *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  __int128 v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v49;
  int v50;
  uint64_t v51;
  unsigned __int8 *v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  _OWORD v58[3];
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Contact() + 80));
  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
    return 0;
  v5 = *a2;
  v49 = *MEMORY[0x1E0D13768];
  swift_bridgeObjectRetain_n();
  v6 = v5;
  v7 = 0;
  v50 = v5;
  v51 = v3;
  v52 = a2;
  do
  {
    v8 = *(_QWORD *)(v3 + v7 + 32);
    v9 = *(_QWORD *)(v3 + v7 + 40);
    v10 = *(unsigned __int8 *)(v3 + v7 + 48);
    v11 = *(_QWORD *)(v3 + v7 + 56);
    v12 = *(_QWORD *)(v3 + v7 + 64);
    v13 = *(_QWORD *)(v3 + v7 + 72);
    v14 = *(_QWORD *)(v3 + v7 + 80);
    v15 = *(_QWORD *)(v3 + v7 + 96);
    v67 = *(_QWORD *)(v3 + v7 + 88);
    v16 = *(_BYTE *)(v3 + v7 + 104);
    v17 = *(_BYTE *)(v3 + v7 + 105);
    if (v6 && v6 != v10)
      goto LABEL_30;
    v18 = *((_QWORD *)a2 + 4);
    v19 = *((_QWORD *)a2 + 5);
    *(_QWORD *)&v57 = v8;
    *((_QWORD *)&v57 + 1) = v9;
    v55 = v13;
    v56 = v11;
    v53 = v17;
    v54 = v16;
    if (!v6)
    {
      *(_QWORD *)&v59 = v18;
      *((_QWORD *)&v59 + 1) = v19;
      *(_QWORD *)&v58[0] = 64;
      *((_QWORD *)&v58[0] + 1) = 0xE100000000000000;
      sub_1C004F408();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((sub_1C030454C() & 1) != 0)
      {
        v20 = (void *)sub_1C0303E8C();
        v21 = (void *)(*(uint64_t (**)(uint64_t, void *))(v49 + 16))(v49, v20);
        goto LABEL_10;
      }
      sub_1C00447B0(0, (unint64_t *)&qword_1ED727C40);
LABEL_13:
      swift_bridgeObjectRetain();
      v26 = sub_1C01FF97C();
      sub_1C0207D2C(v26);
      if (v28)
        v23 = v27;
      else
        v23 = 0;
      if (v28)
        v25 = v28;
      else
        v25 = 0xE000000000000000;
      goto LABEL_19;
    }
    if (v6 != 1)
    {
      sub_1C00447B0(0, (unint64_t *)&qword_1ED727C40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = (void *)sub_1C0303E8C();
    v21 = (void *)(*(uint64_t (**)(uint64_t, void *))(v49 + 16))(v49, v20);
LABEL_10:
    v22 = v21;

    v23 = sub_1C0303EB0();
    v25 = v24;

LABEL_19:
    v29 = HIBYTE(v25) & 0xF;
    if ((v25 & 0x2000000000000000) == 0)
      v29 = v23 & 0xFFFFFFFFFFFFLL;
    a2 = v52;
    if (!v29 || (v23 == v67 ? (v30 = v25 == v15) : (v30 = 0), v30))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v31 = sub_1C0304A08();
      swift_bridgeObjectRelease();
      if ((v31 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v3 = v51;
        v6 = v50;
        goto LABEL_30;
      }
    }
    v59 = v57;
    LOBYTE(v60) = v10;
    *((_QWORD *)&v60 + 1) = v56;
    *(_QWORD *)&v61 = v12;
    *((_QWORD *)&v61 + 1) = v55;
    v62 = v14;
    v63 = v67;
    v64 = v15;
    v65 = v54;
    v66 = v53;
    v32 = *((_OWORD *)v52 + 1);
    v58[0] = *(_OWORD *)v52;
    v58[1] = v32;
    v58[2] = *((_OWORD *)v52 + 2);
    sub_1C02057DC();
    v34 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = v51;
    v6 = v50;
    if (v34)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
LABEL_30:
    v7 += 80;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  if (qword_1ED727970 != -1)
    swift_once();
  v35 = sub_1C0303B98();
  __swift_project_value_buffer(v35, (uint64_t)&unk_1ED7295C8);
  sub_1C027E68C((uint64_t)a2);
  swift_bridgeObjectRetain();
  sub_1C027E68C((uint64_t)a2);
  v36 = sub_1C0303B80();
  v37 = sub_1C03042E8();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (__int128 *)a2;
    v39 = swift_slowAlloc();
    v40 = swift_slowAlloc();
    *(_QWORD *)&v58[0] = v40;
    *(_DWORD *)v39 = 136315394;
    v41 = swift_bridgeObjectRetain();
    v42 = MEMORY[0x1C3B97040](v41, &type metadata for ContactHandle);
    v44 = v43;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v59 = sub_1C003E6D8(v42, v44, (uint64_t *)v58);
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 12) = 2080;
    v45 = v38[1];
    v59 = *v38;
    v60 = v45;
    v61 = v38[2];
    v46 = ContactHandleQuery.description.getter();
    *(_QWORD *)&v59 = sub_1C003E6D8(v46, v47, (uint64_t *)v58);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    sub_1C01ECA20((uint64_t)v38);
    sub_1C01ECA20((uint64_t)v38);
    _os_log_impl(&dword_1C0039000, v36, v37, "[UCG] Nominating contact with %s for removal because it doesn't match the query for %s", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v40, -1, -1);
    MEMORY[0x1C3B98378](v39, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1C01ECA20((uint64_t)a2);
    sub_1C01ECA20((uint64_t)a2);
  }

  return 0;
}

void sub_1C029DD18(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v25;
  _QWORD v26[2];

  v6 = 0;
  v7 = 0;
  v8 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v8 = a1;
  v9 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v9 = 11;
  v10 = v9 | (v8 << 16);
  v26[0] = a3;
  v26[1] = a4;
  v11 = &unk_1ED727000;
  do
  {
    v12 = v6;
    v13 = v26[v7];
    sub_1C030403C();
    if ((v14 & 1) != 0)
    {
      if (v11[302] != -1)
        swift_once();
      v15 = sub_1C0303B98();
      __swift_project_value_buffer(v15, (uint64_t)&unk_1ED7295C8);
      swift_bridgeObjectRetain_n();
      v16 = sub_1C0303B80();
      v17 = sub_1C0304300();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = swift_slowAlloc();
        v19 = v10;
        v20 = v11;
        v21 = swift_slowAlloc();
        v25 = v21;
        *(_DWORD *)v18 = 136315906;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v18 + 4) = sub_1C003E6D8(a1, a2, &v25);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v18 + 12) = 2048;
        *(_QWORD *)(v18 + 14) = v13;
        *(_WORD *)(v18 + 22) = 2048;
        *(_QWORD *)(v18 + 24) = a3;
        *(_WORD *)(v18 + 32) = 2048;
        *(_QWORD *)(v18 + 34) = a4;
        _os_log_impl(&dword_1C0039000, v16, v17, "[UCG] Invalid UTF-16 offset: string=%s offset=%ld range=%ld:%ld", (uint8_t *)v18, 0x2Au);
        swift_arrayDestroy();
        v22 = v21;
        v11 = v20;
        v10 = v19;
        MEMORY[0x1C3B98378](v22, -1, -1);
        MEMORY[0x1C3B98378](v18, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    v6 = 1;
    v7 = 1;
  }
  while ((v12 & 1) == 0);
}

void sub_1C029DF68(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v4 = sub_1C0304048();
    OUTLINED_FUNCTION_171_2(v4);
  }
  else
  {
    v3 = MEMORY[0x1C3B96F14](15, a1 >> 16);
    OUTLINED_FUNCTION_171_2(v3);
  }
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C029DFBC(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  int64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  int64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  _BOOL4 v62;
  uint64_t v63;
  int64_t v64;
  unint64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v69;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  char *v75;
  int64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  char v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  unint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  unint64_t v130;
  _QWORD *v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  int64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  _QWORD *v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  char *v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t result;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  int64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  int64_t v195;
  uint64_t v196;
  unint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  unint64_t v205;
  char *v206;
  uint64_t v207;
  _QWORD *v208;
  uint64_t v209;
  _QWORD *v210;

  v3 = v2;
  v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v198 = *(_QWORD *)(v194 - 8);
  v6 = MEMORY[0x1E0C80A78](v194);
  v193 = (uint64_t)&v185 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v202 = (uint64_t)&v185 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v207 = (uint64_t)&v185 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v203 = (uint64_t)&v185 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v199 = (uint64_t)&v185 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v196 = (uint64_t)&v185 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v188 = (uint64_t)&v185 - v19;
  MEMORY[0x1E0C80A78](v18);
  v189 = (uint64_t)&v185 - v20;
  v208 = a1;
  v21 = a1[1];
  swift_bridgeObjectRetain_n();
  v22 = sub_1C03049CC();
  if (v22 >= v21)
  {
    if ((v21 & 0x8000000000000000) == 0)
    {
      if (v21)
        sub_1C029F510(0, v21, 1, v208, a2);
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
    goto LABEL_202;
  }
  v187 = v22;
  sub_1C027DFFC(v21 / 2);
  v185 = v23;
  v197 = v24;
  v209 = a2;
  v186 = v21;
  if (v21 <= 0)
  {
    v73 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    v27 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_157:
    v206 = v27;
    if (v73 >= 2)
    {
      v169 = (_QWORD *)*v208;
      v208 = (_QWORD *)*v208;
      do
      {
        v170 = v73 - 2;
        if (v73 < 2)
          goto LABEL_196;
        if (!v169)
          goto LABEL_211;
        v171 = v3;
        v172 = *(_QWORD *)&v206[16 * v170 + 32];
        v173 = *(_QWORD *)&v206[16 * v73 + 24];
        v174 = *(_QWORD *)(v198 + 72);
        v175 = (unint64_t)v169 + v174 * v172;
        v176 = (unint64_t)v169 + v174 * *(_QWORD *)&v206[16 * v73 + 16];
        v177 = (unint64_t)v169 + v174 * v173;
        v178 = v209;
        swift_bridgeObjectRetain();
        sub_1C029F974(v175, v176, v177, v197, v178);
        if (v171)
        {
          v183 = v186;
          goto LABEL_174;
        }
        if (v173 < v172)
          goto LABEL_197;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v206 = sub_1C020FAB8();
        v179 = v206;
        if (v170 >= *((_QWORD *)v206 + 2))
          goto LABEL_198;
        v180 = v206 + 32;
        v181 = &v206[16 * v170 + 32];
        *(_QWORD *)v181 = v172;
        *((_QWORD *)v181 + 1) = v173;
        v182 = *((_QWORD *)v179 + 2);
        if (v73 > v182)
          goto LABEL_199;
        memmove(&v180[16 * v73 - 16], &v180[16 * v73], 16 * (v182 - v73));
        *((_QWORD *)v179 + 2) = v182 - 1;
        v73 = v182 - 1;
        v3 = 0;
        v169 = v208;
      }
      while (v182 > 2);
    }
    swift_bridgeObjectRelease();
    if (v186 >= -1)
    {
      *(_QWORD *)(v185 + 16) = 0;
      goto LABEL_176;
    }
LABEL_208:
    __break(1u);
LABEL_209:
    swift_bridgeObjectRelease_n();
    __break(1u);
LABEL_210:
    swift_bridgeObjectRelease_n();
    __break(1u);
LABEL_211:
    swift_bridgeObjectRelease_n();
    __break(1u);
LABEL_212:
    result = swift_bridgeObjectRelease_n();
    __break(1u);
    return result;
  }
  v25 = 0;
  v26 = v21;
  v27 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v28 = v25 + 1;
    v195 = v25;
    if (v25 + 1 < v26)
    {
      v29 = *v208;
      v30 = *(_QWORD *)(v198 + 72);
      v191 = v25 + 1;
      sub_1C0045DFC(v29 + v30 * v28, v189, &qword_1ED726DB0);
      v204 = v29;
      v205 = v30;
      v31 = v188;
      sub_1C0045DFC(v29 + v30 * v25, v188, &qword_1ED726DB0);
      v32 = v189;
      v200 = sub_1C0295FAC(v189, a2);
      v192 = sub_1C0295FAC(v31, a2);
      sub_1C0044B78(v31, &qword_1ED726DB0);
      sub_1C0044B78(v32, &qword_1ED726DB0);
      v33 = v25 + 2;
      if (v33 < v26)
      {
        v206 = v27;
        v34 = v191;
        v35 = v204;
        v190 = v26;
        while (1)
        {
          v36 = v205;
          v37 = v196;
          sub_1C0045DFC(v35 + v33 * v205, v196, &qword_1ED726DB0);
          sub_1C0045DFC(v35 + v34 * v36, v199, &qword_1ED726DB0);
          MEMORY[0x1E0C80A78](v38);
          *(&v185 - 2) = v37;
          swift_bridgeObjectRetain();
          sub_1C0270FFC((uint64_t (*)(_QWORD *))sub_1C02A3768, (uint64_t)(&v185 - 4), a2);
          v40 = v39;
          v41 = *(_QWORD *)(v39 + 16);
          if (v41)
          {
            v210 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            sub_1C00B1A78();
            v42 = v210;
            v43 = v210[2];
            v44 = 40;
            do
            {
              v45 = *(_QWORD *)(v40 + v44);
              v210 = v42;
              if (v43 >= v42[3] >> 1)
              {
                sub_1C00B1A78();
                v42 = v210;
              }
              v42[2] = v43 + 1;
              v42[v43 + 4] = v45;
              v44 += 16;
              ++v43;
              --v41;
            }
            while (v41);
            swift_bridgeObjectRelease();
            a2 = v209;
          }
          else
          {
            swift_bridgeObjectRelease();
            v42 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          }
          v46 = v42[2];
          if (v46)
          {
            v47 = 0;
            v48 = v42 + 4;
            do
            {
              v49 = *v48++;
              v88 = __OFADD__(v47, v49);
              v47 += v49;
              if (v88)
                goto LABEL_180;
              --v46;
            }
            while (v46);
          }
          else
          {
            v47 = 0;
          }
          v50 = swift_bridgeObjectRelease();
          MEMORY[0x1E0C80A78](v50);
          *(&v185 - 2) = v199;
          swift_bridgeObjectRetain();
          sub_1C0270FFC((uint64_t (*)(_QWORD *))sub_1C02A3768, (uint64_t)(&v185 - 4), a2);
          v52 = v51;
          v53 = *(_QWORD *)(v51 + 16);
          if (v53)
          {
            v201 = v3;
            v210 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            sub_1C00B1A78();
            v54 = v210;
            v55 = v210[2];
            v56 = 40;
            do
            {
              v57 = *(_QWORD *)(v52 + v56);
              v210 = v54;
              if (v55 >= v54[3] >> 1)
              {
                sub_1C00B1A78();
                v54 = v210;
              }
              v54[2] = v55 + 1;
              v54[v55 + 4] = v57;
              v56 += 16;
              ++v55;
              --v53;
            }
            while (v53);
            swift_bridgeObjectRelease();
            a2 = v209;
            v3 = v201;
          }
          else
          {
            swift_bridgeObjectRelease();
            v54 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          }
          v58 = v54[2];
          v26 = v190;
          v59 = 0;
          if (v58)
          {
            v60 = v54 + 4;
            do
            {
              v61 = *v60++;
              v88 = __OFADD__(v59, v61);
              v59 += v61;
              if (v88)
                goto LABEL_181;
              --v58;
            }
            while (v58);
          }
          v62 = v192 < v200;
          swift_bridgeObjectRelease();
          sub_1C0044B78(v199, &qword_1ED726DB0);
          sub_1C0044B78(v196, &qword_1ED726DB0);
          if (((v62 ^ (v59 >= v47)) & 1) == 0)
            break;
          v34 = v33++;
          v35 = v204;
          if (v33 >= v26)
          {
            v33 = v26;
            v27 = v206;
            goto LABEL_36;
          }
        }
        v27 = v206;
      }
      v35 = v204;
LABEL_36:
      if (v192 >= v200)
      {
        v28 = v33;
        v25 = v195;
      }
      else
      {
        if (v33 < v195)
          goto LABEL_207;
        if (v195 >= v33)
        {
          v28 = v33;
          v25 = v195;
        }
        else
        {
          v190 = v26;
          v201 = v3;
          v206 = v27;
          v63 = 0;
          v64 = v205 * (v33 - 1);
          v65 = v33 * v205;
          v66 = v195;
          v67 = v195 * v205;
          do
          {
            if (v66 != v33 + v63 - 1)
            {
              if (!v35)
                goto LABEL_212;
              sub_1C005A718(v35 + v67, v193, &qword_1ED726DB0);
              if (v67 < v64 || v35 + v67 >= v35 + v65)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v67 != v64)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_1C005A718(v193, v35 + v64, &qword_1ED726DB0);
              v35 = v204;
            }
            ++v66;
            --v63;
            v64 -= v205;
            v65 -= v205;
            v67 += v205;
          }
          while (v66 < v33 + v63);
          v28 = v33;
          a2 = v209;
          v27 = v206;
          v3 = v201;
          v25 = v195;
          v26 = v190;
        }
      }
    }
    if (v28 >= v26)
      goto LABEL_64;
    if (__OFSUB__(v28, v25))
      goto LABEL_203;
    if (v28 - v25 >= v187)
      goto LABEL_64;
    if (__OFADD__(v25, v187))
      goto LABEL_205;
    if (v25 + v187 >= v26)
      v69 = v26;
    else
      v69 = v25 + v187;
    if (v69 < v25)
    {
LABEL_206:
      __break(1u);
LABEL_207:
      __break(1u);
      goto LABEL_208;
    }
    if (v28 == v69)
      goto LABEL_64;
    v205 = *(_QWORD *)(v198 + 72);
    v206 = v27;
    v131 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v192 = v69;
    do
    {
      v191 = v28;
      v132 = v28;
      do
      {
        v133 = v132 - 1;
        v134 = *v208;
        v135 = v205;
        v201 = v205 * v132;
        v136 = v203;
        sub_1C0045DFC(v134 + v205 * v132, v203, &qword_1ED726DB0);
        v204 = v133;
        v200 = v135 * v133;
        sub_1C0045DFC(v134 + v135 * v133, v207, &qword_1ED726DB0);
        MEMORY[0x1E0C80A78](v137);
        *(&v185 - 2) = v136;
        swift_bridgeObjectRetain();
        v138 = v3;
        sub_1C0270FFC((uint64_t (*)(_QWORD *))sub_1C02A2F14, (uint64_t)(&v185 - 4), a2);
        v140 = v139;
        v141 = v3;
        v142 = *(_QWORD *)(v139 + 16);
        if (v142)
        {
          v210 = v131;
          sub_1C00B1A78();
          v143 = v210;
          v144 = v210[2];
          v145 = 40;
          do
          {
            v146 = *(_QWORD *)(v140 + v145);
            v210 = v143;
            if (v144 >= v143[3] >> 1)
            {
              sub_1C00B1A78();
              v143 = v210;
            }
            v143[2] = v144 + 1;
            v143[v144 + 4] = v146;
            v145 += 16;
            ++v144;
            --v142;
          }
          while (v142);
          swift_bridgeObjectRelease();
          a2 = v209;
        }
        else
        {
          swift_bridgeObjectRelease();
          v143 = v131;
        }
        v147 = v143[2];
        if (v147)
        {
          v148 = 0;
          v149 = v143 + 4;
          while (1)
          {
            v150 = *v149++;
            v88 = __OFADD__(v148, v150);
            v148 += v150;
            if (v88)
              break;
            if (!--v147)
              goto LABEL_130;
          }
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          __break(1u);
LABEL_203:
          __break(1u);
LABEL_204:
          __break(1u);
LABEL_205:
          __break(1u);
          goto LABEL_206;
        }
        v148 = 0;
LABEL_130:
        v151 = swift_bridgeObjectRelease();
        MEMORY[0x1E0C80A78](v151);
        *(&v185 - 2) = v207;
        swift_bridgeObjectRetain();
        sub_1C0270FFC((uint64_t (*)(_QWORD *))sub_1C02A3768, (uint64_t)(&v185 - 4), a2);
        v153 = v152;
        v3 = v141;
        v154 = *(_QWORD *)(v152 + 16);
        if (v154)
        {
          v210 = v131;
          sub_1C00B1A78();
          v155 = v210;
          v156 = v210[2];
          v157 = 40;
          do
          {
            v158 = *(_QWORD *)(v153 + v157);
            v210 = v155;
            if (v156 >= v155[3] >> 1)
            {
              sub_1C00B1A78();
              v155 = v210;
            }
            v155[2] = v156 + 1;
            v155[v156 + 4] = v158;
            v157 += 16;
            ++v156;
            --v154;
          }
          while (v154);
          swift_bridgeObjectRelease();
          a2 = v209;
          v3 = v138;
          v131 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        }
        else
        {
          swift_bridgeObjectRelease();
          v155 = v131;
        }
        v159 = v155[2];
        v160 = 0;
        if (v159)
        {
          v161 = v155 + 4;
          do
          {
            v162 = *v161++;
            v88 = __OFADD__(v160, v162);
            v160 += v162;
            if (v88)
              goto LABEL_179;
          }
          while (--v159);
        }
        swift_bridgeObjectRelease();
        sub_1C0044B78(v207, &qword_1ED726DB0);
        sub_1C0044B78(v203, &qword_1ED726DB0);
        v105 = v160 < v148;
        v25 = v195;
        if (!v105)
          break;
        v163 = *v208;
        if (!*v208)
          goto LABEL_210;
        v165 = v200;
        v164 = v201;
        v166 = v163 + v201;
        v167 = v163 + v200;
        sub_1C005A718(v163 + v201, v202, &qword_1ED726DB0);
        if (v164 < v165 || v166 >= v167 + v205)
          swift_arrayInitWithTakeFrontToBack();
        sub_1C005A718(v202, v167, &qword_1ED726DB0);
        v132 = v204;
      }
      while (v204 != v25);
      v28 = v191 + 1;
    }
    while (v191 + 1 != v192);
    v28 = v192;
    v27 = v206;
LABEL_64:
    if (v28 < v25)
      goto LABEL_201;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v191 = v28;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v27 = sub_1C00500C8(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
    v72 = *((_QWORD *)v27 + 2);
    v71 = *((_QWORD *)v27 + 3);
    v73 = v72 + 1;
    if (v72 >= v71 >> 1)
      v27 = sub_1C00500C8((char *)(v71 > 1), v72 + 1, 1, v27);
    *((_QWORD *)v27 + 2) = v73;
    v74 = v27 + 32;
    v75 = &v27[16 * v72 + 32];
    v76 = v191;
    *(_QWORD *)v75 = v25;
    *((_QWORD *)v75 + 1) = v76;
    if (v72)
      break;
    v73 = 1;
LABEL_113:
    a2 = v209;
    v26 = v208[1];
    v25 = v191;
    if (v191 >= v26)
      goto LABEL_157;
  }
  v206 = v27;
  while (1)
  {
    v77 = v73 - 1;
    if (v73 >= 4)
    {
      v82 = &v74[16 * v73];
      v83 = *((_QWORD *)v82 - 8);
      v84 = *((_QWORD *)v82 - 7);
      v88 = __OFSUB__(v84, v83);
      v85 = v84 - v83;
      if (v88)
        goto LABEL_186;
      v87 = *((_QWORD *)v82 - 6);
      v86 = *((_QWORD *)v82 - 5);
      v88 = __OFSUB__(v86, v87);
      v80 = v86 - v87;
      v81 = v88;
      if (v88)
        goto LABEL_187;
      v89 = v73 - 2;
      v90 = &v74[16 * v73 - 32];
      v92 = *(_QWORD *)v90;
      v91 = *((_QWORD *)v90 + 1);
      v88 = __OFSUB__(v91, v92);
      v93 = v91 - v92;
      if (v88)
        goto LABEL_188;
      v88 = __OFADD__(v80, v93);
      v94 = v80 + v93;
      if (v88)
        goto LABEL_190;
      if (v94 >= v85)
      {
        v112 = &v74[16 * v77];
        v114 = *(_QWORD *)v112;
        v113 = *((_QWORD *)v112 + 1);
        v88 = __OFSUB__(v113, v114);
        v115 = v113 - v114;
        if (v88)
          goto LABEL_200;
        v105 = v80 < v115;
        goto LABEL_102;
      }
    }
    else
    {
      if (v73 != 3)
      {
        v106 = *((_QWORD *)v27 + 4);
        v107 = *((_QWORD *)v27 + 5);
        v88 = __OFSUB__(v107, v106);
        v99 = v107 - v106;
        v100 = v88;
        goto LABEL_96;
      }
      v79 = *((_QWORD *)v27 + 4);
      v78 = *((_QWORD *)v27 + 5);
      v88 = __OFSUB__(v78, v79);
      v80 = v78 - v79;
      v81 = v88;
    }
    if ((v81 & 1) != 0)
      goto LABEL_189;
    v89 = v73 - 2;
    v95 = &v74[16 * v73 - 32];
    v97 = *(_QWORD *)v95;
    v96 = *((_QWORD *)v95 + 1);
    v98 = __OFSUB__(v96, v97);
    v99 = v96 - v97;
    v100 = v98;
    if (v98)
      goto LABEL_191;
    v101 = &v74[16 * v77];
    v103 = *(_QWORD *)v101;
    v102 = *((_QWORD *)v101 + 1);
    v88 = __OFSUB__(v102, v103);
    v104 = v102 - v103;
    if (v88)
      goto LABEL_193;
    if (__OFADD__(v99, v104))
      goto LABEL_195;
    if (v99 + v104 >= v80)
    {
      v105 = v80 < v104;
LABEL_102:
      if (v105)
        v77 = v89;
      goto LABEL_104;
    }
LABEL_96:
    if ((v100 & 1) != 0)
      goto LABEL_192;
    v108 = &v74[16 * v77];
    v110 = *(_QWORD *)v108;
    v109 = *((_QWORD *)v108 + 1);
    v88 = __OFSUB__(v109, v110);
    v111 = v109 - v110;
    if (v88)
      goto LABEL_194;
    if (v111 < v99)
      goto LABEL_113;
LABEL_104:
    v116 = v77 - 1;
    if (v77 - 1 >= v73)
      goto LABEL_182;
    v117 = *v208;
    if (!*v208)
      goto LABEL_209;
    v118 = v3;
    v119 = &v74[16 * v116];
    v120 = v74;
    v121 = *(_QWORD *)v119;
    v122 = v120;
    v123 = v77;
    v124 = &v120[16 * v77];
    v125 = *((_QWORD *)v124 + 1);
    v126 = *(_QWORD *)(v198 + 72);
    v127 = v117 + v126 * *(_QWORD *)v119;
    v204 = v117 + v126 * *(_QWORD *)v124;
    v205 = v127;
    v128 = v117 + v126 * v125;
    v129 = v209;
    swift_bridgeObjectRetain();
    sub_1C029F974(v205, v204, v128, v197, v129);
    v3 = v118;
    if (v118)
      break;
    if (v125 < v121)
      goto LABEL_183;
    v27 = v206;
    if (v123 > *((_QWORD *)v206 + 2))
      goto LABEL_184;
    *(_QWORD *)v119 = v121;
    *(_QWORD *)&v122[16 * v116 + 8] = v125;
    v130 = *((_QWORD *)v27 + 2);
    if (v123 >= v130)
      goto LABEL_185;
    v74 = v122;
    v73 = v130 - 1;
    memmove(v124, v124 + 16, 16 * (v130 - 1 - v123));
    *((_QWORD *)v27 + 2) = v130 - 1;
    if (v130 <= 2)
      goto LABEL_113;
  }
  v183 = v186;
LABEL_174:
  swift_bridgeObjectRelease();
  if (v183 < -1)
    goto LABEL_204;
  *(_QWORD *)(v185 + 16) = 0;
LABEL_176:
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C029EF40(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  char v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;

  v3 = a1[1];
  v4 = sub_1C03049CC();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1C0268FD8(0, v3, 1, a1);
      return;
    }
    goto LABEL_124;
  }
  v5 = v4;
  sub_1C027E020(v3 / 2);
  v85 = a1;
  v86 = v6;
  v90 = v7;
  v88 = v3;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v27 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_90:
    if (v27 < 2)
    {
LABEL_101:
      swift_bridgeObjectRelease();
      if (v88 >= -1)
      {
        *(_QWORD *)(v86 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_129;
    }
    v78 = *v85;
    while (1)
    {
      v79 = v27 - 2;
      if (v27 < 2)
        break;
      if (!v78)
        goto LABEL_133;
      v80 = *(_QWORD *)&v10[16 * v79 + 32];
      v81 = *(_QWORD *)&v10[16 * v27 + 24];
      sub_1C0269030((uint64_t *)(v78 + 8 * v80), (uint64_t *)(v78 + 8 * *(_QWORD *)&v10[16 * v27 + 16]), v78 + 8 * v81, v90);
      if (v1)
        goto LABEL_86;
      if (v81 < v80)
        goto LABEL_119;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_1C020FAB8();
      if (v79 >= *((_QWORD *)v10 + 2))
        goto LABEL_120;
      v82 = &v10[16 * v79 + 32];
      *(_QWORD *)v82 = v80;
      *((_QWORD *)v82 + 1) = v81;
      v83 = *((_QWORD *)v10 + 2);
      if (v27 > v83)
        goto LABEL_121;
      memmove(&v10[16 * v27 + 16], &v10[16 * v27 + 32], 16 * (v83 - v27));
      *((_QWORD *)v10 + 2) = v83 - 1;
      v27 = v83 - 1;
      if (v83 <= 2)
        goto LABEL_101;
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v84 = *a1 - 8;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v87 = v5;
  v89 = *a1;
  while (1)
  {
    v11 = v8++;
    if (v8 < v3)
    {
      v12 = *(_QWORD *)(v9 + 8 * v8);
      v13 = *(_QWORD *)(v9 + 8 * v11);
      v8 = v11 + 2;
      if (v11 + 2 < v3)
      {
        v14 = v12;
        while (1)
        {
          v15 = *(_QWORD *)(v9 + 8 * v8);
          if (v12 < v13 == v15 >= v14)
            break;
          ++v8;
          v14 = v15;
          if (v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v12 < v13)
      {
        if (v8 < v11)
          goto LABEL_126;
        if (v11 < v8)
        {
          v16 = v8 - 1;
          v17 = v11;
          do
          {
            if (v17 != v16)
            {
              if (!v9)
                goto LABEL_132;
              v18 = *(_QWORD *)(v9 + 8 * v17);
              *(_QWORD *)(v9 + 8 * v17) = *(_QWORD *)(v9 + 8 * v16);
              *(_QWORD *)(v9 + 8 * v16) = v18;
            }
            v58 = ++v17 < v16--;
          }
          while (v58);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_123;
      if (v8 - v11 < v5)
      {
        v19 = v11 + v5;
        if (__OFADD__(v11, v5))
          goto LABEL_127;
        if (v19 >= v3)
          v19 = v3;
        if (v19 < v11)
          goto LABEL_128;
        if (v8 != v19)
        {
          v20 = (uint64_t *)(v84 + 8 * v8);
          do
          {
            v21 = *(_QWORD *)(v9 + 8 * v8);
            v22 = v11;
            v23 = v20;
            do
            {
              v24 = *v23;
              if (v21 >= *v23)
                break;
              if (!v9)
                goto LABEL_130;
              *v23 = v21;
              v23[1] = v24;
              --v23;
              ++v22;
            }
            while (v8 != v22);
            ++v8;
            ++v20;
          }
          while (v8 != v19);
          v8 = v19;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_122;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1C00500C8(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v26 = *((_QWORD *)v10 + 2);
    v25 = *((_QWORD *)v10 + 3);
    v27 = v26 + 1;
    v9 = v89;
    if (v26 >= v25 >> 1)
    {
      v77 = sub_1C00500C8((char *)(v25 > 1), v26 + 1, 1, v10);
      v9 = v89;
      v10 = v77;
    }
    *((_QWORD *)v10 + 2) = v27;
    v28 = v10 + 32;
    v29 = &v10[16 * v26 + 32];
    *(_QWORD *)v29 = v11;
    *((_QWORD *)v29 + 1) = v8;
    if (v26)
      break;
    v27 = 1;
LABEL_81:
    v5 = v87;
    v3 = v88;
    if (v8 >= v88)
      goto LABEL_90;
  }
  while (1)
  {
    v30 = v27 - 1;
    if (v27 >= 4)
    {
      v35 = &v28[16 * v27];
      v36 = *((_QWORD *)v35 - 8);
      v37 = *((_QWORD *)v35 - 7);
      v41 = __OFSUB__(v37, v36);
      v38 = v37 - v36;
      if (v41)
        goto LABEL_107;
      v40 = *((_QWORD *)v35 - 6);
      v39 = *((_QWORD *)v35 - 5);
      v41 = __OFSUB__(v39, v40);
      v33 = v39 - v40;
      v34 = v41;
      if (v41)
        goto LABEL_108;
      v42 = v27 - 2;
      v43 = &v28[16 * v27 - 32];
      v45 = *(_QWORD *)v43;
      v44 = *((_QWORD *)v43 + 1);
      v41 = __OFSUB__(v44, v45);
      v46 = v44 - v45;
      if (v41)
        goto LABEL_109;
      v41 = __OFADD__(v33, v46);
      v47 = v33 + v46;
      if (v41)
        goto LABEL_111;
      if (v47 >= v38)
      {
        v65 = &v28[16 * v30];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v41 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v41)
          goto LABEL_117;
        v58 = v33 < v68;
        goto LABEL_70;
      }
    }
    else
    {
      if (v27 != 3)
      {
        v59 = *((_QWORD *)v10 + 4);
        v60 = *((_QWORD *)v10 + 5);
        v41 = __OFSUB__(v60, v59);
        v52 = v60 - v59;
        v53 = v41;
        goto LABEL_64;
      }
      v32 = *((_QWORD *)v10 + 4);
      v31 = *((_QWORD *)v10 + 5);
      v41 = __OFSUB__(v31, v32);
      v33 = v31 - v32;
      v34 = v41;
    }
    if ((v34 & 1) != 0)
      goto LABEL_110;
    v42 = v27 - 2;
    v48 = &v28[16 * v27 - 32];
    v50 = *(_QWORD *)v48;
    v49 = *((_QWORD *)v48 + 1);
    v51 = __OFSUB__(v49, v50);
    v52 = v49 - v50;
    v53 = v51;
    if (v51)
      goto LABEL_112;
    v54 = &v28[16 * v30];
    v56 = *(_QWORD *)v54;
    v55 = *((_QWORD *)v54 + 1);
    v41 = __OFSUB__(v55, v56);
    v57 = v55 - v56;
    if (v41)
      goto LABEL_114;
    if (__OFADD__(v52, v57))
      goto LABEL_116;
    if (v52 + v57 >= v33)
    {
      v58 = v33 < v57;
LABEL_70:
      if (v58)
        v30 = v42;
      goto LABEL_72;
    }
LABEL_64:
    if ((v53 & 1) != 0)
      goto LABEL_113;
    v61 = &v28[16 * v30];
    v63 = *(_QWORD *)v61;
    v62 = *((_QWORD *)v61 + 1);
    v41 = __OFSUB__(v62, v63);
    v64 = v62 - v63;
    if (v41)
      goto LABEL_115;
    if (v64 < v52)
      goto LABEL_81;
LABEL_72:
    v69 = v10;
    v70 = v30 - 1;
    if (v30 - 1 >= v27)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v9)
      goto LABEL_131;
    v71 = &v28[16 * v70];
    v72 = *(_QWORD *)v71;
    v73 = v28;
    v74 = &v28[16 * v30];
    v75 = *((_QWORD *)v74 + 1);
    sub_1C0269030((uint64_t *)(v9 + 8 * *(_QWORD *)v71), (uint64_t *)(v9 + 8 * *(_QWORD *)v74), v9 + 8 * v75, v90);
    if (v1)
      break;
    if (v75 < v72)
      goto LABEL_104;
    if (v30 > *((_QWORD *)v69 + 2))
      goto LABEL_105;
    *(_QWORD *)v71 = v72;
    *(_QWORD *)&v73[16 * v70 + 8] = v75;
    v76 = *((_QWORD *)v69 + 2);
    if (v30 >= v76)
      goto LABEL_106;
    v10 = v69;
    v27 = v76 - 1;
    memmove(v74, v74 + 16, 16 * (v76 - 1 - v30));
    v28 = v73;
    *((_QWORD *)v69 + 2) = v76 - 1;
    v9 = v89;
    if (v76 <= 2)
      goto LABEL_81;
  }
LABEL_86:
  swift_bridgeObjectRelease();
  if (v88 < -1)
    goto LABEL_125;
  *(_QWORD *)(v86 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_1C029F510(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;

  v59 = a1;
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v10 = MEMORY[0x1E0C80A78](v58);
  v64 = (uint64_t)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v55 - v13;
  MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v55 - v16;
  v56 = a2;
  if (a3 != a2)
  {
    v67 = *(_QWORD *)(v15 + 72);
    v68 = v5;
    v62 = v14;
    v63 = a5;
    v60 = a4;
    v61 = (char *)&v55 - v16;
LABEL_4:
    v57 = a3;
    v18 = a3;
    while (1)
    {
      v19 = v18 - 1;
      v20 = *a4;
      v21 = v67;
      v65 = v67 * v18;
      sub_1C0045DFC(v20 + v67 * v18, (uint64_t)v17, &qword_1ED726DB0);
      v66 = v19;
      v22 = v21 * v19;
      sub_1C0045DFC(v20 + v21 * v19, (uint64_t)v14, &qword_1ED726DB0);
      MEMORY[0x1E0C80A78](v23);
      *(&v55 - 2) = (uint64_t)v17;
      swift_bridgeObjectRetain();
      v24 = v68;
      sub_1C0270FFC((uint64_t (*)(_QWORD *))sub_1C02A3768, (uint64_t)(&v55 - 4), a5);
      v26 = v25;
      v27 = *(_QWORD *)(v25 + 16);
      if (v27)
      {
        v69 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        sub_1C00B1A78();
        v28 = v69;
        v29 = v69[2];
        v30 = 40;
        do
        {
          v31 = *(_QWORD *)(v26 + v30);
          v69 = v28;
          if (v29 >= v28[3] >> 1)
          {
            sub_1C00B1A78();
            v28 = v69;
          }
          v28[2] = v29 + 1;
          v28[v29 + 4] = v31;
          v30 += 16;
          ++v29;
          --v27;
        }
        while (v27);
        swift_bridgeObjectRelease();
        v14 = v62;
        a5 = v63;
      }
      else
      {
        swift_bridgeObjectRelease();
        v28 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      v32 = v28[2];
      if (v32)
        break;
      v33 = 0;
LABEL_18:
      v37 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v37);
      *(&v55 - 2) = (uint64_t)v14;
      swift_bridgeObjectRetain();
      sub_1C0270FFC((uint64_t (*)(_QWORD *))sub_1C02A3768, (uint64_t)(&v55 - 4), a5);
      v39 = v38;
      v68 = v24;
      v40 = *(_QWORD *)(v38 + 16);
      if (v40)
      {
        v69 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        sub_1C00B1A78();
        v41 = v69;
        v42 = v69[2];
        v43 = 40;
        do
        {
          v44 = *(_QWORD *)(v39 + v43);
          v69 = v41;
          if (v42 >= v41[3] >> 1)
          {
            sub_1C00B1A78();
            v41 = v69;
          }
          v41[2] = v42 + 1;
          v41[v42 + 4] = v44;
          v43 += 16;
          ++v42;
          --v40;
        }
        while (v40);
        swift_bridgeObjectRelease();
        v14 = v62;
        a5 = v63;
      }
      else
      {
        swift_bridgeObjectRelease();
        v41 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      v45 = v41[2];
      v17 = v61;
      v46 = 0;
      if (v45)
      {
        v47 = v41 + 4;
        while (1)
        {
          v48 = *v47++;
          v36 = __OFADD__(v46, v48);
          v46 += v48;
          if (v36)
            break;
          if (!--v45)
            goto LABEL_29;
        }
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }
LABEL_29:
      swift_bridgeObjectRelease();
      sub_1C0044B78((uint64_t)v14, &qword_1ED726DB0);
      sub_1C0044B78((uint64_t)v17, &qword_1ED726DB0);
      v49 = v46 < v33;
      a4 = v60;
      if (!v49)
        goto LABEL_39;
      v50 = *v60;
      if (!*v60)
        goto LABEL_43;
      v51 = v65;
      v52 = v50 + v65;
      v53 = v50 + v22;
      sub_1C005A718(v50 + v65, v64, &qword_1ED726DB0);
      if (v51 < v22 || v52 >= v53 + v67)
        swift_arrayInitWithTakeFrontToBack();
      sub_1C005A718(v64, v53, &qword_1ED726DB0);
      v18 = v66;
      if (v66 == v59)
      {
LABEL_39:
        a3 = v57 + 1;
        if (v57 + 1 != v56)
          goto LABEL_4;
        goto LABEL_2;
      }
    }
    v33 = 0;
    v34 = v28 + 4;
    while (1)
    {
      v35 = *v34++;
      v36 = __OFADD__(v33, v35);
      v33 += v35;
      if (v36)
        break;
      if (!--v32)
        goto LABEL_18;
    }
    __break(1u);
    goto LABEL_42;
  }
LABEL_2:
  swift_bridgeObjectRelease();
}

void sub_1C029F974(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v29;
  BOOL v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v44;
  int64_t v46;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v58 = a5;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v9 = MEMORY[0x1E0C80A78](v55);
  v57 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v56 = (uint64_t)&v48 - v11;
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  v14 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_76;
  v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_77;
  v54 = a3;
  v18 = v14 / v13;
  v19 = v16 / v13;
  if (v14 / v13 >= v16 / v13)
  {
    sub_1C00AD760(a2, v16 / v13);
    v32 = v19 * v13;
    v20 = a4 + v19 * v13;
    if (v32 < 1 || a1 >= a2)
      goto LABEL_70;
    v51 = a4;
    v52 = -v13;
    v34 = v54;
    v49 = v13;
    v50 = a1;
    while (1)
    {
      v35 = v34;
      v36 = v52;
      v34 += v52;
      v54 = v20 + v52;
      v37 = v56;
      sub_1C0045DFC(v20 + v52, v56, &qword_1ED726DB0);
      v53 = a2 + v36;
      v38 = v57;
      sub_1C0045DFC(a2 + v36, v57, &qword_1ED726DB0);
      v39 = v58;
      v40 = sub_1C0295FAC(v37, v58);
      v41 = sub_1C0295FAC(v38, v39);
      sub_1C0044B78(v38, &qword_1ED726DB0);
      sub_1C0044B78(v37, &qword_1ED726DB0);
      if (v41 >= v40)
      {
        if (v35 >= v20 && v34 < v20)
        {
          v44 = v50;
          a4 = v51;
          if (v35 == v20)
          {
            v20 = v54;
            goto LABEL_66;
          }
          v20 = v54;
LABEL_63:
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_66;
        }
        v20 = v54;
      }
      else
      {
        if (v35 >= a2 && v34 < a2)
        {
          v44 = v50;
          a4 = v51;
          if (v35 == a2)
          {
            a2 = v53;
            goto LABEL_66;
          }
          a2 = v53;
          goto LABEL_63;
        }
        a2 = v53;
      }
      swift_arrayInitWithTakeFrontToBack();
      v44 = v50;
      a4 = v51;
LABEL_66:
      v13 = v49;
      if (v20 <= a4 || a2 <= v44)
        goto LABEL_70;
    }
  }
  sub_1C00AD760(a1, v14 / v13);
  v20 = a4 + v18 * v13;
  if (v18 * v13 >= 1 && a2 < v54)
  {
    v53 = a4 + v18 * v13;
    v22 = v56;
    do
    {
      sub_1C0045DFC(a2, v22, &qword_1ED726DB0);
      v23 = v57;
      sub_1C0045DFC(a4, v57, &qword_1ED726DB0);
      v24 = v58;
      v25 = sub_1C0295FAC(v22, v58);
      v26 = sub_1C0295FAC(v23, v24);
      sub_1C0044B78(v23, &qword_1ED726DB0);
      sub_1C0044B78(v22, &qword_1ED726DB0);
      if (v26 >= v25)
      {
        v29 = a4;
        a4 += v13;
        if (a1 < v29 || a1 >= a4)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != v29)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v27 = a2;
      }
      else
      {
        v27 = a2 + v13;
        if (a1 < a2 || a1 >= v27)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      v20 = v53;
      a1 += v13;
      v31 = a4 >= v53 || v27 >= v54;
      a2 = v27;
    }
    while (!v31);
  }
LABEL_70:
  v46 = v20 - a4;
  if (v13 != -1 || v46 != 0x8000000000000000)
  {
    sub_1C00AD760(a4, v46 / v13);
    swift_bridgeObjectRelease();
    return;
  }
LABEL_78:
  __break(1u);
}

uint64_t sub_1C029FD68(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v4 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v37 = v4;
  if (!v4)
    return swift_bridgeObjectRelease_n();
  v5 = 0;
  v6 = (uint64_t *)(a1 + 48);
  while (v5 < *(_QWORD *)(a1 + 16))
  {
    v8 = v6[5];
    v7 = v6[6];
    v9 = v6[3];
    v10 = v6[1];
    v39 = v6[2];
    v41 = v6[4];
    v12 = *(v6 - 1);
    v11 = *v6;
    v13 = *(v6 - 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v12)
      return swift_bridgeObjectRelease_n();
    v44 = v8;
    v45 = v7;
    v46 = v9;
    v43 = v5;
    v14 = (_QWORD *)*a3;
    v16 = sub_1C00B421C(v13, v12, v11, v10);
    v17 = v14[2];
    v18 = (v15 & 1) == 0;
    v19 = v17 + v18;
    if (__OFADD__(v17, v18))
      goto LABEL_18;
    v20 = v15;
    if (v14[3] >= v19)
    {
      if ((a2 & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8DC0);
        sub_1C03047C8();
      }
    }
    else
    {
      sub_1C0128DE0(v19, a2 & 1);
      v21 = sub_1C00B421C(v13, v12, v11, v10);
      if ((v20 & 1) != (v22 & 1))
        goto LABEL_20;
      v16 = v21;
    }
    v23 = (_QWORD *)*a3;
    if ((v20 & 1) != 0)
    {
      v24 = 5 * v16;
      v25 = (uint64_t *)(v23[7] + 8 * v24);
      v26 = v25[1];
      v27 = v25[3];
      v40 = v25[2];
      v42 = *v25;
      v28 = v25[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29 = sub_1C0289D60(v45, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v30 = (_QWORD *)(v23[7] + 8 * v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v30 = v42;
      v30[1] = v26;
      v30[2] = v40;
      v30[3] = v27;
      v30[4] = v29;
    }
    else
    {
      v23[(v16 >> 6) + 8] |= 1 << v16;
      v31 = (uint64_t *)(v23[6] + 32 * v16);
      *v31 = v13;
      v31[1] = v12;
      v31[2] = v11;
      v31[3] = v10;
      v32 = (uint64_t *)(v23[7] + 40 * v16);
      *v32 = v39;
      v32[1] = v46;
      v32[2] = v41;
      v32[3] = v44;
      v32[4] = v45;
      v33 = v23[2];
      v34 = __OFADD__(v33, 1);
      v35 = v33 + 1;
      if (v34)
        goto LABEL_19;
      v23[2] = v35;
    }
    v5 = v43 + 1;
    v6 += 9;
    a2 = 1;
    if (v37 == v43 + 1)
      return swift_bridgeObjectRelease_n();
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1C0304A68();
  __break(1u);
  return result;
}

uint64_t sub_1C02A0044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t isStackAllocationSafe;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD v17[2];

  v17[1] = *MEMORY[0x1E0C80C00];
  v9 = *(_BYTE *)(a1 + 32);
  v10 = v9 & 0x3F;
  v11 = (unint64_t)((1 << v9) + 63) >> 6;
  swift_bridgeObjectRetain();
  sub_1C02A2D90(a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C02A2D90(a3);
  isStackAllocationSafe = swift_bridgeObjectRetain();
  if (v10 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v13 = (_QWORD *)((char *)v17 - ((8 * v11 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1C007A70C(0, v11, v13);
    swift_bridgeObjectRetain();
    sub_1C02A2D90(a3);
    swift_bridgeObjectRetain();
    v14 = sub_1C02A0448((uint64_t)v13, v11, a1, a2, a3, a4);
    swift_release();
    if (v4)
      swift_willThrow();
    swift_bridgeObjectRelease();
    sub_1C02A2DD8(a3);
  }
  else
  {
    v15 = (_QWORD *)swift_slowAlloc();
    sub_1C007A70C(0, v11, v15);
    swift_bridgeObjectRetain();
    sub_1C02A2D90(a3);
    swift_bridgeObjectRetain();
    v14 = sub_1C02A0448((uint64_t)v15, v11, a1, a2, a3, a4);
    swift_release();
    MEMORY[0x1C3B98378](v15, -1, -1);
    swift_bridgeObjectRelease();
    sub_1C02A2DD8(a3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C02A2DD8(a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C02A2DD8(a3);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1C02A02E0(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v9[2];

  v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v5 = (_QWORD *)((char *)v9 - ((8 * v4 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1C007A70C(0, v4, v5);
    v6 = sub_1C02A095C((uint64_t)v5, v4, v2);
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v7 = (_QWORD *)swift_slowAlloc();
    sub_1C007A70C(0, v4, v7);
    v6 = sub_1C02A095C((uint64_t)v7, v4, v2);
    swift_release();
    MEMORY[0x1C3B98378](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_1C02A0448(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  uint64_t v36;
  __n128 v37;
  __int128 v38;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  unint64_t *v44;
  uint64_t v45;
  uint64_t v47;
  int64_t v48;
  unint64_t v51;
  os_log_t loga;
  NSObject *log;
  __int128 v55;
  __n128 v56;
  __n128 v57;
  __n128 v58;
  uint64_t v59;

  v45 = 0;
  v44 = (unint64_t *)result;
  v6 = 0;
  v9 = *(_QWORD *)(a3 + 56);
  v7 = a3 + 56;
  v8 = v9;
  v10 = 1 << *(_BYTE *)(v7 - 24);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v8;
  v47 = v7;
  v48 = (unint64_t)(v10 + 63) >> 6;
  while (v12)
  {
    v13 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v14 = v13 | (v6 << 6);
LABEL_20:
    v51 = v14;
    v18 = *(_QWORD *)(a3 + 48) + 48 * v14;
    if (*(_BYTE *)(v18 + 40))
    {
LABEL_39:
      *(unint64_t *)((char *)v44 + ((v51 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v51;
      if (__OFADD__(v45++, 1))
        goto LABEL_45;
    }
    else
    {
      v20 = *(_QWORD *)v18;
      v19 = *(_QWORD *)(v18 + 8);
      v22 = *(_QWORD *)(v18 + 16);
      v21 = *(_QWORD *)(v18 + 24);
      v23 = *(_QWORD *)(v18 + 32);
      if (!v23)
      {
        v24 = 0;
LABEL_27:
        sub_1C0120A8C(*(_QWORD *)v18, *(_QWORD *)(v18 + 8), *(_QWORD *)(v18 + 16), *(_QWORD *)(v18 + 24), v24, 0);
        if ((v22 & 0x20) != 0)
          goto LABEL_38;
        goto LABEL_28;
      }
      v24 = *(_QWORD *)(v18 + 32);
      if ((v22 & 0x10) == 0)
        goto LABEL_27;
      sub_1C0120A8C(*(_QWORD *)v18, *(_QWORD *)(v18 + 8), *(_QWORD *)(v18 + 16), *(_QWORD *)(v18 + 24), *(_QWORD *)(v18 + 32), 0);
      sub_1C005546C(v21, v23, a4);
      if ((v25 & 1) != 0)
      {
        if (qword_1ED727970 != -1)
          swift_once();
        v34 = sub_1C0303B98();
        __swift_project_value_buffer(v34, (uint64_t)&unk_1ED7295C8);
        sub_1C02A2D90(a5);
        sub_1C02A2D90(a5);
        v35 = sub_1C0303B80();
        v42 = sub_1C03042E8();
        if (os_log_type_enabled(v35, v42))
        {
          log = v35;
          v36 = swift_slowAlloc();
          v41 = swift_slowAlloc();
          v59 = v41;
          *(_DWORD *)v36 = 136315138;
          v37 = *(__n128 *)(a5 + 16);
          v55 = *(_OWORD *)a5;
          v56 = v37;
          v38 = v55;
          sub_1C02A2E1C(&v56, &v57);
          sub_1C02A2E1C(&v57, &v58);
          if (v58.n128_u64[1])
          {
            sub_1C02A2E58((uint64_t)&v55);
            swift_bridgeObjectRetain();
            sub_1C0303FD0();
            sub_1C0303FD0();
            sub_1C02A2E8C((uint64_t)&v55);
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          *(_QWORD *)(v36 + 4) = sub_1C003E6D8(v38, *((unint64_t *)&v38 + 1), &v59);
          swift_bridgeObjectRelease();
          sub_1C02A2DD8(a5);
          sub_1C02A2DD8(a5);
          _os_log_impl(&dword_1C0039000, log, v42, "[UCG] Relationship match [%s] is getting treated as an exact nickname-based relationship match.", (uint8_t *)v36, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3B98378](v41, -1, -1);
          MEMORY[0x1C3B98378](v36, -1, -1);

        }
        else
        {
          sub_1C02A2DD8(a5);
          sub_1C02A2DD8(a5);

        }
LABEL_38:
        result = sub_1C0120AE0(v20, v19, v22, v21, v23, 0);
        goto LABEL_39;
      }
      if ((v22 & 0x20) != 0)
        goto LABEL_38;
LABEL_28:
      v27 = *(_QWORD *)a5;
      v26 = *(_QWORD *)(a5 + 8);
      loga = (os_log_t)v23;
      v28 = v21;
      v29 = v19;
      v30 = v12;
      v31 = v6;
      v32 = *(_QWORD *)(a5 + 16);
      v33 = *(_QWORD *)(a5 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      LOBYTE(v32) = sub_1C0188368(v27, v26, v32, v33, a6);
      v6 = v31;
      v12 = v30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = sub_1C0120AE0(v20, v29, v22, v28, (uint64_t)loga, 0);
      if ((v32 & 1) != 0)
        goto LABEL_39;
    }
  }
  v15 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v15 >= v48)
    goto LABEL_42;
  v16 = *(_QWORD *)(v47 + 8 * v15);
  ++v6;
  if (v16)
    goto LABEL_19;
  v6 = v15 + 1;
  if (v15 + 1 >= v48)
    goto LABEL_42;
  v16 = *(_QWORD *)(v47 + 8 * v6);
  if (v16)
    goto LABEL_19;
  v6 = v15 + 2;
  if (v15 + 2 >= v48)
    goto LABEL_42;
  v16 = *(_QWORD *)(v47 + 8 * v6);
  if (v16)
  {
LABEL_19:
    v12 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v6 << 6);
    goto LABEL_20;
  }
  v17 = v15 + 3;
  if (v17 >= v48)
  {
LABEL_42:
    swift_retain();
    v40 = sub_1C01587F4(v44, a2, v45, a3);
    swift_bridgeObjectRelease();
    sub_1C02A2DD8(a5);
    swift_bridgeObjectRelease();
    return v40;
  }
  v16 = *(_QWORD *)(v47 + 8 * v17);
  if (v16)
  {
    v6 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    v6 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v6 >= v48)
      goto LABEL_42;
    v16 = *(_QWORD *)(v47 + 8 * v6);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1C02A095C(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t *v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v5 = (unint64_t *)result;
  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_20;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_24;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_24;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
          break;
      }
    }
LABEL_19:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_20:
    if (*(_BYTE *)(*(_QWORD *)(a3 + 48) + 48 * v14 + 40) == 2)
    {
      *(_QWORD *)(result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_1C01587F4(v5, a2, v6, a3);
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_24;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C02A0AD4(uint64_t a1, uint64_t *a2)
{
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6 = *a2;
  *a2 = 0x8000000000000000;
  sub_1C029FD68(a1, isUniquelyReferenced_nonNull_native, &v6);
  *a2 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C02A0B44(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  _QWORD v10[2];

  v2 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v5 = (_QWORD *)((char *)v10 - ((8 * v4 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1C007A70C(0, v4, v5);
    sub_1C02A0CA0(v5, v4, v2);
    if (v1)
      swift_willThrow();
    else
      return v6;
  }
  else
  {
    v7 = (unint64_t *)swift_slowAlloc();
    sub_1C007A70C(0, v4, v7);
    sub_1C02A0CA0(v7, v4, v2);
    v2 = v8;
    MEMORY[0x1C3B98378](v7, -1, -1);
  }
  return v2;
}

void sub_1C02A0CA0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v22;

  v4 = 0;
  v5 = 0;
  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
LABEL_4:
  v22 = v4;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v5++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v5 >= v10)
      goto LABEL_28;
    v14 = *(_QWORD *)(v6 + 8 * v5);
    if (!v14)
      break;
LABEL_17:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_18:
    v16 = swift_bridgeObjectRetain();
    v17 = sub_1C028556C(v16);
    swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
    {
      v18 = swift_bridgeObjectRetain();
      v19 = sub_1C028568C(v18);
      swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
      {
        *(unint64_t *)((char *)a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        v4 = v22 + 1;
        if (!__OFADD__(v22, 1))
          goto LABEL_4;
        __break(1u);
LABEL_28:
        sub_1C02A120C(a1, a2, v22, (_QWORD *)a3);
        return;
      }
    }
  }
  v15 = v5 + 1;
  if (v5 + 1 >= v10)
    goto LABEL_28;
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v5 + 2;
  if (v5 + 2 >= v10)
    goto LABEL_28;
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v5 + 3;
  if (v5 + 3 >= v10)
    goto LABEL_28;
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
LABEL_16:
    v5 = v15;
    goto LABEL_17;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      goto LABEL_28;
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_17;
  }
LABEL_30:
  __break(1u);
}

void sub_1C02A0E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  _QWORD *v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  uint64_t v29;

  if (!a3)
    goto LABEL_37;
  OUTLINED_FUNCTION_221_0();
  if (v7)
  {
    swift_retain();
LABEL_37:
    OUTLINED_FUNCTION_24_1();
    return;
  }
  v8 = v6;
  v9 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2DB8);
  v10 = OUTLINED_FUNCTION_268();
  v28 = v9;
  v29 = v8;
  if (v8 < 1)
    v11 = 0;
  else
    v11 = *v9;
  v12 = 0;
  while (1)
  {
    if (v11)
    {
      OUTLINED_FUNCTION_187_1();
      goto LABEL_26;
    }
    v14 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_40;
    if (v14 >= v29)
      goto LABEL_37;
    ++v12;
    if (!v28[v14])
    {
      v12 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_37;
      if (!v28[v12])
      {
        v12 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_37;
        if (!v28[v12])
          break;
      }
    }
LABEL_25:
    OUTLINED_FUNCTION_186_0();
LABEL_26:
    v16 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v13);
    v18 = *v16;
    v17 = v16[1];
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v13);
    OUTLINED_FUNCTION_218_0();
    OUTLINED_FUNCTION_31_6();
    OUTLINED_FUNCTION_45_0();
    sub_1C0303E20();
    sub_1C0304B40();
    OUTLINED_FUNCTION_92_8();
    if (v7)
    {
      OUTLINED_FUNCTION_16();
      while (++v22 != v23 || (v21 & 1) == 0)
      {
        v24 = v22 == v23;
        if (v22 == v23)
          v22 = 0;
        v21 |= v24;
        if (*(_QWORD *)(v10 + 64 + 8 * v22) != -1)
        {
          OUTLINED_FUNCTION_15_18();
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    OUTLINED_FUNCTION_17_16();
LABEL_35:
    OUTLINED_FUNCTION_73_14(v20);
    *v25 = v18;
    v25[1] = v17;
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v26) = v19;
    OUTLINED_FUNCTION_263();
    if (v27)
      goto LABEL_39;
    if (!v4)
      goto LABEL_37;
  }
  v15 = v14 + 3;
  if (v15 >= v29)
    goto LABEL_37;
  if (v28[v15])
  {
    v12 = v15;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v12 >= v29)
      goto LABEL_37;
    ++v15;
    if (v28[v12])
      goto LABEL_25;
  }
LABEL_41:
  __break(1u);
}

void sub_1C02A1040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  _QWORD *v26;
  uint64_t v27;
  char v28;
  _QWORD *v29;
  uint64_t v30;

  if (!a3)
    goto LABEL_37;
  OUTLINED_FUNCTION_221_0();
  if (v7)
  {
    swift_retain();
LABEL_37:
    OUTLINED_FUNCTION_24_1();
    return;
  }
  v8 = v6;
  v9 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728148);
  v10 = OUTLINED_FUNCTION_268();
  v29 = v9;
  v30 = v8;
  if (v8 < 1)
    v11 = 0;
  else
    v11 = *v9;
  v12 = 0;
  while (1)
  {
    if (v11)
    {
      OUTLINED_FUNCTION_187_1();
      goto LABEL_26;
    }
    v14 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_40;
    if (v14 >= v30)
      goto LABEL_37;
    ++v12;
    if (!v29[v14])
    {
      v12 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_37;
      if (!v29[v12])
      {
        v12 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_37;
        if (!v29[v12])
          break;
      }
    }
LABEL_25:
    OUTLINED_FUNCTION_186_0();
LABEL_26:
    v16 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v13);
    v18 = *v16;
    v17 = v16[1];
    v19 = *(void **)(*(_QWORD *)(v3 + 56) + 8 * v13);
    OUTLINED_FUNCTION_218_0();
    OUTLINED_FUNCTION_45_0();
    v20 = v19;
    sub_1C0303E20();
    sub_1C0304B40();
    OUTLINED_FUNCTION_92_8();
    if (v7)
    {
      OUTLINED_FUNCTION_16();
      while (++v23 != v24 || (v22 & 1) == 0)
      {
        v25 = v23 == v24;
        if (v23 == v24)
          v23 = 0;
        v22 |= v25;
        if (*(_QWORD *)(v10 + 64 + 8 * v23) != -1)
        {
          OUTLINED_FUNCTION_15_18();
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    OUTLINED_FUNCTION_17_16();
LABEL_35:
    OUTLINED_FUNCTION_73_14(v21);
    *v26 = v18;
    v26[1] = v17;
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v27) = v20;
    OUTLINED_FUNCTION_263();
    if (v28)
      goto LABEL_39;
    if (!v4)
      goto LABEL_37;
  }
  v15 = v14 + 3;
  if (v15 >= v30)
    goto LABEL_37;
  if (v29[v15])
  {
    v12 = v15;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v12 >= v30)
      goto LABEL_37;
    ++v15;
    if (v29[v12])
      goto LABEL_25;
  }
LABEL_41:
  __break(1u);
}

void sub_1C02A120C(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  unint64_t *v25;
  _OWORD v26[2];
  uint64_t v27;

  if (!a3)
    return;
  v5 = a3;
  if (a4[2] == a3)
  {
    swift_retain();
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC1E8);
  v8 = (_QWORD *)sub_1C030481C();
  v25 = a1;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_25;
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_29;
    if (v13 >= a2)
      return;
    v14 = v25[v13];
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= a2)
        return;
      v14 = v25[v10];
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= a2)
          return;
        v14 = v25[v10];
        if (!v14)
          break;
      }
    }
LABEL_24:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_25:
    v16 = (uint64_t *)(a4[6] + 32 * v12);
    v17 = *v16;
    v18 = v16[1];
    v19 = v16[2];
    v20 = v16[3];
    v21 = a4[7] + 40 * v12;
    v22 = *(_QWORD *)(v21 + 32);
    v23 = *(_OWORD *)(v21 + 16);
    v26[0] = *(_OWORD *)v21;
    v26[1] = v23;
    v27 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C02A2D90((uint64_t)v26);
    sub_1C01286E4(v17, v18, v19, v20, (uint64_t)v26, v8);
    if (__OFSUB__(v5--, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    if (!v5)
      return;
  }
  v15 = v13 + 3;
  if (v15 >= a2)
    return;
  v14 = v25[v15];
  if (v14)
  {
    v10 = v15;
    goto LABEL_24;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= a2)
      return;
    v14 = v25[v10];
    ++v15;
    if (v14)
      goto LABEL_24;
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_1C02A13E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t isStackAllocationSafe;
  char v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = a2;
  v30 = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v28 = a1;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a2 + 56;
    v27[0] = a1 + 32;
    swift_bridgeObjectRetain();
    v5 = 0;
    while (1)
    {
      v6 = (uint64_t *)(v27[0] + 16 * v5);
      v8 = *v6;
      v7 = v6[1];
      ++v5;
      sub_1C0304B04();
      swift_bridgeObjectRetain();
      sub_1C0303E20();
      v9 = sub_1C0304B40();
      v10 = -1 << *(_BYTE *)(v2 + 32);
      v11 = v9 & ~v10;
      if (((*(_QWORD *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
      {
        v12 = *(_QWORD *)(v2 + 48);
        v13 = (_QWORD *)(v12 + 16 * v11);
        v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (sub_1C0304A08() & 1) != 0)
        {
          isStackAllocationSafe = swift_bridgeObjectRelease();
          v29 = v5;
LABEL_22:
          v19 = *(_BYTE *)(v2 + 32);
          v20 = (unint64_t)((1 << v19) + 63) >> 6;
          v21 = 8 * v20;
          if ((v19 & 0x3Fu) < 0xE
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            memcpy((char *)v27 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v21);
            sub_1C02A16F4((_QWORD *)((char *)v27 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0)), v20, v2, v11, &v28);
            v23 = v22;
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            v24 = (void *)swift_slowAlloc();
            memcpy(v24, (const void *)(v2 + 56), v21);
            sub_1C02A16F4((unint64_t *)v24, v20, v2, v11, &v28);
            v23 = v25;
            swift_release();
            swift_bridgeObjectRelease();
            MEMORY[0x1C3B98378](v24, -1, -1);
          }
          return v23;
        }
        v15 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v15;
          if (((*(_QWORD *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
            break;
          v16 = (_QWORD *)(v12 + 16 * v11);
          v17 = *v16 == v8 && v16[1] == v7;
          if (v17 || (sub_1C0304A08() & 1) != 0)
          {
            v29 = v5;
            isStackAllocationSafe = swift_bridgeObjectRelease();
            goto LABEL_22;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
    }
  }
  return v2;
}

void sub_1C02A16F4(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  BOOL v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t i;
  unint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v31;
  uint64_t v32;

  v6 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v31 = v6 - 1;
  v8 = *a5;
  v7 = a5[1];
  v9 = *(_QWORD *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    sub_1C01585A0(a1, a2, v31, a3);
    return;
  }
  v32 = a3 + 56;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9)
      goto LABEL_30;
    v11 = v8 + 16 * v7;
    v13 = *(_QWORD *)(v11 + 32);
    v12 = *(_QWORD *)(v11 + 40);
    a5[1] = v7 + 1;
    sub_1C0304B04();
    swift_bridgeObjectRetain();
    sub_1C0303E20();
    v14 = sub_1C0304B40();
    v15 = -1 << *(_BYTE *)(a3 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    v18 = 1 << v16;
    if (((1 << v16) & *(_QWORD *)(v32 + 8 * (v16 >> 6))) == 0)
      goto LABEL_25;
    v19 = *(_QWORD *)(a3 + 48);
    v20 = (_QWORD *)(v19 + 16 * v16);
    v21 = *v20 == v13 && v20[1] == v12;
    if (!v21 && (sub_1C0304A08() & 1) == 0)
    {
      v24 = ~v15;
      for (i = v16 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v32 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v19 + 16 * v26);
        v28 = *v27 == v13 && v27[1] == v12;
        if (v28 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v17 = v26 >> 6;
          v18 = 1 << v26;
          goto LABEL_13;
        }
      }
LABEL_25:
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    swift_bridgeObjectRelease();
LABEL_13:
    v22 = a1[v17];
    a1[v17] = v22 & ~v18;
    if ((v18 & v22) != 0)
    {
      v23 = v31 - 1;
      if (__OFSUB__(v31, 1))
        goto LABEL_31;
      --v31;
      if (!v23)
        return;
    }
LABEL_26:
    v8 = *a5;
    v7 = a5[1];
    v9 = *(_QWORD *)(*a5 + 16);
    if (v7 == v9)
      goto LABEL_2;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
}

void sub_1C02A1918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_89_9();
  if (v3)
  {
    OUTLINED_FUNCTION_44();
    v5 = sub_1C03047F8();
    OUTLINED_FUNCTION_33();
    if (!v5)
      goto LABEL_14;
  }
  else
  {
    v5 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
    {
LABEL_14:
      OUTLINED_FUNCTION_3_12();
      return;
    }
  }
  if (v1)
  {
    if (v3)
    {
      OUTLINED_FUNCTION_44();
      v6 = OUTLINED_FUNCTION_196_0();
      OUTLINED_FUNCTION_33();
      if (v6 <= v4)
      {
        if (v5 >= 1)
        {
          OUTLINED_FUNCTION_290();
          OUTLINED_FUNCTION_44();
          do
          {
            v7 = __swift_instantiateConcreteTypeFromMangledName(v2);
            OUTLINED_FUNCTION_124_4(v7, v8, v9, v10, v11, v12, v13, v14, v25);
            v16 = *v15;
            OUTLINED_FUNCTION_272((uint64_t)v16, v17, v18, v19, v20, v21, v22, v23, v26);
            OUTLINED_FUNCTION_210_0();
          }
          while (!v24);
          OUTLINED_FUNCTION_33();
          goto LABEL_14;
        }
        goto LABEL_17;
      }
    }
    else
    {
      if (*(_QWORD *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10) <= v4)
      {
        OUTLINED_FUNCTION_180_1(v0 & 0xFFFFFFFFFFFFFF8);
        goto LABEL_14;
      }
      __break(1u);
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
  __break(1u);
}

void sub_1C02A1A28()
{
  sub_1C02A1A4C();
}

void sub_1C02A1A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_89_9();
  if (v3)
  {
    OUTLINED_FUNCTION_44();
    v5 = sub_1C03047F8();
    OUTLINED_FUNCTION_33();
    if (!v5)
      goto LABEL_14;
  }
  else
  {
    v5 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
    {
LABEL_14:
      OUTLINED_FUNCTION_3_12();
      return;
    }
  }
  if (v1)
  {
    if (v3)
    {
      OUTLINED_FUNCTION_44();
      v6 = OUTLINED_FUNCTION_196_0();
      OUTLINED_FUNCTION_33();
      if (v6 <= v4)
      {
        if (v5 >= 1)
        {
          OUTLINED_FUNCTION_290();
          OUTLINED_FUNCTION_44();
          do
          {
            v7 = __swift_instantiateConcreteTypeFromMangledName(v2);
            OUTLINED_FUNCTION_124_4(v7, v8, v9, v10, v11, v12, v13, v14, v24);
            v15 = swift_retain();
            OUTLINED_FUNCTION_272(v15, v16, v17, v18, v19, v20, v21, v22, v25);
            OUTLINED_FUNCTION_210_0();
          }
          while (!v23);
          OUTLINED_FUNCTION_33();
          goto LABEL_14;
        }
        goto LABEL_17;
      }
    }
    else
    {
      if (*(_QWORD *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10) <= v4)
      {
        OUTLINED_FUNCTION_180_1(v0 & 0xFFFFFFFFFFFFFF8);
        goto LABEL_14;
      }
      __break(1u);
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
  __break(1u);
}

void sub_1C02A1B5C()
{
  sub_1C02A1A4C();
}

uint64_t sub_1C02A1B80@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;

  result = sub_1C028B43C(*a1, a1[1], a1[2], *a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
  }
  return result;
}

void sub_1C02A1BBC(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t i;
  unint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  uint64_t v26;

  v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v4 = a1;
  v5 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v5 = 11;
  v6 = v5 | (v4 << 16);
  sub_1C02A2050(0xFuLL, a1, a2);
  v8 = v7;
  sub_1C02A2050(v6, a1, a2);
  v10 = v9 >> 14;
  if (v8 >> 14 < v9 >> 14)
  {
    for (i = 0; !__OFADD__(i, 1); ++i)
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        v8 = sub_1C0303F58();
      }
      else
      {
        v12 = v8 >> 16;
        if ((a2 & 0x2000000000000000) != 0)
        {
          v25 = a1;
          v26 = a2 & 0xFFFFFFFFFFFFFFLL;
          v14 = *((unsigned __int8 *)&v25 + v12);
        }
        else
        {
          v13 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0)
            v13 = sub_1C0304720();
          v14 = *(unsigned __int8 *)(v13 + v12);
        }
        v15 = (char)v14;
        v16 = __clz(v14 ^ 0xFF) - 24;
        if (v15 >= 0)
          LOBYTE(v16) = 1;
        v8 = ((v12 + v16) << 16) | 5;
      }
      if (v10 <= v8 >> 14)
        return;
    }
    __break(1u);
LABEL_41:
    __break(1u);
    return;
  }
  if (v10 < v8 >> 14)
  {
    v17 = 0;
    while (!__OFSUB__(v17--, 1))
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        v8 = sub_1C0303F64();
      }
      else
      {
        if ((a2 & 0x2000000000000000) != 0)
        {
          v25 = a1;
          v26 = a2 & 0xFFFFFFFFFFFFFFLL;
          if ((*((_BYTE *)&v25 + (v8 >> 16) - 1) & 0xC0) == 0x80)
          {
            v23 = 0;
            do
              v24 = *((_BYTE *)&v25 + (v8 >> 16) + v23-- - 2) & 0xC0;
            while (v24 == 128);
            v22 = 1 - v23;
          }
          else
          {
            v22 = 1;
          }
        }
        else
        {
          v19 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0)
            v19 = sub_1C0304720();
          v20 = 0;
          do
            v21 = *(_BYTE *)(v19 + (v8 >> 16) - 1 + v20--) & 0xC0;
          while (v21 == 128);
          v22 = -v20;
        }
        v8 = (v8 - (v22 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
      }
      if (v10 >= v8 >> 14)
        return;
    }
    goto LABEL_41;
  }
}

uint64_t sub_1C02A1DF8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v20[2];

  if ((a5 & 0x2000000000000000) != 0)
    v8 = HIBYTE(a5) & 0xF;
  else
    v8 = a4 & 0xFFFFFFFFFFFFLL;
  if (a2)
  {
    v9 = a3;
    if (a3)
    {
      if (a3 < 0)
      {
        __break(1u);
        JUMPOUT(0x1C02A2030);
      }
      v11 = 0;
      v12 = 0;
      while (v12 < v8)
      {
        if ((a5 & 0x1000000000000000) != 0)
        {
          v18 = a1;
          v14 = sub_1C03046C0();
          a1 = v18;
        }
        else
        {
          if ((a5 & 0x2000000000000000) != 0)
          {
            v20[0] = a4;
            v20[1] = a5 & 0xFFFFFFFFFFFFFFLL;
            v14 = *((unsigned __int8 *)v20 + v12);
            if (*((char *)v20 + v12) < 0)
              __asm { BR              X9 }
          }
          else
          {
            v13 = (a5 & 0xFFFFFFFFFFFFFFFLL) + 32;
            if ((a4 & 0x1000000000000000) == 0)
            {
              v19 = a1;
              v16 = sub_1C0304720();
              a1 = v19;
              v13 = v16;
            }
            v14 = *(unsigned __int8 *)(v13 + v12);
            if (*(char *)(v13 + v12) < 0)
              __asm { BR              X10 }
          }
          v15 = 1;
        }
        *(_DWORD *)(a2 + 4 * v11) = v14;
        v12 += v15;
        if (v9 == ++v11)
          goto LABEL_23;
      }
      v9 = v11;
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v9 = 0;
  }
LABEL_23:
  *a1 = a4;
  a1[1] = a5;
  a1[2] = v12;
  a1[3] = v8;
  return v9;
}

void sub_1C02A2050(unint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((a1 & 1) == 0 || (a1 & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 < a1 >> 16)
  {
    __break(1u);
LABEL_9:
    sub_1C02A20EC(a1, a2, a3);
    if ((v7 & 1) == 0)
      sub_1C02A2158(v7, a2, a3);
  }
}

void sub_1C02A20EC(unint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((a1 & 0xC) == 4 << v5)
    sub_1C029DF68(a1, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 < a1 >> 16)
    __break(1u);
}

unint64_t sub_1C02A2158(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) != 0)
    {
      v10 = HIBYTE(a3) & 0xF;
      if ((a3 & 0x2000000000000000) == 0)
        v10 = a2 & 0xFFFFFFFFFFFFLL;
      if (v5 != v10)
        return sub_1C03046B4();
    }
    else
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v9 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
        }
        else
        {
          v9 = result >> 16;
        }
        v5 = v9;
      }
      else
      {
        if ((a2 & 0x1000000000000000) != 0)
        {
          v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
          v7 = a2 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          v12 = result >> 16;
          v6 = sub_1C0304720();
          v5 = v12;
        }
        if (v5 != v7)
        {
          do
            v8 = *(_BYTE *)(v6 + v5--) & 0xC0;
          while (v8 == 128);
          ++v5;
        }
      }
      return v5 << 16;
    }
  }
  return result;
}

uint64_t sub_1C02A2250(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, char a16, uint64_t a17, uint64_t a18)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36[5];
  _QWORD v37[5];
  __int128 v38;
  __int128 v39;
  _OWORD v40[2];

  v37[3] = sub_1C00447B0(0, &qword_1EF5C2D78);
  v37[4] = &off_1E799E7A0;
  v37[0] = a1;
  v36[3] = type metadata accessor for UCGStringTokenizer(0);
  v36[4] = (uint64_t)&off_1E79A63A0;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v36);
  sub_1C004555C(a5, (uint64_t)boxed_opaque_existential_0, type metadata accessor for UCGStringTokenizer);
  v27 = OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_e3Orchestrator;
  *(_QWORD *)(a18 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_e3Orchestrator) = 0;
  *(_QWORD *)(a18
            + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator____lazy_storage___semanticRelationshipMapping) = 0;
  sub_1C0049024((uint64_t)v37, a18 + 16);
  sub_1C0045DFC(a7, a18 + 56, &qword_1EF5C2D38);
  *(_QWORD *)(a18 + 104) = a8;
  sub_1C00638E8(a3, a18 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_config, type metadata accessor for ContactResolverConfig);
  *(_QWORD *)(a18 + 96) = a2;
  *(_BYTE *)(a18 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_plusTrialFactors) = a4;
  sub_1C005A718(a6, (uint64_t)&v38, &qword_1EF5C2DB0);
  v28 = a18 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_e3TrialFactors;
  if ((_QWORD)v39)
  {
    v29 = v39;
    *(_OWORD *)v28 = v38;
    *(_OWORD *)(v28 + 16) = v29;
    *(_OWORD *)(v28 + 32) = v40[0];
    *(_OWORD *)(v28 + 41) = *(_OWORD *)((char *)v40 + 9);
  }
  else
  {
    *(_BYTE *)v28 = 0;
    *(_QWORD *)(v28 + 8) = 1701736302;
    *(_QWORD *)(v28 + 16) = 0xE400000000000000;
    *(_QWORD *)(v28 + 24) = 0;
    *(_QWORD *)(v28 + 32) = 0;
    *(_OWORD *)(v28 + 40) = xmmword_1C0323000;
    *(_BYTE *)(v28 + 56) = 0;
  }
  sub_1C0045DFC(a9, a18 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_plusSuggestionHandler, &qword_1EF5C2CF8);
  sub_1C0049024((uint64_t)v36, a18 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_tokenizer);
  sub_1C0045DFC(a10, a18 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_triggerLogger, &qword_1EF5BA420);
  sub_1C0045DFC(a11, a18 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_relationshipLocalizer, &qword_1EF5C2D10);
  *(_QWORD *)(a18 + v27) = a12;
  v30 = a8;
  swift_retain();
  swift_release();
  if (*(_QWORD *)(a18 + v27)
    || *(_BYTE *)(a18 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_e3TrialFactors) != 1)
  {

    swift_release();
    sub_1C0044B78(a11, &qword_1EF5C2D10);
    sub_1C0044B78(a10, &qword_1EF5BA420);
    sub_1C0044B78(a9, &qword_1EF5C2CF8);
    sub_1C0044B78(a7, &qword_1EF5C2D38);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v36);
    sub_1C003DD84(a3, type metadata accessor for ContactResolverConfig);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v37);
  }
  else
  {
    type metadata accessor for EuclidVectorDb();
    swift_allocObject();
    v31 = sub_1C0180A70();
    type metadata accessor for EuclidEmbeddingApi();
    swift_allocObject();
    v32 = sub_1C0181380();

    swift_release();
    sub_1C0044B78(a11, &qword_1EF5C2D10);
    sub_1C0044B78(a10, &qword_1EF5BA420);
    sub_1C0044B78(a9, &qword_1EF5C2CF8);
    sub_1C0044B78(a7, &qword_1EF5C2D38);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v36);
    sub_1C003DD84(a3, type metadata accessor for ContactResolverConfig);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v37);
    type metadata accessor for E3Orchestrator();
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = v31;
    *(_QWORD *)(v33 + 24) = v32;
    *(_QWORD *)(a18 + v27) = v33;
    swift_release();
  }
  *(_QWORD *)(a18 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_asrE3VectorDbApi) = a13;
  *(_QWORD *)(a18 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_asrE3EmbedderApi) = a14;
  v34 = a18 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_ucgTrialFactors;
  if (a15 == 2)
  {
    *(_WORD *)v34 = 0;
  }
  else
  {
    *(_BYTE *)v34 = a15 & 1;
    *(_BYTE *)(v34 + 1) = a16 & 1;
  }
  sub_1C005A718(a17, a18 + OBJC_IVAR____TtC13SiriInference23UnifiedContactGenerator_phoneSequenceFetcher, &qword_1EF5C2858);
  return a18;
}

uint64_t type metadata accessor for ContactSearchResultCollector()
{
  return objc_opt_self();
}

void type metadata accessor for ContactRecall()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C02A26B8()
{
  return type metadata accessor for UnifiedContactGenerator(0);
}

void sub_1C02A26C0()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for ContactResolverConfig(319);
  if (v0 <= 0x3F)
  {
    sub_1C02A27AC();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_1C02A27AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF5C2AB8[0])
  {
    type metadata accessor for AsrPhoneticSequenceFetcher();
    v0 = sub_1C030448C();
    if (!v1)
      atomic_store(v0, qword_1EF5C2AB8);
  }
}

uint64_t sub_1C02A2800(uint64_t a1)
{
  return sub_1C0120AE0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t sub_1C02A2818(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1C0120A8C(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t sub_1C02A288C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1C0120A8C(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_1C0120AE0(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1C02A2928(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_1C0120AE0(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t sub_1C02A2978(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 40);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C02A29B8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C02A2A08(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t sub_1C02A2A10(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = a2;
  return result;
}

void type metadata accessor for ContactSearchMatchType()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C02A2A24()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1C02A2A54(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1C02A2AA8(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C02A2B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for ContactSearchMatch()
{
  OUTLINED_FUNCTION_17_2();
}

void type metadata accessor for ContactSharedIdentifier()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C02A2BB8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C02A2BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_0_85();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t sub_1C02A2BEC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C02A2BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_0_85();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

unint64_t sub_1C02A2C28()
{
  unint64_t result;

  result = qword_1EF5C2CD0;
  if (!qword_1EF5C2CD0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0323224, &unk_1E79A6388);
    atomic_store(result, (unint64_t *)&qword_1EF5C2CD0);
  }
  return result;
}

unint64_t sub_1C02A2C68()
{
  unint64_t result;

  result = qword_1EF5C2CD8;
  if (!qword_1EF5C2CD8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03232B4, &unk_1E79A6290);
    atomic_store(result, (unint64_t *)&qword_1EF5C2CD8);
  }
  return result;
}

void sub_1C02A2CA4(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = OUTLINED_FUNCTION_197_0(a1);
  v2(v1);
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C02A2CC8(uint64_t a1)
{
  destroy for PLUSSuggestionHandler(a1);
  return a1;
}

void sub_1C02A2CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_1C029B260(a1, a2, a3, a4, v8, a6, a7, a8);
}

void sub_1C02A2D14(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_1C029B16C(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_1C02A2D30()
{
  unint64_t result;

  result = qword_1EF5C2D00;
  if (!qword_1EF5C2D00)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0323304, &unk_1E79A6290);
    atomic_store(result, (unint64_t *)&qword_1EF5C2D00);
  }
  return result;
}

void sub_1C02A2D6C(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = OUTLINED_FUNCTION_197_0(a1);
  v2(v1);
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C02A2D90(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C02A2DD8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 *sub_1C02A2E1C(__n128 *a1, __n128 *a2)
{
  __swift_memcpy16_8(a2, a1);
  return a2;
}

uint64_t sub_1C02A2E58(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C02A2E8C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1C02A2EC0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1C029722C(a1, *(_QWORD *)(v2 + 24), a2);
}

void sub_1C02A2EDC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1C0296CAC(a1, *(_QWORD **)(v2 + 16), *(_QWORD **)(v2 + 24), a2);
}

void sub_1C02A2EF4(uint64_t *a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_1C028D640(a1, a2, *(_QWORD **)(v3 + 16), a3);
}

uint64_t sub_1C02A2EFC(uint64_t a1, const void *a2)
{
  uint64_t v2;

  return sub_1C028FC6C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1C02A2F14()
{
  return sub_1C02960F4() & 1;
}

void sub_1C02A2F30(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_1C0294528(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_1C02A2F38(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1C0295990(a1, *(_QWORD *)(v2 + 16), a2);
}

void type metadata accessor for ContactNameMatch.Signals()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C02A2F60(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C02A2FAC + 4 * byte_1C0323025[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C02A2FE0 + 4 * byte_1C0323020[v4]))();
}

uint64_t sub_1C02A2FE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02A2FE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02A2FF0);
  return result;
}

uint64_t sub_1C02A2FFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02A3004);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C02A3008(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02A3010(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for TriggeringCondition()
{
  OUTLINED_FUNCTION_17_2();
}

void sub_1C02A3028(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_9();
}

void sub_1C02A305C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_253();
  *v3 = *v2;
  v1[1] = v2[1];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_29();
  v1[2] = *(_QWORD *)(v0 + 16);
  v1[3] = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C02A30B4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_253();
  v3 = v2[1];
  *v1 = *v2;
  v1[1] = v3;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v0 + 24);
  v1[2] = *(_QWORD *)(v0 + 16);
  v1[3] = v4;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C02A30F0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return OUTLINED_FUNCTION_297(result, a2);
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      return OUTLINED_FUNCTION_297(result, a2);
  }
  return result;
}

void type metadata accessor for ContactLearnedInferenceMatch()
{
  OUTLINED_FUNCTION_17_2();
}

void sub_1C02A3138(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_9();
}

_QWORD *sub_1C02A3168(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *sub_1C02A31BC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void type metadata accessor for ContactRelationshipMatch()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C02A3204()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C02A322C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1C02A3270(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C02A32E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C02A3330(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return OUTLINED_FUNCTION_297(result, a2);
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      return OUTLINED_FUNCTION_297(result, a2);
  }
  return result;
}

void type metadata accessor for ContactNameMatch()
{
  OUTLINED_FUNCTION_17_2();
}

unint64_t sub_1C02A3380()
{
  unint64_t result;

  result = qword_1EF5C2DC0;
  if (!qword_1EF5C2DC0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0323514, &unk_1E79A65F8);
    atomic_store(result, (unint64_t *)&qword_1EF5C2DC0);
  }
  return result;
}

unint64_t sub_1C02A33C0()
{
  unint64_t result;

  result = qword_1EF5C2DC8;
  if (!qword_1EF5C2DC8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C032357C, &unk_1E79A6578);
    atomic_store(result, (unint64_t *)&qword_1EF5C2DC8);
  }
  return result;
}

unint64_t sub_1C02A3400()
{
  unint64_t result;

  result = qword_1EF5C2DD0;
  if (!qword_1EF5C2DD0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03235E4, &unk_1E79A64F8);
    atomic_store(result, (unint64_t *)&qword_1EF5C2DD0);
  }
  return result;
}

unint64_t sub_1C02A3440()
{
  unint64_t result;

  result = qword_1EF5C2DD8;
  if (!qword_1EF5C2DD8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03236C4, &unk_1E79A6480);
    atomic_store(result, (unint64_t *)&qword_1EF5C2DD8);
  }
  return result;
}

unint64_t sub_1C02A3480()
{
  unint64_t result;

  result = qword_1EF5C2DE0;
  if (!qword_1EF5C2DE0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C032371C, &unk_1E79A63E8);
    atomic_store(result, (unint64_t *)&qword_1EF5C2DE0);
  }
  return result;
}

unint64_t sub_1C02A34C0()
{
  unint64_t result;

  result = qword_1EF5C2DE8;
  if (!qword_1EF5C2DE8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03236EC, &unk_1E79A63E8);
    atomic_store(result, (unint64_t *)&qword_1EF5C2DE8);
  }
  return result;
}

unint64_t sub_1C02A34FC(uint64_t a1)
{
  unint64_t result;

  result = sub_1C02A3520();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C02A3520()
{
  unint64_t result;

  result = qword_1EF5C2DF0;
  if (!qword_1EF5C2DF0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03238C8, &unk_1E79A63E8);
    atomic_store(result, (unint64_t *)&qword_1EF5C2DF0);
  }
  return result;
}

unint64_t sub_1C02A3560()
{
  unint64_t result;

  result = qword_1EF5C2DF8;
  if (!qword_1EF5C2DF8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0323744, &unk_1E79A63E8);
    atomic_store(result, (unint64_t *)&qword_1EF5C2DF8);
  }
  return result;
}

unint64_t sub_1C02A35A0()
{
  unint64_t result;

  result = qword_1EF5C2E00;
  if (!qword_1EF5C2E00)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C032377C, &unk_1E79A63E8);
    atomic_store(result, (unint64_t *)&qword_1EF5C2E00);
  }
  return result;
}

uint64_t sub_1C02A35DC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C02A1B80(a1, *(uint64_t **)(v2 + 16), a2);
}

void type metadata accessor for ContactRelationshipMatch.Signals()
{
  OUTLINED_FUNCTION_17_2();
}

unint64_t sub_1C02A3604()
{
  unint64_t result;

  result = qword_1EF5C2E08;
  if (!qword_1EF5C2E08)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0323930, &unk_1E79A6640);
    atomic_store(result, (unint64_t *)&qword_1EF5C2E08);
  }
  return result;
}

unint64_t sub_1C02A3644()
{
  unint64_t result;

  result = qword_1EF5C2E10;
  if (!qword_1EF5C2E10)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0323900, &unk_1E79A6640);
    atomic_store(result, (unint64_t *)&qword_1EF5C2E10);
  }
  return result;
}

unint64_t sub_1C02A3680(uint64_t a1)
{
  unint64_t result;

  result = sub_1C02A36A4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C02A36A4()
{
  unint64_t result;

  result = qword_1EF5C2E18;
  if (!qword_1EF5C2E18)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0323ADC, &unk_1E79A6640);
    atomic_store(result, (unint64_t *)&qword_1EF5C2E18);
  }
  return result;
}

unint64_t sub_1C02A36E4()
{
  unint64_t result;

  result = qword_1EF5C2E20;
  if (!qword_1EF5C2E20)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0323958, &unk_1E79A6640);
    atomic_store(result, (unint64_t *)&qword_1EF5C2E20);
  }
  return result;
}

unint64_t sub_1C02A3724()
{
  unint64_t result;

  result = qword_1EF5C2E28;
  if (!qword_1EF5C2E28)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0323990, &unk_1E79A6640);
    atomic_store(result, (unint64_t *)&qword_1EF5C2E28);
  }
  return result;
}

uint64_t sub_1C02A3768()
{
  return sub_1C02A2F14() & 1;
}

void sub_1C02A3784(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C02A2EC0(a1, a2);
}

uint64_t sub_1C02A37C4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C02A35DC(a1, a2);
}

uint64_t OUTLINED_FUNCTION_21_46()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1C00407A4(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_22_51()
{
  return sub_1C0304504();
}

void OUTLINED_FUNCTION_42_26()
{
  sub_1C00B1738();
}

void OUTLINED_FUNCTION_46_25()
{
  sub_1C00B1738();
}

uint64_t OUTLINED_FUNCTION_57_17(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(unint64_t, uint64_t, unint64_t);
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v6 = *(_QWORD *)(a1 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return v4(v1 + v7, v3, v2 + v7 + *(_QWORD *)(v6 + 72) * v5);
}

void OUTLINED_FUNCTION_73_14(unint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
}

uint64_t OUTLINED_FUNCTION_78_12()
{
  return sub_1C0304150();
}

uint64_t OUTLINED_FUNCTION_93_7()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 296) + 8))(v0, *(_QWORD *)(v1 - 304));
}

uint64_t OUTLINED_FUNCTION_94_9()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_97_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1C003F79C(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_108_7@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)v2 = v5;
  *((_QWORD *)v2 + 1) = v4;
  return (*(uint64_t (**)(char *, _QWORD, uint64_t))(v1 + 336))(&v2[a1], *(_QWORD *)(v1 + 272), v3);
}

void OUTLINED_FUNCTION_113_6()
{
  sub_1C00B1764();
}

uint64_t OUTLINED_FUNCTION_119_3()
{
  uint64_t v0;

  return sub_1C00B2398(0, *(_QWORD *)(v0 + 16) + 1, 1);
}

unint64_t OUTLINED_FUNCTION_121_5()
{
  return 0xD00000000000007CLL;
}

uint64_t OUTLINED_FUNCTION_123_3()
{
  return 31868;
}

uint64_t OUTLINED_FUNCTION_124_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t (*v10)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  return v10(&a9, v12, v9, a1, v11);
}

uint64_t OUTLINED_FUNCTION_132_3()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_133_1()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_135_3()
{
  return sub_1C0303E20();
}

void OUTLINED_FUNCTION_137_3(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 312) = a1;
}

uint64_t OUTLINED_FUNCTION_138_3()
{
  return 0;
}

__n128 *OUTLINED_FUNCTION_140_4(__n128 *result, __n128 a2)
{
  uint64_t v2;
  unint64_t v3;

  result[1] = a2;
  v3 = *(_QWORD *)(v2 - 320);
  result[2].n128_u64[0] = *(_QWORD *)(v2 - 488);
  result[2].n128_u64[1] = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_144_3@<X0>(uint64_t a1@<X8>)
{
  return a1 + 32;
}

uint64_t OUTLINED_FUNCTION_145_3(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

void OUTLINED_FUNCTION_146_2()
{
  JUMPOUT(0x1C3B975F8);
}

uint64_t OUTLINED_FUNCTION_156_2()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

void OUTLINED_FUNCTION_157_1(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1C0044B78(*(_QWORD *)(v2 + 176), a2);
}

uint64_t OUTLINED_FUNCTION_159_2()
{
  return sub_1C0303B80();
}

uint64_t OUTLINED_FUNCTION_163_1()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1C003E6D8(v2, v1, (uint64_t *)(v0 + 488));
}

__n128 OUTLINED_FUNCTION_166_0(unint64_t a1)
{
  __n128 *v1;

  v1[15].n128_u64[0] = a1;
  v1[30].n128_u64[1] = a1;
  return v1[11];
}

uint64_t OUTLINED_FUNCTION_168_2()
{
  return sub_1C0303B5C();
}

uint64_t OUTLINED_FUNCTION_169_2@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 304));
}

unint64_t OUTLINED_FUNCTION_171_2(uint64_t a1)
{
  char v1;

  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t OUTLINED_FUNCTION_172_0(uint64_t a1)
{
  return *(_QWORD *)a1;
}

void OUTLINED_FUNCTION_173_1(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1C005A718(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_178_2(uint64_t result)
{
  _QWORD *v1;

  *v1 |= result;
  return result;
}

uint64_t OUTLINED_FUNCTION_179_1(uint64_t result)
{
  _QWORD *v1;

  *v1 &= result;
  return result;
}

uint64_t OUTLINED_FUNCTION_180_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1 + 32, v2, v1);
}

uint64_t OUTLINED_FUNCTION_181_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return sub_1C015898C(v9, (uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_183_1()
{
  return sub_1C0054B3C();
}

uint64_t OUTLINED_FUNCTION_188_0()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_189_1()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_190_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_191_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

BOOL OUTLINED_FUNCTION_194_0(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_196_0()
{
  return sub_1C03047F8();
}

uint64_t OUTLINED_FUNCTION_197_0(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_199_0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 336))();
}

uint64_t OUTLINED_FUNCTION_203_0()
{
  return type metadata accessor for ContactResolverConfig(0);
}

void OUTLINED_FUNCTION_204_0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1C0045DFC(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_206_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_1C003E6D8(a1, v3, a3);
}

void OUTLINED_FUNCTION_207_0()
{
  sub_1C00B1764();
}

uint64_t OUTLINED_FUNCTION_209_0()
{
  uint64_t v0;

  return sub_1C02A2CC8(v0 + 624);
}

void OUTLINED_FUNCTION_210_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 8 * v1) = v2;
}

uint64_t OUTLINED_FUNCTION_214(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_218_0()
{
  return sub_1C0304B04();
}

uint64_t OUTLINED_FUNCTION_223(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 208) = a1;
  return v1 - 208;
}

uint64_t OUTLINED_FUNCTION_226()
{
  return swift_release();
}

void OUTLINED_FUNCTION_227(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1C0045DFC(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_231()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_238()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_239()
{
  return swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t OUTLINED_FUNCTION_240(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD);
  uint64_t v2;

  return v1(a1, *(_QWORD *)(v2 - 392));
}

void OUTLINED_FUNCTION_241(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1C02A2CA4((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_242()
{
  return 0x737961776C61;
}

uint64_t OUTLINED_FUNCTION_243()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_245()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_247()
{
  return sub_1C030331C();
}

uint64_t OUTLINED_FUNCTION_248(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_1C003E6D8(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_249(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1C0286D30(v2, a2);
}

uint64_t OUTLINED_FUNCTION_250()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_251()
{
  return 0xD000000000000033;
}

uint64_t OUTLINED_FUNCTION_254(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1C003E6D8(a1, a2, (uint64_t *)(v2 - 176));
}

uint64_t OUTLINED_FUNCTION_257()
{
  return sub_1C0303FD0();
}

uint64_t OUTLINED_FUNCTION_259()
{
  return sub_1C0303E20();
}

void OUTLINED_FUNCTION_263()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_264()
{
  uint64_t v0;

  return sub_1C007929C(v0);
}

uint64_t OUTLINED_FUNCTION_265()
{
  uint64_t v0;

  return v0 - 104;
}

uint64_t OUTLINED_FUNCTION_267()
{
  return sub_1C0303F88();
}

uint64_t OUTLINED_FUNCTION_268()
{
  return sub_1C030481C();
}

uint64_t OUTLINED_FUNCTION_269(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 352) = a1;
  return v1 + 352;
}

uint64_t OUTLINED_FUNCTION_270()
{
  return sub_1C0303E20();
}

uint64_t OUTLINED_FUNCTION_272(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t (*v9)(uint64_t *, _QWORD);

  return v9(&a9, 0);
}

uint64_t OUTLINED_FUNCTION_278(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_279()
{
  sub_1C004FB58();
}

uint64_t OUTLINED_FUNCTION_280(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_282(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  sub_1C0045DFC(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_283()
{
  return sub_1C0304B10();
}

uint64_t OUTLINED_FUNCTION_284()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_287()
{
  return sub_1C03026B0();
}

uint64_t OUTLINED_FUNCTION_289(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t v4;

  return sub_1C003E6D8(v3, v4, a3);
}

void OUTLINED_FUNCTION_290()
{
  uint64_t *v0;
  _QWORD *v1;

  sub_1C0150A88(v1, v0);
}

uint64_t OUTLINED_FUNCTION_291()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_297(uint64_t result, int a2)
{
  *(_QWORD *)(result + 8) = (a2 - 1);
  return result;
}

id OUTLINED_FUNCTION_299@<X0>(void *a1@<X8>)
{
  char v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 16) = v1;
  return a1;
}

uint64_t sub_1C02A3F78()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[7];
  char v32;
  int v33;
  char v34;
  __int16 v35;
  char v36;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B87E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = 0;
  *(_BYTE *)(inited + 48) = 2;
  type metadata accessor for DateTime.Date();
  v1 = OUTLINED_FUNCTION_16_0();
  v9 = OUTLINED_FUNCTION_3_75(v1, v2, v3, v4, v5, v6, v7, v8, v27, *(int *)v31, *(__int16 *)&v31[4], v31[6], 6);
  type metadata accessor for DateTime.Time();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_1_63();
  DateTime.Time.init(withHour:minute:second:meridiem:definedValue:occurringIn:setByUser:)(0, 0, 0, 0, 0, 0, v10, v11, v28, v32);
  type metadata accessor for DateTime();
  OUTLINED_FUNCTION_16_0();
  v12 = OUTLINED_FUNCTION_3_117(v9);
  v13 = OUTLINED_FUNCTION_16_0();
  v21 = OUTLINED_FUNCTION_3_75(v13, v14, v15, v16, v17, v18, v19, v20, v29, v33, v35, v36, 5);
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_1_63();
  DateTime.Time.init(withHour:minute:second:meridiem:definedValue:occurringIn:setByUser:)(11, 0, 59, 0, 59, 0, v22, v23, v30, v34);
  OUTLINED_FUNCTION_16_0();
  v24 = OUTLINED_FUNCTION_3_117(v21);
  type metadata accessor for DateTime.DateTimeRange();
  OUTLINED_FUNCTION_16_0();
  v25 = DateTime.DateTimeRange.init(withStartDateTime:endDateTime:)(v12, v24);
  OUTLINED_FUNCTION_16_0();
  *(_QWORD *)(inited + 56) = DateTime.init(occurringIn:)(v25);
  sub_1C0099A4C();
  return sub_1C0303DB4();
}

uint64_t sub_1C02A4144()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  char v17;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B87E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0309BD0;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = 0;
  *(_BYTE *)(inited + 48) = 2;
  v17 = 1;
  v16 = 1;
  type metadata accessor for DateTime();
  swift_allocObject();
  OUTLINED_FUNCTION_1_132(6, v1, v2, &v17, v3, v4, v5, &v16);
  *(_QWORD *)(inited + 56) = v6;
  *(_OWORD *)(inited + 64) = xmmword_1C0308540;
  *(_BYTE *)(inited + 80) = 0;
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_1_132(7, v7, v8, &v17, v9, v10, v11, &v16);
  *(_QWORD *)(inited + 88) = v12;
  *(_OWORD *)(inited + 96) = xmmword_1C0308570;
  *(_BYTE *)(inited + 112) = 0;
  OUTLINED_FUNCTION_0_26();
  DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(7, 0, 0, &v17, 10, 0, 0, &v16);
  *(_QWORD *)(inited + 120) = v13;
  *(_OWORD *)(inited + 128) = xmmword_1C03089A0;
  *(_BYTE *)(inited + 144) = 0;
  OUTLINED_FUNCTION_0_26();
  DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(8, 0, 0, &v17, 10, 30, 0, &v16);
  *(_QWORD *)(inited + 152) = v14;
  sub_1C0099A4C();
  return sub_1C0303DB4();
}

void OUTLINED_FUNCTION_1_132(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(a1, 0, 0, a4, 9, 0, 0, a8);
}

uint64_t sub_1C02A42B8()
{
  return swift_deallocObject();
}

void sub_1C02A42C8(uint64_t a1)
{
  sub_1C02A42F8(a1, MEMORY[0x1E0DB1100], &qword_1EF5FC790, algn_1EF5FC798);
}

void sub_1C02A42E0(uint64_t a1)
{
  sub_1C02A42F8(a1, MEMORY[0x1E0DB10D0], &qword_1EF5FC7A0, algn_1EF5FC7A8);
}

void sub_1C02A42F8(uint64_t a1, id *a2, uint64_t *a3, _QWORD *a4)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*a2)
  {
    v6 = *a2;
    v7 = sub_1C0303EB0();
    v9 = v8;

    *a3 = v7;
    *a4 = v9;
  }
  else
  {
    __break(1u);
  }
}

void sub_1C02A4358(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v10;
  uint64_t authorization_right;
  uint64_t v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23[3];
  uint64_t v24;

  if (!a1)
  {
LABEL_21:
    if (a2)
    {
      v12 = qword_1ED727970;
      v13 = a2;
      if (v12 != -1)
        swift_once();
      v14 = sub_1C0303B98();
      __swift_project_value_buffer(v14, (uint64_t)&unk_1ED7295C8);
      v22 = v13;
      v15 = sub_1C0303B80();
      v16 = sub_1C03042F4();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        v18 = swift_slowAlloc();
        v23[0] = v18;
        *(_DWORD *)v17 = 136315138;
        v24 = (uint64_t)v22;
        type metadata accessor for CFError(0);
        v19 = v22;
        v20 = sub_1C0303EF8();
        v24 = sub_1C003E6D8(v20, v21, v23);
        sub_1C03044B0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C0039000, v15, v16, "error when checking tcc: %s", v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B98378](v18, -1, -1);
        MEMORY[0x1C3B98378](v17, -1, -1);

      }
      else
      {

      }
    }
    return;
  }
  swift_unknownObjectRetain();
  if (!(id)tcc_authorization_record_get_service())
  {
    swift_unknownObjectRelease();
    goto LABEL_21;
  }
  tcc_service_get_name();
  v5 = sub_1C0303FDC();
  v7 = v6;
  if (qword_1EF5B8030 != -1)
    swift_once();
  v8 = v5 == qword_1EF5FC7A0 && v7 == *(_QWORD *)algn_1EF5FC7A8;
  if (v8 || (sub_1C0304A08() & 1) != 0)
    goto LABEL_18;
  if (qword_1EF5B8028 != -1)
    swift_once();
  if (v5 == qword_1EF5FC790 && v7 == *(_QWORD *)algn_1EF5FC798)
  {
LABEL_18:
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return;
    }
  }
  authorization_right = tcc_authorization_record_get_authorization_right();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_beginAccess();
  *(_BYTE *)(a3 + 16) = authorization_right == 2;
}

void sub_1C02A46B8(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1C02A4358(a1, a2, v2);
}

uint64_t sub_1C02A46C0(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_1_133()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_3_133()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_4_105(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
  return v1 - 152;
}

uint64_t OUTLINED_FUNCTION_5_94()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1C003E6D8(v1, v0, (uint64_t *)(v2 - 96));
}

uint64_t OUTLINED_FUNCTION_8_74()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_9_90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 192) = a1;
  return swift_bridgeObjectRetain();
}

void DateTime.__allocating_init(withDate:)(uint64_t a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_7_3();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = 0;
  OUTLINED_FUNCTION_10_76(v2);
  OUTLINED_FUNCTION_9();
}

void DateTime.__allocating_init(occurringIn:)(uint64_t a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_7_3();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  *(_BYTE *)(v2 + 32) = 1;
  *(_BYTE *)(v2 + 48) = 4;
  OUTLINED_FUNCTION_9();
}

uint64_t DateTime.__allocating_init(withStartHour:startMinute:startSecond:startMeridiem:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_7_3();
  DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:)(a1, a2, a3, a4);
  return v8;
}

uint64_t DateTime.__allocating_init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  uint64_t v16;

  v16 = OUTLINED_FUNCTION_7_3();
  DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v16;
}

void DateTime.__allocating_init(withDate:time:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_7_3();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  OUTLINED_FUNCTION_10_76(v4);
  OUTLINED_FUNCTION_37_0();
}

uint64_t DateTime.__allocating_init(withDate:time:definedValue:recurrencePattern:temporalIntent:occurringIn:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t result;
  char v13;
  char v14;

  result = OUTLINED_FUNCTION_7_3();
  v13 = *a3;
  v14 = *a5;
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_BYTE *)(result + 32) = v13;
  *(_QWORD *)(result + 40) = a4;
  *(_BYTE *)(result + 48) = v14;
  *(_QWORD *)(result + 56) = a6;
  *(_QWORD *)(result + 64) = 0;
  return result;
}

void DateTime.__allocating_init(withTime:)(uint64_t a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_7_3();
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = a1;
  OUTLINED_FUNCTION_10_76(v2);
  OUTLINED_FUNCTION_9();
}

BOOL static DateTime.> infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C02A49CC(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static DateTime.<= infix(_:_:));
}

BOOL static DateTime.>= infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C02A49CC(a1, a2, (uint64_t (*)(uint64_t, uint64_t))static DateTime.< infix(_:_:));
}

BOOL sub_1C02A49CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  type metadata accessor for DateTime();
  return (a3(a1, a2) & 1) == 0;
}

uint64_t DateTime.date.getter()
{
  return swift_retain();
}

void DateTime.definedValue.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

uint64_t DateTime.recurrencePattern.getter()
{
  return swift_retain();
}

void DateTime.temporalIntent.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 48);
}

uint64_t DateTime.occurringIn.getter()
{
  return swift_retain();
}

void sub_1C02A4A40(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  sub_1C02A4AAC(&v1);
}

void sub_1C02A4A74(_QWORD *a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  *a1 = *(_QWORD *)(v1 + 64);
  OUTLINED_FUNCTION_140();
}

void sub_1C02A4AAC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = v2;
  OUTLINED_FUNCTION_140();
}

uint64_t DateTime.init(withDate:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)(v1 + 24) = 0;
  return OUTLINED_FUNCTION_6_99();
}

void DateTime.__allocating_init(withDate:time:occurringIn:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;

  v6 = (_QWORD *)OUTLINED_FUNCTION_7_3();
  v6[2] = a1;
  v6[3] = a2;
  v6[7] = a3;
  v6[8] = 0;
  OUTLINED_FUNCTION_26_44((uint64_t)v6);
  OUTLINED_FUNCTION_37_0();
}

uint64_t DateTime.init(withDate:time:occurringIn:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_QWORD *)(v3 + 56) = a3;
  *(_QWORD *)(v3 + 64) = 0;
  *(_BYTE *)(v3 + 32) = 1;
  *(_QWORD *)(v3 + 40) = 0;
  return OUTLINED_FUNCTION_14_67();
}

uint64_t DateTime.__allocating_init(withDefinedValue:)()
{
  uint64_t result;

  result = OUTLINED_FUNCTION_7_3();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_BYTE *)(result + 32) = 0;
  *(_BYTE *)(result + 48) = 4;
  *(_QWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = 0;
  return result;
}

uint64_t DateTime.init(withDefinedValue:)()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 0;
  *(_BYTE *)(v0 + 48) = 4;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 64) = 0;
  return result;
}

uint64_t DateTime.init(withTime:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = a1;
  return OUTLINED_FUNCTION_6_99();
}

void DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v9 = v8;
  v14 = *a4;
  v15 = *a8;
  *(_QWORD *)(v8 + 64) = 0;
  v23 = v14;
  OUTLINED_FUNCTION_21_47();
  OUTLINED_FUNCTION_16_0();
  v18 = OUTLINED_FUNCTION_28_39(a1, v16, v17, &v23);
  v22 = v15;
  OUTLINED_FUNCTION_16_0();
  v19 = DateTime.Time.init(withHour:minute:second:meridiem:)(a5, a6, a7, &v22);
  *(_QWORD *)(v9 + 24) = v18;
  type metadata accessor for DateTime();
  v20 = OUTLINED_FUNCTION_7_3();
  *(_QWORD *)(v20 + 16) = 0;
  *(_QWORD *)(v20 + 24) = v18;
  *(_BYTE *)(v20 + 32) = 1;
  *(_QWORD *)(v20 + 40) = 0;
  *(_BYTE *)(v20 + 48) = 4;
  *(_OWORD *)(v20 + 56) = 0u;
  v21 = OUTLINED_FUNCTION_7_3();
  *(_QWORD *)(v21 + 16) = 0;
  *(_QWORD *)(v21 + 24) = v19;
  *(_BYTE *)(v21 + 32) = 1;
  *(_QWORD *)(v21 + 40) = 0;
  *(_BYTE *)(v21 + 48) = 4;
  *(_OWORD *)(v21 + 56) = 0u;
  OUTLINED_FUNCTION_22_52();
  OUTLINED_FUNCTION_16_0();
  *(_QWORD *)(v9 + 56) = DateTime.DateTimeRange.init(withStartDateTime:endDateTime:)(v20, v21);
  *(_QWORD *)(v9 + 16) = 0;
  *(_BYTE *)(v9 + 32) = 1;
  *(_QWORD *)(v9 + 40) = 0;
  *(_BYTE *)(v9 + 48) = 4;
  OUTLINED_FUNCTION_44_7();
  OUTLINED_FUNCTION_2_0();
}

uint64_t DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v6 = *a4;
  *(_QWORD *)(v4 + 64) = 0;
  v11 = v6;
  OUTLINED_FUNCTION_21_47();
  OUTLINED_FUNCTION_16_0();
  v9 = OUTLINED_FUNCTION_28_39(a1, v7, v8, &v11);
  *(_QWORD *)(v4 + 56) = 0;
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = v9;
  *(_BYTE *)(v4 + 32) = 1;
  *(_QWORD *)(v4 + 40) = 0;
  *(_BYTE *)(v4 + 48) = 4;
  return v4;
}

void DateTime.__allocating_init(withDate:occurringIn:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;

  v4 = (_QWORD *)OUTLINED_FUNCTION_7_3();
  v4[7] = a2;
  v4[8] = 0;
  v4[2] = a1;
  v4[3] = 0;
  OUTLINED_FUNCTION_26_44((uint64_t)v4);
  OUTLINED_FUNCTION_37_0();
}

uint64_t DateTime.init(withDate:occurringIn:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a2;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = 0;
  *(_BYTE *)(v2 + 32) = 1;
  *(_QWORD *)(v2 + 40) = 0;
  return OUTLINED_FUNCTION_14_67();
}

uint64_t DateTime.init(occurringIn:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 32) = 1;
  return OUTLINED_FUNCTION_14_67();
}

void sub_1C02A4DA8(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;

  v3 = *(_QWORD *)(a2 + 56);
  if (v3)
  {
    v4 = *(_QWORD *)(v3 + 24);
    if (v4)
    {
      v5 = *(_QWORD *)(v4 + 24);
      OUTLINED_FUNCTION_9_3();
    }
    else
    {
      v5 = 0;
    }
    v7 = *(_QWORD *)(v3 + 32);
    if (v7)
    {
      v6 = *(_QWORD *)(v7 + 24);
      OUTLINED_FUNCTION_111_2();
    }
    else
    {
      v6 = 0;
    }
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v8 = a1[2];
  type metadata accessor for DateTime();
  v9 = OUTLINED_FUNCTION_7_3();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v5;
  *(_BYTE *)(v9 + 32) = 1;
  *(_QWORD *)(v9 + 40) = 0;
  *(_BYTE *)(v9 + 48) = 4;
  *(_QWORD *)(v9 + 56) = 0;
  *(_QWORD *)(v9 + 64) = 0;
  v10 = a1[7];
  if (v10 && (v11 = *(_QWORD *)(v10 + 32)) != 0)
  {
    v12 = *(_QWORD *)(v11 + 16);
    swift_retain();
  }
  else
  {
    v12 = 0;
  }
  v13 = OUTLINED_FUNCTION_7_3();
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v6;
  *(_BYTE *)(v13 + 32) = 1;
  *(_QWORD *)(v13 + 40) = 0;
  *(_BYTE *)(v13 + 48) = 4;
  *(_QWORD *)(v13 + 56) = 0;
  *(_QWORD *)(v13 + 64) = 0;
  v18 = 38;
  v17 = 20;
  OUTLINED_FUNCTION_22_52();
  OUTLINED_FUNCTION_16_0();
  v14 = DateTime.DateTimeRange.init(at:start:end:duration:interval:definedValue:qualifier:)(0, v9, v13, 0, 0, &v18, &v17);
  v15 = a1[5];
  v16 = OUTLINED_FUNCTION_7_3();
  *(_QWORD *)(v16 + 16) = v8;
  *(_QWORD *)(v16 + 24) = v5;
  *(_BYTE *)(v16 + 32) = 1;
  *(_QWORD *)(v16 + 40) = v15;
  *(_BYTE *)(v16 + 48) = 4;
  *(_QWORD *)(v16 + 56) = v14;
  *(_QWORD *)(v16 + 64) = 0;
  OUTLINED_FUNCTION_111_2();
  swift_retain();
  swift_retain_n();
  OUTLINED_FUNCTION_9_3();
  swift_release();
  OUTLINED_FUNCTION_1_4();
  swift_release();
  OUTLINED_FUNCTION_2_0();
}

uint64_t sub_1C02A4F30(__int128 *a1)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 16))
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_9_3();
    sub_1C01A0FE4();
    OUTLINED_FUNCTION_1_0();
  }
  else
  {
    OUTLINED_FUNCTION_62();
  }
  if (*(_QWORD *)(v1 + 24))
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_9_3();
    sub_1C00C33E0();
    OUTLINED_FUNCTION_1_0();
  }
  else
  {
    OUTLINED_FUNCTION_62();
  }
  if (*(_BYTE *)(v1 + 32) == 1)
  {
    OUTLINED_FUNCTION_62();
  }
  else
  {
    OUTLINED_FUNCTION_62();
    sub_1C0304B10();
  }
  if (*(_QWORD *)(v1 + 40))
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_9_3();
    sub_1C02EC0B0(a1);
    OUTLINED_FUNCTION_1_0();
  }
  else
  {
    OUTLINED_FUNCTION_62();
  }
  if (!*(_QWORD *)(v1 + 56))
    return OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_44_7();
  sub_1C0256BE0();
  return swift_release();
}

uint64_t sub_1C02A504C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v10;

  v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1701669236 && a2 == 0xE400000000000000;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x5664656E69666564 && a2 == 0xEC00000065756C61;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x80000001C0332570 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x6C61726F706D6574 && a2 == 0xEE00746E65746E49;
        if (v8 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = a1 == 0x6E6972727563636FLL && a2 == 0xEB000000006E4967;
          if (v9 || (sub_1C0304A08() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0xD000000000000015 && a2 == 0x80000001C0336130)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            v10 = sub_1C0304A08();
            swift_bridgeObjectRelease();
            if ((v10 & 1) != 0)
              return 6;
            else
              return 7;
          }
        }
      }
    }
  }
}

uint64_t sub_1C02A5348(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C02A5374 + 4 * byte_1C0323B18[a1]))(1702125924, 0xE400000000000000);
}

uint64_t sub_1C02A5374()
{
  return 1701669236;
}

uint64_t sub_1C02A5380()
{
  return 0x5664656E69666564;
}

unint64_t sub_1C02A53A0()
{
  return 0xD000000000000011;
}

uint64_t sub_1C02A53BC()
{
  return 0x6C61726F706D6574;
}

uint64_t sub_1C02A53E0()
{
  return 0x6E6972727563636FLL;
}

unint64_t sub_1C02A5400()
{
  return 0xD000000000000015;
}

uint64_t sub_1C02A5420()
{
  unsigned __int8 *v0;

  return sub_1C02A5348(*v0);
}

uint64_t sub_1C02A5428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C02A504C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C02A544C()
{
  sub_1C02A5C58();
  return sub_1C0304BAC();
}

uint64_t sub_1C02A5474()
{
  sub_1C02A5C58();
  return sub_1C0304BB8();
}

uint64_t sub_1C02A549C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2E30);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_1_3();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02A5C58();
  sub_1C0304BA0();
  type metadata accessor for DateTime.Date();
  OUTLINED_FUNCTION_29_24(&qword_1EF5C2E40, v6, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.Date, (uint64_t)&protocol conformance descriptor for DateTime.Date);
  OUTLINED_FUNCTION_2_127();
  if (!v1)
  {
    type metadata accessor for DateTime.Time();
    OUTLINED_FUNCTION_29_24(&qword_1EF5C2E48, v7, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.Time, (uint64_t)&protocol conformance descriptor for DateTime.Time);
    OUTLINED_FUNCTION_2_127();
    sub_1C02A5C94();
    OUTLINED_FUNCTION_9_82();
    type metadata accessor for DateTime.RecurrencePattern();
    OUTLINED_FUNCTION_29_24(&qword_1EF5C2E58, v8, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.RecurrencePattern, (uint64_t)&protocol conformance descriptor for DateTime.RecurrencePattern);
    OUTLINED_FUNCTION_2_127();
    sub_1C02A5CD0();
    OUTLINED_FUNCTION_9_82();
    type metadata accessor for DateTime.DateTimeRange();
    OUTLINED_FUNCTION_29_24(&qword_1EF5B9478, v9, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.DateTimeRange, (uint64_t)&protocol conformance descriptor for DateTime.DateTimeRange);
    OUTLINED_FUNCTION_2_127();
    swift_beginAccess();
    sub_1C02A5D0C();
    sub_1C030499C();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

uint64_t sub_1C02A5724()
{
  __int128 v1[4];

  sub_1C0304B04();
  sub_1C02A4F30(v1);
  return sub_1C0304B40();
}

uint64_t DateTime.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DateTime.init(from:)(a1);
  return v2;
}

uint64_t DateTime.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2E70);
  MEMORY[0x1E0C80A78](v4);
  *(_QWORD *)(v1 + 64) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02A5C58();
  sub_1C0304B88();
  if (v2)
  {
    type metadata accessor for DateTime();
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for DateTime.Date();
    OUTLINED_FUNCTION_29_24(&qword_1EF5C2E78, v5, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.Date, (uint64_t)&protocol conformance descriptor for DateTime.Date);
    OUTLINED_FUNCTION_1_134();
    *(_QWORD *)(v1 + 16) = v10;
    type metadata accessor for DateTime.Time();
    OUTLINED_FUNCTION_29_24(&qword_1EF5C2E80, v7, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.Time, (uint64_t)&protocol conformance descriptor for DateTime.Time);
    OUTLINED_FUNCTION_1_134();
    *(_QWORD *)(v1 + 24) = v10;
    sub_1C02A5D48();
    OUTLINED_FUNCTION_27_47();
    sub_1C03048A0();
    *(_BYTE *)(v1 + 32) = v10;
    type metadata accessor for DateTime.RecurrencePattern();
    OUTLINED_FUNCTION_29_24(&qword_1EF5C2E90, v8, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.RecurrencePattern, (uint64_t)&protocol conformance descriptor for DateTime.RecurrencePattern);
    OUTLINED_FUNCTION_1_134();
    *(_QWORD *)(v1 + 40) = v10;
    sub_1C02A5D84();
    OUTLINED_FUNCTION_27_47();
    sub_1C03048A0();
    *(_BYTE *)(v1 + 48) = v10;
    type metadata accessor for DateTime.DateTimeRange();
    LOBYTE(v11) = 5;
    OUTLINED_FUNCTION_29_24(&qword_1EF5B9498, v9, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.DateTimeRange, (uint64_t)&protocol conformance descriptor for DateTime.DateTimeRange);
    OUTLINED_FUNCTION_1_134();
    *(_QWORD *)(v1 + 56) = v10;
    sub_1C02A5DC0();
    sub_1C03048E8();
    OUTLINED_FUNCTION_5_95();
    swift_beginAccess();
    *(_QWORD *)(v1 + 64) = v11;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return v1;
}

uint64_t sub_1C02A5AF4()
{
  return sub_1C02A5724();
}

uint64_t sub_1C02A5B14(__int128 *a1)
{
  return sub_1C02A4F30(a1);
}

uint64_t sub_1C02A5B34()
{
  __int128 v1[4];

  sub_1C0304B04();
  sub_1C02A4F30(v1);
  return sub_1C0304B40();
}

BOOL sub_1C02A5B70(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.== infix(_:_:)(*a1, *a2);
}

BOOL sub_1C02A5B90(_QWORD **a1, _QWORD **a2)
{
  return static DateTime.< infix(_:_:)(*a1, *a2);
}

BOOL sub_1C02A5BB0(_QWORD **a1, _QWORD **a2)
{
  return static DateTime.<= infix(_:_:)(*a1, *a2);
}

BOOL sub_1C02A5BD0(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.>= infix(_:_:)(*a1, *a2);
}

BOOL sub_1C02A5BF0(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.> infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C02A5C10@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = DateTime.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1C02A5C38(_QWORD *a1)
{
  return sub_1C02A549C(a1);
}

unint64_t sub_1C02A5C58()
{
  unint64_t result;

  result = qword_1EF5C2E38;
  if (!qword_1EF5C2E38)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0323D8C, &type metadata for DateTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C2E38);
  }
  return result;
}

unint64_t sub_1C02A5C94()
{
  unint64_t result;

  result = qword_1EF5C2E50;
  if (!qword_1EF5C2E50)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.DefinedDateTime, &type metadata for DateTime.DefinedDateTime);
    atomic_store(result, (unint64_t *)&qword_1EF5C2E50);
  }
  return result;
}

unint64_t sub_1C02A5CD0()
{
  unint64_t result;

  result = qword_1EF5C2E60;
  if (!qword_1EF5C2E60)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.TemporalIntent, &type metadata for DateTime.TemporalIntent);
    atomic_store(result, (unint64_t *)&qword_1EF5C2E60);
  }
  return result;
}

unint64_t sub_1C02A5D0C()
{
  unint64_t result;

  result = qword_1EF5C2E68;
  if (!qword_1EF5C2E68)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.UserDefinedProperties, &type metadata for DateTime.UserDefinedProperties);
    atomic_store(result, (unint64_t *)&qword_1EF5C2E68);
  }
  return result;
}

unint64_t sub_1C02A5D48()
{
  unint64_t result;

  result = qword_1EF5C2E88;
  if (!qword_1EF5C2E88)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.DefinedDateTime, &type metadata for DateTime.DefinedDateTime);
    atomic_store(result, (unint64_t *)&qword_1EF5C2E88);
  }
  return result;
}

unint64_t sub_1C02A5D84()
{
  unint64_t result;

  result = qword_1EF5C2E98;
  if (!qword_1EF5C2E98)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.TemporalIntent, &type metadata for DateTime.TemporalIntent);
    atomic_store(result, (unint64_t *)&qword_1EF5C2E98);
  }
  return result;
}

unint64_t sub_1C02A5DC0()
{
  unint64_t result;

  result = qword_1EF5C2EA0;
  if (!qword_1EF5C2EA0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.UserDefinedProperties, &type metadata for DateTime.UserDefinedProperties);
    atomic_store(result, (unint64_t *)&qword_1EF5C2EA0);
  }
  return result;
}

void sub_1C02A5DFC(uint64_t a1, uint64_t a2)
{
  sub_1C00C43F4(&qword_1EF5C2EA8, a2, (uint64_t (*)(uint64_t))type metadata accessor for DateTime, (uint64_t)&protocol conformance descriptor for DateTime);
}

void sub_1C02A5E28(_QWORD *a1@<X8>)
{
  sub_1C02A4A74(a1);
}

uint64_t method lookup function for DateTime()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DateTime.userDefinedProperties.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DateTime.dateComponents.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(withDate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(withDate:time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(withDate:time:occurringIn:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(withDefinedValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(withTime:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(withDate:time:definedValue:recurrencePattern:temporalIntent:occurringIn:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(withStartHour:startMinute:startSecond:startMeridiem:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(withDate:occurringIn:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(occurringIn:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of DateTime.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DateTime.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DateTime.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of DateTime.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of DateTime.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t storeEnumTagSinglePayload for DateTime.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1C02A5F64 + 4 * byte_1C0323B24[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1C02A5F98 + 4 * byte_1C0323B1F[v4]))();
}

uint64_t sub_1C02A5F98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02A5FA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02A5FA8);
  return result;
}

uint64_t sub_1C02A5FB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02A5FBCLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1C02A5FC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02A5FC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DateTime.CodingKeys()
{
  return &type metadata for DateTime.CodingKeys;
}

unint64_t sub_1C02A5FE8()
{
  unint64_t result;

  result = qword_1EF5C3018;
  if (!qword_1EF5C3018)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0323D64, &type metadata for DateTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3018);
  }
  return result;
}

unint64_t sub_1C02A6028()
{
  unint64_t result;

  result = qword_1EF5C3020;
  if (!qword_1EF5C3020)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0323CD4, &type metadata for DateTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3020);
  }
  return result;
}

unint64_t sub_1C02A6068()
{
  unint64_t result;

  result = qword_1EF5C3028;
  if (!qword_1EF5C3028)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0323CFC, &type metadata for DateTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3028);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_134()
{
  return sub_1C03048A0();
}

uint64_t OUTLINED_FUNCTION_2_127()
{
  return sub_1C0304954();
}

uint64_t OUTLINED_FUNCTION_5_95()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_6_99()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 32) = 1;
  *(_QWORD *)(v0 + 40) = 0;
  *(_BYTE *)(v0 + 48) = 4;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 64) = 0;
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_76(uint64_t result)
{
  *(_BYTE *)(result + 32) = 1;
  *(_QWORD *)(result + 40) = 0;
  *(_BYTE *)(result + 48) = 4;
  *(_QWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_14_67()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 48) = 4;
  return v0;
}

uint64_t OUTLINED_FUNCTION_21_47()
{
  return type metadata accessor for DateTime.Time();
}

uint64_t OUTLINED_FUNCTION_22_52()
{
  return type metadata accessor for DateTime.DateTimeRange();
}

uint64_t OUTLINED_FUNCTION_34_39()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1C02A6178@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  char v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5C3030);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C0302E48();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v15 - v10;
  sub_1C0302C2C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    result = sub_1C02A6428((uint64_t)v4);
    v13 = 13;
  }
  else
  {
    v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v14(v11, v4, v5);
    v14(v9, v11, v5);
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
    if ((_DWORD)result == *MEMORY[0x1E0DA13F8])
    {
      v13 = 9;
    }
    else if ((_DWORD)result == *MEMORY[0x1E0DA13E8])
    {
      v13 = 3;
    }
    else if ((_DWORD)result == *MEMORY[0x1E0DA1420])
    {
      v13 = 12;
    }
    else
    {
      if ((_DWORD)result == *MEMORY[0x1E0DA1448])
      {
        *a1 = 0;
        return result;
      }
      if ((_DWORD)result == *MEMORY[0x1E0DA1440])
      {
        v13 = 10;
      }
      else if ((_DWORD)result == *MEMORY[0x1E0DA1400])
      {
        v13 = 8;
      }
      else if ((_DWORD)result == *MEMORY[0x1E0DA1438])
      {
        v13 = 6;
      }
      else if ((_DWORD)result == *MEMORY[0x1E0DA1408])
      {
        v13 = 1;
      }
      else if ((_DWORD)result == *MEMORY[0x1E0DA1410])
      {
        v13 = 4;
      }
      else if ((_DWORD)result == *MEMORY[0x1E0DA13F0])
      {
        v13 = 5;
      }
      else if ((_DWORD)result == *MEMORY[0x1E0DA1428])
      {
        v13 = 7;
      }
      else if ((_DWORD)result == *MEMORY[0x1E0DA1430])
      {
        v13 = 2;
      }
      else
      {
        if ((_DWORD)result != *MEMORY[0x1E0DA1418])
        {
          *a1 = 13;
          return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
        }
        v13 = 11;
      }
    }
  }
  *a1 = v13;
  return result;
}

uint64_t sub_1C02A6428(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5C3030);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C02A6468(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1C00B2040();
    v3 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
        sub_1C00B2040();
      v4 += 2;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

id sub_1C02A655C(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  if (a2)
  {
    v2 = (void *)sub_1C0303E8C();
    OUTLINED_FUNCTION_29();
  }
  else
  {
    v2 = 0;
  }
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_emojiLocaleDataWithLocaleIdentifier_, v2);

  return v3;
}

uint64_t sub_1C02A65C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _BYTE v32[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727A20);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v32[-v7];
  v9 = type metadata accessor for ContactResolverCache();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = &v32[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = &v32[-v14];
  MEMORY[0x1E0C80A78](v13);
  v17 = &v32[-v16];
  sub_1C02A9D0C(v1, (uint64_t)v8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    sub_1C02A9D54((uint64_t)v8);
    if (qword_1ED7267A0 != -1)
      swift_once();
    swift_retain();
    sub_1C03043A8();
    swift_release();
    if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v9) == 1)
    {
      sub_1C02A9D54((uint64_t)v6);
      if (qword_1ED727970 != -1)
        swift_once();
      v18 = sub_1C0303B98();
      __swift_project_value_buffer(v18, (uint64_t)&unk_1ED7295C8);
      v19 = sub_1C0303B80();
      v20 = sub_1C03042DC();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_1C0039000, v19, v20, "creating and using shared cache", v21, 2u);
        MEMORY[0x1C3B98378](v21, -1, -1);
      }

      sub_1C02C49A0();
      MEMORY[0x1E0C80A78](v22);
      *(_QWORD *)&v32[-16] = v12;
      swift_retain();
      sub_1C0042E10(sub_1C02A9D94, &v32[-32]);
      swift_release();
      v17 = v12;
    }
    else
    {
      sub_1C02A9D9C((uint64_t)v6, (uint64_t)v15);
      if (qword_1ED727970 != -1)
        swift_once();
      v27 = sub_1C0303B98();
      __swift_project_value_buffer(v27, (uint64_t)&unk_1ED7295C8);
      v28 = sub_1C0303B80();
      v29 = sub_1C03042DC();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v30 = 0;
        _os_log_impl(&dword_1C0039000, v28, v29, "using shared cache", v30, 2u);
        MEMORY[0x1C3B98378](v30, -1, -1);
      }

      v17 = v15;
    }
  }
  else
  {
    sub_1C02A9D9C((uint64_t)v8, (uint64_t)v17);
    if (qword_1ED727970 != -1)
      swift_once();
    v23 = sub_1C0303B98();
    __swift_project_value_buffer(v23, (uint64_t)&unk_1ED7295C8);
    v24 = sub_1C0303B80();
    v25 = sub_1C03042E8();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_1C0039000, v24, v25, "using overridden cache", v26, 2u);
      MEMORY[0x1C3B98378](v26, -1, -1);
    }

  }
  return sub_1C02A9D9C((uint64_t)v17, a1);
}

uint64_t sub_1C02A6A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1C02A9D54(a1);
  sub_1C02A9DE0(a2, a1, (void (*)(_QWORD))type metadata accessor for ContactResolverCache);
  v4 = type metadata accessor for ContactResolverCache();
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v4);
}

uint64_t ContactGroupResolver.findGroups(query:config:)(unint64_t *a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5[2];

  v1 = a1[1];
  v5[0] = *a1;
  v5[1] = v1;
  type metadata accessor for ContactGroupResolverConfig(0);
  v2 = OUTLINED_FUNCTION_10_77();
  sub_1C01AACEC(v2);
  v3 = OUTLINED_FUNCTION_8_75(v5);
  OUTLINED_FUNCTION_29();
  return v3;
}

uint64_t type metadata accessor for ContactGroupResolverConfig(uint64_t a1)
{
  return sub_1C003CD30(a1, qword_1EF5C3148);
}

uint64_t sub_1C02A6ACC(unint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v18 = a3;
  v16 = a2;
  v19 = sub_1C0303B74();
  v4 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[1];
  v15 = *a1;
  if (qword_1ED728440 != -1)
    swift_once();
  v8 = (id)qword_1ED729668;
  sub_1C0303B68();
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C0305B60;
  v10 = sub_1C03046E4();
  v12 = v11;
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v9 + 32) = v10;
  *(_QWORD *)(v9 + 40) = v12;
  sub_1C0303B50();
  swift_bridgeObjectRelease();
  sub_1C02A6D70(v15, v7, v17, v16, v18, &v20);
  sub_1C03043D8();
  sub_1C0303B5C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);

  return v20;
}

uint64_t ContactGroupResolver.findGroupsAsync(query:config:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[2] = a2;
  v3[3] = v2;
  v4 = a1[1];
  v3[4] = *a1;
  v3[5] = v4;
  return swift_task_switch();
}

uint64_t sub_1C02A6D0C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5[2];

  v1 = *(_QWORD *)(v0 + 40);
  v5[0] = *(_QWORD *)(v0 + 32);
  v5[1] = v1;
  type metadata accessor for ContactGroupResolverConfig(0);
  v2 = OUTLINED_FUNCTION_10_77();
  sub_1C01AACEC(v2);
  v3 = OUTLINED_FUNCTION_8_75(v5);
  OUTLINED_FUNCTION_29();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

void sub_1C02A6D70(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, char *, void *);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t Expander;
  uint64_t v98;
  _QWORD *v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;

  v7 = v6;
  v107 = a5;
  v111 = a2;
  v112 = a4;
  v110 = a1;
  v99 = a6;
  Expander = type metadata accessor for EmojiQueryExpander();
  MEMORY[0x1E0C80A78](Expander);
  v106 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_1C0301DB0();
  v105 = *(_QWORD *)(v101 - 8);
  v10 = MEMORY[0x1E0C80A78](v101);
  v104 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v108 = (char *)&v93 - v12;
  v109 = type metadata accessor for SiriVocabularySearcher(0);
  MEMORY[0x1E0C80A78](v109);
  v102 = (uint64_t)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for StringTokenizer();
  v15 = MEMORY[0x1E0C80A78](v14);
  v103 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v93 - v17;
  v19 = type metadata accessor for ContactResolverCache();
  v20 = MEMORY[0x1E0C80A78](v19);
  v96 = (uint64_t)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v93 - v22;
  sub_1C02A65C4((uint64_t)&v93 - v22);
  sub_1C02A9DE0((uint64_t)&v23[*(int *)(v19 + 60)], (uint64_t)v18, (void (*)(_QWORD))type metadata accessor for StringTokenizer);
  sub_1C0045840((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for ContactResolverCache);
  v24 = v112;
  v25 = sub_1C0212B30();
  v100 = (uint64_t *)StringTokenizer.tokenize(_:useMorphun:removeEmojis:)(v110, v111, (v25 & 1) == 0, 1);
  sub_1C0045840((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
  v26 = v105;
  v27 = v108;
  v28 = v24;
  v29 = (void *)v101;
  v94 = *(void (**)(char *, uint64_t, uint64_t))(v105 + 16);
  v94(v108, v28, v101);
  v98 = a3;
  sub_1C02A65C4((uint64_t)v23);
  v95 = v19;
  v30 = *(id *)&v23[*(int *)(v19 + 48)];
  v31 = v29;
  sub_1C0045840((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for ContactResolverCache);
  v32 = v102;
  (*(void (**)(uint64_t, char *, void *))(v26 + 32))(v102, v27, v29);
  *(_QWORD *)(v32 + *(int *)(v109 + 20)) = v30;
  v33 = v100;
  sub_1C01393A0((uint64_t)v100, v107);
  v35 = v34;
  swift_bridgeObjectRelease();
  if ((unint64_t)v35 >> 62)
    goto LABEL_57;
  v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v37 = (uint64_t)v106;
    v38 = (uint64_t)v103;
    v39 = v104;
    if (v36)
      break;
    swift_bridgeObjectRelease();
    v55 = (void (*)(uint64_t, char *, void *))v94;
    v94(v39, v112, (uint64_t)v31);
    v56 = v96;
    sub_1C02A65C4(v96);
    sub_1C02A9DE0(v56 + *(int *)(v95 + 60), v38, (void (*)(_QWORD))type metadata accessor for StringTokenizer);
    sub_1C0045840(v56, (uint64_t (*)(_QWORD))type metadata accessor for ContactResolverCache);
    v55(v37, v39, v31);
    v57 = Expander;
    sub_1C02A9DE0(v38, v37 + *(int *)(Expander + 20), (void (*)(_QWORD))type metadata accessor for StringTokenizer);
    sub_1C02A9C74();
    v58 = sub_1C0301D74();
    v60 = sub_1C02A655C(v58, v59);
    if (!v60)
    {
      __break(1u);
LABEL_61:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      __break(1u);
      return;
    }
    v61 = v60;
    sub_1C0045840(v38, (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
    (*(void (**)(char *, void *))(v105 + 8))(v39, v31);
    *(_QWORD *)(v37 + *(int *)(v57 + 24)) = v61;
    v62 = sub_1C0212B30();
    v63 = StringTokenizer.tokenize(_:useMorphun:removeEmojis:)(v110, v111, (v62 & 1) == 0, 1);
    if (*(_QWORD *)(v63 + 16))
    {
      v64 = sub_1C0183BD8(v63);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v33 = (uint64_t *)sub_1C02A6468(v64);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v33 = (uint64_t *)MEMORY[0x1E0DEE9D8];
    }
    if (qword_1ED727970 != -1)
      goto LABEL_59;
LABEL_22:
    v65 = sub_1C0303B98();
    __swift_project_value_buffer(v65, (uint64_t)&unk_1ED7295C8);
    swift_bridgeObjectRetain();
    v66 = sub_1C0303B80();
    v67 = sub_1C03042E8();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v68 = 134217984;
      v113 = v33[2];
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0039000, v66, v67, "queries after EmojiQueryExpander: %ld", v68, 0xCu);
      v69 = v68;
      v37 = (uint64_t)v106;
      MEMORY[0x1C3B98378](v69, -1, -1);

    }
    else
    {

      v70 = swift_bridgeObjectRelease();
    }
    MEMORY[0x1E0C80A78](v70);
    v71 = v112;
    *(&v93 - 2) = v98;
    *(&v93 - 1) = v71;
    v72 = sub_1C00E54F0((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1C02A9CB0, (uint64_t)(&v93 - 4), (uint64_t)v33);
    v73 = swift_bridgeObjectRelease();
    v33 = &v93;
    MEMORY[0x1E0C80A78](v73);
    v74 = v107;
    *(&v93 - 2) = v102;
    *(&v93 - 1) = v74;
    sub_1C00E560C((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1C02A9CC8, (uint64_t)(&v93 - 4), v72);
    v76 = v75;
    swift_bridgeObjectRelease();
    v104 = (char *)(v76 + 32);
    v105 = v76;
    swift_bridgeObjectRetain();
    v35 = 0;
    v107 = 0;
    v112 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
LABEL_48:
      v91 = *(_QWORD *)(v105 + 16);
      if (v107 == v91)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C0045840(v37, (uint64_t (*)(_QWORD))type metadata accessor for EmojiQueryExpander);
        sub_1C0045840(v102, type metadata accessor for SiriVocabularySearcher);
        goto LABEL_53;
      }
      if (v107 >= v91)
        break;
      v33 = (uint64_t *)(v107 + 1);
      v92 = *(_QWORD *)&v104[8 * v107];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v35 = v92;
      v37 = (uint64_t)v106;
      v107 = (unint64_t)v33;
      if (v35)
      {
        v77 = 0;
        v33 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFF8);
        if (v35 >= 0)
          v78 = v35 & 0xFFFFFFFFFFFFFF8;
        else
          v78 = v35;
        v103 = (char *)v78;
        v109 = v35;
        v110 = v35 & 0xC000000000000001;
        v108 = (char *)(v35 & 0xFFFFFFFFFFFFFF8);
        while (1)
        {
          if ((unint64_t)v35 >> 62)
          {
            swift_bridgeObjectRetain();
            v31 = (void *)sub_1C03047F8();
            swift_bridgeObjectRelease();
          }
          else
          {
            v31 = (void *)v33[2];
          }
          if ((void *)v77 == v31)
          {
            v37 = (uint64_t)v106;
            goto LABEL_48;
          }
          if (v110)
          {
            v79 = (id)MEMORY[0x1C3B975EC](v77, v35);
          }
          else
          {
            if (v77 >= v33[2])
              goto LABEL_55;
            v79 = *(id *)(v35 + 8 * v77 + 32);
          }
          v31 = v79;
          if (__OFADD__(v77, 1))
            break;
          v119 = v79;
          sub_1C02A78B4(&v119, &v113);
          if (v7)
            goto LABEL_61;
          v7 = 0;

          v80 = v114;
          if (v114)
          {
            v111 = 0;
            v81 = v113;
            v83 = v115;
            v82 = v116;
            v85 = v117;
            v84 = v118;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C004FB80();
              v112 = v89;
            }
            v86 = *(_QWORD *)(v112 + 16);
            if (v86 >= *(_QWORD *)(v112 + 24) >> 1)
            {
              sub_1C004FB80();
              v112 = v90;
            }
            v87 = v112;
            *(_QWORD *)(v112 + 16) = v86 + 1;
            v88 = (_QWORD *)(v87 + 48 * v86);
            v88[4] = v81;
            v88[5] = v80;
            v88[6] = v83;
            v88[7] = v82;
            v88[8] = v85;
            v88[9] = v84;
            v7 = v111;
            v33 = (uint64_t *)v108;
            v35 = v109;
          }
          ++v77;
        }
        __break(1u);
LABEL_55:
        __break(1u);
        break;
      }
    }
    __break(1u);
LABEL_57:
    swift_bridgeObjectRetain();
    v36 = sub_1C03047F8();
    swift_bridgeObjectRelease();
  }
  if (v36 < 1)
  {
    __break(1u);
LABEL_59:
    swift_once();
    goto LABEL_22;
  }
  v110 = v35 & 0xC000000000000001;
  swift_bridgeObjectRetain();
  v40 = 0;
  v112 = MEMORY[0x1E0DEE9D8];
  v108 = (char *)v36;
  v109 = v35;
  do
  {
    if (v110)
      v41 = (id)MEMORY[0x1C3B975EC](v40, v35);
    else
      v41 = *(id *)(v35 + 8 * v40 + 32);
    v42 = v41;
    v119 = v41;
    v43 = v7;
    sub_1C02A78B4(&v119, &v113);

    v44 = v114;
    if (v114)
    {
      v45 = v113;
      v47 = v115;
      v46 = v116;
      v48 = v117;
      v111 = v118;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C004FB80();
        v112 = v53;
      }
      v49 = *(_QWORD *)(v112 + 16);
      if (v49 >= *(_QWORD *)(v112 + 24) >> 1)
      {
        sub_1C004FB80();
        v112 = v54;
      }
      v50 = v112;
      *(_QWORD *)(v112 + 16) = v49 + 1;
      v51 = (_QWORD *)(v50 + 48 * v49);
      v51[4] = v45;
      v51[5] = v44;
      v51[6] = v47;
      v51[7] = v46;
      v52 = v111;
      v51[8] = v48;
      v51[9] = v52;
      v7 = v43;
      v36 = (uint64_t)v108;
      v35 = v109;
    }
    ++v40;
  }
  while (v36 != v40);
  swift_bridgeObjectRelease();
  sub_1C0045840(v102, type metadata accessor for SiriVocabularySearcher);
LABEL_53:
  swift_bridgeObjectRelease();
  *v99 = v112;
}

uint64_t sub_1C02A7774@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  _QWORD v15[2];

  v4 = type metadata accessor for StringTokenizer();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContactResolverCache();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v10 = a1[1];
  sub_1C02A65C4((uint64_t)v9);
  sub_1C02A9DE0((uint64_t)&v9[*(int *)(v7 + 60)], (uint64_t)v6, (void (*)(_QWORD))type metadata accessor for StringTokenizer);
  sub_1C0045840((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ContactResolverCache);
  v12 = sub_1C0212B30();
  v13 = StringTokenizer.tokenize(_:useMorphun:removeEmojis:)(v11, v10, (v12 & 1) == 0, 1);
  result = sub_1C0045840((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
  *a2 = v13;
  return result;
}

void __swiftcall ContactGroup.init(id:name:bundleId:)(SiriInference::ContactGroup *__return_ptr retstr, Swift::String id, Swift::String name, Swift::String bundleId)
{
  retstr->id = id;
  retstr->name = name;
  retstr->bundleId = bundleId;
}

void sub_1C02A78B4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = *a1;
  v4 = objc_msgSend(*a1, sel_vocabularyItem);
  objc_opt_self();
  v5 = (void *)swift_dynamicCastObjCClass();
  if (v5)
  {
    v6 = v5;
    v7 = sub_1C013ABE0(v5);
    if (v8)
      v9 = v7;
    else
      v9 = 0;
    v27 = v9;
    if (v8)
      v10 = v8;
    else
      v10 = 0xE000000000000000;
    v11 = objc_msgSend(v6, sel_term);
    v12 = sub_1C0303EB0();
    v14 = v13;

    v15 = objc_msgSend(v3, sel_originAppId);
    v16 = sub_1C0303EB0();
    v18 = v17;

    swift_unknownObjectRelease();
    *a2 = v27;
    a2[1] = v10;
    a2[2] = v12;
    a2[3] = v14;
    a2[4] = v16;
    a2[5] = v18;
  }
  else
  {
    swift_unknownObjectRelease();
    if (qword_1ED727970 != -1)
      swift_once();
    v19 = sub_1C0303B98();
    __swift_project_value_buffer(v19, (uint64_t)&unk_1ED7295C8);
    v20 = v3;
    v21 = sub_1C0303B80();
    v22 = sub_1C03042F4();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      *(_DWORD *)v23 = 136315138;
      v24 = objc_msgSend(v20, sel_vocabularyItem);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5BC5A8);
      v25 = sub_1C0303EF8();
      sub_1C003E6D8(v25, v26, &v28);
      sub_1C03044B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0039000, v21, v22, "wanted CKVCustomTerm, got %s", v23, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }

    *((_OWORD *)a2 + 1) = 0u;
    *((_OWORD *)a2 + 2) = 0u;
    *(_OWORD *)a2 = 0u;
  }
}

uint64_t ContactGroupResolverConfig.locale.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_14_4();
  OUTLINED_FUNCTION_134();
  v0 = OUTLINED_FUNCTION_189();
  return OUTLINED_FUNCTION_136(v0, v1, v2, v3);
}

uint64_t ContactGroupResolverConfig.locale.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_14_4();
  OUTLINED_FUNCTION_134();
  return OUTLINED_FUNCTION_136(v1, a1, v4, *(uint64_t (**)(void))(v3 + 40));
}

uint64_t (*ContactGroupResolverConfig.locale.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ContactGroupResolverConfig.bundleIds.getter()
{
  type metadata accessor for ContactGroupResolverConfig(0);
  return swift_bridgeObjectRetain();
}

void ContactGroupResolverConfig.bundleIds.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for ContactGroupResolverConfig(0) + 20);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*ContactGroupResolverConfig.bundleIds.modify())(_QWORD)
{
  type metadata accessor for ContactGroupResolverConfig(0);
  return nullsub_1;
}

void ContactGroupResolverConfig.init(locale:bundleIds:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;

  OUTLINED_FUNCTION_14_4();
  OUTLINED_FUNCTION_134();
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(a3, a1);
  *(_QWORD *)(a3 + *(int *)(type metadata accessor for ContactGroupResolverConfig(0) + 20)) = a2;
  OUTLINED_FUNCTION_37_0();
}

void ContactGroupQuery.name.getter()
{
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_189();
  OUTLINED_FUNCTION_9();
}

void ContactGroupQuery.name.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_137_0();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*ContactGroupQuery.name.modify())(_QWORD)
{
  return nullsub_1;
}

SiriInference::ContactGroupQuery __swiftcall ContactGroupQuery.init(name:)(SiriInference::ContactGroupQuery name)
{
  SiriInference::ContactGroupQuery *v1;

  *v1 = name;
  return name;
}

void ContactGroup.id.getter()
{
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_189();
  OUTLINED_FUNCTION_9();
}

void ContactGroup.id.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_137_0();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*ContactGroup.id.modify())(_QWORD)
{
  return nullsub_1;
}

void ContactGroup.name.getter()
{
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_189();
  OUTLINED_FUNCTION_9();
}

void ContactGroup.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*ContactGroup.name.modify())(_QWORD)
{
  return nullsub_1;
}

void ContactGroup.bundleId.getter()
{
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_189();
  OUTLINED_FUNCTION_9();
}

void ContactGroup.bundleId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*ContactGroup.bundleId.modify())(_QWORD)
{
  return nullsub_1;
}

_QWORD *initializeWithCopy for ContactGroupResolver(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  void *v71;

  v4 = (int *)type metadata accessor for ContactResolverCache();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v4))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727A20);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = v4[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1C030367C();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_retain();
    swift_retain();
    v11(v8, v9, v10);
    v12 = v4[7];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v13[8] = v14[8];
    v15 = v4[8];
    v16 = *(_OWORD *)((char *)a2 + v15 + 24);
    *(_OWORD *)((char *)a1 + v15 + 24) = v16;
    (**(void (***)(void))(v16 - 8))();
    v17 = v4[9];
    v18 = *(_OWORD *)((char *)a2 + v17 + 24);
    *(_OWORD *)((char *)a1 + v17 + 24) = v18;
    (**(void (***)(void))(v18 - 8))();
    v19 = v4[10];
    v20 = *(_OWORD *)((char *)a2 + v19 + 24);
    *(_OWORD *)((char *)a1 + v19 + 24) = v20;
    (**(void (***)(void))(v20 - 8))();
    v21 = v4[11];
    v22 = *(void **)((char *)a2 + v21);
    *(_QWORD *)((char *)a1 + v21) = v22;
    v23 = v4[12];
    v24 = *(void **)((char *)a2 + v23);
    *(_QWORD *)((char *)a1 + v23) = v24;
    *(_QWORD *)((char *)a1 + v4[13]) = *(_QWORD *)((char *)a2 + v4[13]);
    v25 = v4[14];
    v26 = (_QWORD *)((char *)a1 + v25);
    v27 = (_QWORD *)((char *)a2 + v25);
    v28 = type metadata accessor for MLContactRecommender();
    v29 = v22;
    v30 = v24;
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3050);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      *(_BYTE *)v26 = *(_BYTE *)v27;
      v26[1] = v27[1];
      v32 = *(int *)(v28 + 24);
      v33 = (char *)v26 + v32;
      v34 = (char *)v27 + v32;
      v35 = sub_1C0301DB0();
      v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
      swift_retain();
      v36(v33, v34, v35);
      __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v28);
    }
    v37 = v4[15];
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    *(_QWORD *)((char *)a1 + v37) = *(_QWORD *)((char *)a2 + v37);
    v40 = *(int *)(type metadata accessor for StringTokenizer() + 20);
    v41 = &v38[v40];
    v42 = &v39[v40];
    v43 = sub_1C0301DB0();
    v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
    swift_retain();
    v44(v41, v42, v43);
    v45 = v4[16];
    v46 = (_QWORD *)((char *)a1 + v45);
    v47 = (_QWORD *)((char *)a2 + v45);
    if (*v47)
    {
      v48 = v47[1];
      *v46 = *v47;
      v46[1] = v48;
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)v46 = *(_OWORD *)v47;
    }
    *(_QWORD *)((char *)a1 + v4[17]) = *(_QWORD *)((char *)a2 + v4[17]);
    v49 = v4[18];
    v50 = (char *)a1 + v49;
    v51 = (char *)a2 + v49;
    swift_retain();
    v44(v50, v51, v43);
    *(_QWORD *)((char *)a1 + v4[19]) = *(_QWORD *)((char *)a2 + v4[19]);
    *(_QWORD *)((char *)a1 + v4[20]) = *(_QWORD *)((char *)a2 + v4[20]);
    *(_QWORD *)((char *)a1 + v4[21]) = *(_QWORD *)((char *)a2 + v4[21]);
    *(_QWORD *)((char *)a1 + v4[22]) = *(_QWORD *)((char *)a2 + v4[22]);
    *(_QWORD *)((char *)a1 + v4[23]) = *(_QWORD *)((char *)a2 + v4[23]);
    v52 = v4[24];
    v71 = *(void **)((char *)a2 + v52);
    *(_QWORD *)((char *)a1 + v52) = v71;
    v53 = v4[25];
    v54 = (char *)a1 + v53;
    v55 = (char *)a2 + v53;
    v56 = *(_QWORD *)((char *)a2 + v53 + 24);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v57 = v71;
    if (v56)
    {
      v58 = *((_QWORD *)v55 + 4);
      *((_QWORD *)v54 + 3) = v56;
      *((_QWORD *)v54 + 4) = v58;
      (**(void (***)(char *, char *, uint64_t))(v56 - 8))(v54, v55, v56);
    }
    else
    {
      v59 = *((_OWORD *)v55 + 1);
      *(_OWORD *)v54 = *(_OWORD *)v55;
      *((_OWORD *)v54 + 1) = v59;
      *((_QWORD *)v54 + 4) = *((_QWORD *)v55 + 4);
    }
    *((_BYTE *)a1 + v4[26]) = *((_BYTE *)a2 + v4[26]);
    v60 = v4[27];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    *v61 = *v62;
    v63 = *((_QWORD *)v62 + 2);
    *((_QWORD *)v61 + 1) = *((_QWORD *)v62 + 1);
    *((_QWORD *)v61 + 2) = v63;
    *(_OWORD *)(v61 + 24) = *(_OWORD *)(v62 + 24);
    *(_OWORD *)(v61 + 40) = *(_OWORD *)(v62 + 40);
    v61[56] = v62[56];
    *(_OWORD *)((char *)a1 + v4[28]) = *(_OWORD *)((char *)a2 + v4[28]);
    *(_WORD *)((char *)a1 + v4[29]) = *(_WORD *)((char *)a2 + v4[29]);
    v64 = v4[30];
    v65 = (char *)a1 + v64;
    v66 = (char *)a2 + v64;
    v67 = *((_QWORD *)v66 + 3);
    swift_bridgeObjectRetain();
    if (v67)
    {
      v68 = *((_QWORD *)v66 + 4);
      *((_QWORD *)v65 + 3) = v67;
      *((_QWORD *)v65 + 4) = v68;
      (**(void (***)(char *, char *, uint64_t))(v67 - 8))(v65, v66, v67);
    }
    else
    {
      v69 = *((_OWORD *)v66 + 1);
      *(_OWORD *)v65 = *(_OWORD *)v66;
      *((_OWORD *)v65 + 1) = v69;
      *((_QWORD *)v65 + 4) = *((_QWORD *)v66 + 4);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v4);
  }
  return a1;
}

char *assignWithCopy for ContactGroupResolver(char *a1, char *a2)
{
  int *v4;
  int EnumTagSinglePayload;
  int v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  char v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  int *v83;
  void *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  id v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  void (*v110)(char *, char *, uint64_t);
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  void *v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  __int128 v138;
  __int128 v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  int *v144;

  v4 = (int *)type metadata accessor for ContactResolverCache();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, (uint64_t)v4);
  v6 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v4);
  if (!EnumTagSinglePayload)
  {
    if (v6)
    {
      sub_1C0045840((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ContactResolverCache);
      goto LABEL_7;
    }
    *(_QWORD *)a1 = *(_QWORD *)a2;
    swift_retain();
    swift_release();
    *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
    swift_retain();
    swift_release();
    v37 = v4[6];
    v38 = &a1[v37];
    v39 = &a2[v37];
    v40 = sub_1C030367C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 24))(v38, v39, v40);
    v41 = v4[7];
    v42 = &a1[v41];
    v43 = &a2[v41];
    *v42 = *v43;
    v42[1] = v43[1];
    v42[2] = v43[2];
    v42[3] = v43[3];
    v42[4] = v43[4];
    v42[5] = v43[5];
    v42[6] = v43[6];
    v42[7] = v43[7];
    v42[8] = v43[8];
    __swift_assign_boxed_opaque_existential_1((uint64_t *)&a1[v4[8]], (uint64_t *)&a2[v4[8]]);
    __swift_assign_boxed_opaque_existential_1((uint64_t *)&a1[v4[9]], (uint64_t *)&a2[v4[9]]);
    __swift_assign_boxed_opaque_existential_1((uint64_t *)&a1[v4[10]], (uint64_t *)&a2[v4[10]]);
    v44 = v4[11];
    v45 = *(void **)&a1[v44];
    v46 = *(void **)&a2[v44];
    *(_QWORD *)&a1[v44] = v46;
    v47 = v46;

    v48 = v4[12];
    v49 = *(void **)&a2[v48];
    v50 = *(void **)&a1[v48];
    *(_QWORD *)&a1[v48] = v49;
    v51 = v49;

    *(_QWORD *)&a1[v4[13]] = *(_QWORD *)&a2[v4[13]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v52 = v4[14];
    v53 = &a1[v52];
    v54 = &a2[v52];
    v55 = type metadata accessor for MLContactRecommender();
    v56 = __swift_getEnumTagSinglePayload((uint64_t)v53, 1, v55);
    v57 = __swift_getEnumTagSinglePayload((uint64_t)v54, 1, v55);
    if (v56)
    {
      if (!v57)
      {
        *v53 = *v54;
        *((_QWORD *)v53 + 1) = *((_QWORD *)v54 + 1);
        v58 = *(int *)(v55 + 24);
        v59 = &v53[v58];
        v60 = &v54[v58];
        v61 = sub_1C0301DB0();
        v62 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
        swift_retain();
        v62(v59, v60, v61);
        __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v55);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v57)
      {
        *v53 = *v54;
        *((_QWORD *)v53 + 1) = *((_QWORD *)v54 + 1);
        swift_retain();
        swift_release();
        v140 = *(int *)(v55 + 24);
        v141 = &v53[v140];
        v142 = &v54[v140];
        v143 = sub_1C0301DB0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 24))(v141, v142, v143);
LABEL_26:
        v103 = v4[15];
        v104 = &a1[v103];
        v105 = &a2[v103];
        *(_QWORD *)&a1[v103] = *(_QWORD *)&a2[v103];
        swift_retain();
        swift_release();
        v106 = *(int *)(type metadata accessor for StringTokenizer() + 20);
        v107 = &v104[v106];
        v108 = &v105[v106];
        v109 = sub_1C0301DB0();
        v110 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 24);
        v110(v107, v108, v109);
        v111 = v4[16];
        v112 = &a1[v111];
        v113 = &a2[v111];
        v114 = *(_QWORD *)&a2[v111];
        if (*(_QWORD *)&a1[v111])
        {
          if (v114)
          {
            *(_QWORD *)v112 = v114;
            swift_retain();
            swift_release();
            *((_QWORD *)v112 + 1) = *((_QWORD *)v113 + 1);
            swift_retain();
            swift_release();
            goto LABEL_33;
          }
          sub_1C02A8CB8((uint64_t)&a1[v111]);
        }
        else if (v114)
        {
          *(_QWORD *)v112 = v114;
          *((_QWORD *)v112 + 1) = *((_QWORD *)v113 + 1);
          swift_retain();
          swift_retain();
          goto LABEL_33;
        }
        *(_OWORD *)v112 = *(_OWORD *)v113;
LABEL_33:
        *(_QWORD *)&a1[v4[17]] = *(_QWORD *)&a2[v4[17]];
        swift_retain();
        swift_release();
        v110(&a1[v4[18]], &a2[v4[18]], v109);
        *(_QWORD *)&a1[v4[19]] = *(_QWORD *)&a2[v4[19]];
        swift_retain();
        swift_release();
        *(_QWORD *)&a1[v4[20]] = *(_QWORD *)&a2[v4[20]];
        swift_retain();
        swift_release();
        *(_QWORD *)&a1[v4[21]] = *(_QWORD *)&a2[v4[21]];
        swift_retain();
        swift_release();
        *(_QWORD *)&a1[v4[22]] = *(_QWORD *)&a2[v4[22]];
        swift_retain();
        swift_release();
        *(_QWORD *)&a1[v4[23]] = *(_QWORD *)&a2[v4[23]];
        swift_retain();
        swift_release();
        v115 = v4[24];
        v116 = *(void **)&a1[v115];
        v117 = *(void **)&a2[v115];
        *(_QWORD *)&a1[v115] = v117;
        v118 = v117;

        v119 = v4[25];
        v120 = (uint64_t)&a1[v119];
        v121 = (uint64_t *)&a2[v119];
        v122 = *(_QWORD *)&a2[v119 + 24];
        if (*(_QWORD *)&a1[v119 + 24])
        {
          if (v122)
          {
            __swift_assign_boxed_opaque_existential_1((uint64_t *)v120, v121);
            goto LABEL_40;
          }
          __swift_destroy_boxed_opaque_existential_0Tm(v120);
        }
        else if (v122)
        {
          *(_QWORD *)(v120 + 24) = v122;
          *(_QWORD *)(v120 + 32) = v121[4];
          (**(void (***)(uint64_t, char *))(v122 - 8))(v120, (char *)v121);
          goto LABEL_40;
        }
        v123 = *(_OWORD *)v121;
        v124 = *((_OWORD *)v121 + 1);
        *(_QWORD *)(v120 + 32) = v121[4];
        *(_OWORD *)v120 = v123;
        *(_OWORD *)(v120 + 16) = v124;
LABEL_40:
        a1[v4[26]] = a2[v4[26]];
        v125 = v4[27];
        v126 = &a1[v125];
        v127 = &a2[v125];
        *v126 = a2[v125];
        *((_QWORD *)v126 + 1) = *(_QWORD *)&a2[v125 + 8];
        *((_QWORD *)v126 + 2) = *(_QWORD *)&a2[v125 + 16];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((_QWORD *)v126 + 3) = *((_QWORD *)v127 + 3);
        *((_QWORD *)v126 + 4) = *((_QWORD *)v127 + 4);
        *((_QWORD *)v126 + 5) = *((_QWORD *)v127 + 5);
        *((_QWORD *)v126 + 6) = *((_QWORD *)v127 + 6);
        v126[56] = v127[56];
        v128 = v4[28];
        v129 = &a1[v128];
        v130 = &a2[v128];
        *v129 = *v130;
        v129[1] = v130[1];
        v129[2] = v130[2];
        *((_QWORD *)v129 + 1) = *((_QWORD *)v130 + 1);
        v131 = v4[29];
        v132 = &a1[v131];
        v133 = &a2[v131];
        *v132 = *v133;
        v132[1] = v133[1];
        v134 = v4[30];
        v135 = (uint64_t)&a1[v134];
        v136 = &a2[v134];
        v137 = *((_QWORD *)v136 + 3);
        if (*(_QWORD *)&a1[v134 + 24])
        {
          if (v137)
          {
            __swift_assign_boxed_opaque_existential_1((uint64_t *)v135, (uint64_t *)v136);
            return a1;
          }
          __swift_destroy_boxed_opaque_existential_0Tm(v135);
        }
        else if (v137)
        {
          *(_QWORD *)(v135 + 24) = v137;
          *(_QWORD *)(v135 + 32) = *((_QWORD *)v136 + 4);
          (**(void (***)(uint64_t, char *))(v137 - 8))(v135, v136);
          return a1;
        }
        v138 = *(_OWORD *)v136;
        v139 = *((_OWORD *)v136 + 1);
        *(_QWORD *)(v135 + 32) = *((_QWORD *)v136 + 4);
        *(_OWORD *)v135 = v138;
        *(_OWORD *)(v135 + 16) = v139;
        return a1;
      }
      sub_1C0045840((uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for MLContactRecommender);
    }
    v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3050);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    goto LABEL_26;
  }
  if (v6)
  {
LABEL_7:
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727A20);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  v7 = v4[6];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1C030367C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain();
  swift_retain();
  v11(v8, v9, v10);
  v12 = v4[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v14[8];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v15;
  v16 = v4[8];
  v17 = &a1[v16];
  v18 = *(_QWORD *)&a2[v16 + 24];
  *((_QWORD *)v17 + 3) = v18;
  *((_QWORD *)v17 + 4) = *(_QWORD *)&a2[v16 + 32];
  (**(void (***)(void))(v18 - 8))();
  v19 = v4[9];
  v20 = &a1[v19];
  v21 = *(_QWORD *)&a2[v19 + 24];
  *((_QWORD *)v20 + 3) = v21;
  *((_QWORD *)v20 + 4) = *(_QWORD *)&a2[v19 + 32];
  (**(void (***)(void))(v21 - 8))();
  v22 = v4[10];
  v23 = &a1[v22];
  v24 = *(_QWORD *)&a2[v22 + 24];
  *((_QWORD *)v23 + 3) = v24;
  *((_QWORD *)v23 + 4) = *(_QWORD *)&a2[v22 + 32];
  (**(void (***)(void))(v24 - 8))();
  v25 = v4[11];
  v26 = *(void **)&a2[v25];
  *(_QWORD *)&a1[v25] = v26;
  v27 = v4[12];
  v28 = *(void **)&a2[v27];
  *(_QWORD *)&a1[v27] = v28;
  *(_QWORD *)&a1[v4[13]] = *(_QWORD *)&a2[v4[13]];
  v29 = v4[14];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = type metadata accessor for MLContactRecommender();
  v33 = v26;
  v34 = v28;
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3050);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    *v30 = *v31;
    *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
    v63 = *(int *)(v32 + 24);
    v64 = &v30[v63];
    v65 = &v31[v63];
    v66 = sub_1C0301DB0();
    v67 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16);
    swift_retain();
    v67(v64, v65, v66);
    __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
  }
  v68 = v4[15];
  v69 = &a1[v68];
  v70 = &a2[v68];
  *(_QWORD *)&a1[v68] = *(_QWORD *)&a2[v68];
  v71 = *(int *)(type metadata accessor for StringTokenizer() + 20);
  v72 = &v69[v71];
  v73 = &v70[v71];
  v74 = sub_1C0301DB0();
  v75 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 16);
  swift_retain();
  v75(v72, v73, v74);
  v76 = v4[16];
  v77 = &a1[v76];
  v78 = &a2[v76];
  if (*(_QWORD *)v78)
  {
    *(_QWORD *)v77 = *(_QWORD *)v78;
    *((_QWORD *)v77 + 1) = *((_QWORD *)v78 + 1);
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)v77 = *(_OWORD *)v78;
  }
  *(_QWORD *)&a1[v4[17]] = *(_QWORD *)&a2[v4[17]];
  v79 = v4[18];
  v80 = &a1[v79];
  v81 = &a2[v79];
  swift_retain();
  v75(v80, v81, v74);
  *(_QWORD *)&a1[v4[19]] = *(_QWORD *)&a2[v4[19]];
  *(_QWORD *)&a1[v4[20]] = *(_QWORD *)&a2[v4[20]];
  *(_QWORD *)&a1[v4[21]] = *(_QWORD *)&a2[v4[21]];
  *(_QWORD *)&a1[v4[22]] = *(_QWORD *)&a2[v4[22]];
  *(_QWORD *)&a1[v4[23]] = *(_QWORD *)&a2[v4[23]];
  v82 = v4[24];
  v83 = v4;
  v84 = *(void **)&a2[v82];
  *(_QWORD *)&a1[v82] = v84;
  v144 = v83;
  v85 = v83[25];
  v86 = &a1[v85];
  v87 = &a2[v85];
  v88 = *(_QWORD *)&a2[v85 + 24];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v89 = v84;
  if (v88)
  {
    *((_QWORD *)v86 + 3) = v88;
    *((_QWORD *)v86 + 4) = *((_QWORD *)v87 + 4);
    (**(void (***)(char *, char *, uint64_t))(v88 - 8))(v86, v87, v88);
  }
  else
  {
    v90 = *(_OWORD *)v87;
    v91 = *((_OWORD *)v87 + 1);
    *((_QWORD *)v86 + 4) = *((_QWORD *)v87 + 4);
    *(_OWORD *)v86 = v90;
    *((_OWORD *)v86 + 1) = v91;
  }
  a1[v144[26]] = a2[v144[26]];
  v92 = v144[27];
  v93 = &a1[v92];
  v94 = &a2[v92];
  *v93 = *v94;
  *((_QWORD *)v93 + 1) = *((_QWORD *)v94 + 1);
  *((_QWORD *)v93 + 2) = *((_QWORD *)v94 + 2);
  *((_QWORD *)v93 + 3) = *((_QWORD *)v94 + 3);
  *((_QWORD *)v93 + 4) = *((_QWORD *)v94 + 4);
  *((_QWORD *)v93 + 5) = *((_QWORD *)v94 + 5);
  *((_QWORD *)v93 + 6) = *((_QWORD *)v94 + 6);
  v93[56] = v94[56];
  *(_OWORD *)&a1[v144[28]] = *(_OWORD *)&a2[v144[28]];
  *(_WORD *)&a1[v144[29]] = *(_WORD *)&a2[v144[29]];
  v95 = v144[30];
  v96 = &a1[v95];
  v97 = &a2[v95];
  v98 = *((_QWORD *)v97 + 3);
  swift_bridgeObjectRetain();
  if (v98)
  {
    *((_QWORD *)v96 + 3) = v98;
    *((_QWORD *)v96 + 4) = *((_QWORD *)v97 + 4);
    (**(void (***)(char *, char *, uint64_t))(v98 - 8))(v96, v97, v98);
  }
  else
  {
    v99 = *(_OWORD *)v97;
    v100 = *((_OWORD *)v97 + 1);
    *((_QWORD *)v96 + 4) = *((_QWORD *)v97 + 4);
    *(_OWORD *)v96 = v99;
    *((_OWORD *)v96 + 1) = v100;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v144);
  return a1;
}

uint64_t sub_1C02A8CB8(uint64_t a1)
{
  destroy for Transliterator();
  return a1;
}

_OWORD *initializeWithTake for ContactGroupResolver(_OWORD *a1, _OWORD *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  __int128 v45;
  uint64_t v46;
  _OWORD *v47;
  __int128 *v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  __int128 v54;

  v4 = (int *)type metadata accessor for ContactResolverCache();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v4))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727A20);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v6 = v4[6];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1C030367C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    v10 = v4[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    *(_QWORD *)v11 = *(_QWORD *)v12;
    v11[8] = v12[8];
    v13 = v4[8];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *((_OWORD *)v15 + 1);
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v16;
    *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
    v17 = v4[9];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = *((_OWORD *)v19 + 1);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v20;
    *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
    v21 = v4[10];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = *((_OWORD *)v23 + 1);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *((_OWORD *)v22 + 1) = v24;
    *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
    *(_QWORD *)((char *)a1 + v4[11]) = *(_QWORD *)((char *)a2 + v4[11]);
    *(_QWORD *)((char *)a1 + v4[12]) = *(_QWORD *)((char *)a2 + v4[12]);
    *(_QWORD *)((char *)a1 + v4[13]) = *(_QWORD *)((char *)a2 + v4[13]);
    v25 = v4[14];
    v26 = (_QWORD *)((char *)a1 + v25);
    v27 = (_QWORD *)((char *)a2 + v25);
    v28 = type metadata accessor for MLContactRecommender();
    if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3050);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      *(_BYTE *)v26 = *(_BYTE *)v27;
      v26[1] = v27[1];
      v30 = *(int *)(v28 + 24);
      v31 = (char *)v26 + v30;
      v32 = (char *)v27 + v30;
      v33 = sub_1C0301DB0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
      __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v28);
    }
    v34 = v4[15];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    *(_QWORD *)((char *)a1 + v34) = *(_QWORD *)((char *)a2 + v34);
    v37 = *(int *)(type metadata accessor for StringTokenizer() + 20);
    v38 = &v35[v37];
    v39 = &v36[v37];
    v40 = sub_1C0301DB0();
    v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32);
    v41(v38, v39, v40);
    *(_OWORD *)((char *)a1 + v4[16]) = *(_OWORD *)((char *)a2 + v4[16]);
    *(_QWORD *)((char *)a1 + v4[17]) = *(_QWORD *)((char *)a2 + v4[17]);
    v41((char *)a1 + v4[18], (char *)a2 + v4[18], v40);
    *(_QWORD *)((char *)a1 + v4[19]) = *(_QWORD *)((char *)a2 + v4[19]);
    *(_QWORD *)((char *)a1 + v4[20]) = *(_QWORD *)((char *)a2 + v4[20]);
    *(_QWORD *)((char *)a1 + v4[21]) = *(_QWORD *)((char *)a2 + v4[21]);
    *(_QWORD *)((char *)a1 + v4[22]) = *(_QWORD *)((char *)a2 + v4[22]);
    *(_QWORD *)((char *)a1 + v4[23]) = *(_QWORD *)((char *)a2 + v4[23]);
    *(_QWORD *)((char *)a1 + v4[24]) = *(_QWORD *)((char *)a2 + v4[24]);
    v42 = v4[25];
    v43 = (char *)a1 + v42;
    v44 = (char *)a2 + v42;
    v45 = *((_OWORD *)v44 + 1);
    *(_OWORD *)v43 = *(_OWORD *)v44;
    *((_OWORD *)v43 + 1) = v45;
    *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
    *((_BYTE *)a1 + v4[26]) = *((_BYTE *)a2 + v4[26]);
    v46 = v4[27];
    v47 = (_OWORD *)((char *)a1 + v46);
    v48 = (_OWORD *)((char *)a2 + v46);
    *(_OWORD *)((char *)v47 + 41) = *(__int128 *)((char *)v48 + 41);
    v49 = v48[2];
    v50 = *v48;
    v47[1] = v48[1];
    v47[2] = v49;
    *v47 = v50;
    *(_OWORD *)((char *)a1 + v4[28]) = *(_OWORD *)((char *)a2 + v4[28]);
    *(_WORD *)((char *)a1 + v4[29]) = *(_WORD *)((char *)a2 + v4[29]);
    v51 = v4[30];
    v52 = (char *)a1 + v51;
    v53 = (char *)a2 + v51;
    v54 = *((_OWORD *)v53 + 1);
    *(_OWORD *)v52 = *(_OWORD *)v53;
    *((_OWORD *)v52 + 1) = v54;
    *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v4);
  }
  return a1;
}

char *assignWithTake for ContactGroupResolver(char *a1, char *a2)
{
  int *v4;
  int EnumTagSinglePayload;
  int v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  char *v78;
  char *v79;
  __int128 v80;
  uint64_t v81;
  char *v82;
  __int128 *v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  char *v87;
  char *v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  __int128 v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  __int128 v121;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;

  v4 = (int *)type metadata accessor for ContactResolverCache();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, (uint64_t)v4);
  v6 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v4);
  if (EnumTagSinglePayload)
  {
    if (!v6)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v7 = v4[6];
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = sub_1C030367C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      v11 = v4[7];
      v12 = &a1[v11];
      v13 = &a2[v11];
      *(_QWORD *)v12 = *(_QWORD *)v13;
      v12[8] = v13[8];
      v14 = v4[8];
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v17;
      *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
      v18 = v4[9];
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = *((_OWORD *)v20 + 1);
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v21;
      *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
      v22 = v4[10];
      v23 = &a1[v22];
      v24 = &a2[v22];
      v25 = *((_OWORD *)v24 + 1);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v25;
      *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
      *(_QWORD *)&a1[v4[11]] = *(_QWORD *)&a2[v4[11]];
      *(_QWORD *)&a1[v4[12]] = *(_QWORD *)&a2[v4[12]];
      *(_QWORD *)&a1[v4[13]] = *(_QWORD *)&a2[v4[13]];
      v26 = v4[14];
      v27 = &a1[v26];
      v28 = &a2[v26];
      v29 = type metadata accessor for MLContactRecommender();
      if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3050);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        *v27 = *v28;
        *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
        v65 = *(int *)(v29 + 24);
        v66 = &v27[v65];
        v67 = &v28[v65];
        v68 = sub_1C0301DB0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v66, v67, v68);
        __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
      }
      v69 = v4[15];
      v70 = &a1[v69];
      v71 = &a2[v69];
      *(_QWORD *)&a1[v69] = *(_QWORD *)&a2[v69];
      v72 = *(int *)(type metadata accessor for StringTokenizer() + 20);
      v73 = &v70[v72];
      v74 = &v71[v72];
      v75 = sub_1C0301DB0();
      v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32);
      v76(v73, v74, v75);
      *(_OWORD *)&a1[v4[16]] = *(_OWORD *)&a2[v4[16]];
      *(_QWORD *)&a1[v4[17]] = *(_QWORD *)&a2[v4[17]];
      v76(&a1[v4[18]], &a2[v4[18]], v75);
      *(_QWORD *)&a1[v4[19]] = *(_QWORD *)&a2[v4[19]];
      *(_QWORD *)&a1[v4[20]] = *(_QWORD *)&a2[v4[20]];
      *(_QWORD *)&a1[v4[21]] = *(_QWORD *)&a2[v4[21]];
      *(_QWORD *)&a1[v4[22]] = *(_QWORD *)&a2[v4[22]];
      *(_QWORD *)&a1[v4[23]] = *(_QWORD *)&a2[v4[23]];
      *(_QWORD *)&a1[v4[24]] = *(_QWORD *)&a2[v4[24]];
      v77 = v4[25];
      v78 = &a1[v77];
      v79 = &a2[v77];
      v80 = *((_OWORD *)v79 + 1);
      *(_OWORD *)v78 = *(_OWORD *)v79;
      *((_OWORD *)v78 + 1) = v80;
      *((_QWORD *)v78 + 4) = *((_QWORD *)v79 + 4);
      a1[v4[26]] = a2[v4[26]];
      v81 = v4[27];
      v82 = &a1[v81];
      v83 = (__int128 *)&a2[v81];
      *(_OWORD *)(v82 + 41) = *(__int128 *)((char *)v83 + 41);
      v84 = v83[2];
      v85 = *v83;
      *((_OWORD *)v82 + 1) = v83[1];
      *((_OWORD *)v82 + 2) = v84;
      *(_OWORD *)v82 = v85;
      *(_OWORD *)&a1[v4[28]] = *(_OWORD *)&a2[v4[28]];
      *(_WORD *)&a1[v4[29]] = *(_WORD *)&a2[v4[29]];
      v86 = v4[30];
      v87 = &a1[v86];
      v88 = &a2[v86];
      v89 = *((_OWORD *)v88 + 1);
      *(_OWORD *)v87 = *(_OWORD *)v88;
      *((_OWORD *)v87 + 1) = v89;
      *((_QWORD *)v87 + 4) = *((_QWORD *)v88 + 4);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v4);
      return a1;
    }
LABEL_7:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727A20);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    return a1;
  }
  if (v6)
  {
    sub_1C0045840((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ContactResolverCache);
    goto LABEL_7;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_release();
  v32 = v4[6];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = sub_1C030367C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 40))(v33, v34, v35);
  v36 = v4[7];
  v37 = &a1[v36];
  v38 = &a2[v36];
  *v37 = *v38;
  v37[1] = v38[1];
  v37[2] = v38[2];
  v37[3] = v38[3];
  v37[4] = v38[4];
  v37[5] = v38[5];
  v37[6] = v38[6];
  v37[7] = v38[7];
  v37[8] = v38[8];
  v39 = v4[8];
  v40 = &a1[v39];
  v41 = &a2[v39];
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&a1[v39]);
  v42 = *((_OWORD *)v41 + 1);
  *(_OWORD *)v40 = *(_OWORD *)v41;
  *((_OWORD *)v40 + 1) = v42;
  *((_QWORD *)v40 + 4) = *((_QWORD *)v41 + 4);
  v43 = v4[9];
  v44 = &a1[v43];
  v45 = &a2[v43];
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&a1[v43]);
  v46 = *((_OWORD *)v45 + 1);
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v46;
  *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
  v47 = v4[10];
  v48 = &a1[v47];
  v49 = &a2[v47];
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&a1[v47]);
  v50 = *((_OWORD *)v49 + 1);
  *(_OWORD *)v48 = *(_OWORD *)v49;
  *((_OWORD *)v48 + 1) = v50;
  *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
  v51 = v4[11];
  v52 = *(void **)&a1[v51];
  *(_QWORD *)&a1[v51] = *(_QWORD *)&a2[v51];

  v53 = v4[12];
  v54 = *(void **)&a1[v53];
  *(_QWORD *)&a1[v53] = *(_QWORD *)&a2[v53];

  *(_QWORD *)&a1[v4[13]] = *(_QWORD *)&a2[v4[13]];
  swift_bridgeObjectRelease();
  v55 = v4[14];
  v56 = &a1[v55];
  v57 = &a2[v55];
  v58 = type metadata accessor for MLContactRecommender();
  v59 = __swift_getEnumTagSinglePayload((uint64_t)v56, 1, v58);
  v60 = __swift_getEnumTagSinglePayload((uint64_t)v57, 1, v58);
  if (v59)
  {
    if (!v60)
    {
      *v56 = *v57;
      *((_QWORD *)v56 + 1) = *((_QWORD *)v57 + 1);
      v61 = *(int *)(v58 + 24);
      v62 = &v56[v61];
      v63 = &v57[v61];
      v64 = sub_1C0301DB0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v62, v63, v64);
      __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, v58);
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  if (v60)
  {
    sub_1C0045840((uint64_t)v56, (uint64_t (*)(_QWORD))type metadata accessor for MLContactRecommender);
LABEL_15:
    v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3050);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    goto LABEL_16;
  }
  *v56 = *v57;
  *((_QWORD *)v56 + 1) = *((_QWORD *)v57 + 1);
  swift_release();
  v123 = *(int *)(v58 + 24);
  v124 = &v56[v123];
  v125 = &v57[v123];
  v126 = sub_1C0301DB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 40))(v124, v125, v126);
LABEL_16:
  v91 = v4[15];
  v92 = &a1[v91];
  v93 = &a2[v91];
  *(_QWORD *)&a1[v91] = *(_QWORD *)&a2[v91];
  swift_release();
  v94 = *(int *)(type metadata accessor for StringTokenizer() + 20);
  v95 = &v92[v94];
  v96 = &v93[v94];
  v97 = sub_1C0301DB0();
  v98 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 40);
  v98(v95, v96, v97);
  v99 = v4[16];
  v100 = (uint64_t)&a1[v99];
  v101 = &a2[v99];
  if (!*(_QWORD *)&a1[v99])
  {
LABEL_20:
    *(_OWORD *)v100 = *(_OWORD *)v101;
    goto LABEL_21;
  }
  if (!*(_QWORD *)v101)
  {
    sub_1C02A8CB8(v100);
    goto LABEL_20;
  }
  *(_QWORD *)v100 = *(_QWORD *)v101;
  swift_release();
  *(_QWORD *)(v100 + 8) = *((_QWORD *)v101 + 1);
  swift_release();
LABEL_21:
  *(_QWORD *)&a1[v4[17]] = *(_QWORD *)&a2[v4[17]];
  swift_release();
  v98(&a1[v4[18]], &a2[v4[18]], v97);
  *(_QWORD *)&a1[v4[19]] = *(_QWORD *)&a2[v4[19]];
  swift_release();
  *(_QWORD *)&a1[v4[20]] = *(_QWORD *)&a2[v4[20]];
  swift_release();
  *(_QWORD *)&a1[v4[21]] = *(_QWORD *)&a2[v4[21]];
  swift_release();
  *(_QWORD *)&a1[v4[22]] = *(_QWORD *)&a2[v4[22]];
  swift_release();
  *(_QWORD *)&a1[v4[23]] = *(_QWORD *)&a2[v4[23]];
  swift_release();
  v102 = v4[24];
  v103 = *(void **)&a1[v102];
  *(_QWORD *)&a1[v102] = *(_QWORD *)&a2[v102];

  v104 = v4[25];
  v105 = (uint64_t)&a1[v104];
  v106 = &a2[v104];
  if (*(_QWORD *)&a1[v104 + 24])
    __swift_destroy_boxed_opaque_existential_0Tm(v105);
  v107 = *((_OWORD *)v106 + 1);
  *(_OWORD *)v105 = *(_OWORD *)v106;
  *(_OWORD *)(v105 + 16) = v107;
  *(_QWORD *)(v105 + 32) = *((_QWORD *)v106 + 4);
  a1[v4[26]] = a2[v4[26]];
  v108 = v4[27];
  v109 = &a1[v108];
  v110 = &a2[v108];
  *v109 = a2[v108];
  v111 = *(_QWORD *)&a2[v108 + 16];
  *((_QWORD *)v109 + 1) = *(_QWORD *)&a2[v108 + 8];
  *((_QWORD *)v109 + 2) = v111;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v109 + 24) = *(_OWORD *)(v110 + 24);
  *(_OWORD *)(v109 + 40) = *(_OWORD *)(v110 + 40);
  v109[56] = v110[56];
  v112 = v4[28];
  v113 = &a1[v112];
  v114 = &a2[v112];
  *v113 = *v114;
  v113[1] = v114[1];
  v113[2] = v114[2];
  *((_QWORD *)v113 + 1) = *((_QWORD *)v114 + 1);
  v115 = v4[29];
  v116 = &a1[v115];
  v117 = &a2[v115];
  *v116 = *v117;
  v116[1] = v117[1];
  v118 = v4[30];
  v119 = (uint64_t)&a1[v118];
  v120 = &a2[v118];
  if (*(_QWORD *)&a1[v118 + 24])
    __swift_destroy_boxed_opaque_existential_0Tm(v119);
  v121 = *((_OWORD *)v120 + 1);
  *(_OWORD *)v119 = *(_OWORD *)v120;
  *(_OWORD *)(v119 + 16) = v121;
  *(_QWORD *)(v119 + 32) = *((_QWORD *)v120 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactGroupResolver()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C02A9820(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727A20);
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ContactGroupResolver()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C02A9864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727A20);
  v0 = OUTLINED_FUNCTION_13_64();
  return OUTLINED_FUNCTION_2_128(v0, v1, v2, v3);
}

void sub_1C02A9890()
{
  unint64_t v0;

  sub_1C013E53C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *initializeBufferWithCopyOfBuffer for ContactGroupResolverConfig(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C0301DB0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ContactGroupResolverConfig(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContactGroupResolverConfig(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContactGroupResolverConfig(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ContactGroupResolverConfig(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactGroupResolverConfig()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C02A9B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_14_4();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactGroupResolverConfig()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C02A9B84(uint64_t a1, int a2, int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_DWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_14_4() - 8) + 84) == a3)
  {
    v7 = OUTLINED_FUNCTION_13_64();
    __swift_storeEnumTagSinglePayload(v7, v8, v9, v10);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    OUTLINED_FUNCTION_37_0();
  }
}

uint64_t sub_1C02A9BE0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C0301DB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactGroupQuery()
{
  return &type metadata for ContactGroupQuery;
}

ValueMetadata *type metadata accessor for ContactGroup()
{
  return &type metadata for ContactGroup;
}

unint64_t sub_1C02A9C74()
{
  unint64_t result;

  result = qword_1EF5C3180;
  if (!qword_1EF5C3180)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF5C3180);
  }
  return result;
}

uint64_t sub_1C02A9CB0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C02A7774(a1, a2);
}

void sub_1C02A9CC8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_1C01393A0(*a1, *(_QWORD *)(v2 + 24));
  *a2 = v4;
}

uint64_t sub_1C02A9D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C02A9D54(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727A20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C02A9D94(uint64_t a1)
{
  uint64_t v1;

  return sub_1C02A6A0C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C02A9D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContactResolverCache();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C02A9DE0(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v4;
  void (*v5)(uint64_t);

  a3(0);
  OUTLINED_FUNCTION_134();
  v4 = OUTLINED_FUNCTION_189();
  v5(v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_2_128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_8_75(unint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  return sub_1C02A6ACC(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_10_77()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_13_64()
{
  uint64_t v0;

  return v0;
}

void sub_1C02A9E50()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725E18);
  v0 = *(_QWORD *)(sub_1C0301EAC() - 8);
  v1 = *(_QWORD *)(v0 + 72);
  v2 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C0313400;
  v4 = v3 + v2;
  OUTLINED_FUNCTION_6_61(v4, *MEMORY[0x1E0CB11A0]);
  OUTLINED_FUNCTION_6_61(v4 + v1, *MEMORY[0x1E0CB11A8]);
  OUTLINED_FUNCTION_6_61(v4 + 2 * v1, *MEMORY[0x1E0CB1158]);
  OUTLINED_FUNCTION_6_61(v4 + 3 * v1, *MEMORY[0x1E0CB1160]);
  OUTLINED_FUNCTION_6_61(v4 + 4 * v1, *MEMORY[0x1E0CB1130]);
  sub_1C011F784();
}

void sub_1C02A9F40()
{
  sub_1C02A9E50();
}

uint64_t sub_1C02A9F54()
{
  unint64_t v0;

  v0 = sub_1C030484C();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

void sub_1C02A9F9C(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int EnumTagSinglePayload;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;

  v91 = a6;
  v89 = a3;
  v80 = a2;
  v90 = a7;
  v83 = sub_1C0301EAC();
  v79 = *(_QWORD *)(v83 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_53();
  v78 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728360);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_27();
  v81 = v13;
  MEMORY[0x1E0C80A78](v14);
  v82 = (char *)&v70 - v15;
  v84 = sub_1C0301CFC();
  v86 = *(_QWORD *)(v84 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_27();
  v74 = v17;
  MEMORY[0x1E0C80A78](v18);
  v87 = (char *)&v70 - v19;
  v77 = sub_1C0301DC8();
  v75 = *(_QWORD *)(v77 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_53();
  v76 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B88D8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_6_0();
  v25 = v24 - v23;
  v88 = sub_1C0301EC4();
  v85 = *(_QWORD *)(v88 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_6_0();
  v29 = v28 - v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_6_0();
  v33 = v32 - v31;
  v34 = OUTLINED_FUNCTION_7_95();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_6_0();
  v38 = v37 - v36;
  sub_1C02AA54C(a1, a4, a5, v91, v33);
  if (__swift_getEnumTagSinglePayload(v33, 1, v34) != 1)
  {
    v72 = a5;
    OUTLINED_FUNCTION_8_76();
    v41 = v38;
    if ((v89 & 1) != 0)
    {
      v40 = v90;
      OUTLINED_FUNCTION_8_76();
    }
    else
    {
      v42 = v25;
      sub_1C0301924();
      v43 = v88;
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v25, 1, v88);
      v73 = v41;
      v71 = v35;
      v70 = a4;
      if (EnumTagSinglePayload == 1)
      {
        v45 = v75;
        v46 = v42;
        v48 = v76;
        v47 = v77;
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v75 + 104))(v76, *MEMORY[0x1E0CB0EF8], v77);
        sub_1C0301DD4();
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v48, v47);
        sub_1C0056C9C(v46, &qword_1EF5B88D8);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 32))(v29, v25, v43);
      }
      v40 = v90;
      v49 = v83;
      v50 = v84;
      v51 = v86;
      v52 = v87;
      v53 = (uint64_t)v82;
      v54 = v73;
      sub_1C0301E58();
      if (__swift_getEnumTagSinglePayload(v53, 1, v50) == 1)
      {
        OUTLINED_FUNCTION_6_100(*(uint64_t (**)(uint64_t, _QWORD))(v85 + 8));
        (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v54, v34);
        v55 = v53;
LABEL_12:
        sub_1C0056C9C(v55, &qword_1ED728360);
        v39 = 1;
        goto LABEL_15;
      }
      v56 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 32);
      v56(v52, v53, v50);
      v57 = v78;
      v58 = v79;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v79 + 104))(v78, *MEMORY[0x1E0CB1130], v49);
      v59 = v49;
      v60 = v81;
      sub_1C0301E70();
      v61 = v60;
      v62 = v59;
      v63 = v86;
      v64 = v87;
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v62);
      v65 = __swift_getEnumTagSinglePayload(v61, 1, v50);
      v66 = v85;
      if (v65 == 1)
      {
        (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v50);
        OUTLINED_FUNCTION_6_100(*(uint64_t (**)(uint64_t, _QWORD))(v66 + 8));
        OUTLINED_FUNCTION_3_134();
        v55 = v61;
        goto LABEL_12;
      }
      v67 = v74;
      v56((char *)v74, v61, v50);
      v68 = (*(uint64_t (**)(uint64_t))(v91 + 32))(v72);
      sub_1C0107330(v68, v67, v40);
      swift_bridgeObjectRelease();
      v69 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
      v69(v67, v50);
      v69((uint64_t)v64, v50);
      OUTLINED_FUNCTION_6_100(*(uint64_t (**)(uint64_t, _QWORD))(v66 + 8));
      OUTLINED_FUNCTION_3_134();
    }
    v39 = 0;
    goto LABEL_15;
  }
  sub_1C0056C9C(v33, &qword_1ED725F50);
  v39 = 1;
  v40 = v90;
LABEL_15:
  __swift_storeEnumTagSinglePayload(v40, v39, 1, v34);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C02AA474(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C02AA4A4 + 4 * byte_1C0323EA8[a1]))(0x726574736165, 0xE600000000000000);
}

uint64_t sub_1C02AA4A4()
{
  return 0x7664617473726966;
}

uint64_t sub_1C02AA4C4()
{
  return 0x6967736B6E616874;
}

uint64_t sub_1C02AA4E4()
{
  return 0x757165686372616DLL;
}

uint64_t sub_1C02AA504()
{
  return 0x736C6F73656E756ALL;
}

unint64_t sub_1C02AA524()
{
  return 0xD000000000000010;
}

uint64_t sub_1C02AA54C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_6_0();
  if (((*(uint64_t (**)(void))(v10 + 16))() & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 24))(a1, a2, a3, a4);
    v11 = OUTLINED_FUNCTION_7_95();
    v12 = a5;
    v13 = 0;
  }
  else
  {
    v11 = OUTLINED_FUNCTION_7_95();
    v12 = a5;
    v13 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v12, v13, 1, v11);
}

uint64_t OUTLINED_FUNCTION_3_134()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 264) + 8))(*(_QWORD *)(v1 - 248), v0);
}

uint64_t OUTLINED_FUNCTION_6_100@<X0>(uint64_t (*a1)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, *(_QWORD *)(v2 - 128));
}

uint64_t OUTLINED_FUNCTION_7_95()
{
  return sub_1C0301954();
}

uint64_t OUTLINED_FUNCTION_8_76()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v1, v3, v2);
}

unint64_t UsoEntity_common_Duration.toInterval(offsetDirection:)(uint64_t a1)
{
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  double v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  double v46;
  double v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  __int16 v72;
  char v73;
  char v74;

  result = sub_1C0302C20();
  if (result)
  {
    v3 = result;
    if (result >> 62)
    {
      swift_bridgeObjectRetain();
      v29 = sub_1C03047F8();
      OUTLINED_FUNCTION_18();
      if (v29 == 1)
      {
LABEL_4:
        sub_1C02CFE78(0, (v3 & 0xC000000000000001) == 0, v3);
        if ((v3 & 0xC000000000000001) == 0)
        {
          swift_retain();
          goto LABEL_6;
        }
LABEL_51:
        MEMORY[0x1C3B975EC](0, v3);
LABEL_6:
        OUTLINED_FUNCTION_18();
        v5 = sub_1C02AABC8();
        v7 = v6;
        v8 = sub_1C03029C8();
        if (v70 && (v16 = sub_1C030307C(), v8 = swift_release(), v16))
        {
          sub_1C02A6178(&v74);
          v8 = OUTLINED_FUNCTION_5_3();
          v17 = v74;
        }
        else
        {
          v17 = 13;
        }
        LOBYTE(v70) = v17;
        if (a1
          && (OUTLINED_FUNCTION_4_106(v8, v9, v10, v11, v12, v13, v14, v15, v68, v69, v70, v71, v72, v73, v74),
              v18 = v74,
              v74 != 20))
        {
          OUTLINED_FUNCTION_3_4();
        }
        else
        {
          v19 = OUTLINED_FUNCTION_3_135();
          if (v19)
          {
            OUTLINED_FUNCTION_2_129(v19, v20, v21, v22, v23, v24, v25, v26, v68, v69, v70, v71, v72, v73, v74);
            OUTLINED_FUNCTION_5_3();
            OUTLINED_FUNCTION_3_4();
            v18 = v74;
          }
          else
          {
            OUTLINED_FUNCTION_3_4();
            v18 = 20;
          }
        }
        if ((v7 & 1) != 0)
          v27 = 0x3FF0000000000000;
        else
          v27 = v5;
        HIBYTE(v69) = v18;
        type metadata accessor for DateTime.Interval();
        OUTLINED_FUNCTION_6_101();
        v28 = v27;
        return DateTime.Interval.init(withQuantity:timeUnit:qualifier:)(v28, 0, (char *)&v70, (char *)&v69 + 7);
      }
      swift_bridgeObjectRetain();
      v4 = sub_1C03047F8();
      OUTLINED_FUNCTION_18();
    }
    else
    {
      v4 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v4 == 1)
        goto LABEL_4;
    }
    if (!v4)
    {
      v50 = OUTLINED_FUNCTION_18();
      v58 = 0;
LABEL_40:
      LOBYTE(v70) = 10;
      if (!a1
        || (OUTLINED_FUNCTION_4_106(v50, v51, v52, v53, v54, v55, v56, v57, v68, v69, v70, v71, v72, v73, v74),
            v59 = v74,
            v74 == 20))
      {
        v60 = OUTLINED_FUNCTION_3_135();
        if (v60)
        {
          OUTLINED_FUNCTION_2_129(v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, v72, v73, v74);
          OUTLINED_FUNCTION_5_3();
          v59 = v74;
        }
        else
        {
          v59 = 20;
        }
      }
      HIBYTE(v69) = v59;
      type metadata accessor for DateTime.Interval();
      OUTLINED_FUNCTION_6_101();
      v28 = v58;
      return DateTime.Interval.init(withQuantity:timeUnit:qualifier:)(v28, 0, (char *)&v70, (char *)&v69 + 7);
    }
    v68 = a1;
    v30 = 0.0;
    v31 = 4;
    while (1)
    {
      if ((v3 & 0xC000000000000001) != 0)
        MEMORY[0x1C3B975EC](v31 - 4, v3);
      else
        swift_retain();
      a1 = v31 - 3;
      if (__OFADD__(v31 - 4, 1))
        break;
      v32 = sub_1C02AABC8();
      if ((v33 & 1) != 0)
      {
        swift_release();
LABEL_45:
        OUTLINED_FUNCTION_18();
        return 0;
      }
      v34 = *(double *)&v32;
      sub_1C03029C8();
      if (v70 && (v35 = sub_1C030307C(), swift_release(), v35))
      {
        sub_1C02A6178(&v74);
        OUTLINED_FUNCTION_5_3();
        v36 = v74;
      }
      else
      {
        v36 = 13;
      }
      LOBYTE(v70) = v36;
      v37 = OUTLINED_FUNCTION_3_135();
      if (v37)
      {
        OUTLINED_FUNCTION_2_129(v37, v38, v39, v40, v41, v42, v43, v44, v68, v69, v70, v71, v72, v73, v74);
        OUTLINED_FUNCTION_5_3();
        v45 = v74;
      }
      else
      {
        v45 = 20;
      }
      v74 = v45;
      sub_1C02AACA0(&v70, &v74, v34);
      v47 = v46;
      v49 = v48;
      swift_release();
      if ((v49 & 1) != 0)
        goto LABEL_45;
      v30 = v30 + v47;
      ++v31;
      if (a1 == v4)
      {
        v50 = OUTLINED_FUNCTION_18();
        v58 = *(_QWORD *)&v30;
        a1 = v68;
        goto LABEL_40;
      }
    }
    __break(1u);
    goto LABEL_51;
  }
  return result;
}

unint64_t UsoEntity_common_Duration.toInterval()()
{
  return UsoEntity_common_Duration.toInterval(offsetDirection:)(0);
}

uint64_t sub_1C02AABC8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t result;
  uint64_t v5;

  sub_1C03029C8();
  if (!v5)
    goto LABEL_5;
  v0 = sub_1C0302CB0();
  swift_release();
  if (!v0)
    goto LABEL_5;
  swift_retain();
  sub_1C0302668();
  swift_release();
  sub_1C0302D94();
  sub_1C0302E54();
  swift_release();
  v1 = sub_1C0302D88();
  v3 = v2;
  swift_release();
  swift_release();
  if ((v3 & 1) == 0)
    *(double *)&result = (double)v1;
  else
LABEL_5:
    *(double *)&result = 0.0;
  return result;
}

double sub_1C02AACA0(_BYTE *a1, _BYTE *a2, double a3)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  const char *v7;
  double result;
  double v9;
  double v10;
  uint64_t v11;

  if (*a1 == 13)
  {
    if (qword_1ED728430 != -1)
      swift_once();
    v3 = sub_1C0303B98();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED729650);
    v4 = sub_1C0303B80();
    v5 = sub_1C03042E8();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      v7 = "timeUnit is not present, not normalizing and returning nil";
LABEL_6:
      _os_log_impl(&dword_1C0039000, v4, v5, v7, v6, 2u);
      MEMORY[0x1C3B98378](v6, -1, -1);
    }
LABEL_7:

  }
  else
  {
    v9 = 1.0;
    if (*a2 == 9)
      v9 = -1.0;
    switch(*a1)
    {
      case 4:
        a3 = a3 * 60.0;
        goto LABEL_13;
      case 5:
        v10 = a3 / 1000.0;
        goto LABEL_14;
      case 6:
LABEL_13:
        v10 = a3 * 60.0;
LABEL_14:
        result = v10 * v9;
        break;
      case 0xA:
        result = v9 * a3;
        break;
      default:
        if (qword_1ED728430 != -1)
          swift_once();
        v11 = sub_1C0303B98();
        __swift_project_value_buffer(v11, (uint64_t)qword_1ED729650);
        v4 = sub_1C0303B80();
        v5 = sub_1C03042E8();
        if (!os_log_type_enabled(v4, v5))
          goto LABEL_7;
        v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v6 = 0;
        v7 = "normalization only supported for grains time less than or equal to 'hour'";
        goto LABEL_6;
    }
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_129(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  return sub_1C00A0358(&a15);
}

uint64_t OUTLINED_FUNCTION_3_135()
{
  return sub_1C0302CB0();
}

uint64_t OUTLINED_FUNCTION_4_106(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  return sub_1C01F6F60(&a15);
}

uint64_t OUTLINED_FUNCTION_6_101()
{
  return swift_allocObject();
}

uint64_t sub_1C02AAEBC(unsigned __int8 *a1)
{
  _BYTE *v1;
  int v2;
  uint64_t v3;
  uint64_t result;
  char *v5;
  char *v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v2 = *a1;
  switch(v2)
  {
    case 19:
      v3 = 0xBFF0000000000000;
      break;
    case 17:
      v3 = 0x3FF0000000000000;
      break;
    case 16:
      v3 = 0;
      break;
    default:
      return 0;
  }
  result = 0;
  switch(*v1)
  {
    case 0:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 8:
    case 0xC:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x16:
    case 0x17:
      v12 = 1;
      v11 = v2;
      OUTLINED_FUNCTION_1_135();
      OUTLINED_FUNCTION_6_101();
      v5 = &v12;
      v6 = &v11;
      goto LABEL_15;
    case 1:
    case 0xB:
    case 0x11:
    case 0x12:
    case 0x14:
      v18 = 12;
      v17 = v2;
      OUTLINED_FUNCTION_1_135();
      OUTLINED_FUNCTION_6_101();
      v5 = &v18;
      v6 = &v17;
      goto LABEL_15;
    case 9:
      v16 = 7;
      v15 = v2;
      OUTLINED_FUNCTION_1_135();
      OUTLINED_FUNCTION_6_101();
      v5 = &v16;
      v6 = &v15;
      goto LABEL_15;
    case 0xA:
    case 0x13:
      v14 = 11;
      v13 = v2;
      OUTLINED_FUNCTION_1_135();
      OUTLINED_FUNCTION_6_101();
      v5 = &v14;
      v6 = &v13;
      goto LABEL_15;
    case 0x1F:
      v10 = 4;
      v9 = v2;
      OUTLINED_FUNCTION_1_135();
      OUTLINED_FUNCTION_6_101();
      v5 = &v10;
      v6 = &v9;
      goto LABEL_15;
    case 0x20:
      v8 = 6;
      v7 = v2;
      OUTLINED_FUNCTION_1_135();
      OUTLINED_FUNCTION_6_101();
      v5 = &v8;
      v6 = &v7;
LABEL_15:
      result = DateTime.Interval.init(withQuantity:timeUnit:qualifier:)(v3, 0, v5, v6);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_135()
{
  return type metadata accessor for DateTime.Interval();
}

char *static SaveInteraction.metricName.getter()
{
  OUTLINED_FUNCTION_55_1();
  return off_1EF5C3228;
}

void static SaveInteraction.metricName.setter(char *a1, uint64_t a2, char a3)
{
  OUTLINED_FUNCTION_55_1();
  off_1EF5C3228 = a1;
  unk_1EF5C3230 = a2;
  byte_1EF5C3238 = a3;
  OUTLINED_FUNCTION_40();
}

uint64_t (*static SaveInteraction.metricName.modify())()
{
  OUTLINED_FUNCTION_55_1();
  return j__swift_endAccess;
}

void SaveInteraction.__allocating_init(interaction:dkEventUUID:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  SaveInteraction.init(interaction:dkEventUUID:)(a1, a2);
  OUTLINED_FUNCTION_37_0();
}

id SaveInteraction.init(interaction:dkEventUUID:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  v5 = (objc_class *)OUTLINED_FUNCTION_7_9();
  *(_QWORD *)&v2[OBJC_IVAR____TtC13SiriInference15SaveInteraction_interaction] = a1;
  v6 = &v2[OBJC_IVAR____TtC13SiriInference15SaveInteraction_dkEventUUID];
  v7 = OUTLINED_FUNCTION_40_1();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  v11.receiver = v2;
  v11.super_class = v5;
  v9 = objc_msgSendSuper2(&v11, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  return v9;
}

void SaveInteraction.clone()()
{
  uint64_t v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;

  v1 = (objc_class *)OUTLINED_FUNCTION_7_9();
  v2 = OUTLINED_FUNCTION_40_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_6_0();
  v5 = v4 - v3;
  v6 = *(void **)(v0 + OBJC_IVAR____TtC13SiriInference15SaveInteraction_interaction);
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v4 - v3, v0 + OBJC_IVAR____TtC13SiriInference15SaveInteraction_dkEventUUID);
  v8 = objc_allocWithZone(v1);
  SaveInteraction.init(interaction:dkEventUUID:)((uint64_t)v6, v5);
  OUTLINED_FUNCTION_37_0();
}

Swift::Void __swiftcall SaveInteraction.main()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_55_1();
  v2 = sub_1C03046E4();
  sub_1C01D2B00(v2, v3, v0, v1);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_40();
}

void sub_1C02AB2C4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v14 = sub_1C0303B74();
  v13 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_6_0();
  v3 = v2 - v1;
  OUTLINED_FUNCTION_28_2();
  if (qword_1ED728440 != -1)
    swift_once();
  v4 = (id)qword_1ED729668;
  sub_1C0303B68();
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C0305B60;
  v6 = sub_1C03046E4();
  v8 = v7;
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = v8;
  sub_1C0303B50();
  swift_bridgeObjectRelease();
  v9 = a1;
  sub_1C02AB50C();

  sub_1C0071A20();
  v10 = sub_1C0303DB4();
  sub_1C01A7570(v12, v12 != 0, v10, 2);
  swift_bridgeObjectRelease();
  sub_1C00A6AAC(v12, v12 != 0);
  sub_1C03043D8();
  sub_1C0303B5C();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v3, v14);

  OUTLINED_FUNCTION_28_0();
}

void sub_1C02AB50C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  _QWORD *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  id v45;
  uint64_t v46;
  void *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[3];
  uint64_t v56;

  v2 = v0;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7283F0);
  MEMORY[0x1E0C80A78](v54);
  OUTLINED_FUNCTION_6_0();
  v5 = (uint64_t *)(v4 - v3);
  v6 = sub_1C0301B70();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v51 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v52 = (char *)v43 - v10;
  v11 = type metadata accessor for SiriRemembersDB();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v53 = (uint64_t)v43 - v16;
  if ((OUTLINED_FUNCTION_7_96(v15, sel_isCancelled) & 1) == 0)
  {
    v48 = v5;
    v49 = v7;
    v50 = v6;
    v17 = *(void **)(v2 + OBJC_IVAR____TtC13SiriInference15SaveInteraction_interaction);
    v44 = v11;
    v45 = v17;
    v18 = sub_1C013221C(objc_msgSend(v17, sel_intent));
    if (v19)
      v20 = v18;
    else
      v20 = 7104878;
    if (v19)
      v21 = v19;
    else
      v21 = 0xE300000000000000;
    v46 = sub_1C0301D14();
    v23 = v22;
    if (qword_1ED728298 != -1)
      swift_once();
    v24 = sub_1C0303B98();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED729610);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v25 = sub_1C0303B80();
    v26 = sub_1C03042E8();
    v27 = os_log_type_enabled(v25, v26);
    v47 = v23;
    if (v27)
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v43[1] = v1;
      v55[0] = v29;
      *(_DWORD *)v28 = 136315394;
      swift_bridgeObjectRetain();
      v56 = sub_1C003E6D8(v20, v21, v55);
      v43[0] = v14;
      sub_1C03044B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 12) = 2080;
      swift_bridgeObjectRetain();
      v56 = sub_1C003E6D8(v46, (unint64_t)v23, v55);
      sub_1C03044B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0039000, v25, v26, "Running SaveInteraction. uuid=%s, dkEventUUID=%s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_2();
    v31 = v49;
    v30 = v50;
    v32 = v48;
    if (qword_1ED728420 != -1)
      swift_once();
    v33 = __swift_project_value_buffer(v54, (uint64_t)qword_1ED728368);
    OUTLINED_FUNCTION_28_2();
    sub_1C00CE368(v33, (uint64_t)v32);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v56 = *v32;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7281B0);
      swift_willThrowTypedImpl();
LABEL_20:
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    v34 = v52;
    (*(void (**)(char *, uint64_t *, uint64_t))(v31 + 32))(v52, v32, v30);
    v35 = (uint64_t)v51;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v51, v34, v30);
    SiriRemembersDB.init(url:readOnly:)(v35, 0, v53);
    if (v1)
    {
      OUTLINED_FUNCTION_6_102();
      goto LABEL_20;
    }
    v36 = OUTLINED_FUNCTION_6_102();
    if ((OUTLINED_FUNCTION_7_96(v36, sel_isCancelled) & 1) != 0)
    {
      OUTLINED_FUNCTION_13_65();
      goto LABEL_20;
    }
    type metadata accessor for Intent();
    swift_allocObject();
    v37 = v45;
    v38 = (_QWORD *)sub_1C01E7A84(v37, v46, v47);
    v39 = objc_msgSend(v37, sel_intent);
    v40 = sub_1C006E27C();

    sub_1C00A68E4(v53, (uint64_t)v14);
    v41 = *(_QWORD *)&v14[*(int *)(v44 + 20)];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v42 = sub_1C008F7B8((uint64_t)v14);
    if ((OUTLINED_FUNCTION_7_96(v42, (const char *)&selRef_now) & 1) != 0)
    {
      OUTLINED_FUNCTION_13_65();
      OUTLINED_FUNCTION_24_7();
      OUTLINED_FUNCTION_2();
      swift_release();
    }
    else
    {
      sub_1C0267B60(v41, v38, v40);
      objc_msgSend((id)objc_opt_self(), sel__resetCache);
      OUTLINED_FUNCTION_24_7();
      OUTLINED_FUNCTION_2();
      swift_release();
      OUTLINED_FUNCTION_13_65();
    }
  }
LABEL_21:
  OUTLINED_FUNCTION_28_0();
}

id SaveInteraction.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SaveInteraction.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SaveInteraction.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_7_9();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *sub_1C02ABB90()
{
  return static SaveInteraction.metricName.getter();
}

uint64_t sub_1C02ABBA4()
{
  return type metadata accessor for SaveInteraction();
}

uint64_t type metadata accessor for SaveInteraction()
{
  uint64_t result;

  result = qword_1ED725880;
  if (!qword_1ED725880)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C02ABBE4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C0301D5C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SaveInteraction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SaveInteraction.__allocating_init(interaction:dkEventUUID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t OUTLINED_FUNCTION_6_102()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

id OUTLINED_FUNCTION_7_96(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_13_65()
{
  uint64_t v0;

  return sub_1C008F7B8(*(_QWORD *)(v0 - 120));
}

SiriInference::Proximity::Value_optional __swiftcall Proximity.Value.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SiriInference::Proximity::Value_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1C030484C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

SiriInference::Proximity __swiftcall Proximity.init(value:)(SiriInference::Proximity value)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)value.value;
  return value;
}

uint64_t Proximity.Value.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C02ABD1C + 4 * byte_1C0323F78[*v0]))(28265, 0xE200000000000000);
}

uint64_t sub_1C02ABD1C()
{
  return 28271;
}

uint64_t sub_1C02ABD24()
{
  return 1918985582;
}

unint64_t sub_1C02ABD34()
{
  return 0xD000000000000010;
}

void sub_1C02ABD5C()
{
  sub_1C025C150();
}

void sub_1C02ABD68()
{
  unsigned __int8 *v0;

  sub_1C00CECE8(*v0);
}

void sub_1C02ABD70()
{
  sub_1C00C1184();
}

void sub_1C02ABD78(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EB784(a1, *v1);
}

SiriInference::Proximity::Value_optional sub_1C02ABD80(Swift::String *a1)
{
  return Proximity.Value.init(rawValue:)(*a1);
}

uint64_t sub_1C02ABD8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Proximity.Value.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C02ABDB0()
{
  sub_1C02AC49C();
  return sub_1C03040F0();
}

uint64_t sub_1C02ABE0C()
{
  sub_1C02AC49C();
  return sub_1C03040CC();
}

void Proximity.value.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void static Proximity.== infix(_:_:)()
{
  sub_1C025C150();
}

uint64_t sub_1C02ABE70(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C02ABEEC()
{
  return 0x65756C6176;
}

uint64_t sub_1C02ABF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C02ABE70(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C02ABF2C()
{
  sub_1C02AC168();
  return sub_1C0304BAC();
}

uint64_t sub_1C02ABF54()
{
  sub_1C02AC168();
  return sub_1C0304BB8();
}

void Proximity.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3248);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_39_2();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02AC168();
  sub_1C0304BA0();
  sub_1C02AC1A4();
  sub_1C030499C();
  OUTLINED_FUNCTION_65_8(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_28_0();
}

void Proximity.init(from:)(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3260);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_39_2();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02AC168();
  sub_1C0304B88();
  if (!v2)
  {
    sub_1C02AC1E0();
    sub_1C03048E8();
    OUTLINED_FUNCTION_65_8(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    *a2 = v7;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  OUTLINED_FUNCTION_28_0();
}

void sub_1C02AC13C(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  Proximity.init(from:)(a1, a2);
}

void sub_1C02AC150(_QWORD *a1)
{
  Proximity.encode(to:)(a1);
}

unint64_t sub_1C02AC168()
{
  unint64_t result;

  result = qword_1EF5C3250;
  if (!qword_1EF5C3250)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03241F0, &type metadata for Proximity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3250);
  }
  return result;
}

unint64_t sub_1C02AC1A4()
{
  unint64_t result;

  result = qword_1EF5C3258;
  if (!qword_1EF5C3258)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Proximity.Value, &type metadata for Proximity.Value);
    atomic_store(result, (unint64_t *)&qword_1EF5C3258);
  }
  return result;
}

unint64_t sub_1C02AC1E0()
{
  unint64_t result;

  result = qword_1EF5C3268;
  if (!qword_1EF5C3268)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Proximity.Value, &type metadata for Proximity.Value);
    atomic_store(result, (unint64_t *)&qword_1EF5C3268);
  }
  return result;
}

unint64_t sub_1C02AC220()
{
  unint64_t result;

  result = qword_1EF5C3270;
  if (!qword_1EF5C3270)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Proximity.Value, &type metadata for Proximity.Value);
    atomic_store(result, (unint64_t *)&qword_1EF5C3270);
  }
  return result;
}

ValueMetadata *type metadata accessor for Proximity()
{
  return &type metadata for Proximity;
}

uint64_t _s13SiriInference9ProximityV5ValueOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C02AC2C0 + 4 * byte_1C0323F82[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C02AC2F4 + 4 * byte_1C0323F7D[v4]))();
}

uint64_t sub_1C02AC2F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02AC2FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02AC304);
  return result;
}

uint64_t sub_1C02AC310(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02AC318);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C02AC31C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02AC324(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proximity.Value()
{
  return &type metadata for Proximity.Value;
}

uint64_t storeEnumTagSinglePayload for Proximity.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C02AC380 + 4 * byte_1C0323F87[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C02AC3A0 + 4 * byte_1C0323F8C[v4]))();
}

_BYTE *sub_1C02AC380(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C02AC3A0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C02AC3A8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C02AC3B0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C02AC3B8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C02AC3C0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Proximity.CodingKeys()
{
  return &type metadata for Proximity.CodingKeys;
}

unint64_t sub_1C02AC3E0()
{
  unint64_t result;

  result = qword_1EF5C3278;
  if (!qword_1EF5C3278)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03241C8, &type metadata for Proximity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3278);
  }
  return result;
}

unint64_t sub_1C02AC420()
{
  unint64_t result;

  result = qword_1EF5C3280;
  if (!qword_1EF5C3280)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0324138, &type metadata for Proximity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3280);
  }
  return result;
}

unint64_t sub_1C02AC460()
{
  unint64_t result;

  result = qword_1EF5C3288;
  if (!qword_1EF5C3288)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0324160, &type metadata for Proximity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3288);
  }
  return result;
}

unint64_t sub_1C02AC49C()
{
  unint64_t result;

  result = qword_1EF5C3290;
  if (!qword_1EF5C3290)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Proximity.Value, &type metadata for Proximity.Value);
    atomic_store(result, (unint64_t *)&qword_1EF5C3290);
  }
  return result;
}

uint64_t sub_1C02AC4D8@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(unint64_t, _QWORD, uint64_t);
  _QWORD v15[2];
  int v16;
  uint64_t v17;

  v16 = a2;
  v15[1] = a1;
  v17 = a3;
  v3 = sub_1C0301954();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725E18);
  v7 = sub_1C0301EAC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C030AAE0;
  v12 = v11 + v10;
  v13 = *(void (**)(unint64_t, _QWORD, uint64_t))(v8 + 104);
  v13(v12, *MEMORY[0x1E0CB1158], v7);
  v13(v12 + v9, *MEMORY[0x1E0CB1160], v7);
  v13(v12 + 2 * v9, *MEMORY[0x1E0CB1130], v7);
  v13(v12 + 3 * v9, *MEMORY[0x1E0CB1140], v7);
  v13(v12 + 4 * v9, *MEMORY[0x1E0CB1178], v7);
  v13(v12 + 5 * v9, *MEMORY[0x1E0CB1188], v7);
  sub_1C011F784();
  sub_1C0301E1C();
  swift_bridgeObjectRelease();
  sub_1C0301834();
  sub_1C03018A0();
  if ((v16 & 1) == 0)
    sub_1C0301888();
  sub_1C0301870();
  sub_1C03018C4();
  sub_1C03018DC();
  sub_1C0301E58();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1C02AC6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(unint64_t, _QWORD, uint64_t);
  uint64_t v13;
  char v14;
  BOOL v15;
  uint64_t result;
  _QWORD v17[2];

  v17[0] = a2;
  v17[1] = a1;
  v2 = sub_1C0301954();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725E18);
  v6 = sub_1C0301EAC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C030AAE0;
  v11 = v10 + v9;
  v12 = *(void (**)(unint64_t, _QWORD, uint64_t))(v7 + 104);
  v12(v11, *MEMORY[0x1E0CB1158], v6);
  v12(v11 + v8, *MEMORY[0x1E0CB1160], v6);
  v12(v11 + 2 * v8, *MEMORY[0x1E0CB1130], v6);
  v12(v11 + 3 * v8, *MEMORY[0x1E0CB1140], v6);
  v12(v11 + 4 * v8, *MEMORY[0x1E0CB1178], v6);
  v12(v11 + 5 * v8, *MEMORY[0x1E0CB1188], v6);
  sub_1C011F784();
  sub_1C0301E1C();
  swift_bridgeObjectRelease();
  sub_1C0301834();
  v13 = sub_1C0301894();
  if ((v14 & 1) != 0)
    goto LABEL_4;
  v15 = __OFADD__(v13, v17[0]);
  result = v13 + v17[0];
  if (!v15)
  {
    sub_1C03018A0();
LABEL_4:
    sub_1C0301870();
    sub_1C03018C4();
    sub_1C03018DC();
    sub_1C0301E58();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C02AC90C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(unint64_t, _QWORD, uint64_t);
  uint64_t v13;
  char v14;
  BOOL v15;
  uint64_t result;
  _QWORD v17[2];

  v17[0] = a2;
  v17[1] = a1;
  v2 = sub_1C0301954();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725E18);
  v6 = sub_1C0301EAC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C030AAE0;
  v11 = v10 + v9;
  v12 = *(void (**)(unint64_t, _QWORD, uint64_t))(v7 + 104);
  v12(v11, *MEMORY[0x1E0CB1158], v6);
  v12(v11 + v8, *MEMORY[0x1E0CB1160], v6);
  v12(v11 + 2 * v8, *MEMORY[0x1E0CB1130], v6);
  v12(v11 + 3 * v8, *MEMORY[0x1E0CB1140], v6);
  v12(v11 + 4 * v8, *MEMORY[0x1E0CB1178], v6);
  v12(v11 + 5 * v8, *MEMORY[0x1E0CB1188], v6);
  sub_1C011F784();
  sub_1C0301E1C();
  swift_bridgeObjectRelease();
  v13 = sub_1C03018B8();
  if ((v14 & 1) != 0)
    goto LABEL_4;
  v15 = __OFADD__(v13, v17[0]);
  result = v13 + v17[0];
  if (!v15)
  {
    sub_1C03018C4();
LABEL_4:
    sub_1C03018DC();
    sub_1C0301E58();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C02ACAFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(unint64_t, uint64_t, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v43 = a2;
  v44 = a1;
  v42 = a3;
  v3 = sub_1C0301EAC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1C0301CFC();
  v39 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v37 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728360);
  v8 = MEMORY[0x1E0C80A78](v7);
  v40 = (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v34 - v10;
  v12 = sub_1C0301954();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725E18);
  v16 = *(_QWORD *)(v4 + 72);
  v17 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C03084B0;
  v19 = v18 + v17;
  v20 = *MEMORY[0x1E0CB10F8];
  v35 = v4;
  v21 = *(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 104);
  v21(v19, v20, v3);
  v22 = v19 + v16;
  v23 = v43;
  v24 = *MEMORY[0x1E0CB1118];
  v36 = v3;
  v25 = v3;
  v26 = (uint64_t)v11;
  v21(v22, v24, v25);
  sub_1C011F784();
  sub_1C0301E1C();
  swift_bridgeObjectRelease();
  sub_1C0301E58();
  if (!v23)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return sub_1C0082138(v26, v42);
  }
  v27 = v13;
  v44 = v12;
  v28 = v40;
  sub_1C0055ED0(v26, v40, &qword_1ED728360);
  v29 = v41;
  if (__swift_getEnumTagSinglePayload(v28, 1, v41) == 1)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v44);
    sub_1C0056C9C(v28, &qword_1ED728360);
    return sub_1C0082138(v26, v42);
  }
  v31 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v37, v28, v29);
  v32 = v38;
  v33 = v36;
  result = ((uint64_t (*)(char *, _QWORD, uint64_t))v21)(v38, *MEMORY[0x1E0CB1130], v36);
  if ((unsigned __int128)(v23 * (__int128)7) >> 64 == (7 * v23) >> 63)
  {
    sub_1C0301E70();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v33);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v31, v29);
    sub_1C0056C9C(v26, &qword_1ED728360);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v15, v44);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C02ACE38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(unint64_t, _QWORD, uint64_t);
  uint64_t v13;
  char v14;
  BOOL v15;
  uint64_t result;
  _QWORD v17[2];

  v17[0] = a2;
  v17[1] = a1;
  v2 = sub_1C0301954();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725E18);
  v6 = sub_1C0301EAC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C030AAE0;
  v11 = v10 + v9;
  v12 = *(void (**)(unint64_t, _QWORD, uint64_t))(v7 + 104);
  v12(v11, *MEMORY[0x1E0CB1158], v6);
  v12(v11 + v8, *MEMORY[0x1E0CB1160], v6);
  v12(v11 + 2 * v8, *MEMORY[0x1E0CB1130], v6);
  v12(v11 + 3 * v8, *MEMORY[0x1E0CB1140], v6);
  v12(v11 + 4 * v8, *MEMORY[0x1E0CB1178], v6);
  v12(v11 + 5 * v8, *MEMORY[0x1E0CB1188], v6);
  sub_1C011F784();
  sub_1C0301E1C();
  swift_bridgeObjectRelease();
  sub_1C0301834();
  sub_1C03018A0();
  v13 = sub_1C030187C();
  if ((v14 & 1) != 0)
    goto LABEL_4;
  v15 = __OFADD__(v13, v17[0]);
  result = v13 + v17[0];
  if (!v15)
  {
    sub_1C0301888();
LABEL_4:
    sub_1C0301870();
    sub_1C03018C4();
    sub_1C03018DC();
    sub_1C0301E58();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C02AD058(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(unint64_t, _QWORD, uint64_t);
  uint64_t v13;
  char v14;
  BOOL v15;
  uint64_t result;
  _QWORD v17[2];

  v17[0] = a2;
  v17[1] = a1;
  v2 = sub_1C0301954();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725E18);
  v6 = sub_1C0301EAC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C030AAE0;
  v11 = v10 + v9;
  v12 = *(void (**)(unint64_t, _QWORD, uint64_t))(v7 + 104);
  v12(v11, *MEMORY[0x1E0CB1158], v6);
  v12(v11 + v8, *MEMORY[0x1E0CB1160], v6);
  v12(v11 + 2 * v8, *MEMORY[0x1E0CB1130], v6);
  v12(v11 + 3 * v8, *MEMORY[0x1E0CB1140], v6);
  v12(v11 + 4 * v8, *MEMORY[0x1E0CB1178], v6);
  v12(v11 + 5 * v8, *MEMORY[0x1E0CB1188], v6);
  sub_1C011F784();
  sub_1C0301E1C();
  swift_bridgeObjectRelease();
  v13 = sub_1C0301828();
  if ((v14 & 1) != 0)
    goto LABEL_4;
  v15 = __OFADD__(v13, v17[0]);
  result = v13 + v17[0];
  if (!v15)
  {
    sub_1C0301834();
LABEL_4:
    sub_1C0301870();
    sub_1C03018C4();
    sub_1C03018DC();
    sub_1C0301E58();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  __break(1u);
  return result;
}

uint64_t OUTLINED_FUNCTION_3_136()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_4_107()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_13_66()
{
  uint64_t v0;

  return v0;
}

void *sub_1C02AD294(unint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char **v7;
  id v8;
  void *v9;
  id v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_22;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_1C03047F8())
  {
    v20 = v4;
    v5 = 0;
    v6 = v3 & 0xC000000000000001;
    v21 = v3 + 32;
    v22 = a2;
    v23 = v3;
    v24 = a2 + 56;
    v7 = &selRef_setTimestampSec_;
    v19 = v3 & 0xC000000000000001;
    while (1)
    {
      v8 = v6 ? (id)MEMORY[0x1C3B975EC](v5, v3) : *(id *)(v21 + 8 * v5);
      v9 = v8;
      if (__OFADD__(v5++, 1))
        break;
      v11 = objc_msgSend(v8, v7[157]);
      if (v11)
      {
        v12 = v11;
        sub_1C0303EB0();

        v13 = *(_QWORD *)(a2 + 16);
        if (v13)
        {
          sub_1C0303F10();
          sub_1C0303F10();
          swift_bridgeObjectRetain();
          v14 = sub_1C0304054();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v15 = v24;
          if ((v14 & 1) != 0)
          {
LABEL_20:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            return v9;
          }
          while (--v13)
          {
            v16 = v15 + 16;
            sub_1C0303F10();
            sub_1C0303F10();
            v17 = sub_1C0304054();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v15 = v16;
            if ((v17 & 1) != 0)
              goto LABEL_20;
          }

          swift_bridgeObjectRelease();
          a2 = v22;
          swift_bridgeObjectRelease();
          v3 = v23;
          v6 = v19;
          v4 = v20;
        }
        else
        {

          swift_bridgeObjectRelease();
        }
        v7 = &selRef_setTimestampSec_;
      }
      else
      {

      }
      if (v5 == v4)
        goto LABEL_23;
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
  }
LABEL_23:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C02AD51C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1764();
    v2 = v13;
    v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0) - 8);
    v5 = *(_QWORD *)(v4 + 72);
    v6 = (uint64_t *)(((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + a1 + 8);
    do
    {
      v8 = *(v6 - 1);
      v7 = *v6;
      v10 = *(_QWORD *)(v13 + 16);
      v9 = *(_QWORD *)(v13 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1)
        sub_1C00B1764();
      v6 = (uint64_t *)((char *)v6 + v5);
      *(_QWORD *)(v13 + 16) = v10 + 1;
      v11 = v13 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v8;
      *(_QWORD *)(v11 + 40) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_1C02AD614(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  _QWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  os_log_type_t v23;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t *, uint64_t, void (*)(void *, char), _QWORD *, uint64_t, uint64_t);
  _QWORD *v33;
  uint64_t v34[89];
  uint64_t v35[2];
  char v36;
  uint64_t v37[7];
  uint64_t v38;
  _BYTE v39[8];
  uint64_t v40;
  _BYTE v42[56];
  uint64_t v43;
  _BYTE v44[120];
  _BYTE v45[568];

  v9 = (_QWORD *)OUTLINED_FUNCTION_16_0();
  v9[2] = a3;
  v9[3] = a4;
  v33 = v9;
  v9[4] = a5;
  OUTLINED_FUNCTION_33_21(v44, a1);
  v10 = qword_1EF5B7F08;
  swift_retain_n();
  swift_retain_n();
  v11 = a5;
  if (v10 != -1)
    swift_once();
  v12 = sub_1C0303B98();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EF5FC6B0);
  OUTLINED_FUNCTION_11_80();
  OUTLINED_FUNCTION_11_80();
  v13 = OUTLINED_FUNCTION_12_21();
  v14 = sub_1C03042E8();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v35[0] = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v15 = 136315138;
    OUTLINED_FUNCTION_4_108();
    v16 = sub_1C01A84E0();
    v37[0] = sub_1C003E6D8(v16, v17, v35);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_7_97();
    OUTLINED_FUNCTION_7_97();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v13, v14, "searching for location: %s", v15);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_7_97();
  OUTLINED_FUNCTION_7_97();

  OUTLINED_FUNCTION_11_80();
  OUTLINED_FUNCTION_11_80();
  OUTLINED_FUNCTION_12_21();
  v18 = OUTLINED_FUNCTION_9_1();
  if (os_log_type_enabled((os_log_t)&loc_1C0305000, v18))
  {
    v19 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v34[0] = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v19 = 136315138;
    sub_1C005578C((uint64_t)v45, (uint64_t)v37, &qword_1EF5BF528);
    if (sub_1C00B8890((uint64_t)v37) == 1
      || (sub_1C005578C((uint64_t)&v38, (uint64_t)v35, &qword_1EF5BF540), sub_1C00B8890((uint64_t)v35) == 1)
      || !v35[1])
    {
      v20 = 9;
    }
    else
    {
      v20 = v36;
    }
    LOBYTE(v35[0]) = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3340);
    v21 = OUTLINED_FUNCTION_23_43();
    v35[0] = sub_1C003E6D8(v21, v22, v34);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_7_97();
    OUTLINED_FUNCTION_7_97();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, &loc_1C0305000, v18, "boundedValue: %s", v19);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_7_97();
  OUTLINED_FUNCTION_7_97();

  OUTLINED_FUNCTION_11_80();
  OUTLINED_FUNCTION_11_80();
  OUTLINED_FUNCTION_12_21();
  v23 = OUTLINED_FUNCTION_9_1();
  if (os_log_type_enabled((os_log_t)&loc_1C0305000, v23))
  {
    v25 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v37[0] = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v25 = 136315138;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3338);
    v26 = OUTLINED_FUNCTION_23_43();
    v35[0] = sub_1C003E6D8(v26, v27, v37);
    OUTLINED_FUNCTION_25_34();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_7_97();
    OUTLINED_FUNCTION_7_97();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, &loc_1C0305000, v23, "event: %s", v25);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_7_97();
  OUTLINED_FUNCTION_7_97();

  sub_1C005578C((uint64_t)v45, (uint64_t)v42, &qword_1EF5BF528);
  if (sub_1C00B8890((uint64_t)v42) != 1)
  {
    sub_1C005578C((uint64_t)&v43, (uint64_t)v39, &qword_1EF5BF540);
    if (sub_1C00B8890((uint64_t)v39) != 1)
    {
      if (v40)
        __asm { BR              X10 }
    }
  }
  v28 = (_QWORD *)(a2 + *(int *)(type metadata accessor for LocationSuggestionGenerator() + 24));
  v29 = v28[3];
  v30 = v28[4];
  __swift_project_boxed_opaque_existential_1(v28, v29);
  v37[3] = (uint64_t)&type metadata for Location;
  v37[4] = (uint64_t)&off_1E799B7E0;
  v37[0] = OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_33_21((void *)(v37[0] + 16), v44);
  v31 = *(void (**)(uint64_t *, uint64_t, void (*)(void *, char), _QWORD *, uint64_t, uint64_t))(v30 + 8);
  OUTLINED_FUNCTION_11_80();
  v31(v37, a2, sub_1C02B6550, v33, v29, v30);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v37);
  swift_release();
  swift_release();
  swift_release();
  swift_release_n();
  swift_release_n();

}

void *sub_1C02AE5B8(void *result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  id v5;

  if (a5 <= 4u)
  {
    if (((1 << a5) & 0x15) == 0)
      v5 = result;
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

void *destroy for LocationInferenceError(uint64_t a1)
{
  return sub_1C02AE618(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

void *sub_1C02AE618(void *result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 <= 4u)
  {
    if (((1 << a5) & 0x15) == 0)

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for LocationInferenceError(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1C02AE5B8(*(void **)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for LocationInferenceError(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1C02AE5B8(*(void **)a2, v4, v5, v6, v7);
  v8 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1C02AE618(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for LocationInferenceError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1C02AE618(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationInferenceError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFB && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 250;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 5)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationInferenceError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 251;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C02AE818(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 4u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_1C02AE830(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(_QWORD *)result = a2 - 5;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 5;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LocationInferenceError()
{
  return &type metadata for LocationInferenceError;
}

uint64_t *sub_1C02AE85C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  __int128 v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  id v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  _QWORD *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  __int128 v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t Expander;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  void *v127;
  id v128;
  uint64_t v129;
  _QWORD *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  int *v135;
  uint64_t v136;
  __int128 v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  int *v148;
  uint64_t v149;
  _QWORD *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  void (*v157)(char *, char *, uint64_t);
  int *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  __int128 v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  __int128 v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t *v184;
  void (*v185)(char *, char *, uint64_t);
  uint64_t v186;
  _QWORD *v187;
  char *v188;
  int *v189;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v31 = *a2;
    *a1 = *a2;
    v32 = (uint64_t *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1C0301DB0();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for LocationResolutionContext();
    v8((uint64_t *)((char *)a1 + v9[5]), (uint64_t *)((char *)a2 + v9[5]), v7);
    v8((uint64_t *)((char *)a1 + v9[6]), (uint64_t *)((char *)a2 + v9[6]), v7);
    v10 = v9[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1C0301F00();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    v14 = v9[8];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
    v17 = v9[9];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v20 = a3[6];
    v21 = *(_OWORD *)((char *)a2 + v20 + 24);
    *(_OWORD *)((char *)a1 + v20 + 24) = v21;
    (**(void (***)(void))(v21 - 8))();
    v22 = a3[7];
    v23 = *(_OWORD *)((char *)a2 + v22 + 24);
    *(_OWORD *)((char *)a1 + v22 + 24) = v23;
    (**(void (***)(void))(v23 - 8))();
    v24 = a3[8];
    v25 = *(_OWORD *)((char *)a2 + v24 + 24);
    *(_OWORD *)((char *)a1 + v24 + 24) = v25;
    (**(void (***)(void))(v25 - 8))();
    v26 = a3[9];
    v184 = a1;
    v27 = (uint64_t *)((char *)a1 + v26);
    v28 = (uint64_t *)((char *)a2 + v26);
    v29 = type metadata accessor for HypocorismGenerator();
    v186 = v7;
    if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2658);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      *v27 = *v28;
      v33 = *(int *)(v29 + 20);
      v34 = (char *)v27 + v33;
      v35 = (char *)v28 + v33;
      *(_QWORD *)((char *)v27 + v33) = *(_QWORD *)((char *)v28 + v33);
      v36 = *(int *)(type metadata accessor for StringTokenizer() + 20);
      v37 = &v34[v36];
      v38 = &v35[v36];
      swift_retain();
      swift_retain();
      v8((uint64_t *)v37, (uint64_t *)v38, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
    }
    v39 = (void (*)(char *, char *, uint64_t))v8;
    v189 = (int *)type metadata accessor for CandidateContactGenerator(0);
    v40 = v189[5];
    v41 = (_QWORD *)((char *)v27 + v40);
    v42 = (_QWORD *)((char *)v28 + v40);
    v43 = type metadata accessor for MeCardContactGenerator();
    if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2660);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      v45 = v7;
    }
    else
    {
      v46 = v42[1];
      *v41 = *v42;
      v41[1] = v46;
      v47 = *(int *)(v43 + 24);
      v48 = (char *)v41 + v47;
      v49 = (char *)v42 + v47;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45 = v186;
      v39(v48, v49, v186);
      __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v43);
    }
    v50 = v189[6];
    v51 = (_QWORD *)((char *)v27 + v50);
    v52 = (_QWORD *)((char *)v28 + v50);
    v53 = type metadata accessor for RelationshipAliasGenerator();
    v187 = v27;
    v185 = v39;
    if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53))
    {
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726CA8);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      v55 = v52[1];
      *v51 = *v52;
      v51[1] = v55;
      v51[2] = v52[2];
      v56 = *(int *)(v53 + 24);
      v57 = (char *)v51 + v56;
      v58 = (char *)v52 + v56;
      *(_QWORD *)((char *)v51 + v56) = *(_QWORD *)((char *)v52 + v56);
      v59 = *(int *)(type metadata accessor for StringTokenizer() + 20);
      v60 = &v57[v59];
      v61 = &v58[v59];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      v62 = v60;
      v27 = v187;
      v185(v62, v61, v45);
      __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v53);
    }
    v63 = v189[7];
    v64 = (_QWORD *)((char *)v27 + v63);
    v65 = (_QWORD *)((char *)v28 + v63);
    v188 = (char *)v28;
    if (*v65)
    {
      v66 = v65[1];
      *v64 = *v65;
      v64[1] = v66;
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)v64 = *(_OWORD *)v65;
    }
    *(_QWORD *)((char *)v27 + v189[8]) = *(_QWORD *)((char *)v28 + v189[8]);
    v67 = v189[9];
    v68 = (char *)v27 + v67;
    v69 = (char *)v28 + v67;
    v70 = *(_OWORD *)((char *)v28 + v67 + 24);
    *(_OWORD *)((char *)v27 + v67 + 24) = v70;
    v71 = v70;
    v72 = **(void (***)(char *, char *, uint64_t))(v70 - 8);
    swift_retain();
    v72(v68, v69, v71);
    v73 = (int *)type metadata accessor for ContactsFrameworkMatcher();
    v74 = v73[5];
    v75 = &v68[v74];
    v76 = &v69[v74];
    *(_QWORD *)&v68[v74] = *(_QWORD *)&v69[v74];
    v77 = type metadata accessor for StringTokenizer();
    v78 = *(int *)(v77 + 20);
    v79 = &v75[v78];
    v80 = &v76[v78];
    swift_retain();
    v185(v79, v80, v186);
    v68[v73[6]] = v69[v73[6]];
    v68[v73[7]] = v69[v73[7]];
    v81 = v189[10];
    v82 = (char *)v187 + v81;
    v83 = &v188[v81];
    v185((char *)v187 + v81, &v188[v81], v186);
    v84 = *(int *)(type metadata accessor for SiriVocabularySearcher(0) + 20);
    v85 = *(void **)&v83[v84];
    *(_QWORD *)&v82[v84] = v85;
    v86 = *(int *)(type metadata accessor for ThirdPartyContactMatcher(0) + 20);
    v87 = &v82[v86];
    v88 = &v83[v86];
    *(_QWORD *)v87 = *(_QWORD *)v88;
    v89 = *(int *)(v77 + 20);
    v90 = &v87[v89];
    v91 = &v88[v89];
    v92 = v85;
    swift_retain();
    v185(v90, v91, v186);
    v93 = v189[11];
    v94 = (char *)v187 + v93;
    v95 = &v188[v93];
    v96 = *(_QWORD *)&v188[v93 + 24];
    if (v96)
    {
      v97 = *((_QWORD *)v95 + 4);
      *((_QWORD *)v94 + 3) = v96;
      *((_QWORD *)v94 + 4) = v97;
      (**(void (***)(char *, char *))(v96 - 8))(v94, v95);
      v98 = *((_OWORD *)v95 + 4);
      *((_OWORD *)v94 + 4) = v98;
      (**(void (***)(uint64_t, uint64_t))(v98 - 8))((uint64_t)(v94 + 40), (uint64_t)(v95 + 40));
    }
    else
    {
      memcpy((char *)v187 + v93, &v188[v93], 0x50uLL);
    }
    v99 = v189[12];
    v100 = (_QWORD *)((char *)v187 + v99);
    v101 = &v188[v99];
    *v100 = *(_QWORD *)v101;
    v102 = *(int *)(v77 + 20);
    v103 = (char *)v100 + v102;
    v104 = &v101[v102];
    swift_retain();
    v185(v103, v104, v186);
    v105 = v189[13];
    v106 = (char *)v187 + v105;
    v107 = &v188[v105];
    v108 = *(_OWORD *)&v188[v105 + 24];
    *(_OWORD *)((char *)v187 + v105 + 24) = v108;
    (**(void (***)(char *, char *))(v108 - 8))((char *)v187 + v105, &v188[v105]);
    v109 = v73[5];
    v110 = &v106[v109];
    v111 = &v107[v109];
    *(_QWORD *)v110 = *(_QWORD *)v111;
    v112 = *(int *)(v77 + 20);
    v113 = &v110[v112];
    v114 = &v111[v112];
    swift_retain();
    v185(v113, v114, v186);
    v106[v73[6]] = v107[v73[6]];
    v106[v73[7]] = v107[v73[7]];
    *((_BYTE *)v187 + v189[14]) = v188[v189[14]];
    v115 = v189[15];
    v116 = (char *)v187 + v115;
    v117 = &v188[v115];
    Expander = type metadata accessor for EmojiQueryExpander();
    if (__swift_getEnumTagSinglePayload((uint64_t)v117, 1, Expander))
    {
      v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2668);
      memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
    }
    else
    {
      v185(v116, v117, v186);
      v120 = *(int *)(Expander + 20);
      v121 = &v116[v120];
      v122 = &v117[v120];
      *(_QWORD *)v121 = *(_QWORD *)v122;
      v123 = *(int *)(v77 + 20);
      v124 = &v121[v123];
      v125 = &v122[v123];
      swift_retain();
      v185(v124, v125, v186);
      v126 = *(int *)(Expander + 24);
      v127 = *(void **)&v117[v126];
      *(_QWORD *)&v116[v126] = v127;
      v128 = v127;
      __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, Expander);
    }
    v129 = v189[16];
    v130 = (_QWORD *)((char *)v187 + v129);
    v131 = &v188[v129];
    *v130 = *(_QWORD *)&v188[v129];
    v132 = *(int *)(v77 + 20);
    v133 = (char *)v130 + v132;
    v134 = &v131[v132];
    swift_retain();
    v185(v133, v134, v186);
    v135 = (int *)type metadata accessor for AsrE3CandidateExpander();
    v136 = v135[5];
    v137 = *(_OWORD *)&v131[v136 + 24];
    *(_OWORD *)((char *)v130 + v136 + 24) = v137;
    (**(void (***)(void))(v137 - 8))();
    v138 = v135[6];
    v139 = (char *)v130 + v138;
    v140 = &v131[v138];
    *v139 = *v140;
    v141 = *((_QWORD *)v140 + 2);
    *((_QWORD *)v139 + 1) = *((_QWORD *)v140 + 1);
    *((_QWORD *)v139 + 2) = v141;
    *(_OWORD *)(v139 + 24) = *(_OWORD *)(v140 + 24);
    *(_OWORD *)(v139 + 40) = *(_OWORD *)(v140 + 40);
    v139[56] = v140[56];
    *(_QWORD *)((char *)v130 + v135[7]) = *(_QWORD *)&v131[v135[7]];
    *(_QWORD *)((char *)v187 + v189[17]) = *(_QWORD *)&v188[v189[17]];
    v142 = v189[18];
    v143 = (_QWORD *)((char *)v187 + v142);
    v144 = &v188[v142];
    *v143 = *(_QWORD *)&v188[v142];
    v145 = *(int *)(v77 + 20);
    v146 = (char *)v143 + v145;
    v147 = &v144[v145];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    v185(v146, v147, v186);
    v148 = (int *)type metadata accessor for ContactSignalProviders(0);
    v149 = v148[5];
    v150 = (_QWORD *)((char *)v143 + v149);
    v151 = &v144[v149];
    v152 = *((_QWORD *)v151 + 1);
    *v150 = *(_QWORD *)v151;
    v150[1] = v152;
    v153 = v148[6];
    v154 = (char *)v143 + v153;
    v155 = &v144[v153];
    v156 = sub_1C030367C();
    v157 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 16);
    swift_bridgeObjectRetain();
    v157(v154, v155, v156);
    v158 = (int *)type metadata accessor for SiriRemembersContactSignalProvider();
    v154[v158[5]] = v155[v158[5]];
    v159 = v158[6];
    v160 = &v154[v159];
    v161 = &v155[v159];
    v162 = *((_QWORD *)v161 + 1);
    *(_QWORD *)v160 = *(_QWORD *)v161;
    *((_QWORD *)v160 + 1) = v162;
    v163 = v158[7];
    v164 = &v154[v163];
    v165 = &v155[v163];
    v166 = *(_QWORD *)&v155[v163 + 24];
    swift_bridgeObjectRetain();
    if (v166)
    {
      v167 = *((_QWORD *)v165 + 4);
      *((_QWORD *)v164 + 3) = v166;
      *((_QWORD *)v164 + 4) = v167;
      (**(void (***)(char *, uint64_t, uint64_t))(v166 - 8))(v164, (uint64_t)v165, v166);
    }
    else
    {
      v168 = *((_OWORD *)v165 + 1);
      *(_OWORD *)v164 = *(_OWORD *)v165;
      *((_OWORD *)v164 + 1) = v168;
      *((_QWORD *)v164 + 4) = *((_QWORD *)v165 + 4);
    }
    v169 = v158[8];
    v170 = &v154[v169];
    v171 = &v155[v169];
    v172 = *((_QWORD *)v171 + 1);
    *(_QWORD *)v170 = *(_QWORD *)v171;
    *((_QWORD *)v170 + 1) = v172;
    *(_QWORD *)((char *)v143 + v148[7]) = *(_QWORD *)&v144[v148[7]];
    *(_OWORD *)((char *)v143 + v148[8]) = *(_OWORD *)&v144[v148[8]];
    v173 = v189[19];
    v174 = (char *)v187 + v173;
    v175 = &v188[v173];
    v176 = *(_QWORD *)&v188[v173 + 24];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v176)
    {
      v177 = *((_QWORD *)v175 + 4);
      *((_QWORD *)v174 + 3) = v176;
      *((_QWORD *)v174 + 4) = v177;
      (**(void (***)(char *, char *, uint64_t))(v176 - 8))(v174, v175, v176);
    }
    else
    {
      v178 = *((_OWORD *)v175 + 1);
      *(_OWORD *)v174 = *(_OWORD *)v175;
      *((_OWORD *)v174 + 1) = v178;
      *((_QWORD *)v174 + 4) = *((_QWORD *)v175 + 4);
    }
    v32 = v184;
    *((_BYTE *)v187 + v189[20]) = v188[v189[20]];
    v179 = v189[21];
    v180 = (char *)v187 + v179;
    v181 = &v188[v179];
    *v180 = *v181;
    v182 = *((_QWORD *)v181 + 2);
    *((_QWORD *)v180 + 1) = *((_QWORD *)v181 + 1);
    *((_QWORD *)v180 + 2) = v182;
    *(_OWORD *)(v180 + 24) = *(_OWORD *)(v181 + 24);
    *(_OWORD *)(v180 + 40) = *(_OWORD *)(v181 + 40);
    v180[56] = v181[56];
    *(_QWORD *)((char *)v187 + v189[22]) = *(_QWORD *)&v188[v189[22]];
    *(_QWORD *)((char *)v187 + v189[23]) = *(_QWORD *)&v188[v189[23]];
    *(_QWORD *)((char *)v187 + v189[24]) = *(_QWORD *)&v188[v189[24]];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v32;
}

uint64_t sub_1C02AF298(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t Expander;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v4 = sub_1C0301DB0();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = (int *)type metadata accessor for LocationResolutionContext();
  v5(a1 + v6[5], v4);
  v5(a1 + v6[6], v4);
  v7 = a1 + v6[7];
  v8 = sub_1C0301F00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  __swift_destroy_boxed_opaque_existential_0Tm(a1 + a2[6]);
  __swift_destroy_boxed_opaque_existential_0Tm(a1 + a2[7]);
  __swift_destroy_boxed_opaque_existential_0Tm(a1 + a2[8]);
  v9 = a1 + a2[9];
  v10 = type metadata accessor for HypocorismGenerator();
  if (!__swift_getEnumTagSinglePayload(v9, 1, v10))
  {
    swift_release();
    v11 = v9 + *(int *)(v10 + 20);
    swift_release();
    v12 = type metadata accessor for StringTokenizer();
    v5(v11 + *(int *)(v12 + 20), v4);
  }
  v13 = (int *)type metadata accessor for CandidateContactGenerator(0);
  v14 = v9 + v13[5];
  v15 = type metadata accessor for MeCardContactGenerator();
  if (!__swift_getEnumTagSinglePayload(v14, 1, v15))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5(v14 + *(int *)(v15 + 24), v4);
  }
  v16 = v9 + v13[6];
  v17 = type metadata accessor for RelationshipAliasGenerator();
  if (!__swift_getEnumTagSinglePayload(v16, 1, v17))
  {
    swift_release();
    swift_bridgeObjectRelease();
    v18 = v16 + *(int *)(v17 + 24);
    swift_release();
    v19 = type metadata accessor for StringTokenizer();
    v5(v18 + *(int *)(v19 + 20), v4);
  }
  if (*(_QWORD *)(v9 + v13[7]))
  {
    swift_release();
    swift_release();
  }
  swift_release();
  v20 = v9 + v13[9];
  __swift_destroy_boxed_opaque_existential_0Tm(v20);
  v21 = type metadata accessor for ContactsFrameworkMatcher();
  v22 = v20 + *(int *)(v21 + 20);
  swift_release();
  v23 = type metadata accessor for StringTokenizer();
  v5(v22 + *(int *)(v23 + 20), v4);
  v24 = v9 + v13[10];
  v5(v24, v4);

  v25 = v24 + *(int *)(type metadata accessor for ThirdPartyContactMatcher(0) + 20);
  swift_release();
  v5(v25 + *(int *)(v23 + 20), v4);
  v26 = v9 + v13[11];
  if (*(_QWORD *)(v26 + 24))
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v9 + v13[11]);
    __swift_destroy_boxed_opaque_existential_0Tm(v26 + 40);
  }
  v27 = v9 + v13[12];
  swift_release();
  v5(v27 + *(int *)(v23 + 20), v4);
  v28 = v9 + v13[13];
  __swift_destroy_boxed_opaque_existential_0Tm(v28);
  v29 = v28 + *(int *)(v21 + 20);
  swift_release();
  v5(v29 + *(int *)(v23 + 20), v4);
  v30 = v9 + v13[15];
  Expander = type metadata accessor for EmojiQueryExpander();
  if (!__swift_getEnumTagSinglePayload(v30, 1, Expander))
  {
    v5(v30, v4);
    v32 = v30 + *(int *)(Expander + 20);
    swift_release();
    v5(v32 + *(int *)(v23 + 20), v4);

  }
  v33 = v9 + v13[16];
  swift_release();
  v5(v33 + *(int *)(v23 + 20), v4);
  v34 = type metadata accessor for AsrE3CandidateExpander();
  __swift_destroy_boxed_opaque_existential_0Tm(v33 + *(int *)(v34 + 20));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v35 = v9 + v13[18];
  swift_release();
  v5(v35 + *(int *)(v23 + 20), v4);
  v36 = type metadata accessor for ContactSignalProviders(0);
  swift_bridgeObjectRelease();
  v37 = v35 + *(int *)(v36 + 24);
  v38 = sub_1C030367C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
  v39 = type metadata accessor for SiriRemembersContactSignalProvider();
  swift_bridgeObjectRelease();
  v40 = v37 + *(int *)(v39 + 28);
  if (*(_QWORD *)(v40 + 24))
    __swift_destroy_boxed_opaque_existential_0Tm(v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v41 = v9 + v13[19];
  if (*(_QWORD *)(v41 + 24))
    __swift_destroy_boxed_opaque_existential_0Tm(v41);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1C02AF750(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  __int128 v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  int *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  id v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  _QWORD *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  __int128 v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t Expander;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  void *v124;
  id v125;
  uint64_t v126;
  _QWORD *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  int *v132;
  uint64_t v133;
  __int128 v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  int *v145;
  uint64_t v146;
  _QWORD *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  void (*v154)(char *, char *, uint64_t);
  int *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  __int128 v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  __int128 v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v181;
  void (*v182)(char *, char *, uint64_t);
  uint64_t v183;
  _QWORD *v184;
  char *v185;
  int *v186;

  v6 = sub_1C0301DB0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for LocationResolutionContext();
  v7(a1 + v8[5], a2 + v8[5], v6);
  v7(a1 + v8[6], a2 + v8[6], v6);
  v9 = v8[7];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1C0301F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  v13 = v8[8];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = v8[9];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a3[6];
  v20 = *(_OWORD *)(a2 + v19 + 24);
  *(_OWORD *)(a1 + v19 + 24) = v20;
  (**(void (***)(void))(v20 - 8))();
  v21 = a3[7];
  v22 = *(_OWORD *)(a2 + v21 + 24);
  *(_OWORD *)(a1 + v21 + 24) = v22;
  (**(void (***)(void))(v22 - 8))();
  v23 = a3[8];
  v24 = *(_OWORD *)(a2 + v23 + 24);
  *(_OWORD *)(a1 + v23 + 24) = v24;
  (**(void (***)(void))(v24 - 8))();
  v25 = a3[9];
  v181 = a1;
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  v28 = type metadata accessor for HypocorismGenerator();
  v183 = v6;
  if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2658);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    *v26 = *v27;
    v30 = *(int *)(v28 + 20);
    v31 = (char *)v26 + v30;
    v32 = (char *)v27 + v30;
    *(_QWORD *)((char *)v26 + v30) = *(_QWORD *)((char *)v27 + v30);
    v33 = *(int *)(type metadata accessor for StringTokenizer() + 20);
    v34 = &v31[v33];
    v35 = &v32[v33];
    swift_retain();
    swift_retain();
    v7((uint64_t)v34, (uint64_t)v35, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v28);
  }
  v36 = (void (*)(char *, char *, uint64_t))v7;
  v186 = (int *)type metadata accessor for CandidateContactGenerator(0);
  v37 = v186[5];
  v38 = (_QWORD *)((char *)v26 + v37);
  v39 = (_QWORD *)((char *)v27 + v37);
  v40 = type metadata accessor for MeCardContactGenerator();
  if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v40))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2660);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    v42 = v6;
  }
  else
  {
    v43 = v39[1];
    *v38 = *v39;
    v38[1] = v43;
    v44 = *(int *)(v40 + 24);
    v45 = (char *)v38 + v44;
    v46 = (char *)v39 + v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42 = v183;
    v36(v45, v46, v183);
    __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v40);
  }
  v47 = v186[6];
  v48 = (_QWORD *)((char *)v26 + v47);
  v49 = (_QWORD *)((char *)v27 + v47);
  v50 = type metadata accessor for RelationshipAliasGenerator();
  v184 = v26;
  v182 = v36;
  if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v50))
  {
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726CA8);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    v52 = v49[1];
    *v48 = *v49;
    v48[1] = v52;
    v48[2] = v49[2];
    v53 = *(int *)(v50 + 24);
    v54 = (char *)v48 + v53;
    v55 = (char *)v49 + v53;
    *(_QWORD *)((char *)v48 + v53) = *(_QWORD *)((char *)v49 + v53);
    v56 = *(int *)(type metadata accessor for StringTokenizer() + 20);
    v57 = &v54[v56];
    v58 = &v55[v56];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v59 = v57;
    v26 = v184;
    v182(v59, v58, v42);
    __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v50);
  }
  v60 = v186[7];
  v61 = (_QWORD *)((char *)v26 + v60);
  v62 = (_QWORD *)((char *)v27 + v60);
  v185 = (char *)v27;
  if (*v62)
  {
    v63 = v62[1];
    *v61 = *v62;
    v61[1] = v63;
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)v61 = *(_OWORD *)v62;
  }
  *(_QWORD *)((char *)v26 + v186[8]) = *(_QWORD *)((char *)v27 + v186[8]);
  v64 = v186[9];
  v65 = (char *)v26 + v64;
  v66 = (char *)v27 + v64;
  v67 = *(_OWORD *)((char *)v27 + v64 + 24);
  *(_OWORD *)((char *)v26 + v64 + 24) = v67;
  v68 = v67;
  v69 = **(void (***)(char *, char *, uint64_t))(v67 - 8);
  swift_retain();
  v69(v65, v66, v68);
  v70 = (int *)type metadata accessor for ContactsFrameworkMatcher();
  v71 = v70[5];
  v72 = &v65[v71];
  v73 = &v66[v71];
  *(_QWORD *)&v65[v71] = *(_QWORD *)&v66[v71];
  v74 = type metadata accessor for StringTokenizer();
  v75 = *(int *)(v74 + 20);
  v76 = &v72[v75];
  v77 = &v73[v75];
  swift_retain();
  v182(v76, v77, v183);
  v65[v70[6]] = v66[v70[6]];
  v65[v70[7]] = v66[v70[7]];
  v78 = v186[10];
  v79 = (char *)v184 + v78;
  v80 = &v185[v78];
  v182((char *)v184 + v78, &v185[v78], v183);
  v81 = *(int *)(type metadata accessor for SiriVocabularySearcher(0) + 20);
  v82 = *(void **)&v80[v81];
  *(_QWORD *)&v79[v81] = v82;
  v83 = *(int *)(type metadata accessor for ThirdPartyContactMatcher(0) + 20);
  v84 = &v79[v83];
  v85 = &v80[v83];
  *(_QWORD *)v84 = *(_QWORD *)v85;
  v86 = *(int *)(v74 + 20);
  v87 = &v84[v86];
  v88 = &v85[v86];
  v89 = v82;
  swift_retain();
  v182(v87, v88, v183);
  v90 = v186[11];
  v91 = (char *)v184 + v90;
  v92 = &v185[v90];
  v93 = *(_QWORD *)&v185[v90 + 24];
  if (v93)
  {
    v94 = *((_QWORD *)v92 + 4);
    *((_QWORD *)v91 + 3) = v93;
    *((_QWORD *)v91 + 4) = v94;
    (**(void (***)(char *, char *))(v93 - 8))(v91, v92);
    v95 = *((_OWORD *)v92 + 4);
    *((_OWORD *)v91 + 4) = v95;
    (**(void (***)(uint64_t, uint64_t))(v95 - 8))((uint64_t)(v91 + 40), (uint64_t)(v92 + 40));
  }
  else
  {
    memcpy((char *)v184 + v90, &v185[v90], 0x50uLL);
  }
  v96 = v186[12];
  v97 = (_QWORD *)((char *)v184 + v96);
  v98 = &v185[v96];
  *v97 = *(_QWORD *)v98;
  v99 = *(int *)(v74 + 20);
  v100 = (char *)v97 + v99;
  v101 = &v98[v99];
  swift_retain();
  v182(v100, v101, v183);
  v102 = v186[13];
  v103 = (char *)v184 + v102;
  v104 = &v185[v102];
  v105 = *(_OWORD *)&v185[v102 + 24];
  *(_OWORD *)((char *)v184 + v102 + 24) = v105;
  (**(void (***)(char *, char *))(v105 - 8))((char *)v184 + v102, &v185[v102]);
  v106 = v70[5];
  v107 = &v103[v106];
  v108 = &v104[v106];
  *(_QWORD *)v107 = *(_QWORD *)v108;
  v109 = *(int *)(v74 + 20);
  v110 = &v107[v109];
  v111 = &v108[v109];
  swift_retain();
  v182(v110, v111, v183);
  v103[v70[6]] = v104[v70[6]];
  v103[v70[7]] = v104[v70[7]];
  *((_BYTE *)v184 + v186[14]) = v185[v186[14]];
  v112 = v186[15];
  v113 = (char *)v184 + v112;
  v114 = &v185[v112];
  Expander = type metadata accessor for EmojiQueryExpander();
  if (__swift_getEnumTagSinglePayload((uint64_t)v114, 1, Expander))
  {
    v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2668);
    memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
  }
  else
  {
    v182(v113, v114, v183);
    v117 = *(int *)(Expander + 20);
    v118 = &v113[v117];
    v119 = &v114[v117];
    *(_QWORD *)v118 = *(_QWORD *)v119;
    v120 = *(int *)(v74 + 20);
    v121 = &v118[v120];
    v122 = &v119[v120];
    swift_retain();
    v182(v121, v122, v183);
    v123 = *(int *)(Expander + 24);
    v124 = *(void **)&v114[v123];
    *(_QWORD *)&v113[v123] = v124;
    v125 = v124;
    __swift_storeEnumTagSinglePayload((uint64_t)v113, 0, 1, Expander);
  }
  v126 = v186[16];
  v127 = (_QWORD *)((char *)v184 + v126);
  v128 = &v185[v126];
  *v127 = *(_QWORD *)&v185[v126];
  v129 = *(int *)(v74 + 20);
  v130 = (char *)v127 + v129;
  v131 = &v128[v129];
  swift_retain();
  v182(v130, v131, v183);
  v132 = (int *)type metadata accessor for AsrE3CandidateExpander();
  v133 = v132[5];
  v134 = *(_OWORD *)&v128[v133 + 24];
  *(_OWORD *)((char *)v127 + v133 + 24) = v134;
  (**(void (***)(void))(v134 - 8))();
  v135 = v132[6];
  v136 = (char *)v127 + v135;
  v137 = &v128[v135];
  *v136 = *v137;
  v138 = *((_QWORD *)v137 + 2);
  *((_QWORD *)v136 + 1) = *((_QWORD *)v137 + 1);
  *((_QWORD *)v136 + 2) = v138;
  *(_OWORD *)(v136 + 24) = *(_OWORD *)(v137 + 24);
  *(_OWORD *)(v136 + 40) = *(_OWORD *)(v137 + 40);
  v136[56] = v137[56];
  *(_QWORD *)((char *)v127 + v132[7]) = *(_QWORD *)&v128[v132[7]];
  *(_QWORD *)((char *)v184 + v186[17]) = *(_QWORD *)&v185[v186[17]];
  v139 = v186[18];
  v140 = (_QWORD *)((char *)v184 + v139);
  v141 = &v185[v139];
  *v140 = *(_QWORD *)&v185[v139];
  v142 = *(int *)(v74 + 20);
  v143 = (char *)v140 + v142;
  v144 = &v141[v142];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  v182(v143, v144, v183);
  v145 = (int *)type metadata accessor for ContactSignalProviders(0);
  v146 = v145[5];
  v147 = (_QWORD *)((char *)v140 + v146);
  v148 = &v141[v146];
  v149 = *((_QWORD *)v148 + 1);
  *v147 = *(_QWORD *)v148;
  v147[1] = v149;
  v150 = v145[6];
  v151 = (char *)v140 + v150;
  v152 = &v141[v150];
  v153 = sub_1C030367C();
  v154 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 16);
  swift_bridgeObjectRetain();
  v154(v151, v152, v153);
  v155 = (int *)type metadata accessor for SiriRemembersContactSignalProvider();
  v151[v155[5]] = v152[v155[5]];
  v156 = v155[6];
  v157 = &v151[v156];
  v158 = &v152[v156];
  v159 = *((_QWORD *)v158 + 1);
  *(_QWORD *)v157 = *(_QWORD *)v158;
  *((_QWORD *)v157 + 1) = v159;
  v160 = v155[7];
  v161 = &v151[v160];
  v162 = &v152[v160];
  v163 = *(_QWORD *)&v152[v160 + 24];
  swift_bridgeObjectRetain();
  if (v163)
  {
    v164 = *((_QWORD *)v162 + 4);
    *((_QWORD *)v161 + 3) = v163;
    *((_QWORD *)v161 + 4) = v164;
    (**(void (***)(char *, uint64_t, uint64_t))(v163 - 8))(v161, (uint64_t)v162, v163);
  }
  else
  {
    v165 = *((_OWORD *)v162 + 1);
    *(_OWORD *)v161 = *(_OWORD *)v162;
    *((_OWORD *)v161 + 1) = v165;
    *((_QWORD *)v161 + 4) = *((_QWORD *)v162 + 4);
  }
  v166 = v155[8];
  v167 = &v151[v166];
  v168 = &v152[v166];
  v169 = *((_QWORD *)v168 + 1);
  *(_QWORD *)v167 = *(_QWORD *)v168;
  *((_QWORD *)v167 + 1) = v169;
  *(_QWORD *)((char *)v140 + v145[7]) = *(_QWORD *)&v141[v145[7]];
  *(_OWORD *)((char *)v140 + v145[8]) = *(_OWORD *)&v141[v145[8]];
  v170 = v186[19];
  v171 = (char *)v184 + v170;
  v172 = &v185[v170];
  v173 = *(_QWORD *)&v185[v170 + 24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v173)
  {
    v174 = *((_QWORD *)v172 + 4);
    *((_QWORD *)v171 + 3) = v173;
    *((_QWORD *)v171 + 4) = v174;
    (**(void (***)(char *, char *, uint64_t))(v173 - 8))(v171, v172, v173);
  }
  else
  {
    v175 = *((_OWORD *)v172 + 1);
    *(_OWORD *)v171 = *(_OWORD *)v172;
    *((_OWORD *)v171 + 1) = v175;
    *((_QWORD *)v171 + 4) = *((_QWORD *)v172 + 4);
  }
  *((_BYTE *)v184 + v186[20]) = v185[v186[20]];
  v176 = v186[21];
  v177 = (char *)v184 + v176;
  v178 = &v185[v176];
  *v177 = *v178;
  v179 = *((_QWORD *)v178 + 2);
  *((_QWORD *)v177 + 1) = *((_QWORD *)v178 + 1);
  *((_QWORD *)v177 + 2) = v179;
  *(_OWORD *)(v177 + 24) = *(_OWORD *)(v178 + 24);
  *(_OWORD *)(v177 + 40) = *(_OWORD *)(v178 + 40);
  v177[56] = v178[56];
  *(_QWORD *)((char *)v184 + v186[22]) = *(_QWORD *)&v185[v186[22]];
  *(_QWORD *)((char *)v184 + v186[23]) = *(_QWORD *)&v185[v186[23]];
  *(_QWORD *)((char *)v184 + v186[24]) = *(_QWORD *)&v185[v186[24]];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return v181;
}

uint64_t sub_1C02B0160(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  int EnumTagSinglePayload;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  int *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  void *v78;
  void *v79;
  id v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t Expander;
  int v102;
  void (*v103)(char *, char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  void *v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  int *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  int *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  int *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  __int128 v144;
  __int128 v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  __int128 v156;
  __int128 v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  void *v174;
  void *v175;
  id v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  void (*v181)(char *, char *, uint64_t);
  char *v182;
  _QWORD *v183;
  int *v184;

  v6 = sub_1C0301DB0();
  v177 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v177 + 24);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for LocationResolutionContext();
  v7(a1 + v8[5], a2 + v8[5], v6);
  v181 = (void (*)(char *, char *, uint64_t))v7;
  v7(a1 + v8[6], a2 + v8[6], v6);
  v9 = v8[7];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1C0301F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = v8[8];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = v16;
  v17 = v8[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = v20;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[8]), (uint64_t *)(a2 + a3[8]));
  v21 = a3[9];
  v178 = a1;
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = type metadata accessor for HypocorismGenerator();
  LODWORD(v10) = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v24);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24);
  if ((_DWORD)v10)
  {
    if (!EnumTagSinglePayload)
    {
      *v22 = *v23;
      v26 = *(int *)(v24 + 20);
      v27 = (char *)v22 + v26;
      v28 = (char *)v23 + v26;
      *(_QWORD *)((char *)v22 + v26) = *(_QWORD *)((char *)v23 + v26);
      v29 = *(int *)(type metadata accessor for StringTokenizer() + 20);
      v30 = &v27[v29];
      v31 = &v28[v29];
      v32 = *(void (**)(char *, char *, uint64_t))(v177 + 16);
      swift_retain();
      swift_retain();
      v32(v30, v31, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
    sub_1C0045840((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for HypocorismGenerator);
LABEL_6:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2658);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_7;
  }
  *v22 = *v23;
  swift_retain();
  swift_release();
  v162 = *(int *)(v24 + 20);
  v163 = (char *)v22 + v162;
  v164 = (char *)v23 + v162;
  *(_QWORD *)((char *)v22 + v162) = *(_QWORD *)((char *)v23 + v162);
  swift_retain();
  swift_release();
  v165 = type metadata accessor for StringTokenizer();
  v181(&v163[*(int *)(v165 + 20)], &v164[*(int *)(v165 + 20)], v6);
LABEL_7:
  v184 = (int *)type metadata accessor for CandidateContactGenerator(0);
  v34 = v184[5];
  v35 = (_QWORD *)((char *)v22 + v34);
  v36 = (_QWORD *)((char *)v23 + v34);
  v37 = type metadata accessor for MeCardContactGenerator();
  v38 = __swift_getEnumTagSinglePayload((uint64_t)v35, 1, v37);
  v39 = __swift_getEnumTagSinglePayload((uint64_t)v36, 1, v37);
  if (v38)
  {
    if (!v39)
    {
      *v35 = *v36;
      v35[1] = v36[1];
      v40 = *(int *)(v37 + 24);
      v41 = v23;
      v42 = (char *)v35 + v40;
      v43 = (char *)v36 + v40;
      v44 = *(void (**)(char *, char *, uint64_t))(v177 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45 = v42;
      v23 = v41;
      v44(v45, v43, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v37);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v39)
  {
    sub_1C0045840((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for MeCardContactGenerator);
LABEL_12:
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2660);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_13;
  }
  *v35 = *v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v181((char *)v35 + *(int *)(v37 + 24), (char *)v36 + *(int *)(v37 + 24), v6);
LABEL_13:
  v47 = v184[6];
  v48 = (_QWORD *)((char *)v22 + v47);
  v49 = (_QWORD *)((char *)v23 + v47);
  v50 = type metadata accessor for RelationshipAliasGenerator();
  v51 = __swift_getEnumTagSinglePayload((uint64_t)v48, 1, v50);
  v52 = __swift_getEnumTagSinglePayload((uint64_t)v49, 1, v50);
  if (v51)
  {
    if (!v52)
    {
      *v48 = *v49;
      v48[1] = v49[1];
      v48[2] = v49[2];
      v53 = *(int *)(v50 + 24);
      v54 = (char *)v48 + v53;
      v55 = (char *)v49 + v53;
      *(_QWORD *)((char *)v48 + v53) = *(_QWORD *)((char *)v49 + v53);
      v56 = *(int *)(type metadata accessor for StringTokenizer() + 20);
      v57 = &v54[v56];
      v179 = &v55[v56];
      v58 = *(void (**)(char *, char *, uint64_t))(v177 + 16);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      v58(v57, v179, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v50);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v52)
  {
    sub_1C0045840((uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for RelationshipAliasGenerator);
LABEL_18:
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726CA8);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_19;
  }
  *v48 = *v49;
  swift_retain();
  swift_release();
  v48[1] = v49[1];
  v48[2] = v49[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v166 = *(int *)(v50 + 24);
  v167 = (char *)v48 + v166;
  v168 = (char *)v49 + v166;
  *(_QWORD *)((char *)v48 + v166) = *(_QWORD *)((char *)v49 + v166);
  swift_retain();
  swift_release();
  v169 = type metadata accessor for StringTokenizer();
  v181(&v167[*(int *)(v169 + 20)], &v168[*(int *)(v169 + 20)], v6);
LABEL_19:
  v60 = v184[7];
  v182 = (char *)v22;
  v61 = (_QWORD *)((char *)v22 + v60);
  v62 = (char *)v23 + v60;
  v63 = *(_QWORD *)((char *)v22 + v60);
  v64 = *(_QWORD *)((char *)v23 + v60);
  v65 = v6;
  if (v63)
  {
    if (v64)
    {
      *v61 = v64;
      swift_retain();
      swift_release();
      v61[1] = *((_QWORD *)v62 + 1);
      swift_retain();
      swift_release();
      goto LABEL_26;
    }
    sub_1C026F0E0((uint64_t)v61);
  }
  else if (v64)
  {
    *v61 = v64;
    v61[1] = *((_QWORD *)v62 + 1);
    swift_retain();
    swift_retain();
    goto LABEL_26;
  }
  *(_OWORD *)v61 = *(_OWORD *)v62;
LABEL_26:
  v183 = v23;
  *(_QWORD *)&v182[v184[8]] = *(_QWORD *)((char *)v23 + v184[8]);
  swift_retain();
  swift_release();
  v66 = v184[9];
  v67 = &v182[v66];
  v68 = (char *)v23 + v66;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&v182[v66], (_QWORD *)((char *)v23 + v66));
  v69 = (int *)type metadata accessor for ContactsFrameworkMatcher();
  v70 = v69[5];
  v71 = &v67[v70];
  v72 = &v68[v70];
  *(_QWORD *)&v67[v70] = *(_QWORD *)&v68[v70];
  swift_retain();
  swift_release();
  v73 = type metadata accessor for StringTokenizer();
  v181(&v71[*(int *)(v73 + 20)], &v72[*(int *)(v73 + 20)], v65);
  v67[v69[6]] = v68[v69[6]];
  v67[v69[7]] = v68[v69[7]];
  v74 = v184[10];
  v75 = &v182[v74];
  v76 = (char *)v23 + v74;
  v181(&v182[v74], (char *)v23 + v74, v65);
  v77 = *(int *)(type metadata accessor for SiriVocabularySearcher(0) + 20);
  v78 = *(void **)&v76[v77];
  v79 = *(void **)&v75[v77];
  *(_QWORD *)&v75[v77] = v78;
  v80 = v78;

  v81 = *(int *)(type metadata accessor for ThirdPartyContactMatcher(0) + 20);
  v82 = &v75[v81];
  v83 = &v76[v81];
  *(_QWORD *)&v75[v81] = *(_QWORD *)&v76[v81];
  swift_retain();
  swift_release();
  v180 = v73;
  v181(&v82[*(int *)(v73 + 20)], &v83[*(int *)(v73 + 20)], v65);
  v84 = v184[11];
  v85 = (uint64_t *)&v182[v84];
  v86 = (_QWORD *)((char *)v23 + v84);
  v87 = *(_QWORD *)((char *)v23 + v84 + 24);
  if (*(_QWORD *)&v182[v84 + 24])
  {
    if (v87)
    {
      __swift_assign_boxed_opaque_existential_1(v85, v86);
      __swift_assign_boxed_opaque_existential_1(v85 + 5, v86 + 5);
      goto LABEL_33;
    }
    sub_1C026F114((uint64_t)v85);
  }
  else if (v87)
  {
    v85[3] = v87;
    v85[4] = v86[4];
    (**(void (***)(uint64_t *, uint64_t *))(v87 - 8))(v85, v86);
    v88 = v86[8];
    v85[8] = v88;
    v85[9] = v86[9];
    (**(void (***)(uint64_t, uint64_t))(v88 - 8))((uint64_t)(v85 + 5), (uint64_t)(v86 + 5));
    goto LABEL_33;
  }
  memcpy(v85, v86, 0x50uLL);
LABEL_33:
  v89 = v184[12];
  v90 = &v182[v89];
  v91 = (char *)v23 + v89;
  *(_QWORD *)&v182[v89] = *(_QWORD *)((char *)v23 + v89);
  swift_retain();
  swift_release();
  v181(&v90[*(int *)(v73 + 20)], &v91[*(int *)(v73 + 20)], v65);
  v92 = v184[13];
  v93 = &v182[v92];
  v94 = (char *)v23 + v92;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&v182[v92], (_QWORD *)((char *)v23 + v92));
  v95 = v69[5];
  v96 = &v93[v95];
  v97 = &v94[v95];
  *(_QWORD *)&v93[v95] = *(_QWORD *)&v94[v95];
  swift_retain();
  swift_release();
  v181(&v96[*(int *)(v73 + 20)], &v97[*(int *)(v73 + 20)], v65);
  v93[v69[6]] = v94[v69[6]];
  v93[v69[7]] = v94[v69[7]];
  v182[v184[14]] = *((_BYTE *)v23 + v184[14]);
  v98 = v184[15];
  v99 = &v182[v98];
  v100 = (char *)v23 + v98;
  Expander = type metadata accessor for EmojiQueryExpander();
  LODWORD(v93) = __swift_getEnumTagSinglePayload((uint64_t)v99, 1, Expander);
  v102 = __swift_getEnumTagSinglePayload((uint64_t)v100, 1, Expander);
  if ((_DWORD)v93)
  {
    if (!v102)
    {
      v103 = *(void (**)(char *, char *, uint64_t))(v177 + 16);
      v104 = v65;
      v103(v99, v100, v65);
      v105 = *(int *)(Expander + 20);
      v106 = &v99[v105];
      v107 = &v100[v105];
      *(_QWORD *)v106 = *(_QWORD *)v107;
      v108 = *(int *)(v180 + 20);
      v109 = &v106[v108];
      v110 = &v107[v108];
      swift_retain();
      v111 = v110;
      v23 = v183;
      v103(v109, v111, v65);
      v112 = *(int *)(Expander + 24);
      v113 = *(void **)&v100[v112];
      *(_QWORD *)&v99[v112] = v113;
      v114 = v113;
      v115 = (uint64_t)v99;
      v116 = v180;
      __swift_storeEnumTagSinglePayload(v115, 0, 1, Expander);
      goto LABEL_39;
    }
    goto LABEL_38;
  }
  if (v102)
  {
    sub_1C0045840((uint64_t)v99, (uint64_t (*)(_QWORD))type metadata accessor for EmojiQueryExpander);
LABEL_38:
    v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2668);
    memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
    v116 = v180;
    v104 = v65;
    goto LABEL_39;
  }
  v104 = v65;
  v181(v99, v100, v65);
  v170 = *(int *)(Expander + 20);
  v171 = &v99[v170];
  v172 = &v100[v170];
  *(_QWORD *)&v99[v170] = *(_QWORD *)&v100[v170];
  swift_retain();
  swift_release();
  v181(&v171[*(int *)(v180 + 20)], &v172[*(int *)(v180 + 20)], v65);
  v173 = *(int *)(Expander + 24);
  v174 = *(void **)&v100[v173];
  v175 = *(void **)&v99[v173];
  *(_QWORD *)&v99[v173] = v174;
  v116 = v180;
  v176 = v174;

LABEL_39:
  v118 = v184[16];
  v119 = &v182[v118];
  v120 = (char *)v23 + v118;
  *(_QWORD *)&v182[v118] = *(_QWORD *)((char *)v23 + v118);
  swift_retain();
  swift_release();
  v181(&v119[*(int *)(v116 + 20)], &v120[*(int *)(v116 + 20)], v104);
  v121 = (int *)type metadata accessor for AsrE3CandidateExpander();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&v119[v121[5]], (uint64_t *)&v120[v121[5]]);
  v122 = v121[6];
  v123 = &v119[v122];
  v124 = &v120[v122];
  *v123 = v120[v122];
  *((_QWORD *)v123 + 1) = *(_QWORD *)&v120[v122 + 8];
  *((_QWORD *)v123 + 2) = *(_QWORD *)&v120[v122 + 16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v123 + 3) = *((_QWORD *)v124 + 3);
  *((_QWORD *)v123 + 4) = *((_QWORD *)v124 + 4);
  *((_QWORD *)v123 + 5) = *((_QWORD *)v124 + 5);
  *((_QWORD *)v123 + 6) = *((_QWORD *)v124 + 6);
  v123[56] = v124[56];
  *(_QWORD *)&v119[v121[7]] = *(_QWORD *)&v120[v121[7]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v182[v184[17]] = *(_QWORD *)((char *)v23 + v184[17]);
  swift_retain();
  swift_release();
  v125 = v184[18];
  v126 = &v182[v125];
  v127 = (char *)v23 + v125;
  *(_QWORD *)&v182[v125] = *(_QWORD *)((char *)v23 + v125);
  swift_retain();
  swift_release();
  v181(&v126[*(int *)(v180 + 20)], &v127[*(int *)(v180 + 20)], v65);
  v128 = (int *)type metadata accessor for ContactSignalProviders(0);
  v129 = v128[5];
  v130 = &v126[v129];
  v131 = &v127[v129];
  *(_QWORD *)v130 = *(_QWORD *)v131;
  *((_QWORD *)v130 + 1) = *((_QWORD *)v131 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v132 = v128[6];
  v133 = &v126[v132];
  v134 = &v127[v132];
  v135 = sub_1C030367C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 24))(v133, v134, v135);
  v136 = (int *)type metadata accessor for SiriRemembersContactSignalProvider();
  v133[v136[5]] = v134[v136[5]];
  v137 = v136[6];
  v138 = &v133[v137];
  v139 = &v134[v137];
  *(_QWORD *)v138 = *(_QWORD *)v139;
  *((_QWORD *)v138 + 1) = *((_QWORD *)v139 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v140 = v136[7];
  v141 = (uint64_t)&v133[v140];
  v142 = &v134[v140];
  v143 = *(_QWORD *)&v134[v140 + 24];
  if (*(_QWORD *)&v133[v140 + 24])
  {
    if (v143)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v141, (uint64_t *)v142);
      goto LABEL_46;
    }
    __swift_destroy_boxed_opaque_existential_0Tm(v141);
  }
  else if (v143)
  {
    *(_QWORD *)(v141 + 24) = v143;
    *(_QWORD *)(v141 + 32) = *((_QWORD *)v142 + 4);
    (**(void (***)(uint64_t, char *))(v143 - 8))(v141, v142);
    goto LABEL_46;
  }
  v144 = *(_OWORD *)v142;
  v145 = *((_OWORD *)v142 + 1);
  *(_QWORD *)(v141 + 32) = *((_QWORD *)v142 + 4);
  *(_OWORD *)v141 = v144;
  *(_OWORD *)(v141 + 16) = v145;
LABEL_46:
  v146 = v136[8];
  v147 = &v133[v146];
  v148 = &v134[v146];
  *(_QWORD *)v147 = *(_QWORD *)v148;
  *((_QWORD *)v147 + 1) = *((_QWORD *)v148 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v126[v128[7]] = *(_QWORD *)&v127[v128[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v149 = v128[8];
  v150 = &v126[v149];
  v151 = &v127[v149];
  *v150 = *v151;
  v150[1] = v151[1];
  v150[2] = v151[2];
  *((_QWORD *)v150 + 1) = *((_QWORD *)v151 + 1);
  v152 = v184[19];
  v153 = (uint64_t)&v182[v152];
  v154 = (char *)v183 + v152;
  v155 = *(_QWORD *)((char *)v183 + v152 + 24);
  if (!*(_QWORD *)&v182[v152 + 24])
  {
    if (v155)
    {
      *(_QWORD *)(v153 + 24) = v155;
      *(_QWORD *)(v153 + 32) = *((_QWORD *)v154 + 4);
      (**(void (***)(uint64_t, char *))(v155 - 8))(v153, v154);
      goto LABEL_53;
    }
LABEL_52:
    v156 = *(_OWORD *)v154;
    v157 = *((_OWORD *)v154 + 1);
    *(_QWORD *)(v153 + 32) = *((_QWORD *)v154 + 4);
    *(_OWORD *)v153 = v156;
    *(_OWORD *)(v153 + 16) = v157;
    goto LABEL_53;
  }
  if (!v155)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v153);
    goto LABEL_52;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v153, (uint64_t *)v154);
LABEL_53:
  v182[v184[20]] = *((_BYTE *)v183 + v184[20]);
  v158 = v184[21];
  v159 = &v182[v158];
  v160 = (char *)v183 + v158;
  *v159 = *((_BYTE *)v183 + v158);
  *((_QWORD *)v159 + 1) = *(_QWORD *)((char *)v183 + v158 + 8);
  *((_QWORD *)v159 + 2) = *(_QWORD *)((char *)v183 + v158 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v159 + 3) = *((_QWORD *)v160 + 3);
  *((_QWORD *)v159 + 4) = *((_QWORD *)v160 + 4);
  *((_QWORD *)v159 + 5) = *((_QWORD *)v160 + 5);
  *((_QWORD *)v159 + 6) = *((_QWORD *)v160 + 6);
  v159[56] = v160[56];
  *(_QWORD *)&v182[v184[22]] = *(_QWORD *)((char *)v183 + v184[22]);
  swift_retain();
  swift_release();
  *(_QWORD *)&v182[v184[23]] = *(_QWORD *)((char *)v183 + v184[23]);
  swift_retain();
  swift_release();
  *(_QWORD *)&v182[v184[24]] = *(_QWORD *)((char *)v183 + v184[24]);
  swift_retain();
  swift_release();
  return v178;
}

uint64_t sub_1C02B0F30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  _OWORD *v43;
  _OWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  __int128 v61;
  int *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  __int128 v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t Expander;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  int *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  __int128 v102;
  uint64_t v103;
  char *v104;
  char *v105;
  __int128 v106;
  uint64_t v107;
  char *v108;
  char *v109;
  int *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  int *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  __int128 v119;
  uint64_t v120;
  char *v121;
  char *v122;
  __int128 v123;
  uint64_t v124;
  _OWORD *v125;
  _OWORD *v126;
  __int128 v127;
  uint64_t v129;

  v6 = sub_1C0301DB0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for LocationResolutionContext();
  v7(a1 + v8[5], a2 + v8[5], v6);
  v7(a1 + v8[6], a2 + v8[6], v6);
  v9 = v8[7];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1C0301F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = v8[8];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = v8[9];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a3[6];
  v20 = a3[7];
  v21 = a1 + v19;
  v22 = a2 + v19;
  v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  v24 = a1 + v20;
  v25 = a2 + v20;
  v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(_QWORD *)(v24 + 32) = *(_QWORD *)(v25 + 32);
  v27 = a3[8];
  v28 = a3[9];
  v29 = a1 + v27;
  v30 = a2 + v27;
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  v31 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *(_OWORD *)(v29 + 16) = v31;
  v129 = a1;
  v32 = (_QWORD *)(a1 + v28);
  v33 = (_QWORD *)(a2 + v28);
  v34 = type metadata accessor for HypocorismGenerator();
  if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v34))
  {
    v35 = v6;
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2658);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    *v32 = *v33;
    v37 = *(int *)(v34 + 20);
    v38 = (char *)v32 + v37;
    v39 = (char *)v33 + v37;
    *(_QWORD *)((char *)v32 + v37) = *(_QWORD *)((char *)v33 + v37);
    v40 = type metadata accessor for StringTokenizer();
    v35 = v6;
    v7((uint64_t)&v38[*(int *)(v40 + 20)], (uint64_t)&v39[*(int *)(v40 + 20)], v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v34);
  }
  v41 = (int *)type metadata accessor for CandidateContactGenerator(0);
  v42 = v41[5];
  v43 = (_OWORD *)((char *)v32 + v42);
  v44 = (_OWORD *)((char *)v33 + v42);
  v45 = type metadata accessor for MeCardContactGenerator();
  if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45))
  {
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2660);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    *v43 = *v44;
    v7((uint64_t)v43 + *(int *)(v45 + 24), (uint64_t)v44 + *(int *)(v45 + 24), v35);
    __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v45);
  }
  v47 = v41[6];
  v48 = (_QWORD *)((char *)v32 + v47);
  v49 = (_QWORD *)((char *)v33 + v47);
  v50 = type metadata accessor for RelationshipAliasGenerator();
  if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v50))
  {
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726CA8);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    v52 = (void (*)(char *, char *, uint64_t))v7;
    v53 = v35;
  }
  else
  {
    *v48 = *v49;
    *(_OWORD *)(v48 + 1) = *(_OWORD *)(v49 + 1);
    v54 = *(int *)(v50 + 24);
    v55 = (char *)v48 + v54;
    v56 = (_QWORD *)((char *)v49 + v54);
    *(_QWORD *)((char *)v48 + v54) = *v56;
    v57 = type metadata accessor for StringTokenizer();
    v53 = v35;
    v7((uint64_t)&v55[*(int *)(v57 + 20)], (uint64_t)v56 + *(int *)(v57 + 20), v35);
    __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v50);
    v52 = (void (*)(char *, char *, uint64_t))v7;
  }
  *(_OWORD *)((char *)v32 + v41[7]) = *(_OWORD *)((char *)v33 + v41[7]);
  *(_QWORD *)((char *)v32 + v41[8]) = *(_QWORD *)((char *)v33 + v41[8]);
  v58 = v41[9];
  v59 = (char *)v32 + v58;
  v60 = (char *)v33 + v58;
  *((_QWORD *)v59 + 4) = *(_QWORD *)((char *)v33 + v58 + 32);
  v61 = *(_OWORD *)((char *)v33 + v58 + 16);
  *(_OWORD *)v59 = *(_OWORD *)((char *)v33 + v58);
  *((_OWORD *)v59 + 1) = v61;
  v62 = (int *)type metadata accessor for ContactsFrameworkMatcher();
  v63 = v62[5];
  v64 = &v59[v63];
  v65 = &v60[v63];
  *(_QWORD *)&v59[v63] = *(_QWORD *)&v60[v63];
  v66 = type metadata accessor for StringTokenizer();
  v67 = *(int *)(v66 + 20);
  v68 = &v65[v67];
  v69 = v66;
  v52(&v64[v67], v68, v53);
  v59[v62[6]] = v60[v62[6]];
  v59[v62[7]] = v60[v62[7]];
  v70 = v41[10];
  v71 = (char *)v32 + v70;
  v72 = (char *)v33 + v70;
  v52((char *)v32 + v70, (char *)v33 + v70, v53);
  v73 = type metadata accessor for SiriVocabularySearcher(0);
  *(_QWORD *)&v71[*(int *)(v73 + 20)] = *(_QWORD *)&v72[*(int *)(v73 + 20)];
  v74 = *(int *)(type metadata accessor for ThirdPartyContactMatcher(0) + 20);
  v75 = &v71[v74];
  v76 = &v72[v74];
  *(_QWORD *)v75 = *(_QWORD *)v76;
  v52(&v75[*(int *)(v69 + 20)], &v76[*(int *)(v69 + 20)], v53);
  memcpy((char *)v32 + v41[11], (char *)v33 + v41[11], 0x50uLL);
  v77 = v41[12];
  v78 = (char *)v32 + v77;
  v79 = (char *)v33 + v77;
  *(_QWORD *)v78 = *(_QWORD *)v79;
  v52(&v78[*(int *)(v69 + 20)], &v79[*(int *)(v69 + 20)], v53);
  v80 = v41[13];
  v81 = (char *)v32 + v80;
  v82 = (char *)v33 + v80;
  v83 = *(_OWORD *)((char *)v33 + v80 + 16);
  *(_OWORD *)v81 = *(_OWORD *)((char *)v33 + v80);
  *((_OWORD *)v81 + 1) = v83;
  *((_QWORD *)v81 + 4) = *(_QWORD *)((char *)v33 + v80 + 32);
  v84 = v62[5];
  v85 = &v81[v84];
  v86 = &v82[v84];
  *(_QWORD *)v85 = *(_QWORD *)v86;
  v52(&v85[*(int *)(v69 + 20)], &v86[*(int *)(v69 + 20)], v53);
  v81[v62[6]] = v82[v62[6]];
  v81[v62[7]] = v82[v62[7]];
  *((_BYTE *)v32 + v41[14]) = *((_BYTE *)v33 + v41[14]);
  v87 = v41[15];
  v88 = (char *)v32 + v87;
  v89 = (char *)v33 + v87;
  Expander = type metadata accessor for EmojiQueryExpander();
  if (__swift_getEnumTagSinglePayload((uint64_t)v89, 1, Expander))
  {
    v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2668);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
  }
  else
  {
    v52(v88, v89, v53);
    v92 = *(int *)(Expander + 20);
    v93 = &v88[v92];
    v94 = &v89[v92];
    *(_QWORD *)v93 = *(_QWORD *)v94;
    v52(&v93[*(int *)(v69 + 20)], &v94[*(int *)(v69 + 20)], v53);
    *(_QWORD *)&v88[*(int *)(Expander + 24)] = *(_QWORD *)&v89[*(int *)(Expander + 24)];
    __swift_storeEnumTagSinglePayload((uint64_t)v88, 0, 1, Expander);
  }
  v95 = v41[16];
  v96 = (char *)v32 + v95;
  v97 = (char *)v33 + v95;
  *(_QWORD *)((char *)v32 + v95) = *(_QWORD *)((char *)v33 + v95);
  v52((char *)v32 + v95 + *(int *)(v69 + 20), (char *)v33 + v95 + *(int *)(v69 + 20), v53);
  v98 = (int *)type metadata accessor for AsrE3CandidateExpander();
  v99 = v98[5];
  v100 = &v96[v99];
  v101 = &v97[v99];
  v102 = *((_OWORD *)v101 + 1);
  *(_OWORD *)v100 = *(_OWORD *)v101;
  *((_OWORD *)v100 + 1) = v102;
  *((_QWORD *)v100 + 4) = *((_QWORD *)v101 + 4);
  v103 = v98[6];
  v104 = &v96[v103];
  v105 = &v97[v103];
  v106 = *((_OWORD *)v105 + 1);
  *(_OWORD *)v104 = *(_OWORD *)v105;
  *((_OWORD *)v104 + 1) = v106;
  *((_OWORD *)v104 + 2) = *((_OWORD *)v105 + 2);
  *(_OWORD *)(v104 + 41) = *(_OWORD *)(v105 + 41);
  *(_QWORD *)&v96[v98[7]] = *(_QWORD *)&v97[v98[7]];
  *(_QWORD *)((char *)v32 + v41[17]) = *(_QWORD *)((char *)v33 + v41[17]);
  v107 = v41[18];
  v108 = (char *)v32 + v107;
  v109 = (char *)v33 + v107;
  *(_QWORD *)((char *)v32 + v107) = *(_QWORD *)((char *)v33 + v107);
  v52((char *)v32 + v107 + *(int *)(v69 + 20), (char *)v33 + v107 + *(int *)(v69 + 20), v53);
  v110 = (int *)type metadata accessor for ContactSignalProviders(0);
  *(_OWORD *)&v108[v110[5]] = *(_OWORD *)&v109[v110[5]];
  v111 = v110[6];
  v112 = &v108[v111];
  v113 = &v109[v111];
  v114 = sub_1C030367C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 32))(v112, v113, v114);
  v115 = (int *)type metadata accessor for SiriRemembersContactSignalProvider();
  v112[v115[5]] = v113[v115[5]];
  *(_OWORD *)&v112[v115[6]] = *(_OWORD *)&v113[v115[6]];
  v116 = v115[7];
  v117 = &v112[v116];
  v118 = &v113[v116];
  *((_QWORD *)v117 + 4) = *((_QWORD *)v118 + 4);
  v119 = *((_OWORD *)v118 + 1);
  *(_OWORD *)v117 = *(_OWORD *)v118;
  *((_OWORD *)v117 + 1) = v119;
  *(_OWORD *)&v112[v115[8]] = *(_OWORD *)&v113[v115[8]];
  *(_QWORD *)&v108[v110[7]] = *(_QWORD *)&v109[v110[7]];
  *(_OWORD *)&v108[v110[8]] = *(_OWORD *)&v109[v110[8]];
  v120 = v41[19];
  v121 = (char *)v32 + v120;
  v122 = (char *)v33 + v120;
  v123 = *((_OWORD *)v122 + 1);
  *(_OWORD *)v121 = *(_OWORD *)v122;
  *((_OWORD *)v121 + 1) = v123;
  *((_QWORD *)v121 + 4) = *((_QWORD *)v122 + 4);
  *((_BYTE *)v32 + v41[20]) = *((_BYTE *)v33 + v41[20]);
  v124 = v41[21];
  v125 = (_OWORD *)((char *)v32 + v124);
  v126 = (_OWORD *)((char *)v33 + v124);
  v127 = v126[1];
  *v125 = *v126;
  v125[1] = v127;
  v125[2] = v126[2];
  *(_OWORD *)((char *)v125 + 41) = *(_OWORD *)((char *)v126 + 41);
  *(_QWORD *)((char *)v32 + v41[22]) = *(_QWORD *)((char *)v33 + v41[22]);
  *(_QWORD *)((char *)v32 + v41[23]) = *(_QWORD *)((char *)v33 + v41[23]);
  *(_QWORD *)((char *)v32 + v41[24]) = *(_QWORD *)((char *)v33 + v41[24]);
  return v129;
}

uint64_t sub_1C02B1670(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  int EnumTagSinglePayload;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  __int128 v66;
  int *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  _OWORD *v82;
  char *v83;
  __int128 v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  __int128 v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t Expander;
  int v99;
  int v100;
  void (*v101)(char *, char *, uint64_t);
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  int *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  __int128 v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  char *v137;
  uint64_t v138;
  int *v139;
  uint64_t v140;
  char *v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  int *v149;
  uint64_t v150;
  char *v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __int128 v158;
  uint64_t v159;
  char *v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  __int128 v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  int *v178;
  void (*v179)(char *, char *, uint64_t);
  uint64_t v180;

  v6 = sub_1C0301DB0();
  v175 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v175 + 40);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for LocationResolutionContext();
  v7(a1 + v8[5], a2 + v8[5], v6);
  v179 = (void (*)(char *, char *, uint64_t))v7;
  v7(a1 + v8[6], a2 + v8[6], v6);
  v9 = v8[7];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1C0301F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = v8[8];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = v8[9];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a3[6];
  v20 = a1 + v19;
  v21 = a2 + v19;
  __swift_destroy_boxed_opaque_existential_0Tm(a1 + v19);
  v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  v23 = a3[7];
  v24 = a1 + v23;
  v25 = a2 + v23;
  __swift_destroy_boxed_opaque_existential_0Tm(a1 + v23);
  v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(_QWORD *)(v24 + 32) = *(_QWORD *)(v25 + 32);
  v27 = a3[8];
  v28 = a1 + v27;
  v29 = a2 + v27;
  __swift_destroy_boxed_opaque_existential_0Tm(a1 + v27);
  v30 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v30;
  *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
  v31 = a3[9];
  v176 = a1;
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  v34 = type metadata accessor for HypocorismGenerator();
  LODWORD(v10) = __swift_getEnumTagSinglePayload((uint64_t)v32, 1, v34);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v33, 1, v34);
  if ((_DWORD)v10)
  {
    if (!EnumTagSinglePayload)
    {
      *v32 = *v33;
      v36 = *(int *)(v34 + 20);
      v37 = (char *)v32 + v36;
      v38 = (char *)v33 + v36;
      *(_QWORD *)((char *)v32 + v36) = *(_QWORD *)((char *)v33 + v36);
      v39 = type metadata accessor for StringTokenizer();
      (*(void (**)(char *, char *, uint64_t))(v175 + 32))(&v37[*(int *)(v39 + 20)], &v38[*(int *)(v39 + 20)], v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v34);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
    sub_1C0045840((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for HypocorismGenerator);
LABEL_6:
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2658);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_7;
  }
  *v32 = *v33;
  swift_release();
  v109 = *(int *)(v34 + 20);
  v110 = (char *)v32 + v109;
  v111 = (char *)v33 + v109;
  *(_QWORD *)((char *)v32 + v109) = *(_QWORD *)((char *)v33 + v109);
  swift_release();
  v112 = type metadata accessor for StringTokenizer();
  v179(&v110[*(int *)(v112 + 20)], &v111[*(int *)(v112 + 20)], v6);
LABEL_7:
  v41 = (int *)type metadata accessor for CandidateContactGenerator(0);
  v42 = v41[5];
  v43 = (char *)v32 + v42;
  v44 = (char *)v33 + v42;
  v45 = type metadata accessor for MeCardContactGenerator();
  v46 = __swift_getEnumTagSinglePayload((uint64_t)v43, 1, v45);
  v47 = __swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45);
  if (v46)
  {
    if (!v47)
    {
      *(_OWORD *)v43 = *(_OWORD *)v44;
      (*(void (**)(char *, char *, uint64_t))(v175 + 32))(&v43[*(int *)(v45 + 24)], &v44[*(int *)(v45 + 24)], v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v45);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v47)
  {
    sub_1C0045840((uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for MeCardContactGenerator);
LABEL_12:
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2660);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_13;
  }
  *(_QWORD *)v43 = *(_QWORD *)v44;
  swift_bridgeObjectRelease();
  *((_QWORD *)v43 + 1) = *((_QWORD *)v44 + 1);
  swift_bridgeObjectRelease();
  v179(&v43[*(int *)(v45 + 24)], &v44[*(int *)(v45 + 24)], v6);
LABEL_13:
  v49 = v41[6];
  v50 = (_QWORD *)((char *)v32 + v49);
  v51 = (_QWORD *)((char *)v33 + v49);
  v52 = type metadata accessor for RelationshipAliasGenerator();
  v53 = __swift_getEnumTagSinglePayload((uint64_t)v50, 1, v52);
  v54 = __swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52);
  if (v53)
  {
    if (!v54)
    {
      *v50 = *v51;
      *(_OWORD *)(v50 + 1) = *(_OWORD *)(v51 + 1);
      v55 = *(int *)(v52 + 24);
      v56 = (char *)v50 + v55;
      v57 = (char *)v51 + v55;
      *(_QWORD *)((char *)v50 + v55) = *(_QWORD *)((char *)v51 + v55);
      v58 = type metadata accessor for StringTokenizer();
      (*(void (**)(char *, char *, uint64_t))(v175 + 32))(&v56[*(int *)(v58 + 20)], &v57[*(int *)(v58 + 20)], v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v52);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v54)
  {
    sub_1C0045840((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for RelationshipAliasGenerator);
LABEL_18:
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726CA8);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_19;
  }
  *v50 = *v51;
  swift_release();
  v113 = v51[2];
  v50[1] = v51[1];
  v50[2] = v113;
  swift_bridgeObjectRelease();
  v114 = *(int *)(v52 + 24);
  v115 = (char *)v50 + v114;
  v116 = (char *)v51 + v114;
  *(_QWORD *)((char *)v50 + v114) = *(_QWORD *)((char *)v51 + v114);
  swift_release();
  v117 = type metadata accessor for StringTokenizer();
  v179(&v115[*(int *)(v117 + 20)], &v116[*(int *)(v117 + 20)], v6);
LABEL_19:
  v60 = v41[7];
  v61 = (_QWORD *)((char *)v32 + v60);
  v62 = (_QWORD *)((char *)v33 + v60);
  if (*(_QWORD *)((char *)v32 + v60))
  {
    if (*v62)
    {
      *v61 = *v62;
      swift_release();
      v61[1] = v62[1];
      swift_release();
      goto LABEL_24;
    }
    sub_1C026F0E0((uint64_t)v61);
  }
  *(_OWORD *)v61 = *(_OWORD *)v62;
LABEL_24:
  *(_QWORD *)((char *)v32 + v41[8]) = *(_QWORD *)((char *)v33 + v41[8]);
  swift_release();
  v63 = v41[9];
  v64 = (char *)v32 + v63;
  v65 = (char *)v33 + v63;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v32 + v63);
  v66 = *((_OWORD *)v65 + 1);
  *(_OWORD *)v64 = *(_OWORD *)v65;
  *((_OWORD *)v64 + 1) = v66;
  *((_QWORD *)v64 + 4) = *((_QWORD *)v65 + 4);
  v67 = (int *)type metadata accessor for ContactsFrameworkMatcher();
  v68 = v67[5];
  v69 = &v64[v68];
  v70 = &v65[v68];
  *(_QWORD *)&v64[v68] = *(_QWORD *)&v65[v68];
  swift_release();
  v178 = v41;
  v71 = (char *)v33;
  v72 = type metadata accessor for StringTokenizer();
  v179(&v69[*(int *)(v72 + 20)], &v70[*(int *)(v72 + 20)], v6);
  v64[v67[6]] = v65[v67[6]];
  v64[v67[7]] = v65[v67[7]];
  v73 = v178[10];
  v74 = (char *)v32 + v73;
  v75 = &v71[v73];
  v179((char *)v32 + v73, &v71[v73], v6);
  v76 = *(int *)(type metadata accessor for SiriVocabularySearcher(0) + 20);
  v77 = *(void **)&v74[v76];
  *(_QWORD *)&v74[v76] = *(_QWORD *)&v75[v76];

  v78 = *(int *)(type metadata accessor for ThirdPartyContactMatcher(0) + 20);
  v79 = &v74[v78];
  v80 = &v75[v78];
  *(_QWORD *)&v74[v78] = *(_QWORD *)&v75[v78];
  swift_release();
  v177 = v72;
  v180 = v6;
  v179(&v79[*(int *)(v72 + 20)], &v80[*(int *)(v72 + 20)], v6);
  v81 = v178[11];
  v82 = (_OWORD *)((char *)v32 + v81);
  v83 = &v71[v81];
  if (*(_QWORD *)((char *)v32 + v81 + 24))
  {
    if (*((_QWORD *)v83 + 3))
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v82);
      v84 = *((_OWORD *)v83 + 1);
      *v82 = *(_OWORD *)v83;
      v82[1] = v84;
      *((_QWORD *)v82 + 4) = *((_QWORD *)v83 + 4);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v82 + 40);
      *(_OWORD *)((char *)v82 + 40) = *(_OWORD *)(v83 + 40);
      *(_OWORD *)((char *)v82 + 56) = *(_OWORD *)(v83 + 56);
      *((_QWORD *)v82 + 9) = *((_QWORD *)v83 + 9);
      goto LABEL_29;
    }
    sub_1C026F114((uint64_t)v82);
  }
  memcpy(v82, v83, 0x50uLL);
LABEL_29:
  v85 = v178[12];
  v86 = (char *)v32 + v85;
  v87 = &v71[v85];
  *(_QWORD *)((char *)v32 + v85) = *(_QWORD *)&v71[v85];
  swift_release();
  v179(&v86[*(int *)(v72 + 20)], &v87[*(int *)(v72 + 20)], v6);
  v88 = v178[13];
  v89 = (char *)v32 + v88;
  v90 = &v71[v88];
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v32 + v88);
  v91 = *((_OWORD *)v90 + 1);
  *(_OWORD *)v89 = *(_OWORD *)v90;
  *((_OWORD *)v89 + 1) = v91;
  *((_QWORD *)v89 + 4) = *((_QWORD *)v90 + 4);
  v92 = v67[5];
  v93 = &v89[v92];
  v94 = &v90[v92];
  *(_QWORD *)&v89[v92] = *(_QWORD *)&v90[v92];
  swift_release();
  v179(&v93[*(int *)(v72 + 20)], &v94[*(int *)(v72 + 20)], v6);
  v89[v67[6]] = v90[v67[6]];
  v89[v67[7]] = v90[v67[7]];
  *((_BYTE *)v32 + v178[14]) = v71[v178[14]];
  v95 = v178[15];
  v96 = (char *)v32 + v95;
  v97 = &v71[v95];
  Expander = type metadata accessor for EmojiQueryExpander();
  v99 = __swift_getEnumTagSinglePayload((uint64_t)v96, 1, Expander);
  v100 = __swift_getEnumTagSinglePayload((uint64_t)v97, 1, Expander);
  if (!v99)
  {
    if (!v100)
    {
      v102 = v6;
      v179(v96, v97, v6);
      v118 = *(int *)(Expander + 20);
      v119 = &v96[v118];
      v120 = &v97[v118];
      *(_QWORD *)&v96[v118] = *(_QWORD *)&v97[v118];
      swift_release();
      v179(&v119[*(int *)(v177 + 20)], &v120[*(int *)(v177 + 20)], v6);
      v106 = v177;
      v121 = *(int *)(Expander + 24);
      v122 = *(void **)&v96[v121];
      *(_QWORD *)&v96[v121] = *(_QWORD *)&v97[v121];

      goto LABEL_39;
    }
    sub_1C0045840((uint64_t)v96, (uint64_t (*)(_QWORD))type metadata accessor for EmojiQueryExpander);
LABEL_34:
    v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2668);
    memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
    v106 = v177;
    v108 = v71;
    v102 = v180;
    goto LABEL_40;
  }
  if (v100)
    goto LABEL_34;
  v101 = *(void (**)(char *, char *, uint64_t))(v175 + 32);
  v102 = v6;
  v101(v96, v97, v6);
  v103 = *(int *)(Expander + 20);
  v104 = &v96[v103];
  v105 = &v97[v103];
  *(_QWORD *)v104 = *(_QWORD *)v105;
  v106 = v177;
  v101(&v104[*(int *)(v177 + 20)], &v105[*(int *)(v177 + 20)], v180);
  *(_QWORD *)&v96[*(int *)(Expander + 24)] = *(_QWORD *)&v97[*(int *)(Expander + 24)];
  __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, Expander);
LABEL_39:
  v108 = v71;
LABEL_40:
  v123 = v178[16];
  v124 = (char *)v32 + v123;
  v125 = (uint64_t)v108 + v123;
  *(_QWORD *)((char *)v32 + v123) = *(_QWORD *)((char *)v108 + v123);
  swift_release();
  v179(&v124[*(int *)(v106 + 20)], (char *)(v125 + *(int *)(v106 + 20)), v102);
  v126 = (int *)type metadata accessor for AsrE3CandidateExpander();
  v127 = v126[5];
  v128 = &v124[v127];
  v129 = v125 + v127;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v124[v127]);
  v130 = *(_OWORD *)(v129 + 16);
  *(_OWORD *)v128 = *(_OWORD *)v129;
  *((_OWORD *)v128 + 1) = v130;
  *((_QWORD *)v128 + 4) = *(_QWORD *)(v129 + 32);
  v131 = v126[6];
  v132 = &v124[v131];
  v133 = v125 + v131;
  *v132 = *(_BYTE *)(v125 + v131);
  v134 = *(_QWORD *)(v125 + v131 + 16);
  *((_QWORD *)v132 + 1) = *(_QWORD *)(v125 + v131 + 8);
  *((_QWORD *)v132 + 2) = v134;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v132 + 24) = *(_OWORD *)(v133 + 24);
  *(_OWORD *)(v132 + 40) = *(_OWORD *)(v133 + 40);
  v132[56] = *(_BYTE *)(v133 + 56);
  *(_QWORD *)&v124[v126[7]] = *(_QWORD *)(v125 + v126[7]);
  swift_release();
  *(_QWORD *)((char *)v32 + v178[17]) = *(_QWORD *)((char *)v108 + v178[17]);
  swift_release();
  v135 = v178[18];
  v136 = v108;
  v137 = (char *)v32 + v135;
  v138 = (uint64_t)v136 + v135;
  *(_QWORD *)((char *)v32 + v135) = *(_QWORD *)((char *)v136 + v135);
  swift_release();
  v179(&v137[*(int *)(v106 + 20)], (char *)(v138 + *(int *)(v106 + 20)), v180);
  v139 = (int *)type metadata accessor for ContactSignalProviders(0);
  v140 = v139[5];
  v141 = &v137[v140];
  v142 = (uint64_t *)(v138 + v140);
  v144 = *v142;
  v143 = v142[1];
  *(_QWORD *)v141 = v144;
  *((_QWORD *)v141 + 1) = v143;
  swift_bridgeObjectRelease();
  v145 = v139[6];
  v146 = &v137[v145];
  v147 = v138 + v145;
  v148 = sub_1C030367C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 40))(v146, v147, v148);
  v149 = (int *)type metadata accessor for SiriRemembersContactSignalProvider();
  v146[v149[5]] = *(_BYTE *)(v147 + v149[5]);
  v150 = v149[6];
  v151 = &v146[v150];
  v152 = (uint64_t *)(v147 + v150);
  v154 = *v152;
  v153 = v152[1];
  *(_QWORD *)v151 = v154;
  *((_QWORD *)v151 + 1) = v153;
  swift_bridgeObjectRelease();
  v155 = v149[7];
  v156 = (uint64_t)&v146[v155];
  v157 = v147 + v155;
  if (*(_QWORD *)&v146[v155 + 24])
    __swift_destroy_boxed_opaque_existential_0Tm(v156);
  v158 = *(_OWORD *)(v157 + 16);
  *(_OWORD *)v156 = *(_OWORD *)v157;
  *(_OWORD *)(v156 + 16) = v158;
  *(_QWORD *)(v156 + 32) = *(_QWORD *)(v157 + 32);
  v159 = v149[8];
  v160 = &v146[v159];
  v161 = (uint64_t *)(v147 + v159);
  v163 = *v161;
  v162 = v161[1];
  *(_QWORD *)v160 = v163;
  *((_QWORD *)v160 + 1) = v162;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v137[v139[7]] = *(_QWORD *)(v138 + v139[7]);
  swift_bridgeObjectRelease();
  v164 = v139[8];
  v165 = &v137[v164];
  v166 = v138 + v164;
  *v165 = *(_BYTE *)v166;
  v165[1] = *(_BYTE *)(v166 + 1);
  v165[2] = *(_BYTE *)(v166 + 2);
  *((_QWORD *)v165 + 1) = *(_QWORD *)(v166 + 8);
  v167 = v178[19];
  v168 = (char *)v32 + v167;
  if (*(_QWORD *)((char *)v32 + v167 + 24))
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v32 + v167);
  v169 = *(_OWORD *)&v71[v167 + 16];
  *(_OWORD *)v168 = *(_OWORD *)&v71[v167];
  *((_OWORD *)v168 + 1) = v169;
  *((_QWORD *)v168 + 4) = *(_QWORD *)&v71[v167 + 32];
  *((_BYTE *)v32 + v178[20]) = v71[v178[20]];
  v170 = v178[21];
  v171 = (char *)v32 + v170;
  v172 = &v71[v170];
  *v171 = v71[v170];
  v173 = *(_QWORD *)&v71[v170 + 16];
  *((_QWORD *)v171 + 1) = *(_QWORD *)&v71[v170 + 8];
  *((_QWORD *)v171 + 2) = v173;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v171 + 24) = *(_OWORD *)(v172 + 24);
  *(_OWORD *)(v171 + 40) = *(_OWORD *)(v172 + 40);
  v171[56] = v172[56];
  *(_QWORD *)((char *)v32 + v178[22]) = *(_QWORD *)&v71[v178[22]];
  swift_release();
  *(_QWORD *)((char *)v32 + v178[23]) = *(_QWORD *)&v71[v178[23]];
  swift_release();
  *(_QWORD *)((char *)v32 + v178[24]) = *(_QWORD *)&v71[v178[24]];
  swift_release();
  return v176;
}

uint64_t sub_1C02B2218()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C02B2224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = OUTLINED_FUNCTION_20_40();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  if ((_DWORD)v3 != 0x7FFFFFFF)
  {
    v7 = type metadata accessor for CandidateContactGenerator(0);
    v8 = v4 + *(int *)(a3 + 36);
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  v9 = *(_QWORD *)(v4 + *(int *)(a3 + 24) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1C02B22B8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C02B22C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = OUTLINED_FUNCTION_20_40();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(v5 + *(int *)(a4 + 24) + 24) = (v4 - 1);
      return result;
    }
    v9 = type metadata accessor for CandidateContactGenerator(0);
    v10 = v5 + *(int *)(a4 + 36);
  }
  return __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
}

uint64_t type metadata accessor for LocationSuggestionGenerator()
{
  uint64_t result;

  result = qword_1EF5C32F0;
  if (!qword_1EF5C32F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C02B238C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for LocationResolutionContext();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for CandidateContactGenerator(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C02B242C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void **v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void **v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  char v51;
  id v52;
  id v53;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  uint64_t v72;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727640);
  v0 = OUTLINED_FUNCTION_16_0();
  *(_OWORD *)(v0 + 16) = xmmword_1C0324240;
  v1 = (void *)*MEMORY[0x1E0C966E8];
  v2 = (void *)*MEMORY[0x1E0C96790];
  v3 = (void **)MEMORY[0x1E0C966D0];
  *(_QWORD *)(v0 + 32) = *MEMORY[0x1E0C966E8];
  *(_QWORD *)(v0 + 40) = v2;
  v4 = *v3;
  v5 = (void *)*MEMORY[0x1E0C96780];
  *(_QWORD *)(v0 + 48) = *v3;
  *(_QWORD *)(v0 + 56) = v5;
  v6 = (void *)*MEMORY[0x1E0C966C0];
  v7 = (void *)*MEMORY[0x1E0C96798];
  *(_QWORD *)(v0 + 64) = *MEMORY[0x1E0C966C0];
  *(_QWORD *)(v0 + 72) = v7;
  v8 = (void *)*MEMORY[0x1E0C967A0];
  v9 = (void *)*MEMORY[0x1E0C967D8];
  v10 = (void **)MEMORY[0x1E0C967E0];
  *(_QWORD *)(v0 + 80) = *MEMORY[0x1E0C967A0];
  *(_QWORD *)(v0 + 88) = v9;
  v11 = *v10;
  v57 = (void *)*MEMORY[0x1E0C967D0];
  v12 = *MEMORY[0x1E0C967D0];
  *(_QWORD *)(v0 + 96) = v11;
  *(_QWORD *)(v0 + 104) = v12;
  v55 = (void *)*MEMORY[0x1E0C967E8];
  v58 = (void *)*MEMORY[0x1E0C967C8];
  v13 = *MEMORY[0x1E0C967C8];
  *(_QWORD *)(v0 + 112) = *MEMORY[0x1E0C967E8];
  *(_QWORD *)(v0 + 120) = v13;
  v56 = (void *)*MEMORY[0x1E0C96890];
  v59 = (void *)*MEMORY[0x1E0C967F0];
  v14 = *MEMORY[0x1E0C967F0];
  v15 = (void **)MEMORY[0x1E0C96840];
  *(_QWORD *)(v0 + 128) = *MEMORY[0x1E0C96890];
  *(_QWORD *)(v0 + 136) = v14;
  v60 = *v15;
  v63 = (void *)*MEMORY[0x1E0C96708];
  v16 = *MEMORY[0x1E0C96708];
  *(_QWORD *)(v0 + 144) = v60;
  *(_QWORD *)(v0 + 152) = v16;
  v61 = (void *)*MEMORY[0x1E0C96700];
  v64 = (void *)*MEMORY[0x1E0C96820];
  v17 = *MEMORY[0x1E0C96820];
  *(_QWORD *)(v0 + 160) = *MEMORY[0x1E0C96700];
  *(_QWORD *)(v0 + 168) = v17;
  v62 = (void *)*MEMORY[0x1E0C966A8];
  v65 = (void *)*MEMORY[0x1E0C967C0];
  v18 = *MEMORY[0x1E0C967C0];
  v19 = (void **)MEMORY[0x1E0C967B8];
  *(_QWORD *)(v0 + 176) = *MEMORY[0x1E0C966A8];
  *(_QWORD *)(v0 + 184) = v18;
  v66 = *v19;
  v68 = (void *)*MEMORY[0x1E0C96698];
  v20 = *MEMORY[0x1E0C96698];
  *(_QWORD *)(v0 + 192) = v66;
  *(_QWORD *)(v0 + 200) = v20;
  v67 = (void *)*MEMORY[0x1E0C96758];
  v21 = *MEMORY[0x1E0C96670];
  v70 = (void *)*MEMORY[0x1E0C96670];
  *(_QWORD *)(v0 + 208) = *MEMORY[0x1E0C96758];
  *(_QWORD *)(v0 + 216) = v21;
  v69 = (void *)*MEMORY[0x1E0C967A8];
  v22 = *MEMORY[0x1E0C96898];
  v71 = (void *)*MEMORY[0x1E0C96898];
  v72 = v0;
  *(_QWORD *)(v0 + 224) = *MEMORY[0x1E0C967A8];
  *(_QWORD *)(v0 + 232) = v22;
  sub_1C0304150();
  v23 = (void *)*MEMORY[0x1E0C96830];
  v24 = v1;
  v25 = v2;
  v26 = v4;
  v27 = v5;
  v28 = v6;
  v29 = v7;
  v30 = v8;
  v31 = v9;
  v32 = v11;
  v33 = v57;
  v34 = v55;
  v35 = v58;
  v36 = v56;
  v37 = v59;
  v38 = v60;
  v39 = v63;
  v40 = v61;
  v41 = v64;
  v42 = v62;
  v43 = v65;
  v44 = v66;
  v45 = v68;
  v46 = v67;
  v47 = v70;
  v48 = v69;
  v49 = v71;
  v50 = v23;
  MEMORY[0x1C3B97010]();
  OUTLINED_FUNCTION_12_66();
  if (v51)
    OUTLINED_FUNCTION_10_78();
  OUTLINED_FUNCTION_14_68();
  sub_1C0304150();
  v52 = (id)*MEMORY[0x1E0C96828];
  MEMORY[0x1C3B97010]();
  OUTLINED_FUNCTION_12_66();
  if (v51)
    OUTLINED_FUNCTION_10_78();
  OUTLINED_FUNCTION_14_68();
  sub_1C0304150();
  v53 = (id)*MEMORY[0x1E0C966B0];
  MEMORY[0x1C3B97010]();
  OUTLINED_FUNCTION_12_66();
  if (v51)
    OUTLINED_FUNCTION_10_78();
  OUTLINED_FUNCTION_14_68();
  sub_1C0304150();
  return v72;
}

uint64_t sub_1C02B2790(void *__src, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6)
{
  unsigned __int8 v11;
  unsigned __int8 v13;
  _BYTE v14[168];
  _QWORD __srca[21];
  unsigned __int8 v16[40];
  uint64_t v17;
  _BYTE v18[712];
  _BYTE __dst[712];
  _BYTE v20[56];
  uint64_t v21;

  memcpy(__dst, __src, sizeof(__dst));
  v11 = *a2;
  sub_1C005578C((uint64_t)&__dst[120], (uint64_t)v20, &qword_1EF5BF528);
  if (sub_1C00B8890((uint64_t)v20) != 1
    && (sub_1C005578C((uint64_t)&v21, (uint64_t)v16, &qword_1EF5BF540), sub_1C00B8890((uint64_t)v16) != 1)
    && (sub_1C005578C((uint64_t)&v17, (uint64_t)__srca, &qword_1EF5B9220),
        sub_1C00B8890((uint64_t)__srca) != 1)
    && (__srca[1] || __srca[4] || __srca[7] || __srca[10] || __srca[13]))
  {
    memcpy(v18, __dst, sizeof(v18));
    memcpy(v14, __srca, 0xA6uLL);
    v13 = v11;
    return sub_1C02B35DC((uint64_t)v18, v14, (char *)&v13, a3, a4, a5, a6);
  }
  else
  {
    memcpy(v18, __dst, sizeof(v18));
    v16[0] = v11;
    return sub_1C02B4D60((uint64_t)v18, v16, a3, a4, a5, a6);
  }
}

uint64_t sub_1C02B290C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  double v24;
  double v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(id, void (*)(unint64_t, void *), uint64_t, uint64_t, uint64_t);
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  void *v42;
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a4;
  v10[3] = a5;
  v10[4] = a6;
  v11 = type metadata accessor for LocationResolutionContext();
  v12 = a3 + *(int *)(v11 + 32);
  if ((*(_BYTE *)(v12 + 8) & 1) != 0 || (v13 = a3 + *(int *)(v11 + 36), (*(_BYTE *)(v13 + 8) & 1) != 0))
  {
    v14 = qword_1EF5B7F08;
    swift_retain();
    swift_retain();
    v15 = a6;
    if (v14 != -1)
      swift_once();
    v16 = sub_1C0303B98();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EF5FC6B0);
    v17 = sub_1C0303B80();
    v18 = sub_1C03042F4();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1C0039000, v17, v18, "Unable to identify current longitude and latitude from context object", v19, 2u);
      MEMORY[0x1C3B98378](v19, -1, -1);
    }

    sub_1C02B66BC();
    v20 = (void *)swift_allocError();
    *(_QWORD *)v21 = 2;
    *(_QWORD *)(v21 + 8) = 0;
    *(_QWORD *)(v21 + 16) = 0;
    *(_QWORD *)(v21 + 24) = 0;
    *(_BYTE *)(v21 + 32) = 5;
    swift_beginAccess();
    v22 = *(void **)(a5 + 16);
    *(_QWORD *)(a5 + 16) = v20;
    v23 = v20;

    dispatch_group_leave(v15);
    swift_release();
    swift_release();
  }
  else
  {
    v24 = *(double *)v12;
    v25 = *(double *)v13;
    v26 = qword_1EF5B7F08;
    swift_retain();
    swift_retain();
    v27 = a6;
    if (v26 != -1)
      swift_once();
    v28 = sub_1C0303B98();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EF5FC6B0);
    v29 = sub_1C0303B80();
    v30 = sub_1C03042E8();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_1C0039000, v29, v30, "Successfully extracted latitude and longitude values", v31, 2u);
      MEMORY[0x1C3B98378](v31, -1, -1);
    }

    v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E3B8]), sel_initWithLatitude_longitude_, v24, v25);
    v33 = type metadata accessor for LocationSuggestionGenerator();
    sub_1C0048FE0(a3 + *(int *)(v33 + 28), (uint64_t)v43);
    v34 = v44;
    v35 = v45;
    __swift_project_boxed_opaque_existential_1(v43, v44);
    v36 = swift_allocObject();
    *(_QWORD *)(v36 + 16) = sub_1C02B6A88;
    *(_QWORD *)(v36 + 24) = v10;
    v37 = *(void (**)(id, void (*)(unint64_t, void *), uint64_t, uint64_t, uint64_t))(v35 + 16);
    swift_retain();
    v42 = v32;
    v37(v32, sub_1C02B6718, v36, v34, v35);
    swift_release();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v43);
    v38 = sub_1C0303B80();
    v39 = sub_1C03042E8();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_1C0039000, v38, v39, "Completed reverse geocoding.", v40, 2u);
      MEMORY[0x1C3B98378](v40, -1, -1);
    }
    swift_release();
    swift_release();

  }
  return swift_release();
}

void sub_1C02B2D04(unint64_t a1, id a2, void (*a3)(_QWORD, _QWORD))
{
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  void (*v55)(_QWORD, _QWORD);
  void (*v56)(_QWORD, _QWORD);
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  _OWORD v61[16];
  _BYTE __src[712];
  uint64_t v63;

  if (a2)
  {
    v5 = a2;
    if (qword_1EF5B7F08 != -1)
      swift_once();
    v6 = sub_1C0303B98();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EF5FC6B0);
    v7 = a2;
    v8 = a2;
    v9 = sub_1C0303B80();
    v10 = sub_1C03042F4();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v55 = a3;
      v12 = swift_slowAlloc();
      *(_QWORD *)__src = v12;
      *(_DWORD *)v11 = 136315138;
      v13 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7281B0);
      v14 = sub_1C0303EF8();
      *(_QWORD *)&v61[0] = sub_1C003E6D8(v14, v15, (uint64_t *)__src);
      sub_1C03044B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C0039000, v9, v10, "Unable to reverse geocode current user location. error=%s", v11, 0xCu);
      swift_arrayDestroy();
      v16 = v12;
      a3 = v55;
      MEMORY[0x1C3B98378](v16, -1, -1);
      MEMORY[0x1C3B98378](v11, -1, -1);
    }
    else
    {

    }
    sub_1C02B66BC();
    v28 = (void *)swift_allocError();
    *(_QWORD *)v29 = 3;
    *(_QWORD *)(v29 + 8) = 0;
    *(_QWORD *)(v29 + 16) = 0;
    *(_QWORD *)(v29 + 24) = 0;
    *(_BYTE *)(v29 + 32) = 5;
    a3(v28, 1);

    return;
  }
  v17 = a1;
  if (!a1)
  {
    if (qword_1EF5B7F08 == -1)
    {
LABEL_14:
      v30 = sub_1C0303B98();
      __swift_project_value_buffer(v30, (uint64_t)qword_1EF5FC6B0);
      v31 = sub_1C0303B80();
      v32 = sub_1C03042F4();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v33 = 0;
        _os_log_impl(&dword_1C0039000, v31, v32, "Unable to extract placemarks from location object.", v33, 2u);
        MEMORY[0x1C3B98378](v33, -1, -1);
      }

      sub_1C02B66BC();
      v34 = (void *)swift_allocError();
      *(_QWORD *)v35 = 3;
      *(_QWORD *)(v35 + 8) = 0;
      *(_QWORD *)(v35 + 16) = 0;
      *(_QWORD *)(v35 + 24) = 0;
      *(_BYTE *)(v35 + 32) = 5;
      a3(v34, 1);

      return;
    }
LABEL_45:
    swift_once();
    goto LABEL_14;
  }
  v18 = qword_1EF5B7F08;
  swift_bridgeObjectRetain();
  if (v18 != -1)
    swift_once();
  v19 = sub_1C0303B98();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EF5FC6B0);
  swift_bridgeObjectRetain_n();
  v20 = sub_1C0303B80();
  v21 = sub_1C03042E8();
  v57 = v17;
  v56 = a3;
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    *(_QWORD *)__src = v23;
    *(_DWORD *)v22 = 136315138;
    a3 = (void (*)(_QWORD, _QWORD))sub_1C01BEA98();
    v24 = swift_bridgeObjectRetain();
    v25 = MEMORY[0x1C3B97040](v24, a3);
    v27 = v26;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v61[0] = sub_1C003E6D8(v25, v27, (uint64_t *)__src);
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    v17 = v57;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v20, v21, "got placemarks: %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v23, -1, -1);
    MEMORY[0x1C3B98378](v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v63 = MEMORY[0x1E0DEE9D8];
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    v36 = sub_1C03047F8();
    swift_bridgeObjectRelease();
    if (v36)
      goto LABEL_20;
  }
  else
  {
    v36 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v36)
    {
LABEL_20:
      if (v36 >= 1)
      {
        v37 = 0;
        v58 = v17 & 0xC000000000000001;
        v38 = MEMORY[0x1E0DEE9D8];
        while (1)
        {
          if (v58)
            v39 = (id)MEMORY[0x1C3B975EC](v37, v17);
          else
            v39 = *(id *)(v17 + 8 * v37 + 32);
          v40 = v39;
          v41 = objc_msgSend(v39, sel__geoMapItem);
          if (v41)
          {
            v42 = v41;
            v43 = (void *)objc_opt_self();
            swift_unknownObjectRetain();
            v44 = objc_msgSend(v43, sel_mapItemStorageForGEOMapItem_, v42);
            if (!v44)
            {
              __break(1u);
              return;
            }
            v45 = v44;
            v46 = objc_msgSend(v44, sel_data);

            if (v46)
            {
              v47 = sub_1C0301C00();
              v59 = v48;
              v60 = v47;

              swift_unknownObjectRelease();
            }
            else
            {
              swift_unknownObjectRelease();
              v59 = 0xF000000000000000;
              v60 = 0;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C004FE84();
              v38 = v50;
            }
            v49 = *(_QWORD *)(v38 + 16);
            if (v49 >= *(_QWORD *)(v38 + 24) >> 1)
            {
              sub_1C004FE84();
              v38 = v51;
            }
            sub_1C01AFBC0(v61);
            *(_QWORD *)__src = 0;
            __src[10] = 0;
            *(_WORD *)&__src[8] = 4;
            __src[13] = 0;
            *(_WORD *)&__src[11] = 4;
            memset(&__src[16], 0, 104);
            sub_1C005578C((uint64_t)v61, (uint64_t)&__src[120], &qword_1EF5BF528);
            *(_QWORD *)&__src[384] = 0;
            *(_QWORD *)&__src[392] = 0;
            __src[400] = 5;
            *(_QWORD *)&__src[408] = 0;
            *(_QWORD *)&__src[416] = 1;
            memset(&__src[424], 0, 81);
            *(_OWORD *)&__src[512] = xmmword_1C0307CF0;
            memset(&__src[528], 0, 72);
            *(_DWORD *)&__src[600] = 132096;
            memset(&__src[608], 0, 17);
            memset(&__src[632], 0, 34);
            *(_QWORD *)&__src[672] = 0;
            *(_QWORD *)&__src[680] = 0;
            *(_WORD *)&__src[688] = 515;
            *(_QWORD *)&__src[696] = v60;
            *(_QWORD *)&__src[704] = v59;
            *(_QWORD *)(v38 + 16) = v49 + 1;
            memcpy((void *)(v38 + 712 * v49 + 32), __src, 0x2C8uLL);

            swift_unknownObjectRelease();
            v63 = v38;
            v17 = v57;
          }
          else
          {

          }
          if (v36 == ++v37)
            goto LABEL_40;
        }
      }
      __break(1u);
      goto LABEL_45;
    }
  }
  v38 = MEMORY[0x1E0DEE9D8];
LABEL_40:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v52 = sub_1C0303B80();
  v53 = sub_1C03042E8();
  if (os_log_type_enabled(v52, v53))
  {
    v54 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v54 = 134217984;
    *(_QWORD *)__src = *(_QWORD *)(v38 + 16);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v52, v53, "Reverse geocoded %ld placemarks.", v54, 0xCu);
    MEMORY[0x1C3B98378](v54, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v56(v63, 0);
  swift_bridgeObjectRelease();
}

uint64_t sub_1C02B35DC(uint64_t a1, const void *a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, NSObject *a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  dispatch_group_t v46;
  unint64_t v48;
  char **v49;
  id v50;
  BOOL v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  unint64_t v56;
  uint64_t v57;
  NSObject *v58;
  NSObject *v59;
  id v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  char *v67;
  char *v68;
  char v69;
  NSObject *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint8_t *v91;
  char *v92;
  id v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  id v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  NSObject *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  dispatch_group_t v105;
  NSObject *v106;
  void *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  char *v113;
  void (*v114)(char *, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  dispatch_group_t v121;
  NSObject *v122;
  os_log_type_t v123;
  uint8_t *v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  char v131;
  uint64_t v132;
  void *v133;
  id v134;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  id v143;
  _QWORD v144[2];
  char *v145;
  char *v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  int v152;
  uint64_t v153;
  uint64_t *v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  dispatch_group_t v158;
  uint64_t v159;
  int v160;
  __int128 v161;
  uint64_t v162;
  dispatch_group_t v163;
  int v164;
  int v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  unint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  id v179;
  uint64_t v180;
  id v181;
  unint64_t v182;
  NSObject *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188[34];
  _QWORD v189[34];

  v158 = a7;
  v159 = a6;
  v157 = a5;
  v11 = sub_1C0303B98();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v173 = (char *)v144 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C0303CA0();
  v149 = *(_QWORD *)(v14 - 8);
  v150 = v14;
  MEMORY[0x1E0C80A78](v14);
  v148 = (_QWORD *)((char *)v144 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v151 = sub_1C0303D30();
  v147 = *(_QWORD *)(v151 - 8);
  v16 = MEMORY[0x1E0C80A78](v151);
  v145 = (char *)v144 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v146 = (char *)v144 - v18;
  v19 = type metadata accessor for ContactResolverConfig(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v144 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(unsigned __int8 *)(a1 + 688);
  v164 = *(unsigned __int8 *)(a1 + 689);
  v165 = v22;
  memcpy(v188, a2, 0xA6uLL);
  v170 = *a3;
  sub_1C01CEFA4((uint64_t)v189);
  v23 = type metadata accessor for LocationSuggestionGenerator();
  v168 = a4;
  sub_1C003D46C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726FA8);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C0305B60;
  memcpy((void *)(v24 + 32), v189, 0x108uLL);
  sub_1C003F648(v189);
  sub_1C027350C();
  v26 = v25;
  sub_1C0045840((uint64_t)v21, type metadata accessor for ContactResolverConfig);
  swift_setDeallocating();
  sub_1C004EFA0();
  if (*(_QWORD *)(v26 + 16) == 1)
  {
    v27 = *(_QWORD *)(v26 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v28 = sub_1C02AD51C(v27);
    swift_bridgeObjectRelease();
    v29 = (_QWORD *)(v168 + *(int *)(v23 + 32));
    v30 = v29[3];
    v31 = v29[4];
    __swift_project_boxed_opaque_existential_1(v29, v30);
    v32 = sub_1C02B242C();
    v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 32))(v28, v32, v30, v31);
    v144[1] = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = v33 >> 62;
    if (v33 >> 62)
    {
LABEL_100:
      swift_bridgeObjectRetain();
      v35 = sub_1C03047F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v35 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v35 > 0)
    {
      v144[0] = v35;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3350);
      swift_allocObject();
      v162 = sub_1C01A2B2C(MEMORY[0x1E0DEE9D8]);
      v163 = dispatch_group_create();
      if (v34)
      {
        swift_bridgeObjectRetain();
        v37 = sub_1C03047F8();
      }
      else
      {
        v36 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        v37 = v36;
      }
      v177 = v170;
      v169 = v37;
      if (v37)
      {
        v48 = 0;
        v167 = v33 & 0xC000000000000001;
        v155 = v33 + 32;
        v156 = v33 & 0xFFFFFFFFFFFFFF8;
        v154 = &v187;
        v152 = 1;
        v49 = &selRef_setTimestampSec_;
        v161 = xmmword_1C030AAE0;
        v153 = MEMORY[0x1E0DEE9B8] + 8;
        v174 = v11;
        v166 = v33;
        v172 = v12;
        while (1)
        {
          while (1)
          {
            while (1)
            {
              if (v167)
              {
                v50 = (id)MEMORY[0x1C3B975EC](v48, v33);
              }
              else
              {
                if (v48 >= *(_QWORD *)(v156 + 16))
                {
                  __break(1u);
                  goto LABEL_100;
                }
                v50 = *(id *)(v155 + 8 * v48);
              }
              v179 = v50;
              v51 = __OFADD__(v48, 1);
              v52 = v48 + 1;
              if (v51)
                goto LABEL_98;
              v175 = v52;
              v53 = MEMORY[0x1E0DEE9D8];
              if (v177 <= 6)
                v53 = (uint64_t)*(&off_1E79A70C8 + v170);
              v54 = *(_QWORD *)(v53 + 16);
              swift_bridgeObjectRelease();
              if (v54)
                break;

              v34 = 0;
              v152 = 0;
              v48 = v175;
              if (v175 == v169)
                goto LABEL_64;
            }
            v55 = objc_msgSend(v179, sel_postalAddresses);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726F40);
            v56 = sub_1C0304138();

            v184 = (char *)MEMORY[0x1E0DEE9D8];
            if (v177 <= 6)
              v184 = (char *)*(&off_1E79A7100 + v170);
            if (!(v56 >> 62))
              break;
            swift_bridgeObjectRetain();
            v57 = sub_1C03047F8();
            if (v57)
              goto LABEL_26;
LABEL_47:
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease_n();
            v34 = 0;
            v152 = 0;
            v11 = v174;
            v48 = v175;
            v33 = v166;
            if (v175 == v169)
              goto LABEL_64;
          }
          v57 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v57)
            goto LABEL_47;
LABEL_26:
          v12 = 0;
          v181 = (id)v56;
          v182 = v56 & 0xC000000000000001;
          v180 = v56 + 32;
          v33 = (unint64_t)v184;
          v176 = v184 + 72;
          v178 = v57;
          while (1)
          {
            if (v182)
              v58 = MEMORY[0x1C3B975EC](v12, v56);
            else
              v58 = *(id *)(v180 + 8 * v12);
            v59 = v58;
            v51 = __OFADD__(v12++, 1);
            if (v51)
            {
              __break(1u);
LABEL_91:
              sub_1C02CFE78(0, (v33 & 0xC000000000000001) == 0, v33);
              if ((v33 & 0xC000000000000001) != 0)
                MEMORY[0x1C3B975EC](0, v33);
              else
                v142 = *(id *)(v33 + 32);
              swift_bridgeObjectRelease();
              __asm { BR              X9 }
            }
            v60 = objc_msgSend(v58, v49[157]);
            if (v60)
              break;

LABEL_46:
            if (v12 == v57)
              goto LABEL_47;
          }
          v61 = v60;
          v183 = v59;
          sub_1C0303EB0();
          v63 = v62;

          v64 = *(_QWORD *)(v33 + 16);
          if (!v64)
          {

            swift_bridgeObjectRelease();
            goto LABEL_46;
          }
          v185 = v63;
          sub_1C0303F10();
          sub_1C0303F10();
          swift_bridgeObjectRetain();
          v65 = sub_1C0304054();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v65 & 1) != 0)
            goto LABEL_49;
          if (v64 == 1)
            goto LABEL_45;
          if (*(_QWORD *)(v33 + 16) < 2uLL)
          {
            __break(1u);
LABEL_98:
            __break(1u);
            JUMPOUT(0x1C02B4B94);
          }
          sub_1C0303F10();
          sub_1C0303F10();
          v66 = sub_1C0304054();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v66 & 1) == 0)
          {
            v67 = v176;
            v33 = 2;
            while (v64 != v33)
            {
              if (v33 >= *((_QWORD *)v184 + 2))
              {
                __break(1u);
                goto LABEL_88;
              }
              ++v33;
              v68 = v67 + 16;
              sub_1C0303F10();
              sub_1C0303F10();
              v69 = sub_1C0304054();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v67 = v68;
              if ((v69 & 1) != 0)
                goto LABEL_49;
            }
            v49 = &selRef_setTimestampSec_;
            v33 = (unint64_t)v184;
LABEL_45:
            v57 = v178;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            v56 = (unint64_t)v181;
            goto LABEL_46;
          }
LABEL_49:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v70 = v183;
          v71 = -[NSObject value](v183, sel_value);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          if (v71)
          {
            v72 = qword_1EF5B7F08;
            v181 = v71;
            v73 = v174;
            v74 = v172;
            if (v72 != -1)
              swift_once();
            v75 = __swift_project_value_buffer(v73, (uint64_t)qword_1EF5FC6B0);
            (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v173, v75, v73);
            v76 = swift_allocObject();
            v77 = v179;
            *(_QWORD *)(v76 + 16) = v179;
            v78 = v76;
            v182 = v76;
            v185 = swift_allocObject();
            *(_QWORD *)(v185 + 16) = v77;
            v184 = (char *)v77;
            v183 = sub_1C0303B80();
            LODWORD(v176) = sub_1C03042E8();
            v79 = swift_allocObject();
            *(_BYTE *)(v79 + 16) = 32;
            v171 = swift_allocObject();
            *(_BYTE *)(v171 + 16) = 8;
            v80 = swift_allocObject();
            *(_QWORD *)(v80 + 16) = sub_1C02B6744;
            *(_QWORD *)(v80 + 24) = v78;
            v81 = swift_allocObject();
            *(_QWORD *)(v81 + 16) = sub_1C027E4BC;
            *(_QWORD *)(v81 + 24) = v80;
            v82 = swift_allocObject();
            *(_BYTE *)(v82 + 16) = 32;
            v83 = swift_allocObject();
            *(_BYTE *)(v83 + 16) = 8;
            v84 = (_QWORD *)swift_allocObject();
            v85 = v185;
            v84[2] = sub_1C02B6764;
            v84[3] = v85;
            v86 = swift_allocObject();
            *(_QWORD *)(v86 + 16) = sub_1C027E768;
            *(_QWORD *)(v86 + 24) = v84;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727350);
            v87 = swift_allocObject();
            *(_OWORD *)(v87 + 16) = v161;
            *(_QWORD *)(v87 + 32) = sub_1C027E48C;
            *(_QWORD *)(v87 + 40) = v79;
            v88 = v171;
            *(_QWORD *)(v87 + 48) = sub_1C027E770;
            *(_QWORD *)(v87 + 56) = v88;
            *(_QWORD *)(v87 + 64) = sub_1C027E4C4;
            *(_QWORD *)(v87 + 72) = v81;
            *(_QWORD *)(v87 + 80) = sub_1C027E770;
            *(_QWORD *)(v87 + 88) = v82;
            *(_QWORD *)(v87 + 96) = sub_1C027E770;
            *(_QWORD *)(v87 + 104) = v83;
            *(_QWORD *)(v87 + 112) = sub_1C027E76C;
            *(_QWORD *)(v87 + 120) = v86;
            swift_setDeallocating();
            swift_retain();
            v178 = v80;
            swift_retain();
            swift_retain();
            v179 = v84;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            v180 = v82;
            swift_retain();
            swift_retain();
            swift_retain();
            sub_1C00F7184();
            v89 = v176;
            if (os_log_type_enabled(v183, (os_log_type_t)v176))
            {
              v90 = swift_slowAlloc();
              v160 = v89;
              v91 = (uint8_t *)v90;
              v176 = (char *)swift_slowAlloc();
              v188[0] = (uint64_t)v176;
              *(_WORD *)v91 = 514;
              v91[2] = 32;
              swift_release();
              v91[3] = 8;
              swift_release();
              v171 = (uint64_t)(v91 + 4);
              v92 = v184;
              v93 = objc_msgSend(v184, sel_givenName);
              v94 = sub_1C0303EB0();
              v96 = v95;

              v186 = sub_1C003E6D8(v94, v96, v188);
              sub_1C03044B0();

              swift_release();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              v91[12] = 32;
              swift_release();
              v91[13] = 8;
              swift_release();
              v97 = objc_msgSend(v92, sel_familyName);
              v98 = sub_1C0303EB0();
              v100 = v99;

              v186 = sub_1C003E6D8(v98, v100, v188);
              sub_1C03044B0();

              swift_release();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              v101 = v183;
              _os_log_impl(&dword_1C0039000, v183, (os_log_type_t)v160, "going to search for addresses for contact: %s %s", v91, 0x16u);
              v102 = v176;
              swift_arrayDestroy();
              MEMORY[0x1C3B98378](v102, -1, -1);
              MEMORY[0x1C3B98378](v91, -1, -1);

            }
            else
            {

              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              v103 = v184;

              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
            }
            v12 = v172;
            v11 = v174;
            (*(void (**)(char *, uint64_t))(v172 + 8))(v173, v174);
            v104 = v162;
            v105 = v163;
            v49 = &selRef_setTimestampSec_;
            dispatch_group_enter(v163);
            LOBYTE(v188[0]) = v177;
            LOBYTE(v186) = v165;
            HIBYTE(v187) = v164;
            v34 = swift_allocObject();
            *(_QWORD *)(v34 + 16) = v104;
            *(_QWORD *)(v34 + 24) = v105;
            swift_retain();
            v106 = v105;
            v107 = v181;
            v108 = v184;
            sub_1C02B560C(v181, v184, (unsigned __int8 *)v188, (unsigned __int8 *)&v186, (unsigned __int8 *)&v187 + 7, (uint64_t)sub_1C02B67C0, v34);
            swift_release();

            v48 = v175;
            v33 = v166;
            if (v175 == v169)
            {
              LOBYTE(v34) = v152;
              goto LABEL_64;
            }
          }
          else
          {

            v34 = 0;
            v152 = 0;
            v11 = v174;
            v48 = v175;
            v33 = v166;
            v49 = &selRef_setTimestampSec_;
            if (v175 == v169)
              goto LABEL_64;
          }
        }
      }
      LOBYTE(v34) = 1;
LABEL_64:
      swift_bridgeObjectRelease();
      v109 = v145;
      sub_1C0303D0C();
      v111 = v148;
      v110 = v149;
      *v148 = 2;
      v112 = v150;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v110 + 104))(v111, *MEMORY[0x1E0DEF4A0], v150);
      v113 = v146;
      sub_1C0303D18();
      (*(void (**)(_QWORD *, uint64_t))(v110 + 8))(v111, v112);
      v114 = *(void (**)(char *, uint64_t))(v147 + 8);
      v115 = v151;
      v114(v109, v151);
      LOBYTE(v109) = sub_1C0304348();
      v114(v113, v115);
      if ((v109 & 1) != 0)
      {
        if (qword_1EF5B7F08 != -1)
          swift_once();
        __swift_project_value_buffer(v11, (uint64_t)qword_1EF5FC6B0);
        v122 = sub_1C0303B80();
        v123 = sub_1C03042E8();
        if (os_log_type_enabled(v122, v123))
        {
          v124 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v124 = 0;
          _os_log_impl(&dword_1C0039000, v122, v123, "returning early because of a GeoCoder timeout", v124, 2u);
          MEMORY[0x1C3B98378](v124, -1, -1);
        }

        if (v144[0] == 1 && v169)
        {
          sub_1C02CFE78(0, (v33 & 0xC000000000000001) == 0, v33);
          if ((v33 & 0xC000000000000001) != 0)
            MEMORY[0x1C3B975EC](0, v33);
          else
            v125 = *(id *)(v33 + 32);
          swift_bridgeObjectRelease();
          __asm { BR              X9 }
        }
        swift_bridgeObjectRelease();
        memcpy(v188, v189, 0x108uLL);
        v188[0] = sub_1C008F258();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
        sub_1C004B224();
        v126 = sub_1C0303E50();
        v128 = v127;
        swift_bridgeObjectRelease();
        sub_1C02B66BC();
        v130 = (void *)swift_allocError();
        *(_QWORD *)v129 = v126;
        *(_QWORD *)(v129 + 8) = v128;
        *(_QWORD *)(v129 + 16) = 0;
        *(_QWORD *)(v129 + 24) = 0;
        v131 = 4;
        v132 = v159;
      }
      else
      {
        sub_1C01A3084();
        v117 = *(_QWORD *)(v116 + 16);
        swift_bridgeObjectRelease();
        if (v117)
        {
          swift_bridgeObjectRelease();
          sub_1C01A3084();
          v119 = v118;
          v120 = v157;
          swift_beginAccess();
          *(_QWORD *)(v120 + 16) = v119;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v121 = v158;
          dispatch_group_leave(v158);
          sub_1C0040644(v189);
          swift_release();
          v46 = v121;
          swift_bridgeObjectRelease();

          goto LABEL_10;
        }
        LOBYTE(v67) = v144[0] != 1 || v169 == 0;
        if ((v34 & 1) != 0)
        {
          if ((v67 & 1) == 0)
            goto LABEL_91;
          swift_bridgeObjectRelease();
          memcpy(v188, v189, 0x108uLL);
          v188[0] = sub_1C008F258();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
          sub_1C004B224();
          v136 = sub_1C0303E50();
          v138 = v137;
          swift_bridgeObjectRelease();
          sub_1C02B66BC();
          v130 = (void *)swift_allocError();
          *(_QWORD *)v129 = v136;
          *(_QWORD *)(v129 + 8) = v138;
          v132 = v159;
          *(_QWORD *)(v129 + 16) = 0;
          *(_QWORD *)(v129 + 24) = 0;
          v131 = 4;
        }
        else
        {
LABEL_88:
          if ((v67 & 1) == 0)
          {
            sub_1C02CFE78(0, (v33 & 0xC000000000000001) == 0, v33);
            if ((v33 & 0xC000000000000001) != 0)
              MEMORY[0x1C3B975EC](0, v33);
            else
              v143 = *(id *)(v33 + 32);
            swift_bridgeObjectRelease();
            __asm { BR              X9 }
          }
          swift_bridgeObjectRelease();
          memcpy(v188, v189, 0x108uLL);
          v188[0] = sub_1C008F258();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
          sub_1C004B224();
          v139 = sub_1C0303E50();
          v141 = v140;
          swift_bridgeObjectRelease();
          sub_1C02B66BC();
          v130 = (void *)swift_allocError();
          *(_QWORD *)v129 = v139;
          *(_QWORD *)(v129 + 8) = v141;
          v132 = v159;
          *(_QWORD *)(v129 + 16) = 0;
          *(_QWORD *)(v129 + 24) = 0;
          v131 = 2;
        }
      }
      *(_BYTE *)(v129 + 32) = v131;
      swift_beginAccess();
      v133 = *(void **)(v132 + 16);
      *(_QWORD *)(v132 + 16) = v130;
      v134 = v130;

      v46 = v158;
      dispatch_group_leave(v158);
      sub_1C0040644(v189);

      swift_release();
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  memcpy(v188, v189, 0x108uLL);
  v188[0] = sub_1C008F258();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
  sub_1C004B224();
  v38 = sub_1C0303E50();
  v40 = v39;
  swift_bridgeObjectRelease();
  sub_1C02B66BC();
  v41 = (void *)swift_allocError();
  *(_QWORD *)v42 = v38;
  *(_QWORD *)(v42 + 8) = v40;
  v43 = v159;
  *(_QWORD *)(v42 + 16) = 0;
  *(_QWORD *)(v42 + 24) = 0;
  *(_BYTE *)(v42 + 32) = 0;
  swift_beginAccess();
  v44 = *(void **)(v43 + 16);
  *(_QWORD *)(v43 + 16) = v41;
  v45 = v41;

  v46 = v158;
  dispatch_group_leave(v158);

  sub_1C0040644(v189);
LABEL_10:
  swift_release();

  return swift_release();
}

uint64_t sub_1C02B4D60(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  _QWORD *v12;
  unsigned __int8 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint8_t *v34;
  id v35;
  void *v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t v50;
  id v51;
  id v52;
  void *v54;
  unsigned __int8 v55;
  uint64_t v56;
  _QWORD *v57;
  unsigned __int8 v58;
  unsigned __int8 v59;
  uint64_t v60[4];

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v57 = v12;
  v12[4] = a6;
  v55 = *(_BYTE *)(a1 + 688);
  v13 = *(_BYTE *)(a1 + 689);
  v14 = *a2;
  v15 = (_QWORD *)(a3 + *(int *)(type metadata accessor for LocationSuggestionGenerator() + 32));
  v16 = v15[4];
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  swift_retain();
  v56 = a5;
  swift_retain();
  v17 = a6;
  sub_1C02B242C();
  v26 = (void *)(*(uint64_t (**)(void))(v16 + 16))();
  v27 = v14;
  swift_bridgeObjectRelease();
  if (v26)
  {
    if (qword_1EF5B7F08 != -1)
      swift_once();
    v28 = sub_1C0303B98();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EF5FC6B0);
    v29 = v26;
    v30 = v26;
    v31 = sub_1C0303B80();
    v32 = sub_1C03042E8();
    v33 = v27;
    if (os_log_type_enabled(v31, v32))
    {
      v54 = v29;
      v34 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v34 = 134217984;
      v35 = objc_msgSend(v30, sel_postalAddresses);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726F40);
      v36 = v30;
      v37 = sub_1C0304138();

      if (v37 >> 62)
      {
        swift_bridgeObjectRetain();
        v38 = sub_1C03047F8();

        swift_bridgeObjectRelease();
      }
      else
      {
        v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);

      }
      swift_bridgeObjectRelease();
      v60[0] = v38;
      sub_1C03044B0();

      _os_log_impl(&dword_1C0039000, v31, v32, "number of addresses in meCard: %ld", v34, 0xCu);
      MEMORY[0x1C3B98378](v34, -1, -1);

      v30 = v36;
    }
    else
    {

    }
    v39 = objc_msgSend(v30, sel_postalAddresses, v54);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726F40);
    v40 = sub_1C0304138();

    if (v40 >> 62)
    {
      swift_bridgeObjectRetain();
      v41 = sub_1C03047F8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v41 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (!v41)
      __asm { BR              X9 }
    LOBYTE(v60[0]) = v33;
    v42 = *(_QWORD *)(sub_1C0194BE0() + 16);
    swift_bridgeObjectRelease();
    if (v42)
    {
      v43 = v30;
      v44 = objc_msgSend(v30, sel_postalAddresses);
      v45 = sub_1C0304138();

      LOBYTE(v60[0]) = v33;
      v46 = sub_1C0194BE0();
      swift_bridgeObjectRetain();
      v47 = sub_1C02AD294(v45, v46);
      if (v47)
      {
        v48 = v47;
        v49 = objc_msgSend(v47, sel_value);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        if (v49)
        {
          LOBYTE(v60[0]) = v33;
          v59 = v55;
          v58 = v13;
          v50 = swift_allocObject();
          *(_QWORD *)(v50 + 16) = sub_1C02B6A88;
          *(_QWORD *)(v50 + 24) = v57;
          *(_QWORD *)(v50 + 32) = v43;
          *(_BYTE *)(v50 + 40) = v33;
          v51 = v43;
          v52 = v49;
          swift_retain();
          sub_1C02B560C(v52, v51, (unsigned __int8 *)v60, &v59, &v58, (uint64_t)sub_1C02B6A60, v50);
          swift_release();
          swift_release();
          swift_release();

          goto LABEL_25;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    __asm { BR              X9 }
  }
  if (qword_1EF5B7F08 != -1)
    swift_once();
  v18 = sub_1C0303B98();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EF5FC6B0);
  v19 = sub_1C0303B80();
  v20 = sub_1C03042E8();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_1C0039000, v19, v20, "could not find meCard, throwing meCardNotPresent error", v21, 2u);
    MEMORY[0x1C3B98378](v21, -1, -1);
  }

  sub_1C02B66BC();
  v22 = (void *)swift_allocError();
  *(_OWORD *)v23 = 0u;
  *(_OWORD *)(v23 + 16) = 0u;
  *(_BYTE *)(v23 + 32) = 5;
  swift_beginAccess();
  v24 = *(void **)(v56 + 16);
  *(_QWORD *)(v56 + 16) = v22;
  v25 = v22;

  dispatch_group_leave(v17);
  swift_release();
  swift_release();
LABEL_25:

  return swift_release();
}

uint64_t sub_1C02B5524(void *a1, SEL *a2)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, *a2);
  v3 = sub_1C0303EB0();

  return v3;
}

void sub_1C02B5570(uint64_t a1, char a2, int a3, dispatch_group_t group)
{
  if ((a2 & 1) == 0)
  {
    MEMORY[0x1E0C80A78](a1);
    sub_1C0042ECC(sub_1C02B69FC);
  }
  dispatch_group_leave(group);
}

void sub_1C02B55DC()
{
  swift_bridgeObjectRetain();
  sub_1C004F6BC();
}

uint64_t sub_1C02B560C(void *a1, void *a2, unsigned __int8 *a3, unsigned __int8 *a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  int v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint8_t *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  char *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  void (*v46)(id, void (*)(uint64_t, void *), uint64_t, uint64_t, uint64_t);
  id v47;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61[3];
  uint64_t v62;
  uint64_t v63;

  v57 = a6;
  v58 = a7;
  v59 = a2;
  v11 = type metadata accessor for Signpost();
  v52 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v52 + 64);
  v13 = MEMORY[0x1E0C80A78](v11);
  v56 = (uint64_t)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v49 - v14;
  v16 = *a3;
  v55 = *a4;
  v17 = *a5;
  v53 = v16;
  v54 = v17;
  if (qword_1EF5B7F08 != -1)
    swift_once();
  v18 = sub_1C0303B98();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EF5FC6B0);
  v19 = a1;
  v20 = sub_1C0303B80();
  v21 = sub_1C03042E8();
  v22 = os_log_type_enabled(v20, v21);
  v50 = v19;
  if (v22)
  {
    v49 = v12;
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = v19;
    v25 = swift_slowAlloc();
    v61[0] = v25;
    *(_DWORD *)v23 = 136315138;
    v26 = sub_1C0212710();
    v60 = sub_1C003E6D8(v26, v27, v61);
    sub_1C03044B0();

    v12 = v49;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v20, v21, "going to search for %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v25, -1, -1);
    MEMORY[0x1C3B98378](v23, -1, -1);

  }
  else
  {

  }
  if (qword_1ED728440 != -1)
    swift_once();
  v28 = (void *)qword_1ED729668;
  v29 = &v15[*(int *)(v11 + 20)];
  *(_QWORD *)v29 = "Geocoding Personal Location with CLGeocoder";
  *((_QWORD *)v29 + 1) = 43;
  v29[16] = 2;
  v30 = v28;
  sub_1C0303B68();
  *(_QWORD *)&v15[*(int *)(v11 + 24)] = v30;
  v31 = v30;
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1C0305B60;
  v33 = sub_1C03046E4();
  v35 = v34;
  *(_QWORD *)(v32 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v32 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v32 + 32) = v33;
  *(_QWORD *)(v32 + 40) = v35;
  sub_1C0303B50();
  swift_bridgeObjectRelease();

  v36 = type metadata accessor for LocationSuggestionGenerator();
  sub_1C0048FE0(v51 + *(int *)(v36 + 28), (uint64_t)v61);
  v37 = v62;
  v38 = v63;
  __swift_project_boxed_opaque_existential_1(v61, v62);
  v39 = v56;
  sub_1C02B67CC((uint64_t)v15, v56);
  v40 = (*(unsigned __int8 *)(v52 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  v41 = swift_allocObject();
  sub_1C02B68C8(v39, v41 + v40);
  v42 = v41 + ((v40 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
  v43 = v58;
  *(_QWORD *)v42 = v57;
  *(_QWORD *)(v42 + 8) = v43;
  *(_BYTE *)(v42 + 16) = v53;
  v44 = v41 + ((v40 + v12 + 31) & 0xFFFFFFFFFFFFFFF8);
  v45 = v59;
  *(_QWORD *)v44 = v59;
  *(_BYTE *)(v44 + 8) = v55;
  *(_BYTE *)(v44 + 9) = v54;
  v46 = *(void (**)(id, void (*)(uint64_t, void *), uint64_t, uint64_t, uint64_t))(v38 + 8);
  swift_retain();
  v47 = v45;
  v46(v50, sub_1C02B690C, v41, v37, v38);
  swift_release();
  sub_1C0045840((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v61);
}

uint64_t sub_1C02B5A60(uint64_t a1, char a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, char a6)
{
  if ((a2 & 1) != 0)
    __asm { BR              X10 }
  if (!*(_QWORD *)(a1 + 16))
    __asm { BR              X10 }
  return a3();
}

void sub_1C02B5B18()
{
  void (*v0)(void *, uint64_t);
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;

  sub_1C02B66BC();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = 1;
  *(_QWORD *)(v4 + 16) = 0x646461206B726F77;
  *(_QWORD *)(v4 + 24) = v2;
  *(_BYTE *)(v4 + 32) = 3;
  v5 = v1;
  v0(v3, 1);

}

void sub_1C02B5C34(uint64_t a1, id a2, int a3, void (*a4)(id, uint64_t), int a5, int a6, void *a7, int a8, char a9)
{
  id v11;
  id v12;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id i;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  void *v33;
  uint64_t __src[89];
  uint64_t v35;

  if (a2)
  {
    v11 = a2;
    sub_1C03043D8();
    type metadata accessor for Signpost();
    sub_1C0303B5C();
    v12 = a2;
    a4(a2, 1);

    return;
  }
  if (qword_1EF5B7F08 != -1)
    swift_once();
  v14 = sub_1C0303B98();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EF5FC6B0);
  swift_bridgeObjectRetain_n();
  v15 = sub_1C0303B80();
  v16 = sub_1C03042E8();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    __src[0] = v18;
    *(_DWORD *)v17 = 136315138;
    v35 = a1;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3358);
    v19 = sub_1C0303EF8();
    v35 = sub_1C003E6D8(v19, v20, __src);
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v15, v16, "got placemarks: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v18, -1, -1);
    MEMORY[0x1C3B98378](v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v21 = MEMORY[0x1E0DEE9D8];
  if (a1)
    v22 = a1;
  else
    v22 = MEMORY[0x1E0DEE9D8];
  if (!(v22 >> 62))
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v23)
      goto LABEL_13;
LABEL_24:
    swift_bridgeObjectRelease();
    v25 = MEMORY[0x1E0DEE9D8];
LABEL_25:
    sub_1C03043D8();
    type metadata accessor for Signpost();
    sub_1C0303B5C();
    a4((id)v25, 0);
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = sub_1C03047F8();
  swift_bridgeObjectRelease();
  if (!v23)
    goto LABEL_24;
LABEL_13:
  v35 = v21;
  sub_1C00B1B80(0, v23 & ~(v23 >> 63), 0);
  if ((v23 & 0x8000000000000000) == 0)
  {
    v24 = 0;
    v25 = v35;
    if ((v22 & 0xC000000000000001) == 0)
      goto LABEL_16;
LABEL_15:
    for (i = (id)MEMORY[0x1C3B975EC](v24, v22); ; i = *(id *)(v22 + 8 * v24 + 32))
    {
      v27 = i;
      v33 = i;
      sub_1C02B605C(&v33, a6, a7, a8, a9, __src);

      v35 = v25;
      v29 = *(_QWORD *)(v25 + 16);
      v28 = *(_QWORD *)(v25 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_1C00B1B80(v28 > 1, v29 + 1, 1);
        v25 = v35;
      }
      *(_QWORD *)(v25 + 16) = v29 + 1;
      memcpy((void *)(v25 + 712 * v29 + 32), __src, 0x2C8uLL);
      if (v23 - 1 == v24)
        break;
      ++v24;
      if ((v22 & 0xC000000000000001) != 0)
        goto LABEL_15;
LABEL_16:
      ;
    }
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  __break(1u);
}

void *sub_1C02B605C@<X0>(void **a1@<X0>, int a2@<W1>, void *a3@<X2>, int a4@<W3>, char a5@<W4>, void *a6@<X8>)
{
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD v43[89];
  uint64_t v44;
  _QWORD v45[89];
  _BYTE __src[262];
  _BYTE __dst[264];
  _OWORD v48[45];
  int v49;
  int v50;

  v50 = a4;
  v49 = a2;
  v8 = *a1;
  *(_QWORD *)&v48[0] = 0;
  BYTE10(v48[0]) = 0;
  WORD4(v48[0]) = 4;
  BYTE13(v48[0]) = 0;
  *(_WORD *)((char *)v48 + 11) = 4;
  *(_OWORD *)((char *)&v48[5] + 8) = 0u;
  *(_OWORD *)((char *)&v48[6] + 8) = 0u;
  v48[24] = 0u;
  LOBYTE(v48[25]) = 5;
  *((_QWORD *)&v48[25] + 1) = 0;
  *(_QWORD *)&v48[26] = 1;
  *(_OWORD *)((char *)&v48[26] + 8) = 0u;
  *(_OWORD *)((char *)&v48[27] + 8) = 0u;
  *(_OWORD *)((char *)&v48[28] + 8) = 0u;
  *(_OWORD *)((char *)&v48[29] + 8) = 0u;
  *(_OWORD *)((char *)&v48[30] + 8) = 0u;
  BYTE8(v48[31]) = 0;
  DWORD2(v48[37]) = 132096;
  *((_QWORD *)&v48[43] + 1) = 0;
  memset(&v48[38], 0, 17);
  *(_OWORD *)((char *)&v48[39] + 8) = 0u;
  *(_OWORD *)((char *)&v48[40] + 8) = 0u;
  WORD4(v48[41]) = 0;
  v48[42] = 0u;
  *(_QWORD *)&v48[44] = 0xF000000000000000;
  v9 = objc_msgSend(v8, sel_location);
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, sel_coordinate);

    v11 = objc_msgSend(v8, sel_location);
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, sel_coordinate);

      sub_1C0304210();
      v45[0] = 0;
      v45[1] = 0xE000000000000000;
      sub_1C0304210();
      *((_QWORD *)&v48[5] + 1) = 0;
      v48[6] = 0xE000000000000000;
      *(_QWORD *)&v48[7] = 0xE000000000000000;
    }
  }
  v13 = sub_1C00F71D8(v8);
  if (v14)
    v15 = 3;
  else
    v15 = 0;
  if (v14)
    v16 = v13;
  else
    v16 = 0;
  *(_QWORD *)&v48[1] = v15;
  *((_QWORD *)&v48[1] + 1) = v16;
  *(_QWORD *)&v48[2] = v14;
  v17 = sub_1C00F71CC(v8);
  if (v18)
    v19 = 771;
  else
    v19 = 0;
  if (v18)
    v20 = v17;
  else
    v20 = 0;
  *((_QWORD *)&v48[2] + 1) = v19;
  *(_QWORD *)&v48[3] = v20;
  *((_QWORD *)&v48[3] + 1) = v18;
  v21 = sub_1C00F71C0(v8);
  if (v22)
    v23 = 771;
  else
    v23 = 0;
  if (v22)
    v24 = v21;
  else
    v24 = 0;
  *(_QWORD *)&v48[4] = v23;
  *((_QWORD *)&v48[4] + 1) = v24;
  *(_QWORD *)&v48[5] = v22;
  memset(&v48[32], 0, 40);
  *((_QWORD *)&v48[34] + 1) = 589824;
  v48[35] = 0uLL;
  *(_QWORD *)&v48[36] = 17367040;
  *((_QWORD *)&v48[36] + 1) = sub_1C02B699C(v8);
  *(_QWORD *)&v48[37] = v25;
  LOBYTE(v45[0]) = v49;
  v26 = a3;
  sub_1C024B88C((uint64_t)v45);
  memcpy(__dst, __src, 0x106uLL);
  nullsub_1(__dst);
  sub_1C005578C((uint64_t)__dst, (uint64_t)&v48[7] + 8, &qword_1EF5BF528);
  v27 = v50;
  LOBYTE(v48[43]) = v50;
  BYTE1(v48[43]) = a5;
  memcpy(v45, __src, 0x106uLL);
  v28 = sub_1C024BB7C();
  if (v29)
  {
    *(_QWORD *)&v48[38] = v28;
    *((_QWORD *)&v48[38] + 1) = v29;
    LOBYTE(v48[39]) = 3;
  }
  if (qword_1EF5B7F08 != -1)
    swift_once();
  v30 = sub_1C0303B98();
  __swift_project_value_buffer(v30, (uint64_t)qword_1EF5FC6B0);
  v31 = sub_1C0303B80();
  v32 = sub_1C03042E8();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = a6;
    v34 = swift_slowAlloc();
    v35 = swift_slowAlloc();
    v44 = v35;
    *(_DWORD *)v34 = 136315394;
    LOBYTE(v45[0]) = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3338);
    v36 = sub_1C0303EF8();
    v45[0] = sub_1C003E6D8(v36, v37, &v44);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2080;
    swift_beginAccess();
    memcpy(v45, v48, sizeof(v45));
    memcpy(v43, v48, sizeof(v43));
    sub_1C0199A5C((uint64_t)v45);
    v38 = sub_1C0303EF8();
    v43[0] = sub_1C003E6D8(v38, v39, &v44);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v31, v32, "setting %s on %s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v35, -1, -1);
    v40 = v34;
    a6 = v33;
    MEMORY[0x1C3B98378](v40, -1, -1);
  }

  swift_beginAccess();
  return memcpy(a6, v48, 0x2C8uLL);
}

void sub_1C02B6550(void *a1, char a2)
{
  uint64_t v2;

  sub_1C01EE480(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(NSObject **)(v2 + 32));
}

uint64_t sub_1C02B6560()
{
  _QWORD *v0;
  unint64_t v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[14])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[18] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v0[25] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v0[30] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_bridgeObjectRelease();
  if (v0[54] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[67] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0[90];
  if (v1 >> 60 != 15)
    sub_1C0040600(v0[89], v1);
  return swift_deallocObject();
}

unint64_t sub_1C02B66BC()
{
  unint64_t result;

  result = qword_1EF5C3348;
  if (!qword_1EF5C3348)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for LocationInferenceError, &type metadata for LocationInferenceError);
    atomic_store(result, (unint64_t *)&qword_1EF5C3348);
  }
  return result;
}

uint64_t sub_1C02B66F8()
{
  OUTLINED_FUNCTION_19_0();
  return swift_deallocObject();
}

void sub_1C02B6718(unint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1C02B2D04(a1, a2, *(void (**)(_QWORD, _QWORD))(v2 + 16));
}

uint64_t sub_1C02B6720()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1C02B6744()
{
  uint64_t v0;

  return sub_1C02B5524(*(void **)(v0 + 16), (SEL *)&selRef_givenName);
}

uint64_t sub_1C02B6764()
{
  uint64_t v0;

  return sub_1C02B5524(*(void **)(v0 + 16), (SEL *)&selRef_familyName);
}

uint64_t sub_1C02B6794()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1C02B67C0(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_1C02B5570(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(dispatch_group_t *)(v2 + 24));
}

uint64_t sub_1C02B67CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Signpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C02B6810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Signpost();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + *(_QWORD *)(v2 + 64) + 31) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + v3;
  v6 = sub_1C0303B74();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C02B68C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Signpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C02B690C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for Signpost() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  sub_1C02B5C34(a1, a2, v2 + v6, *(void (**)(id, uint64_t))(v2 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned __int8 *)(v2 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16), *(void **)(v2 + ((v7 + 31) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v2 + ((v7 + 31) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(v2 + ((v7 + 31) & 0xFFFFFFFFFFFFFFF8) + 9));
}

uint64_t sub_1C02B699C(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_fullThoroughfare);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C0303EB0();

  return v3;
}

void sub_1C02B69FC()
{
  sub_1C02B55DC();
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_19_0();

  return swift_deallocObject();
}

uint64_t sub_1C02B6A38()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_0();

  return swift_deallocObject();
}

uint64_t sub_1C02B6A60(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1C02B5A60(a1, a2 & 1, *(uint64_t (**)(void))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40));
}

void OUTLINED_FUNCTION_1_136(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint8_t *v4;
  NSObject *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v5, v6, a4, v4, 2u);
}

void *OUTLINED_FUNCTION_4_108()
{
  return memcpy(&STACK[0x790], &STACK[0xC30], 0x2C8uLL);
}

uint64_t OUTLINED_FUNCTION_7_97()
{
  return sub_1C01B5F10((uint64_t)&STACK[0xC30]);
}

uint64_t OUTLINED_FUNCTION_10_78()
{
  return sub_1C030415C();
}

uint64_t OUTLINED_FUNCTION_11_80()
{
  return sub_1C0199A5C((uint64_t)&STACK[0xC30]);
}

_WORD *OUTLINED_FUNCTION_13_67(_WORD *result)
{
  *result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_14_68()
{
  return sub_1C0304180();
}

unint64_t *OUTLINED_FUNCTION_15_58()
{
  return &STACK[0x790];
}

uint64_t OUTLINED_FUNCTION_16_57(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  return a58;
}

uint64_t OUTLINED_FUNCTION_20_40()
{
  return type metadata accessor for LocationResolutionContext();
}

uint64_t OUTLINED_FUNCTION_21_48()
{
  return sub_1C01B5F10((uint64_t)&STACK[0x790]);
}

uint64_t OUTLINED_FUNCTION_22_53()
{
  return sub_1C0199A5C((uint64_t)&STACK[0x790]);
}

uint64_t OUTLINED_FUNCTION_23_43()
{
  return sub_1C0303EF8();
}

uint64_t OUTLINED_FUNCTION_25_34()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_27_48()
{
  return swift_retain();
}

uint64_t sub_1C02B6B84()
{
  sub_1C02B6C98();
  return sub_1C0304BAC();
}

uint64_t sub_1C02B6BAC()
{
  sub_1C02B6C98();
  return sub_1C0304BB8();
}

uint64_t SportsResolutionContext.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3360);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02B6C98();
  sub_1C0304BA0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1C02B6C98()
{
  unint64_t result;

  result = qword_1EF5C3368;
  if (!qword_1EF5C3368)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03243F4, &type metadata for SportsResolutionContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3368);
  }
  return result;
}

uint64_t SportsResolutionContext.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

uint64_t sub_1C02B6CF8(uint64_t a1)
{
  return SportsResolutionContext.init(from:)(a1);
}

uint64_t sub_1C02B6D0C(_QWORD *a1)
{
  return SportsResolutionContext.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SportsResolutionContext()
{
  return &type metadata for SportsResolutionContext;
}

ValueMetadata *type metadata accessor for SportsResolutionContext.CodingKeys()
{
  return &type metadata for SportsResolutionContext.CodingKeys;
}

unint64_t sub_1C02B6D44()
{
  unint64_t result;

  result = qword_1EF5C3370;
  if (!qword_1EF5C3370)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03243A4, &type metadata for SportsResolutionContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3370);
  }
  return result;
}

unint64_t sub_1C02B6D84()
{
  unint64_t result;

  result = qword_1EF5C3378;
  if (!qword_1EF5C3378)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03243CC, &type metadata for SportsResolutionContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3378);
  }
  return result;
}

void sub_1C02B6DC0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;

  v2 = a1;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = a1 + 104;
    v27 = *(_QWORD *)(a1 + 16);
    v24 = v3 - 1;
    v26 = MEMORY[0x1E0DEE9D8];
    v25 = a1 + 104;
    do
    {
      v6 = (_BYTE *)(v5 + 80 * v4);
      while (1)
      {
        if (v4 >= *(_QWORD *)(v2 + 16))
        {
          __break(1u);
          return;
        }
        v7 = *((_QWORD *)v6 - 9);
        v28 = *(v6 - 64);
        v33 = *((_QWORD *)v6 - 7);
        v30 = *(v6 - 40);
        v31 = *(v6 - 48);
        v29 = *((_QWORD *)v6 - 4);
        v32 = *(v6 - 24);
        v8 = *(v6 - 23);
        v9 = *(v6 - 16);
        v10 = *((_QWORD *)v6 - 1);
        v11 = v4 + 1;
        v12 = *v6;
        type metadata accessor for DateTime();
        v13 = (_QWORD *)swift_retain();
        if (!static DateTime.<= infix(_:_:)(v13, a2))
          break;
        swift_release();
        v6 += 80;
        ++v4;
        v2 = a1;
        if (v27 == v11)
          goto LABEL_13;
      }
      v23 = v4;
      v14 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C00B20D4();
        v14 = v26;
      }
      v15 = v33;
      v17 = v9;
      v16 = v8;
      v18 = v10;
      v19 = v12;
      v20 = *(_QWORD *)(v14 + 16);
      v21 = v20 + 1;
      if (v20 >= *(_QWORD *)(v14 + 24) >> 1)
      {
        sub_1C00B20D4();
        v21 = v20 + 1;
        v15 = v33;
        v19 = v12;
        v18 = v10;
        v17 = v9;
        v16 = v8;
        v14 = v26;
      }
      *(_QWORD *)(v14 + 16) = v21;
      v26 = v14;
      v22 = v14 + 80 * v20;
      *(_QWORD *)(v22 + 32) = v7;
      *(_BYTE *)(v22 + 40) = v28;
      *(_QWORD *)(v22 + 48) = v15;
      *(_BYTE *)(v22 + 56) = v31;
      *(_BYTE *)(v22 + 64) = v30;
      *(_QWORD *)(v22 + 72) = v29;
      *(_BYTE *)(v22 + 80) = v32;
      *(_BYTE *)(v22 + 81) = v16;
      *(_BYTE *)(v22 + 88) = v17;
      *(_QWORD *)(v22 + 96) = v18;
      *(_BYTE *)(v22 + 104) = v19;
      v2 = a1;
      v5 = v25;
      ++v4;
    }
    while (v24 != v23);
  }
LABEL_13:
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_1C02B7004(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  int v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;

  v2 = a1;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = a1 + 104;
    v21 = *(_QWORD *)(a1 + 16);
    v18 = v3 - 1;
    v20 = MEMORY[0x1E0DEE9D8];
    v19 = a1 + 104;
    do
    {
      v6 = (_BYTE *)(v5 + 80 * v4);
      v7 = v4;
      while (1)
      {
        if (v7 >= *(_QWORD *)(v2 + 16))
        {
          __break(1u);
          return;
        }
        v8 = v2;
        v9 = *((_QWORD *)v6 - 9);
        v10 = *(v6 - 64);
        v11 = *((_QWORD *)v6 - 7);
        v12 = *(v6 - 48);
        v27 = *(v6 - 40);
        v26 = *((_QWORD *)v6 - 4);
        v13 = *(v6 - 23);
        v24 = *(v6 - 16);
        v25 = *(v6 - 24);
        v23 = *((_QWORD *)v6 - 1);
        v22 = *v6;
        type metadata accessor for DateTime();
        v14 = (_QWORD *)swift_retain();
        if (static DateTime.<= infix(_:_:)(v14, a2))
        {
          if (v12)
            break;
        }
        ++v7;
        swift_release();
        v6 += 80;
        v2 = v8;
        if (v21 == v7)
          goto LABEL_14;
      }
      v15 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C00B20D4();
        v15 = v20;
      }
      v2 = v8;
      v16 = *(_QWORD *)(v15 + 16);
      if (v16 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_1C00B20D4();
        v15 = v20;
      }
      *(_QWORD *)(v15 + 16) = v16 + 1;
      v20 = v15;
      v17 = v15 + 80 * v16;
      *(_QWORD *)(v17 + 32) = v9;
      v4 = v7 + 1;
      *(_BYTE *)(v17 + 40) = v10;
      *(_QWORD *)(v17 + 48) = v11;
      *(_BYTE *)(v17 + 56) = 1;
      *(_BYTE *)(v17 + 64) = v27;
      *(_QWORD *)(v17 + 72) = v26;
      *(_BYTE *)(v17 + 80) = v25;
      *(_BYTE *)(v17 + 81) = v13;
      *(_BYTE *)(v17 + 88) = v24;
      *(_QWORD *)(v17 + 96) = v23;
      *(_BYTE *)(v17 + 104) = v22;
      v5 = v19;
    }
    while (v18 != v7);
  }
LABEL_14:
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_1C02B7210(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;

  v2 = a1;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = a1 + 104;
    v27 = *(_QWORD *)(a1 + 16);
    v24 = v3 - 1;
    v26 = MEMORY[0x1E0DEE9D8];
    v25 = a1 + 104;
    do
    {
      v6 = (_BYTE *)(v5 + 80 * v4);
      while (1)
      {
        if (v4 >= *(_QWORD *)(v2 + 16))
        {
          __break(1u);
          return;
        }
        v7 = *((_QWORD *)v6 - 9);
        v28 = *(v6 - 64);
        v33 = *((_QWORD *)v6 - 7);
        v30 = *(v6 - 40);
        v31 = *(v6 - 48);
        v29 = *((_QWORD *)v6 - 4);
        v32 = *(v6 - 24);
        v8 = *(v6 - 23);
        v9 = *(v6 - 16);
        v10 = *((_QWORD *)v6 - 1);
        v11 = v4 + 1;
        v12 = *v6;
        type metadata accessor for DateTime();
        v13 = (_QWORD *)swift_retain();
        if (static DateTime.< infix(_:_:)(v13, a2))
          break;
        swift_release();
        v6 += 80;
        ++v4;
        v2 = a1;
        if (v27 == v11)
          goto LABEL_13;
      }
      v23 = v4;
      v14 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C00B20D4();
        v14 = v26;
      }
      v15 = v33;
      v17 = v9;
      v16 = v8;
      v18 = v10;
      v19 = v12;
      v20 = *(_QWORD *)(v14 + 16);
      v21 = v20 + 1;
      if (v20 >= *(_QWORD *)(v14 + 24) >> 1)
      {
        sub_1C00B20D4();
        v21 = v20 + 1;
        v15 = v33;
        v19 = v12;
        v18 = v10;
        v17 = v9;
        v16 = v8;
        v14 = v26;
      }
      *(_QWORD *)(v14 + 16) = v21;
      v26 = v14;
      v22 = v14 + 80 * v20;
      *(_QWORD *)(v22 + 32) = v7;
      *(_BYTE *)(v22 + 40) = v28;
      *(_QWORD *)(v22 + 48) = v15;
      *(_BYTE *)(v22 + 56) = v31;
      *(_BYTE *)(v22 + 64) = v30;
      *(_QWORD *)(v22 + 72) = v29;
      *(_BYTE *)(v22 + 80) = v32;
      *(_BYTE *)(v22 + 81) = v16;
      *(_BYTE *)(v22 + 88) = v17;
      *(_QWORD *)(v22 + 96) = v18;
      *(_BYTE *)(v22 + 104) = v19;
      v2 = a1;
      v5 = v25;
      ++v4;
    }
    while (v24 != v23);
  }
LABEL_13:
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_1C02B7454(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  int v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;

  v2 = a1;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = a1 + 104;
    v21 = *(_QWORD *)(a1 + 16);
    v18 = v3 - 1;
    v20 = MEMORY[0x1E0DEE9D8];
    v19 = a1 + 104;
    do
    {
      v6 = (_BYTE *)(v5 + 80 * v4);
      v7 = v4;
      while (1)
      {
        if (v7 >= *(_QWORD *)(v2 + 16))
        {
          __break(1u);
          return;
        }
        v8 = v2;
        v9 = *((_QWORD *)v6 - 9);
        v10 = *(v6 - 64);
        v11 = *((_QWORD *)v6 - 7);
        v12 = *(v6 - 48);
        v27 = *(v6 - 40);
        v26 = *((_QWORD *)v6 - 4);
        v13 = *(v6 - 23);
        v24 = *(v6 - 16);
        v25 = *(v6 - 24);
        v23 = *((_QWORD *)v6 - 1);
        v22 = *v6;
        type metadata accessor for DateTime();
        v14 = (_QWORD *)swift_retain();
        if (!static DateTime.< infix(_:_:)(v14, a2))
        {
          if (v12)
            break;
        }
        ++v7;
        swift_release();
        v6 += 80;
        v2 = v8;
        if (v21 == v7)
          goto LABEL_14;
      }
      v15 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C00B20D4();
        v15 = v20;
      }
      v2 = v8;
      v16 = *(_QWORD *)(v15 + 16);
      if (v16 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_1C00B20D4();
        v15 = v20;
      }
      *(_QWORD *)(v15 + 16) = v16 + 1;
      v20 = v15;
      v17 = v15 + 80 * v16;
      *(_QWORD *)(v17 + 32) = v9;
      v4 = v7 + 1;
      *(_BYTE *)(v17 + 40) = v10;
      *(_QWORD *)(v17 + 48) = v11;
      *(_BYTE *)(v17 + 56) = 1;
      *(_BYTE *)(v17 + 64) = v27;
      *(_QWORD *)(v17 + 72) = v26;
      *(_BYTE *)(v17 + 80) = v25;
      *(_BYTE *)(v17 + 81) = v13;
      *(_BYTE *)(v17 + 88) = v24;
      *(_QWORD *)(v17 + 96) = v23;
      *(_BYTE *)(v17 + 104) = v22;
      v5 = v19;
    }
    while (v18 != v7);
  }
LABEL_14:
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_1C02B7660()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_18_0();
  v29 = v0;
  v2 = v1;
  v30 = v3;
  v31 = v4;
  v6 = v5;
  v7 = OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_6_0();
  v11 = v10 - v9;
  v12 = sub_1C0301CFC();
  v32 = *(_QWORD *)(v12 - 8);
  v33 = v12;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_6_0();
  v16 = v15 - v14;
  sub_1C0301CF0();
  if (qword_1ED728440 != -1)
    swift_once();
  v17 = (void *)qword_1ED729668;
  v18 = v11 + *(int *)(v7 + 20);
  *(_QWORD *)v18 = "ContactResolver.MegadomeSignalProvider.init";
  *(_QWORD *)(v18 + 8) = 43;
  *(_BYTE *)(v18 + 16) = 2;
  v19 = v17;
  sub_1C0303B68();
  *(_QWORD *)(v11 + *(int *)(v7 + 24)) = v19;
  v20 = v19;
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v21 = OUTLINED_FUNCTION_16_0();
  *(_OWORD *)(v21 + 16) = xmmword_1C0305B60;
  v22 = OUTLINED_FUNCTION_23_0();
  v24 = v23;
  *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v21 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v21 + 40) = v24;
  sub_1C0303B50();
  swift_bridgeObjectRelease();

  sub_1C0048FE0(v31, v6);
  *(_BYTE *)(v6 + 40) = v30 & 1;
  if (v2 == 2)
  {
    v25 = 0x408F3FFDF3B645A2;
    v26 = 1;
    LOBYTE(v27) = 1;
    LOBYTE(v28) = 1;
  }
  else
  {
    v26 = v2 & 1;
    v27 = (v2 >> 8) & 1;
    v28 = (v2 >> 16) & 1;
    v25 = v29;
  }
  *(_BYTE *)(v6 + 48) = v26;
  *(_BYTE *)(v6 + 49) = v27;
  *(_BYTE *)(v6 + 50) = v28;
  *(_QWORD *)(v6 + 56) = v25;
  sub_1C004CE00();
  __swift_destroy_boxed_opaque_existential_0Tm(v31);
  sub_1C003DDAC(v11);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v16, v33);
  OUTLINED_FUNCTION_1();
}

void sub_1C02B78AC()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  os_log_type_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  os_log_type_t v52;
  _DWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  id v82;
  id v83;
  os_log_type_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unsigned int v93;
  BOOL v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  void *v98;
  NSObject *v99;
  os_log_type_t v100;
  const char *v101;
  uint8_t *v102;
  uint64_t v103;
  uint8_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  NSObject *v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115[3];
  uint64_t v116;
  uint64_t v117;

  OUTLINED_FUNCTION_18_0();
  v110 = v1;
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_19_2();
  v8 = (uint64_t *)(v6 - v7);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v108 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v108 - v13;
  v15 = MEMORY[0x1E0DEE9D8];
  v115[0] = MEMORY[0x1E0DEE9D8];
  v16 = *(NSObject **)(v3 + 16);
  OUTLINED_FUNCTION_44();
  v111 = v3;
  v108 = v16;
  if (v16)
  {
    OUTLINED_FUNCTION_153();
    v109 = v5;
    v17 = *(_QWORD *)(v5 + 72);
    v112 = v18;
    v19 = v3 + v18;
    v16 = MEMORY[0x1E0DEE9D8];
    v0 = &qword_1ED726DB0;
    v21 = v20;
    do
    {
      OUTLINED_FUNCTION_92_9(v19);
      if (*(_QWORD *)(*(_QWORD *)&v14[*(int *)(type metadata accessor for Contact() + 80)] + 16))
      {
        sub_1C01323F0((uint64_t)v14, (uint64_t)v12, &qword_1ED726DB0);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1C00B1738();
        v16 = v115[0];
        v22 = *(_QWORD *)(v115[0] + 16);
        if (v22 >= *(_QWORD *)(v115[0] + 24) >> 1)
        {
          sub_1C00B1738();
          v16 = v115[0];
        }
        v16[2].isa = (Class)(v22 + 1);
        sub_1C01323F0((uint64_t)v12, (uint64_t)v16 + v112 + v22 * v17, &qword_1ED726DB0);
      }
      else
      {
        sub_1C003E978((uint64_t)v14, &qword_1ED726DB0);
      }
      v19 += v17;
      --v21;
    }
    while (v21);
    v23 = v115[0];
    v5 = v109;
    v15 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v23 = v15;
  }
  OUTLINED_FUNCTION_33();
  v24 = *(_QWORD *)(v23 + 16);
  if (v24)
  {
    v115[0] = v15;
    sub_1C030475C();
    OUTLINED_FUNCTION_153();
    v15 = v23 + v25;
    v26 = *(_QWORD *)(v5 + 72);
    v0 = &qword_1ED726DB0;
    do
    {
      sub_1C010E4E8(v15, (uint64_t)v8);
      v27 = *v8;
      v28 = v8[1];
      objc_allocWithZone(MEMORY[0x1E0D3DFA0]);
      swift_bridgeObjectRetain();
      sub_1C02BB4B8(v27, v28, 0x6361746E6F434E43, 0xE900000000000074);
      sub_1C003E978((uint64_t)v8, &qword_1ED726DB0);
      v16 = v115;
      sub_1C0304738();
      sub_1C0304768();
      sub_1C0304774();
      sub_1C0304744();
      v15 += v26;
      --v24;
    }
    while (v24);
    v112 = v115[0];
    OUTLINED_FUNCTION_1_0();
  }
  else
  {
    OUTLINED_FUNCTION_1_0();
    v112 = MEMORY[0x1E0DEE9D8];
  }
  if (qword_1ED727970 != -1)
    swift_once();
  v29 = OUTLINED_FUNCTION_9_0();
  v30 = __swift_project_value_buffer(v29, (uint64_t)&unk_1ED7295C8);
  v31 = v112;
  swift_bridgeObjectRetain_n();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_30_39();
  v32 = OUTLINED_FUNCTION_9_1();
  v33 = v31 >> 62;
  if (OUTLINED_FUNCTION_55_20(v32))
  {
    v109 = v30;
    v34 = OUTLINED_FUNCTION_4_0();
    v35 = OUTLINED_FUNCTION_4_0();
    v115[0] = v35;
    *(_DWORD *)v34 = 136315906;
    v116 = OUTLINED_FUNCTION_0_144(v35, v36, v115);
    sub_1C03044B0();
    *(_WORD *)(v34 + 12) = 2048;
    swift_bridgeObjectRelease();
    v116 = (uint64_t)v108;
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 22) = 2048;
    if (v33)
    {
      OUTLINED_FUNCTION_65();
      v37 = sub_1C03047F8();
      OUTLINED_FUNCTION_29();
    }
    else
    {
      v37 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    OUTLINED_FUNCTION_29();
    v116 = v37;
    sub_1C03044B0();
    v38 = OUTLINED_FUNCTION_29();
    *(_WORD *)(v34 + 32) = 2080;
    v39 = OUTLINED_FUNCTION_5_1(v38, &qword_1EF5C34E0);
    v40 = OUTLINED_FUNCTION_65();
    v41 = MEMORY[0x1C3B97040](v40, v39);
    v43 = v42;
    OUTLINED_FUNCTION_29();
    v116 = sub_1C003E6D8(v41, v43, v115);
    OUTLINED_FUNCTION_45_27();
    OUTLINED_FUNCTION_2();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v16, (os_log_type_t)v15, "%s Converted CandidateContact (size=%ld)\n-> GDEntitySourceIDs (size=%ld): %s", (uint8_t *)v34, 0x2Au);
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_2();
  swift_bridgeObjectRelease_n();
  if (v33)
  {
    OUTLINED_FUNCTION_44();
    v44 = OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_33();
  }
  else
  {
    v44 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v45 = v110;
  if (!v44)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_30_39();
    v52 = OUTLINED_FUNCTION_42_0();
    if (OUTLINED_FUNCTION_20_7(v52))
    {
      v53 = (_DWORD *)OUTLINED_FUNCTION_4_0();
      v54 = OUTLINED_FUNCTION_4_0();
      v115[0] = v54;
      *v53 = 136315138;
      v116 = OUTLINED_FUNCTION_0_144(v54, v55, v115);
      OUTLINED_FUNCTION_13_68();
      OUTLINED_FUNCTION_15_25(&dword_1C0039000, v56, v57, "%s Skip creation of GDEntityResolutionRequest as all the contacts got filtered out");
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_5();
    }

    goto LABEL_54;
  }
  v46 = sub_1C0303718();
  v47 = sub_1C03039AC();
  v49 = v48;
  swift_release();
  v116 = v47;
  v117 = v49;
  if (v49)
    goto LABEL_38;
  sub_1C0303718();
  v46 = sub_1C0303994();
  OUTLINED_FUNCTION_1_0();
  if (!v46)
  {
    v47 = 0;
    v49 = 0;
LABEL_35:
    v116 = v47;
    v117 = v49;
    OUTLINED_FUNCTION_30_39();
    v58 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_30(v58))
    {
      v59 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      v60 = OUTLINED_FUNCTION_4_0();
      v115[0] = v60;
      *(_DWORD *)v59 = 136315138;
      v62 = OUTLINED_FUNCTION_0_144(v60, v61, v115);
      OUTLINED_FUNCTION_51(v62);
      sub_1C03044B0();
      OUTLINED_FUNCTION_13_0(&dword_1C0039000, v46, (os_log_type_t)v0, "%s SiriEnvironment's utterance nil, trying speechPackage", v59);
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_5();
    }

    if (!v49)
    {
      OUTLINED_FUNCTION_30_39();
      v103 = OUTLINED_FUNCTION_34();
      if (OUTLINED_FUNCTION_60_10(v46))
      {
        v104 = (uint8_t *)OUTLINED_FUNCTION_4_0();
        v105 = OUTLINED_FUNCTION_4_0();
        v115[0] = v105;
        *(_DWORD *)v104 = 136315138;
        v107 = OUTLINED_FUNCTION_0_144(v105, v106, v115);
        OUTLINED_FUNCTION_51(v107);
        sub_1C03044B0();
        OUTLINED_FUNCTION_13_0(&dword_1C0039000, v46, (os_log_type_t)v103, "%s ⚠️ Unable to get utterance from SiriEnvironment", v104);
        OUTLINED_FUNCTION_23();
LABEL_40:
        OUTLINED_FUNCTION_5();
      }

      goto LABEL_43;
    }
LABEL_38:
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_30_39();
    v63 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_30(v63))
    {
      v64 = OUTLINED_FUNCTION_4_0();
      v65 = OUTLINED_FUNCTION_4_0();
      v109 = v30;
      v114 = v65;
      *(_DWORD *)v64 = 136315394;
      v115[0] = OUTLINED_FUNCTION_0_144(v65, v66, &v114);
      OUTLINED_FUNCTION_26_46();
      *(_WORD *)(v64 + 12) = 2080;
      v115[0] = v47;
      v115[1] = v49;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED727DC0);
      v67 = sub_1C0303EF8();
      v115[0] = OUTLINED_FUNCTION_91_10(v67, v68);
      OUTLINED_FUNCTION_26_46();
      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_28();
      OUTLINED_FUNCTION_38_8(&dword_1C0039000, v46, (os_log_type_t)v0, "%s For use in GDEntityResolutionRequest, utterance: %s", (uint8_t *)v64);
      OUTLINED_FUNCTION_21_2();
      goto LABEL_40;
    }

    OUTLINED_FUNCTION_2();
LABEL_43:
    sub_1C02B9A48();
    v70 = v69;
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_30_39();
    v71 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_60_10(v46))
    {
      v72 = OUTLINED_FUNCTION_4_0();
      v73 = OUTLINED_FUNCTION_4_0();
      v115[0] = v73;
      *(_DWORD *)v72 = 136315394;
      v75 = OUTLINED_FUNCTION_0_144(v73, v74, v115);
      OUTLINED_FUNCTION_51(v75);
      OUTLINED_FUNCTION_26_46();
      *(_WORD *)(v72 + 12) = 2080;
      v114 = v70;
      OUTLINED_FUNCTION_44();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C34D8);
      v76 = sub_1C0303EF8();
      v114 = sub_1C003E6D8(v76, v77, v115);
      OUTLINED_FUNCTION_26_46();
      OUTLINED_FUNCTION_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_38_8(&dword_1C0039000, v46, v71, "%s For use in GDEntityResolutionRequest, spans: %s", (uint8_t *)v72);
      OUTLINED_FUNCTION_21_2();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_2();
    swift_beginAccess();
    v78 = v116;
    v79 = v117;
    v80 = objc_allocWithZone(MEMORY[0x1E0D3DF90]);
    v81 = v78;
    v82 = v80;
    v83 = sub_1C02BB548(v112, v81, v79, v70, 5, 1);
    OUTLINED_FUNCTION_30_39();
    v84 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_13_2(v84))
    {
      v85 = OUTLINED_FUNCTION_4_0();
      v86 = OUTLINED_FUNCTION_4_0();
      v114 = v86;
      *(_DWORD *)v85 = 136315650;
      v88 = OUTLINED_FUNCTION_0_144(v86, v87, &v114);
      OUTLINED_FUNCTION_20_5(v88);
      v89 = sub_1C03044B0();
      *(_WORD *)(v85 + 12) = 2080;
      v113 = (uint64_t)OUTLINED_FUNCTION_0_2(v89, sel_mode);
      type metadata accessor for GDEntityResolutionMode(0);
      v90 = sub_1C0303EF8();
      v113 = OUTLINED_FUNCTION_91_10(v90, v91);
      sub_1C03044B0();

      v92 = OUTLINED_FUNCTION_28();
      *(_WORD *)(v85 + 22) = 2080;
      v93 = OUTLINED_FUNCTION_0_2(v92, sel_includeFeatures);
      v94 = v93 == 0;
      if (v93)
        v95 = 1702195828;
      else
        v95 = 0x65736C6166;
      if (v94)
        v96 = 0xE500000000000000;
      else
        v96 = 0xE400000000000000;
      v97 = sub_1C003E6D8(v95, v96, &v114);
      OUTLINED_FUNCTION_85_9(v97);
      OUTLINED_FUNCTION_90_10();

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_46_26();
      OUTLINED_FUNCTION_46_1(v98, v99, v100, v101, v102);
      OUTLINED_FUNCTION_51_22();
      OUTLINED_FUNCTION_5();
    }

LABEL_54:
    OUTLINED_FUNCTION_1();
    return;
  }
  v50 = -[NSObject recognition](v46, sel_recognition);

  if (v50)
  {
    v47 = sub_1C02BB838(v50);
    v49 = v51;
    goto LABEL_35;
  }
  __break(1u);
}

void sub_1C02B8460()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  unint64_t v33;
  unint64_t isa;
  uint64_t v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  os_log_type_t v55;
  _BOOL4 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  unint64_t v63;
  char isUniquelyReferenced_nonNull_native;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject v72;
  uint64_t v73;
  char v74;
  char v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  char v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  NSObject v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  void *v87;
  uint64_t v88;
  os_log_type_t v89;
  int v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  os_log_type_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  id v107;
  os_log_type_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  objc_class *v114;
  unint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t *v119;
  __int128 v120;
  uint64_t v121;
  __int128 v122;
  char *v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t *v127;
  NSObject *v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t i;
  char *v134;
  NSObject *v135;
  uint64_t v136;
  uint64_t v137[16];
  uint64_t v138;
  uint64_t v139;

  OUTLINED_FUNCTION_53_21();
  v138 = v0;
  v139 = v1;
  v3 = v2;
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  v131 = *(_QWORD *)(v126 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_19_2();
  v7 = (uint64_t *)(v5 - v6);
  MEMORY[0x1E0C80A78](v8);
  v123 = (char *)&v116 - v9;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v116 - v11);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726F18);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_53();
  v130 = v15;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED726F20);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_27();
  v135 = v17;
  OUTLINED_FUNCTION_42();
  v19 = MEMORY[0x1E0C80A78](v18);
  v134 = (char *)&v116 - v20;
  if (!*((_QWORD *)v3->isa + 2))
    goto LABEL_15;
  v21 = OUTLINED_FUNCTION_0_2(v19, sel_rankedResults);
  OUTLINED_FUNCTION_5_1((uint64_t)v21, &qword_1EF5C34C8);
  v22 = sub_1C0304138();

  if (v22 >> 62)
  {
    OUTLINED_FUNCTION_65();
    v23 = sub_1C03047F8();
    OUTLINED_FUNCTION_29();
  }
  else
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v24 = OUTLINED_FUNCTION_29();
  if (!v23)
  {
LABEL_15:
    if (qword_1ED727970 != -1)
      swift_once();
    v35 = OUTLINED_FUNCTION_9_0();
    v135 = OUTLINED_FUNCTION_7(v35, (uint64_t)&unk_1ED7295C8);
    v36 = sub_1C03042E8();
    if (os_log_type_enabled(v135, v36))
    {
      v37 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      v38 = OUTLINED_FUNCTION_4_0();
      v137[0] = v38;
      *(_DWORD *)v37 = 136315138;
      v40 = OUTLINED_FUNCTION_0_144(v38, v39, v137);
      OUTLINED_FUNCTION_20_5(v40);
      OUTLINED_FUNCTION_81_8();
      OUTLINED_FUNCTION_13_0(&dword_1C0039000, v135, v36, "%s Early exit as either result.rankedResults or candidates is empty", v37);
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_5();
    }

    return;
  }
  v25 = OUTLINED_FUNCTION_0_2(v24, sel_rankedResults);
  v26 = sub_1C0304138();

  v27 = MEMORY[0x1E0DEE9D8];
  v137[0] = MEMORY[0x1E0DEE9D8];
  if (v26 >> 62)
  {
    OUTLINED_FUNCTION_44();
    v28 = OUTLINED_FUNCTION_87();
  }
  else
  {
    v28 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_44();
  }
  v127 = v7;
  v128 = v3;
  v125 = v12;
  v132 = v13;
  if (v28)
  {
    if (v28 < 1)
    {
      __break(1u);
      goto LABEL_79;
    }
    v29 = 0;
    do
    {
      if ((v26 & 0xC000000000000001) != 0)
        v30 = (id)MEMORY[0x1C3B975EC](v29, v26);
      else
        v30 = *(id *)(v26 + 8 * v29 + 32);
      v31 = v30;
      ++v29;
      v32 = objc_msgSend(v30, sel_rankedItems);
      sub_1C00447B0(0, (unint64_t *)&unk_1EF5B8D38);
      v33 = sub_1C0304138();

      sub_1C004F830(v33);
      v13 = v132;
    }
    while (v28 != v29);
    OUTLINED_FUNCTION_2();
    isa = v137[0];
    v3 = v128;
    v12 = v125;
    v27 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    OUTLINED_FUNCTION_2();
    isa = MEMORY[0x1E0DEE9D8];
  }
  if (isa >> 62)
  {
    OUTLINED_FUNCTION_44();
    v41 = OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_33();
    if (v41)
    {
LABEL_23:
      v137[0] = v27;
      sub_1C00B19E4();
      if ((v41 & 0x8000000000000000) == 0)
      {
        v42 = v3;
        v43 = 0;
        v44 = v137[0];
        do
        {
          v27 = (unint64_t)*(id *)(isa + 8 * v43 + 32);
          v45 = objc_msgSend((id)v27, sel_sourceID);
          v46 = v45;
          if (v45)
          {
            v47 = objc_msgSend(v45, sel_value);

            v46 = (void *)sub_1C0303EB0();
            v49 = v48;

          }
          else
          {
            v49 = 0;
          }
          v137[0] = v44;
          v50 = *(_QWORD *)(v44 + 16);
          if (v50 >= *(_QWORD *)(v44 + 24) >> 1)
          {
            sub_1C00B19E4();
            v44 = v137[0];
          }
          ++v43;
          *(_QWORD *)(v44 + 16) = v50 + 1;
          v51 = (_QWORD *)(v44 + 24 * v50);
          v51[4] = v46;
          v51[5] = v49;
          v51[6] = v27;
        }
        while (v41 != v43);
        OUTLINED_FUNCTION_33();
        v3 = v42;
        v12 = v125;
        v13 = v132;
        goto LABEL_36;
      }
LABEL_79:
      __break(1u);
      return;
    }
  }
  else
  {
    v41 = *(_QWORD *)((isa & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v41)
      goto LABEL_23;
  }
  OUTLINED_FUNCTION_33();
  v44 = MEMORY[0x1E0DEE9D8];
LABEL_36:
  v52 = sub_1C02B9214(v44);
  if (qword_1ED727970 != -1)
LABEL_77:
    swift_once();
  v53 = OUTLINED_FUNCTION_9_0();
  v54 = __swift_project_value_buffer(v53, (uint64_t)&unk_1ED7295C8);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_27_49();
  v55 = OUTLINED_FUNCTION_42_0();
  v56 = OUTLINED_FUNCTION_27_2(v55);
  v124 = v54;
  if (v56)
  {
    v57 = OUTLINED_FUNCTION_4_0();
    v58 = OUTLINED_FUNCTION_4_0();
    v137[0] = v58;
    *(_DWORD *)v57 = 136315394;
    v136 = OUTLINED_FUNCTION_0_144(v58, v59, v137);
    OUTLINED_FUNCTION_90_10();
    *(_WORD *)(v57 + 12) = 2080;
    i = v57 + 14;
    OUTLINED_FUNCTION_65();
    v60 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED727DC0);
    OUTLINED_FUNCTION_5_1(v60, (unint64_t *)&unk_1EF5B8D38);
    sub_1C01C8408();
    sub_1C0303D9C();
    OUTLINED_FUNCTION_29();
    v61 = OUTLINED_FUNCTION_38_30();
    OUTLINED_FUNCTION_85_9(v61);
    sub_1C03044B0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_77_9();
    OUTLINED_FUNCTION_38_8(&dword_1C0039000, isa, (os_log_type_t)v27, "%s sourceIdRankerItemDict: %s", (uint8_t *)v57);
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_2();
  v62 = v135;
  isa = (unint64_t)v3->isa;
  v63 = *((_QWORD *)v3->isa + 2);
  OUTLINED_FUNCTION_44();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v129 = isa;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1C01F5AF8();
    isa = v115;
  }
  v27 = 0;
  v3->isa = (Class)isa;
  v119 = v137;
  *(_QWORD *)&v65 = 136315650;
  v122 = v65;
  v121 = MEMORY[0x1E0DEE9B8] + 8;
  *(_QWORD *)&v65 = 136315394;
  v120 = v65;
  for (i = v63; ; v63 = i)
  {
    if (v27 == v63)
    {
      v66 = 1;
      v27 = v63;
    }
    else
    {
      if ((v27 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
        goto LABEL_77;
      }
      if (v27 >= *(_QWORD *)(v129 + 16))
        goto LABEL_74;
      OUTLINED_FUNCTION_153();
      v70 = v130 + *(int *)(v13 + 48);
      sub_1C010E4E8(v68 + v67 + *(_QWORD *)(v69 + 72) * v27, v70);
      v71 = (uint64_t)v62 + *(int *)(v13 + 48);
      v62->isa = (Class)v27;
      sub_1C01323F0(v70, v71, &qword_1ED726DB0);
      v66 = 0;
      ++v27;
    }
    isa = (unint64_t)v134;
    __swift_storeEnumTagSinglePayload((uint64_t)v62, v66, 1, v13);
    sub_1C01323F0((uint64_t)v62, isa, (uint64_t *)&unk_1ED726F20);
    if (__swift_getEnumTagSinglePayload(isa, 1, v13) == 1)
      goto LABEL_72;
    v72.isa = *(Class *)isa;
    sub_1C01323F0(isa + *(int *)(v13 + 48), (uint64_t)v12, &qword_1ED726DB0);
    if (!*(_QWORD *)(v52 + 16))
      goto LABEL_59;
    v73 = *v12;
    isa = v12[1];
    OUTLINED_FUNCTION_65();
    OUTLINED_FUNCTION_44();
    OUTLINED_FUNCTION_78_13(v73);
    v75 = v74;
    OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_33();
    if ((v75 & 1) == 0)
    {
LABEL_59:
      v99 = (uint64_t)v12;
LABEL_60:
      sub_1C003E978(v99, &qword_1ED726DB0);
      goto LABEL_61;
    }
    v137[0] = v73;
    v137[1] = isa;
    OUTLINED_FUNCTION_44();
    v76 = sub_1C0304084();
    isa = v77;
    if (!*(_QWORD *)(v52 + 16) || (v78 = OUTLINED_FUNCTION_78_13(v76), (v79 & 1) == 0))
    {
      OUTLINED_FUNCTION_33();
      v100 = v127;
      OUTLINED_FUNCTION_92_9((uint64_t)v12);
      OUTLINED_FUNCTION_9_2();
      OUTLINED_FUNCTION_27_49();
      v101 = OUTLINED_FUNCTION_14_2();
      if (os_log_type_enabled((os_log_t)isa, v101))
      {
        v102 = OUTLINED_FUNCTION_4_0();
        v103 = OUTLINED_FUNCTION_4_0();
        v137[0] = v103;
        *(_DWORD *)v102 = v122;
        *(_QWORD *)(v102 + 4) = OUTLINED_FUNCTION_0_144(v103, v104, v137);
        *(_WORD *)(v102 + 12) = 2080;
        v105 = *v100;
        v106 = v100[1];
        swift_bridgeObjectRetain();
        *(_QWORD *)(v102 + 14) = sub_1C003E6D8(v105, v106, v137);
        swift_bridgeObjectRelease();
        sub_1C003E978((uint64_t)v100, &qword_1ED726DB0);
        *(_WORD *)(v102 + 22) = 2080;
        OUTLINED_FUNCTION_65();
        __swift_instantiateConcreteTypeFromMangledName(qword_1ED727DC0);
        sub_1C00447B0(0, (unint64_t *)&unk_1EF5B8D38);
        sub_1C01C8408();
        sub_1C0303D9C();
        OUTLINED_FUNCTION_29();
        *(_QWORD *)(v102 + 24) = OUTLINED_FUNCTION_38_30();
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_77_9();
        OUTLINED_FUNCTION_46_1(&dword_1C0039000, isa, v101, "%s Missing key? %s in this dict? %s", (uint8_t *)v102);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_5();
      }
      OUTLINED_FUNCTION_2();

      isa = (unint64_t)&qword_1ED726DB0;
      sub_1C003E978((uint64_t)v100, &qword_1ED726DB0);
      v99 = (uint64_t)v12;
      goto LABEL_60;
    }
    v80 = *(id *)(*(_QWORD *)(v52 + 56) + 8 * v78);
    OUTLINED_FUNCTION_33();
    objc_msgSend(v80, sel_score);
    v82 = v81;
    v83.isa = v128->isa;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      if (((unint64_t)v72.isa & 0x8000000000000000) != 0)
        break;
      goto LABEL_54;
    }
    sub_1C01F5AF8();
    v83.isa = v114;
    if (((unint64_t)v72.isa & 0x8000000000000000) != 0)
      break;
LABEL_54:
    if ((unint64_t)v72.isa >= *((_QWORD *)v83.isa + 2))
      goto LABEL_75;
    OUTLINED_FUNCTION_153();
    v13 = (uint64_t)v83.isa + v84 + *(_QWORD *)(v85 + 72) * (uint64_t)v72.isa;
    isa = v13 + *(int *)(v126 + 36);
    *(_QWORD *)(isa + *(int *)(OUTLINED_FUNCTION_1_6() + 240)) = v82;
    v128->isa = v83.isa;
    v86 = objc_msgSend(v80, sel_features);
    if (v86)
    {
      if ((unint64_t)v72.isa >= *((_QWORD *)v83.isa + 2))
        goto LABEL_76;
      v87 = v86;
      sub_1C02B92A0((uint64_t)v86, v13 + *(int *)(v126 + 36));
      v128->isa = v83.isa;
      v88 = (uint64_t)v123;
      OUTLINED_FUNCTION_92_9((uint64_t)v12);
      v3 = OUTLINED_FUNCTION_27_49();
      v89 = sub_1C03042E8();
      v90 = v89;
      if (os_log_type_enabled(v3, v89))
      {
        v91 = (uint64_t *)v88;
        v92 = OUTLINED_FUNCTION_4_0();
        v93 = OUTLINED_FUNCTION_4_0();
        v118 = v93;
        v137[0] = v93;
        *(_DWORD *)v92 = v120;
        v95 = OUTLINED_FUNCTION_0_144(v93, v94, v137);
        OUTLINED_FUNCTION_85_9(v95);
        v117 = v90;
        OUTLINED_FUNCTION_90_10();
        *(_WORD *)(v92 + 12) = 2080;
        v116 = v92 + 14;
        v97 = *v91;
        v96 = v91[1];
        swift_bridgeObjectRetain();
        v98 = sub_1C003E6D8(v97, v96, v137);
        OUTLINED_FUNCTION_85_9(v98);
        sub_1C03044B0();
        OUTLINED_FUNCTION_28();
        OUTLINED_FUNCTION_48_22((uint64_t)v91);
        OUTLINED_FUNCTION_38_8(&dword_1C0039000, v3, (os_log_type_t)v117, "%s setSignalSet for %s", (uint8_t *)v92);
        OUTLINED_FUNCTION_21_2();
        OUTLINED_FUNCTION_5();
      }

      isa = (unint64_t)&qword_1ED726DB0;
      sub_1C003E978(v88, &qword_1ED726DB0);

      v113 = (uint64_t)v12;
    }
    else
    {
      v107 = v80;
      OUTLINED_FUNCTION_27_49();
      v108 = OUTLINED_FUNCTION_14_2();
      if (OUTLINED_FUNCTION_60_10(isa))
      {
        v109 = OUTLINED_FUNCTION_4_0();
        v110 = (_QWORD *)OUTLINED_FUNCTION_4_0();
        v111 = OUTLINED_FUNCTION_4_0();
        v137[0] = v111;
        *(_DWORD *)v109 = v120;
        *(_QWORD *)(v109 + 4) = OUTLINED_FUNCTION_0_144(v111, v112, v137);
        *(_WORD *)(v109 + 12) = 2112;
        *(_QWORD *)(v109 + 14) = v107;
        *v110 = v107;

        OUTLINED_FUNCTION_38_8(&dword_1C0039000, isa, v108, "%s Missing features for this? %@", (uint8_t *)v109);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727620);
        OUTLINED_FUNCTION_23();
        OUTLINED_FUNCTION_5();
      }

      v113 = (uint64_t)v12;
    }
    sub_1C003E978(v113, &qword_1ED726DB0);
    v13 = v132;
LABEL_61:
    v62 = v135;
  }
  __break(1u);
LABEL_72:
  OUTLINED_FUNCTION_29();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_111();
}

uint64_t sub_1C02B9214(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC1D0);
    v3 = sub_1C030481C();
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9E0];
  }
  v6 = v3;
  sub_1C02BB664(a1, 1, &v6);
  v4 = v6;
  if (v1)
    swift_release();
  return v4;
}

id sub_1C02B92A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  id v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  id v127;
  uint64_t v128;
  id v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  id v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  id v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  id v143;
  uint64_t v144;
  id v145;
  uint64_t v146;
  id v147;
  uint64_t v148;
  id v149;
  uint64_t v150;
  id v151;
  uint64_t v152;
  id v153;
  uint64_t v154;
  id v155;
  uint64_t v156;
  id v157;
  uint64_t v158;
  id v159;
  uint64_t v160;
  id v161;
  uint64_t v162;
  id v163;
  uint64_t v164;
  id v165;
  uint64_t v166;
  id v167;
  uint64_t v168;
  id v169;
  uint64_t v170;
  id v171;
  uint64_t v172;
  id v173;
  uint64_t v174;
  id v175;
  uint64_t v176;
  id v177;
  uint64_t v178;
  id v179;
  uint64_t v180;
  id v181;
  uint64_t v182;
  id v183;
  uint64_t v184;
  id v185;
  uint64_t v186;
  id v187;
  uint64_t v188;
  id v189;
  uint64_t v190;
  id v191;
  uint64_t v192;
  id v193;
  uint64_t v194;
  id v195;
  uint64_t v196;
  id v197;
  uint64_t v198;
  id v199;
  uint64_t v200;
  id v201;
  uint64_t v202;
  id v203;
  uint64_t v204;
  id v205;
  uint64_t v206;
  id v207;
  uint64_t v208;
  id v209;
  uint64_t v210;
  id v211;
  uint64_t v212;
  id v213;
  uint64_t v214;
  id v215;
  uint64_t v216;
  id v217;
  uint64_t v218;
  id v219;
  uint64_t v220;
  id v221;
  uint64_t v222;
  id v223;
  uint64_t v224;
  id v225;
  uint64_t v226;
  id v227;
  uint64_t v228;
  id v229;
  id v230;
  id v231;
  id v232;
  uint64_t v233;
  id v234;
  uint64_t v235;
  id v236;
  uint64_t v237;
  id result;
  uint64_t v239;

  v3 = OUTLINED_FUNCTION_1_6();
  v4 = *(_QWORD **)(a2 + *(int *)(v3 + 244));
  v5 = OUTLINED_FUNCTION_0_2(v3, sel_candidateNameScore);
  v4[2] = v6;
  v7 = OUTLINED_FUNCTION_0_2((uint64_t)v5, sel_candidateCommunicationScore);
  v4[3] = v8;
  v9 = OUTLINED_FUNCTION_0_2((uint64_t)v7, sel_candidateOrganizationScore);
  v4[4] = v10;
  v11 = OUTLINED_FUNCTION_0_2((uint64_t)v9, sel_candidateLocationScore);
  v4[5] = v12;
  v13 = OUTLINED_FUNCTION_0_2((uint64_t)v11, sel_candidateEventLocationScore);
  v4[6] = v14;
  v15 = OUTLINED_FUNCTION_0_2((uint64_t)v13, sel_candidateEventNameScore);
  v4[7] = v16;
  v17 = OUTLINED_FUNCTION_0_2((uint64_t)v15, sel_topicScore);
  v4[8] = v18;
  v19 = OUTLINED_FUNCTION_0_2((uint64_t)v17, sel_messagePopularityGivenTimeOfDay);
  v4[9] = v20;
  v21 = OUTLINED_FUNCTION_0_2((uint64_t)v19, sel_callPopularityGivenTimeOfDay);
  v4[10] = v22;
  v23 = OUTLINED_FUNCTION_0_2((uint64_t)v21, sel_facetimePopularityGivenTimeOfDay);
  v4[11] = v24;
  v25 = OUTLINED_FUNCTION_0_2((uint64_t)v23, sel_timeOfDayGivenMessageWithEntity);
  v4[12] = v26;
  v27 = OUTLINED_FUNCTION_0_2((uint64_t)v25, sel_timeOfDayGivenCallWithEntity);
  v4[13] = v28;
  v29 = OUTLINED_FUNCTION_0_2((uint64_t)v27, sel_timeOfDayGivenFacetimeWithEntity);
  v4[14] = v30;
  v31 = OUTLINED_FUNCTION_0_2((uint64_t)v29, sel_messageWithEntityGivenTimeOfDay);
  v4[15] = v32;
  v33 = OUTLINED_FUNCTION_0_2((uint64_t)v31, sel_callWithEntityGivenTimeOfDay);
  v4[16] = v34;
  v35 = OUTLINED_FUNCTION_0_2((uint64_t)v33, sel_facetimeWithEntityGivenTimeOfDay);
  v4[17] = v36;
  v37 = OUTLINED_FUNCTION_0_2((uint64_t)v35, sel_messagePopularityGivenCoarseTimeOfDay);
  v4[18] = v38;
  v39 = OUTLINED_FUNCTION_0_2((uint64_t)v37, sel_callPopularityGivenCoarseTimeOfDay);
  v4[19] = v40;
  v41 = OUTLINED_FUNCTION_0_2((uint64_t)v39, sel_facetimePopularityGivenCoarseTimeOfDay);
  v4[20] = v42;
  v43 = OUTLINED_FUNCTION_0_2((uint64_t)v41, sel_coarseTimeOfDayGivenMessageWithEntity);
  v4[21] = v44;
  v45 = OUTLINED_FUNCTION_0_2((uint64_t)v43, sel_coarseTimeOfDayGivenCallWithEntity);
  v4[22] = v46;
  v47 = OUTLINED_FUNCTION_0_2((uint64_t)v45, sel_coarseTimeOfDayGivenFacetimeWithEntity);
  v4[23] = v48;
  v49 = OUTLINED_FUNCTION_0_2((uint64_t)v47, sel_messageWithEntityGivenCoarseTimeOfDay);
  v4[24] = v50;
  v51 = OUTLINED_FUNCTION_0_2((uint64_t)v49, sel_callWithEntityGivenCoarseTimeOfDay);
  v4[25] = v52;
  v53 = OUTLINED_FUNCTION_0_2((uint64_t)v51, sel_facetimeWithEntityGivenCoarseTimeOfDay);
  v4[26] = v54;
  v55 = OUTLINED_FUNCTION_0_2((uint64_t)v53, sel_messagePopularityGivenDayOfWeek);
  v4[27] = v56;
  v57 = OUTLINED_FUNCTION_0_2((uint64_t)v55, sel_callPopularityGivenDayOfWeek);
  v4[28] = v58;
  v59 = OUTLINED_FUNCTION_0_2((uint64_t)v57, sel_facetimePopularityGivenDayOfWeek);
  v4[29] = v60;
  v61 = OUTLINED_FUNCTION_0_2((uint64_t)v59, sel_dayOfWeekGivenMessageWithEntity);
  v4[30] = v62;
  v63 = OUTLINED_FUNCTION_0_2((uint64_t)v61, sel_dayOfWeekGivenCallWithEntity);
  v4[31] = v64;
  v65 = OUTLINED_FUNCTION_0_2((uint64_t)v63, sel_dayOfWeekGivenFacetimeWithEntity);
  v4[32] = v66;
  v67 = OUTLINED_FUNCTION_0_2((uint64_t)v65, sel_messageWithEntityGivenDayOfWeek);
  v4[33] = v68;
  v69 = OUTLINED_FUNCTION_0_2((uint64_t)v67, sel_callWithEntityGivenDayOfWeek);
  v4[34] = v70;
  v71 = OUTLINED_FUNCTION_0_2((uint64_t)v69, sel_facetimeWithEntityGivenDayOfWeek);
  v4[35] = v72;
  v73 = OUTLINED_FUNCTION_0_2((uint64_t)v71, sel_messagePopularityGivenFocusMode);
  v4[36] = v74;
  v75 = OUTLINED_FUNCTION_0_2((uint64_t)v73, sel_callPopularityGivenFocusMode);
  v4[37] = v76;
  v77 = OUTLINED_FUNCTION_0_2((uint64_t)v75, sel_facetimePopularityGivenFocusMode);
  v4[38] = v78;
  v79 = OUTLINED_FUNCTION_0_2((uint64_t)v77, sel_focusModeGivenMessageWithEntity);
  v4[39] = v80;
  v81 = OUTLINED_FUNCTION_0_2((uint64_t)v79, sel_focusModeGivenCallWithEntity);
  v4[40] = v82;
  v83 = OUTLINED_FUNCTION_0_2((uint64_t)v81, sel_focusModeGivenFacetimeWithEntity);
  v4[41] = v84;
  v85 = OUTLINED_FUNCTION_0_2((uint64_t)v83, sel_messageWithEntityGivenFocusMode);
  v4[42] = v86;
  v87 = OUTLINED_FUNCTION_0_2((uint64_t)v85, sel_callWithEntityGivenFocusMode);
  v4[43] = v88;
  v89 = OUTLINED_FUNCTION_0_2((uint64_t)v87, sel_facetimeWithEntityGivenFocusMode);
  v4[44] = v90;
  v91 = OUTLINED_FUNCTION_0_2((uint64_t)v89, sel_messagePopularityGivenLOI);
  v4[45] = v92;
  v93 = OUTLINED_FUNCTION_0_2((uint64_t)v91, sel_callPopularityGivenLOI);
  v4[46] = v94;
  v95 = OUTLINED_FUNCTION_0_2((uint64_t)v93, sel_facetimePopularityGivenLOI);
  v4[47] = v96;
  v97 = OUTLINED_FUNCTION_0_2((uint64_t)v95, sel_LOIGivenMessageWithEntity);
  v4[48] = v98;
  v99 = OUTLINED_FUNCTION_0_2((uint64_t)v97, sel_LOIGivenCallWithEntity);
  v4[49] = v100;
  v101 = OUTLINED_FUNCTION_0_2((uint64_t)v99, sel_LOIGivenFacetimeWithEntity);
  v4[50] = v102;
  v103 = OUTLINED_FUNCTION_0_2((uint64_t)v101, sel_messageWithEntityGivenLOI);
  v4[51] = v104;
  v105 = OUTLINED_FUNCTION_0_2((uint64_t)v103, sel_callWithEntityGivenLOI);
  v4[52] = v106;
  v107 = OUTLINED_FUNCTION_0_2((uint64_t)v105, sel_facetimeWithEntityGivenLOI);
  v4[53] = v108;
  v109 = OUTLINED_FUNCTION_0_2((uint64_t)v107, sel_messagePopularityGivenSpecificGeoHash);
  v4[54] = v110;
  v111 = OUTLINED_FUNCTION_0_2((uint64_t)v109, sel_callPopularityGivenSpecificGeoHash);
  v4[55] = v112;
  v113 = OUTLINED_FUNCTION_0_2((uint64_t)v111, sel_facetimePopularityGivenSpecificGeoHash);
  v4[56] = v114;
  v115 = OUTLINED_FUNCTION_0_2((uint64_t)v113, sel_specificGeoHashGivenMessageWithEntity);
  v4[57] = v116;
  v117 = OUTLINED_FUNCTION_0_2((uint64_t)v115, sel_specificGeoHashGivenCallWithEntity);
  v4[58] = v118;
  v119 = OUTLINED_FUNCTION_0_2((uint64_t)v117, sel_specificGeoHashGivenFacetimeWithEntity);
  v4[59] = v120;
  v121 = OUTLINED_FUNCTION_0_2((uint64_t)v119, sel_messageWithEntityGivenSpecificGeoHash);
  v4[60] = v122;
  v123 = OUTLINED_FUNCTION_0_2((uint64_t)v121, sel_callWithEntityGivenSpecificGeoHash);
  v4[61] = v124;
  v125 = OUTLINED_FUNCTION_0_2((uint64_t)v123, sel_facetimeWithEntityGivenSpecificGeoHash);
  v4[62] = v126;
  v127 = OUTLINED_FUNCTION_0_2((uint64_t)v125, sel_messagePopularityGivenCoarseGeoHash);
  v4[63] = v128;
  v129 = OUTLINED_FUNCTION_0_2((uint64_t)v127, sel_callPopularityGivenCoarseGeoHash);
  v4[64] = v130;
  v131 = OUTLINED_FUNCTION_0_2((uint64_t)v129, sel_facetimePopularityGivenCoarseGeoHash);
  v4[65] = v132;
  v133 = OUTLINED_FUNCTION_0_2((uint64_t)v131, sel_coarseGeoHashGivenMessageWithEntity);
  v4[66] = v134;
  v135 = OUTLINED_FUNCTION_0_2((uint64_t)v133, sel_coarseGeoHashGivenCallWithEntity);
  v4[67] = v136;
  v137 = OUTLINED_FUNCTION_0_2((uint64_t)v135, sel_coarseGeoHashGivenFacetimeWithEntity);
  v4[68] = v138;
  v139 = OUTLINED_FUNCTION_0_2((uint64_t)v137, sel_messageWithEntityGivenCoarseGeoHash);
  v4[69] = v140;
  v141 = OUTLINED_FUNCTION_0_2((uint64_t)v139, sel_callWithEntityGivenCoarseGeoHash);
  v4[70] = v142;
  v143 = OUTLINED_FUNCTION_0_2((uint64_t)v141, sel_facetimeWithEntityGivenCoarseGeoHash);
  v4[71] = v144;
  v145 = OUTLINED_FUNCTION_0_2((uint64_t)v143, sel_messagePopularityGivenLargeGeoHash);
  v4[72] = v146;
  v147 = OUTLINED_FUNCTION_0_2((uint64_t)v145, sel_callPopularityGivenLargeGeoHash);
  v4[73] = v148;
  v149 = OUTLINED_FUNCTION_0_2((uint64_t)v147, sel_facetimePopularityGivenLargeGeoHash);
  v4[74] = v150;
  v151 = OUTLINED_FUNCTION_0_2((uint64_t)v149, sel_largeGeoHashGivenMessageWithEntity);
  v4[75] = v152;
  v153 = OUTLINED_FUNCTION_0_2((uint64_t)v151, sel_largeGeoHashGivenCallWithEntity);
  v4[76] = v154;
  v155 = OUTLINED_FUNCTION_0_2((uint64_t)v153, sel_largeGeoHashGivenFacetimeWithEntity);
  v4[77] = v156;
  v157 = OUTLINED_FUNCTION_0_2((uint64_t)v155, sel_messageWithEntityGivenLargeGeoHash);
  v4[78] = v158;
  v159 = OUTLINED_FUNCTION_0_2((uint64_t)v157, sel_callWithEntityGivenLargeGeoHash);
  v4[79] = v160;
  v161 = OUTLINED_FUNCTION_0_2((uint64_t)v159, sel_facetimeWithEntityGivenLargeGeoHash);
  v4[80] = v162;
  v163 = OUTLINED_FUNCTION_0_2((uint64_t)v161, sel_messagePopularityGivenMicroLocation);
  v4[81] = v164;
  v165 = OUTLINED_FUNCTION_0_2((uint64_t)v163, sel_callPopularityGivenMicroLocation);
  v4[82] = v166;
  v167 = OUTLINED_FUNCTION_0_2((uint64_t)v165, sel_facetimePopularityGivenMicroLocation);
  v4[83] = v168;
  v169 = OUTLINED_FUNCTION_0_2((uint64_t)v167, sel_microLocationGivenMessageWithEntity);
  v4[84] = v170;
  v171 = OUTLINED_FUNCTION_0_2((uint64_t)v169, sel_microLocationGivenCallWithEntity);
  v4[85] = v172;
  v173 = OUTLINED_FUNCTION_0_2((uint64_t)v171, sel_microLocationGivenFacetimeWithEntity);
  v4[86] = v174;
  v175 = OUTLINED_FUNCTION_0_2((uint64_t)v173, sel_messageWithEntityGivenMicroLocation);
  v4[87] = v176;
  v177 = OUTLINED_FUNCTION_0_2((uint64_t)v175, sel_callWithEntityGivenMicroLocation);
  v4[88] = v178;
  v179 = OUTLINED_FUNCTION_0_2((uint64_t)v177, sel_facetimeWithEntityGivenMicroLocation);
  v4[89] = v180;
  v181 = OUTLINED_FUNCTION_0_2((uint64_t)v179, sel_messagePopularityGivenMotionState);
  v4[90] = v182;
  v183 = OUTLINED_FUNCTION_0_2((uint64_t)v181, sel_callPopularityGivenMotionState);
  v4[91] = v184;
  v185 = OUTLINED_FUNCTION_0_2((uint64_t)v183, sel_facetimePopularityGivenMotionState);
  v4[92] = v186;
  v187 = OUTLINED_FUNCTION_0_2((uint64_t)v185, sel_motionStateGivenMessageWithEntity);
  v4[93] = v188;
  v189 = OUTLINED_FUNCTION_0_2((uint64_t)v187, sel_motionStateGivenCallWithEntity);
  v4[94] = v190;
  v191 = OUTLINED_FUNCTION_0_2((uint64_t)v189, sel_motionStateGivenFacetimeWithEntity);
  v4[95] = v192;
  v193 = OUTLINED_FUNCTION_0_2((uint64_t)v191, sel_messageWithEntityGivenMotionState);
  v4[96] = v194;
  v195 = OUTLINED_FUNCTION_0_2((uint64_t)v193, sel_callWithEntityGivenMotionState);
  v4[97] = v196;
  v197 = OUTLINED_FUNCTION_0_2((uint64_t)v195, sel_facetimeWithEntityGivenMotionState);
  v4[98] = v198;
  v199 = OUTLINED_FUNCTION_0_2((uint64_t)v197, sel_messagePopularityGivenWiFi);
  v4[99] = v200;
  v201 = OUTLINED_FUNCTION_0_2((uint64_t)v199, sel_callPopularityGivenWiFi);
  v4[100] = v202;
  v203 = OUTLINED_FUNCTION_0_2((uint64_t)v201, sel_facetimePopularityGivenWiFi);
  v4[101] = v204;
  v205 = OUTLINED_FUNCTION_0_2((uint64_t)v203, sel_wiFiGivenMessageWithEntity);
  v4[102] = v206;
  v207 = OUTLINED_FUNCTION_0_2((uint64_t)v205, sel_wiFiGivenCallWithEntity);
  v4[103] = v208;
  v209 = OUTLINED_FUNCTION_0_2((uint64_t)v207, sel_wiFiGivenFacetimeWithEntity);
  v4[104] = v210;
  v211 = OUTLINED_FUNCTION_0_2((uint64_t)v209, sel_messageWithEntityGivenWiFi);
  v4[105] = v212;
  v213 = OUTLINED_FUNCTION_0_2((uint64_t)v211, sel_callWithEntityGivenWiFi);
  v4[106] = v214;
  v215 = OUTLINED_FUNCTION_0_2((uint64_t)v213, sel_facetimeWithEntityGivenWiFi);
  v4[107] = v216;
  v217 = OUTLINED_FUNCTION_0_2((uint64_t)v215, sel_messagePopularityGivenSequence);
  v4[108] = v218;
  v219 = OUTLINED_FUNCTION_0_2((uint64_t)v217, sel_callPopularityGivenSequence);
  v4[109] = v220;
  v221 = OUTLINED_FUNCTION_0_2((uint64_t)v219, sel_facetimePopularityGivenSequence);
  v4[110] = v222;
  v223 = OUTLINED_FUNCTION_0_2((uint64_t)v221, sel_sequenceGivenMessageWithEntity);
  v4[111] = v224;
  v225 = OUTLINED_FUNCTION_0_2((uint64_t)v223, sel_sequenceGivenCallWithEntity);
  v4[112] = v226;
  v227 = OUTLINED_FUNCTION_0_2((uint64_t)v225, sel_sequenceGivenFacetimeWithEntity);
  v4[113] = v228;
  v229 = OUTLINED_FUNCTION_0_2((uint64_t)v227, sel_lastExecutionAge);
  v4[114] = (int)v229;
  v230 = OUTLINED_FUNCTION_0_2((uint64_t)v229, sel_medianTimeIntervalBetweenExecution);
  v4[115] = (int)v230;
  v231 = OUTLINED_FUNCTION_0_2((uint64_t)v230, sel_dailyDoseL1Error);
  v4[116] = (int)v231;
  v232 = OUTLINED_FUNCTION_0_2((uint64_t)v231, sel_dailyDoseL2Error);
  v4[117] = v233;
  v234 = OUTLINED_FUNCTION_0_2((uint64_t)v232, sel_shortTermTrendingPopularity);
  v4[118] = v235;
  v236 = OUTLINED_FUNCTION_0_2((uint64_t)v234, sel_trendingPopularity);
  v4[119] = v237;
  result = OUTLINED_FUNCTION_0_2((uint64_t)v236, sel_longTermTrendingPopularity);
  v4[120] = v239;
  return result;
}

void sub_1C02B9A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  void (*v55)(uint64_t, char *, uint64_t);
  char *v56;
  char *v57;
  os_log_type_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  os_log_type_t v68;
  _DWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int v74;
  uint64_t v75;
  NSObject *v76;
  uint64_t v77;
  uint64_t v78;
  os_log_type_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[2];
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  __int128 v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111[2];

  OUTLINED_FUNCTION_18_0();
  v1 = v0;
  v98 = OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_53();
  v97 = v3;
  v96 = type metadata accessor for Contact();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_53();
  v95 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C34F0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_6_0();
  v9 = v8 - v7;
  v10 = sub_1C03026F8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_27();
  v99 = v12;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v13);
  v92 = (char *)v91 - v14;
  OUTLINED_FUNCTION_42();
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v91 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v91 - v19;
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DB0);
  MEMORY[0x1E0C80A78](v108);
  v105 = (char *)v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v91 - v23;
  v25 = *(_QWORD *)(v1 + 16);
  if (!v25)
  {
LABEL_29:
    if (qword_1ED727970 != -1)
      swift_once();
    v67 = OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7(v67, (uint64_t)&unk_1ED7295C8);
    v68 = OUTLINED_FUNCTION_42_0();
    if (OUTLINED_FUNCTION_20_7(v68))
    {
      v69 = (_DWORD *)OUTLINED_FUNCTION_4_0();
      v70 = OUTLINED_FUNCTION_4_0();
      v109 = v70;
      *v69 = 136315138;
      v111[0] = OUTLINED_FUNCTION_0_144(v70, v71, &v109);
      OUTLINED_FUNCTION_13_68();
      OUTLINED_FUNCTION_15_25(&dword_1C0039000, v72, v73, "%s Unable to find a suitable UsoEntitySpan for span indicies. Defaulting to span=nil.");
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_5();
    }

    goto LABEL_34;
  }
  v91[0] = v18;
  v101 = v20;
  OUTLINED_FUNCTION_153();
  v27 = v1 + v26;
  v106 = *(_QWORD *)(v28 + 72);
  v107 = v24 + 264;
  v91[1] = v1;
  OUTLINED_FUNCTION_65();
  *(_QWORD *)&v29 = 136315394;
  v100 = v29;
  v93 = MEMORY[0x1E0DEE9B8] + 8;
  v94 = v24;
  v103 = v10;
  v104 = v11;
  v102 = v9;
  v20 = v105;
  while (1)
  {
    sub_1C010E4E8(v27, (uint64_t)v24);
    v30 = *(_QWORD *)&v107[*(int *)(v108 + 36)];
    if (!v30)
    {
      if (qword_1ED727970 != -1)
        swift_once();
      v35 = OUTLINED_FUNCTION_9_0();
      __swift_project_value_buffer(v35, (uint64_t)&unk_1ED7295C8);
      sub_1C010E4E8((uint64_t)v24, (uint64_t)v20);
      v36 = sub_1C0303B80();
      v37 = sub_1C03042E8();
      if (OUTLINED_FUNCTION_60_10(v36))
      {
        v38 = OUTLINED_FUNCTION_4_0();
        v39 = OUTLINED_FUNCTION_4_0();
        v111[0] = v39;
        *(_DWORD *)v38 = v100;
        *(_QWORD *)(v38 + 4) = OUTLINED_FUNCTION_0_144(v39, v40, v111);
        *(_WORD *)(v38 + 12) = 2080;
        v109 = 0;
        v110 = 0xE000000000000000;
        sub_1C03046CC();
        swift_bridgeObjectRelease();
        v109 = 0x203A65756C6176;
        v110 = 0xE700000000000000;
        sub_1C0065628((uint64_t)v20, v95, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
        sub_1C0303EF8();
        sub_1C0303FD0();
        OUTLINED_FUNCTION_33();
        sub_1C0303FD0();
        sub_1C0065628((uint64_t)&v105[*(int *)(v108 + 36)], v97, type metadata accessor for ContactResolver.SignalSet);
        sub_1C0303EF8();
        sub_1C0303FD0();
        OUTLINED_FUNCTION_33();
        v41 = v110;
        *(_QWORD *)(v38 + 14) = sub_1C003E6D8(v109, v110, v111);
        OUTLINED_FUNCTION_70_11();
        OUTLINED_FUNCTION_48_22(v41);
        OUTLINED_FUNCTION_38_8(&dword_1C0039000, v36, v37, "%s Unable to get candidate's usoNode from %s", (uint8_t *)v38);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_5();
      }

      OUTLINED_FUNCTION_48_22((uint64_t)v20);
      OUTLINED_FUNCTION_48_22((uint64_t)v24);
      goto LABEL_27;
    }
    swift_retain();
    v31 = sub_1C0302AB8();
    if (v31)
      break;
    OUTLINED_FUNCTION_40_2(v9, 1);
LABEL_15:
    sub_1C003E978(v9, &qword_1EF5C34F0);
    if (qword_1ED727970 != -1)
      swift_once();
    v42 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v42, (uint64_t)&unk_1ED7295C8);
    swift_retain_n();
    v43 = sub_1C0303B80();
    v44 = sub_1C03042E8();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = OUTLINED_FUNCTION_4_0();
      v46 = OUTLINED_FUNCTION_4_0();
      v109 = v46;
      *(_DWORD *)v45 = v100;
      *(_QWORD *)(v45 + 4) = OUTLINED_FUNCTION_0_144(v46, v47, &v109);
      *(_WORD *)(v45 + 12) = 2080;
      v111[0] = v30;
      sub_1C0302D7C();
      sub_1C02BB8A4();
      v48 = sub_1C03049E4();
      *(_QWORD *)(v45 + 14) = sub_1C003E6D8(v48, v49, &v109);
      swift_release_n();
      OUTLINED_FUNCTION_70_11();
      OUTLINED_FUNCTION_38_8(&dword_1C0039000, v43, v44, "%s Skip ones without UsoEntitySpan %s", (uint8_t *)v45);
      OUTLINED_FUNCTION_21_2();
      OUTLINED_FUNCTION_5();
    }
    swift_release_n();

    sub_1C003E978((uint64_t)v24, &qword_1ED726DB0);
    v11 = v104;
LABEL_27:
    v27 += v106;
    if (!--v25)
    {
      OUTLINED_FUNCTION_44_0();
      goto LABEL_29;
    }
  }
  v32 = v31;
  if (*(_QWORD *)(v31 + 16))
  {
    OUTLINED_FUNCTION_153();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, v32 + v33, v10);
    v34 = 0;
  }
  else
  {
    v34 = 1;
  }
  OUTLINED_FUNCTION_40_2(v9, v34);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v9, 1, v10) == 1)
    goto LABEL_15;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v101, v9, v10);
  v50 = sub_1C03026BC();
  if ((v50 & 0x100000000) != 0 || (v51 = v50, v52 = sub_1C03026E0(), (v52 & 0x100000000) != 0))
  {
    if (qword_1ED727970 != -1)
      swift_once();
    v53 = OUTLINED_FUNCTION_9_0();
    v54 = __swift_project_value_buffer(v53, (uint64_t)&unk_1ED7295C8);
    v55 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 16);
    v56 = v99;
    v57 = v101;
    v55((uint64_t)v99, v101, v10);
    sub_1C0303B80();
    v58 = OUTLINED_FUNCTION_34();
    if (os_log_type_enabled(v54, v58))
    {
      v59 = v56;
      v60 = OUTLINED_FUNCTION_4_0();
      v61 = OUTLINED_FUNCTION_4_0();
      v109 = v61;
      *(_DWORD *)v60 = v100;
      *(_QWORD *)(v60 + 4) = OUTLINED_FUNCTION_0_144(v61, v62, &v109);
      *(_WORD *)(v60 + 12) = 2080;
      v55((uint64_t)v92, v59, v103);
      v63 = sub_1C0303EF8();
      *(_QWORD *)(v60 + 14) = OUTLINED_FUNCTION_82_11(v63, v64);
      v65 = v104;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v59, v103);
      OUTLINED_FUNCTION_38_8(&dword_1C0039000, v54, v58, "%s No startIndex or endIndex? %s", (uint8_t *)v60);
      OUTLINED_FUNCTION_21_2();
      OUTLINED_FUNCTION_5();
    }

    v66 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v66((uint64_t)v56, v10);
    OUTLINED_FUNCTION_56();
    v66((uint64_t)v57, v10);
    v24 = v94;
    sub_1C003E978((uint64_t)v94, &qword_1ED726DB0);
    v9 = v102;
    v20 = v105;
    goto LABEL_27;
  }
  v74 = v52;
  OUTLINED_FUNCTION_44_0();
  if (qword_1ED727970 != -1)
    swift_once();
  v75 = OUTLINED_FUNCTION_9_0();
  v76 = __swift_project_value_buffer(v75, (uint64_t)&unk_1ED7295C8);
  v77 = v91[0];
  v78 = (uint64_t)v101;
  v108 = *(_QWORD *)(v11 + 16);
  ((void (*)(_QWORD, char *, uint64_t))v108)(v91[0], v101, v10);
  sub_1C0303B80();
  v79 = OUTLINED_FUNCTION_9_1();
  v80 = v79;
  if (os_log_type_enabled(v76, v79))
  {
    v81 = OUTLINED_FUNCTION_4_0();
    LODWORD(v107) = v80;
    v82 = v81;
    v83 = OUTLINED_FUNCTION_4_0();
    v106 = v83;
    v109 = v83;
    *(_DWORD *)v82 = v100;
    v111[0] = OUTLINED_FUNCTION_0_144(v83, v84, &v109);
    OUTLINED_FUNCTION_45_27();
    *(_WORD *)(v82 + 12) = 2080;
    v105 = (char *)(v82 + 14);
    ((void (*)(char *, uint64_t, uint64_t))v108)(v92, v77, v10);
    v85 = sub_1C0303EF8();
    v111[0] = OUTLINED_FUNCTION_82_11(v85, v86);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_66_11(v77);
    OUTLINED_FUNCTION_38_8(&dword_1C0039000, v76, (os_log_type_t)v107, "%s Yay! found a suitable UsoEntitySpan to use %s", (uint8_t *)v82);
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_66_11(v77);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727640);
  v87 = OUTLINED_FUNCTION_16_0();
  *(_OWORD *)(v87 + 16) = xmmword_1C030A730;
  v88 = v74 >= v51;
  v89 = v74 - v51;
  if (v88)
  {
    v90 = v87;
    *(_QWORD *)(v87 + 32) = objc_msgSend((id)objc_opt_self(), sel_valueWithRange_, v51, v89);
    v109 = v90;
    sub_1C0304150();
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_66_11(v78);
    sub_1C003E978((uint64_t)v24, &qword_1ED726DB0);
LABEL_34:
    OUTLINED_FUNCTION_1();
    return;
  }
  __break(1u);
}

uint64_t sub_1C02BA4F8()
{
  uint64_t result;

  type metadata accessor for MegadomeClient();
  OUTLINED_FUNCTION_16_0();
  result = sub_1C02BA52C();
  qword_1EF5FC7B0 = result;
  return result;
}

uint64_t sub_1C02BA52C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  char *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *);
  uint64_t v51;
  char *v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  os_log_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75[2];

  v0 = type metadata accessor for Signpost();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v63 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1C0301CFC();
  v3 = *(_QWORD *)(v72 - 8);
  v4 = MEMORY[0x1E0C80A78](v72);
  v69 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v68 = (char *)&v63 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v67 = (char *)&v63 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v73 = (char *)&v63 - v11;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v63 - v12;
  sub_1C0301CF0();
  if (qword_1ED728440 != -1)
    swift_once();
  v14 = (void *)qword_1ED729668;
  v15 = &v2[*(int *)(v0 + 20)];
  *(_QWORD *)v15 = "ContactResolver.MegadomeClient.init";
  *((_QWORD *)v15 + 1) = 35;
  v15[16] = 2;
  v16 = v14;
  sub_1C0303B68();
  *(_QWORD *)&v2[*(int *)(v0 + 24)] = v16;
  v17 = v16;
  v18 = (void *)sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C0305B60;
  v20 = sub_1C03046E4();
  v22 = v21;
  *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v19 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v19 + 32) = v20;
  *(_QWORD *)(v19 + 40) = v22;
  sub_1C0303B50();
  swift_bridgeObjectRelease();

  if (__OFADD__(qword_1EF5FC7B8, 1))
  {
    __break(1u);
    swift_once();
    v26 = sub_1C0303B98();
    __swift_project_value_buffer(v26, (uint64_t)&unk_1ED7295C8);
    v27 = v18;
    v28 = v18;
    v29 = sub_1C0303B80();
    v30 = sub_1C03042F4();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v73 = v22;
      v33 = (_QWORD *)v32;
      v34 = swift_slowAlloc();
      v75[0] = v34;
      *(_DWORD *)v31 = 136315394;
      v74 = sub_1C003E6D8(0x6D6F646167654D5BLL, 0xEE005D5243452065, v75);
      sub_1C03044B0();
      *(_WORD *)(v31 + 12) = 2112;
      v35 = v18;
      v36 = _swift_stdlib_bridgeErrorToNSError();
      v74 = v36;
      sub_1C03044B0();
      *v33 = v36;
      v13 = (char *)v72;

      _os_log_impl(&dword_1C0039000, v29, v30, "%s Failed to create EntityResolutionTextClient: %@", (uint8_t *)v31, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727620);
      swift_arrayDestroy();
      v37 = v33;
      v22 = v73;
      MEMORY[0x1C3B98378](v37, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v34, -1, -1);
      MEMORY[0x1C3B98378](v31, -1, -1);

    }
    else
    {

    }
    v38 = v71;
    *(_QWORD *)(v71 + 16) = 0;
  }
  else
  {
    ++qword_1EF5FC7B8;
    v23 = v73;
    sub_1C0301CF0();
    v24 = objc_allocWithZone((Class)sub_1C03039F4());
    v25 = sub_1C03039E8();
    v70 = v13;
    v38 = v71;
    *(_QWORD *)(v71 + 16) = v25;
    if (qword_1ED727970 != -1)
      swift_once();
    v39 = sub_1C0303B98();
    v40 = __swift_project_value_buffer(v39, (uint64_t)&unk_1ED7295C8);
    v41 = v67;
    v13 = (char *)v72;
    v65 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v65(v67, v23, v72);
    v66 = v40;
    v42 = sub_1C0303B80();
    v43 = sub_1C03042E8();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc();
      v63 = v42;
      v45 = v41;
      v46 = v44;
      v64 = swift_slowAlloc();
      v75[0] = v64;
      *(_DWORD *)v46 = 136315394;
      v74 = sub_1C003E6D8(0x6D6F646167654D5BLL, 0xEE005D5243452065, v75);
      sub_1C03044B0();
      *(_WORD *)(v46 + 12) = 2048;
      v47 = v68;
      sub_1C0301CF0();
      sub_1C0301C48();
      v49 = v48;
      v50 = *(void (**)(char *, char *))(v3 + 8);
      v50(v47, v13);
      v74 = v49;
      v22 = (char *)v50;
      v23 = v73;
      sub_1C03044B0();
      v50(v45, v13);
      v42 = v63;
      _os_log_impl(&dword_1C0039000, v63, v43, "%s EntityResolutionTextClient(for: .structuredSearch, viaXPC: false, warmup: true)\ntook %f secs.", (uint8_t *)v46, 0x16u);
      v51 = v64;
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v51, -1, -1);
      MEMORY[0x1C3B98378](v46, -1, -1);
    }
    else
    {
      v22 = *(char **)(v3 + 8);
      ((void (*)(char *, char *))v22)(v41, v13);
    }

    v52 = v69;
    v65(v69, v23, (uint64_t)v13);
    v53 = sub_1C0303B80();
    v54 = sub_1C03042E8();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = swift_slowAlloc();
      v72 = swift_slowAlloc();
      v75[0] = v72;
      *(_DWORD *)v55 = 136315394;
      v74 = sub_1C003E6D8(0x6D6F646167654D5BLL, 0xEE005D5243452065, v75);
      sub_1C03044B0();
      *(_WORD *)(v55 + 12) = 2048;
      v56 = v68;
      sub_1C0301CF0();
      v57 = v69;
      sub_1C0301C48();
      v59 = v58;
      ((void (*)(char *, char *))v22)(v56, v13);
      v74 = v59;
      v38 = v71;
      sub_1C03044B0();
      ((void (*)(char *, char *))v22)(v57, v13);
      _os_log_impl(&dword_1C0039000, v53, v54, "%s EntityResolutionTextClient() took %f secs.", (uint8_t *)v55, 0x16u);
      v60 = v72;
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v60, -1, -1);
      MEMORY[0x1C3B98378](v55, -1, -1);

      ((void (*)(char *, char *))v22)(v73, v13);
    }
    else
    {

      ((void (*)(char *, char *))v22)(v52, v13);
      ((void (*)(char *, char *))v22)(v23, v13);
    }
  }
  v61 = v70;
  sub_1C004CE00();
  sub_1C003DDAC((uint64_t)v2);
  ((void (*)(char *, char *))v22)(v61, v13);
  return v38;
}

NSObject *sub_1C02BADD4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  _DWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  NSObject *v42;
  os_log_type_t v43;
  const char *v44;
  uint8_t *v45;
  NSObject *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  NSObject *v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  _BYTE *v62;
  _BYTE v64[12];
  int v65;
  NSObject *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  OUTLINED_FUNCTION_53_21();
  v75 = v2;
  v76 = v3;
  v69 = v1;
  v4 = OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v5);
  v70 = OUTLINED_FUNCTION_28_40();
  v72 = *(_QWORD *)(v70 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_27();
  v68 = v7;
  OUTLINED_FUNCTION_42();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = &v64[-v10];
  MEMORY[0x1E0C80A78](v9);
  v71 = &v64[-v12];
  sub_1C0301CF0();
  if (qword_1ED728440 != -1)
    swift_once();
  v13 = (void *)qword_1ED729668;
  v14 = v0 + *(int *)(v4 + 20);
  *(_QWORD *)v14 = "ContactResolver.MegadomeSignalProvider.callMegadomeECR";
  *(_QWORD *)(v14 + 8) = 54;
  *(_BYTE *)(v14 + 16) = 2;
  v15 = v13;
  sub_1C0303B68();
  *(_QWORD *)(v0 + *(int *)(v4 + 24)) = v15;
  v16 = v15;
  v17 = sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v18 = OUTLINED_FUNCTION_16_0();
  *(_OWORD *)(v18 + 16) = xmmword_1C0305B60;
  v19 = OUTLINED_FUNCTION_23_0();
  v21 = v20;
  *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v18 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v18 + 32) = v19;
  *(_QWORD *)(v18 + 40) = v21;
  OUTLINED_FUNCTION_74();
  swift_bridgeObjectRelease();

  if (qword_1ED727970 != -1)
    swift_once();
  v22 = OUTLINED_FUNCTION_9_0();
  v23 = __swift_project_value_buffer(v22, (uint64_t)&unk_1ED7295C8);
  v24 = v23;
  v25 = v23;
  sub_1C0303B80();
  v26 = OUTLINED_FUNCTION_9_1();
  if (OUTLINED_FUNCTION_13_2(v26))
  {
    v27 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v28 = OUTLINED_FUNCTION_4_0();
    v74 = v28;
    *(_DWORD *)v27 = 136315138;
    v30 = OUTLINED_FUNCTION_0_144(v28, v29, &v74);
    OUTLINED_FUNCTION_73_15(v30);
    sub_1C03044B0();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v25, v17, "%s callMegadomeECR...", v27);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }

  v31 = v72;
  v32 = (void *)v69[2];
  if (v32)
  {
    v33 = v32;
    v34 = sub_1C03039DC();
    v35 = v70;
    v46 = v34;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v31 + 16))(v11, v71, v70);
    v47 = v46;
    OUTLINED_FUNCTION_27_49();
    v48 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_42_3(v48))
    {
      v50 = OUTLINED_FUNCTION_4_0();
      v51 = OUTLINED_FUNCTION_4_0();
      v67 = v51;
      v74 = v51;
      *(_DWORD *)v50 = 136315650;
      v66 = v46;
      v73 = OUTLINED_FUNCTION_0_144(v51, v52, &v74);
      v65 = v24;
      OUTLINED_FUNCTION_65_12();
      *(_WORD *)(v50 + 12) = 2048;
      v69 = v33;
      v53 = v68;
      sub_1C0301CF0();
      sub_1C0301C48();
      v55 = v54;
      v56 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      v56(v53, v35);
      v73 = v55;
      OUTLINED_FUNCTION_26_46();
      v56((uint64_t)v11, v35);
      *(_WORD *)(v50 + 22) = 2080;
      v57 = v47;
      v58 = -[NSObject description](v57, sel_description);
      v59 = sub_1C0303EB0();
      v61 = v60;

      v73 = sub_1C003E6D8(v59, v61, &v74);
      OUTLINED_FUNCTION_65_12();

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_46_1(&dword_1C0039000, v66, (os_log_type_t)v65, "%s EntityResolutionTextClient.resolveEntitiesSync\ntook %f secs and returned GDEntityResolutionResult: %s", (uint8_t *)v50);
      OUTLINED_FUNCTION_21_2();
      OUTLINED_FUNCTION_5();
    }
    (*(void (**)(_BYTE *, uint64_t))(v31 + 8))(v11, v35);

  }
  else
  {
    OUTLINED_FUNCTION_27_49();
    v36 = OUTLINED_FUNCTION_34();
    if (OUTLINED_FUNCTION_13_2(v36))
    {
      v37 = (_DWORD *)OUTLINED_FUNCTION_4_0();
      v38 = OUTLINED_FUNCTION_4_0();
      v74 = v38;
      *v37 = 136315138;
      v40 = OUTLINED_FUNCTION_0_144(v38, v39, &v74);
      OUTLINED_FUNCTION_73_15(v40);
      sub_1C03044B0();
      OUTLINED_FUNCTION_46_26();
      OUTLINED_FUNCTION_13_0(v41, v42, v43, v44, v45);
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_5();
    }

    v47 = 0;
    v35 = v70;
  }
  v62 = v71;
  sub_1C004CE00();
  sub_1C003DDAC(v0);
  (*(void (**)(_BYTE *, uint64_t))(v31 + 8))(v62, v35);
  return v47;
}

id sub_1C02BB4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v6;
  void *v7;
  id v8;

  v6 = (void *)sub_1C0303E8C();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v7 = (void *)sub_1C0303E8C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(v4, sel_initWithValue_source_, v6, v7);

  return v8;
}

id sub_1C02BB548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  void *v6;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  if (a1)
  {
    sub_1C00447B0(0, &qword_1EF5C34E0);
    v11 = (void *)sub_1C0304120();
    swift_bridgeObjectRelease();
    if (a3)
      goto LABEL_3;
LABEL_6:
    v12 = 0;
    if (a4)
      goto LABEL_4;
LABEL_7:
    v13 = 0;
    goto LABEL_8;
  }
  v11 = 0;
  if (!a3)
    goto LABEL_6;
LABEL_3:
  v12 = (void *)sub_1C0303E8C();
  swift_bridgeObjectRelease();
  if (!a4)
    goto LABEL_7;
LABEL_4:
  sub_1C00447B0(0, &qword_1EF5C34E8);
  v13 = (void *)sub_1C0304120();
  swift_bridgeObjectRelease();
LABEL_8:
  v14 = objc_msgSend(v6, sel_initWithSourceIDs_text_spans_mode_includeFeatures_, v11, v12, v13, a5, a6 & 1);

  return v14;
}

uint64_t sub_1C02BB664(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  void **i;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  id v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  char v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  for (i = (void **)(a1 + 48); ; i += 3)
  {
    v8 = (uint64_t)*(i - 2);
    v7 = (uint64_t)*(i - 1);
    v9 = *i;
    v10 = (_QWORD *)*a3;
    swift_bridgeObjectRetain();
    v11 = v9;
    v13 = sub_1C00B3CB8(v8, v7);
    v14 = v10[2];
    v15 = (v12 & 1) == 0;
    if (__OFADD__(v14, v15))
      break;
    v16 = v12;
    if (v10[3] >= v14 + v15)
    {
      if ((a2 & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C34D0);
        sub_1C03047C8();
      }
    }
    else
    {
      sub_1C0090A94();
      v17 = sub_1C00B3CB8(v8, v7);
      if ((v16 & 1) != (v18 & 1))
        goto LABEL_18;
      v13 = v17;
    }
    v19 = (_QWORD *)*a3;
    if ((v16 & 1) != 0)
    {
      v20 = *(id *)(v19[7] + 8 * v13);
      swift_bridgeObjectRelease();

      v21 = v19[7];
      *(_QWORD *)(v21 + 8 * v13) = v20;
    }
    else
    {
      v19[(v13 >> 6) + 8] |= 1 << v13;
      v22 = (uint64_t *)(v19[6] + 16 * v13);
      *v22 = v8;
      v22[1] = v7;
      *(_QWORD *)(v19[7] + 8 * v13) = v11;
      v23 = v19[2];
      v24 = __OFADD__(v23, 1);
      v25 = v23 + 1;
      if (v24)
        goto LABEL_17;
      v19[2] = v25;
    }
    a2 = 1;
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED727DC0);
  result = sub_1C0304A68();
  __break(1u);
  return result;
}

uint64_t sub_1C02BB838(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_oneBestTranscript);

  if (!v2)
    return 0;
  v3 = sub_1C0303EB0();

  return v3;
}

unint64_t sub_1C02BB8A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF5C34F8;
  if (!qword_1EF5C34F8)
  {
    v1 = sub_1C0302D7C();
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0DA3A30], v1);
    atomic_store(result, (unint64_t *)&qword_1EF5C34F8);
  }
  return result;
}

uint64_t assignWithCopy for MegadomeSignalProvider(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MegadomeSignalProvider(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for MegadomeSignalProvider(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MegadomeSignalProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MegadomeSignalProvider()
{
  return &type metadata for MegadomeSignalProvider;
}

uint64_t OUTLINED_FUNCTION_0_144(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1C003E6D8(0x6D6F646167654D5BLL, 0xEE005D5243452065, a3);
}

uint64_t OUTLINED_FUNCTION_4_109()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_5_96()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_13_68()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_24_33()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_27_49()
{
  return sub_1C0303B80();
}

uint64_t OUTLINED_FUNCTION_29_36(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  va_list va;

  va_start(va, a2);
  *(_WORD *)(v2 + 22) = v4;
  return sub_1C003E6D8(0xD000000000000019, v3 | 0x8000000000000000, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_30_39()
{
  return sub_1C0303B80();
}

uint64_t OUTLINED_FUNCTION_45_27()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_48_23()
{
  return sub_1C0303E8C();
}

BOOL OUTLINED_FUNCTION_60_10(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

uint64_t OUTLINED_FUNCTION_70_11()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_73_15(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = a1;
  return v1 - 112;
}

unint64_t OUTLINED_FUNCTION_78_13(uint64_t a1)
{
  uint64_t v1;

  return sub_1C00B3CB8(a1, v1);
}

uint64_t OUTLINED_FUNCTION_81_8()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_90_10()
{
  return sub_1C03044B0();
}

uint64_t sub_1C02BBB50@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  char v10;
  uint64_t v11;

  v4 = sub_1C0301DC8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0301DE0();
  v8 = sub_1C0301EC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if ((_DWORD)result == *MEMORY[0x1E0CB0EF8])
    goto LABEL_2;
  if ((_DWORD)result == *MEMORY[0x1E0CB0EE8])
  {
    v10 = 0;
    goto LABEL_23;
  }
  if ((_DWORD)result == *MEMORY[0x1E0CB0EC8])
  {
    v10 = 1;
    goto LABEL_23;
  }
  if ((_DWORD)result == *MEMORY[0x1E0CB0EB8])
  {
    v10 = 3;
    goto LABEL_23;
  }
  if ((_DWORD)result == *MEMORY[0x1E0CB0ED8])
  {
LABEL_2:
    v10 = 2;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CB0EC0])
  {
    v10 = 5;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CB0ED0])
  {
    v10 = 6;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CB0EF0])
  {
    v10 = 8;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CB0EE0])
  {
    v10 = 11;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CB0E88])
  {
    v10 = 10;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0CB0E90])
  {
    v10 = 7;
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v10 = 12;
  }
LABEL_23:
  *a2 = v10;
  return result;
}

unint64_t DateTime.Date.CalendarSystem.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 12;
  if (result < 0xC)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t DateTime.Date.CalendarSystem.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1C02BBD54()
{
  unint64_t result;

  result = qword_1EF5C3500;
  if (!qword_1EF5C3500)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.CalendarSystem, &type metadata for DateTime.Date.CalendarSystem);
    atomic_store(result, (unint64_t *)&qword_1EF5C3500);
  }
  return result;
}

unint64_t sub_1C02BBD90@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return DateTime.Date.CalendarSystem.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C02BBD98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DateTime.Date.CalendarSystem.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C02BBDBC()
{
  sub_1C02BBF30();
  return sub_1C03040FC();
}

uint64_t sub_1C02BBE18()
{
  sub_1C02BBF30();
  return sub_1C03040D8();
}

uint64_t _s14descr1E79A73E9V14CalendarSystemOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1C02BBEB0 + 4 * byte_1C03244FD[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1C02BBEE4 + 4 * byte_1C03244F8[v4]))();
}

uint64_t sub_1C02BBEE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02BBEEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02BBEF4);
  return result;
}

uint64_t sub_1C02BBF00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02BBF08);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1C02BBF0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02BBF14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DateTime.Date.CalendarSystem()
{
  return &type metadata for DateTime.Date.CalendarSystem;
}

unint64_t sub_1C02BBF30()
{
  unint64_t result;

  result = qword_1EF5C3508;
  if (!qword_1EF5C3508)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.CalendarSystem, &type metadata for DateTime.Date.CalendarSystem);
    atomic_store(result, (unint64_t *)&qword_1EF5C3508);
  }
  return result;
}

char *type metadata accessor for MapKitLocationSearchProvider.Executor()
{
  return (char *)&_s14descr1E79A73E9VMn.NumFields + 3;
}

ValueMetadata *type metadata accessor for MapKitLocationSearchProvider()
{
  return &type metadata for MapKitLocationSearchProvider;
}

uint64_t sub_1C02BBF8C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  CLLocationDegrees v17;
  CLLocationDegrees v18;
  uint64_t v19;
  CLLocationCoordinate2D v20;
  uint64_t v21;
  _QWORD v23[5];

  v5 = v4;
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC1808]), sel_init);
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  sub_1C02BC8A4(v13, v14, v10);
  v15 = type metadata accessor for LocationResolutionContext();
  v16 = a2 + *(int *)(v15 + 32);
  v17 = 0.0;
  if ((*(_BYTE *)(v16 + 8) & 1) != 0)
  {
    v18 = 0.0;
  }
  else
  {
    v19 = a2 + *(int *)(v15 + 36);
    v18 = 0.0;
    if ((*(_BYTE *)(v19 + 8) & 1) == 0)
    {
      v17 = *(double *)v19;
      v18 = *(double *)v16;
    }
  }
  v20 = CLLocationCoordinate2DMake(v18, v17);
  MEMORY[0x1C3B97B5C](v20.latitude, v20.longitude, 150.0, 150.0);
  objc_msgSend(v10, sel_setRegion_);
  sub_1C0048FE0(v5, (uint64_t)v23);
  __swift_project_boxed_opaque_existential_1(v23, v23[3]);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a3;
  *(_QWORD *)(v21 + 24) = a4;
  swift_retain();
  sub_1C02BC768((uint64_t)v10, (uint64_t)sub_1C02BC918, v21);
  swift_release();

  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
}

void sub_1C02BC0E8(void *a1, id a2, void (*a3)(id, uint64_t))
{
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t *v21;
  id i;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  void (*v26)(id, uint64_t);
  id __dst[89];
  _QWORD __src[89];
  unint64_t *v29;

  if (a2)
  {
    __src[0] = a2;
    v5 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7281B0);
    type metadata accessor for MKError(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v6 = __dst[0];
      sub_1C02BC9B0();
      sub_1C0301A98();
      if (__src[0] == 4)
      {
        a3((id)MEMORY[0x1E0DEE9D8], 0);
        goto LABEL_31;
      }

    }
    v17 = a2;
    a3(a2, 1);

    return;
  }
  if (!a1)
  {
    sub_1C02BC938();
    v18 = (void *)swift_allocError();
    a3(v18, 1);

    return;
  }
  v7 = qword_1EF5B7F08;
  v8 = a1;
  if (v7 != -1)
    swift_once();
  v9 = sub_1C0303B98();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EF5FC6B0);
  v6 = v8;
  v10 = sub_1C0303B80();
  v11 = sub_1C03042E8();
  v12 = (uint64_t)&selRef_setTimestampSec_;
  if (!os_log_type_enabled(v10, v11))
  {

    goto LABEL_16;
  }
  v13 = swift_slowAlloc();
  *(_DWORD *)v13 = 134217984;
  v14 = objc_msgSend(v6, sel_mapItems);
  sub_1C02BC974();
  v15 = sub_1C0304138();

  if (v15 >> 62)
    goto LABEL_33;
  v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);

  while (1)
  {
    swift_bridgeObjectRelease();
    __src[0] = v16;
    sub_1C03044B0();

    _os_log_impl(&dword_1C0039000, v10, v11, "response object size: %ld", (uint8_t *)v13, 0xCu);
    MEMORY[0x1C3B98378](v13, -1, -1);

LABEL_16:
    v19 = objc_msgSend(v6, *(SEL *)(v12 + 2352));
    sub_1C02BC974();
    v13 = sub_1C0304138();

    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      v12 = sub_1C03047F8();
      swift_bridgeObjectRelease();
      if (!v12)
      {
LABEL_29:
        swift_bridgeObjectRelease();
        a3((id)MEMORY[0x1E0DEE9D8], 0);
        goto LABEL_30;
      }
    }
    else
    {
      v12 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v12)
        goto LABEL_29;
    }
    v26 = a3;
    v29 = (unint64_t *)MEMORY[0x1E0DEE9D8];
    v10 = &v29;
    sub_1C00B1B80(0, v12 & ~(v12 >> 63), 0);
    if ((v12 & 0x8000000000000000) == 0)
      break;
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
    v16 = sub_1C03047F8();

    swift_bridgeObjectRelease();
  }
  v20 = 0;
  v21 = v29;
  if ((v13 & 0xC000000000000001) == 0)
    goto LABEL_21;
LABEL_20:
  for (i = (id)MEMORY[0x1C3B975EC](v20, v13); ; i = *(id *)(v13 + 8 * v20 + 32))
  {
    v23 = i;
    MKMapItem.toLocation()((uint64_t)__src);

    memcpy(__dst, __src, sizeof(__dst));
    v29 = v21;
    v25 = v21[2];
    v24 = v21[3];
    if (v25 >= v24 >> 1)
    {
      sub_1C00B1B80(v24 > 1, v25 + 1, 1);
      v21 = v29;
    }
    v21[2] = v25 + 1;
    memcpy(&v21[89 * v25 + 4], __dst, 0x2C8uLL);
    if (v12 - 1 == v20)
      break;
    ++v20;
    if ((v13 & 0xC000000000000001) != 0)
      goto LABEL_20;
LABEL_21:
    ;
  }
  swift_bridgeObjectRelease();
  v26(v21, 0);
LABEL_30:
  swift_bridgeObjectRelease();
LABEL_31:

}

void sub_1C02BC768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  void *v6;
  _QWORD v7[6];

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC17F0]), sel_initWithRequest_, a1);
  v7[4] = a2;
  v7[5] = a3;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 1107296256;
  v7[2] = sub_1C02BC82C;
  v7[3] = &block_descriptor_26;
  v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_startWithCompletionHandler_, v6);
  _Block_release(v6);

}

void sub_1C02BC82C(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_1C02BC8A4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1C0303E8C();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setNaturalLanguageQuery_, v4);

}

uint64_t sub_1C02BC8F4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C02BC918(void *a1, void *a2)
{
  uint64_t v2;

  sub_1C02BC0E8(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

unint64_t sub_1C02BC938()
{
  unint64_t result;

  result = qword_1EF5C3510;
  if (!qword_1EF5C3510)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0324734, &type metadata for SearchError);
    atomic_store(result, (unint64_t *)&qword_1EF5C3510);
  }
  return result;
}

unint64_t sub_1C02BC974()
{
  unint64_t result;

  result = qword_1EF5C3518;
  if (!qword_1EF5C3518)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF5C3518);
  }
  return result;
}

unint64_t sub_1C02BC9B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF5B86A0;
  if (!qword_1EF5B86A0)
  {
    type metadata accessor for MKError(255);
    result = MEMORY[0x1C3B9827C](&unk_1C0306614, v1);
    atomic_store(result, (unint64_t *)&qword_1EF5B86A0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SearchError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C02BCA30 + 4 * byte_1C0324640[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C02BCA50 + 4 * byte_1C0324645[v4]))();
}

_BYTE *sub_1C02BCA30(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C02BCA50(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C02BCA58(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C02BCA60(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C02BCA68(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C02BCA70(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SearchError()
{
  return &type metadata for SearchError;
}

unint64_t sub_1C02BCA90()
{
  unint64_t result;

  result = qword_1EF5C3520;
  if (!qword_1EF5C3520)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C032470C, &type metadata for SearchError);
    atomic_store(result, (unint64_t *)&qword_1EF5C3520);
  }
  return result;
}

uint64_t sub_1C02BCACC()
{
  uint64_t v0;
  id v1;
  unint64_t inited;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v10;
  id v11[7];

  v11[6] = *(id *)MEMORY[0x1E0C80C00];
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D44208]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727640);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C030A730;
  *(_QWORD *)(inited + 32) = objc_msgSend((id)objc_opt_self(), sel_showInAppStringSearchResultsProtocol);
  v11[0] = (id)inited;
  sub_1C0304150();
  if (inited >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C03047F8();
    OUTLINED_FUNCTION_0_145();
  }
  else
  {
    v0 = *(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v0)
    sub_1C011F8C4(inited);
  else
    swift_bridgeObjectRelease();
  v3 = (void *)sub_1C00FCE98();
  sub_1C0068358((unint64_t *)&unk_1EF5C3530, (uint64_t (*)(uint64_t))sub_1C00FCE98, MEMORY[0x1E0DEFCF8]);
  sub_1C0304234();
  OUTLINED_FUNCTION_0_145();
  v11[0] = 0;
  v4 = objc_msgSend(v1, sel_actionsConformingToSystemProtocols_logicalType_bundleIdentifier_error_, v3, 1, 0, v11);

  v5 = v11[0];
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA660);
    v6 = sub_1C0303D90();
    v7 = v5;

    v8 = sub_1C02BD4F8(v6);
    swift_bridgeObjectRelease();
    return sub_1C01AB030(v8);
  }
  else
  {
    v10 = v11[0];
    sub_1C0301ABC();

    return swift_willThrow();
  }
}

uint64_t sub_1C02BCCE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  void *v19;
  id v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  char v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  char v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char v45;
  void (*v46)(char *, uint64_t);
  id v47;
  void *v48;
  char v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  char v53;
  _QWORD v54[3];
  char *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  char *v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[6];

  v57 = sub_1C0301600();
  v66 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v55 = (char *)v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5C3540);
  MEMORY[0x1E0C80A78](v63);
  v62 = (uint64_t)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5BA680);
  v7 = MEMORY[0x1E0C80A78](v6);
  v60 = (char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v68 = (uint64_t)v54 - v10;
  MEMORY[0x1E0C80A78](v9);
  v67 = (uint64_t)v54 - v11;
  sub_1C006F164(v70);
  v64 = v70[0];
  v65 = v70[3];
  v12 = v70[4];
  v58 = v70[1];
  v59 = (unint64_t)(v70[2] + 64) >> 6;
  v56 = (id)*MEMORY[0x1E0D43A70];
  v61 = *MEMORY[0x1E0C911C0];
  v54[1] = a3;
  result = swift_bridgeObjectRetain_n();
  while (1)
  {
    while (1)
    {
      while (1)
      {
        if (v12)
        {
          v69 = (v12 - 1) & v12;
          v14 = __clz(__rbit64(v12)) | (v65 << 6);
        }
        else
        {
          v15 = v65 + 1;
          if (__OFADD__(v65, 1))
            goto LABEL_67;
          if (v15 >= v59)
          {
LABEL_64:
            swift_bridgeObjectRelease();
            swift_release();
            return 0;
          }
          v16 = *(_QWORD *)(v58 + 8 * v15);
          v17 = v65 + 1;
          if (!v16)
          {
            v17 = v65 + 2;
            if (v65 + 2 >= v59)
              goto LABEL_64;
            v16 = *(_QWORD *)(v58 + 8 * v17);
            if (!v16)
            {
              v17 = v65 + 3;
              if (v65 + 3 >= v59)
                goto LABEL_64;
              v16 = *(_QWORD *)(v58 + 8 * v17);
              if (!v16)
              {
                v17 = v65 + 4;
                if (v65 + 4 >= v59)
                  goto LABEL_64;
                v16 = *(_QWORD *)(v58 + 8 * v17);
                if (!v16)
                {
                  v17 = v65 + 5;
                  if (v65 + 5 >= v59)
                    goto LABEL_64;
                  v16 = *(_QWORD *)(v58 + 8 * v17);
                  if (!v16)
                  {
                    v17 = v65 + 6;
                    if (v65 + 6 >= v59)
                      goto LABEL_64;
                    v16 = *(_QWORD *)(v58 + 8 * v17);
                    if (!v16)
                    {
                      v18 = v65 + 7;
                      do
                      {
                        if (v18 >= v59)
                          goto LABEL_64;
                        v16 = *(_QWORD *)(v58 + 8 * v18++);
                      }
                      while (!v16);
                      v17 = v18 - 1;
                    }
                  }
                }
              }
            }
          }
          v69 = (v16 - 1) & v16;
          v14 = __clz(__rbit64(v16)) + (v17 << 6);
          v65 = v17;
        }
        v19 = *(void **)(*(_QWORD *)(v64 + 56) + 8 * v14);
        v20 = objc_msgSend(v19, sel_systemProtocols);
        sub_1C00FCE98();
        v21 = sub_1C0304138();

        v22 = objc_msgSend((id)objc_opt_self(), sel_showInAppStringSearchResultsProtocol);
        if (v21 >> 62)
        {
          swift_bridgeObjectRetain();
          v23 = sub_1C03047F8();
          if (!v23)
            goto LABEL_42;
        }
        else
        {
          v23 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v23)
            goto LABEL_42;
        }
        v24 = v21 & 0xC000000000000001;
        v25 = (v21 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B975EC](0, v21) : *(id *)(v21 + 32);
        v26 = v25;
        v27 = sub_1C030445C();

        if ((v27 & 1) != 0)
          break;
        if (v23 != 1)
        {
          if (v24)
            v47 = (id)MEMORY[0x1C3B975EC](1, v21);
          else
            v47 = *(id *)(v21 + 40);
          v48 = v47;
          v49 = sub_1C030445C();

          if ((v49 & 1) != 0)
            break;
          if (v23 != 2)
          {
            v50 = 6;
            while (1)
            {
              result = v24 ? MEMORY[0x1C3B975EC](v50 - 4, v21) : (uint64_t)*(id *)(v21 + 8 * v50);
              v51 = (void *)result;
              v52 = v50 - 3;
              if (__OFADD__(v50 - 4, 1))
                break;
              v53 = sub_1C030445C();

              if ((v53 & 1) != 0)
                goto LABEL_27;
              ++v50;
              if (v52 == v23)
                goto LABEL_42;
            }
            __break(1u);
LABEL_67:
            __break(1u);
            return result;
          }
        }
LABEL_42:

LABEL_43:
        result = swift_bridgeObjectRelease_n();
        v12 = v69;
      }
LABEL_27:
      swift_bridgeObjectRelease_n();

      v28 = objc_msgSend(v19, sel_systemProtocolMetadata);
      type metadata accessor for LNSystemProtocolIdentifier(0);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5C3550);
      sub_1C0068358((unint64_t *)&unk_1EF5BA690, (uint64_t (*)(uint64_t))type metadata accessor for LNSystemProtocolIdentifier, (uint64_t)&unk_1C030658C);
      v29 = sub_1C0303D90();

      v30 = v57;
      if (!*(_QWORD *)(v29 + 16))
        goto LABEL_47;
      v31 = v56;
      sub_1C00B3FD4((uint64_t)v31);
      v32 = (uint64_t)v60;
      if ((v33 & 1) != 0)
        break;

LABEL_47:
      result = swift_bridgeObjectRelease();
      v12 = v69;
    }
    swift_unknownObjectRetain();

    swift_bridgeObjectRelease();
    objc_opt_self();
    v34 = (void *)swift_dynamicCastObjCClass();
    if (!v34)
      goto LABEL_60;
    v35 = objc_msgSend(v34, sel_searchScopes);
    v36 = sub_1C0304138();

    v37 = *(_QWORD *)(v36 + 16);
    if (v37)
      break;
    swift_bridgeObjectRelease();
LABEL_60:
    result = swift_unknownObjectRelease();
    v12 = v69;
  }
  swift_bridgeObjectRetain();
  v54[2] = v36;
  v38 = v36 + 40;
  while (1)
  {
    swift_bridgeObjectRetain_n();
    v39 = v67;
    sub_1C03015F4();
    v40 = v68;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v66 + 104))(v68, v61, v30);
    __swift_storeEnumTagSinglePayload(v40, 0, 1, v30);
    v41 = v62;
    v42 = v62 + *(int *)(v63 + 48);
    sub_1C02BD81C(v39, v62);
    sub_1C02BD81C(v40, v42);
    if (__swift_getEnumTagSinglePayload(v41, 1, v30) == 1)
      break;
    sub_1C02BD81C(v41, v32);
    if (__swift_getEnumTagSinglePayload(v42, 1, v30) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v32, v30);
      goto LABEL_37;
    }
    v43 = v66;
    v44 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 32))(v55, v42, v30);
    sub_1C0068358((unint64_t *)&unk_1EF5C3560, (uint64_t (*)(uint64_t))MEMORY[0x1E0C911E0], MEMORY[0x1E0C91200]);
    v45 = sub_1C0303E80();
    v46 = *(void (**)(char *, uint64_t))(v43 + 8);
    v32 = (uint64_t)v60;
    v46(v60, v30);
    v46(v44, v30);
    sub_1C0056C9C(v41, (uint64_t *)&unk_1EF5BA680);
    sub_1C0056C9C(v68, (uint64_t *)&unk_1EF5BA680);
    sub_1C0056C9C(v67, (uint64_t *)&unk_1EF5BA680);
    swift_bridgeObjectRelease();
    if ((v45 & 1) != 0)
      goto LABEL_65;
LABEL_39:
    v38 += 16;
    if (!--v37)
    {
      swift_unknownObjectRelease();
      goto LABEL_43;
    }
  }
  if (__swift_getEnumTagSinglePayload(v42, 1, v30) != 1)
  {
LABEL_37:
    sub_1C0056C9C(v41, (uint64_t *)&unk_1EF5C3540);
    sub_1C0056C9C(v68, (uint64_t *)&unk_1EF5BA680);
    sub_1C0056C9C(v67, (uint64_t *)&unk_1EF5BA680);
    swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  sub_1C0056C9C(v41, (uint64_t *)&unk_1EF5BA680);
  sub_1C0056C9C(v68, (uint64_t *)&unk_1EF5BA680);
  sub_1C0056C9C(v67, (uint64_t *)&unk_1EF5BA680);
  swift_bridgeObjectRelease();
LABEL_65:
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t sub_1C02BD4F8(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD v10[2];

  v2 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v5 = (_QWORD *)((char *)v10 - ((8 * v4 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1C007A70C(0, v4, v5);
    sub_1C02BD654((uint64_t)v5, v4, v2);
    if (v1)
      swift_willThrow();
    else
      return v6;
  }
  else
  {
    v7 = (_QWORD *)swift_slowAlloc();
    sub_1C007A70C(0, v4, v7);
    sub_1C02BD654((uint64_t)v7, v4, v2);
    v2 = v8;
    MEMORY[0x1C3B98378](v7, -1, -1);
  }
  return v2;
}

void sub_1C02BD654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v23;

  v23 = 0;
  v4 = 0;
  v5 = a3 + 64;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_20;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v12 >= v9)
      goto LABEL_24;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        goto LABEL_24;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          goto LABEL_24;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_19:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_20:
    v15 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = sub_1C02BCCE8(v16, v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
    {
      *(_QWORD *)(a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
LABEL_24:
        sub_1C02A0E78(a1, a2, v23);
        return;
      }
    }
  }
  v14 = v12 + 3;
  if (v14 >= v9)
    goto LABEL_24;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      goto LABEL_24;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1C02BD81C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5BA680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_145()
{
  return swift_bridgeObjectRelease();
}

uint64_t dispatch thunk of ToUsoPerson.toUsoPerson()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1C02BD878(uint64_t a1@<X8>)
{
  id v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;

  v2 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v3 = sub_1C013E12C(0xD000000000000022, 0x80000001C0336420);
  if (v3)
  {
    v4 = v3;
    v5 = (void *)sub_1C0303E8C();
    v6 = objc_msgSend(v4, sel_stringForKey_, v5);

    if (v6)
    {
      v7 = sub_1C0303EB0();
      v9 = v8;

    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v17 = (void *)sub_1C0303E8C();
    v18 = objc_msgSend(v4, sel_stringForKey_, v17);

    if (v18)
    {
      v14 = sub_1C0303EB0();
      v15 = v19;

    }
    else
    {
      v14 = 0;
      v15 = 0;
    }
    v20 = (void *)sub_1C0303E8C();
    v16 = objc_msgSend(v4, sel_BOOLForKey_, v20);

  }
  else
  {
    if (qword_1EF5B7F30 != -1)
      swift_once();
    v10 = sub_1C0303B98();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EF5FC710);
    v11 = sub_1C0303B80();
    v12 = sub_1C03042F4();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      *(_DWORD *)v13 = 136315138;
      sub_1C003E6D8(0xD000000000000022, 0x80000001C0336420, &v21);
      sub_1C03044B0();
      _os_log_impl(&dword_1C0039000, v11, v12, "Could not find UserDefaults with suiteName [%s]", v13, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }

    v7 = 0;
    v9 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
  }
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = v14;
  *(_QWORD *)(a1 + 24) = v15;
  *(_BYTE *)(a1 + 32) = v16;
}

uint64_t sub_1C02BDB38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  char v4;
  BOOL v6;
  char v7;
  _BYTE v9[16];
  uint64_t v10;
  uint64_t v11;

  sub_1C00F7F8C(v0 + 16, (uint64_t)v9);
  sub_1C00F7F8C((uint64_t)v9, (uint64_t)&v10);
  v1 = v11;
  if (!v11 || ((v2 = v10, v10 == 0x6C65646F6DLL) ? (v3 = v11 == 0xE500000000000000) : (v3 = 0), v3))
  {
    v7 = 1;
  }
  else
  {
    v4 = OUTLINED_FUNCTION_3_1();
    v6 = v2 == 0x6563726F66 && v1 == 0xE500000000000000;
    v7 = 1;
    if ((v4 & 1) == 0 && !v6)
      v7 = OUTLINED_FUNCTION_3_1();
  }
  return v7 & 1;
}

uint64_t sub_1C02BDC04()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[16];
  _BYTE v18[16];
  _QWORD v19[2];
  uint64_t v20;
  unint64_t v21;

  sub_1C00F7F8C(v0, (uint64_t)v18);
  sub_1C00F7F8C((uint64_t)v18, (uint64_t)v19);
  if (v19[1])
  {
    v20 = 0x7365736143657375;
    v21 = 0xE90000000000003DLL;
    sub_1C0303FD0();
    v1 = v20;
    v2 = v21;
    sub_1C00500A0();
    v4 = v3;
    v5 = *(_QWORD *)(v3 + 16);
    if (v5 >= *(_QWORD *)(v3 + 24) >> 1)
    {
      OUTLINED_FUNCTION_2_13();
      v4 = v12;
    }
    *(_QWORD *)(v4 + 16) = v5 + 1;
    v6 = v4 + 16 * v5;
    *(_QWORD *)(v6 + 32) = v1;
    *(_QWORD *)(v6 + 40) = v2;
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
  }
  sub_1C00F7F8C(v0 + 16, (uint64_t)v17);
  sub_1C00F7F8C((uint64_t)v17, (uint64_t)&v20);
  if (v21)
  {
    sub_1C0303FD0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_4_10();
      v4 = v13;
    }
    v7 = *(_QWORD *)(v4 + 16);
    if (v7 >= *(_QWORD *)(v4 + 24) >> 1)
    {
      OUTLINED_FUNCTION_2_13();
      v4 = v14;
    }
    *(_QWORD *)(v4 + 16) = v7 + 1;
    v8 = v4 + 16 * v7;
    *(_QWORD *)(v8 + 32) = 0x7967657461727473;
    *(_QWORD *)(v8 + 40) = 0xE90000000000003DLL;
  }
  if ((*(_BYTE *)(v0 + 32) & 1) != 0)
  {
    sub_1C03046CC();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_4_10();
      v4 = v15;
    }
    v9 = *(_QWORD *)(v4 + 16);
    if (v9 >= *(_QWORD *)(v4 + 24) >> 1)
    {
      OUTLINED_FUNCTION_2_13();
      v4 = v16;
    }
    *(_QWORD *)(v4 + 16) = v9 + 1;
    v10 = v4 + 16 * v9;
    *(_QWORD *)(v10 + 32) = 0xD000000000000017;
    *(_QWORD *)(v10 + 40) = 0x80000001C0336400;
    goto LABEL_20;
  }
  if (*(_QWORD *)(v4 + 16))
  {
LABEL_20:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
    sub_1C004B224();
    sub_1C0303E50();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();
LABEL_21:
  sub_1C0303FD0();
  swift_bridgeObjectRelease();
  sub_1C0303FD0();
  return 0x656469727265764FLL;
}

uint64_t sub_1C02BDEA0()
{
  return sub_1C02BDC04();
}

uint64_t initializeWithCopy for PervasiveOverrides(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PervasiveOverrides(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for PervasiveOverrides(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for PervasiveOverrides(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PervasiveOverrides(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PervasiveOverrides()
{
  return &type metadata for PervasiveOverrides;
}

void SportsSlotResolutionTask.run(withAlreadyResolvedSlots:)(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23[16];
  char v24;
  _BYTE __dst[128];
  _OWORD v26[8];
  _BYTE v27[144];
  _QWORD *v28;

  v3 = v2;
  v4 = *(_BYTE *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 40);
  if (v5)
  {
    v6 = *(_QWORD *)(v5 + 16);
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v6)
    {
      v28 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      sub_1C00B1B4C();
      v7 = v28;
      v8 = (char *)(v5 + 32);
      do
      {
        memcpy(__dst, v8, sizeof(__dst));
        memmove(v26, v8, 0x80uLL);
        nullsub_1(v26);
        sub_1C00C7588((uint64_t)__dst);
        v28 = v7;
        v9 = v7[2];
        if (v9 >= v7[3] >> 1)
        {
          sub_1C00B1B4C();
          v7 = v28;
        }
        sub_1C005578C((uint64_t)v26, (uint64_t)v23, &qword_1EF5BA3C8);
        v24 = v4;
        v7[2] = v9 + 1;
        OUTLINED_FUNCTION_2_130(&v7[17 * v9 + 4], v23);
        v8 += 128;
        --v6;
      }
      while (v6);
      v1 = v20;
      v3 = v21;
    }
  }
  else
  {
    sub_1C02BE548(v26);
    sub_1C005578C((uint64_t)v26, (uint64_t)v23, &qword_1EF5BA3C8);
    v24 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B9158);
    v7 = (_QWORD *)swift_allocObject();
    *((_OWORD *)v7 + 1) = xmmword_1C0305B60;
    OUTLINED_FUNCTION_2_130(v7 + 4, v23);
  }
  __swift_project_boxed_opaque_existential_1((_QWORD *)v1, *(_QWORD *)(v1 + 24));
  *(_QWORD *)&v26[0] = v7;
  SportsResolver.makeRecommendation(query:)((uint64_t *)v26, (uint64_t)v23);
  if (v3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C005578C((uint64_t)v23, (uint64_t)v27, &qword_1EF5BE9D0);
    if (qword_1EF5B7F20 != -1)
      swift_once();
    v10 = sub_1C0303B98();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EF5FC6F8);
    OUTLINED_FUNCTION_4_110();
    OUTLINED_FUNCTION_4_110();
    v11 = sub_1C0303B80();
    v12 = sub_1C03042E8();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v23[0] = v14;
      *(_DWORD *)v13 = 136315138;
      OUTLINED_FUNCTION_5_97(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1C01C6E98);
      sub_1C02EE290();
      v16 = v15;
      v18 = v17;
      OUTLINED_FUNCTION_5_97(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1C00D8E98);
      *(_QWORD *)&v26[0] = sub_1C003E6D8(v16, v18, v23);
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      sub_1C02BE4EC((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1C00D8E98);
      OUTLINED_FUNCTION_0_146();
      _os_log_impl(&dword_1C0039000, v11, v12, "Sports recommendations: %s", v13, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }
    OUTLINED_FUNCTION_0_146();
    OUTLINED_FUNCTION_0_146();

    sub_1C01988C8();
    OUTLINED_FUNCTION_5_97(v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1C00D8E98);
    OUTLINED_FUNCTION_2_130(a1, v23);
  }
}

BOOL static Category.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Category.hash(into:)()
{
  return sub_1C0304B10();
}

void Category.hashValue.getter()
{
  sub_1C0304B04();
  sub_1C0304B10();
  sub_1C0304B40();
  OUTLINED_FUNCTION_1_2();
}

_QWORD *SportsSlotResolutionTask.init(entity:category:)@<X0>(_QWORD *result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3;

  v3 = *a2;
  *(_QWORD *)(a3 + 40) = *result;
  *(_BYTE *)(a3 + 48) = v3;
  *(_QWORD *)(a3 + 24) = &type metadata for SportsResolver;
  *(_QWORD *)(a3 + 32) = &off_1E799CAF8;
  return result;
}

void sub_1C02BE4D8(void *a1@<X8>)
{
  SportsSlotResolutionTask.run(withAlreadyResolvedSlots:)(a1);
}

void sub_1C02BE4EC(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v2;

  v2 = *(_BYTE *)(a1 + 128);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), v2);
  OUTLINED_FUNCTION_1_2();
}

double sub_1C02BE548(_OWORD *a1)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1C0307CF0;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  return result;
}

unint64_t sub_1C02BE56C()
{
  unint64_t result;

  result = qword_1EF5C3570;
  if (!qword_1EF5C3570)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for Category, &type metadata for Category);
    atomic_store(result, (unint64_t *)&qword_1EF5C3570);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Category(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C02BE5F4 + 4 * byte_1C03247C5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C02BE628 + 4 * byte_1C03247C0[v4]))();
}

uint64_t sub_1C02BE628(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02BE630(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02BE638);
  return result;
}

uint64_t sub_1C02BE644(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02BE64CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C02BE650(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02BE658(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for Category()
{
  OUTLINED_FUNCTION_17_2();
}

_QWORD *initializeBufferWithCopyOfBuffer for SportsEntity(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SportsEntity()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for SportsEntity(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for SportsEntity(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsEntity(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SportsEntity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_1C02BE7BC(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1C02BE7D4(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

void type metadata accessor for SportsEntity()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t destroy for SportsSlotResolutionTask(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SportsSlotResolutionTask(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsSlotResolutionTask(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for SportsSlotResolutionTask(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsSlotResolutionTask(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 49))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsSlotResolutionTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SportsSlotResolutionTask()
{
  OUTLINED_FUNCTION_17_2();
}

void OUTLINED_FUNCTION_0_146()
{
  void (*v0)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char);
  uint64_t v1;

  sub_1C02BE4EC(v1 - 224, v0);
}

void *OUTLINED_FUNCTION_2_130(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x81uLL);
}

void OUTLINED_FUNCTION_4_110()
{
  void (*v0)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char);
  uint64_t v1;

  sub_1C02BE4EC(v1 - 224, v0);
}

void OUTLINED_FUNCTION_5_97(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  uint64_t v2;

  sub_1C02BE4EC(v2 - 224, a2);
}

BOOL static BoolSignal.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return ((*(_QWORD *)a1 != *(_QWORD *)a2) | ((*(_BYTE *)(a1 + 8) ^ *(_BYTE *)(a2 + 8)) | (*(_BYTE *)(a2 + 9) ^ *(_BYTE *)(a1 + 9))) & 1) == 0;
}

uint64_t static StringSignal.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = 0;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && ((*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8)) & 1) == 0)
  {
    v4 = *(_QWORD *)(a1 + 16);
    v5 = *(_QWORD *)(a1 + 24);
    if (v4 == *(_QWORD *)(a2 + 16) && v5 == *(_QWORD *)(a2 + 24))
      return 1;
    else
      return sub_1C0304A08();
  }
  return result;
}

BOOL static DoubleSignal.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;

  result = 0;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && ((*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8)) & 1) == 0)
    return *(double *)(a1 + 16) == *(double *)(a2 + 16);
  return result;
}

uint64_t (*BoolSignal.isError.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BoolSignal.value.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t BoolSignal.value.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 9) = result;
  return result;
}

uint64_t (*BoolSignal.value.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BoolSignal.description.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 9))
    return 1702195828;
  else
    return 0x65736C6166;
}

uint64_t sub_1C02BEB08(char a1)
{
  if (!a1)
    return 0x6E6F6973726576;
  if (a1 == 1)
    return 0x726F7272457369;
  return 0x65756C6176;
}

uint64_t sub_1C02BEB5C()
{
  char *v0;

  return sub_1C02BEB08(*v0);
}

uint64_t sub_1C02BEB64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C02BF1D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C02BEB88()
{
  sub_1C02BECD8();
  return sub_1C0304BAC();
}

uint64_t sub_1C02BEBB0()
{
  sub_1C02BECD8();
  return sub_1C0304BB8();
}

void BoolSignal.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_40_0();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3590);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_3();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C02BECD8();
  sub_1C0304BA0();
  OUTLINED_FUNCTION_13_14();
  if (!v0)
  {
    OUTLINED_FUNCTION_41_3();
    OUTLINED_FUNCTION_41_3();
  }
  OUTLINED_FUNCTION_75_5(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_28_0();
}

unint64_t sub_1C02BECD8()
{
  unint64_t result;

  result = qword_1EF5C3598;
  if (!qword_1EF5C3598)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0324E90, &type metadata for BoolSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3598);
  }
  return result;
}

void BoolSignal.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  OUTLINED_FUNCTION_40_0();
  v4 = v3;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C35A0);
  OUTLINED_FUNCTION_148();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_9_91();
  sub_1C02BECD8();
  OUTLINED_FUNCTION_8_77();
  if (!v0)
  {
    OUTLINED_FUNCTION_11_81();
    OUTLINED_FUNCTION_17_59();
    OUTLINED_FUNCTION_1_26();
    OUTLINED_FUNCTION_20_41();
    v8 = OUTLINED_FUNCTION_1_26();
    OUTLINED_FUNCTION_3_27();
    *(_QWORD *)v6 = v1;
    *(_BYTE *)(v6 + 8) = v2 & 1;
    *(_BYTE *)(v6 + 9) = v8 & 1;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v4);
  OUTLINED_FUNCTION_28_0();
}

void sub_1C02BEDFC()
{
  BoolSignal.init(from:)();
}

void sub_1C02BEE10()
{
  BoolSignal.encode(to:)();
}

uint64_t (*DoubleSignal.isError.modify())(_QWORD)
{
  return nullsub_1;
}

double DoubleSignal.value.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void DoubleSignal.value.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*DoubleSignal.value.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t DoubleSignal.description.getter()
{
  return sub_1C0304204();
}

uint64_t sub_1C02BEE6C()
{
  sub_1C02BEFCC();
  return sub_1C0304BAC();
}

uint64_t sub_1C02BEE94()
{
  sub_1C02BEFCC();
  return sub_1C0304BB8();
}

void DoubleSignal.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C35A8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_3();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02BEFCC();
  sub_1C0304BA0();
  OUTLINED_FUNCTION_13_14();
  if (!v1)
  {
    OUTLINED_FUNCTION_41_3();
    sub_1C0304978();
  }
  OUTLINED_FUNCTION_75_5(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_16_17();
}

unint64_t sub_1C02BEFCC()
{
  unint64_t result;

  result = qword_1EF5C35B0;
  if (!qword_1EF5C35B0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0324E40, &type metadata for DoubleSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C35B0);
  }
  return result;
}

void DoubleSignal.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C35B8);
  OUTLINED_FUNCTION_148();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_9_91();
  sub_1C02BEFCC();
  OUTLINED_FUNCTION_8_77();
  if (!v2)
  {
    v6 = OUTLINED_FUNCTION_11_81();
    v7 = OUTLINED_FUNCTION_1_26();
    sub_1C03048C4();
    v9 = v8;
    OUTLINED_FUNCTION_3_27();
    *(_QWORD *)a2 = v6;
    *(_BYTE *)(a2 + 8) = v7 & 1;
    *(_QWORD *)(a2 + 16) = v9;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  OUTLINED_FUNCTION_16_17();
}

void sub_1C02BF120(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  DoubleSignal.init(from:)(a1, a2);
}

void sub_1C02BF134(_QWORD *a1)
{
  DoubleSignal.encode(to:)(a1);
}

uint64_t (*StringSignal.isError.modify())(_QWORD)
{
  return nullsub_1;
}

void StringSignal.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*StringSignal.value.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t StringSignal.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C02BF1D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (OUTLINED_FUNCTION_7_4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x726F7272457369 && a2 == 0xE700000000000000;
    if (v6 || (OUTLINED_FUNCTION_7_4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = OUTLINED_FUNCTION_7_4();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1C02BF2F8()
{
  sub_1C02BF45C();
  return sub_1C0304BAC();
}

uint64_t sub_1C02BF320()
{
  sub_1C02BF45C();
  return sub_1C0304BB8();
}

void StringSignal.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_40_0();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C35C0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_3();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C02BF45C();
  sub_1C0304BA0();
  OUTLINED_FUNCTION_13_14();
  if (!v0)
  {
    OUTLINED_FUNCTION_41_3();
    sub_1C0304960();
  }
  OUTLINED_FUNCTION_75_5(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_28_0();
}

unint64_t sub_1C02BF45C()
{
  unint64_t result;

  result = qword_1EF5C35C8;
  if (!qword_1EF5C35C8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0324DF0, &type metadata for StringSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C35C8);
  }
  return result;
}

void StringSignal.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_40_0();
  v5 = v4;
  v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C35D0);
  OUTLINED_FUNCTION_148();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_9_91();
  sub_1C02BF45C();
  sub_1C0304B88();
  if (!v0)
  {
    OUTLINED_FUNCTION_14_69();
    sub_1C03048DC();
    OUTLINED_FUNCTION_17_59();
    OUTLINED_FUNCTION_14_69();
    sub_1C03048B8();
    OUTLINED_FUNCTION_20_41();
    OUTLINED_FUNCTION_14_69();
    v9 = sub_1C03048AC();
    v11 = v10;
    v12 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
    v13 = v9;
    OUTLINED_FUNCTION_96_5(v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)v7 = v1;
    *(_BYTE *)(v7 + 8) = v2 & 1;
    *(_QWORD *)(v7 + 16) = v13;
    *(_QWORD *)(v7 + 24) = v11;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v5);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28_0();
}

_UNKNOWN **sub_1C02BF5C8()
{
  return &off_1E79A7898;
}

unint64_t sub_1C02BF5E0()
{
  unint64_t result;

  result = qword_1EF5C35D8;
  if (!qword_1EF5C35D8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for BoolSignal, &type metadata for BoolSignal);
    atomic_store(result, (unint64_t *)&qword_1EF5C35D8);
  }
  return result;
}

void sub_1C02BF61C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_1C02BF718(a1, a2, a3, (uint64_t (*)(void))sub_1C0117E90, (uint64_t (*)(void))sub_1C0111B90, (uint64_t (*)(void))sub_1C02BF5E0);
}

_UNKNOWN **sub_1C02BF638()
{
  return &off_1E79A78B8;
}

unint64_t sub_1C02BF650()
{
  unint64_t result;

  result = qword_1EF5C3638;
  if (!qword_1EF5C3638)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DoubleSignal, &type metadata for DoubleSignal);
    atomic_store(result, (unint64_t *)&qword_1EF5C3638);
  }
  return result;
}

void sub_1C02BF68C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_1C02BF718(a1, a2, a3, (uint64_t (*)(void))sub_1C0117F08, (uint64_t (*)(void))sub_1C0111C08, (uint64_t (*)(void))sub_1C02BF650);
}

_UNKNOWN **sub_1C02BF6A8()
{
  return &off_1E79A78D8;
}

unint64_t sub_1C02BF6C0()
{
  unint64_t result;

  result = qword_1EF5C3698;
  if (!qword_1EF5C3698)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for StringSignal, &type metadata for StringSignal);
    atomic_store(result, (unint64_t *)&qword_1EF5C3698);
  }
  return result;
}

void sub_1C02BF6FC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_1C02BF718(a1, a2, a3, (uint64_t (*)(void))sub_1C0117ECC, (uint64_t (*)(void))sub_1C0111BCC, (uint64_t (*)(void))sub_1C02BF6C0);
}

void sub_1C02BF718(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[2] = a4();
  a1[3] = a5();
  a1[4] = a6();
  OUTLINED_FUNCTION_37_0();
}

void sub_1C02BF758()
{
  StringSignal.init(from:)();
}

void sub_1C02BF76C()
{
  StringSignal.encode(to:)();
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for BoolSignal(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 10))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BoolSignal(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DoubleSignal(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 24))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DoubleSignal(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

void type metadata accessor for DoubleSignal()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t destroy for StringSignal()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StringSignal(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StringSignal(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StringSignal(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StringSignal.CodingKeys()
{
  return &type metadata for StringSignal.CodingKeys;
}

ValueMetadata *type metadata accessor for DoubleSignal.CodingKeys()
{
  return &type metadata for DoubleSignal.CodingKeys;
}

uint64_t _s13SiriInference12StringSignalV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C02BFA08 + 4 * byte_1C03248C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C02BFA3C + 4 * asc_1C03248C0[v4]))();
}

uint64_t sub_1C02BFA3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02BFA44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02BFA4CLL);
  return result;
}

uint64_t sub_1C02BFA58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02BFA60);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C02BFA64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02BFA6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BoolSignal.CodingKeys()
{
  return &type metadata for BoolSignal.CodingKeys;
}

unint64_t sub_1C02BFA8C()
{
  unint64_t result;

  result = qword_1EF5C36F8;
  if (!qword_1EF5C36F8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0324C58, &type metadata for BoolSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C36F8);
  }
  return result;
}

unint64_t sub_1C02BFACC()
{
  unint64_t result;

  result = qword_1EF5C3700;
  if (!qword_1EF5C3700)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0324D10, &type metadata for DoubleSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3700);
  }
  return result;
}

unint64_t sub_1C02BFB0C()
{
  unint64_t result;

  result = qword_1EF5C3708;
  if (!qword_1EF5C3708)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0324DC8, &type metadata for StringSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3708);
  }
  return result;
}

unint64_t sub_1C02BFB4C()
{
  unint64_t result;

  result = qword_1EF5C3710;
  if (!qword_1EF5C3710)
  {
    result = MEMORY[0x1C3B9827C]("I/h'", &type metadata for StringSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3710);
  }
  return result;
}

unint64_t sub_1C02BFB8C()
{
  unint64_t result;

  result = qword_1EF5C3718;
  if (!qword_1EF5C3718)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0324D60, &type metadata for StringSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3718);
  }
  return result;
}

unint64_t sub_1C02BFBCC()
{
  unint64_t result;

  result = qword_1EF5C3720;
  if (!qword_1EF5C3720)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0324C80, &type metadata for DoubleSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3720);
  }
  return result;
}

unint64_t sub_1C02BFC0C()
{
  unint64_t result;

  result = qword_1EF5C3728;
  if (!qword_1EF5C3728)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0324CA8, &type metadata for DoubleSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3728);
  }
  return result;
}

unint64_t sub_1C02BFC4C()
{
  unint64_t result;

  result = qword_1EF5C3730;
  if (!qword_1EF5C3730)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0324BC8, &type metadata for BoolSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3730);
  }
  return result;
}

unint64_t sub_1C02BFC8C()
{
  unint64_t result;

  result = qword_1EF5C3738;
  if (!qword_1EF5C3738)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0324BF0, &type metadata for BoolSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3738);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_8_77()
{
  return sub_1C0304B88();
}

_QWORD *OUTLINED_FUNCTION_9_91()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_11_81()
{
  return sub_1C03048DC();
}

uint64_t OUTLINED_FUNCTION_17_59()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return v0 - 66;
}

uint64_t OUTLINED_FUNCTION_18_44(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_19_47()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_20_41()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 2;
  return v0 - 67;
}

uint64_t OUTLINED_FUNCTION_21_49()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1C02BFD6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_1C0301B70();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED7271C8 != -1)
    swift_once();
  v4 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED725EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  result = sub_1C02BFF94((uint64_t)v3, &v7);
  qword_1ED725F00 = v7;
  return result;
}

uint64_t static SignalProcessingPluginManager.sharedInstance.getter@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1ED725F10 != -1)
    swift_once();
  *a1 = qword_1ED725F00;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C02BFE80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v7;

  v0 = sub_1C0301B70();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v2, qword_1ED725EE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED725EE8);
  v5 = (id)MEMORY[0x1C3B97AF0]();
  sub_1C0303EB0();

  sub_1C0301AF8();
  swift_bridgeObjectRelease();
  sub_1C0301B1C();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t SignalProcessingPluginManager.plugins.getter()
{
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for SignalProcessingPluginManager()
{
  return &type metadata for SignalProcessingPluginManager;
}

uint64_t sub_1C02BFF94@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v4 = sub_1C0301B70();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = MEMORY[0x1E0DEE9D8];
  sub_1C02C0234();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  *a2 = v7;
  return result;
}

uint64_t sub_1C02C0234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  id v20;
  uint64_t result;
  id v22;
  _QWORD *v23;
  _QWORD v24[2];
  id v25[2];

  v2 = v0;
  v25[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = sub_1C0301B70();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728340);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v11 = (void *)sub_1C0301B10();
  v25[0] = 0;
  v12 = objc_msgSend(v10, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v11, 0, 0, v25);

  v13 = v25[0];
  if (v12)
  {
    v24[0] = v2;
    v14 = sub_1C0304138();
    v15 = v13;

    v24[1] = v14;
    v25[0] = (id)MEMORY[0x1E0DEE9D8];
    v16 = *(_QWORD *)(v14 + 16);
    if (v16)
    {
      v17 = v14 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      v18 = *(_QWORD *)(v4 + 72);
      v19 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      swift_bridgeObjectRetain();
      while (1)
      {
        v19(v9, v17, v3);
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v3);
        if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v3) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
        sub_1C02C04EC((uint64_t)v6, (uint64_t *)v25);
        if (v1)
        {
          (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
          swift_bridgeObjectRelease_n();
          return swift_bridgeObjectRelease();
        }
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        v17 += v18;
        if (!--v16)
          goto LABEL_10;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_10:
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v3);
    }
    swift_bridgeObjectRelease_n();
    v22 = v25[0];
    v23 = (_QWORD *)v24[0];
    result = swift_bridgeObjectRelease();
    *v23 = v22;
  }
  else
  {
    v20 = v25[0];
    sub_1C0301ABC();

    return swift_willThrow();
  }
  return result;
}

void sub_1C02C04EC(uint64_t a1, uint64_t *a2)
{
  id v3;
  void *v4;
  uint64_t ObjCClassMetadata;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_0;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30[5];

  sub_1C00A2220();
  sub_1C0301B58();
  v3 = sub_1C02C072C();
  if (!v3)
  {
    v17 = sub_1C0301B58();
    v19 = v18;
    sub_1C02C079C();
    swift_allocError();
    *(_QWORD *)v20 = v17;
    *(_QWORD *)(v20 + 8) = v19;
    *(_BYTE *)(v20 + 16) = 0;
    swift_willThrow();
    return;
  }
  v4 = v3;
  if ((objc_msgSend(v3, sel_isLoaded) & 1) != 0)
  {
    if ((objc_msgSend(v4, sel_load) & 1) != 0)
    {
      if (objc_msgSend(v4, sel_principalClass))
      {
        ObjCClassMetadata = swift_getObjCClassMetadata();
        v6 = dynamic_cast_existential_1_conditional(ObjCClassMetadata);
        if (v6)
        {
          v8 = v6;
          v9 = v7;
          v10 = *(void (**)(uint64_t, uint64_t))(v7 + 16);
          v30[3] = v6;
          v30[4] = v7;
          boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v30);
          v10(v8, v9);
          sub_1C00ABCD4();
          v12 = *(_QWORD *)(*a2 + 16);
          sub_1C00ABEBC();
          MEMORY[0x1E0C80A78](v13);
          v15 = (char *)&v30[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, uint64_t *, uint64_t))(v16 + 16))(v15, boxed_opaque_existential_0, v8);
          sub_1C02C07D8(v12, (uint64_t)v15, a2, v8, v9);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v30);
          goto LABEL_11;
        }
      }
      v26 = sub_1C0301B58();
      v28 = v27;
      sub_1C02C079C();
      swift_allocError();
      *(_QWORD *)v24 = v26;
      *(_QWORD *)(v24 + 8) = v28;
      v25 = 2;
    }
    else
    {
      v21 = sub_1C0301B58();
      v23 = v22;
      sub_1C02C079C();
      swift_allocError();
      *(_QWORD *)v24 = v21;
      *(_QWORD *)(v24 + 8) = v23;
      v25 = 1;
    }
    *(_BYTE *)(v24 + 16) = v25;
    swift_willThrow();
  }
LABEL_11:

}

id sub_1C02C072C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1C0303E8C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithPath_, v1);

  return v2;
}

unint64_t sub_1C02C079C()
{
  unint64_t result;

  result = qword_1EF5C3740[0];
  if (!qword_1EF5C3740[0])
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0324F34, &type metadata for SignalProcessingPluginManagerError);
    atomic_store(result, qword_1EF5C3740);
  }
  return result;
}

uint64_t sub_1C02C07D8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_1C004CD5C(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1C02C0854(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 3u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for SignalProcessingPluginManagerError(uint64_t a1)
{
  return sub_1C02C087C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1C02C087C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 3u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s13SiriInference34SignalProcessingPluginManagerErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C02C0854(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SignalProcessingPluginManagerError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C02C0854(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1C02C087C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SignalProcessingPluginManagerError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1C02C087C(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for SignalProcessingPluginManagerError()
{
  return &type metadata for SignalProcessingPluginManagerError;
}

uint64_t OUTLINED_FUNCTION_2_131(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1C003E6D8(a1, a2, (uint64_t *)(v2 - 104));
}

uint64_t sub_1C02C0990()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C030448C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C02C09FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (*(_DWORD *)(v6 + 80) > 7u || (v7 & 0x100000) != 0 || v8 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, *(_QWORD *)(a3 + 16)))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1C02C0ACC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  int v7;
  uint64_t v8;
  size_t v9;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5);
  v7 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

void *sub_1C02C0BA4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1C02C0C34(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  int v7;
  uint64_t v8;
  size_t v9;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5);
  v7 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

uint64_t sub_1C02C0D0C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int EnumTagSinglePayload;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = v6 - 1;
  if (!(_DWORD)v6)
    v7 = 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v8;
  if (!a2)
    return 0;
  v9 = a2 - v7;
  if (a2 > v7)
  {
    v10 = 8 * v8;
    if (v8 > 3)
      goto LABEL_8;
    v12 = ((v9 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      v11 = *(_DWORD *)(a1 + v8);
      if (v11)
        goto LABEL_15;
    }
    else
    {
      if (v12 <= 0xFF)
      {
        if (v12 < 2)
          goto LABEL_22;
LABEL_8:
        v11 = *(unsigned __int8 *)(a1 + v8);
        if (!*(_BYTE *)(a1 + v8))
          goto LABEL_22;
LABEL_15:
        v13 = (v11 - 1) << v10;
        if (v8 > 3)
          v13 = 0;
        if ((_DWORD)v8)
        {
          if (v8 > 3)
            LODWORD(v8) = 4;
          __asm { BR              X12 }
        }
        return v7 + v13 + 1;
      }
      v11 = *(unsigned __int16 *)(a1 + v8);
      if (*(_WORD *)(a1 + v8))
        goto LABEL_15;
    }
  }
LABEL_22:
  if (v6 < 2)
    return 0;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, v6, v4);
  if (EnumTagSinglePayload >= 2)
    return EnumTagSinglePayload - 1;
  else
    return 0;
}

void sub_1C02C0E38(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  size_t v11;
  char v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  v10 = *(_QWORD *)(v7 + 64);
  if (v8)
    v11 = v10;
  else
    v11 = v10 + 1;
  v12 = 8 * v11;
  v13 = a3 >= v9;
  v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      v15 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v15))
      {
        v6 = 4u;
      }
      else if (v15 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v15 > 1;
      }
    }
    else
    {
      v6 = 1u;
    }
  }
  if (v9 < a2)
  {
    v16 = ~v9 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v17 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *a1 = v17;
          *((_BYTE *)a1 + 2) = BYTE2(v17);
        }
        else if ((_DWORD)v11 == 2)
        {
          *a1 = v17;
        }
        else
        {
          *(_BYTE *)a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

void sub_1C02C0FCC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1C02C0FD4()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t sub_1C02C0FF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  return __swift_storeEnumTagSinglePayload(a3, 1, 1, a2);
}

uint64_t sub_1C02C1040()
{
  sub_1C0304B04();
  return sub_1C0304B40();
}

uint64_t sub_1C02C1074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C02C0FF8(a1, *(_QWORD *)(a2 + 16), a3);
}

uint64_t sub_1C02C108C()
{
  return sub_1C02C1040();
}

uint64_t sub_1C02C10A0()
{
  sub_1C0304B04();
  return sub_1C0304B40();
}

void sub_1C02C10D0()
{
  JUMPOUT(0x1C3B9827CLL);
}

void sub_1C02C10E0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for UnstitchedTask() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C020FC0C();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1C02C255C(v6);
  *a1 = v3;
}

void static ProcessUnstitchedIntents.metricName.getter()
{
  OUTLINED_FUNCTION_2_86();
}

id ProcessUnstitchedIntents.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

Swift::Void __swiftcall ProcessUnstitchedIntents.main()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_7_9();
  v2 = sub_1C03046E4();
  sub_1C01D2B1C(v2, v3, v0, v1);
  swift_bridgeObjectRelease();
}

void sub_1C02C11F8(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v8 = sub_1C0303B74();
  MEMORY[0x1E0C80A78](v8);
  if (qword_1ED728268 != -1)
    swift_once();
  v1 = (id)qword_1ED729648;
  sub_1C0303B68();
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C0305B60;
  v3 = sub_1C03046E4();
  v5 = v4;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  sub_1C0303B50();
  swift_bridgeObjectRelease();
  sub_1C02C13B0(a1);
  sub_1C03043D8();
  OUTLINED_FUNCTION_8_78();
  OUTLINED_FUNCTION_11_82();
  if (v7)
    __break(1u);
  else
    OUTLINED_FUNCTION_28_0();
}

void sub_1C02C13B0(void *a1)
{
  void *v1;
  id v2;
  uint64_t inited;
  unint64_t v4;
  unint64_t v5;

  v2 = a1;
  sub_1C02C1534();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728178);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C03067E0;
  *(_QWORD *)(inited + 32) = 0xD000000000000012;
  *(_QWORD *)(inited + 40) = 0x80000001C03364E0;
  *(_QWORD *)(inited + 48) = sub_1C030427C();
  *(_QWORD *)(inited + 56) = 0xD000000000000010;
  *(_QWORD *)(inited + 64) = 0x80000001C0336500;
  *(_QWORD *)(inited + 72) = sub_1C030427C();
  *(_QWORD *)(inited + 80) = 0x6E69686374697473;
  *(_QWORD *)(inited + 88) = 0xEF64656C69614667;
  *(_QWORD *)(inited + 96) = sub_1C030427C();
  sub_1C00F6888();
  sub_1C0303DB4();
  sub_1C0229094();
  v5 = v4;
  swift_bridgeObjectRelease();
  sub_1C01A7C34(v1, v1 != 0, v5, 2);
  swift_bridgeObjectRelease();
  sub_1C00A6AAC(v1, v1 != 0);
}

void sub_1C02C1534()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  os_log_type_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  int v37;
  BOOL v38;
  _DWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int EnumTagSinglePayload;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  _BOOL4 v72;
  uint64_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  char *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  int *v101;
  uint64_t v102;
  char *v103;
  void *v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  BOOL v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  __int128 v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  __int128 v140;
  ValueMetadata *v141;
  _UNKNOWN **v142;
  __int128 v143;
  ValueMetadata *v144;
  _UNKNOWN **v145;
  uint64_t v146;

  v2 = v0;
  v3 = sub_1C0303778();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for CancellableStitcher();
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_27();
  v133 = v8;
  MEMORY[0x1E0C80A78](v9);
  v132 = (uint64_t)&v112 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7277B0);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_53();
  v136 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728360);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_53();
  v137 = v14;
  v15 = sub_1C0301CFC();
  v146 = *(_QWORD *)(v15 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_27();
  v130 = v17;
  MEMORY[0x1E0C80A78](v18);
  v135 = (uint64_t)&v112 - v19;
  v139 = type metadata accessor for UnstitchedTask();
  v131 = *(_QWORD **)(v139 - 8);
  OUTLINED_FUNCTION_121();
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (uint64_t *)((char *)&v112 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = MEMORY[0x1E0C80A78](v21);
  v138 = (uint64_t)&v112 - v25;
  MEMORY[0x1E0C80A78](v24);
  v27 = (uint64_t *)((char *)&v112 - v26);
  if ((objc_msgSend(v2, sel_isCancelled) & 1) != 0)
    goto LABEL_27;
  v126 = v4;
  v127 = v3;
  if (qword_1ED727970 != -1)
    swift_once();
  v28 = sub_1C0303B98();
  v128 = __swift_project_value_buffer(v28, (uint64_t)&unk_1ED7295C8);
  v29 = v128;
  v30 = sub_1C0303B80();
  v31 = sub_1C03042E8();
  if (OUTLINED_FUNCTION_4_1(v31))
  {
    v32 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    *(_WORD *)v32 = 0;
    _os_log_impl(&dword_1C0039000, v30, v29, "processing unstitched ContactResolver intents", v32, 2u);
    OUTLINED_FUNCTION_5();
  }

  sub_1C01DEAC8(0, (uint64_t)&v143);
  if (v1)
    goto LABEL_27;
  v124 = v23;
  v33 = v143;
  sub_1C02460FC();
  v125 = v33;
  *(_QWORD *)&v143 = v34;
  swift_bridgeObjectRetain();
  sub_1C02C10E0((uint64_t *)&v143);
  swift_bridgeObjectRelease();
  v35 = v143;
  swift_retain_n();
  v36 = OUTLINED_FUNCTION_2_132();
  v37 = sub_1C03042E8();
  v38 = os_log_type_enabled(v36, (os_log_type_t)v37);
  v123 = v35;
  if (v38)
  {
    LODWORD(v119) = v37;
    v122 = v2;
    v121 = v15;
    v39 = (_DWORD *)OUTLINED_FUNCTION_4_0();
    v118 = OUTLINED_FUNCTION_4_0();
    *(_QWORD *)&v143 = v118;
    *((_QWORD *)&v119 + 1) = v39;
    *v39 = 136315138;
    v40 = *(_QWORD *)(v35 + 16);
    v41 = MEMORY[0x1E0DEE9D8];
    if (v40)
    {
      v129 = v27;
      v120 = v6;
      v117 = 0;
      *(_QWORD *)&v140 = MEMORY[0x1E0DEE9D8];
      sub_1C00B1764();
      v42 = v35 + ((*((unsigned __int8 *)v131 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v131 + 80));
      v43 = v131[9];
      v41 = v140;
      do
      {
        v44 = v129;
        sub_1C02C2518(v42, (uint64_t)v129);
        v46 = *v44;
        v45 = v44[1];
        swift_bridgeObjectRetain();
        sub_1C003DD84((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C00B1764();
          v41 = v140;
        }
        v47 = *(_QWORD *)(v41 + 16);
        if (v47 >= *(_QWORD *)(v41 + 24) >> 1)
        {
          sub_1C00B1764();
          v41 = v140;
        }
        *(_QWORD *)(v41 + 16) = v47 + 1;
        v48 = v41 + 16 * v47;
        *(_QWORD *)(v48 + 32) = v46;
        *(_QWORD *)(v48 + 40) = v45;
        v42 += v43;
        --v40;
      }
      while (v40);
    }
    v50 = (uint8_t *)*((_QWORD *)&v119 + 1);
    *(_QWORD *)&v140 = v41;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
    v51 = sub_1C0303EF8();
    *(_QWORD *)&v140 = sub_1C003E6D8(v51, v52, (uint64_t *)&v143);
    sub_1C03044B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v36, (os_log_type_t)v119, "unstitched tasks: %s", v50);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }

  swift_release_n();
  v49 = v35;
  v53 = v139;
  v54 = v136;
  sub_1C00C5A6C(v49, v136);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v54, 1, v53);
  v56 = v146;
  if (EnumTagSinglePayload == 1)
  {
    sub_1C0044B78(v54, &qword_1ED7277B0);
    v57 = v137;
    OUTLINED_FUNCTION_77_0(v137, 1);
LABEL_21:
    OUTLINED_FUNCTION_11_58();
    sub_1C0044B78(v57, &qword_1ED728360);
    v60 = OUTLINED_FUNCTION_2_132();
    v61 = sub_1C03042E8();
    if (OUTLINED_FUNCTION_4_1(v61))
    {
      v62 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      *(_WORD *)v62 = 0;
      _os_log_impl(&dword_1C0039000, v60, (os_log_type_t)v56, "no intents to stitch.", v62, 2u);
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_21_50();
    swift_release();
LABEL_27:
    OUTLINED_FUNCTION_28_0();
    return;
  }
  v58 = v54 + *(int *)(v53 + 20);
  v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v146 + 16);
  v57 = v137;
  v59(v137, v58, v15);
  sub_1C003DD84(v54, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
  OUTLINED_FUNCTION_77_0(v57, 0);
  if (__swift_getEnumTagSinglePayload(v57, 1, v15) == 1)
    goto LABEL_21;
  v63 = v57;
  v64 = v135;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 32))(v135, v63, v15);
  v65 = v130;
  v59(v130, v64, v15);
  v66 = sub_1C012E090(v65);
  v120 = v6;
  v67 = v66;
  v69 = v68;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v70 = OUTLINED_FUNCTION_2_132();
  v71 = sub_1C03042E8();
  v72 = OUTLINED_FUNCTION_4(v71);
  v129 = (uint64_t *)v69;
  v130 = v67;
  if (v72)
  {
    v117 = 0;
    v73 = OUTLINED_FUNCTION_4_0();
    v121 = v15;
    v74 = (uint8_t *)v73;
    v75 = OUTLINED_FUNCTION_4_0();
    v122 = v2;
    *(_QWORD *)&v140 = v75;
    LODWORD(v137) = (_DWORD)v59;
    *(_DWORD *)v74 = 136315138;
    *(_QWORD *)&v143 = v67;
    *((_QWORD *)&v143 + 1) = v69;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v76 = sub_1C0303EF8();
    *(_QWORD *)&v143 = sub_1C003E6D8(v76, v77, (uint64_t *)&v140);
    sub_1C03044B0();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_2();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v70, (os_log_type_t)v137, "stitchable interactions: %s", v74);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_2();
  v78 = v124;
  v79 = sub_1C0212CE0();
  v82 = v146;
  v83 = v135;
  *(_QWORD *)&v119 = v79;
  *((_QWORD *)&v119 + 1) = v80;
  v84 = *(_QWORD *)(v123 + 16);
  if (!v84)
  {
    OUTLINED_FUNCTION_21_50();
LABEL_37:
    swift_release();
    OUTLINED_FUNCTION_11_58();
    OUTLINED_FUNCTION_19_3();
    OUTLINED_FUNCTION_25_35();
    OUTLINED_FUNCTION_11_58();

    OUTLINED_FUNCTION_34_19(v83, *(uint64_t (**)(uint64_t, uint64_t))(v82 + 8));
    goto LABEL_27;
  }
  v116 = OBJC_IVAR____TtC13SiriInference24ProcessUnstitchedIntents_stitchingFailed;
  v113 = OBJC_IVAR____TtC13SiriInference24ProcessUnstitchedIntents_stitchingSucceeded;
  v85 = v123 + ((*((unsigned __int8 *)v131 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v131 + 80));
  v117 = (char *)&v140 + 8;
  v118 = v131[9];
  *(_QWORD *)&v81 = 136315138;
  v115 = v81;
  v114 = MEMORY[0x1E0DEE9B8] + 8;
  *(_QWORD *)&v81 = 136446210;
  v112 = v81;
  v86 = v138;
  v121 = v15;
  v122 = v2;
  while (1)
  {
    v136 = v85;
    v137 = v84;
    v87 = v86;
    sub_1C02C2518(v85, v86);
    sub_1C02C2518(v87, (uint64_t)v78);
    v88 = OUTLINED_FUNCTION_2_132();
    v89 = sub_1C03042E8();
    if (OUTLINED_FUNCTION_4(v89))
    {
      v90 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      *(_QWORD *)&v143 = OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v90 = v115;
      v131 = v90 + 4;
      v91 = *v78;
      v92 = v78[1];
      swift_bridgeObjectRetain();
      v93 = sub_1C003E6D8(v91, v92, (uint64_t *)&v143);
      OUTLINED_FUNCTION_10_79(v93);
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      sub_1C003DD84((uint64_t)v78, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
      OUTLINED_FUNCTION_13_0(&dword_1C0039000, v88, (os_log_type_t)v87, "stitching task. taskId=%s", v90);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }
    OUTLINED_FUNCTION_20_9((uint64_t)v78);

    v94 = v120;
    sub_1C02C2518(v138, (uint64_t)v27);
    v144 = &type metadata for DESStore;
    v145 = &off_1E799FF70;
    v95 = (void *)v119;
    v143 = v119;
    v96 = v130;
    swift_bridgeObjectRetain();
    v97 = (uint64_t)v129;
    swift_bridgeObjectRetain();
    v131 = v95;
    swift_retain();
    OUTLINED_FUNCTION_21_50();
    swift_retain();
    sub_1C030376C();
    v142 = &off_1E79AA680;
    v141 = &type metadata for StitchedDataAnonymizer;
    *(_QWORD *)&v140 = MEMORY[0x1E0DEE9E0];
    v98 = v27[1];
    v99 = v133;
    *(_QWORD *)v133 = *v27;
    *((_QWORD *)v99 + 1) = v98;
    v100 = *(uint64_t *)((char *)v27 + *(int *)(v139 + 24));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C003DD84((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
    *((_QWORD *)v99 + 2) = v100;
    *((_QWORD *)v99 + 3) = v96;
    *((_QWORD *)v99 + 4) = v97;
    v101 = (int *)v134;
    (*(void (**)(char *, char *, uint64_t))(v126 + 32))(&v99[*(int *)(v134 + 28)], v94, v127);
    sub_1C004CD5C(&v143, (uint64_t)&v99[v101[8]]);
    *(_QWORD *)&v99[v101[9]] = v125;
    sub_1C004CD5C(&v140, (uint64_t)&v99[v101[10]]);
    v102 = v132;
    sub_1C00D9878((uint64_t)v99, v132, (uint64_t (*)(_QWORD))type metadata accessor for CancellableStitcher);
    v103 = v2;
    sub_1C01E025C();
    v104 = v131;
    v105 = sub_1C02E854C();
    v106 = v102;
    LOBYTE(v102) = v105;
    OUTLINED_FUNCTION_20_9(v106);
    OUTLINED_FUNCTION_20_9(v138);
    if ((v102 & 1) != 0)
      break;
    v107 = *(_QWORD *)&v2[v113];
    v108 = __OFADD__(v107, 1);
    v109 = v107 + 1;
    if (v108)
    {
      __break(1u);
      goto LABEL_41;
    }
    *(_QWORD *)&v2[v113] = v109;
    v82 = v146;
    v83 = v135;
    OUTLINED_FUNCTION_21_50();
    v78 = v124;
    v86 = v138;
    v85 = v136 + v118;
    v84 = v137 - 1;
    if (v137 == 1)
      goto LABEL_37;
  }
  OUTLINED_FUNCTION_11_58();
  OUTLINED_FUNCTION_19_3();
  OUTLINED_FUNCTION_25_35();
  OUTLINED_FUNCTION_11_58();

  OUTLINED_FUNCTION_11_58();
  OUTLINED_FUNCTION_34_19(v135, *(uint64_t (**)(uint64_t, uint64_t))(v146 + 8));
  v110 = *(_QWORD *)&v103[OBJC_IVAR____TtC13SiriInference24ProcessUnstitchedIntents_stitchingSkipped];
  v108 = __OFADD__(v110, 1);
  v111 = v110 + 1;
  if (!v108)
  {
    *(_QWORD *)&v103[OBJC_IVAR____TtC13SiriInference24ProcessUnstitchedIntents_stitchingSkipped] = v111;
    goto LABEL_27;
  }
LABEL_41:
  __break(1u);
  swift_release();
  __break(1u);
}

id ProcessUnstitchedIntents.init()()
{
  char *v0;
  objc_class *v1;
  objc_super v3;

  v1 = (objc_class *)OUTLINED_FUNCTION_7_9();
  *(_QWORD *)&v0[OBJC_IVAR____TtC13SiriInference24ProcessUnstitchedIntents_stitchingSucceeded] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13SiriInference24ProcessUnstitchedIntents_stitchingSkipped] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13SiriInference24ProcessUnstitchedIntents_stitchingFailed] = 0;
  v3.receiver = v0;
  v3.super_class = v1;
  return objc_msgSendSuper2(&v3, sel_init);
}

void ProcessUnstitchedIntents.__allocating_init(activity:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  ProcessUnstitchedIntents.init(activity:)(a1);
  OUTLINED_FUNCTION_9();
}

uint64_t *ProcessUnstitchedIntents.init(activity:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC13SiriInference24ProcessUnstitchedIntents_stitchingSucceeded) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC13SiriInference24ProcessUnstitchedIntents_stitchingSkipped) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC13SiriInference24ProcessUnstitchedIntents_stitchingFailed) = 0;
  return XPCActivityOperation.init(activity:)(a1);
}

id ProcessUnstitchedIntents.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_7_9();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C02C24EC()
{
  OUTLINED_FUNCTION_2_86();
}

uint64_t type metadata accessor for ProcessUnstitchedIntents()
{
  return objc_opt_self();
}

uint64_t sub_1C02C2518(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UnstitchedTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C02C255C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  char v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  unint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v2 = v1;
  v137 = type metadata accessor for UnstitchedTask();
  v4 = *(_QWORD *)(v137 - 8);
  v5 = MEMORY[0x1E0C80A78](v137);
  v127 = (uint64_t)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v138 = (uint64_t)&v121 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v134 = (uint64_t)&v121 - v10;
  MEMORY[0x1E0C80A78](v9);
  v133 = (uint64_t)&v121 - v11;
  v12 = a1[1];
  v13 = sub_1C03049CC();
  if (v13 >= v12)
  {
    if ((v12 & 0x8000000000000000) == 0)
    {
      if (v12)
        sub_1C02C2E9C(0, v12, 1, a1);
      return;
    }
    goto LABEL_141;
  }
  v14 = v13;
  v135 = a1;
  sub_1C027E2CC(v12 / 2);
  v123 = v15;
  v124 = v12;
  v129 = v16;
  v130 = v4;
  if (v12 <= 0)
  {
LABEL_105:
    v18 = (char *)MEMORY[0x1E0DEE9D8];
    v63 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_106:
    v114 = v18;
    if (v63 < 2)
    {
LABEL_117:
      swift_bridgeObjectRelease();
      if (v124 >= -1)
        goto LABEL_118;
      goto LABEL_145;
    }
    v115 = *v135;
    while (1)
    {
      v116 = v63 - 2;
      if (v63 < 2)
        break;
      if (!v115)
        goto LABEL_149;
      v117 = *(_QWORD *)&v114[16 * v116 + 32];
      v118 = *(_QWORD *)&v114[16 * v63 + 24];
      sub_1C02C30C8(v115 + *(_QWORD *)(v130 + 72) * v117, v115 + *(_QWORD *)(v130 + 72) * *(_QWORD *)&v114[16 * v63 + 16], v115 + *(_QWORD *)(v130 + 72) * v118, v129);
      if (v2)
        goto LABEL_103;
      if (v118 < v117)
        goto LABEL_136;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v114 = sub_1C020FAB8();
      if (v116 >= *((_QWORD *)v114 + 2))
        goto LABEL_137;
      v119 = &v114[16 * v116 + 32];
      *(_QWORD *)v119 = v117;
      *((_QWORD *)v119 + 1) = v118;
      v120 = *((_QWORD *)v114 + 2);
      if (v63 > v120)
        goto LABEL_138;
      memmove(&v114[16 * v63 + 16], &v114[16 * v63 + 32], 16 * (v120 - v63));
      *((_QWORD *)v114 + 2) = v120 - 1;
      v63 = v120 - 1;
      if (v120 <= 2)
        goto LABEL_117;
    }
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
    return;
  }
  v122 = v14;
  v17 = 0;
  v18 = (char *)MEMORY[0x1E0DEE9D8];
  v19 = v12;
  while (1)
  {
    v20 = v17;
    v21 = v17 + 1;
    if (v17 + 1 >= v19)
    {
      v27 = v17 + 1;
    }
    else
    {
      v125 = v2;
      v22 = *v135;
      v23 = v4;
      v24 = *(_QWORD *)(v4 + 72);
      v25 = v133;
      sub_1C02C2518(*v135 + v24 * v21, v133);
      v26 = v134;
      sub_1C02C2518(v22 + v24 * v20, v134);
      LODWORD(v136) = sub_1C0301C78();
      sub_1C003DD84(v26, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
      sub_1C003DD84(v25, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
      v27 = v20 + 2;
      v132 = v22;
      v139 = v24;
      if (v20 + 2 >= v19)
      {
        v4 = v23;
        v2 = v125;
      }
      else
      {
        v28 = v19;
        v128 = v20;
        v29 = v24 * v21;
        v30 = v24 * v27;
        while (1)
        {
          v31 = v27;
          v32 = v133;
          sub_1C02C2518(v22 + v30, v133);
          v33 = v134;
          sub_1C02C2518(v22 + v29, v134);
          v34 = sub_1C0301C78();
          sub_1C003DD84(v33, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
          sub_1C003DD84(v32, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
          if (((v136 ^ v34) & 1) != 0)
            break;
          v27 = v31 + 1;
          v22 += v139;
          if (v31 + 1 >= v28)
          {
            v19 = v28;
            v27 = v28;
            v4 = v130;
            v2 = v125;
            v20 = v128;
            goto LABEL_13;
          }
        }
        v4 = v130;
        v27 = v31;
        v2 = v125;
        v20 = v128;
        v19 = v28;
      }
LABEL_13:
      if ((v136 & 1) != 0)
      {
        v35 = v139;
        if (v27 < v20)
          goto LABEL_142;
        if (v20 < v27)
        {
          v131 = v19;
          v125 = v2;
          v36 = 0;
          v37 = v20;
          v38 = v139 * (v27 - 1);
          v39 = v27 * v139;
          v40 = v37;
          v128 = v37;
          v41 = v37 * v139;
          v42 = v135;
          do
          {
            if (v40 != v27 + v36 - 1)
            {
              v43 = v132;
              if (!v132)
                goto LABEL_148;
              v44 = v132 + v41;
              v136 = v132 + v38;
              sub_1C00D9878(v132 + v41, v127, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
              if (v41 < v38 || v44 >= v43 + v39)
              {
                swift_arrayInitWithTakeFrontToBack();
                v35 = v139;
              }
              else
              {
                v35 = v139;
                if (v41 != v38)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_1C00D9878(v127, v136, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
              v42 = v135;
            }
            ++v40;
            --v36;
            v38 -= v35;
            v39 -= v35;
            v41 += v35;
          }
          while (v40 < v27 + v36);
          v2 = v125;
          v4 = v130;
          v19 = v131;
          v20 = v128;
          goto LABEL_31;
        }
      }
    }
    v42 = v135;
LABEL_31:
    if (v27 < v19)
    {
      if (__OFSUB__(v27, v20))
        goto LABEL_140;
      if (v27 - v20 < v122)
      {
        if (__OFADD__(v20, v122))
          goto LABEL_143;
        if (v20 + v122 >= v19)
          v46 = v19;
        else
          v46 = v20 + v122;
        if (v46 < v20)
          goto LABEL_144;
        if (v27 != v46)
        {
          v128 = v20;
          v121 = v18;
          v125 = v2;
          v126 = v46;
          v47 = *(_QWORD *)(v4 + 72);
          v48 = v47 * (v27 - 1);
          v131 = v47;
          v49 = v27 * v47;
          do
          {
            v50 = 0;
            v51 = v128;
            v136 = v27;
            v132 = v49;
            while (1)
            {
              v139 = v51;
              v52 = *v42;
              v53 = v49 + v50 + *v42;
              v54 = v133;
              sub_1C02C2518(v53, v133);
              v55 = v48;
              v56 = v48 + v50 + v52;
              v57 = v134;
              sub_1C02C2518(v56, v134);
              LOBYTE(v52) = sub_1C0301C78();
              sub_1C003DD84(v57, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
              sub_1C003DD84(v54, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
              if ((v52 & 1) == 0)
                break;
              v58 = *v42;
              if (!*v42)
                goto LABEL_146;
              v49 = v132;
              v48 = v55;
              v59 = v58 + v55 + v50;
              sub_1C00D9878(v58 + v132 + v50, v138, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
              swift_arrayInitWithTakeFrontToBack();
              sub_1C00D9878(v138, v59, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
              v50 -= v131;
              v51 = v139 + 1;
              v42 = v135;
              v60 = v136;
              if (v136 == v139 + 1)
                goto LABEL_47;
            }
            v60 = v136;
            v48 = v55;
            v49 = v132;
LABEL_47:
            v27 = v60 + 1;
            v48 += v131;
            v49 += v131;
          }
          while (v27 != v126);
          v27 = v126;
          v2 = v125;
          v18 = v121;
          v20 = v128;
        }
      }
    }
    if (v27 < v20)
      goto LABEL_139;
    v136 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v18 = sub_1C00500C8(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
    v62 = *((_QWORD *)v18 + 2);
    v61 = *((_QWORD *)v18 + 3);
    v63 = v62 + 1;
    v17 = v136;
    if (v62 >= v61 >> 1)
    {
      v113 = sub_1C00500C8((char *)(v61 > 1), v62 + 1, 1, v18);
      v17 = v136;
      v18 = v113;
    }
    v64 = v2;
    *((_QWORD *)v18 + 2) = v63;
    v65 = v18 + 32;
    v66 = &v18[16 * v62 + 32];
    *(_QWORD *)v66 = v20;
    *((_QWORD *)v66 + 1) = v17;
    if (v62)
      break;
    v63 = 1;
LABEL_97:
    v19 = v135[1];
    v2 = v64;
    v4 = v130;
    if (v17 >= v19)
      goto LABEL_106;
  }
  while (1)
  {
    v67 = v63 - 1;
    if (v63 >= 4)
    {
      v72 = &v65[16 * v63];
      v73 = *((_QWORD *)v72 - 8);
      v74 = *((_QWORD *)v72 - 7);
      v78 = __OFSUB__(v74, v73);
      v75 = v74 - v73;
      if (v78)
        goto LABEL_124;
      v77 = *((_QWORD *)v72 - 6);
      v76 = *((_QWORD *)v72 - 5);
      v78 = __OFSUB__(v76, v77);
      v70 = v76 - v77;
      v71 = v78;
      if (v78)
        goto LABEL_125;
      v79 = v63 - 2;
      v80 = &v65[16 * v63 - 32];
      v82 = *(_QWORD *)v80;
      v81 = *((_QWORD *)v80 + 1);
      v78 = __OFSUB__(v81, v82);
      v83 = v81 - v82;
      if (v78)
        goto LABEL_126;
      v78 = __OFADD__(v70, v83);
      v84 = v70 + v83;
      if (v78)
        goto LABEL_128;
      if (v84 >= v75)
      {
        v102 = &v65[16 * v67];
        v104 = *(_QWORD *)v102;
        v103 = *((_QWORD *)v102 + 1);
        v78 = __OFSUB__(v103, v104);
        v105 = v103 - v104;
        if (v78)
          goto LABEL_134;
        v95 = v70 < v105;
        goto LABEL_86;
      }
    }
    else
    {
      if (v63 != 3)
      {
        v96 = *((_QWORD *)v18 + 4);
        v97 = *((_QWORD *)v18 + 5);
        v78 = __OFSUB__(v97, v96);
        v89 = v97 - v96;
        v90 = v78;
        goto LABEL_80;
      }
      v69 = *((_QWORD *)v18 + 4);
      v68 = *((_QWORD *)v18 + 5);
      v78 = __OFSUB__(v68, v69);
      v70 = v68 - v69;
      v71 = v78;
    }
    if ((v71 & 1) != 0)
      goto LABEL_127;
    v79 = v63 - 2;
    v85 = &v65[16 * v63 - 32];
    v87 = *(_QWORD *)v85;
    v86 = *((_QWORD *)v85 + 1);
    v88 = __OFSUB__(v86, v87);
    v89 = v86 - v87;
    v90 = v88;
    if (v88)
      goto LABEL_129;
    v91 = &v65[16 * v67];
    v93 = *(_QWORD *)v91;
    v92 = *((_QWORD *)v91 + 1);
    v78 = __OFSUB__(v92, v93);
    v94 = v92 - v93;
    if (v78)
      goto LABEL_131;
    if (__OFADD__(v89, v94))
      goto LABEL_133;
    if (v89 + v94 >= v70)
    {
      v95 = v70 < v94;
LABEL_86:
      if (v95)
        v67 = v79;
      goto LABEL_88;
    }
LABEL_80:
    if ((v90 & 1) != 0)
      goto LABEL_130;
    v98 = &v65[16 * v67];
    v100 = *(_QWORD *)v98;
    v99 = *((_QWORD *)v98 + 1);
    v78 = __OFSUB__(v99, v100);
    v101 = v99 - v100;
    if (v78)
      goto LABEL_132;
    if (v101 < v89)
      goto LABEL_97;
LABEL_88:
    v106 = v18;
    v107 = v67 - 1;
    if (v67 - 1 >= v63)
    {
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
      goto LABEL_135;
    }
    if (!*v135)
      goto LABEL_147;
    v108 = &v65[16 * v107];
    v109 = *(_QWORD *)v108;
    v110 = &v65[16 * v67];
    v111 = *((_QWORD *)v110 + 1);
    sub_1C02C30C8(*v135 + *(_QWORD *)(v130 + 72) * *(_QWORD *)v108, *v135 + *(_QWORD *)(v130 + 72) * *(_QWORD *)v110, *v135 + *(_QWORD *)(v130 + 72) * v111, v129);
    if (v64)
      break;
    if (v111 < v109)
      goto LABEL_121;
    if (v67 > *((_QWORD *)v106 + 2))
      goto LABEL_122;
    *(_QWORD *)v108 = v109;
    *(_QWORD *)&v65[16 * v107 + 8] = v111;
    v112 = *((_QWORD *)v106 + 2);
    if (v67 >= v112)
      goto LABEL_123;
    v18 = v106;
    v63 = v112 - 1;
    memmove(&v65[16 * v67], v110 + 16, 16 * (v112 - 1 - v67));
    *((_QWORD *)v106 + 2) = v112 - 1;
    v17 = v136;
    if (v112 <= 2)
      goto LABEL_97;
  }
  v2 = v64;
LABEL_103:
  swift_bridgeObjectRelease();
  if (v124 < -1)
  {
    __break(1u);
    goto LABEL_105;
  }
LABEL_118:
  *(_QWORD *)(v123 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_1C02C2E9C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)();
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)();
  _QWORD *v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v27 = a1;
  v31 = type metadata accessor for UnstitchedTask();
  v7 = MEMORY[0x1E0C80A78](v31);
  v32 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v28 = (uint64_t)&v25 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v25 - v12;
  v30 = a3;
  v26 = a2;
  if (a3 != a2)
  {
    v14 = *(_QWORD *)(v11 + 72);
    v34 = v14 * (v30 - 1);
    v29 = v14;
    v33 = v14 * v30;
    v15 = type metadata accessor for UnstitchedTask;
    while (2)
    {
      v16 = 0;
      v17 = v27;
      do
      {
        v18 = *a4;
        sub_1C02C2518(v33 + v16 + *a4, (uint64_t)v13);
        v19 = v28;
        sub_1C02C2518(v34 + v16 + v18, v28);
        LOBYTE(v18) = sub_1C0301C78();
        sub_1C003DD84(v19, (uint64_t (*)(_QWORD))v15);
        sub_1C003DD84((uint64_t)v13, (uint64_t (*)(_QWORD))v15);
        if ((v18 & 1) == 0)
          break;
        v20 = *a4;
        if (!*a4)
        {
          __break(1u);
          return;
        }
        v21 = v15;
        v22 = a4;
        v23 = v20 + v34 + v16;
        v24 = v21;
        sub_1C00D9878(v20 + v33 + v16, v32, (uint64_t (*)(_QWORD))v21);
        swift_arrayInitWithTakeFrontToBack();
        sub_1C00D9878(v32, v23, (uint64_t (*)(_QWORD))v24);
        v16 -= v29;
        ++v17;
        a4 = v22;
        v15 = v24;
      }
      while (v30 != v17);
      v34 += v29;
      v33 += v29;
      if (++v30 != v26)
        continue;
      break;
    }
  }
}

void sub_1C02C30C8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v28;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  int64_t v42;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v51 = type metadata accessor for UnstitchedTask();
  v8 = MEMORY[0x1E0C80A78](v51);
  v50 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v49 = (uint64_t)&v44 - v10;
  v12 = *(_QWORD *)(v11 + 72);
  if (!v12)
  {
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  v13 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v12 == -1)
    goto LABEL_76;
  v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v12 == -1)
    goto LABEL_77;
  v17 = v13 / v12;
  v18 = v15 / v12;
  if (v13 / v12 >= v15 / v12)
  {
    sub_1C00AE514(a2, v15 / v12);
    v19 = a4 + v18 * v12;
    if (v18 * v12 < 1 || a1 >= a2)
      goto LABEL_70;
    v47 = a4;
    v48 = -v12;
    v45 = a1;
    v46 = v12;
    while (1)
    {
      v30 = v48;
      v31 = v49;
      v32 = a3 + v48;
      v33 = v19 + v48;
      v34 = v19;
      sub_1C02C2518(v19 + v48, v49);
      v35 = a2 + v30;
      v36 = a2 + v30;
      v37 = v50;
      sub_1C02C2518(v36, v50);
      v38 = sub_1C0301C78();
      sub_1C003DD84(v37, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
      sub_1C003DD84(v31, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
      if ((v38 & 1) != 0)
        break;
      if (a3 < v34 || v32 >= v34)
      {
        swift_arrayInitWithTakeFrontToBack();
        v19 = v33;
        a4 = v47;
LABEL_65:
        v12 = v46;
        a3 = v32;
        goto LABEL_66;
      }
      a4 = v47;
      if (a3 == v34)
      {
        v19 = v33;
        goto LABEL_65;
      }
      a3 = v32;
      swift_arrayInitWithTakeBackToFront();
      v19 = v33;
      v12 = v46;
LABEL_66:
      if (v19 <= a4 || a2 <= v45)
        goto LABEL_70;
    }
    if (a3 < a2 || v32 >= a2)
    {
      swift_arrayInitWithTakeFrontToBack();
      a2 = v35;
      a4 = v47;
    }
    else
    {
      a4 = v47;
      if (a3 != a2)
      {
        a3 = v32;
        swift_arrayInitWithTakeBackToFront();
        a2 = v35;
        v12 = v46;
LABEL_63:
        v19 = v34;
        goto LABEL_66;
      }
      a2 = v35;
    }
    v12 = v46;
    a3 = v32;
    goto LABEL_63;
  }
  sub_1C00AE514(a1, v13 / v12);
  v19 = a4 + v17 * v12;
  if (v17 * v12 >= 1 && a2 < a3)
  {
    do
    {
      v21 = v19;
      v22 = v49;
      sub_1C02C2518(a2, v49);
      v23 = v50;
      sub_1C02C2518(a4, v50);
      v24 = sub_1C0301C78();
      sub_1C003DD84(v23, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
      sub_1C003DD84(v22, (uint64_t (*)(_QWORD))type metadata accessor for UnstitchedTask);
      if ((v24 & 1) != 0)
      {
        v25 = a2 + v12;
        if (a1 < a2 || a1 >= v25)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        if (a1 < a4 || a1 >= a4 + v12)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v25 = a2;
        a4 += v12;
      }
      v19 = v21;
      a1 += v12;
      v28 = a4 >= v21 || v25 >= a3;
      a2 = v25;
    }
    while (!v28);
  }
LABEL_70:
  v42 = v19 - a4;
  if (v12 != -1 || v42 != 0x8000000000000000)
  {
    sub_1C00AE514(a4, v42 / v12);
    return;
  }
LABEL_78:
  __break(1u);
}

uint64_t OUTLINED_FUNCTION_2_132()
{
  return sub_1C0303B80();
}

uint64_t OUTLINED_FUNCTION_8_78()
{
  return sub_1C0303B5C();
}

uint64_t OUTLINED_FUNCTION_10_79(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = a1;
  return v1 - 168;
}

uint64_t OUTLINED_FUNCTION_11_82()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 72));
}

uint64_t OUTLINED_FUNCTION_21_50()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 288);
}

uint64_t OUTLINED_FUNCTION_25_35()
{
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1C02C3510(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  void *v75;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C030367C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain();
    swift_retain();
    v12(v9, v10, v11);
    v13 = a3[7];
    v14 = a3[8];
    v15 = (char *)v7 + v13;
    v16 = (char *)a2 + v13;
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
    v17 = *(_OWORD *)((char *)a2 + v14 + 24);
    *(_OWORD *)((char *)v7 + v14 + 24) = v17;
    (**(void (***)(void))(v17 - 8))();
    v18 = a3[9];
    v19 = *(_OWORD *)((char *)a2 + v18 + 24);
    *(_OWORD *)((char *)v7 + v18 + 24) = v19;
    (**(void (***)(void))(v19 - 8))();
    v20 = a3[10];
    v21 = *(_OWORD *)((char *)a2 + v20 + 24);
    *(_OWORD *)((char *)v7 + v20 + 24) = v21;
    (**(void (***)(void))(v21 - 8))();
    v22 = a3[11];
    v23 = a3[12];
    v24 = *(void **)((char *)a2 + v22);
    *(_QWORD *)((char *)v7 + v22) = v24;
    v25 = *(void **)((char *)a2 + v23);
    *(_QWORD *)((char *)v7 + v23) = v25;
    v26 = a3[14];
    *(_QWORD *)((char *)v7 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
    v27 = (_QWORD *)((char *)v7 + v26);
    v28 = (_QWORD *)((char *)a2 + v26);
    v29 = type metadata accessor for MLContactRecommender();
    v30 = v24;
    v31 = v25;
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3050);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      *(_BYTE *)v27 = *(_BYTE *)v28;
      v27[1] = v28[1];
      v33 = *(int *)(v29 + 24);
      v34 = (char *)v27 + v33;
      v35 = (char *)v28 + v33;
      v36 = sub_1C0301DB0();
      v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
      swift_retain();
      v37(v34, v35, v36);
      __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
    }
    v38 = a3[15];
    v39 = (char *)v7 + v38;
    v40 = (char *)a2 + v38;
    *(_QWORD *)((char *)v7 + v38) = *(_QWORD *)((char *)a2 + v38);
    v41 = *(int *)(type metadata accessor for StringTokenizer() + 20);
    v42 = &v39[v41];
    v43 = &v40[v41];
    v44 = sub_1C0301DB0();
    v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
    swift_retain();
    v45(v42, v43, v44);
    v46 = a3[16];
    v47 = (_QWORD *)((char *)v7 + v46);
    v48 = (_QWORD *)((char *)a2 + v46);
    if (*v48)
    {
      v49 = v48[1];
      *v47 = *v48;
      v47[1] = v49;
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)v47 = *(_OWORD *)v48;
    }
    v50 = a3[18];
    *(_QWORD *)((char *)v7 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
    v51 = (char *)v7 + v50;
    v52 = (char *)a2 + v50;
    swift_retain();
    v45(v51, v52, v44);
    v53 = a3[20];
    *(_QWORD *)((char *)v7 + a3[19]) = *(_QWORD *)((char *)a2 + a3[19]);
    *(_QWORD *)((char *)v7 + v53) = *(_QWORD *)((char *)a2 + v53);
    v54 = a3[22];
    *(_QWORD *)((char *)v7 + a3[21]) = *(_QWORD *)((char *)a2 + a3[21]);
    *(_QWORD *)((char *)v7 + v54) = *(_QWORD *)((char *)a2 + v54);
    v55 = a3[24];
    *(_QWORD *)((char *)v7 + a3[23]) = *(_QWORD *)((char *)a2 + a3[23]);
    v75 = *(void **)((char *)a2 + v55);
    *(_QWORD *)((char *)v7 + v55) = v75;
    v56 = a3[25];
    v57 = (char *)v7 + v56;
    v58 = (char *)a2 + v56;
    v59 = *(_QWORD *)((char *)a2 + v56 + 24);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v60 = v75;
    if (v59)
    {
      v61 = *((_QWORD *)v58 + 4);
      *((_QWORD *)v57 + 3) = v59;
      *((_QWORD *)v57 + 4) = v61;
      (**(void (***)(char *, char *, uint64_t))(v59 - 8))(v57, v58, v59);
    }
    else
    {
      v62 = *((_OWORD *)v58 + 1);
      *(_OWORD *)v57 = *(_OWORD *)v58;
      *((_OWORD *)v57 + 1) = v62;
      *((_QWORD *)v57 + 4) = *((_QWORD *)v58 + 4);
    }
    v63 = a3[27];
    *((_BYTE *)v7 + a3[26]) = *((_BYTE *)a2 + a3[26]);
    v64 = (char *)v7 + v63;
    v65 = (char *)a2 + v63;
    *v64 = *v65;
    v66 = *((_QWORD *)v65 + 2);
    *((_QWORD *)v64 + 1) = *((_QWORD *)v65 + 1);
    *((_QWORD *)v64 + 2) = v66;
    *(_OWORD *)(v64 + 24) = *(_OWORD *)(v65 + 24);
    *(_OWORD *)(v64 + 40) = *(_OWORD *)(v65 + 40);
    v64[56] = v65[56];
    v67 = a3[29];
    *(_OWORD *)((char *)v7 + a3[28]) = *(_OWORD *)((char *)a2 + a3[28]);
    *(_WORD *)((char *)v7 + v67) = *(_WORD *)((char *)a2 + v67);
    v68 = a3[30];
    v69 = (char *)v7 + v68;
    v70 = (char *)a2 + v68;
    v71 = *((_QWORD *)v70 + 3);
    swift_bridgeObjectRetain();
    if (v71)
    {
      v72 = *((_QWORD *)v70 + 4);
      *((_QWORD *)v69 + 3) = v71;
      *((_QWORD *)v69 + 4) = v72;
      (**(void (***)(char *, char *, uint64_t))(v71 - 8))(v69, v70, v71);
    }
    else
    {
      v73 = *((_OWORD *)v70 + 1);
      *(_OWORD *)v69 = *(_OWORD *)v70;
      *((_OWORD *)v69 + 1) = v73;
      *((_QWORD *)v69 + 4) = *((_QWORD *)v70 + 4);
    }
  }
  return v7;
}

char *sub_1C02C3934(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  int EnumTagSinglePayload;
  int v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_retain();
  swift_release();
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C030367C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = &a1[v10];
  v12 = &a2[v10];
  *v11 = *v12;
  v11[1] = v12[1];
  v11[2] = v12[2];
  v11[3] = v12[3];
  v11[4] = v12[4];
  v11[5] = v12[5];
  v11[6] = v12[6];
  v11[7] = v12[7];
  v11[8] = v12[8];
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&a1[a3[8]], (uint64_t *)&a2[a3[8]]);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&a1[a3[9]], (uint64_t *)&a2[a3[9]]);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&a1[a3[10]], (uint64_t *)&a2[a3[10]]);
  v13 = a3[11];
  v14 = *(void **)&a1[v13];
  v15 = *(void **)&a2[v13];
  *(_QWORD *)&a1[v13] = v15;
  v16 = v15;

  v17 = a3[12];
  v18 = *(void **)&a2[v17];
  v19 = *(void **)&a1[v17];
  *(_QWORD *)&a1[v17] = v18;
  v20 = v18;

  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[14];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for MLContactRecommender();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v24);
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24);
  if (EnumTagSinglePayload)
  {
    if (!v26)
    {
      *v22 = *v23;
      *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
      v27 = *(int *)(v24 + 24);
      v28 = &v22[v27];
      v29 = &v23[v27];
      v30 = sub_1C0301DB0();
      v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
      swift_retain();
      v31(v28, v29, v30);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v26)
  {
    sub_1C003DD84((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for MLContactRecommender);
LABEL_6:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3050);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_7;
  }
  *v22 = *v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_retain();
  swift_release();
  v71 = *(int *)(v24 + 24);
  v72 = &v22[v71];
  v73 = &v23[v71];
  v74 = sub_1C0301DB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 24))(v72, v73, v74);
LABEL_7:
  v33 = a3[15];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_QWORD *)&a1[v33] = *(_QWORD *)&a2[v33];
  swift_retain();
  swift_release();
  v36 = *(int *)(type metadata accessor for StringTokenizer() + 20);
  v37 = &v34[v36];
  v38 = &v35[v36];
  v39 = sub_1C0301DB0();
  v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 24);
  v40(v37, v38, v39);
  v41 = a3[16];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v44 = *(_QWORD *)&a2[v41];
  if (*(_QWORD *)&a1[v41])
  {
    if (v44)
    {
      *(_QWORD *)v42 = v44;
      swift_retain();
      swift_release();
      *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
      swift_retain();
      swift_release();
      goto LABEL_14;
    }
    sub_1C02A8CB8((uint64_t)&a1[v41]);
  }
  else if (v44)
  {
    *(_QWORD *)v42 = v44;
    *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
    swift_retain();
    swift_retain();
    goto LABEL_14;
  }
  *(_OWORD *)v42 = *(_OWORD *)v43;
LABEL_14:
  *(_QWORD *)&a1[a3[17]] = *(_QWORD *)&a2[a3[17]];
  swift_retain();
  swift_release();
  v40(&a1[a3[18]], &a2[a3[18]], v39);
  *(_QWORD *)&a1[a3[19]] = *(_QWORD *)&a2[a3[19]];
  swift_retain();
  swift_release();
  *(_QWORD *)&a1[a3[20]] = *(_QWORD *)&a2[a3[20]];
  swift_retain();
  swift_release();
  *(_QWORD *)&a1[a3[21]] = *(_QWORD *)&a2[a3[21]];
  swift_retain();
  swift_release();
  *(_QWORD *)&a1[a3[22]] = *(_QWORD *)&a2[a3[22]];
  swift_retain();
  swift_release();
  *(_QWORD *)&a1[a3[23]] = *(_QWORD *)&a2[a3[23]];
  swift_retain();
  swift_release();
  v45 = a3[24];
  v46 = *(void **)&a1[v45];
  v47 = *(void **)&a2[v45];
  *(_QWORD *)&a1[v45] = v47;
  v48 = v47;

  v49 = a3[25];
  v50 = (uint64_t)&a1[v49];
  v51 = (uint64_t *)&a2[v49];
  v52 = *(_QWORD *)&a2[v49 + 24];
  if (*(_QWORD *)&a1[v49 + 24])
  {
    if (v52)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v50, v51);
      goto LABEL_21;
    }
    __swift_destroy_boxed_opaque_existential_0Tm(v50);
  }
  else if (v52)
  {
    *(_QWORD *)(v50 + 24) = v52;
    *(_QWORD *)(v50 + 32) = v51[4];
    (**(void (***)(uint64_t, char *))(v52 - 8))(v50, (char *)v51);
    goto LABEL_21;
  }
  v53 = *(_OWORD *)v51;
  v54 = *((_OWORD *)v51 + 1);
  *(_QWORD *)(v50 + 32) = v51[4];
  *(_OWORD *)v50 = v53;
  *(_OWORD *)(v50 + 16) = v54;
LABEL_21:
  a1[a3[26]] = a2[a3[26]];
  v55 = a3[27];
  v56 = &a1[v55];
  v57 = &a2[v55];
  *v56 = a2[v55];
  *((_QWORD *)v56 + 1) = *(_QWORD *)&a2[v55 + 8];
  *((_QWORD *)v56 + 2) = *(_QWORD *)&a2[v55 + 16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v56 + 3) = *((_QWORD *)v57 + 3);
  *((_QWORD *)v56 + 4) = *((_QWORD *)v57 + 4);
  *((_QWORD *)v56 + 5) = *((_QWORD *)v57 + 5);
  *((_QWORD *)v56 + 6) = *((_QWORD *)v57 + 6);
  v56[56] = v57[56];
  v58 = a3[28];
  v59 = &a1[v58];
  v60 = &a2[v58];
  *v59 = *v60;
  v59[1] = v60[1];
  v59[2] = v60[2];
  *((_QWORD *)v59 + 1) = *((_QWORD *)v60 + 1);
  v61 = a3[29];
  v62 = &a1[v61];
  v63 = &a2[v61];
  *v62 = *v63;
  v62[1] = v63[1];
  v64 = a3[30];
  v65 = (uint64_t)&a1[v64];
  v66 = &a2[v64];
  v67 = *((_QWORD *)v66 + 3);
  if (!*(_QWORD *)&a1[v64 + 24])
  {
    if (v67)
    {
      *(_QWORD *)(v65 + 24) = v67;
      *(_QWORD *)(v65 + 32) = *((_QWORD *)v66 + 4);
      (**(void (***)(uint64_t, char *))(v67 - 8))(v65, v66);
      return a1;
    }
LABEL_27:
    v68 = *(_OWORD *)v66;
    v69 = *((_OWORD *)v66 + 1);
    *(_QWORD *)(v65 + 32) = *((_QWORD *)v66 + 4);
    *(_OWORD *)v65 = v68;
    *(_OWORD *)(v65 + 16) = v69;
    return a1;
  }
  if (!v67)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v65);
    goto LABEL_27;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v65, (uint64_t *)v66);
  return a1;
}

char *sub_1C02C3F00(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  char *v59;
  char *v60;
  __int128 v61;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C030367C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  v11 = a3[8];
  v12 = &a1[v10];
  v13 = &a2[v10];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = &a1[v11];
  v15 = &a2[v11];
  v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
  v17 = a3[9];
  v18 = a3[10];
  v19 = &a1[v17];
  v20 = &a2[v17];
  v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
  v22 = &a1[v18];
  v23 = &a2[v18];
  *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
  v24 = *((_OWORD *)v23 + 1);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v24;
  v25 = a3[12];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  *(_QWORD *)&a1[v25] = *(_QWORD *)&a2[v25];
  v26 = a3[14];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = type metadata accessor for MLContactRecommender();
  if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3050);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    *v27 = *v28;
    *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
    v31 = *(int *)(v29 + 24);
    v32 = &v27[v31];
    v33 = &v28[v31];
    v34 = sub_1C0301DB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
    __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
  }
  v35 = a3[15];
  v36 = &a1[v35];
  v37 = &a2[v35];
  *(_QWORD *)&a1[v35] = *(_QWORD *)&a2[v35];
  v38 = *(int *)(type metadata accessor for StringTokenizer() + 20);
  v39 = &v36[v38];
  v40 = &v37[v38];
  v41 = sub_1C0301DB0();
  v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32);
  v42(v39, v40, v41);
  v43 = a3[17];
  *(_OWORD *)&a1[a3[16]] = *(_OWORD *)&a2[a3[16]];
  *(_QWORD *)&a1[v43] = *(_QWORD *)&a2[v43];
  v42(&a1[a3[18]], &a2[a3[18]], v41);
  v44 = a3[20];
  *(_QWORD *)&a1[a3[19]] = *(_QWORD *)&a2[a3[19]];
  *(_QWORD *)&a1[v44] = *(_QWORD *)&a2[v44];
  v45 = a3[22];
  *(_QWORD *)&a1[a3[21]] = *(_QWORD *)&a2[a3[21]];
  *(_QWORD *)&a1[v45] = *(_QWORD *)&a2[v45];
  v46 = a3[24];
  *(_QWORD *)&a1[a3[23]] = *(_QWORD *)&a2[a3[23]];
  *(_QWORD *)&a1[v46] = *(_QWORD *)&a2[v46];
  v47 = a3[25];
  v48 = a3[26];
  v49 = &a1[v47];
  v50 = &a2[v47];
  v51 = *((_OWORD *)v50 + 1);
  *(_OWORD *)v49 = *(_OWORD *)v50;
  *((_OWORD *)v49 + 1) = v51;
  *((_QWORD *)v49 + 4) = *((_QWORD *)v50 + 4);
  a1[v48] = a2[v48];
  v52 = a3[27];
  v53 = a3[28];
  v54 = &a1[v52];
  v55 = &a2[v52];
  v56 = *((_OWORD *)v55 + 1);
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *((_OWORD *)v54 + 1) = v56;
  v57 = *(_OWORD *)(v55 + 41);
  *((_OWORD *)v54 + 2) = *((_OWORD *)v55 + 2);
  *(_OWORD *)(v54 + 41) = v57;
  *(_OWORD *)&a1[v53] = *(_OWORD *)&a2[v53];
  v58 = a3[30];
  *(_WORD *)&a1[a3[29]] = *(_WORD *)&a2[a3[29]];
  v59 = &a1[v58];
  v60 = &a2[v58];
  v61 = *((_OWORD *)v60 + 1);
  *(_OWORD *)v59 = *(_OWORD *)v60;
  *((_OWORD *)v59 + 1) = v61;
  *((_QWORD *)v59 + 4) = *((_QWORD *)v60 + 4);
  return a1;
}

char *sub_1C02C41BC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  int EnumTagSinglePayload;
  int v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  __int128 v71;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_release();
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C030367C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  v11 = a3[8];
  v12 = &a1[v10];
  v13 = &a2[v10];
  *v12 = *v13;
  v12[1] = v13[1];
  v12[2] = v13[2];
  v12[3] = v13[3];
  v12[4] = v13[4];
  v12[5] = v13[5];
  v12[6] = v13[6];
  v12[7] = v13[7];
  v12[8] = v13[8];
  v14 = &a1[v11];
  v15 = &a2[v11];
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&a1[v11]);
  v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
  v17 = a3[9];
  v18 = &a1[v17];
  v19 = &a2[v17];
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&a1[v17]);
  v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
  v21 = a3[10];
  v22 = &a1[v21];
  v23 = &a2[v21];
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&a1[v21]);
  v24 = *((_OWORD *)v23 + 1);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v24;
  *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
  v25 = a3[11];
  v26 = *(void **)&a1[v25];
  *(_QWORD *)&a1[v25] = *(_QWORD *)&a2[v25];

  v27 = a3[12];
  v28 = *(void **)&a1[v27];
  *(_QWORD *)&a1[v27] = *(_QWORD *)&a2[v27];

  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  swift_bridgeObjectRelease();
  v29 = a3[14];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = type metadata accessor for MLContactRecommender();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v32);
  v34 = __swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32);
  if (EnumTagSinglePayload)
  {
    if (!v34)
    {
      *v30 = *v31;
      *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
      v35 = *(int *)(v32 + 24);
      v36 = &v30[v35];
      v37 = &v31[v35];
      v38 = sub_1C0301DB0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
      __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v34)
  {
    sub_1C003DD84((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for MLContactRecommender);
LABEL_6:
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3050);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_7;
  }
  *v30 = *v31;
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  swift_release();
  v73 = *(int *)(v32 + 24);
  v74 = &v30[v73];
  v75 = &v31[v73];
  v76 = sub_1C0301DB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 40))(v74, v75, v76);
LABEL_7:
  v40 = a3[15];
  v41 = &a1[v40];
  v42 = &a2[v40];
  *(_QWORD *)&a1[v40] = *(_QWORD *)&a2[v40];
  swift_release();
  v43 = *(int *)(type metadata accessor for StringTokenizer() + 20);
  v44 = &v41[v43];
  v45 = &v42[v43];
  v46 = sub_1C0301DB0();
  v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 40);
  v47(v44, v45, v46);
  v48 = a3[16];
  v49 = &a1[v48];
  v50 = &a2[v48];
  if (*(_QWORD *)&a1[v48])
  {
    if (*(_QWORD *)v50)
    {
      *(_QWORD *)v49 = *(_QWORD *)v50;
      swift_release();
      *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
      swift_release();
      goto LABEL_12;
    }
    sub_1C02A8CB8((uint64_t)v49);
  }
  *(_OWORD *)v49 = *(_OWORD *)v50;
LABEL_12:
  *(_QWORD *)&a1[a3[17]] = *(_QWORD *)&a2[a3[17]];
  swift_release();
  v47(&a1[a3[18]], &a2[a3[18]], v46);
  *(_QWORD *)&a1[a3[19]] = *(_QWORD *)&a2[a3[19]];
  swift_release();
  *(_QWORD *)&a1[a3[20]] = *(_QWORD *)&a2[a3[20]];
  swift_release();
  *(_QWORD *)&a1[a3[21]] = *(_QWORD *)&a2[a3[21]];
  swift_release();
  *(_QWORD *)&a1[a3[22]] = *(_QWORD *)&a2[a3[22]];
  swift_release();
  *(_QWORD *)&a1[a3[23]] = *(_QWORD *)&a2[a3[23]];
  swift_release();
  v51 = a3[24];
  v52 = *(void **)&a1[v51];
  *(_QWORD *)&a1[v51] = *(_QWORD *)&a2[v51];

  v53 = a3[25];
  v54 = (uint64_t)&a1[v53];
  v55 = &a2[v53];
  if (*(_QWORD *)&a1[v53 + 24])
    __swift_destroy_boxed_opaque_existential_0Tm(v54);
  v56 = *((_OWORD *)v55 + 1);
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *(_OWORD *)(v54 + 16) = v56;
  v57 = a3[26];
  v58 = a3[27];
  v59 = a2[v57];
  *(_QWORD *)(v54 + 32) = *((_QWORD *)v55 + 4);
  a1[v57] = v59;
  v60 = &a1[v58];
  v61 = &a2[v58];
  *v60 = a2[v58];
  v62 = *(_QWORD *)&a2[v58 + 16];
  *((_QWORD *)v60 + 1) = *(_QWORD *)&a2[v58 + 8];
  *((_QWORD *)v60 + 2) = v62;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v60 + 24) = *(_OWORD *)(v61 + 24);
  *(_OWORD *)(v60 + 40) = *(_OWORD *)(v61 + 40);
  v60[56] = v61[56];
  v63 = a3[28];
  v64 = a3[29];
  v65 = &a1[v63];
  v66 = &a2[v63];
  *v65 = *v66;
  v65[1] = v66[1];
  v65[2] = v66[2];
  *((_QWORD *)v65 + 1) = *((_QWORD *)v66 + 1);
  v67 = &a1[v64];
  v68 = &a2[v64];
  *v67 = *v68;
  v67[1] = v68[1];
  v69 = a3[30];
  v70 = &a1[v69];
  if (*(_QWORD *)&a1[v69 + 24])
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&a1[v69]);
  v71 = *(_OWORD *)&a2[v69 + 16];
  *(_OWORD *)v70 = *(_OWORD *)&a2[v69];
  *((_OWORD *)v70 + 1) = v71;
  *((_QWORD *)v70 + 4) = *(_QWORD *)&a2[v69 + 32];
  return a1;
}

uint64_t sub_1C02C4670(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;

  OUTLINED_FUNCTION_38_16();
  OUTLINED_FUNCTION_1_7();
  if (v12)
  {
    v7 = v6;
    v8 = a3[6];
    return __swift_getEnumTagSinglePayload(a1 + v8, a2, v7);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3050);
    OUTLINED_FUNCTION_1_7();
    if (v12)
    {
      v7 = v11;
      v8 = a3[14];
    }
    else
    {
      OUTLINED_FUNCTION_38_9();
      OUTLINED_FUNCTION_1_7();
      if (v12)
      {
        v7 = v13;
        v8 = a3[15];
      }
      else
      {
        v7 = OUTLINED_FUNCTION_14_4();
        v8 = a3[18];
      }
    }
    return __swift_getEnumTagSinglePayload(a1 + v8, a2, v7);
  }
  v9 = *(_QWORD *)(a1 + a3[8] + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

void sub_1C02C4738(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  OUTLINED_FUNCTION_38_16();
  OUTLINED_FUNCTION_0_6();
  if (v12)
  {
    v9 = v8;
    v10 = a4[6];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[8] + 24) = (a2 - 1);
      return;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3050);
    OUTLINED_FUNCTION_0_6();
    if (v12)
    {
      v9 = v11;
      v10 = a4[14];
    }
    else
    {
      OUTLINED_FUNCTION_38_9();
      OUTLINED_FUNCTION_0_6();
      if (v12)
      {
        v9 = v13;
        v10 = a4[15];
      }
      else
      {
        v9 = OUTLINED_FUNCTION_14_4();
        v10 = a4[18];
      }
    }
  }
  __swift_storeEnumTagSinglePayload(a1 + v10, a2, a2, v9);
}

void sub_1C02C47FC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1C030367C();
  if (v0 <= 0x3F)
  {
    sub_1C02C494C();
    if (v1 <= 0x3F)
    {
      type metadata accessor for StringTokenizer();
      if (v2 <= 0x3F)
      {
        sub_1C0301DB0();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void sub_1C02C494C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF5C37E0)
  {
    type metadata accessor for MLContactRecommender();
    v0 = sub_1C030448C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF5C37E0);
  }
}

void sub_1C02C49A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  __int128 v67;
  _QWORD v68[5];
  _BYTE v69[32];
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  _UNKNOWN **v73;
  __int128 v74;
  _QWORD v75[2];
  _BYTE v76[80];

  OUTLINED_FUNCTION_18_0();
  v66 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F70);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_53();
  v65 = v2;
  v3 = OUTLINED_FUNCTION_38_16();
  OUTLINED_FUNCTION_30_21(v3, (uint64_t)&v76[40]);
  v63 = v4;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_19_2();
  v62 = v6 - v7;
  MEMORY[0x1E0C80A78](v8);
  v61 = (char *)&v53 - v9;
  v10 = sub_1C03033E8();
  OUTLINED_FUNCTION_30_21(v10, (uint64_t)&v76[8]);
  v59 = v11;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_53();
  v58 = v13;
  v14 = sub_1C0303B74();
  OUTLINED_FUNCTION_30_21(v14, (uint64_t)v75);
  v54 = v15;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_6_0();
  v19 = v18 - v17;
  if (qword_1ED728440 != -1)
    swift_once();
  v20 = (id)qword_1ED729668;
  OUTLINED_FUNCTION_131_2();
  sub_1C03043E4();
  v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v21 = OUTLINED_FUNCTION_16_0();
  v67 = xmmword_1C0305B60;
  *(_OWORD *)(v21 + 16) = xmmword_1C0305B60;
  v22 = OUTLINED_FUNCTION_23_0();
  v24 = v23;
  *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
  v25 = sub_1C00A6A70();
  *(_QWORD *)(v21 + 64) = v25;
  *(_QWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v21 + 40) = v24;
  OUTLINED_FUNCTION_35_18();
  sub_1C0303B50();
  OUTLINED_FUNCTION_14();
  v55 = sub_1C00447B0(0, &qword_1ED726F38);
  sub_1C00A3A74();
  v56 = v26;
  sub_1C03043D8();
  OUTLINED_FUNCTION_29_37();
  v54 = *(_QWORD *)(v54 + 8);
  v27 = v57;
  ((void (*)(uint64_t, uint64_t))v54)(v19, v57);

  v28 = (id)qword_1ED729668;
  OUTLINED_FUNCTION_131_2();
  sub_1C03043E4();
  v29 = OUTLINED_FUNCTION_16_0();
  *(_OWORD *)(v29 + 16) = v67;
  v30 = OUTLINED_FUNCTION_23_0();
  *(_QWORD *)(v29 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v29 + 64) = v25;
  *(_QWORD *)(v29 + 32) = v30;
  *(_QWORD *)(v29 + 40) = v31;
  OUTLINED_FUNCTION_35_18();
  sub_1C0303B50();
  swift_bridgeObjectRelease();
  sub_1C00A3AD4();
  v33 = v32;
  sub_1C03043D8();
  OUTLINED_FUNCTION_29_37();
  v34 = (void (*)(uint64_t, uint64_t))v54;
  ((void (*)(uint64_t, uint64_t))v54)(v19, v27);

  v35 = (id)qword_1ED729668;
  OUTLINED_FUNCTION_131_2();
  sub_1C03043E4();
  v36 = OUTLINED_FUNCTION_16_0();
  *(_OWORD *)(v36 + 16) = v67;
  v37 = OUTLINED_FUNCTION_23_0();
  *(_QWORD *)(v36 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v36 + 64) = v25;
  *(_QWORD *)(v36 + 32) = v37;
  *(_QWORD *)(v36 + 40) = v38;
  OUTLINED_FUNCTION_35_18();
  sub_1C0303B50();
  OUTLINED_FUNCTION_29();
  v39 = objc_msgSend((id)objc_opt_self(), sel_makeSearcher);
  sub_1C03043D8();
  OUTLINED_FUNCTION_29_37();
  v34(v19, v27);

  v40 = v58;
  sub_1C02C54C0();
  v41 = v61;
  sub_1C0303658();
  v42 = type metadata accessor for ExperimentationTriggerLogger();
  v43 = OUTLINED_FUNCTION_16_0();
  v44 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v45 = sub_1C013E12C(0xD000000000000018, 0x80000001C032D9E0);
  v75[0] = v55;
  v75[1] = &off_1E798FBE0;
  v73 = &off_1E798FBE0;
  *(_QWORD *)&v74 = v56;
  v72 = v55;
  *(_QWORD *)&v71 = v33;
  v70 = 0;
  memset(v69, 0, sizeof(v69));
  v46 = v63;
  v47 = v62;
  v48 = v64;
  (*(void (**)(uint64_t, char *, uint64_t))(v63 + 16))(v62, v41, v64);
  v49 = OUTLINED_FUNCTION_14_4();
  v50 = v65;
  OUTLINED_FUNCTION_33_38(v49, v51, v52, v49);
  memset(v76, 0, 57);
  v68[4] = &off_1E799C640;
  v68[3] = v42;
  v68[0] = v43;
  sub_1C02C5804(&v74, &v71, (uint64_t)v39, (uint64_t)v69, v47, v50, v45, 2, v66, (uint64_t)v76, 2uLL, 0, 2uLL, 0, 2u, (uint64_t)v68, 1u);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v41, v48);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v40, v60);
  OUTLINED_FUNCTION_1();
}

void sub_1C02C4FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727A20);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_17_22();
  v1 = type metadata accessor for ContactResolverCache();
  OUTLINED_FUNCTION_33_38(v1, v2, v3, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DC0);
  swift_allocObject();
  sub_1C01A2B30();
  qword_1ED729538 = v4;
}

uint64_t sub_1C02C5038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v1 = sub_1C030439C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_17_22();
  sub_1C030436C();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_6_0();
  sub_1C0303D00();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_6_0();
  sub_1C00447B0(0, (unint64_t *)&qword_1ED7283E0);
  sub_1C0303CF4();
  sub_1C0304360();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v0, *MEMORY[0x1E0DEF8D0], v1);
  result = sub_1C03043C0();
  qword_1ED729530 = result;
  return result;
}

id sub_1C02C5150()
{
  id result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = sub_1C02C5174();
  qword_1ED729510 = (uint64_t)result;
  *(_QWORD *)algn_1ED729518 = v1;
  qword_1ED729520 = v2;
  unk_1ED729528 = v3;
  return result;
}

id sub_1C02C5174()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;

  v2 = type metadata accessor for Signpost();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_160();
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_init);
  v5 = qword_1ED728440;
  v6 = v4;
  if (v5 != -1)
    swift_once();
  v7 = (void *)qword_1ED729668;
  v8 = v0 + *(int *)(v2 + 20);
  *(_QWORD *)v8 = "CRR.initContactStoreObserver";
  *(_QWORD *)(v8 + 8) = 28;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = v7;
  OUTLINED_FUNCTION_60_11();
  *(_QWORD *)(v0 + *(int *)(v2 + 24)) = v1;
  v10 = v1;
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v11 = OUTLINED_FUNCTION_16_0();
  *(_OWORD *)(v11 + 16) = xmmword_1C0305B60;
  v12 = OUTLINED_FUNCTION_23_0();
  v14 = v13;
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 40) = v14;
  OUTLINED_FUNCTION_35_18();
  OUTLINED_FUNCTION_74();
  swift_bridgeObjectRelease();

  v15 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v16 = *MEMORY[0x1E0C96878];
  v17 = OUTLINED_FUNCTION_78_14((uint64_t)&block_descriptor_79);
  v18 = objc_msgSend(v15, sel_addObserverForName_object_queue_usingBlock_, v16, 0, 0, v17);
  _Block_release(v17);
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C972F8]), sel_initWithContactStore_, v6);

  v20 = v19;
  v21 = *MEMORY[0x1E0C968E0];
  *(_QWORD *)(OUTLINED_FUNCTION_16_0() + 16) = v20;
  v22 = OUTLINED_FUNCTION_78_14((uint64_t)&block_descriptor_85);
  v23 = v20;
  swift_release();
  v24 = objc_msgSend(v15, sel_addObserverForName_object_queue_usingBlock_, v21, 0, 0, v22);

  _Block_release(v22);
  sub_1C03043D8();
  sub_1C0303B5C();
  sub_1C003DD84(v0, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  return v6;
}

void sub_1C02C54C0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  NSObject *v25;
  uint64_t v26;
  os_log_type_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_18_0();
  v2 = type metadata accessor for Signpost();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_160();
  if (qword_1ED728440 != -1)
    swift_once();
  v4 = (void *)qword_1ED729668;
  v5 = v0 + *(int *)(v2 + 20);
  *(_QWORD *)v5 = "ContactResolver.SiriRemembersFeatureSet.derive";
  *(_QWORD *)(v5 + 8) = 46;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = v4;
  OUTLINED_FUNCTION_60_11();
  *(_QWORD *)(v0 + *(int *)(v2 + 24)) = v1;
  v7 = v1;
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v8 = OUTLINED_FUNCTION_16_0();
  *(_OWORD *)(v8 + 16) = xmmword_1C0305B60;
  v9 = OUTLINED_FUNCTION_23_0();
  v11 = v10;
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v11;
  OUTLINED_FUNCTION_35_18();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_55_0();

  v12 = sub_1C03033F4();
  v14 = v13;
  v15 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 112);
  type metadata accessor for TrialManager();
  v16 = (_QWORD *)OUTLINED_FUNCTION_16_0();
  sub_1C008CF1C((uint64_t)v15, v12, v14, v16);
  v17 = sub_1C0150F18();
  v18 = sub_1C0303400();
  sub_1C00A9B48(v18, v19, v17);
  v21 = v20;
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_17_0();
  if (v21)
  {
    OUTLINED_FUNCTION_70_12();

  }
  OUTLINED_FUNCTION_64_13();
  v22 = sub_1C030340C();
  OUTLINED_FUNCTION_65_13(v22, v23);
  v25 = v24;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_55_0();
  if (v25)
  {
    OUTLINED_FUNCTION_70_12();

  }
  if (qword_1ED727970 != -1)
    swift_once();
  v26 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_7(v26, (uint64_t)&unk_1ED7295C8);
  v27 = OUTLINED_FUNCTION_9_1();
  if (os_log_type_enabled(v25, v27))
  {
    v28 = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v28 = 67109376;
    sub_1C03044B0();
    *(_WORD *)(v28 + 8) = 1024;
    sub_1C03044B0();
    _os_log_impl(&dword_1C0039000, v25, v27, "The siriRemembersFeatureSet with useIntelligencePlatform: %{BOOL}d,\nuseLegacyDbWithExtendedTTL: %{BOOL}d", (uint8_t *)v28, 0xEu);
    OUTLINED_FUNCTION_5();
  }

  sub_1C03033DC();
  OUTLINED_FUNCTION_1_0();
  sub_1C03043D8();
  sub_1C0303B5C();
  sub_1C003DD84(v0, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C02C5804@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, int a8@<W7>, _QWORD *a9@<X8>, uint64_t a10, unint64_t a11, char a12, unint64_t a13, unint64_t a14, unsigned __int16 a15, uint64_t a16, unsigned __int8 a17)
{
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  void (*v48)(char *, uint64_t);
  char v49;
  int *v50;
  _QWORD *v51;
  char *v52;
  uint64x2_t v53;
  int16x8_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  void *v58;
  void *v59;
  void *v60;
  int v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  _QWORD *v66;
  _QWORD *v67;
  _BOOL4 v68;
  void *v69;
  id v70;
  _QWORD *v71;
  id v72;
  _QWORD *v73;
  id v74;
  _QWORD *v75;
  uint64_t v76;
  void *v77;
  void *v78;
  unsigned __int8 v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  dispatch_group_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  void *v100;
  unsigned int v101;
  int v102;
  id v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  void *v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  void *v113;
  void *v114;
  uint64_t v115;
  void *v116;
  void *v117;
  uint64_t v118;
  void *v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  void *v136;
  void *v137;
  unsigned int v138;
  uint64_t v139;
  void *v140;
  void *v141;
  unsigned int v142;
  unsigned int v143;
  uint64_t v144;
  void *v145;
  void *v146;
  uint64_t v147;
  void *v148;
  void *v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  unsigned int v153;
  unsigned int v154;
  char v155;
  __int16 v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  NSObject *v161;
  os_log_type_t v162;
  uint8_t *v163;
  uint64_t v164;
  char *v165;
  int v166;
  uint64_t v167;
  unint64_t v168;
  int v169;
  uint64_t v170;
  unsigned int v171;
  uint64_t v172;
  uint64_t v173;
  NSObject *v174;
  int v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  NSObject *v182;
  void *v183;
  NSObject *v184;
  NSObject *v185;
  char *v186;
  char *v187;
  uint64_t v188;
  void *v189;
  uint64_t v190;
  void *v191;
  NSObject *v192;
  id v193;
  void (*v194)(char *, uint64_t);
  void (*v195)(char *, uint64_t);
  void *v196;
  uint64_t v197;
  void *v198;
  id v199;
  char *v200;
  uint64_t v201;
  char *v202;
  dispatch_group_t v203;
  unsigned __int8 *v204;
  char *v205;
  uint64_t v206;
  unint64_t v207;
  unint64_t v208;
  uint64_t v209;
  void *v210;
  NSObject *v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  void *v220;
  NSObject *v221;
  unsigned __int8 *v222;
  char *v223;
  char *v224;
  char *v225;
  void (*v226)(char *, uint64_t);
  void *v227;
  uint64_t v228;
  void *v229;
  NSObject *v230;
  id v231;
  uint64_t v232;
  uint64_t v233;
  void (*v234)(char *, uint64_t);
  void *v235;
  uint64_t v236;
  void *v237;
  NSObject *v238;
  id v239;
  uint64_t v240;
  uint64_t v241;
  void (*v242)(char *, uint64_t);
  void *v243;
  uint64_t v244;
  void *v245;
  NSObject *v246;
  id v247;
  char *v248;
  uint64_t v249;
  void *v250;
  uint64_t v251;
  void *v252;
  NSObject *v253;
  id v254;
  char *v255;
  uint64_t v256;
  _QWORD *v257;
  uint64_t v258;
  _QWORD *v259;
  uint64_t v260;
  _QWORD *v261;
  int *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  void *v274;
  uint64_t v275;
  void *v276;
  id v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  unint64_t v281;
  uint64_t v282;
  char *v283;
  char *v284;
  uint64_t v286;
  char *v287;
  dispatch_group_t v288;
  unint64_t v289;
  uint64_t v290;
  unint64_t v291;
  uint64_t v292;
  int v293;
  void (*v294)(char *, char *, uint64_t);
  void *v295;
  unint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  _QWORD *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  char *v312;
  unsigned __int8 *v313;
  id v314;
  uint64_t v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t *v320;
  uint64_t v321;
  __int128 *v322;
  uint64_t v323;
  uint64_t v324;
  void *v325;
  id v326;
  NSObject *v327;
  _QWORD *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  char *v335;
  _QWORD *v336;
  uint64_t v337;
  _QWORD *v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  int *v343;
  void (*v344)(char *, char *, uint64_t);
  unint64_t v345;
  char *v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  char *v351;
  __int128 *v352;
  _QWORD *v353;
  void (*v354)(char *, uint64_t);
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  unint64_t v359;
  uint64_t v360;
  uint64_t v361;
  __int128 v362[2];
  __int128 v363;
  uint64_t (*v364)(uint64_t);
  ValueMetadata *v365;
  uint64_t (*v366)();
  _QWORD *v367;
  _QWORD v368[7];
  unsigned __int8 v369;
  __int128 aBlock;
  uint64_t (*v371)(uint64_t);
  void *v372;
  uint64_t (*v373)();
  uint64_t v374;

  v293 = a8;
  v325 = a7;
  v339 = a6;
  v340 = a4;
  v342 = a5;
  v322 = a2;
  v323 = a3;
  v352 = a1;
  v18 = a11;
  v301 = a10;
  sub_1C02CA030(a10, (uint64_t)v368);
  v298 = v368[0];
  v300 = v368[1];
  v295 = (void *)v368[3];
  v296 = v368[2];
  v289 = v368[4];
  v19 = v368[5];
  v20 = v368[6];
  LODWORD(v288) = v369;
  v341 = sub_1C030367C();
  v313 = *(unsigned __int8 **)(v341 - 8);
  MEMORY[0x1E0C80A78](v341);
  v311 = v21;
  v312 = (char *)&v286 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F70);
  MEMORY[0x1E0C80A78](v22);
  v290 = (uint64_t)&v286 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v347 = sub_1C0301DB0();
  v292 = *(_QWORD *)(v347 - 8);
  v24 = MEMORY[0x1E0C80A78](v347);
  v335 = (char *)&v286 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v291 = v25;
  MEMORY[0x1E0C80A78](v24);
  v346 = (char *)&v286 - v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727600);
  MEMORY[0x1E0C80A78](v27);
  v287 = (char *)&v286 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1C0303CB8();
  v356 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v286 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1C0303D00();
  v354 = *(void (**)(char *, uint64_t))(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v286 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = (int *)type metadata accessor for ContactResolverCache();
  *a9 = 0;
  a9[1] = 0;
  v324 = v35[11];
  *(_QWORD *)((char *)a9 + v324) = 0;
  v36 = (uint64_t)a9 + v35[14];
  v37 = type metadata accessor for MLContactRecommender();
  v319 = v36;
  v348 = v37;
  __swift_storeEnumTagSinglePayload(v36, 1, 1, v37);
  v38 = (_QWORD *)((char *)a9 + v35[16]);
  *v38 = 0;
  v38[1] = 0;
  v320 = v38;
  v321 = v35[17];
  *(_QWORD *)((char *)a9 + v321) = 0;
  v315 = v35[19];
  *(_QWORD *)((char *)a9 + v315) = 0;
  v317 = v35[20];
  *(_QWORD *)((char *)a9 + v317) = 0;
  v299 = v35[21];
  *(_QWORD *)((char *)a9 + v299) = 0;
  v297 = v35[22];
  *(_QWORD *)((char *)a9 + v297) = 0;
  v318 = v35[23];
  *(_QWORD *)((char *)a9 + v318) = 0;
  v353 = (_QWORD *)v35[24];
  *(_QWORD *)((char *)v353 + (_QWORD)a9) = 0;
  v343 = v35;
  v39 = v35[30];
  v338 = a9;
  v40 = (uint64_t)a9 + v39;
  *(_QWORD *)(v40 + 32) = 0;
  *(_OWORD *)v40 = 0u;
  *(_OWORD *)(v40 + 16) = 0u;
  v350 = v40;
  if (qword_1ED726798 != -1)
    swift_once();
  v337 = a16;
  v41 = (void *)qword_1ED729530;
  v373 = sub_1C02C7A8C;
  v374 = 0;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v371 = sub_1C007B870;
  v372 = &block_descriptor_27;
  v42 = _Block_copy(&aBlock);
  v43 = v41;
  sub_1C0303CDC();
  *(_QWORD *)&v363 = MEMORY[0x1E0DEE9D8];
  sub_1C006831C((unint64_t *)&qword_1ED726EC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  v45 = v44;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726EF0);
  v47 = sub_1C0073D24();
  v360 = v46;
  v359 = v47;
  v357 = v45;
  sub_1C0304588();
  MEMORY[0x1C3B972B0](0, v34, v31, v42);
  _Block_release(v42);

  v356 = *(_QWORD *)(v356 + 8);
  ((void (*)(char *, uint64_t))v356)(v31, v29);
  v48 = (void (*)(char *, uint64_t))*((_QWORD *)v354 + 1);
  v351 = v34;
  v354 = v48;
  v48(v34, v32);
  if (a11 == 2)
    v18 = sub_1C01CE624();
  else
    v49 = a12 & 1;
  v50 = v343;
  v51 = v338;
  v358 = v32;
  v316 = v31;
  v355 = v29;
  v52 = (char *)v338 + v343[7];
  *v52 = v18 & 1;
  v53 = (uint64x2_t)vdupq_n_s64(v18);
  v54 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v53, (uint64x2_t)xmmword_1C0305B80), (int32x4_t)vshlq_u64(v53, (uint64x2_t)xmmword_1C0305B70));
  *(int8x8_t *)v54.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v54), (int8x8_t)0x1000100010001);
  *(_DWORD *)(v52 + 1) = vmovn_s16(v54).u32[0];
  v52[5] = BYTE5(v18) & 1;
  v52[6] = BYTE6(v18) & 1;
  v52[7] = HIBYTE(v18) & 1;
  v52[8] = v49 & 1;
  sub_1C00607B8(v340, (uint64_t)&v363, &qword_1EF5C37E8);
  if (v365)
  {
    sub_1C004CD5C(&v363, (uint64_t)&aBlock);
  }
  else
  {
    v55 = sub_1C0303A54();
    v56 = sub_1C0303A48();
    v372 = (void *)v55;
    v373 = (uint64_t (*)())&off_1E799E3E8;
    *(_QWORD *)&aBlock = v56;
    sub_1C0044B78((uint64_t)&v363, &qword_1EF5C37E8);
  }
  sub_1C004CD5C(&aBlock, (uint64_t)v51 + v50[10]);
  sub_1C02CA090(v337, v350);
  v57 = v353;
  v58 = *(void **)((char *)v353 + (_QWORD)v51);
  v59 = v325;
  v60 = v325;

  *(_QWORD *)((char *)v57 + (_QWORD)v51) = v59;
  v61 = v52[1];
  v314 = v60;
  if (v61 == 1)
  {
    if (qword_1EF5B7F00 != -1)
      swift_once();
    v62 = sub_1C0303B98();
    __swift_project_value_buffer(v62, (uint64_t)qword_1EF5FC698);
    v63 = sub_1C0303B80();
    v64 = sub_1C03042E8();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v65 = 0;
      _os_log_impl(&dword_1C0039000, v63, v64, "Trial is disabled for this request", v65, 2u);
      MEMORY[0x1C3B98378](v65, -1, -1);
    }

    v66 = 0;
    v67 = 0;
    v328 = 0;
    v68 = 1;
    goto LABEL_26;
  }
  v69 = (void *)objc_opt_self();
  v70 = objc_msgSend(v69, sel_clientWithIdentifier_, 112);
  type metadata accessor for TrialManager();
  v71 = (_QWORD *)swift_allocObject();
  v66 = sub_1C008CF1C((uint64_t)v70, 0xD000000000000027, 0x80000001C0328950, v71);
  v72 = objc_msgSend(v69, sel_clientWithIdentifier_, 112);
  v73 = (_QWORD *)swift_allocObject();
  v328 = sub_1C008CF1C((uint64_t)v72, 0xD000000000000021, 0x80000001C03365F0, v73);
  v74 = objc_msgSend(v69, sel_clientWithIdentifier_, 112);
  v75 = (_QWORD *)swift_allocObject();
  v67 = sub_1C008CF1C((uint64_t)v74, 0xD000000000000026, 0x80000001C0336620, v75);
  v68 = v66 == 0;
  if ((v52[5] & 1) != 0 || !v66)
    goto LABEL_26;
  swift_retain_n();
  v76 = sub_1C0150F18();
  sub_1C00A9B48(0xD000000000000012, 0x80000001C0336650, v76);
  v78 = v77;
  swift_bridgeObjectRelease();
  if (!v78)
  {
    swift_release_n();
    goto LABEL_25;
  }
  v79 = objc_msgSend(v78, sel_BOOLeanValue);

  swift_release_n();
  if ((v79 & 1) == 0)
  {
LABEL_25:
    v68 = 0;
    goto LABEL_26;
  }
  if (qword_1EF5B7F00 != -1)
    swift_once();
  v80 = sub_1C0303B98();
  __swift_project_value_buffer(v80, (uint64_t)qword_1EF5FC698);
  v81 = sub_1C0303B80();
  v82 = sub_1C03042E8();
  if (os_log_type_enabled(v81, v82))
  {
    v83 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v83 = 0;
    _os_log_impl(&dword_1C0039000, v81, v82, "Trial override: searchNLCandidates=true", v83, 2u);
    MEMORY[0x1C3B98378](v83, -1, -1);
  }

  v68 = 0;
  v52[5] = 1;
LABEL_26:
  v84 = dispatch_group_create();
  v85 = swift_allocObject();
  v350 = v85;
  *(_QWORD *)(v85 + 16) = 0;
  v302 = v85 + 16;
  v86 = swift_allocObject();
  v349 = v86;
  *(_QWORD *)(v86 + 16) = 0;
  v303 = v86 + 16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3050);
  v334 = swift_allocBox();
  v306 = v87;
  __swift_storeEnumTagSinglePayload(v87, 1, 1, v348);
  type metadata accessor for StringTokenizer();
  v333 = swift_allocBox();
  *v88 = 0;
  v305 = v88;
  sub_1C0301DA4();
  v89 = swift_allocObject();
  *(_QWORD *)(v89 + 16) = 0;
  v304 = v89 + 16;
  v348 = v89;
  *(_QWORD *)(v89 + 24) = 0;
  v90 = swift_allocObject();
  v332 = v90;
  *(_QWORD *)(v90 + 16) = 0;
  v307 = v90 + 16;
  v91 = swift_allocObject();
  v331 = v91;
  *(_QWORD *)(v91 + 16) = 0;
  v308 = v91 + 16;
  v92 = swift_allocObject();
  v330 = v92;
  *(_QWORD *)(v92 + 16) = MEMORY[0x1E0DEE9E8];
  v309 = v92 + 16;
  v93 = swift_allocObject();
  *(_OWORD *)(v93 + 16) = 0u;
  v310 = v93 + 16;
  *(_OWORD *)(v93 + 32) = 0u;
  v329 = v93;
  *(_QWORD *)(v93 + 48) = 0;
  v353 = v66;
  LODWORD(v344) = v68;
  v327 = v84;
  if (v68
    || (swift_retain(),
        v94 = sub_1C0150F18(),
        swift_release(),
        sub_1C00A9B48(0xD000000000000021, 0x80000001C0332980, v94),
        v96 = v95,
        swift_bridgeObjectRelease(),
        !v96))
  {
    LODWORD(v294) = 0;
  }
  else
  {
    LODWORD(v294) = objc_msgSend(v96, sel_BOOLeanValue);

  }
  v97 = 1701736302;
  if (v67)
  {
    swift_retain();
    v98 = sub_1C0150F18();
    swift_release();
    sub_1C00A9B48(0x4533457273417369, 0xEE0064656C62616ELL, v98);
    v100 = v99;
    swift_bridgeObjectRelease();
    if (v100)
    {
      v101 = objc_msgSend(v100, sel_BOOLeanValue);

    }
    else
    {
      v101 = 0;
    }
    swift_retain();
    v107 = sub_1C0150F18();
    swift_release();
    sub_1C00A9B48(0xD000000000000013, 0x80000001C032D830, v107);
    v109 = v108;
    swift_bridgeObjectRelease();
    if (v109 && (v110 = sub_1C02CA0D8(v109), v111))
    {
      v345 = v111;
      v97 = v110;
    }
    else
    {
      v345 = 0xE400000000000000;
    }
    swift_retain();
    v112 = sub_1C0150F18();
    swift_release();
    sub_1C00A9B48(0xD000000000000016, 0x80000001C032D850, v112);
    v114 = v113;
    swift_bridgeObjectRelease();
    if (v114)
    {
      v326 = objc_msgSend(v114, sel_longValue);

    }
    else
    {
      v326 = 0;
    }
    swift_retain();
    v115 = sub_1C0150F18();
    swift_release();
    sub_1C00A9B48(0xD000000000000013, 0x80000001C032D870, v115);
    v117 = v116;
    swift_bridgeObjectRelease();
    if (v117)
    {
      v103 = objc_msgSend(v117, sel_longValue);

    }
    else
    {
      v103 = 0;
    }
    swift_retain();
    v118 = sub_1C0150F18();
    swift_release();
    sub_1C00A9B48(0xD000000000000017, 0x80000001C032D890, v118);
    v120 = v119;
    swift_bridgeObjectRelease();
    if (v120)
    {
      objc_msgSend(v120, sel_doubleValue);
      v106 = v121;

    }
    else
    {
      v106 = 0x4059000000000000;
    }
    swift_retain();
    v122 = sub_1C0150F18();
    swift_release();
    sub_1C00A9B48(0xD000000000000017, 0x80000001C032D8B0, v122);
    v124 = v123;
    swift_bridgeObjectRelease();
    if (v124)
    {
      objc_msgSend(v124, sel_doubleValue);
      v105 = v125;

    }
    else
    {
      v105 = 0;
    }
    swift_retain();
    v126 = sub_1C0150F18();
    swift_release();
    sub_1C00A9B48(0xD00000000000001ALL, 0x80000001C032D8D0, v126);
    v128 = v127;
    swift_bridgeObjectRelease();
    if (v128)
    {
      v102 = objc_msgSend(v128, sel_BOOLeanValue);

    }
    else
    {
      v102 = 0;
    }
    v104 = v345;
  }
  else
  {
    v102 = 0;
    v103 = 0;
    v326 = 0;
    v101 = 0;
    v104 = 0xE400000000000000;
    v105 = 0;
    v106 = 0x4059000000000000;
  }
  sub_1C02CA030(v301, (uint64_t)&aBlock);
  v336 = v67;
  if (v371)
  {
    swift_bridgeObjectRelease();
    LODWORD(v298) = v298 & 1;
    v102 = v288 & 1;
    v97 = v300;
    v104 = v296;
    v326 = v295;
    v103 = (id)v289;
  }
  else
  {
    LODWORD(v298) = v101;
    v19 = v106;
    v20 = v105;
  }
  v345 = v104;
  v296 = a14;
  v300 = (uint64_t)v103;
  v301 = v97;
  if (v101)
  {
    type metadata accessor for EuclidEmbeddingApi();
    swift_allocObject();
    v129 = sub_1C0181380();
    v130 = v299;
    swift_release();
    *(_QWORD *)((char *)v51 + v130) = v129;
    type metadata accessor for EuclidVectorDb();
    swift_allocObject();
    v131 = sub_1C0180A70();
  }
  else
  {
    v132 = v299;
    swift_release();
    v131 = 0;
    *(_QWORD *)((char *)v51 + v132) = 0;
  }
  LODWORD(v299) = v102;
  v133 = v297;
  swift_release();
  *(_QWORD *)((char *)v51 + v133) = v131;
  v134 = v328;
  if (v328
    && (swift_retain(),
        v135 = sub_1C0150F18(),
        swift_release(),
        sub_1C00A9B48(0xD000000000000014, 0x80000001C03348B0, v135),
        v137 = v136,
        swift_bridgeObjectRelease(),
        v137))
  {
    v138 = objc_msgSend(v137, sel_BOOLeanValue);

    if ((v344 & 1) != 0)
      goto LABEL_70;
  }
  else
  {
    v138 = 1;
    if ((v344 & 1) != 0)
      goto LABEL_69;
  }
  swift_retain();
  v139 = sub_1C0150F18();
  swift_release();
  sub_1C00A9B48(0xD000000000000014, 0x80000001C03348B0, v139);
  v141 = v140;
  swift_bridgeObjectRelease();
  if (v141)
  {
    v142 = objc_msgSend(v141, sel_BOOLeanValue);

    if (!v134)
    {
      LODWORD(v344) = 0;
      v143 = 1;
LABEL_76:
      v151 = 0x408F3FFDF3B645A2;
      goto LABEL_78;
    }
LABEL_71:
    swift_retain();
    v144 = sub_1C0150F18();
    swift_release();
    sub_1C00A9B48(0xD000000000000021, 0x80000001C0334900, v144);
    v146 = v145;
    swift_bridgeObjectRelease();
    if (v146)
    {
      v143 = objc_msgSend(v146, sel_BOOLeanValue);

    }
    else
    {
      v143 = 1;
    }
    swift_retain();
    v147 = sub_1C0150F18();
    swift_release();
    sub_1C00A9B48(0xD000000000000026, 0x80000001C0334930, v147);
    v149 = v148;
    swift_bridgeObjectRelease();
    if (v149)
    {
      objc_msgSend(v149, sel_doubleValue);
      v151 = v150;

      goto LABEL_78;
    }
    goto LABEL_76;
  }
LABEL_69:
  v143 = 1;
  if (v134)
  {
LABEL_70:
    v142 = 1;
    goto LABEL_71;
  }
  v151 = 0x408F3FFDF3B645A2;
  v142 = 1;
LABEL_78:
  if (a13 == 2)
    v152 = (void *)v138;
  else
    v152 = (void *)(a13 & 1);
  if (a13 == 2)
    v153 = v142;
  else
    v153 = (a13 >> 8) & 1;
  if (a13 == 2)
    v154 = v143;
  else
    v154 = (a13 >> 16) & 1;
  if (a13 != 2)
    v151 = v296;
  v365 = &type metadata for ContactFeatures;
  v366 = (uint64_t (*)())sub_1C0041A44();
  LOBYTE(v363) = 7;
  v155 = sub_1C0302428();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v363);
  LODWORD(v297) = v153;
  v156 = 256;
  if (!v153)
    v156 = 0;
  v295 = v152;
  LODWORD(v296) = v154;
  if ((sub_1C005D2D8(v155 & 1, v156 | (unsigned __int16)v152) & 1) != 0)
  {
    v157 = sub_1C03041EC();
    v158 = (uint64_t)v287;
    __swift_storeEnumTagSinglePayload((uint64_t)v287, 1, 1, v157);
    v159 = swift_allocObject();
    *(_QWORD *)(v159 + 16) = 0;
    *(_QWORD *)(v159 + 24) = 0;
    sub_1C00E185C(v158, (uint64_t)&unk_1EF5C37F8, v159);
    swift_release();
  }
  else
  {
    if (qword_1ED727970 != -1)
      swift_once();
    v160 = sub_1C0303B98();
    __swift_project_value_buffer(v160, (uint64_t)&unk_1ED7295C8);
    v161 = sub_1C0303B80();
    v162 = sub_1C03042E8();
    if (os_log_type_enabled(v161, v162))
    {
      v163 = (uint8_t *)swift_slowAlloc();
      v164 = swift_slowAlloc();
      *(_QWORD *)&v363 = v164;
      *(_DWORD *)v163 = 136315138;
      *(_QWORD *)&v362[0] = sub_1C003E6D8(0x6D6F646167654D5BLL, 0xEE005D5243452065, (uint64_t *)&v363);
      sub_1C03044B0();
      _os_log_impl(&dword_1C0039000, v161, v162, "%s ECR integration OFF. Skip creation of MegadomeSignalProvider", v163, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v164, -1, -1);
      MEMORY[0x1C3B98378](v163, -1, -1);
    }

  }
  v165 = v346;
  v166 = v293;
  v168 = v291;
  v167 = v292;
  if (a15 == 2)
  {
    if ((v344 & 1) != 0)
    {
      v286 = 0;
      goto LABEL_104;
    }
    swift_retain();
    v170 = sub_1C0150F18();
    v171 = sub_1C0043740(v170, v325);
    swift_bridgeObjectRelease();
    swift_release();
    HIDWORD(v286) = v171 & 1;
    v169 = (v171 >> 8) & 1;
  }
  else
  {
    HIDWORD(v286) = a15 & 1;
    v169 = HIBYTE(a15) & 1;
  }
  LODWORD(v286) = v169;
LABEL_104:
  v172 = v347;
  v173 = v290;
  v174 = v327;
  v293 = a17;
  sub_1C00607B8(v339, v290, &qword_1ED725F70);
  if (__swift_getEnumTagSinglePayload(v173, 1, v172) == 1)
  {
    sub_1C008A054();
    sub_1C0044B78(v173, &qword_1ED725F70);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v167 + 32))(v165, v173, v172);
  }
  v175 = (int)v294;
  if (v166 != 2)
    v175 = v166;
  LODWORD(v325) = v175;
  dispatch_group_enter(v174);
  v288 = (dispatch_group_t)qword_1ED729530;
  v294 = *(void (**)(char *, char *, uint64_t))(v167 + 16);
  v176 = v335;
  v294(v335, v165, v172);
  v177 = *(unsigned __int8 *)(v167 + 80);
  v178 = (v177 + 40) & ~v177;
  v289 = ((v168 + v178 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v290 = v177 | 7;
  v291 = (v168 + v178 + 7) & 0xFFFFFFFFFFFFFFF8;
  v292 = v178;
  v179 = (char *)swift_allocObject();
  v180 = v332;
  v181 = v348;
  *((_QWORD *)v179 + 2) = v333;
  *((_QWORD *)v179 + 3) = v181;
  *((_QWORD *)v179 + 4) = v180;
  v344 = *(void (**)(char *, char *, uint64_t))(v167 + 32);
  v344(&v179[v178], v176, v172);
  v182 = v327;
  *(_QWORD *)&v179[(v168 + v178 + 7) & 0xFFFFFFFFFFFFFFF8] = v327;
  v366 = sub_1C008A84C;
  v367 = v179;
  *(_QWORD *)&v363 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v363 + 1) = 1107296256;
  v364 = sub_1C007B870;
  v365 = (ValueMetadata *)&block_descriptor_24;
  v183 = _Block_copy(&v363);
  v184 = v288;
  swift_retain();
  swift_retain();
  swift_retain();
  v185 = v182;
  v186 = v351;
  sub_1C0303CDC();
  *(_QWORD *)&v362[0] = MEMORY[0x1E0DEE9D8];
  v187 = v316;
  v188 = v355;
  sub_1C0304588();
  MEMORY[0x1C3B972B0](0, v186, v187, v183);
  _Block_release(v183);

  ((void (*)(char *, uint64_t))v356)(v187, v188);
  v354(v186, v358);
  swift_release();
  dispatch_group_enter(v185);
  v189 = (void *)qword_1ED729530;
  v190 = swift_allocObject();
  *(_QWORD *)(v190 + 16) = v350;
  *(_QWORD *)(v190 + 24) = v185;
  v366 = (uint64_t (*)())sub_1C02CA1EC;
  v367 = (_QWORD *)v190;
  *(_QWORD *)&v363 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v363 + 1) = 1107296256;
  v364 = sub_1C007B870;
  v365 = (ValueMetadata *)&block_descriptor_30_0;
  v191 = _Block_copy(&v363);
  v192 = v185;
  v193 = v189;
  swift_retain();
  sub_1C0303CDC();
  *(_QWORD *)&v362[0] = MEMORY[0x1E0DEE9D8];
  sub_1C0304588();
  MEMORY[0x1C3B972B0](0, v186, v187, v191);
  _Block_release(v191);

  v194 = (void (*)(char *, uint64_t))v356;
  ((void (*)(char *, uint64_t))v356)(v187, v188);
  v195 = v354;
  v354(v186, v358);
  swift_release();
  dispatch_group_enter(v192);
  v196 = (void *)qword_1ED729530;
  v197 = swift_allocObject();
  *(_QWORD *)(v197 + 16) = v349;
  *(_QWORD *)(v197 + 24) = v192;
  v366 = (uint64_t (*)())sub_1C02CA218;
  v367 = (_QWORD *)v197;
  *(_QWORD *)&v363 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v363 + 1) = 1107296256;
  v364 = sub_1C007B870;
  v365 = (ValueMetadata *)&block_descriptor_36_0;
  v198 = _Block_copy(&v363);
  v288 = v192;
  v199 = v196;
  swift_retain();
  v200 = v351;
  sub_1C0303CDC();
  *(_QWORD *)&v362[0] = MEMORY[0x1E0DEE9D8];
  v201 = v355;
  sub_1C0304588();
  v202 = v200;
  MEMORY[0x1C3B972B0](0, v200, v187, v198);
  _Block_release(v198);

  v194(v187, v201);
  v195(v200, v358);
  swift_release();
  v203 = v288;
  dispatch_group_enter(v288);
  v287 = (char *)qword_1ED729530;
  v205 = v312;
  v204 = v313;
  v206 = v341;
  (*((void (**)(char *, uint64_t, uint64_t))v313 + 2))(v312, v342, v341);
  v207 = (v204[80] + 16) & ~(unint64_t)v204[80];
  v208 = (v311 + v207 + 7) & 0xFFFFFFFFFFFFFFF8;
  v209 = swift_allocObject();
  v327 = *((_QWORD *)v204 + 4);
  ((void (*)(unint64_t, char *, uint64_t))v327)(v209 + v207, v205, v206);
  *(_QWORD *)(v209 + v208) = v203;
  v366 = (uint64_t (*)())sub_1C02CA2B0;
  v367 = (_QWORD *)v209;
  *(_QWORD *)&v363 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v363 + 1) = 1107296256;
  v364 = sub_1C007B870;
  v365 = (ValueMetadata *)&block_descriptor_42_0;
  v210 = _Block_copy(&v363);
  v211 = v203;
  v212 = v287;
  sub_1C0303CDC();
  *(_QWORD *)&v362[0] = MEMORY[0x1E0DEE9D8];
  v213 = v187;
  v214 = v355;
  sub_1C0304588();
  MEMORY[0x1C3B972B0](0, v202, v213, v210);
  _Block_release(v210);

  ((void (*)(char *, uint64_t))v356)(v213, v214);
  v215 = v358;
  v354(v202, v358);
  swift_release();
  dispatch_group_enter(v211);
  v313 = (unsigned __int8 *)qword_1ED729530;
  v216 = v335;
  v217 = v347;
  v294(v335, v346, v347);
  v218 = swift_allocObject();
  *(_BYTE *)(v218 + 16) = v293 & 1;
  v219 = v334;
  *(_QWORD *)(v218 + 24) = v353;
  *(_QWORD *)(v218 + 32) = v219;
  v344((char *)(v218 + v292), v216, v217);
  *(_QWORD *)(v218 + v291) = v211;
  v366 = (uint64_t (*)())sub_1C02CA328;
  v367 = (_QWORD *)v218;
  *(_QWORD *)&v363 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v363 + 1) = 1107296256;
  v364 = sub_1C007B870;
  v365 = (ValueMetadata *)&block_descriptor_48_0;
  v220 = _Block_copy(&v363);
  swift_retain();
  v221 = v211;
  v222 = v313;
  swift_retain();
  v223 = v351;
  sub_1C0303CDC();
  *(_QWORD *)&v362[0] = MEMORY[0x1E0DEE9D8];
  sub_1C0304588();
  MEMORY[0x1C3B972B0](0, v223, v213, v220);
  _Block_release(v220);

  ((void (*)(char *, uint64_t))v356)(v213, v214);
  v224 = v223;
  v225 = v223;
  v226 = v354;
  v354(v224, v215);
  swift_release();
  dispatch_group_enter(v221);
  v227 = (void *)qword_1ED729530;
  sub_1C0048FE0((uint64_t)v352, (uint64_t)v362);
  v228 = swift_allocObject();
  *(_QWORD *)(v228 + 16) = v331;
  sub_1C004CD5C(v362, v228 + 24);
  *(_QWORD *)(v228 + 64) = v221;
  v366 = (uint64_t (*)())sub_1C02CA360;
  v367 = (_QWORD *)v228;
  *(_QWORD *)&v363 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v363 + 1) = 1107296256;
  v364 = sub_1C007B870;
  v365 = (ValueMetadata *)&block_descriptor_54;
  v229 = _Block_copy(&v363);
  v230 = v221;
  v231 = v227;
  swift_retain();
  sub_1C0303CDC();
  v361 = MEMORY[0x1E0DEE9D8];
  v232 = v355;
  sub_1C0304588();
  MEMORY[0x1C3B972B0](0, v225, v213, v229);
  _Block_release(v229);

  v233 = v232;
  v234 = (void (*)(char *, uint64_t))v356;
  ((void (*)(char *, uint64_t))v356)(v213, v233);
  v226(v225, v358);
  swift_release();
  dispatch_group_enter(v230);
  v235 = (void *)qword_1ED729530;
  sub_1C0048FE0((uint64_t)v352, (uint64_t)v362);
  v236 = swift_allocObject();
  sub_1C004CD5C(v362, v236 + 16);
  *(_QWORD *)(v236 + 56) = v230;
  v366 = (uint64_t (*)())sub_1C02CA39C;
  v367 = (_QWORD *)v236;
  *(_QWORD *)&v363 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v363 + 1) = 1107296256;
  v364 = sub_1C007B870;
  v365 = (ValueMetadata *)&block_descriptor_60;
  v237 = _Block_copy(&v363);
  v238 = v230;
  v239 = v235;
  sub_1C0303CDC();
  v361 = MEMORY[0x1E0DEE9D8];
  v240 = v355;
  sub_1C0304588();
  MEMORY[0x1C3B972B0](0, v225, v213, v237);
  _Block_release(v237);

  v234(v213, v240);
  v241 = v358;
  v242 = v354;
  v354(v225, v358);
  swift_release();
  dispatch_group_enter(v238);
  v243 = (void *)qword_1ED729530;
  sub_1C0048FE0((uint64_t)v352, (uint64_t)v362);
  v244 = swift_allocObject();
  *(_QWORD *)(v244 + 16) = v330;
  sub_1C004CD5C(v362, v244 + 24);
  *(_QWORD *)(v244 + 64) = v238;
  v366 = (uint64_t (*)())sub_1C02CA3AC;
  v367 = (_QWORD *)v244;
  *(_QWORD *)&v363 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v363 + 1) = 1107296256;
  v364 = sub_1C007B870;
  v365 = (ValueMetadata *)&block_descriptor_66;
  v245 = _Block_copy(&v363);
  v246 = v238;
  v247 = v243;
  swift_retain();
  v248 = v225;
  sub_1C0303CDC();
  v361 = MEMORY[0x1E0DEE9D8];
  v249 = v355;
  sub_1C0304588();
  MEMORY[0x1C3B972B0](0, v248, v213, v245);
  _Block_release(v245);

  ((void (*)(char *, uint64_t))v356)(v213, v249);
  v242(v248, v241);
  swift_release();
  dispatch_group_enter(v246);
  v250 = (void *)qword_1ED729530;
  v251 = swift_allocObject();
  *(_QWORD *)(v251 + 16) = v329;
  *(_QWORD *)(v251 + 24) = v246;
  v366 = (uint64_t (*)())sub_1C02CA3F0;
  v367 = (_QWORD *)v251;
  *(_QWORD *)&v363 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v363 + 1) = 1107296256;
  v364 = sub_1C007B870;
  v365 = (ValueMetadata *)&block_descriptor_72;
  v252 = _Block_copy(&v363);
  v253 = v246;
  v254 = v250;
  swift_retain();
  sub_1C0303CDC();
  *(_QWORD *)&v362[0] = MEMORY[0x1E0DEE9D8];
  sub_1C0304588();
  MEMORY[0x1C3B972B0](0, v248, v213, v252);
  _Block_release(v252);

  ((void (*)(char *, uint64_t))v356)(v213, v249);
  v242(v248, v358);
  swift_release();
  sub_1C0304354();

  sub_1C0044B78(v337, &qword_1EF5BA420);
  sub_1C0044B78(v339, &qword_1ED725F70);
  sub_1C0044B78(v340, &qword_1EF5C37E8);
  v255 = (char *)v338;
  v256 = v315;
  v257 = v353;
  swift_retain();
  swift_release();
  *(_QWORD *)&v255[v256] = v257;
  v258 = v317;
  v259 = v336;
  swift_retain();
  swift_release();
  *(_QWORD *)&v255[v258] = v259;
  v260 = v318;
  v261 = v328;
  swift_retain();
  swift_release();
  *(_QWORD *)&v255[v260] = v261;
  v262 = v343;
  sub_1C004CD5C(v352, (uint64_t)&v255[v343[8]]);
  sub_1C004CD5C(v322, (uint64_t)&v255[v262[9]]);
  *(_QWORD *)&v255[v262[12]] = v323;
  swift_beginAccess();
  v263 = *(_QWORD *)(v350 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)v255 = v263;
  swift_beginAccess();
  v264 = *(_QWORD *)(v349 + 16);
  swift_retain();
  swift_release();
  *((_QWORD *)v255 + 1) = v264;
  ((void (*)(char *, uint64_t, uint64_t))v327)(&v255[v262[6]], v342, v341);
  v265 = v306;
  swift_beginAccess();
  v266 = v319;
  sub_1C0044B78(v319, &qword_1EF5C3050);
  sub_1C00607B8(v265, v266, &qword_1EF5C3050);
  v267 = (uint64_t)v305;
  swift_beginAccess();
  sub_1C00638BC(v267, (uint64_t)&v255[v262[15]], (uint64_t (*)(_QWORD))type metadata accessor for StringTokenizer);
  swift_beginAccess();
  v268 = *(_QWORD *)(v348 + 16);
  v269 = *(_QWORD *)(v348 + 24);
  v270 = v320;
  v271 = *v320;
  sub_1C008B5CC(v268);
  sub_1C008B418(v271);
  *v270 = v268;
  v270[1] = v269;
  swift_beginAccess();
  v272 = *(_QWORD *)(v332 + 16);
  v273 = v321;
  swift_retain();
  swift_release();
  *(_QWORD *)&v255[v273] = v272;
  swift_beginAccess();
  v274 = *(void **)(v331 + 16);
  v275 = v324;
  v276 = *(void **)&v255[v324];
  v277 = v274;

  *(_QWORD *)&v255[v275] = v274;
  swift_beginAccess();
  *(_QWORD *)&v255[v262[13]] = *(_QWORD *)(v330 + 16);
  v344(&v255[v262[18]], v346, v347);
  v278 = v310;
  swift_beginAccess();
  v279 = (uint64_t)&v255[v262[25]];
  sub_1C027E590(v278, v279);
  v255[v262[26]] = v325 & 1;
  v280 = &v255[v262[27]];
  *v280 = v298;
  v281 = v345;
  *((_QWORD *)v280 + 1) = v301;
  *((_QWORD *)v280 + 2) = v281;
  v282 = v300;
  *((_QWORD *)v280 + 3) = v326;
  *((_QWORD *)v280 + 4) = v282;
  *((_QWORD *)v280 + 5) = v19;
  *((_QWORD *)v280 + 6) = v20;
  v280[56] = v299;
  v283 = &v255[v262[28]];
  *v283 = (char)v295;
  v283[1] = v297;
  v283[2] = v296;
  *((_QWORD *)v283 + 1) = v151;
  swift_bridgeObjectRetain();
  sub_1C02A2CC8(v279);
  sub_1C027E590(v278, v279);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v284 = &v255[v262[29]];
  *v284 = BYTE4(v286);
  v284[1] = v286;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1C02C7A8C()
{
  uint64_t result;

  if (qword_1ED726790 != -1)
    return swift_once();
  return result;
}

uint64_t sub_1C02C7AB4()
{
  return swift_task_switch();
}

uint64_t sub_1C02C7AC8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v7[5];

  if (qword_1ED727970 != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_7(v2, (uint64_t)&unk_1ED7295C8);
  v3 = OUTLINED_FUNCTION_9_1();
  if (os_log_type_enabled(v0, v3))
  {
    v4 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v7[0] = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v4 = 136315138;
    *(_QWORD *)(v1 + 16) = sub_1C003E6D8(0x6D6F646167654D5BLL, 0xEE005D5243452065, v7);
    sub_1C03044B0();
    OUTLINED_FUNCTION_13_0(&dword_1C0039000, v0, v3, "%s ECR integration ON. Creating MegadomeSignalProvider...", v4);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }

  if (qword_1EF5B8038 != -1)
    swift_once();
  v5 = qword_1EF5FC7B0;
  v7[3] = type metadata accessor for MegadomeClient();
  v7[4] = (uint64_t)&off_1E79A7230;
  v7[0] = v5;
  *(_QWORD *)(v1 + 104) = &type metadata for ContactFeatures;
  *(_QWORD *)(v1 + 112) = sub_1C0041A44();
  *(_BYTE *)(v1 + 80) = 7;
  OUTLINED_FUNCTION_10_6();
  sub_1C0302428();
  __swift_destroy_boxed_opaque_existential_0Tm(v1 + 80);
  sub_1C02B7660();
  sub_1C004D14C(v1 + 16);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1C02C7CB8()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7283F0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (void **)((char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_1C0301B70();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v17 - v8;
  if (qword_1ED7261D0 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED7294D0);
  sub_1C00607B8(v10, (uint64_t)v2, &qword_1ED7283F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = *v2;
    v17[1] = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7281B0);
    swift_willThrowTypedImpl();
    type metadata accessor for InferenceError();
    v12 = v11;
    sub_1C0269BEC(v11, 2, 0xD00000000000007ALL, 0x80000001C0336710, 0x2928424464616F6CLL, 0xE800000000000000, 522);
    if (qword_1ED728430 != -1)
      swift_once();
    v13 = sub_1C0303B98();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED729650);
    sub_1C026A800();
    swift_release();

    return 0;
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v4 + 32))(v9, v2, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726EB8);
    swift_allocObject();
    sub_1C006CA94((uint64_t)v7);
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  return v16;
}

uint64_t sub_1C02C7F2C()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7283F0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (void **)((char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_1C0301B70();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v17 - v8;
  if (qword_1ED726028 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED7294B8);
  sub_1C00607B8(v10, (uint64_t)v2, &qword_1ED7283F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = *v2;
    v17[1] = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7281B0);
    swift_willThrowTypedImpl();
    type metadata accessor for InferenceError();
    v12 = v11;
    sub_1C0269BEC(v11, 2, 0xD00000000000007ALL, 0x80000001C0336710, 0x2928424464616F6CLL, 0xE800000000000000, 522);
    if (qword_1ED728430 != -1)
      swift_once();
    v13 = sub_1C0303B98();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED729650);
    sub_1C026A800();
    swift_release();

    return 0;
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v4 + 32))(v9, v2, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726EB0);
    swift_allocObject();
    sub_1C006CA94((uint64_t)v7);
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  return v16;
}

void sub_1C02C81A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = a3();
  OUTLINED_FUNCTION_55_1();
  *(_QWORD *)(a1 + 16) = v6;
  swift_release();
  OUTLINED_FUNCTION_55_1();
  if (*(_QWORD *)(a1 + 16))
  {
    v7 = OUTLINED_FUNCTION_10_6();
    a4(&v8, v7);
    OUTLINED_FUNCTION_5_3();
    swift_release();
  }
  OUTLINED_FUNCTION_63_10();
}

void sub_1C02C824C(uint64_t a1, NSObject *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD888);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0303664();
  v6 = sub_1C030367C();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v6);
  sub_1C0044B78((uint64_t)v5, &qword_1EF5BD888);
  dispatch_group_leave(a2);
}

void sub_1C02C830C(int a1, uint8_t *a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  char *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  char *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  _BYTE *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint8_t *v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t, uint64_t);
  uint64_t v89;
  dispatch_group_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95[3];
  uint64_t v96[3];
  uint64_t v97;
  unint64_t v98;

  v90 = a5;
  v85 = a4;
  v86 = a2;
  LODWORD(v88) = a1;
  v84 = sub_1C0301DB0();
  v83 = *(_QWORD *)(v84 - 8);
  v5 = MEMORY[0x1E0C80A78](v84);
  v80 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v77 = (char *)&v75 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3050);
  v9 = MEMORY[0x1E0C80A78](v8);
  v81 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v78 = (char *)&v75 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728340);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_1C0301B70();
  v87 = *(_QWORD *)(v93 - 8);
  v15 = MEMORY[0x1E0C80A78](v93);
  v82 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v91 = (char *)&v75 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v92 = (uint64_t)&v75 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v75 = (char *)&v75 - v22;
  MEMORY[0x1E0C80A78](v21);
  v76 = (char *)&v75 - v23;
  v24 = type metadata accessor for Signpost();
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = swift_projectBox();
  if (qword_1ED728440 != -1)
    swift_once();
  v27 = (void *)qword_1ED729668;
  v28 = &v26[*(int *)(v24 + 20)];
  *(_QWORD *)v28 = "ContactResolver.Recommend.ML.init";
  *((_QWORD *)v28 + 1) = 33;
  v28[16] = 2;
  v29 = v27;
  sub_1C0303B68();
  v89 = *(int *)(v24 + 24);
  *(_QWORD *)&v26[v89] = v29;
  v30 = v29;
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1C0305B60;
  v32 = sub_1C03046E4();
  v34 = v33;
  *(_QWORD *)(v31 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v31 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v31 + 32) = v32;
  *(_QWORD *)(v31 + 40) = v34;
  sub_1C0303B50();
  swift_bridgeObjectRelease();

  if ((v88 & 1) != 0)
  {
    v35 = v93;
    if (v86
      && (v36 = sub_1C0150F18(),
          sub_1C00A9B48(0x52746361746E6F43, 0xED000072656B6E61, v36),
          v38 = v37,
          swift_bridgeObjectRelease(),
          v38))
    {
      sub_1C0150E70((uint64_t)v14);

      if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v35) != 1)
      {
        v39 = v76;
        (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v76, v14, v35);
        if (qword_1EF5B7F00 != -1)
          swift_once();
        v40 = sub_1C0303B98();
        __swift_project_value_buffer(v40, (uint64_t)qword_1EF5FC698);
        v41 = sub_1C0303B80();
        v42 = sub_1C03042E8();
        if (os_log_type_enabled(v41, v42))
        {
          v43 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v43 = 0;
          _os_log_impl(&dword_1C0039000, v41, v42, "using Trial URL for ContactRanker", v43, 2u);
          MEMORY[0x1C3B98378](v43, -1, -1);
        }

        v44 = v87;
        v45 = (uint64_t)v75;
        (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v75, v39, v35);
        v46 = (uint64_t)v77;
        (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v77, v85, v84);
        v47 = v78;
        sub_1C01D4930(v45, v46, v78);
        (*(void (**)(char *, uint64_t))(v44 + 8))(v39, v35);
        v72 = type metadata accessor for MLContactRecommender();
        __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v72);
        v73 = v79;
        swift_beginAccess();
        v74 = (uint64_t)v47;
        goto LABEL_27;
      }
    }
    else
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v35);
    }
    sub_1C0044B78((uint64_t)v14, &qword_1ED728340);
  }
  else
  {
    v35 = v93;
    if (qword_1ED727970 != -1)
      swift_once();
    v48 = sub_1C0303B98();
    __swift_project_value_buffer(v48, (uint64_t)&unk_1ED7295C8);
    v49 = sub_1C0303B80();
    v50 = sub_1C03042F4();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_1C0039000, v49, v50, "⚠️ Should only be set to FALSE in unit test mock to ignore Trial's ContactRanker model", v51, 2u);
      MEMORY[0x1C3B98378](v51, -1, -1);
    }

  }
  v97 = 0xD000000000000016;
  v98 = 0x80000001C03366F0;
  if (qword_1EF5B7F00 != -1)
    swift_once();
  v52 = sub_1C0303B98();
  __swift_project_value_buffer(v52, (uint64_t)qword_1EF5FC698);
  v53 = sub_1C0303B80();
  v54 = sub_1C03042E8();
  if (os_log_type_enabled(v53, v54))
  {
    v55 = (uint8_t *)swift_slowAlloc();
    v56 = swift_slowAlloc();
    v96[0] = v56;
    *(_DWORD *)v55 = 136315138;
    v95[0] = sub_1C003E6D8(0xD000000000000016, 0x80000001C03366F0, v96);
    v35 = v93;
    sub_1C03044B0();
    _os_log_impl(&dword_1C0039000, v53, v54, "using default URL for ContactRanker %s", v55, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v56, -1, -1);
    MEMORY[0x1C3B98378](v55, -1, -1);
  }

  v57 = v91;
  swift_beginAccess();
  v58 = v92;
  sub_1C00E43DC(v97, v92);
  v59 = v87;
  v88 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
  v88(v57, v58, v35);
  v60 = sub_1C0303B80();
  v61 = sub_1C03042E8();
  if (os_log_type_enabled(v60, v61))
  {
    v62 = (uint8_t *)swift_slowAlloc();
    v63 = swift_slowAlloc();
    v95[0] = v63;
    *(_DWORD *)v62 = 136315138;
    v86 = v62 + 4;
    sub_1C006831C((unint64_t *)&qword_1ED725F48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v64 = sub_1C03049E4();
    v94 = sub_1C003E6D8(v64, v65, v95);
    v35 = v93;
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    v66 = *(void (**)(char *, uint64_t))(v59 + 8);
    v66(v91, v35);
    _os_log_impl(&dword_1C0039000, v60, v61, "using default URL for ContactRanker %s", v62, 0xCu);
    swift_arrayDestroy();
    v67 = v63;
    v58 = v92;
    MEMORY[0x1C3B98378](v67, -1, -1);
    MEMORY[0x1C3B98378](v62, -1, -1);
  }
  else
  {
    v66 = *(void (**)(char *, uint64_t))(v59 + 8);
    v66(v57, v35);
  }

  v68 = v81;
  v69 = (uint64_t)v80;
  v70 = (uint64_t)v82;
  v88(v82, v58, v35);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16))(v69, v85, v84);
  sub_1C01D4930(v70, v69, v68);
  v66((char *)v58, v35);
  v71 = type metadata accessor for MLContactRecommender();
  __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v71);
  v73 = v79;
  swift_beginAccess();
  v74 = (uint64_t)v68;
LABEL_27:
  sub_1C02CA478(v74, v73, &qword_1EF5C3050);
  sub_1C03043D8();
  sub_1C0303B5C();
  sub_1C003DD84((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
  dispatch_group_leave(v90);
}

void sub_1C02C8F58(uint64_t a1, _QWORD *a2, NSObject *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;
  uint64_t v22;
  void *v23;
  void *v24;
  NSObject *v25;
  uint64_t v26;
  _BOOL4 v27;
  uint8_t *v28;
  os_log_type_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  dispatch_group_t v33;

  v33 = a3;
  v31 = a1;
  v4 = type metadata accessor for Signpost();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED728440 != -1)
    swift_once();
  v7 = (void *)qword_1ED729668;
  v8 = &v6[*(int *)(v4 + 20)];
  *(_QWORD *)v8 = "CRR.findMeCard";
  *((_QWORD *)v8 + 1) = 14;
  v8[16] = 2;
  v9 = v7;
  sub_1C0303B68();
  v32 = *(int *)(v4 + 24);
  *(_QWORD *)&v6[v32] = v9;
  v10 = v9;
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C0305B60;
  v12 = sub_1C03046E4();
  v14 = v13;
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 40) = v14;
  sub_1C0303B50();
  swift_bridgeObjectRelease();

  if (qword_1ED727970 != -1)
    swift_once();
  v15 = sub_1C0303B98();
  __swift_project_value_buffer(v15, (uint64_t)&unk_1ED7295C8);
  v16 = sub_1C0303B80();
  v17 = sub_1C03042E8();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_1C0039000, v16, v17, "ContactResolverCache::init - Attempting to find meCard.", v18, 2u);
    MEMORY[0x1C3B98378](v18, -1, -1);
  }

  v19 = a2[3];
  v20 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v19);
  if (qword_1ED727E80 != -1)
    swift_once();
  v21 = (void **)(v31 + 16);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(qword_1ED7295E0, v19, v20);
  swift_beginAccess();
  v23 = *v21;
  *v21 = (void *)v22;

  swift_beginAccess();
  v24 = *v21;
  v25 = sub_1C0303B80();
  v26 = sub_1C03042E8();
  v27 = os_log_type_enabled(v25, (os_log_type_t)v26);
  if (v24)
  {
    if (v27)
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      v29 = v26;
      v30 = "ContactResolverCache::init - Found meCard!";
LABEL_14:
      _os_log_impl(&dword_1C0039000, v25, v29, v30, v28, 2u);
      MEMORY[0x1C3B98378](v28, -1, -1);
    }
  }
  else if (v27)
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    v29 = v26;
    v30 = "ContactResolverCache::init - Unable to find meCard!";
    goto LABEL_14;
  }

  dispatch_group_leave(v33);
  sub_1C03043D8();
  sub_1C0303B5C();
  sub_1C003DD84((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
}

void sub_1C02C9344(_QWORD *a1, NSObject *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for Signpost();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED728440 != -1)
    swift_once();
  v7 = (void *)qword_1ED729668;
  v8 = &v6[*(int *)(v4 + 20)];
  *(_QWORD *)v8 = "CRR.dummyContactRequest";
  *((_QWORD *)v8 + 1) = 23;
  v8[16] = 2;
  v9 = v7;
  sub_1C0303B68();
  *(_QWORD *)&v6[*(int *)(v4 + 24)] = v9;
  v10 = v9;
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C0305B60;
  v12 = sub_1C03046E4();
  v14 = v13;
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 40) = v14;
  sub_1C0303B50();
  swift_bridgeObjectRelease();

  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v16 + 8))(0x73616D6F6874, 0xE600000000000000, v15, v16);
  swift_bridgeObjectRelease();
  dispatch_group_leave(a2);
  sub_1C03043D8();
  sub_1C0303B5C();
  sub_1C003DD84((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
}

void sub_1C02C9574(uint64_t a1, NSObject *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  dispatch_group_t v15;
  _BYTE v16[40];

  v15 = a2;
  v3 = type metadata accessor for Signpost();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED728440 != -1)
    swift_once();
  v6 = (void *)qword_1ED729668;
  v7 = &v5[*(int *)(v3 + 20)];
  *(_QWORD *)v7 = "CRR.loadPicsStore";
  *((_QWORD *)v7 + 1) = 17;
  v7[16] = 2;
  v8 = v6;
  sub_1C0303B68();
  *(_QWORD *)&v5[*(int *)(v3 + 24)] = v8;
  v9 = v8;
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C0305B60;
  v11 = sub_1C03046E4();
  v13 = v12;
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 40) = v13;
  sub_1C0303B50();
  swift_bridgeObjectRelease();

  swift_beginAccess();
  sub_1C0303B44();
  sub_1C02CA478((uint64_t)v16, a1 + 16, &qword_1EF5B9650);
  swift_endAccess();
  dispatch_group_leave(v15);
  sub_1C03043D8();
  sub_1C0303B5C();
  sub_1C003DD84((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for Signpost);
}

void sub_1C02C9790(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[3];
  v4 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 56))(v3, v4);
  OUTLINED_FUNCTION_55_1();
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_63_10();
}

void sub_1C02C9814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_18_0();
  v1 = v0;
  v3 = v2;
  OUTLINED_FUNCTION_38_9();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_6_0();
  v7 = v6 - v5;
  v8 = swift_projectBox();
  v9 = sub_1C008A870();
  v11 = v10;
  v13 = v12;
  OUTLINED_FUNCTION_55_1();
  sub_1C008B368(v7, v8);
  OUTLINED_FUNCTION_55_1();
  v14 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v3 + 16) = v9;
  *(_QWORD *)(v3 + 24) = v11;
  sub_1C008B418(v14);
  OUTLINED_FUNCTION_55_1();
  *(_QWORD *)(v1 + 16) = v13;
  swift_release();
  OUTLINED_FUNCTION_63_10();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C02C98F0()
{
  if (qword_1ED7267A0 != -1)
    swift_once();
  swift_retain();
  sub_1C0042E10(sub_1C02C9954, 0);
  return swift_release();
}

void sub_1C02C9954(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727A20);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContactResolverCache();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00607B8(a1, (uint64_t)v4, &qword_1ED727A20);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    sub_1C0044B78((uint64_t)v4, &qword_1ED727A20);
  }
  else
  {
    sub_1C02A9D9C((uint64_t)v4, (uint64_t)v7);
    v8 = &v7[*(int *)(v5 + 32)];
    v9 = *((_QWORD *)v8 + 3);
    v10 = *((_QWORD *)v8 + 4);
    __swift_project_boxed_opaque_existential_1(v8, v9);
    if (qword_1ED727E80 != -1)
      swift_once();
    v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(qword_1ED7295E0, v9, v10);
    sub_1C0044B78(a1, &qword_1ED727A20);
    v12 = *(int *)(v5 + 44);

    *(_QWORD *)&v7[v12] = v11;
    sub_1C00638BC((uint64_t)v7, a1, (uint64_t (*)(_QWORD))type metadata accessor for ContactResolverCache);
    __swift_storeEnumTagSinglePayload(a1, 0, 1, v5);
    if (qword_1ED727970 != -1)
      swift_once();
    v13 = sub_1C0303B98();
    __swift_project_value_buffer(v13, (uint64_t)&unk_1ED7295C8);
    v14 = sub_1C0303B80();
    v15 = sub_1C03042E8();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1C0039000, v14, v15, "updated ContactResolverCache meCard", v16, 2u);
      MEMORY[0x1C3B98378](v16, -1, -1);
    }

    sub_1C003DD84((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ContactResolverCache);
  }
}

uint64_t sub_1C02C9D50(uint64_t a1, uint64_t a2)
{
  _QWORD v4[4];

  if (qword_1ED7267A0 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  v4[2] = a2;
  swift_retain();
  sub_1C0042E10(sub_1C02CA4B4, v4);
  return swift_release();
}

void sub_1C02C9DE8(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727A20);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContactResolverCache();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00607B8(a1, (uint64_t)v6, &qword_1ED727A20);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
    sub_1C0044B78((uint64_t)v6, &qword_1ED727A20);
  }
  else
  {
    sub_1C0044B78(a1, &qword_1ED727A20);
    sub_1C02A9D9C((uint64_t)v6, (uint64_t)v9);
    v10 = objc_msgSend(a2, sel_entries);
    sub_1C00447B0(0, &qword_1ED726F50);
    v11 = sub_1C0304138();

    v12 = sub_1C008B444(v11);
    swift_bridgeObjectRelease();
    v13 = *(int *)(v7 + 52);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v9[v13] = v12;
    sub_1C00638BC((uint64_t)v9, a1, (uint64_t (*)(_QWORD))type metadata accessor for ContactResolverCache);
    __swift_storeEnumTagSinglePayload(a1, 0, 1, v7);
    if (qword_1ED727970 != -1)
      swift_once();
    v14 = sub_1C0303B98();
    __swift_project_value_buffer(v14, (uint64_t)&unk_1ED7295C8);
    v15 = sub_1C0303B80();
    v16 = sub_1C03042E8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1C0039000, v15, v16, "updated ContactResolverCache favoriteHandleValues", v17, 2u);
      MEMORY[0x1C3B98378](v17, -1, -1);
    }

    sub_1C003DD84((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ContactResolverCache);
  }
}

uint64_t sub_1C02CA030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C2DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t sub_1C02CA090(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C02CA0D8(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_stringValue);

  if (!v2)
    return 0;
  v3 = sub_1C0303EB0();

  return v3;
}

uint64_t sub_1C02CA144()
{
  OUTLINED_FUNCTION_19_27();
  OUTLINED_FUNCTION_22_25();
  return swift_deallocObject();
}

uint64_t sub_1C02CA15C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
  {
    swift_release();
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_2_2();
  return swift_deallocObject();
}

uint64_t sub_1C02CA180()
{
  uint64_t v0;

  OUTLINED_FUNCTION_22_25();
  return swift_deallocObject();
}

uint64_t sub_1C02CA19C()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_22_25();
  return swift_deallocObject();
}

uint64_t sub_1C02CA1B8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return swift_deallocObject();
}

void sub_1C02CA1EC()
{
  uint64_t v0;

  sub_1C02C81A0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), sub_1C02C7CB8, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1C004D988);
}

void sub_1C02CA218()
{
  uint64_t v0;

  sub_1C02C81A0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), sub_1C02C7F2C, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1C004D988);
}

uint64_t sub_1C02CA240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = OUTLINED_FUNCTION_38_16();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1C02CA2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_38_16();
  OUTLINED_FUNCTION_12_67();
  sub_1C02C824C(v0 + v1, *(NSObject **)(v0 + v2));
}

uint64_t sub_1C02CA2DC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_14_4();
  OUTLINED_FUNCTION_7_98();
  OUTLINED_FUNCTION_19_0();
  swift_release();
  OUTLINED_FUNCTION_48_24();

  return OUTLINED_FUNCTION_2_9();
}

void sub_1C02CA328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_14_4();
  OUTLINED_FUNCTION_12_67();
  sub_1C02C830C(*(unsigned __int8 *)(v0 + 16), *(uint8_t **)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + v2, *(NSObject **)(v0 + v1));
}

void sub_1C02CA360()
{
  uint64_t v0;

  sub_1C02C8F58(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24), *(NSObject **)(v0 + 64));
}

uint64_t sub_1C02CA370()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);

  return swift_deallocObject();
}

void sub_1C02CA39C()
{
  uint64_t v0;

  sub_1C02C9344((_QWORD *)(v0 + 16), *(NSObject **)(v0 + 56));
}

void sub_1C02CA3AC()
{
  uint64_t v0;

  sub_1C02C9790(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24));
}

uint64_t objectdestroy_26Tm_0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_27();

  OUTLINED_FUNCTION_2_2();
  return swift_deallocObject();
}

void sub_1C02CA3F0()
{
  uint64_t v0;

  sub_1C02C9574(*(_QWORD *)(v0 + 16), *(NSObject **)(v0 + 24));
}

uint64_t sub_1C02CA3F8()
{
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_2_2();
  return swift_deallocObject();
}

uint64_t sub_1C02CA414()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C008E620;
  return sub_1C02C7AB4();
}

void sub_1C02CA478(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_38(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v3, v4, v5);
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1C02CA4AC(uint64_t a1)
{
  uint64_t v1;

  return sub_1C02C9D50(a1, *(_QWORD *)(v1 + 16));
}

void sub_1C02CA4B4(uint64_t a1)
{
  uint64_t v1;

  sub_1C02C9DE8(a1, *(void **)(v1 + 16));
}

uint64_t objectdestroy_50Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_27();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 24);

  return swift_deallocObject();
}

uint64_t objectdestroy_20Tm()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_14_4();
  OUTLINED_FUNCTION_7_98();
  OUTLINED_FUNCTION_19_27();
  OUTLINED_FUNCTION_19_0();
  swift_release();
  OUTLINED_FUNCTION_48_24();

  return OUTLINED_FUNCTION_2_9();
}

void sub_1C02CA548()
{
  OUTLINED_FUNCTION_14_4();
  OUTLINED_FUNCTION_12_67();
  sub_1C02C9814();
}

void OUTLINED_FUNCTION_20_42(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_BYTE *)v13 = a13;
  *(_QWORD *)(v13 + 8) = a11;
  *(_QWORD *)(v13 + 16) = v14;
  *(_QWORD *)(v13 + 24) = a10;
  *(_QWORD *)(v13 + 32) = v15;
  *(_QWORD *)(v13 + 40) = v16;
  *(_QWORD *)(v13 + 48) = v17;
}

uint64_t OUTLINED_FUNCTION_23_44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 488))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_24_34()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_29_37()
{
  return sub_1C0303B5C();
}

uint64_t OUTLINED_FUNCTION_42_27()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_43_28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 + 16) = v1;
  return sub_1C004CD5C((__int128 *)(v2 - 184), a1 + 24);
}

uint64_t OUTLINED_FUNCTION_48_24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1 + v3, v0);
}

uint64_t OUTLINED_FUNCTION_60_11()
{
  return sub_1C0303B68();
}

uint64_t OUTLINED_FUNCTION_69_10@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

id OUTLINED_FUNCTION_70_12()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 3347));
}

uint64_t OUTLINED_FUNCTION_74_10()
{
  uint64_t v0;

  return sub_1C0048FE0(v0 - 144, v0 - 184);
}

void *OUTLINED_FUNCTION_78_14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = v1;
  *(_QWORD *)(v2 - 120) = a1;
  return _Block_copy((const void *)(v2 - 144));
}

uint64_t sub_1C02CA6FC(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t), uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return MEMORY[0x1E0DEE9D8];
  v21 = a4;
  v5 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  v6 = MEMORY[0x1E0DEE9D8];
  do
  {
    v7 = *(v5 - 1);
    v8 = *v5;
    v9 = swift_bridgeObjectRetain();
    a2(&v23, v9);
    v10 = v23;
    if (v23)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = OUTLINED_FUNCTION_31_40(0, *(_QWORD *)(v6 + 16) + 1, v11, v12, v13, v14, v15, v16, v21);
      v18 = *(_QWORD *)(v6 + 16);
      v17 = *(_QWORD *)(v6 + 24);
      if (v18 >= v17 >> 1)
        v6 = OUTLINED_FUNCTION_31_40(v17 > 1, v18 + 1, v11, v12, v13, v14, v15, v16, v21);
      *(_QWORD *)(v6 + 16) = v18 + 1;
      v19 = (_QWORD *)(v6 + 24 * v18);
      v19[4] = v7;
      v19[5] = v8;
      v19[6] = v10;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v5 += 2;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1C02CA81C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  id v10;
  uint64_t v11;
  uint64_t v13;

  v3 = MEMORY[0x1E0DEE9D8];
  v13 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      if (*(_QWORD *)(a2 + 16))
      {
        v6 = *(v5 - 1);
        v7 = *v5;
        swift_bridgeObjectRetain_n();
        v8 = sub_1C00B3C3C(v6, v7);
        if ((v9 & 1) != 0)
        {
          v10 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v8);
          v11 = OUTLINED_FUNCTION_2();
          MEMORY[0x1C3B97010](v11);
          if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1C030415C();
          sub_1C0304180();
          sub_1C0304150();
        }
        else
        {
          OUTLINED_FUNCTION_2();
        }
      }
      v5 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v3 = v13;
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C02CA948(uint64_t a1)
{
  return sub_1C02CA970(a1, &qword_1ED727D60, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1C02CCB54);
}

uint64_t sub_1C02CA95C(uint64_t a1)
{
  return sub_1C02CA970(a1, &qword_1EF5BC1F0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1C02CCE18);
}

uint64_t sub_1C02CA970(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  if (*(_QWORD *)(a1 + 16))
  {
    OUTLINED_FUNCTION_51_23(a1, a2);
    v4 = OUTLINED_FUNCTION_0_121();
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9E0];
  }
  v7 = v4;
  v5 = OUTLINED_FUNCTION_44();
  a3(v5, 1, &v7);
  OUTLINED_FUNCTION_33();
  return v7;
}

uint64_t sub_1C02CA9F0(uint64_t a1, uint64_t *a2, void (*a3)(void), uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  if (*(_QWORD *)(a1 + 16))
  {
    OUTLINED_FUNCTION_51_23(a1, a2);
    v6 = OUTLINED_FUNCTION_0_121();
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9E0];
  }
  v9 = v6;
  v7 = OUTLINED_FUNCTION_44();
  sub_1C02CD0DC(v7, 1, &v9, a3, a4);
  OUTLINED_FUNCTION_33();
  return v9;
}

id sub_1C02CAA84(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, void (*a5)(void **__return_ptr, uint64_t), uint64_t a6, void (*a7)(uint64_t *__return_ptr, uint64_t), uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t *a10, void (*a11)(void), uint64_t *a12)
{
  _QWORD *v12;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void **v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  unint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t);
  int v61;
  uint64_t v62;
  void (*v63)(uint64_t);
  _QWORD *v64;
  void *v65;
  unint64_t v66;
  char v67;
  void (*v68)(id *, void **);
  void **v69;
  _QWORD *v70;
  _QWORD *v71;
  unint64_t v72;
  char v73;
  void **v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  id v88;
  unint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  char v95;
  uint8_t *v96;
  void (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  void **v99;
  char v100;
  BOOL v101;
  char v102;
  char v103;
  void **v104;
  char v105;
  char v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void **v113;
  char v114;
  char v115;
  char v116;
  void **v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  os_log_type_t v122;
  _WORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  os_log_type_t v127;
  _WORD *v128;
  uint64_t v129;
  uint64_t v130;
  const char *v131;
  uint64_t v132;
  os_log_type_t v133;
  _WORD *v134;
  id result;
  uint64_t v136;
  uint64_t v137;
  os_log_type_t v138;
  _WORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int64_t v143;
  int v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  int64_t v154;
  int v155;
  _QWORD *v156;
  _QWORD *v157;
  int v158;
  _QWORD *v159;
  int64_t v160;
  void **v161;
  _QWORD *v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  id v169[2];

  v166 = a8;
  v153 = a4;
  v156 = a3;
  v163 = sub_1C030205C();
  v17 = *(_QWORD **)(v163 - 8);
  MEMORY[0x1E0C80A78](v163);
  OUTLINED_FUNCTION_19_2();
  v149 = v18 - v19;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v20);
  v152 = (uint64_t)&v142 - v21;
  OUTLINED_FUNCTION_42();
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (void **)((char *)&v142 - v24);
  MEMORY[0x1E0C80A78](v23);
  v165 = (uint64_t)&v142 - v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3900);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_12_26();
  v29 = MEMORY[0x1E0C80A78](v28);
  v31 = (uint64_t *)((char *)&v142 - v30);
  a5(&v168, v29);
  v32 = v168;
  if (!v168)
  {
    if (qword_1ED728430 != -1)
      goto LABEL_119;
    goto LABEL_94;
  }
  v162 = v17;
  v169[0] = v168;
  v33 = *(_QWORD **)(a2 + 16);
  v34 = OUTLINED_FUNCTION_65();
  v17 = *(_QWORD **)(sub_1C01AACEC(v34) + 16);
  swift_bridgeObjectRelease();
  if (v33 != v17)
  {
    if (qword_1ED728430 != -1)
      swift_once();
    v126 = OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7(v126, (uint64_t)qword_1ED729650);
    v127 = OUTLINED_FUNCTION_14_2();
    if (OUTLINED_FUNCTION_4_1(v127))
    {
      v128 = (_WORD *)OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_13(v128);
      v131 = "AppRankerSELFSerialization create has duplicate candidateAppBundleIds";
      goto LABEL_104;
    }
LABEL_105:

    goto LABEL_106;
  }
  v17 = v33;
  v161 = v25;
  v147 = a2;
  v35 = sub_1C02CA6FC(a2, a7, v166, a9);
  v36 = sub_1C02CA9F0(v35, a10, a11, a12);
  v37 = v36;
  if (*(_QWORD **)(v36 + 16) != v17)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED728430 != -1)
      swift_once();
    v132 = OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7(v132, (uint64_t)qword_1ED729650);
    v133 = OUTLINED_FUNCTION_14_2();
    if (OUTLINED_FUNCTION_4_1(v133))
    {
      v134 = (_WORD *)OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_13(v134);
      v131 = "AppRankerSELFSerialization create could not create dependentSignals";
LABEL_104:
      OUTLINED_FUNCTION_1_5(&dword_1C0039000, v129, v130, v131);
      OUTLINED_FUNCTION_5();
    }
    goto LABEL_105;
  }
  v145 = 0;
  v146 = v17;
  v38 = *(_QWORD *)(a1 + 64);
  v151 = a1 + 64;
  v39 = 1 << *(_BYTE *)(a1 + 32);
  if (v39 < 64)
    v40 = ~(-1 << v39);
  else
    v40 = -1;
  v164 = v40 & v38;
  v158 = *MEMORY[0x1E0DA4710];
  v155 = *MEMORY[0x1E0DA4720];
  v166 = v36 + 64;
  v154 = (unint64_t)(v39 + 63) >> 6;
  v143 = v154 - 1;
  swift_bridgeObjectRetain();
  v160 = 0;
  v148 = (void *)MEMORY[0x1E0DEE9E0];
  v17 = v162;
  v41 = v163;
  v42 = v161;
  v150 = a1;
  v157 = v12;
  v159 = v31;
  while (1)
  {
    while (1)
    {
      while (1)
      {
LABEL_8:
        if (v164)
        {
          v43 = __clz(__rbit64(v164));
          v164 &= v164 - 1;
          v44 = v43 | (v160 << 6);
LABEL_10:
          v45 = *(_QWORD *)(a1 + 56);
          v46 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v44);
          v47 = v46[1];
          *v12 = *v46;
          v12[1] = v47;
          v48 = v45 + v17[9] * v44;
          v49 = OUTLINED_FUNCTION_48_25();
          v50 = v48;
          v41 = v163;
          ((void (*)(char *, uint64_t, uint64_t))v17[2])((char *)v12 + *(int *)(v49 + 48), v50, v163);
          __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v49);
          OUTLINED_FUNCTION_47();
          goto LABEL_32;
        }
        v51 = v160 + 1;
        if (__OFADD__(v160, 1))
          goto LABEL_118;
        if (v51 < v154)
        {
          v52 = *(_QWORD *)(v151 + 8 * v51);
          if (v52)
            goto LABEL_14;
          v53 = v160 + 2;
          ++v160;
          if (v51 + 1 < v154)
          {
            v52 = *(_QWORD *)(v151 + 8 * v53);
            if (v52)
              goto LABEL_17;
            v160 = v51 + 1;
            if (v51 + 2 < v154)
            {
              v52 = *(_QWORD *)(v151 + 8 * (v51 + 2));
              if (v52)
              {
                v51 += 2;
                goto LABEL_14;
              }
              v160 = v51 + 2;
              if (v51 + 3 < v154)
              {
                v52 = *(_QWORD *)(v151 + 8 * (v51 + 3));
                if (v52)
                {
                  v51 += 3;
                  goto LABEL_14;
                }
                v53 = v51 + 4;
                v160 = v51 + 3;
                if (v51 + 4 < v154)
                {
                  v52 = *(_QWORD *)(v151 + 8 * v53);
                  if (v52)
                  {
LABEL_17:
                    v51 = v53;
LABEL_14:
                    v164 = (v52 - 1) & v52;
                    v44 = __clz(__rbit64(v52)) + (v51 << 6);
                    v160 = v51;
                    goto LABEL_10;
                  }
                  while (1)
                  {
                    v51 = v53 + 1;
                    if (__OFADD__(v53, 1))
                      goto LABEL_126;
                    if (v51 >= v154)
                      break;
                    v52 = *(_QWORD *)(v151 + 8 * v51);
                    ++v53;
                    if (v52)
                      goto LABEL_14;
                  }
                  v160 = v143;
                }
              }
            }
          }
        }
        v54 = OUTLINED_FUNCTION_48_25();
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v54);
        v164 = 0;
LABEL_32:
        sub_1C005578C((uint64_t)v12, (uint64_t)v31, &qword_1EF5C3900);
        v55 = OUTLINED_FUNCTION_48_25();
        if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v55) == 1)
        {
          swift_release();
          swift_bridgeObjectRetain();
          v58 = sub_1C02CA81C(v147, v37);
          swift_bridgeObjectRelease();
          if (v58 >> 62)
          {
            OUTLINED_FUNCTION_44();
            v136 = sub_1C03047F8();
            OUTLINED_FUNCTION_33();
          }
          else
          {
            v136 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          if (v146 == (_QWORD *)v136)
            return v169[0];
          OUTLINED_FUNCTION_33();
          swift_bridgeObjectRelease();
          if (qword_1ED728430 != -1)
LABEL_122:
            swift_once();
          v137 = OUTLINED_FUNCTION_9_0();
          OUTLINED_FUNCTION_7(v137, (uint64_t)qword_1ED729650);
          v138 = OUTLINED_FUNCTION_14_2();
          if (OUTLINED_FUNCTION_4_1(v138))
          {
            v139 = (_WORD *)OUTLINED_FUNCTION_6();
            OUTLINED_FUNCTION_13(v139);
            OUTLINED_FUNCTION_1_5(&dword_1C0039000, v140, v141, "AppRankerSELFSerialization error creating ordered dependent signals");
            OUTLINED_FUNCTION_5();
          }

          return 0;
        }
        v12 = (_QWORD *)*v31;
        v56 = (uint64_t)v31 + *(int *)(v55 + 48);
        v57 = v165;
        OUTLINED_FUNCTION_45_28(v165, v56);
        v58 = v17[2];
        ((void (*)(void **, uint64_t, uint64_t))v58)(v42, v57, v41);
        v59 = OUTLINED_FUNCTION_38_31();
        v61 = v60(v59);
        if (v61 != v158)
          break;
        v62 = OUTLINED_FUNCTION_38_31();
        v63(v62);
        v64 = v156;
        v31 = v159;
        if (!v156[2])
          goto LABEL_71;
        v65 = *v42;
        OUTLINED_FUNCTION_22();
        v66 = OUTLINED_FUNCTION_3_137();
        if ((v67 & 1) == 0)
        {
          OUTLINED_FUNCTION_18();
          v41 = v163;
LABEL_71:
          ((void (*)(uint64_t, uint64_t, uint64_t))v58)(v152, v165, v41);
          v144 = OUTLINED_FUNCTION_25_36();
          v168 = v64;
          OUTLINED_FUNCTION_3_137();
          OUTLINED_FUNCTION_52_17();
          if (v101)
          {
            __break(1u);
            goto LABEL_122;
          }
          v42 = v99;
          v102 = v100;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3908);
          v103 = OUTLINED_FUNCTION_12_68();
          v41 = v163;
          if ((v103 & 1) != 0)
          {
            OUTLINED_FUNCTION_3_137();
            OUTLINED_FUNCTION_37_33();
            if (!v105)
              goto LABEL_127;
            v42 = v104;
          }
          v106 = v102;
          v17 = v168;
          if ((v106 & 1) != 0)
          {
            v107 = OUTLINED_FUNCTION_36_37();
            v109 = v152;
LABEL_89:
            v108(v107, v109, v41);
            goto LABEL_92;
          }
          v110 = OUTLINED_FUNCTION_0_147();
          OUTLINED_FUNCTION_45_28(v110, v152);
          v111 = v17[2];
          v101 = __OFADD__(v111, 1);
          v112 = v111 + 1;
          if (v101)
            goto LABEL_124;
          goto LABEL_91;
        }
        v68 = *(void (**)(id *, void **))(v64[7] + 16 * v66);
        swift_retain();
        OUTLINED_FUNCTION_20_0();
        v168 = v65;
        v68(v169, &v168);
        swift_release();
        v17 = v162;
        v41 = v163;
        OUTLINED_FUNCTION_10_80();
        OUTLINED_FUNCTION_49_23();
      }
      if (v61 == v155)
        break;
      OUTLINED_FUNCTION_18();
      v31 = v159;
      if (qword_1ED728430 != -1)
        swift_once();
      v92 = OUTLINED_FUNCTION_9_0();
      v93 = OUTLINED_FUNCTION_7(v92, (uint64_t)qword_1ED729650);
      v94 = sub_1C03042F4();
      os_log_type_enabled(v93, v94);
      OUTLINED_FUNCTION_49_23();
      if ((v95 & 1) != 0)
      {
        v96 = (uint8_t *)OUTLINED_FUNCTION_6();
        *(_WORD *)v96 = 0;
        _os_log_impl(&dword_1C0039000, v93, v94, "AppRankerSELFSerialization unsupported SignalValue type", v96, 2u);
        OUTLINED_FUNCTION_5();
      }

      v41 = v163;
      v97 = (void (*)(uint64_t, uint64_t))v162[1];
      v97(v165, v163);
      v98 = OUTLINED_FUNCTION_38_31();
      ((void (*)(uint64_t))v97)(v98);
      v17 = v162;
    }
    v69 = v161;
    ((void (*)(void **, uint64_t))v162[12])(v161, v41);
    v70 = *v69;
    v71 = v153;
    v31 = v159;
    if (v153[2])
      break;
LABEL_82:
    OUTLINED_FUNCTION_29();
    ((void (*)(uint64_t, uint64_t, uint64_t))v58)(v149, v165, v163);
    v144 = OUTLINED_FUNCTION_25_36();
    v168 = v71;
    OUTLINED_FUNCTION_3_137();
    OUTLINED_FUNCTION_52_17();
    if (v101)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      result = (id)sub_1C0304A68();
      __break(1u);
      return result;
    }
    v42 = v113;
    v115 = v114;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3908);
    v116 = OUTLINED_FUNCTION_12_68();
    v41 = v163;
    if ((v116 & 1) != 0)
    {
      OUTLINED_FUNCTION_3_137();
      OUTLINED_FUNCTION_37_33();
      if (!v105)
        goto LABEL_127;
      v42 = v117;
    }
    v118 = v115;
    v17 = v168;
    if ((v118 & 1) != 0)
    {
      v107 = OUTLINED_FUNCTION_36_37();
      v109 = v149;
      goto LABEL_89;
    }
    v119 = OUTLINED_FUNCTION_0_147();
    OUTLINED_FUNCTION_45_28(v119, v149);
    v120 = v17[2];
    v101 = __OFADD__(v120, 1);
    v112 = v120 + 1;
    if (v101)
      goto LABEL_125;
LABEL_91:
    v17[2] = v112;
    OUTLINED_FUNCTION_22();
    v17 = v162;
LABEL_92:
    OUTLINED_FUNCTION_49_23();
    v148 = v168;
    OUTLINED_FUNCTION_18();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_10_80();
  }
  OUTLINED_FUNCTION_22();
  v72 = OUTLINED_FUNCTION_3_137();
  if ((v73 & 1) == 0)
  {
    OUTLINED_FUNCTION_29();
    goto LABEL_82;
  }
  v74 = (void **)(v71[7] + 16 * v72);
  v17 = *v74;
  v42 = (void **)v74[1];
  swift_retain();
  OUTLINED_FUNCTION_20_0();
  v75 = 1 << *(_BYTE *)(v37 + 32);
  if (v75 < 64)
    v76 = ~(-1 << v75);
  else
    v76 = -1;
  v77 = v76 & *(_QWORD *)(v37 + 64);
  v12 = (_QWORD *)((unint64_t)(v75 + 63) >> 6);
  swift_bridgeObjectRetain();
  v78 = 0;
  while (v77)
  {
    v79 = __clz(__rbit64(v77));
    v77 &= v77 - 1;
    v80 = v79 | (v78 << 6);
LABEL_60:
    v84 = (uint64_t *)(*(_QWORD *)(v37 + 48) + 16 * v80);
    v85 = *v84;
    v86 = v84[1];
    v87 = *(void **)(*(_QWORD *)(v37 + 56) + 8 * v80);
    v168 = v87;
    if (v70[2])
    {
      v88 = v87;
      OUTLINED_FUNCTION_22();
      v89 = sub_1C00B3C3C(v85, v86);
      if ((v90 & 1) != 0)
      {
        v91 = *(_QWORD *)(v70[7] + 8 * v89);
        OUTLINED_FUNCTION_18();
        v167 = v91;
        ((void (*)(void **, uint64_t *))v17)(&v168, &v167);

      }
      else
      {

        OUTLINED_FUNCTION_18();
      }
    }
  }
  v81 = v78 + 1;
  if (__OFADD__(v78, 1))
  {
    __break(1u);
    goto LABEL_117;
  }
  if (v81 >= (uint64_t)v12)
    goto LABEL_69;
  v82 = *(_QWORD *)(v166 + 8 * v81);
  ++v78;
  if (v82)
    goto LABEL_59;
  v78 = v81 + 1;
  if (v81 + 1 >= (uint64_t)v12)
    goto LABEL_69;
  v82 = *(_QWORD *)(v166 + 8 * v78);
  if (v82)
    goto LABEL_59;
  v78 = v81 + 2;
  if (v81 + 2 >= (uint64_t)v12)
    goto LABEL_69;
  v82 = *(_QWORD *)(v166 + 8 * v78);
  if (v82)
  {
LABEL_59:
    v77 = (v82 - 1) & v82;
    v80 = __clz(__rbit64(v82)) + (v78 << 6);
    goto LABEL_60;
  }
  v83 = v81 + 3;
  if (v83 >= (uint64_t)v12)
  {
LABEL_69:
    OUTLINED_FUNCTION_29();
    swift_release();
    swift_release();
    v17 = v162;
    v41 = v163;
    OUTLINED_FUNCTION_10_80();
    a1 = v150;
    OUTLINED_FUNCTION_49_23();
    v31 = v159;
    goto LABEL_8;
  }
  v82 = *(_QWORD *)(v166 + 8 * v83);
  if (v82)
  {
    v78 = v83;
    goto LABEL_59;
  }
  while (1)
  {
    v78 = v83 + 1;
    if (__OFADD__(v83, 1))
      break;
    if (v78 >= (uint64_t)v12)
      goto LABEL_69;
    v82 = *(_QWORD *)(v166 + 8 * v78);
    ++v83;
    if (v82)
      goto LABEL_59;
  }
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  swift_once();
LABEL_94:
  v121 = OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_7(v121, (uint64_t)qword_1ED729650);
  v122 = OUTLINED_FUNCTION_14_2();
  if (OUTLINED_FUNCTION_4_1(v122))
  {
    v123 = (_WORD *)OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_13(v123);
    OUTLINED_FUNCTION_1_5(&dword_1C0039000, v124, v125, "AppRankerSELFSerialization create could not create independentSignals");
    OUTLINED_FUNCTION_5();
  }
LABEL_106:

  return 0;
}

_QWORD *sub_1C02CB64C()
{
  id v0;
  id v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedAnalytics);
  v1 = objc_msgSend(v0, sel_defaultMessageStream);

  v2 = OUTLINED_FUNCTION_16_0();
  *(_QWORD *)(v2 + 16) = v1;
  type metadata accessor for TrialAppRankerSELFConfigProvider();
  OUTLINED_FUNCTION_16_0();
  v3 = v1;
  v4 = sub_1C00F7488();
  type metadata accessor for UserDefaultsAppRankerPersistentStorage();
  OUTLINED_FUNCTION_16_0();
  v5 = sub_1C022C954();

  type metadata accessor for AppRankerSELFRecorder();
  result = (_QWORD *)OUTLINED_FUNCTION_16_0();
  result[2] = sub_1C02CD4FC;
  result[3] = v2;
  result[4] = sub_1C02CD504;
  result[5] = v4;
  result[6] = v5;
  result[7] = &off_1E79A1F88;
  result[8] = OUTLINED_FUNCTION_10_19;
  result[9] = 0;
  result[10] = sub_1C0101110;
  result[11] = 0;
  result[12] = sub_1C02CB83C;
  result[13] = 0;
  return result;
}

void sub_1C02CB760(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0044AC4(a2, (uint64_t)v8);
  v9 = sub_1C0301D5C();
  v10 = 0;
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) != 1)
  {
    v10 = (void *)sub_1C0301D2C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  objc_msgSend(a3, sel_emitMessage_isolatedStreamUUID_, a1, v10);

}

id sub_1C02CB83C()
{
  id result;
  void *v1;
  id v2;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, sel_isDiagnosticSubmissionAllowed);

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1C02CB898@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  _OWORD v4[2];
  uint64_t v5;

  sub_1C00F73D4((uint64_t)v4);
  result = *(double *)v4;
  v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = v5;
  return result;
}

void sub_1C02CB8DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  unint64_t v45;
  unint64_t v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char v55;
  char *v56;
  id v57;
  char *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t *v65;
  id v66;
  void *v67;
  char v69;
  void *v70;
  uint64_t v71;
  id v72;
  id v73;
  __objc2_prop_list **p_base_props;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  id v84;
  void *v85;
  char *v86;
  char *v87;
  char *v88;
  void (*v89)(char *, char *, uint64_t);
  char *v90;
  char *v91;
  void *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint64_t v98;
  uint8_t *v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  void *v103;
  void *v104;
  void *v105;
  uint64_t v106;
  void (*v107)(void *, uint64_t);
  void *v108[2];
  id v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  void *v120;
  uint64_t v121;
  char *v122;
  id v123;
  char *v124;
  unint64_t v125;
  char *v126;
  void (*v127)(uint64_t, char *, uint64_t);
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD v133[2];
  uint64_t v134;
  uint64_t v135;
  char v136[8];
  char v137[8];
  int v138;
  char v139;
  _QWORD v140[2];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_12_26();
  MEMORY[0x1E0C80A78](v5);
  v127 = (void (*)(uint64_t, char *, uint64_t))((char *)v108 - v6);
  v7 = sub_1C0301D5C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_19_2();
  v11 = (char *)(v9 - v10);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v108 - v14;
  MEMORY[0x1E0C80A78](v13);
  v129 = (char *)v108 - v16;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v17);
  v128 = (char *)v108 - v18;
  OUTLINED_FUNCTION_42();
  MEMORY[0x1E0C80A78](v19);
  v126 = (char *)v108 - v20;
  v21 = type metadata accessor for AppRankSelectionEvent(0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v108 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = v1;
  if ((sub_1C02CC5F0() & 1) != 0)
  {
    v125 = type metadata accessor for AppRankEvent(0);
    v27 = *(_QWORD *)(a1 + *(int *)(v125 + 28));
    if (v27)
    {
      v28 = *(int *)(v125 + 24);
      v119 = a1;
      v29 = *(_QWORD *)(a1 + v28);
      if (qword_1EF5B8048 != -1)
      {
        v71 = *(_QWORD *)(a1 + v28);
        swift_once();
        v29 = v71;
      }
      v30 = (_QWORD *)qword_1EF5C3800;
      v121 = v29;
      if (qword_1EF5B8050 != -1)
      {
        swift_once();
        v29 = v121;
      }
      v31 = OUTLINED_FUNCTION_50_27(v27, v29, v30, (_QWORD *)qword_1EF5C3808, (void (*)(void **__return_ptr, uint64_t))sub_1C02CC58C, v25, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1C02CC598, v26, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C00AC6D0, &qword_1EF5BC1E0, sub_1C0128A4C, &qword_1EF5C3920);
      if (v31)
      {
        v115 = v28;
        v124 = v11;
        v118 = v8;
        v34 = v32;
        v35 = v33;
        v36 = v31;
        v37 = objc_allocWithZone(MEMORY[0x1E0D99840]);
        v123 = v36;
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_44();
        v38 = objc_msgSend(v37, sel_init);
        if (v38)
        {
          v116 = v36;
          v117 = v35;
          v122 = v15;
          v114 = v7;
          v111 = v2;
          v120 = v38;
          objc_msgSend(v38, sel_setIndependentSignal_, v123);
          v39 = swift_bridgeObjectRetain();
          sub_1C02CD43C(v39, v120, &qword_1EF5C3918);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C38E8);
          v40 = (_QWORD *)OUTLINED_FUNCTION_26_47();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C38F0);
          v41 = (_QWORD *)OUTLINED_FUNCTION_26_47();
          v44 = OUTLINED_FUNCTION_50_27(v27, v121, v40, v41, (void (*)(void **__return_ptr, uint64_t))sub_1C02CC5A4, v42, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1C02CC5B0, v43, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C00AC628, &qword_1EF5BC1D8, sub_1C0128A40, &qword_1EF5C3910);
          v46 = v45;
          v48 = v47;
          OUTLINED_FUNCTION_28();
          swift_bridgeObjectRelease();
          if (v44)
          {
            v112 = v34;
            v49 = objc_allocWithZone(MEMORY[0x1E0D99860]);
            v50 = v44;
            OUTLINED_FUNCTION_44();
            swift_bridgeObjectRetain();
            v51 = v46;
            v113 = objc_msgSend(v49, sel_init);
            if (!v113)
            {
              v70 = (void *)OUTLINED_FUNCTION_27_50();
              OUTLINED_FUNCTION_18_45(v70);
              OUTLINED_FUNCTION_14();
              OUTLINED_FUNCTION_33();
              OUTLINED_FUNCTION_24_35();
              sub_1C02CD388(v44);
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_28();

              return;
            }
            v108[1] = v48;
            objc_msgSend(v50, sel_setDisambiguationAppsOrder_, 1);
            v52 = v119;
            v53 = v119 + *(int *)(v21 + 28);
            v54 = *(_QWORD *)v53;
            v55 = *(_BYTE *)(v53 + 8);
            sub_1C02CD3BC(v119, (uint64_t)v24);
            if ((v55 & 1) != 0)
              v54 = *(_QWORD *)(*(_QWORD *)&v24[*(int *)(v125 + 24)] + 16);
            v56 = v122;
            v108[0] = v44;
            v57 = (id)sub_1C02CD400((uint64_t)v24);
            v58 = v124;
            if (v54 == (int)v54)
              v57 = objc_msgSend(v50, sel_setNumDisambiguationApps_, v54);
            v109 = v50;
            v59 = *(_QWORD **)(v52 + v115);
            v60 = v59[2];
            if (v60)
            {
              v58 = (char *)v59[4];
              v61 = v59[5];
              v62 = v51 & 0xFFFFFFFFFFFFFF8;
              if (v51 >> 62)
                goto LABEL_43;
              v63 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
              OUTLINED_FUNCTION_47();
              OUTLINED_FUNCTION_45_0();
              OUTLINED_FUNCTION_65();
              for (; v63; v63 = sub_1C03047F8())
              {
                v115 = v62;
                v64 = 0;
                v65 = (uint64_t *)(v119 + *(int *)(v21 + 24));
                v125 = v51 & 0xC000000000000001;
                v119 = v51;
                v110 = v51 + 32;
                v51 = (unint64_t)(v59 + 7);
                v62 = *v65;
                v21 = v65[1];
                v121 = v63 - 1;
                --v60;
                while (1)
                {
                  if (v125)
                  {
                    v66 = (id)MEMORY[0x1C3B975EC](v64, v119);
                  }
                  else
                  {
                    if (v64 >= *(_QWORD *)(v115 + 16))
                      goto LABEL_42;
                    v66 = *(id *)(v110 + 8 * v64);
                  }
                  v67 = v66;
                  if (v58 == (char *)v62 && v61 == v21)
                  {
                    v69 = 1;
                    v61 = v21;
                  }
                  else
                  {
                    OUTLINED_FUNCTION_38_31();
                    v69 = sub_1C0304A08();
                  }
                  v56 = (char *)(v64 + 1);
                  OUTLINED_FUNCTION_29();
                  objc_msgSend(v67, sel_setIsDisambiguatedApp_, v69 & 1);
                  if (!((v64 + 1) >> 31))
                    objc_msgSend(v67, sel_setDisambiguationAppOrdinal_, (v64 + 1));

                  v58 = v124;
                  if (v60 == v64)
                  {
                    v51 = v119;
                    OUTLINED_FUNCTION_28();
                    v57 = (id)OUTLINED_FUNCTION_14();
                    v56 = v122;
                    goto LABEL_45;
                  }
                  if ((unint64_t)v56 >= v59[2])
                    break;
                  v56 = v122;
                  if (v121 == v64)
                  {
                    v51 = v119;
                    OUTLINED_FUNCTION_28();
                    v57 = (id)OUTLINED_FUNCTION_14();
                    goto LABEL_45;
                  }
                  v58 = *(char **)(v51 - 8);
                  v61 = *(_QWORD *)v51;
                  OUTLINED_FUNCTION_65();
                  ++v64;
                  v51 += 16;
                }
                __break(1u);
LABEL_42:
                __break(1u);
LABEL_43:
                OUTLINED_FUNCTION_47();
                OUTLINED_FUNCTION_45_0();
                OUTLINED_FUNCTION_65();
              }
              OUTLINED_FUNCTION_28();
              OUTLINED_FUNCTION_14();
              v57 = (id)OUTLINED_FUNCTION_29();
              v58 = v124;
            }
LABEL_45:
            (*(void (**)(_QWORD *__return_ptr, id))(v130 + 32))(v133, v57);
            OUTLINED_FUNCTION_0_0((uint64_t)&v134, (uint64_t)v137);
            OUTLINED_FUNCTION_0_0((uint64_t)v137, (uint64_t)&v138);
            v72 = v109;
            if ((v139 & 1) == 0)
              objc_msgSend(v109, sel_setTrialDeploymentId_, v138);
            OUTLINED_FUNCTION_0_0((uint64_t)&v135, (uint64_t)v136);
            OUTLINED_FUNCTION_0_0((uint64_t)v136, (uint64_t)v140);
            v73 = v113;
            p_base_props = (__objc2_prop_list **)(&ContactRankerInput + 64);
            if (v140[1])
            {
              v75 = (uint64_t)v127;
              sub_1C0301D08();
              sub_1C02CC874((uint64_t)v133);
              if (__swift_getEnumTagSinglePayload(v75, 1, v114) == 1)
              {
                sub_1C02CD4A0(v75, &qword_1ED728070);
              }
              else
              {
                v76 = v118;
                v77 = v126;
                v78 = v114;
                (*(void (**)(char *, uint64_t, uint64_t))(v118 + 32))(v126, v75, v114);
                sub_1C00447B0(0, (unint64_t *)&qword_1EF5B87F0);
                v79 = (uint64_t)v128;
                (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v128, v77, v78);
                v80 = v72;
                v81 = sub_1C0044824(v79);
                objc_msgSend(v80, sel_setTrialTreatmentId_, v81);

                p_base_props = &ContactRankerInput.base_props;
                v82 = *(void (**)(char *, uint64_t))(v76 + 8);
                v73 = v113;
                v82(v77, v78);
              }
            }
            objc_msgSend(v73, sel_setPlayOnThirdPartyAppSignals_, v120);
            objc_msgSend(v73, sel_setIndependentSignal_, v72);
            v83 = OUTLINED_FUNCTION_45_0();
            sub_1C02CD43C(v83, v73, &qword_1EF5C38F8);
            v84 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D99708]), (SEL)p_base_props[66]);
            if (v84)
            {
              v85 = v84;
              v86 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D99710]), (SEL)p_base_props[66]);
              if (v86)
              {
                v87 = v86;
                v88 = v129;
                sub_1C0301D50();
                sub_1C00447B0(0, (unint64_t *)&qword_1EF5B87F0);
                v89 = *(void (**)(char *, char *, uint64_t))(v118 + 16);
                v90 = v128;
                v91 = v88;
                v92 = v85;
                v89(v128, v91, v114);
                v93 = sub_1C0044824((uint64_t)v90);
                objc_msgSend(v87, sel_setInferenceId_, v93);

                v128 = v87;
                objc_msgSend(v85, sel_setEventMetadata_, v87);
                objc_msgSend(v85, sel_setVideoSmartAppSelectionDisambiguation_, v73);
                sub_1C0301D50();
                if (qword_1ED728430 != -1)
                  swift_once();
                v94 = OUTLINED_FUNCTION_9_0();
                __swift_project_value_buffer(v94, (uint64_t)qword_1ED729650);
                v95 = v114;
                v127 = (void (*)(uint64_t, char *, uint64_t))v89;
                v89(v58, v129, v114);
                v96 = sub_1C0303B80();
                v97 = sub_1C03042E8();
                v98 = v95;
                if (os_log_type_enabled(v96, v97))
                {
                  v99 = (uint8_t *)swift_slowAlloc();
                  v100 = swift_slowAlloc();
                  v119 = v51;
                  v132 = v100;
                  *(_DWORD *)v99 = 136315138;
                  sub_1C01D8F98();
                  v101 = sub_1C03049E4();
                  v131 = sub_1C003E6D8(v101, v102, &v132);
                  sub_1C03044B0();
                  OUTLINED_FUNCTION_14();
                  OUTLINED_FUNCTION_11_83();
                  _os_log_impl(&dword_1C0039000, v96, v97, "AppRankerSELFRecorder will emit SELF message with Inference ID %s", v99, 0xCu);
                  swift_arrayDestroy();
                  OUTLINED_FUNCTION_5();
                }
                OUTLINED_FUNCTION_11_83();

                v106 = v111;
                v107 = *(void (**)(void *, uint64_t))(v130 + 16);
                v127(v111, v56, v98);
                __swift_storeEnumTagSinglePayload(v106, 0, 1, v98);
                v107(v92, v106);
                OUTLINED_FUNCTION_14();
                OUTLINED_FUNCTION_28();

                OUTLINED_FUNCTION_19_48();
                sub_1C02CD388(v108[0]);
                OUTLINED_FUNCTION_14();
                OUTLINED_FUNCTION_33();
                OUTLINED_FUNCTION_24_35();
                sub_1C02CD388(v116);
                sub_1C02CD4A0(v106, &qword_1ED728070);
                ((void (*)(char *, uint64_t))v90)(v56, v98);
                ((void (*)(char *, uint64_t))v90)(v129, v98);
                return;
              }
              sub_1C02CD388(v116);
              OUTLINED_FUNCTION_29();
              OUTLINED_FUNCTION_14();
              OUTLINED_FUNCTION_24_35();
              v105 = (void *)OUTLINED_FUNCTION_44_30();
              OUTLINED_FUNCTION_18_45(v105);

            }
            else
            {
              v103 = (void *)OUTLINED_FUNCTION_27_50();
              OUTLINED_FUNCTION_18_45(v103);
              OUTLINED_FUNCTION_14();
              OUTLINED_FUNCTION_33();
              OUTLINED_FUNCTION_24_35();
              v104 = (void *)OUTLINED_FUNCTION_44_30();
              OUTLINED_FUNCTION_40_31(v104);
            }
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_28();

            OUTLINED_FUNCTION_19_48();
            return;
          }
          OUTLINED_FUNCTION_40_31(v116);
          OUTLINED_FUNCTION_19_48();
        }
        else
        {
          sub_1C02CD388(v36);
        }
        OUTLINED_FUNCTION_33();
        swift_bridgeObjectRelease();

      }
    }
  }
}

id sub_1C02CC58C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C02CC5BC((Class *)0x1E0D99848, a1);
}

id sub_1C02CC598@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C02CC5BC((Class *)0x1E0D99838, a1);
}

id sub_1C02CC5A4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C02CC5BC((Class *)0x1E0D99858, a1);
}

id sub_1C02CC5B0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C02CC5BC((Class *)0x1E0D99850, a1);
}

id sub_1C02CC5BC@<X0>(Class *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone(*a1), sel_init);
  *a2 = result;
  return result;
}

uint64_t sub_1C02CC5F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  double v23;
  uint64_t v24;
  double v27[5];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728360);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_19_2();
  v5 = v3 - v4;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27[-1] - v7;
  v9 = sub_1C0301CFC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_19_2();
  v13 = v11 - v12;
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v27[-1] - v16;
  if (((*(uint64_t (**)(uint64_t))(v0 + 96))(v15) & 1) == 0)
    return 0;
  v18 = (*(_QWORD *(**)(double *__return_ptr))(v0 + 32))(v27);
  (*(void (**)(_QWORD *))(v0 + 80))(v18);
  sub_1C022C688((uint64_t)v8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    v19 = sub_1C02CD4A0((uint64_t)v8, &qword_1ED728360);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v13, v8, v9);
    sub_1C0301C48();
    v21 = v20;
    v22 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    v19 = v22(v13, v9);
    if (v21 < v27[1])
    {
      v22((uint64_t)v17, v9);
      sub_1C02CC874((uint64_t)v27);
      return 0;
    }
  }
  v23 = (*(double (**)(uint64_t))(v1 + 64))(v19);
  sub_1C02CC874((uint64_t)v27);
  if (v23 >= v27[0])
  {
    OUTLINED_FUNCTION_25();
    return 0;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v5, v17, v9);
  v24 = 1;
  __swift_storeEnumTagSinglePayload(v5, 0, 1, v9);
  sub_1C022C81C(v5);
  OUTLINED_FUNCTION_25();
  return v24;
}

uint64_t sub_1C02CC7F0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1C02CC834()
{
  sub_1C02CC7F0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AppRankerSELFRecorder()
{
  return objc_opt_self();
}

uint64_t sub_1C02CC874(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C02CC89C()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(qword_1EF5C3930);
  result = sub_1C0303DB4();
  qword_1EF5C3800 = result;
  return result;
}

id sub_1C02CC8E0(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setClientHourOfDay_);
}

id sub_1C02CC8EC(void *a1, uint64_t a2)
{
  return objc_msgSend(a1, sel_setClientLanguage_, a2);
}

id sub_1C02CC8FC(void *a1, uint64_t a2)
{
  return objc_msgSend(a1, sel_setClientLocale_, a2);
}

id sub_1C02CC90C(void *a1, uint64_t a2)
{
  return objc_msgSend(a1, sel_setClientRegion_, a2);
}

id sub_1C02CC91C(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setDeviceClass_);
}

id sub_1C02CC928(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setNowPlayingState_);
}

uint64_t sub_1C02CC934()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3928);
  result = sub_1C0303DB4();
  qword_1EF5C3808 = result;
  return result;
}

id sub_1C02CC978(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setRelativeAppUsage1Day_);
}

id sub_1C02CC984(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setRelativeAppUsage7Day_);
}

id sub_1C02CC990(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setRelativeAppUsage14Day_);
}

id sub_1C02CC99C(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setNowPlayingAbsoluteCount2Min_);
}

id sub_1C02CC9A8(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setNowPlayingAbsoluteCount10Min_);
}

id sub_1C02CC9B4(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setNowPlayingAbsoluteCount1Hr_);
}

id sub_1C02CC9C0(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setNowPlayingAbsoluteCount6Hr_);
}

id sub_1C02CC9CC(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setNowPlayingAbsoluteCount1Day_);
}

id sub_1C02CC9D8(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setNowPlayingAbsoluteCount7Day_);
}

id sub_1C02CC9E4(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setNowPlayingAbsoluteCount28Day_);
}

id sub_1C02CC9F0(id result, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0)
    return objc_msgSend(result, sel_setSupportedMediaCategories_, a2);
  return result;
}

id sub_1C02CCA08(void *a1, uint64_t a2)
{
  return sub_1C02CCAF8(a1, a2, (SEL *)&selRef_setIsForegroundApp_);
}

id sub_1C02CCA14(void *a1, uint64_t a2)
{
  return sub_1C02CCAF8(a1, a2, (SEL *)&selRef_setIsLastForegroundApp_);
}

id sub_1C02CCA20(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setTimeSinceLastForegroundAppStartInSec_);
}

id sub_1C02CCA2C(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setTimeSinceLastForegroundAppEndInSec_);
}

id sub_1C02CCA38(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setEntityAbsoluteCount2Min_);
}

id sub_1C02CCA44(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setEntityAbsoluteCount10Min_);
}

id sub_1C02CCA50(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setEntityAbsoluteCount1Hr_);
}

id sub_1C02CCA5C(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setEntityAbsoluteCount6Hr_);
}

id sub_1C02CCA68(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setEntityAbsoluteCount1Day_);
}

id sub_1C02CCA74(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setEntityAbsoluteCount7Day_);
}

id sub_1C02CCA80(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setEntityAbsoluteCount28Day_);
}

id sub_1C02CCA8C(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setEntityPartialAppCount2Min_);
}

id sub_1C02CCA98(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setEntityPartialAppCount10Min_);
}

id sub_1C02CCAA4(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setEntityPartialAppCount1Hr_);
}

id sub_1C02CCAB0(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setEntityPartialAppCount6Hr_);
}

id sub_1C02CCABC(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setEntityPartialAppCount1Day_);
}

id sub_1C02CCAC8(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setEntityPartialAppCount7Day_);
}

id sub_1C02CCAD4(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setEntityPartialAppCount28Day_);
}

id sub_1C02CCAE0(void *a1, uint64_t a2)
{
  return sub_1C02CCAF8(a1, a2, (SEL *)&selRef_setIsNowPlayingApp_);
}

id sub_1C02CCAEC(void *a1, uint64_t a2)
{
  return sub_1C02CCAF8(a1, a2, (SEL *)&selRef_setIsLastNowPlayingApp_);
}

id sub_1C02CCAF8(id result, uint64_t a2, SEL *a3)
{
  uint64_t v3;

  if (a2 == 1)
  {
    v3 = 1;
  }
  else
  {
    if (a2)
      return result;
    v3 = 0;
  }
  return objc_msgSend(result, *a3, v3);
}

id sub_1C02CCB20(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setTimeSinceLastNowPlayingAppStartInSec_);
}

id sub_1C02CCB2C(void *a1, uint64_t a2)
{
  return sub_1C02CCB38(a1, a2, (SEL *)&selRef_setTimeSinceLastNowPlayingAppEndInSec_);
}

id sub_1C02CCB38(id result, uint64_t a2, SEL *a3)
{
  if (a2 == (int)a2)
    return objc_msgSend(result, *a3, a2);
  return result;
}

void sub_1C02CCB54(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  char v14;
  unint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  void *v22;
  id v23;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v5 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
  while (1)
  {
    v7 = *(v5 - 2);
    v6 = *(v5 - 1);
    v8 = *v5;
    v9 = (_QWORD *)*a3;
    swift_bridgeObjectRetain();
    v11 = sub_1C00B3C3C(v7, v6);
    v12 = v9[2];
    v13 = (v10 & 1) == 0;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1C0304A68();
      __break(1u);
      goto LABEL_20;
    }
    v14 = v10;
    if (v9[3] < v12 + v13)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727940);
      sub_1C03047C8();
      if ((v14 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v17 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v18 = (uint64_t *)(v17[6] + 16 * v11);
    *v18 = v7;
    v18[1] = v6;
    *(_QWORD *)(v17[7] + 8 * v11) = v8;
    v19 = v17[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_18;
    v5 += 3;
    v17[2] = v21;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1C0090928();
  v15 = sub_1C00B3C3C(v7, v6);
  if ((v14 & 1) != (v16 & 1))
    goto LABEL_19;
  v11 = v15;
  if ((v14 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v22 = (void *)swift_allocError();
  swift_willThrow();
  v23 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7281B0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_1C03046CC();
  sub_1C0303FD0();
  sub_1C03047B0();
  sub_1C0303FD0();
  sub_1C03047EC();
  __break(1u);
}

void sub_1C02CCE18(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void *v23;
  id v24;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  for (i = (uint64_t *)(swift_bridgeObjectRetain() + 48); ; i += 3)
  {
    v8 = *(i - 2);
    v7 = *(i - 1);
    v9 = *i;
    v10 = (_QWORD *)*a3;
    swift_bridgeObjectRetain();
    v12 = sub_1C00B3C3C(v8, v7);
    v13 = v10[2];
    v14 = (v11 & 1) == 0;
    if (__OFADD__(v13, v14))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1C0304A68();
      __break(1u);
      goto LABEL_20;
    }
    v15 = v11;
    if (v10[3] < v13 + v14)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8F28);
      sub_1C03047C8();
      if ((v15 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v18 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    v19 = (uint64_t *)(v18[6] + 16 * v12);
    *v19 = v8;
    v19[1] = v7;
    *(_QWORD *)(v18[7] + 8 * v12) = v9;
    v20 = v18[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_18;
    v18[2] = v22;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1C0090F28();
  v16 = sub_1C00B3C3C(v8, v7);
  if ((v15 & 1) != (v17 & 1))
    goto LABEL_19;
  v12 = v16;
  if ((v15 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v23 = (void *)swift_allocError();
  swift_willThrow();
  v24 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7281B0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_1C03046CC();
  sub_1C0303FD0();
  sub_1C03047B0();
  sub_1C0303FD0();
  sub_1C03047EC();
  __break(1u);
}

void sub_1C02CD0DC(uint64_t a1, char a2, _QWORD *a3, void (*a4)(void), uint64_t *a5)
{
  uint64_t v5;
  void **i;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  id v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  char v17;
  unint64_t v18;
  char v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  void *v25;
  id v26;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return;
  }
  for (i = (void **)(swift_bridgeObjectRetain() + 48); ; i += 3)
  {
    v9 = (uint64_t)*(i - 2);
    v8 = (uint64_t)*(i - 1);
    v10 = *i;
    v11 = (_QWORD *)*a3;
    swift_bridgeObjectRetain();
    v12 = v10;
    v14 = OUTLINED_FUNCTION_41_26();
    v15 = v11[2];
    v16 = (v13 & 1) == 0;
    if (__OFADD__(v15, v16))
    {
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      sub_1C0304A68();
      __break(1u);
      goto LABEL_21;
    }
    v17 = v13;
    if (v11[3] < v15 + v16)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v13 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      sub_1C03047C8();
      if ((v17 & 1) != 0)
        goto LABEL_15;
    }
LABEL_11:
    v20 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v14 >> 6) + 64) |= 1 << v14;
    v21 = (_QWORD *)(v20[6] + 16 * v14);
    *v21 = v9;
    v21[1] = v8;
    *(_QWORD *)(v20[7] + 8 * v14) = v12;
    v22 = v20[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_19;
    v20[2] = v24;
    a2 = 1;
    if (!--v5)
    {
      OUTLINED_FUNCTION_2();
      return;
    }
  }
  a4();
  OUTLINED_FUNCTION_41_26();
  OUTLINED_FUNCTION_37_33();
  if (!v19)
    goto LABEL_20;
  v14 = v18;
  if ((v17 & 1) == 0)
    goto LABEL_11;
LABEL_15:
  v25 = (void *)swift_allocError();
  swift_willThrow();
  v26 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7281B0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_2();
    return;
  }
LABEL_21:
  sub_1C03046CC();
  sub_1C0303FD0();
  sub_1C03047B0();
  sub_1C0303FD0();
  sub_1C03047EC();
  __break(1u);
}

void *sub_1C02CD388(void *result)
{
  if (result)
  {

    OUTLINED_FUNCTION_14();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C02CD3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppRankSelectionEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C02CD400(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppRankSelectionEvent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C02CD43C(uint64_t a1, void *a2, unint64_t *a3)
{
  id v4;

  sub_1C00447B0(0, a3);
  v4 = (id)sub_1C0304120();
  OUTLINED_FUNCTION_14();
  objc_msgSend(a2, sel_setDependentSignals_, v4);

}

uint64_t sub_1C02CD4A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_51_23(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C02CD4D8()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C02CD4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C02CB760(a1, a2, *(void **)(v2 + 16));
}

double sub_1C02CD504@<D0>(uint64_t a1@<X8>)
{
  return sub_1C02CB898(a1);
}

uint64_t OUTLINED_FUNCTION_0_147()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v0 + 8 * (v2 >> 6) + 64) |= 1 << v2;
  v5 = (_QWORD *)(*(_QWORD *)(v0 + 48) + 16 * v2);
  *v5 = v3;
  v5[1] = v1;
  return *(_QWORD *)(v0 + 56) + *(_QWORD *)(*(_QWORD *)(v4 - 160) + 72) * v2;
}

unint64_t OUTLINED_FUNCTION_3_137()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C00B3C3C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_10_80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 136), v1);
}

uint64_t OUTLINED_FUNCTION_11_83()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 296) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_12_68()
{
  return sub_1C03047BC();
}

void *OUTLINED_FUNCTION_18_45(void *result)
{
  return sub_1C02CD388(result);
}

void OUTLINED_FUNCTION_19_48()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_21_51()
{
  return swift_unexpectedError();
}

void OUTLINED_FUNCTION_24_35()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_25_36()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_27_50()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 312);
}

void *OUTLINED_FUNCTION_40_31(void *result)
{
  return sub_1C02CD388(result);
}

unint64_t OUTLINED_FUNCTION_41_26()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C00B3C3C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_45_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_48_25()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t sub_1C02CD628()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C02CD698(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1C02CD770(a1);
  return v2;
}

uint64_t sub_1C02CD6D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_1_3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1 + *(_QWORD *)(v5 + 88), v3);
  v6 = sub_1C03049E4();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return v6;
}

uint64_t sub_1C02CD770(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 88), a1);
  return v1;
}

uint64_t sub_1C02CD7A0()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  return v0;
}

uint64_t sub_1C02CD7CC()
{
  sub_1C02CD7A0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Box(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Box);
}

uint64_t sub_1C02CD7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v4 = *(_QWORD *)(v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v16 - v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12((char *)&v16 - v10, v9 + *(_QWORD *)(*(_QWORD *)v9 + 88), v4);
  v12(v8, a2 + *(_QWORD *)(*(_QWORD *)a2 + 88), v4);
  v13 = sub_1C0303E80();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  v14(v11, v4);
  return v13 & 1;
}

uint64_t sub_1C02CD8F0(uint64_t *a1, uint64_t *a2)
{
  return sub_1C02CD7FC(*a1, *a2);
}

uint64_t sub_1C02CD900(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + *(_QWORD *)(v6 + 88), v2);
  sub_1C0303DFC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1C02CD9A4()
{
  _BYTE v1[72];

  sub_1C0304B04();
  sub_1C02CD900((uint64_t)v1);
  return sub_1C0304B40();
}

uint64_t sub_1C02CD9E8()
{
  return sub_1C02CD9A4();
}

uint64_t sub_1C02CDA0C(uint64_t a1)
{
  return sub_1C02CD900(a1);
}

uint64_t sub_1C02CDA30()
{
  _BYTE v1[72];

  sub_1C0304B04();
  sub_1C02CD900((uint64_t)v1);
  return sub_1C0304B40();
}

uint64_t sub_1C02CDA74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + *(_QWORD *)(v6 + 88), v2);
  sub_1C0303DE4();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1C02CDB30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  _BYTE v6[40];

  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_1_3();
  sub_1C0048FE0(v4, (uint64_t)v6);
  sub_1C030421C();
  result = __swift_destroy_boxed_opaque_existential_0Tm(a1);
  if (!v1)
    return sub_1C02CD698(v2);
  return result;
}

uint64_t sub_1C02CDBD4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1C02CDB30(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1C02CDC00(uint64_t a1)
{
  return sub_1C02CDA74(a1);
}

uint64_t sub_1C02CDC24(uint64_t a1, uint64_t a2)
{
  return sub_1C02CD6D4(*(_QWORD *)(a2 - 8));
}

uint64_t sub_1C02CDC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1C3B9827C](&unk_1C03252B8, a1, &v4);
}

ValueMetadata *type metadata accessor for PLUSFeature()
{
  return &type metadata for PLUSFeature;
}

uint64_t sub_1C02CDC90(uint64_t a1)
{
  uint64_t v1;
  uint64_t matched;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  matched = type metadata accessor for ContactMatchRuntimeData(0);
  v18 = *(_QWORD *)(matched - 8);
  v4 = MEMORY[0x1E0C80A78](matched);
  v20 = (uint64_t)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v16 - v7;
  v9 = MEMORY[0x1E0DEE9D8];
  v21 = MEMORY[0x1E0DEE9D8];
  v19 = *(_QWORD *)(a1 + 16);
  if (v19)
  {
    v16[1] = v1;
    v10 = 0;
    v17 = a1;
    while (v10 < *(_QWORD *)(a1 + 16))
    {
      v11 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
      v12 = *(_QWORD *)(v18 + 72);
      sub_1C004CC40(a1 + v11 + v12 * v10, (uint64_t)v8, type metadata accessor for ContactMatchRuntimeData);
      v13 = &v8[*(int *)(matched + 20)];
      if (v13[*(int *)(type metadata accessor for ContactResolver.SignalSet(0) + 204)] == 1)
      {
        sub_1C009DEB0((uint64_t)v8, v20);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1C00B1B9C();
        v14 = v21;
        v15 = *(_QWORD *)(v21 + 16);
        if (v15 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          sub_1C00B1B9C();
          v14 = v21;
        }
        *(_QWORD *)(v14 + 16) = v15 + 1;
        result = sub_1C009DEB0(v20, v14 + v11 + v15 * v12);
        a1 = v17;
      }
      else
      {
        result = sub_1C0045840((uint64_t)v8, type metadata accessor for ContactMatchRuntimeData);
      }
      if (v19 == ++v10)
      {
        v9 = v21;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

void sub_1C02CDE78(void *a1, char a2)
{
  void *v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  char v9;
  uint64_t v10;
  os_log_type_t v11;
  _WORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  _WORD *v17;

  if (a2 == 2)
  {
    if (qword_1ED727970 != -1)
      swift_once();
    v3 = OUTLINED_FUNCTION_9_0();
    OUTLINED_FUNCTION_7(v3, (uint64_t)&unk_1ED7295C8);
    v4 = OUTLINED_FUNCTION_42_0();
    if (OUTLINED_FUNCTION_20_7(v4))
    {
      v5 = (_WORD *)OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_22_1(v5);
      v8 = "PLUS: SiriVocab suggestion querying (all domains): false - Unsupported request type";
LABEL_15:
      OUTLINED_FUNCTION_2_133(&dword_1C0039000, v6, v7, v8);
LABEL_16:
      OUTLINED_FUNCTION_5();
    }
  }
  else
  {
    v2 = a1;
    sub_1C0060AAC();
    if ((v9 & 1) != 0)
    {
      if (qword_1ED727970 != -1)
        swift_once();
      v10 = OUTLINED_FUNCTION_9_0();
      OUTLINED_FUNCTION_7(v10, (uint64_t)&unk_1ED7295C8);
      v11 = OUTLINED_FUNCTION_42_0();
      if (OUTLINED_FUNCTION_20_7(v11))
      {
        v12 = (_WORD *)OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_22_1(v12);
        OUTLINED_FUNCTION_2_133(&dword_1C0039000, v13, v14, "PLUS:  SiriVocab suggestion querying (all domains): true - Trial factor isPICSEnabledAtRuntimeInSiriVocab");
        goto LABEL_16;
      }
    }
    else
    {
      if (qword_1ED727970 != -1)
        swift_once();
      v15 = OUTLINED_FUNCTION_9_0();
      OUTLINED_FUNCTION_7(v15, (uint64_t)&unk_1ED7295C8);
      v16 = OUTLINED_FUNCTION_42_0();
      if (OUTLINED_FUNCTION_20_7(v16))
      {
        v17 = (_WORD *)OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_22_1(v17);
        v8 = "PLUS:  SiriVocab suggestion querying (all domains): false - Unsupported device";
        goto LABEL_15;
      }
    }
  }

  OUTLINED_FUNCTION_37_0();
}

void OUTLINED_FUNCTION_2_133(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 2u);
}

BOOL OUTLINED_FUNCTION_7_99(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

uint64_t OUTLINED_FUNCTION_14_70()
{
  return sub_1C0304A08();
}

uint64_t sub_1C02CE06C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C02CE0DC()
{
  return sub_1C0303DFC();
}

uint64_t sub_1C02CE108()
{
  return sub_1C0303E80() & 1;
}

uint64_t sub_1C02CE14C()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  return v0;
}

uint64_t sub_1C02CE17C()
{
  sub_1C02CE14C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WrapperClass(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WrapperClass);
}

uint64_t sub_1C02CE1A8()
{
  sub_1C0304B04();
  sub_1C02CE0DC();
  return sub_1C0304B40();
}

uint64_t sub_1C02CE1E4()
{
  return sub_1C02CE1A8();
}

uint64_t sub_1C02CE204()
{
  return sub_1C02CE0DC();
}

uint64_t sub_1C02CE224()
{
  sub_1C0304B04();
  sub_1C02CE0DC();
  return sub_1C0304B40();
}

uint64_t sub_1C02CE260()
{
  return sub_1C02CE108();
}

uint64_t sub_1C02CE26C(uint64_t a1, char a2)
{
  uint64_t v2;
  id v4;

  if ((a2 & 1) != 0)
  {
    v4 = 0;
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D38]), sel_init);
    objc_msgSend(v4, sel_setCountLimit_, a1);
  }
  *(_QWORD *)(v2 + 16) = v4;
  return v2;
}

uint64_t sub_1C02CE2D0()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(void **)(v0 + 16);
  if (!v1)
    return OUTLINED_FUNCTION_0_148();
  v2 = v1;
  v3 = (void *)sub_1C0303E8C();
  v4 = objc_msgSend(v2, sel_objectForKey_, v3);
  if (v4)
  {
    v5 = v4;

    v6 = v5[2];
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_0_148();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3B00);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v6;
    swift_bridgeObjectRetain();
    objc_msgSend(v2, sel_setObject_forKey_, v8, v3);

  }
  swift_release();
  return v6;
}

uint64_t sub_1C02CE3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t inited;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v18;

  sub_1C02CE6C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3AF0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C0305B60;
  v5 = (void *)*MEMORY[0x1E0CCE0C0];
  *(_QWORD *)(v4 + 32) = *MEMORY[0x1E0CCE0C0];
  v6 = v5;
  v7 = sub_1C02CE568();
  sub_1C02CE704(a1, a2, v7);
  v18 = MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3AF8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0309BD0;
  v9 = (void *)*MEMORY[0x1E0CCE038];
  v10 = (void *)*MEMORY[0x1E0CCE048];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CCE038];
  *(_QWORD *)(inited + 40) = v10;
  v11 = (void *)*MEMORY[0x1E0CCE078];
  v12 = (void *)*MEMORY[0x1E0CCE090];
  *(_QWORD *)(inited + 48) = *MEMORY[0x1E0CCE078];
  *(_QWORD *)(inited + 56) = v12;
  v13 = v9;
  v14 = v10;
  v15 = v11;
  v16 = v12;
  sub_1C0120368();
  sub_1C030442C();
  swift_bridgeObjectRelease();

  return v18;
}

id sub_1C02CE568()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  type metadata accessor for NLTagScheme(0);
  v1 = (void *)sub_1C0304120();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithTagSchemes_, v1);

  return v2;
}

uint64_t sub_1C02CE5DC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1)
  {
    v7 = a1;
    if ((sub_1C0188598((uint64_t)v7, a4) & 1) == 0)
    {
      v8 = sub_1C0304090();
      v9 = MEMORY[0x1C3B96E30](v8);
      v11 = v10;
      swift_bridgeObjectRelease();
      sub_1C00ABB7C();
      v12 = *(_QWORD *)(*a5 + 16);
      sub_1C00ABD74();
      v13 = *a5;
      *(_QWORD *)(v13 + 16) = v12 + 1;
      v14 = v13 + 16 * v12;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
    }

  }
  return 1;
}

uint64_t type metadata accessor for StopwordsRemover()
{
  return objc_opt_self();
}

void sub_1C02CE6B8()
{
  JUMPOUT(0x1C3B9827CLL);
}

unint64_t sub_1C02CE6C8()
{
  unint64_t result;

  result = qword_1EF5C3AE8;
  if (!qword_1EF5C3AE8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF5C3AE8);
  }
  return result;
}

void sub_1C02CE704(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1C0303E8C();
  objc_msgSend(a3, sel_setString_, v4);

}

uint64_t sub_1C02CE748(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C02CE5DC(a1, a2, a3, *(_QWORD *)(v3 + 16), *(uint64_t **)(v3 + 24));
}

uint64_t OUTLINED_FUNCTION_0_148()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C02CE3C4(v1, v0);
}

uint64_t sub_1C02CE760(uint64_t a1, void (*a2)(unint64_t, unint64_t, uint64_t))
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t result;
  double v9;
  double v10;
  uint64_t inited;
  uint64_t v12;

  v4 = *(_QWORD **)(a1 + *(int *)(type metadata accessor for AppRankEvent(0) + 24));
  v5 = type metadata accessor for AppRankSelectionEvent(0);
  v6 = sub_1C0173780(*(_QWORD *)(a1 + *(int *)(v5 + 24)), *(_QWORD *)(a1 + *(int *)(v5 + 24) + 8), v4);
  if ((v7 & 1) == 0 && __OFADD__(v6, 1))
    __break(1u);
  result = sub_1C0301C48();
  v10 = round(v9 * 1000.0);
  if ((~*(_QWORD *)&v10 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v10 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v10 < 9.22337204e18)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED728180);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C03067E0;
    strcpy((char *)(inited + 32), "numAppsShown");
    *(_BYTE *)(inited + 45) = 0;
    *(_WORD *)(inited + 46) = -5120;
    *(_QWORD *)(inited + 48) = sub_1C030427C();
    *(_QWORD *)(inited + 56) = 0xD000000000000013;
    *(_QWORD *)(inited + 64) = 0x80000001C0336920;
    *(_QWORD *)(inited + 72) = sub_1C030427C();
    *(_QWORD *)(inited + 80) = 0xD00000000000001CLL;
    *(_QWORD *)(inited + 88) = 0x80000001C0336940;
    *(_QWORD *)(inited + 96) = sub_1C030427C();
    sub_1C0071A20();
    v12 = sub_1C0303DB4();
    a2(0xD00000000000001FLL, 0x80000001C0336960, v12);
    return swift_bridgeObjectRelease();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t initializeWithCopy for DateTimeSuggestionGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  __int128 v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = a2 + 32;
  v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  swift_retain();
  v7(a1 + 32, v4, v6);
  v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 72, a2 + 72);
  return a1;
}

uint64_t assignWithCopy for DateTimeSuggestionGenerator(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 72), (uint64_t *)(a2 + 72));
  return a1;
}

void *__swift_memcpy112_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

uint64_t assignWithTake for DateTimeSuggestionGenerator(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(a1 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  __swift_destroy_boxed_opaque_existential_0Tm(a1 + 72);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for DateTimeSuggestionGenerator(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DateTimeSuggestionGenerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DateTimeSuggestionGenerator()
{
  return &type metadata for DateTimeSuggestionGenerator;
}

uint64_t sub_1C02CEC08(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  int64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  void (*v19)(_BYTE *, _QWORD);
  unint64_t v20;
  _BYTE v21[32];
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v20 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
    v2 = sub_1C03045F4();
  else
    v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1C00B2404(0, v2 & ~(v2 >> 63), 0);
    if (v20)
    {
      result = sub_1C03045B8();
      v5 = 1;
    }
    else
    {
      result = sub_1C00824B4(a1);
      v5 = v6 & 1;
    }
    v22 = result;
    v23 = v4;
    v24 = v5;
    if (v2 < 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
    }
    else
    {
      do
      {
        v8 = v22;
        v7 = v23;
        v9 = v24;
        v10 = *(_BYTE *)(sub_1C00C73A0(v22, v23, v24, a1) + 51);
        swift_release();
        v11 = v25;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1C00B2404(0, *(_QWORD *)(v11 + 16) + 1, 1);
          v11 = v25;
        }
        v13 = *(_QWORD *)(v11 + 16);
        v12 = *(_QWORD *)(v11 + 24);
        if (v13 >= v12 >> 1)
        {
          result = (uint64_t)sub_1C00B2404((char *)(v12 > 1), v13 + 1, 1);
          v11 = v25;
        }
        *(_QWORD *)(v11 + 16) = v13 + 1;
        *(_BYTE *)(v11 + v13 + 32) = v10;
        if (v20)
        {
          if ((v9 & 1) == 0)
            goto LABEL_23;
          if (sub_1C03045D0())
            swift_isUniquelyReferenced_nonNull_native();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BDEE0);
          v19 = (void (*)(_BYTE *, _QWORD))sub_1C0304264();
          sub_1C030463C();
          v19(v21, 0);
        }
        else
        {
          v14 = sub_1C0082610(v8, v7, v9, a1);
          v16 = v15;
          v18 = v17;
          sub_1C00A6E5C(v8, v7, v9);
          v22 = v14;
          v23 = v16;
          v24 = v18 & 1;
        }
        --v2;
      }
      while (v2);
      sub_1C00A6E5C(v22, v23, v24);
      return v25;
    }
  }
  return result;
}

uint64_t sub_1C02CEE48()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C02CEE6C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return swift_deallocObject();
}

#error "1C02CEF4C: call analysis failed (funcsize=100)"

unint64_t sub_1C02CF020(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  char v2;
  unint64_t v3;

  v2 = *(_BYTE *)(isStackAllocationSafe + 32);
  v3 = (unint64_t)((1 << v2) + 63) >> 6;
  if ((v2 & 0x3Fu) > 0xD)
  {
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) == 0)
    {
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_77_3();
      OUTLINED_FUNCTION_2_134();
      OUTLINED_FUNCTION_26_20();
      OUTLINED_FUNCTION_5();
    }
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  OUTLINED_FUNCTION_77_3();
  OUTLINED_FUNCTION_2_134();
  OUTLINED_FUNCTION_26_20();
  if (v1)
    swift_willThrow();
  return v3;
}

void sub_1C02CF12C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_20;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_24;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_24;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
          break;
      }
    }
LABEL_19:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_20:
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v14) + 53) == 1)
    {
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_1C0158370(a1, a2, v6, a3);
        return;
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_24;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

uint64_t OUTLINED_FUNCTION_0_149()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

void OUTLINED_FUNCTION_2_134()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;

  sub_1C02CF12C(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_7_100@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_1C02CF2E0(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  unsigned __int8 *v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;

  v2 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1C030475C();
    v5 = (unsigned __int8 *)(a1 + 105);
    v17 = v2;
    do
    {
      v21 = *(v5 - 57);
      v6 = *(_QWORD *)(v5 - 41);
      v18 = *(_QWORD *)(v5 - 49);
      v19 = *(_QWORD *)(v5 - 33);
      v7 = *(_QWORD *)(v5 - 25);
      v20 = *(v5 - 1);
      v9 = *v5;
      v5 += 80;
      v8 = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      objc_msgSend(v2, sel_mutableCopy);
      sub_1C0304570();
      swift_unknownObjectRelease();
      sub_1C0132288();
      swift_dynamicCast();
      v10 = 1;
      if ((v9 & 1) == 0)
        v10 = 2;
      if (v8 == 2)
        v11 = 0;
      else
        v11 = v10;
      swift_bridgeObjectRetain();
      v12 = (void *)sub_1C02CF864(v18, v6);
      v13 = objc_allocWithZone(MEMORY[0x1E0CBDA60]);
      v14 = sub_1C02CFDE4(v19, v7, v21, v12, 0, v11, v20);
      objc_msgSend(v22, sel_setPersonHandle_, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1C0304738();
      sub_1C0304768();
      v2 = v17;
      sub_1C0304774();
      sub_1C0304744();
      --v3;
    }
    while (v3);
    v15 = v23;

  }
  else
  {

    return MEMORY[0x1E0DEE9D8];
  }
  return v15;
}

unint64_t Contact.toINPersonExpansion()@<X0>(uint64_t a1@<X8>)
{
  unint64_t result;
  unint64_t v3;
  uint64_t v4;
  id v5;
  unint64_t v6;

  result = Contact.makeINPersons(explode:)(1);
  v3 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1C03047F8();
    result = OUTLINED_FUNCTION_14();
  }
  else
  {
    v4 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4 > 1)
    goto LABEL_8;
  if ((v3 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x1C3B975EC](0, v3);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v3 + 32);
LABEL_7:
    v6 = (unint64_t)v5;
    result = OUTLINED_FUNCTION_14();
    v3 = v6;
LABEL_8:
    *(_QWORD *)a1 = v3;
    *(_BYTE *)(a1 + 8) = v4 > 1;
    return result;
  }
  __break(1u);
  return result;
}

id *Contact.INPersonExpansion.first.getter()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)v0;
  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
  {
    if ((v1 & 0xC000000000000001) == 0)
    {
      if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
        return (id *)*(id *)(v1 + 32);
      __break(1u);
    }
    JUMPOUT(0x1C3B975ECLL);
  }
  return (id *)(id)v1;
}

void sub_1C02CF5E8(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  v2 = a1;
  if (a1 >= 3)
  {
    if (qword_1ED727970 != -1)
      swift_once();
    v4 = sub_1C0303B98();
    __swift_project_value_buffer(v4, (uint64_t)&unk_1ED7295C8);
    v5 = sub_1C0303B80();
    v6 = sub_1C03042F4();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v7 = 134217984;
      sub_1C03044B0();
      _os_log_impl(&dword_1C0039000, v5, v6, "unhandled INPersonHandleType: %ld", v7, 0xCu);
      MEMORY[0x1C3B98378](v7, -1, -1);
    }

    v2 = 0;
  }
  *a2 = v2;
}

uint64_t sub_1C02CF704()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_52_1();
  if (*(_BYTE *)(v0 + *(int *)(v1 + 92)) == 1)
    return 1;
  if (*(_BYTE *)(v0 + *(int *)(v1 + 84)))
    return 3;
  return 0;
}

INPersonHandle __swiftcall ContactHandle.toINPersonHandle()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(unsigned __int8 *)(v0 + 73);
  v7 = 1;
  if ((v6 & 1) == 0)
    v7 = 2;
  if (v6 == 2)
    v8 = 0;
  else
    v8 = v7;
  swift_bridgeObjectRetain();
  v9 = (void *)sub_1C02CF864(v2, v3);
  v10 = objc_allocWithZone(MEMORY[0x1E0CBDA60]);
  return (INPersonHandle)OUTLINED_FUNCTION_29_38(v4, v5, v1, v9, 0, v8);
}

void *Contact.INPersonExpansion.all.getter()
{
  uint64_t v0;
  void *v1;
  char v2;
  void *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *(void **)v0;
  v2 = *(_BYTE *)(v0 + 8);
  v3 = *(void **)v0;
  if ((v2 & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727640);
    v4 = OUTLINED_FUNCTION_0();
    *(_OWORD *)(v4 + 16) = xmmword_1C030A730;
    *(_QWORD *)(v4 + 32) = v1;
    v6 = v4;
    sub_1C0304150();
    v3 = (void *)v6;
  }
  sub_1C02CFEC0(v1, v2);
  return v3;
}

uint64_t sub_1C02CF864(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;
  char v7;
  void *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v16;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return 0;
  if (qword_1EF5B8058 != -1)
    swift_once();
  v5 = off_1EF5C3B10;
  if (*((_QWORD *)off_1EF5C3B10 + 2))
  {
    swift_bridgeObjectRetain();
    v6 = sub_1C00B3C3C(a1, a2);
    if ((v7 & 1) != 0)
    {
      v8 = *(void **)(v5[7] + 8 * v6);
      v9 = v8;
      swift_bridgeObjectRelease();
      return (uint64_t)v8;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1ED727970 != -1)
    swift_once();
  v10 = sub_1C0303B98();
  __swift_project_value_buffer(v10, (uint64_t)&unk_1ED7295C8);
  swift_bridgeObjectRetain_n();
  v11 = sub_1C0303B80();
  v12 = sub_1C03042E8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v16 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_bridgeObjectRetain();
    sub_1C003E6D8(a1, a2, &v16);
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0039000, v11, v12, "no predefined INPersonHandleLabel found for '%s'", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v14, -1, -1);
    MEMORY[0x1C3B98378](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return sub_1C0303E8C();
}

void *sub_1C02CFAA0()
{
  uint64_t inited;
  uint64_t v1;
  void **v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void **v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void **v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void **v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void **v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void **v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *result;
  id v59;
  void *v60;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3B18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0325480;
  v1 = sub_1C0303EB0();
  v2 = (void **)MEMORY[0x1E0CBD550];
  *(_QWORD *)(inited + 32) = v1;
  *(_QWORD *)(inited + 40) = v3;
  v4 = *v2;
  *(_QWORD *)(inited + 48) = *v2;
  v5 = sub_1C0303EB0();
  v6 = (void **)MEMORY[0x1E0CBD588];
  *(_QWORD *)(inited + 56) = v5;
  *(_QWORD *)(inited + 64) = v7;
  v8 = *v6;
  *(_QWORD *)(inited + 72) = *v6;
  v9 = sub_1C0303EB0();
  v10 = (void **)MEMORY[0x1E0CBD570];
  *(_QWORD *)(inited + 80) = v9;
  *(_QWORD *)(inited + 88) = v11;
  v12 = *v10;
  *(_QWORD *)(inited + 96) = *v10;
  v13 = sub_1C0303EB0();
  v14 = (void **)MEMORY[0x1E0CBD598];
  *(_QWORD *)(inited + 104) = v13;
  *(_QWORD *)(inited + 112) = v15;
  v16 = *v14;
  *(_QWORD *)(inited + 120) = *v14;
  v17 = sub_1C0303EB0();
  v18 = (void **)MEMORY[0x1E0CBD568];
  *(_QWORD *)(inited + 128) = v17;
  *(_QWORD *)(inited + 136) = v19;
  v20 = *v18;
  *(_QWORD *)(inited + 144) = *v18;
  v21 = sub_1C0303EB0();
  v22 = (void **)MEMORY[0x1E0CBD560];
  *(_QWORD *)(inited + 152) = v21;
  *(_QWORD *)(inited + 160) = v23;
  v24 = *v22;
  *(_QWORD *)(inited + 168) = *v22;
  v25 = sub_1C0303EB0();
  v26 = (void **)MEMORY[0x1E0CBD558];
  *(_QWORD *)(inited + 176) = v25;
  *(_QWORD *)(inited + 184) = v27;
  v28 = *v26;
  *(_QWORD *)(inited + 192) = *v26;
  v29 = sub_1C0303EB0();
  v30 = (void **)MEMORY[0x1E0CBD590];
  *(_QWORD *)(inited + 200) = v29;
  *(_QWORD *)(inited + 208) = v31;
  v32 = *v30;
  *(_QWORD *)(inited + 216) = *v30;
  v33 = sub_1C0303EB0();
  v34 = (void **)MEMORY[0x1E0CBD578];
  *(_QWORD *)(inited + 224) = v33;
  *(_QWORD *)(inited + 232) = v35;
  v36 = *v34;
  *(_QWORD *)(inited + 240) = *v34;
  *(_QWORD *)(inited + 248) = sub_1C0303EB0();
  *(_QWORD *)(inited + 256) = v37;
  v38 = (void *)*MEMORY[0x1E0CBD580];
  *(_QWORD *)(inited + 264) = *MEMORY[0x1E0CBD580];
  *(_QWORD *)(inited + 272) = 1701670760;
  v60 = v38;
  *(_QWORD *)(inited + 280) = 0xE400000000000000;
  *(_QWORD *)(inited + 288) = v4;
  *(_QWORD *)(inited + 296) = 1802661751;
  *(_QWORD *)(inited + 304) = 0xE400000000000000;
  *(_QWORD *)(inited + 312) = v8;
  *(_QWORD *)(inited + 320) = 0x726568746FLL;
  *(_QWORD *)(inited + 328) = 0xE500000000000000;
  *(_QWORD *)(inited + 336) = v12;
  *(_QWORD *)(inited + 344) = 0x656E6F687069;
  *(_QWORD *)(inited + 352) = 0xE600000000000000;
  *(_QWORD *)(inited + 360) = v16;
  *(_QWORD *)(inited + 368) = 0x656C69626F6DLL;
  *(_QWORD *)(inited + 376) = 0xE600000000000000;
  *(_QWORD *)(inited + 384) = v20;
  *(_QWORD *)(inited + 392) = 1852399981;
  *(_QWORD *)(inited + 400) = 0xE400000000000000;
  *(_QWORD *)(inited + 408) = v24;
  *(_QWORD *)(inited + 416) = 0x786166656D6F68;
  *(_QWORD *)(inited + 424) = 0xE700000000000000;
  *(_QWORD *)(inited + 432) = v28;
  *(_QWORD *)(inited + 440) = 0x7861666B726F77;
  *(_QWORD *)(inited + 448) = 0xE700000000000000;
  *(_QWORD *)(inited + 456) = v32;
  *(_QWORD *)(inited + 464) = 0x7265676170;
  *(_QWORD *)(inited + 472) = 0xE500000000000000;
  *(_QWORD *)(inited + 480) = v36;
  *(_QWORD *)(inited + 488) = 0x6C6F6F686373;
  *(_QWORD *)(inited + 496) = 0xE600000000000000;
  *(_QWORD *)(inited + 504) = v38;
  type metadata accessor for INPersonHandleLabel(0);
  v59 = v4;
  v39 = v8;
  v40 = v12;
  v41 = v16;
  v42 = v20;
  v43 = v24;
  v44 = v28;
  v45 = v32;
  v46 = v36;
  v47 = v60;
  v48 = v59;
  v49 = v39;
  v50 = v40;
  v51 = v41;
  v52 = v42;
  v53 = v43;
  v54 = v44;
  v55 = v45;
  v56 = v46;
  v57 = v47;
  result = (void *)sub_1C0303DB4();
  off_1EF5C3B10 = result;
  return result;
}

id sub_1C02CFDE4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char a7)
{
  void *v7;
  void *v13;
  id v14;

  v13 = (void *)sub_1C0303E8C();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v7, sel_initWithValue_type_label_emergencyType_faceTimeType_suggested_, v13, a3, a4, a5, a6, a7 & 1);

  return v14;
}

unint64_t sub_1C02CFE7C(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_1C02CFE9C(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

id sub_1C02CFEC0(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    return (id)swift_bridgeObjectRetain();
  else
    return a1;
}

uint64_t _s17INPersonExpansionOwCP(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1C02CFEC0(*(void **)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void _s17INPersonExpansionOwxx(uint64_t a1)
{
  sub_1C02CFF20(*(void **)a1, *(_BYTE *)(a1 + 8));
}

void sub_1C02CFF20(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    swift_bridgeObjectRelease();
  else

}

uint64_t _s17INPersonExpansionOwca(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1C02CFEC0(*(void **)a2, v4);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1C02CFF20(v5, v6);
  return a1;
}

uint64_t _s17INPersonExpansionOwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1C02CFF20(v5, v6);
  return a1;
}

uint64_t _s17INPersonExpansionOwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s17INPersonExpansionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C02D003C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1C02D0044(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for Contact.INPersonExpansion()
{
  return &type metadata for Contact.INPersonExpansion;
}

uint64_t OUTLINED_FUNCTION_0_150()
{
  return sub_1C0304A08();
}

uint64_t OUTLINED_FUNCTION_1_137()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_2_135()
{
  return sub_1C030454C();
}

uint64_t OUTLINED_FUNCTION_3_138()
{
  return sub_1C0304090();
}

uint64_t OUTLINED_FUNCTION_5_98()
{
  return sub_1C0303FA0();
}

uint64_t OUTLINED_FUNCTION_6_103()
{
  return sub_1C0304078();
}

uint64_t OUTLINED_FUNCTION_7_101()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_8_79()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_10_81()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_12_69()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = v1;
  *(_QWORD *)(v2 - 88) = v0;
  *(_QWORD *)(v2 - 112) = 31868;
  *(_QWORD *)(v2 - 104) = 0xE200000000000000;
}

uint64_t OUTLINED_FUNCTION_13_69()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_14_71()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1C0066A24(v1, v0);
}

uint64_t OUTLINED_FUNCTION_15_59()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1C0066A24(v0, v1);
}

void OUTLINED_FUNCTION_16_58()
{
  JUMPOUT(0x1C3B96E30);
}

uint64_t OUTLINED_FUNCTION_17_60()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_18_46()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_19_49()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_22_54()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_24_36(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

id OUTLINED_FUNCTION_29_38(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  char v6;

  return sub_1C02CFDE4(a1, a2, a3, a4, a5, a6, v6);
}

uint64_t OUTLINED_FUNCTION_30_40()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C0065660(v0, v1);
}

uint64_t OUTLINED_FUNCTION_32_35()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C0065660(v0, v1);
}

uint64_t sub_1C02D0210@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  char v9;
  uint64_t v10;

  v2 = v1;
  v4 = sub_1C030283C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if ((_DWORD)result == *MEMORY[0x1E0DA0860])
  {
    *a1 = 0;
    return result;
  }
  if ((_DWORD)result == *MEMORY[0x1E0DA0848])
  {
    v9 = 1;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DA0838])
  {
    v9 = 3;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DA0828])
  {
    v9 = 4;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DA0830])
  {
    v9 = 5;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DA0818])
  {
    v9 = 7;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DA0850])
  {
    v9 = 6;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DA0870])
  {
    v9 = 2;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DA0868])
  {
    v9 = 8;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DA0840])
  {
    v9 = 9;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0DA0858])
  {
    v9 = 11;
  }
  else
  {
    if ((_DWORD)result != *MEMORY[0x1E0DA0820])
    {
      *a1 = 12;
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    v9 = 10;
  }
  *a1 = v9;
  return result;
}

unint64_t DateTime.Date.MonthOfYear.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 12;
  if (result < 0xC)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t DateTime.Date.MonthOfYear.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1C02D042C()
{
  unint64_t result;

  result = qword_1EF5C3B20;
  if (!qword_1EF5C3B20)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.MonthOfYear, &type metadata for DateTime.Date.MonthOfYear);
    atomic_store(result, (unint64_t *)&qword_1EF5C3B20);
  }
  return result;
}

unint64_t sub_1C02D0468@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return DateTime.Date.MonthOfYear.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C02D0470@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DateTime.Date.MonthOfYear.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C02D0494()
{
  sub_1C02D0608();
  return sub_1C03040FC();
}

uint64_t sub_1C02D04F0()
{
  sub_1C02D0608();
  return sub_1C03040D8();
}

uint64_t _s14descr1E79A8939V11MonthOfYearOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1C02D0588 + 4 * byte_1C03254D1[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1C02D05BC + 4 * byte_1C03254CC[v4]))();
}

uint64_t sub_1C02D05BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02D05C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02D05CCLL);
  return result;
}

uint64_t sub_1C02D05D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02D05E0);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1C02D05E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02D05EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DateTime.Date.MonthOfYear()
{
  return &type metadata for DateTime.Date.MonthOfYear;
}

unint64_t sub_1C02D0608()
{
  unint64_t result;

  result = qword_1EF5C3B28;
  if (!qword_1EF5C3B28)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.MonthOfYear, &type metadata for DateTime.Date.MonthOfYear);
    atomic_store(result, (unint64_t *)&qword_1EF5C3B28);
  }
  return result;
}

uint64_t LearningResult.learned.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C02D0650(v1, a1);
}

uint64_t sub_1C02D0650(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD008);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for LearningResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for LearnedDisambiguation();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD008);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      v12 = v7[6];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_1C0301CFC();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      *(_DWORD *)((char *)a1 + v7[8]) = *(_DWORD *)((char *)a2 + v7[8]);
      v17 = v7[9];
      v18 = (uint64_t *)((char *)a1 + v17);
      v19 = (uint64_t *)((char *)a2 + v17);
      v20 = v19[1];
      *v18 = *v19;
      v18[1] = v20;
      v21 = v7[10];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v7);
    }
    v24 = *(int *)(a3 + 20);
    v25 = *(int *)(a3 + 24);
    v26 = (uint64_t *)((char *)a1 + v24);
    v27 = (uint64_t *)((char *)a2 + v24);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    *((_BYTE *)a1 + v25) = *((_BYTE *)a2 + v25);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for LearningResult(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for LearnedDisambiguation();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v2))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = a1 + *(int *)(v2 + 24);
    v4 = sub_1C0301CFC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for LearningResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v6 = (int *)type metadata accessor for LearnedDisambiguation();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD008);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    v10 = v6[6];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1C0301CFC();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
    *(_DWORD *)((char *)a1 + v6[8]) = *(_DWORD *)((char *)a2 + v6[8]);
    v15 = v6[9];
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = v6[10];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  v22 = *(int *)(a3 + 20);
  v23 = *(int *)(a3 + 24);
  v24 = (_QWORD *)((char *)a1 + v22);
  v25 = (_QWORD *)((char *)a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  *((_BYTE *)a1 + v23) = *((_BYTE *)a2 + v23);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for LearningResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;

  v6 = (int *)type metadata accessor for LearnedDisambiguation();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, (uint64_t)v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v26 = v6[6];
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      v29 = sub_1C0301CFC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
      *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)((char *)a1 + v6[8]) = *(_DWORD *)((char *)a2 + v6[8]);
      v30 = v6[9];
      v31 = (_QWORD *)((char *)a1 + v30);
      v32 = (_QWORD *)((char *)a2 + v30);
      *v31 = *v32;
      v31[1] = v32[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v33 = v6[10];
      v34 = (_QWORD *)((char *)a1 + v33);
      v35 = (_QWORD *)((char *)a2 + v33);
      *v34 = *v35;
      v34[1] = v35[1];
      v34[2] = v35[2];
      goto LABEL_7;
    }
    sub_1C0150D00((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD008);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v9 = v6[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1C0301CFC();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
  *(_DWORD *)((char *)a1 + v6[8]) = *(_DWORD *)((char *)a2 + v6[8]);
  v14 = v6[9];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  v17 = v6[10];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = *((_QWORD *)v19 + 2);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *((_QWORD *)v18 + 2) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
LABEL_7:
  v22 = *(int *)(a3 + 20);
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *initializeWithTake for LearningResult(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = (int *)type metadata accessor for LearnedDisambiguation();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD008);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = v6[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1C0301CFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
    *(_DWORD *)((char *)a1 + v6[8]) = *(_DWORD *)((char *)a2 + v6[8]);
    *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
    v13 = v6[10];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  v16 = *(int *)(a3 + 24);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  *((_BYTE *)a1 + v16) = *((_BYTE *)a2 + v16);
  return a1;
}

_QWORD *assignWithTake for LearningResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  int EnumTagSinglePayload;
  int v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;

  v6 = (int *)type metadata accessor for LearnedDisambiguation();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, (uint64_t)v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      v24 = a2[1];
      *a1 = *a2;
      a1[1] = v24;
      swift_bridgeObjectRelease();
      v25 = a2[3];
      a1[2] = a2[2];
      a1[3] = v25;
      swift_bridgeObjectRelease();
      v26 = v6[6];
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      v29 = sub_1C0301CFC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
      *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
      swift_bridgeObjectRelease();
      *(_DWORD *)((char *)a1 + v6[8]) = *(_DWORD *)((char *)a2 + v6[8]);
      v30 = v6[9];
      v31 = (_QWORD *)((char *)a1 + v30);
      v32 = (_QWORD *)((char *)a2 + v30);
      v34 = *v32;
      v33 = v32[1];
      *v31 = v34;
      v31[1] = v33;
      swift_bridgeObjectRelease();
      v35 = v6[10];
      v36 = (char *)a1 + v35;
      v37 = (char *)a2 + v35;
      *(_OWORD *)v36 = *(_OWORD *)v37;
      *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);
      goto LABEL_7;
    }
    sub_1C0150D00((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD008);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  v9 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  v10 = v6[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1C0301CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
  *(_DWORD *)((char *)a1 + v6[8]) = *(_DWORD *)((char *)a2 + v6[8]);
  *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
  v14 = v6[10];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
LABEL_7:
  v18 = *(int *)(a3 + 20);
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for LearningResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C02D0FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD008);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for LearningResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C02D1084(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BD008);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t type metadata accessor for LearningResult()
{
  uint64_t result;

  result = qword_1EF5C3B88;
  if (!qword_1EF5C3B88)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C02D1138()
{
  unint64_t v0;

  sub_1C02D11B4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1C02D11B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF5C3B98[0])
  {
    type metadata accessor for LearnedDisambiguation();
    v0 = sub_1C030448C();
    if (!v1)
      atomic_store(v0, qword_1EF5C3B98);
  }
}

uint64_t storeEnumTagSinglePayload for LearningResult.ResultType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C02D1254 + 4 * byte_1C0325615[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C02D1288 + 4 * byte_1C0325610[v4]))();
}

uint64_t sub_1C02D1288(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02D1290(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02D1298);
  return result;
}

uint64_t sub_1C02D12A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02D12ACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C02D12B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02D12B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LearningResult.ResultType()
{
  return &type metadata for LearningResult.ResultType;
}

unint64_t sub_1C02D12D8()
{
  unint64_t result;

  result = qword_1EF5C3BD0;
  if (!qword_1EF5C3BD0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03256DC, &type metadata for LearningResult.ResultType);
    atomic_store(result, (unint64_t *)&qword_1EF5C3BD0);
  }
  return result;
}

uint64_t sub_1C02D1314(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t result;
  __int128 v19[2];
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v6 = v5;
  v11 = *(_QWORD *)(v4 + *(int *)(type metadata accessor for TaskSuccessEvaluator() + 20));
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v13 = v11 + 32;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1C0048FE0(v13, (uint64_t)v19);
      v14 = sub_1C02D1FE0(v19, a3, a4);
      if (v6)
        break;
      v6 = 0;
      if ((v14 & 1) != 0)
      {
        OUTLINED_FUNCTION_17_0();
        sub_1C004CD5C(v19, (uint64_t)&v20);
        goto LABEL_10;
      }
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
      v13 += 40;
      if (!--v12)
      {
        OUTLINED_FUNCTION_17_0();
        goto LABEL_8;
      }
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
    result = OUTLINED_FUNCTION_17_0();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_8:
    v22 = 0;
    v20 = 0u;
    v21 = 0u;
LABEL_10:
    OUTLINED_FUNCTION_17_0();
    if (*((_QWORD *)&v21 + 1))
    {
      sub_1C004CD5C(&v20, (uint64_t)v23);
      v15 = v24;
      v16 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 40))(a1, a2, v15, v16);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
    }
    else
    {
      sub_1C02D29A4((uint64_t)&v20);
      sub_1C02D29E4();
      swift_allocError();
      *v17 = 0;
      swift_willThrow();
    }
    return v12;
  }
  return result;
}

uint64_t sub_1C02D1498(uint64_t (*a1)(_QWORD, _QWORD, unint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD v42[7];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(_QWORD, _QWORD, unint64_t);
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[3];
  uint64_t v61;
  uint64_t v62;

  v57 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF950);
  v55 = *(_QWORD *)(v4 - 8);
  v56 = v4;
  v5 = *(_QWORD *)(v55 + 64);
  MEMORY[0x1E0C80A78](v4);
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  OUTLINED_FUNCTION_82_3((uint64_t)v42 - v6);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF960);
  v53 = *(_QWORD *)(v59 - 8);
  v7 = *(_QWORD *)(v53 + 64);
  MEMORY[0x1E0C80A78](v59);
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  OUTLINED_FUNCTION_82_3((uint64_t)v42 - v8);
  v9 = OUTLINED_FUNCTION_18_47();
  v51 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v49 = (uint64_t)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = v10;
  v11 = OUTLINED_FUNCTION_8_0();
  v47 = *(_QWORD *)(v11 - 8);
  v48 = v11;
  MEMORY[0x1E0C80A78](v11);
  v46 = v12;
  OUTLINED_FUNCTION_82_3((uint64_t)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_82_3((uint64_t)v42 - v6);
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_82_3((uint64_t)v42 - v8);
  v52 = v9;
  v15 = *(int *)(v9 + 20);
  v54 = v2;
  v16 = *(_QWORD *)(v2 + v15);
  v17 = *(_QWORD *)(v16 + 16);
  if (v17 || (result = v57(MEMORY[0x1E0DEE9D8], 0, 0xE000000000000000), (v17 = *(_QWORD *)(v16 + 16)) != 0))
  {
    v44 = a2;
    v19 = v16 + 32;
    v42[1] = v16;
    swift_bridgeObjectRetain();
    do
    {
      v58 = v17;
      sub_1C0048FE0(v19, (uint64_t)v60);
      v20 = v61;
      v21 = v62;
      __swift_project_boxed_opaque_existential_1(v60, v61);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21) & 1) != 0)
      {
        v33 = v54;
        v43 = OUTLINED_FUNCTION_4_112();
        v42[6] = v34;
        v35 = v33 + *(int *)(OUTLINED_FUNCTION_8_80() + 24);
        OUTLINED_FUNCTION_29_39();
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF978);
        sub_1C0104C2C(&qword_1EF5C3BD8, &qword_1EF5BF978, MEMORY[0x1E0D02538]);
        v37 = v42[4];
        OUTLINED_FUNCTION_19_50();
        v28 = v47;
        v38 = v48;
        v39 = v45;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v45, v35, v48);
        sub_1C00655E8(v33, v49, (uint64_t (*)(_QWORD))type metadata accessor for TaskSuccessEvaluator);
        OUTLINED_FUNCTION_0_151();
        v40 = swift_allocObject();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v40 + v36, v39, v38);
        OUTLINED_FUNCTION_24_37();
        sub_1C0104C2C(&qword_1EF5C3BE0, &qword_1EF5BF960, MEMORY[0x1E0D023D8]);
        v30 = v42[5];
        sub_1C0302038();
        OUTLINED_FUNCTION_1_4();
        *(_QWORD *)(OUTLINED_FUNCTION_16_0() + 16) = MEMORY[0x1E0DEE9D8];
        v41 = (_QWORD *)OUTLINED_FUNCTION_16_0();
        OUTLINED_FUNCTION_2_136(v41);
        sub_1C0104C2C(&qword_1EF5C3BE8, &qword_1EF5BF950, MEMORY[0x1E0D02378]);
        OUTLINED_FUNCTION_21_52();
        swift_retain();
        swift_bridgeObjectRetain();
        v32 = (void *)OUTLINED_FUNCTION_5_99();
        v25 = v37;
      }
      else
      {
        v22 = v54;
        v43 = OUTLINED_FUNCTION_4_112();
        v23 = v22 + *(int *)(OUTLINED_FUNCTION_8_80() + 24);
        OUTLINED_FUNCTION_29_39();
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF958);
        sub_1C0104C2C(&qword_1EF5BF968, &qword_1EF5BF958, MEMORY[0x1E0D02538]);
        v25 = v42[2];
        OUTLINED_FUNCTION_19_50();
        v26 = v47;
        v27 = v48;
        v28 = v45;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v45, v23, v48);
        sub_1C00655E8(v22, v49, (uint64_t (*)(_QWORD))type metadata accessor for TaskSuccessEvaluator);
        OUTLINED_FUNCTION_0_151();
        v29 = swift_allocObject();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v29 + v24, v28, v27);
        OUTLINED_FUNCTION_24_37();
        sub_1C0104C2C(&qword_1EF5BF970, &qword_1EF5BF960, MEMORY[0x1E0D023D8]);
        v30 = v42[3];
        sub_1C0302038();
        OUTLINED_FUNCTION_1_4();
        *(_QWORD *)(OUTLINED_FUNCTION_16_0() + 16) = MEMORY[0x1E0DEE9D8];
        v31 = (_QWORD *)OUTLINED_FUNCTION_16_0();
        OUTLINED_FUNCTION_2_136(v31);
        sub_1C0104C2C(qword_1EF5BF980, &qword_1EF5BF950, MEMORY[0x1E0D02378]);
        OUTLINED_FUNCTION_21_52();
        swift_retain();
        swift_bridgeObjectRetain();
        v32 = (void *)OUTLINED_FUNCTION_5_99();
      }

      swift_release();
      OUTLINED_FUNCTION_1_4();
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v30, v28);
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v25, v59);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_1_4();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v60);
      v19 += 40;
      v17 = v58 - 1;
    }
    while (v58 != 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for TaskSuccessEvaluator()
{
  uint64_t result;

  result = qword_1EF5C3C58;
  if (!qword_1EF5C3C58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C02D1AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B8FF8);
  v0 = OUTLINED_FUNCTION_16_0();
  *(_OWORD *)(v0 + 16) = xmmword_1C03067E0;
  *(_QWORD *)(v0 + 56) = &type metadata for RemindersLocationTaskSuccessEvaluable;
  *(_QWORD *)(v0 + 64) = &off_1E799B5C0;
  v1 = OUTLINED_FUNCTION_16_0();
  *(_QWORD *)(v0 + 32) = v1;
  strcpy((char *)(v1 + 16), "AddTasksIntent");
  *(_BYTE *)(v1 + 31) = -18;
  *(_QWORD *)(v1 + 32) = 0x6E6F697461636F6CLL;
  *(_QWORD *)(v1 + 40) = 0xE800000000000000;
  *(_WORD *)(v1 + 48) = 256;
  *(_QWORD *)(v0 + 96) = &type metadata for RemindersDateTimeTaskSuccessEvaluable;
  *(_QWORD *)(v0 + 104) = &off_1E79A1410;
  v2 = OUTLINED_FUNCTION_16_0();
  *(_QWORD *)(v0 + 72) = v2;
  strcpy((char *)(v2 + 16), "AddTasksIntent");
  *(_BYTE *)(v2 + 31) = -18;
  *(_QWORD *)(v2 + 32) = 0x656D695465746164;
  *(_QWORD *)(v2 + 40) = 0xE800000000000000;
  *(_WORD *)(v2 + 48) = 256;
  *(_QWORD *)(v0 + 136) = &type metadata for AlarmsDateTimeTaskSuccessEvaluable;
  *(_QWORD *)(v0 + 144) = &off_1E799BB70;
  result = OUTLINED_FUNCTION_16_0();
  *(_QWORD *)(v0 + 112) = result;
  *(_QWORD *)(result + 16) = 0xD000000000000011;
  *(_QWORD *)(result + 24) = 0x80000001C03369A0;
  *(_QWORD *)(result + 32) = 0x656D695465746164;
  *(_QWORD *)(result + 40) = 0xE800000000000000;
  *(_WORD *)(result + 48) = 257;
  qword_1EF5FC7C0 = v0;
  return result;
}

uint64_t sub_1C02D1C08(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD v51[3];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v5 = type metadata accessor for TaskMetadata();
  v6 = MEMORY[0x1E0C80A78](v5);
  v48 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v44 - v8;
  if (qword_1ED728430 != -1)
    swift_once();
  v10 = sub_1C0303B98();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED729650);
  v47 = a2;
  sub_1C00655E8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for TaskMetadata);
  OUTLINED_FUNCTION_7_102();
  v11 = sub_1C0303B80();
  v12 = sub_1C03042E8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v46 = v2;
    v14 = v13;
    v45 = swift_slowAlloc();
    v54 = v45;
    *(_DWORD *)v14 = 136315394;
    OUTLINED_FUNCTION_10_82(*((_QWORD *)v9 + 2));
    v15 = OUTLINED_FUNCTION_9_92();
    v16 = sub_1C013CB84(v15);
    v18 = v17;
    OUTLINED_FUNCTION_14();
    if (v18)
      v19 = v16;
    else
      v19 = 0;
    if (v18)
      v20 = v18;
    else
      v20 = 0xE000000000000000;
    v49 = sub_1C003E6D8(v19, v20, &v54);
    OUTLINED_FUNCTION_16_59();
    OUTLINED_FUNCTION_14();
    sub_1C01BE0A4((uint64_t)v9, (void (*)(_QWORD))type metadata accessor for TaskMetadata);
    *(_WORD *)(v14 + 12) = 2080;
    v22 = v52;
    v21 = v53;
    __swift_project_boxed_opaque_existential_1(v51, v52);
    v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v22, v21);
    v49 = sub_1C003E6D8(v23, v24, &v54);
    OUTLINED_FUNCTION_16_59();
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_26_49();
    _os_log_impl(&dword_1C0039000, v11, v12, "taskMetadata.typeRoot = %s, evaluable.taskType: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }
  sub_1C01BE0A4((uint64_t)v9, (void (*)(_QWORD))type metadata accessor for TaskMetadata);
  OUTLINED_FUNCTION_26_49();

  v25 = sub_1C00FB5D0();
  v27 = v26;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v25 == OUTLINED_FUNCTION_6_104() && v27 == v28)
  {
    v41 = OUTLINED_FUNCTION_53_2();
    OUTLINED_FUNCTION_15_60(v41, v42, (uint64_t (*)(_QWORD))type metadata accessor for TaskMetadata);
    OUTLINED_FUNCTION_7_102();
    goto LABEL_29;
  }
  v30 = sub_1C0304A08();
  OUTLINED_FUNCTION_33();
  v31 = OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_15_60(v31, v32, (uint64_t (*)(_QWORD))type metadata accessor for TaskMetadata);
  OUTLINED_FUNCTION_7_102();
  if ((v30 & 1) != 0)
  {
LABEL_29:
    v40 = 1;
    goto LABEL_30;
  }
  OUTLINED_FUNCTION_10_82(*(_QWORD *)(v25 + 16));
  v33 = OUTLINED_FUNCTION_9_92();
  v34 = sub_1C013CB84(v33);
  v36 = v35;
  OUTLINED_FUNCTION_33();
  if (v36)
    v37 = v34;
  else
    v37 = 0;
  if (v36)
    v38 = v36;
  else
    v38 = 0xE000000000000000;
  __swift_project_boxed_opaque_existential_1(v51, v52);
  OUTLINED_FUNCTION_6_104();
  v49 = 20041;
  v50 = 0xE200000000000000;
  sub_1C0303FD0();
  swift_bridgeObjectRelease();
  if (v37 == v49 && v38 == v50)
  {
    OUTLINED_FUNCTION_53_2();
    goto LABEL_29;
  }
  v40 = sub_1C0304A08();
  OUTLINED_FUNCTION_33();
  swift_bridgeObjectRelease();
LABEL_30:
  sub_1C01BE0A4(v25, (void (*)(_QWORD))type metadata accessor for TaskMetadata);
  OUTLINED_FUNCTION_26_49();
  return v40 & 1;
}

uint64_t sub_1C02D1FE0(_QWORD *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (qword_1ED728430 != -1)
    swift_once();
  v6 = sub_1C0303B98();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED729650);
  sub_1C0048FE0((uint64_t)a1, (uint64_t)v24);
  swift_bridgeObjectRetain_n();
  v7 = sub_1C0303B80();
  v8 = sub_1C03042E8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v27 = v23;
    *(_DWORD *)v9 = 136315394;
    v10 = a2;
    v11 = v25;
    v12 = v26;
    __swift_project_boxed_opaque_existential_1(v24, v25);
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
    v14 = v12;
    a2 = v10;
    v15 = v13(v11, v14);
    sub_1C003E6D8(v15, v16, &v27);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
    *(_WORD *)(v9 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1C003E6D8(v10, a3, &v27);
    sub_1C03044B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0039000, v7, v8, "[postSiriActivityType] evaluable.entityType = %s, entityType: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v23, -1, -1);
    MEMORY[0x1C3B98378](v9, -1, -1);

  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);

    swift_bridgeObjectRelease_n();
  }
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18) == a2 && v19 == a3)
    v21 = 1;
  else
    v21 = sub_1C0304A08();
  swift_bridgeObjectRelease();
  return v21 & 1;
}

uint64_t sub_1C02D2280(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TaskSuccessEvaluator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C02D22C8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

BOOL sub_1C02D22EC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  char **v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  _BYTE v35[4];
  int v36;
  NSObject *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;

  v40 = OUTLINED_FUNCTION_18_47();
  MEMORY[0x1E0C80A78](v40);
  v42 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = OUTLINED_FUNCTION_8_0();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = &v35[-v12];
  MEMORY[0x1E0C80A78](v11);
  v15 = &v35[-v14];
  if (qword_1ED728430 != -1)
    swift_once();
  v16 = sub_1C0303B98();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED729650);
  OUTLINED_FUNCTION_30_41((uint64_t)v15);
  OUTLINED_FUNCTION_30_41((uint64_t)v13);
  v41 = a3;
  sub_1C00655E8(a3, (uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for TaskSuccessEvaluator);
  v17 = a1;
  v18 = sub_1C0303B80();
  v19 = sub_1C03042E8();
  v20 = v19;
  v21 = &selRef_setTimestampSec_;
  if (os_log_type_enabled(v18, v19))
  {
    v22 = swift_slowAlloc();
    *(_DWORD *)v22 = 134218496;
    v36 = v20;
    v37 = v18;
    OUTLINED_FUNCTION_29_39();
    v43 = v23;
    v39 = a2;
    sub_1C03044B0();
    OUTLINED_FUNCTION_3_11((uint64_t)v15);
    *(_WORD *)(v22 + 12) = 2048;
    objc_msgSend(v17, sel_timestamp);
    v43 = v24;
    sub_1C03044B0();

    *(_WORD *)(v22 + 22) = 2048;
    v38 = v17;
    v25 = v42;
    sub_1C0301C54();
    sub_1C0301C18();
    v18 = v37;
    v27 = v26;
    OUTLINED_FUNCTION_3_11((uint64_t)v10);
    v43 = v27;
    sub_1C03044B0();
    OUTLINED_FUNCTION_3_11((uint64_t)v13);
    v28 = (uint64_t)v25;
    v17 = v38;
    sub_1C01BE0A4(v28, (void (*)(_QWORD))type metadata accessor for TaskSuccessEvaluator);
    _os_log_impl(&dword_1C0039000, v18, (os_log_type_t)v36, "lastCachedAt: %f biomeEvent.timestamp: %f, timeLimit: %f", (uint8_t *)v22, 0x20u);
    v29 = v22;
    v21 = &selRef_setTimestampSec_;
    MEMORY[0x1C3B98378](v29, -1, -1);
  }
  else
  {
    OUTLINED_FUNCTION_3_11((uint64_t)v15);

    OUTLINED_FUNCTION_3_11((uint64_t)v13);
    sub_1C01BE0A4((uint64_t)v42, (void (*)(_QWORD))type metadata accessor for TaskSuccessEvaluator);
  }

  objc_msgSend(v17, v21[17]);
  v31 = v30;
  sub_1C0301C54();
  sub_1C0301C18();
  v33 = v32;
  OUTLINED_FUNCTION_3_11((uint64_t)v10);
  return v31 <= v33;
}

uint64_t sub_1C02D2638(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;

  swift_beginAccess();
  v9 = swift_bridgeObjectRetain();
  a2(v9, a5, a6);
  return swift_bridgeObjectRelease();
}

void sub_1C02D26BC(void *a1)
{
  uint64_t v1;

  sub_1C02D2888(a1, v1);
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void (*v8)(unint64_t, uint64_t);
  uint64_t v9;
  unint64_t v10;
  void (*v11)(unint64_t);
  unint64_t v12;
  void (*v13)(unint64_t);

  v1 = OUTLINED_FUNCTION_8_0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = OUTLINED_FUNCTION_18_47();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = (v3 + v4 + v6) & ~v6;
  v8 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v8(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = OUTLINED_FUNCTION_8_80();
  v8(v0 + v7 + *(int *)(v9 + 24), v1);
  swift_bridgeObjectRelease();
  v10 = v0 + v7 + *(int *)(v5 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF958);
  OUTLINED_FUNCTION_5_58();
  v11(v10);
  v12 = v0 + v7 + *(int *)(v5 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF978);
  OUTLINED_FUNCTION_5_58();
  v13(v12);
  return swift_deallocObject();
}

void sub_1C02D27E0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(OUTLINED_FUNCTION_8_0() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_18_47() - 8) + 80);
  sub_1C02D22EC(a1, v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
  OUTLINED_FUNCTION_37_0();
}

uint64_t objectdestroy_5Tm()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C02D2878(uint64_t a1)
{
  uint64_t v1;

  return sub_1C02D2638(a1, *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

void sub_1C02D2888(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v3 = objc_msgSend(a1, sel_eventBody);
  if (v3)
  {
    v13 = v3;
    v4 = objc_msgSend(v3, sel_serialize);
    if (v4)
    {
      v5 = v4;
      v6 = (uint64_t *)(a2 + 16);
      v7 = sub_1C0301C00();
      v9 = v8;

      sub_1C00C83C0(v7, v9);
      LODWORD(v5) = objc_msgSend(v13, sel_dataVersion);
      swift_beginAccess();
      sub_1C00ABC24();
      v10 = *(_QWORD *)(*v6 + 16);
      sub_1C00ABE44();
      v11 = *v6;
      *(_QWORD *)(v11 + 16) = v10 + 1;
      v12 = v11 + 24 * v10;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
      *(_DWORD *)(v12 + 48) = (_DWORD)v5;
      swift_endAccess();

      sub_1C0040600(v7, v9);
    }
    else
    {

    }
  }
}

uint64_t sub_1C02D29A4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3BF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C02D29E4()
{
  unint64_t result;

  result = qword_1EF5C3BF8;
  if (!qword_1EF5C3BF8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03257E0, &type metadata for TaskSuccessEvaluationError);
    atomic_store(result, (unint64_t *)&qword_1EF5C3BF8);
  }
  return result;
}

uint64_t objectdestroy_16Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for TaskSuccessEvaluationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C02D2AA4 + 4 * byte_1C0325715[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C02D2AD8 + 4 * byte_1C0325710[v4]))();
}

uint64_t sub_1C02D2AD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02D2AE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02D2AE8);
  return result;
}

uint64_t sub_1C02D2AF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02D2AFCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C02D2B00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02D2B08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TaskSuccessEvaluationError()
{
  return &type metadata for TaskSuccessEvaluationError;
}

uint64_t destroy for SerializedBiomeEvent(uint64_t a1)
{
  return sub_1C0040600(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t _s13SiriInference20SerializedBiomeEventVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_1C00C83C0(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithCopy for SerializedBiomeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_1C00C83C0(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  sub_1C0040600(v6, v7);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy20_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SerializedBiomeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1C0040600(v4, v5);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SerializedBiomeEvent(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0xD && *(_BYTE *)(a1 + 20))
    {
      v2 = *(_DWORD *)a1 + 12;
    }
    else
    {
      v2 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
      if (v2 >= 0xC)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for SerializedBiomeEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 20) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 20) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SerializedBiomeEvent()
{
  return &type metadata for SerializedBiomeEvent;
}

uint64_t *sub_1C02D2CCC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(type metadata accessor for TaskMetadata() + 24);
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1C0301CFC();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = a3[6];
    *(uint64_t *)((char *)v4 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    swift_bridgeObjectRetain();
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF958);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = a3[7];
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF978);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  }
  return v4;
}

uint64_t sub_1C02D2E10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for TaskMetadata() + 24);
  v5 = sub_1C0301CFC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF958);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + *(int *)(a2 + 28);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF978);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *sub_1C02D2ECC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(type metadata accessor for TaskMetadata() + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C0301CFC();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  swift_bridgeObjectRetain();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF958);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = a3[7];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF978);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_1C02D2FE4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(type metadata accessor for TaskMetadata() + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C0301CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF958);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF978);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

_OWORD *sub_1C02D3118(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(type metadata accessor for TaskMetadata() + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C0301CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF958);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF978);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_1C02D3200(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(type metadata accessor for TaskMetadata() + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C0301CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF958);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF978);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_1C02D330C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C02D3318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = OUTLINED_FUNCTION_8_80();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    if ((_DWORD)a2 == 0x7FFFFFFF)
    {
      OUTLINED_FUNCTION_37_0();
      return;
    }
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF958);
    if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v9;
      v10 = *(int *)(a3 + 24);
    }
    else
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF978);
      v10 = *(int *)(a3 + 28);
    }
    v8 = a1 + v10;
  }
  __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t sub_1C02D33D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C02D33E0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = OUTLINED_FUNCTION_8_80();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5]) = (a2 - 1);
      return result;
    }
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF958);
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
    {
      v9 = v11;
      v12 = a4[6];
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BF978);
      v12 = a4[7];
    }
    v10 = a1 + v12;
  }
  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

void sub_1C02D34A0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for TaskMetadata();
  if (v0 <= 0x3F)
  {
    sub_1C01BE8D0(319, &qword_1EF5BF9F0, (unint64_t *)&qword_1ED725F20);
    if (v1 <= 0x3F)
    {
      sub_1C01BE8D0(319, &qword_1EF5BF9F8, qword_1EF5BFA00);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

unint64_t sub_1C02D358C()
{
  unint64_t result;

  result = qword_1EF5C3CA0;
  if (!qword_1EF5C3CA0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03257B8, &type metadata for TaskSuccessEvaluationError);
    atomic_store(result, (unint64_t *)&qword_1EF5C3CA0);
  }
  return result;
}

_QWORD *OUTLINED_FUNCTION_2_136(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(v3 - 272);
  result[2] = *(_QWORD *)(v3 - 168);
  result[3] = v4;
  v5 = *(_QWORD *)(v3 - 280);
  result[4] = v1;
  result[5] = v5;
  result[6] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_4_112()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 - 144), v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_5_99()
{
  return sub_1C030202C();
}

uint64_t OUTLINED_FUNCTION_6_104()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_7_102()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C0048FE0(v0, v1 - 120);
}

uint64_t OUTLINED_FUNCTION_8_80()
{
  return type metadata accessor for TaskMetadata();
}

uint64_t OUTLINED_FUNCTION_9_92()
{
  return sub_1C03044D4();
}

unint64_t OUTLINED_FUNCTION_10_82@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = a1;
  *(_QWORD *)(v2 - 128) = v1;
  *(_QWORD *)(v2 - 152) = 46;
  *(_QWORD *)(v2 - 144) = 0xE100000000000000;
  return sub_1C004F408();
}

void OUTLINED_FUNCTION_15_60(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_1C00655E8(v3, *(_QWORD *)(v4 - 160), a3);
}

uint64_t OUTLINED_FUNCTION_16_59()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_18_47()
{
  return type metadata accessor for TaskSuccessEvaluator();
}

uint64_t OUTLINED_FUNCTION_19_50()
{
  return sub_1C030241C();
}

uint64_t OUTLINED_FUNCTION_21_52()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_24_37()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1C02D2280(v0, v1 + v2);
}

uint64_t OUTLINED_FUNCTION_29_39()
{
  return sub_1C0301C18();
}

uint64_t OUTLINED_FUNCTION_30_41(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v3, v1);
}

uint64_t sub_1C02D371C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DA8);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v21 = (uint64_t)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  v10 = MEMORY[0x1E0DEE9D8];
  v22 = MEMORY[0x1E0DEE9D8];
  v20 = *(_QWORD *)(a1 + 16);
  if (v20)
  {
    v18 = v1;
    v19 = a1;
    v11 = 0;
    while (v11 < *(_QWORD *)(a1 + 16))
    {
      v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v13 = *(_QWORD *)(v4 + 72);
      sub_1C02D4808(a1 + v12 + v13 * v11, (uint64_t)v9);
      v14 = &v9[*(int *)(v3 + 36)];
      if (v14[*(int *)(type metadata accessor for ContactResolver.HandleSignalSet(0) + 48)] == 1)
      {
        v15 = v3;
        sub_1C02D4850((uint64_t)v9, v21);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1C00B198C();
        v16 = v22;
        v17 = *(_QWORD *)(v22 + 16);
        if (v17 >= *(_QWORD *)(v22 + 24) >> 1)
        {
          sub_1C00B198C();
          v16 = v22;
        }
        *(_QWORD *)(v16 + 16) = v17 + 1;
        result = sub_1C02D4850(v21, v16 + v12 + v17 * v13);
        v3 = v15;
        a1 = v19;
      }
      else
      {
        result = sub_1C02D4898((uint64_t)v9);
      }
      if (v20 == ++v11)
      {
        v10 = v22;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t sub_1C02D38EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1E80();
    v2 = v22;
    v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DA8) - 8);
    v5 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
    v14 = *(_QWORD *)(v4 + 72);
    do
    {
      v6 = v5[1];
      v21 = *v5;
      v20 = *((_BYTE *)v5 + 16);
      v7 = v5[4];
      v8 = v5[6];
      v18 = v5[5];
      v19 = v5[3];
      v9 = v5[8];
      v17 = v5[7];
      v15 = *((_BYTE *)v5 + 73);
      v16 = *((_BYTE *)v5 + 72);
      v10 = *(_QWORD *)(v22 + 16);
      v11 = *(_QWORD *)(v22 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v10 >= v11 >> 1)
        sub_1C00B1E80();
      *(_QWORD *)(v22 + 16) = v10 + 1;
      v12 = v22 + 80 * v10;
      *(_QWORD *)(v12 + 32) = v21;
      *(_QWORD *)(v12 + 40) = v6;
      *(_BYTE *)(v12 + 48) = v20;
      *(_QWORD *)(v12 + 56) = v19;
      *(_QWORD *)(v12 + 64) = v7;
      *(_QWORD *)(v12 + 72) = v18;
      *(_QWORD *)(v12 + 80) = v8;
      *(_QWORD *)(v12 + 88) = v17;
      *(_QWORD *)(v12 + 96) = v9;
      *(_BYTE *)(v12 + 104) = v16;
      *(_BYTE *)(v12 + 105) = v15;
      v5 = (uint64_t *)((char *)v5 + v14);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C02D3A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v31 = a1;
  v30 = *(_QWORD *)(type metadata accessor for ContactMatchRuntimeData(0) - 8);
  OUTLINED_FUNCTION_121();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v29 - v7;
  v9 = sub_1C0303B74();
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED728440 != -1)
    swift_once();
  v13 = (id)qword_1ED729668;
  sub_1C0303B68();
  sub_1C03043E4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7281A0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C0305B60;
  v15 = sub_1C03046E4();
  v17 = v16;
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 64) = sub_1C00A6A70();
  *(_QWORD *)(v14 + 32) = v15;
  *(_QWORD *)(v14 + 40) = v17;
  v32 = v13;
  v33 = v12;
  sub_1C0303B50();
  swift_bridgeObjectRelease();
  v18 = v31;
  v19 = *(_QWORD *)(v31 + 16);
  v20 = MEMORY[0x1E0DEE9D8];
  if (v19)
  {
    v36 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1B9C();
    v21 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v22 = v18 + v21;
    v23 = *(_QWORD *)(v30 + 72);
    v20 = v36;
    do
    {
      sub_1C009E3B0(v22, (uint64_t)v6);
      sub_1C02D3DD4((uint64_t)v6, a2, (uint64_t)v8);
      sub_1C004587C((uint64_t)v6);
      if ((OUTLINED_FUNCTION_14_1() & 1) == 0)
      {
        sub_1C00B1B9C();
        v20 = v36;
      }
      v24 = *(_QWORD *)(v20 + 16);
      if (v24 >= *(_QWORD *)(v20 + 24) >> 1)
      {
        sub_1C00B1B9C();
        v20 = v36;
      }
      *(_QWORD *)(v20 + 16) = v24 + 1;
      sub_1C009DEB0((uint64_t)v8, v20 + v21 + v24 * v23);
      v22 += v23;
      --v19;
    }
    while (v19);
  }
  v25 = v35;
  sub_1C03043D8();
  v27 = v32;
  v26 = v33;
  sub_1C0303B5C();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v25);

  return v20;
}

void sub_1C02D3D68(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C01F5B78();
    v2 = v4;
  }
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  sub_1C02D48D8(v5);
  *a1 = v2;
}

uint64_t sub_1C02D3DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t matched;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _DWORD *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  int *v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  _DWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t result;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD v114[2];
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139[3];
  uint64_t v140;

  v115 = a2;
  v117 = a3;
  matched = type metadata accessor for ContactMatchRuntimeData(0);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v5);
  v128 = (_QWORD *)((char *)v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DA8);
  v135 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_121();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)v114 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)v114 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v114 - v18;
  v20 = *(int *)(matched + 20);
  v116 = a1;
  v134 = *(_QWORD *)(a1 + v20 + 216);
  v21 = swift_bridgeObjectRetain();
  v22 = sub_1C02D371C(v21);
  v118 = 0;
  v23 = MEMORY[0x1E0DEE9D8];
  v139[0] = MEMORY[0x1E0DEE9D8];
  v24 = *(_QWORD *)(v22 + 16);
  v136 = v7;
  v132 = v22;
  v133 = v24;
  if (!v24)
  {
    v25 = MEMORY[0x1E0DEE9D8];
LABEL_17:
    swift_bridgeObjectRelease();
    v35 = *(_QWORD *)(v25 + 16);
    if (v35 < 2)
    {
      if (qword_1ED727970 != -1)
        goto LABEL_69;
      goto LABEL_19;
    }
    v139[0] = v23;
    sub_1C00B1F28();
    v43 = (*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80);
    v114[1] = v25;
    v44 = v25 + v43;
    v119 = *(_QWORD *)(v135 + 72);
    do
    {
      sub_1C02D4808(v44, (uint64_t)v11);
      v45 = &v11[*(int *)(v7 + 36)];
      v46 = (int *)type metadata accessor for ContactResolver.HandleSignalSet(0);
      v47 = v46[12];
      v48 = v45[v46[13]];
      v49 = -999;
      if (!v45[v46[14]])
        v49 = 0;
      v129 = v49;
      v50 = v48 == 0;
      v51 = 256;
      if (v50)
        v51 = 0;
      v127 = v51;
      v52 = v46[11];
      v53 = v45[v47];
      v54 = 3;
      if (!v45[v46[10]])
        v54 = 0;
      v50 = v53 == 0;
      v55 = 128;
      if (v50)
        v55 = 0;
      v134 = v55;
      v135 = v54;
      if (v45[v52])
        v56 = 64;
      else
        v56 = 0;
      if (v45[2])
        v57 = 32;
      else
        v57 = 0;
      v58 = 16;
      if (!v45[3])
        v58 = 0;
      v132 = v58;
      v133 = v56;
      v59 = 8;
      if (!v45[4])
        v59 = 0;
      v130 = (char *)v59;
      v131 = v57;
      v60 = 2;
      if (!v45[1])
        v60 = 0;
      v128 = (_QWORD *)v60;
      v61 = *((_QWORD *)v11 + 1);
      v126 = *(_QWORD *)v11;
      v125 = v11[16];
      v62 = *((_QWORD *)v11 + 4);
      v124 = *((_QWORD *)v11 + 3);
      v63 = *((_QWORD *)v11 + 6);
      v123 = *((_QWORD *)v11 + 5);
      v64 = *((_QWORD *)v11 + 8);
      v122 = *((_QWORD *)v11 + 7);
      v121 = v11[72];
      v120 = v11[73];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C02D4898((uint64_t)v11);
      v65 = v139[0];
      if ((OUTLINED_FUNCTION_14_1() & 1) == 0)
      {
        OUTLINED_FUNCTION_1_138();
        sub_1C00B1F28();
        v65 = v139[0];
      }
      v66 = *(_QWORD *)(v65 + 16);
      if (v66 >= *(_QWORD *)(v65 + 24) >> 1)
      {
        sub_1C00B1F28();
        v65 = v139[0];
      }
      v67 = v126;
      v68 = v127 | v129;
      *(_QWORD *)(v65 + 16) = v66 + 1;
      v69 = v68 + v135;
      v70 = v134 | v133 | v131;
      v71 = v65 + 88 * v66;
      *(_QWORD *)(v71 + 32) = v67;
      *(_QWORD *)(v71 + 40) = v61;
      v72 = v69 | v70;
      v73 = &v130[v132];
      *(_BYTE *)(v71 + 48) = v125;
      v74 = (char *)v128 + (_QWORD)v73 + v72;
      *(_QWORD *)(v71 + 56) = v124;
      *(_QWORD *)(v71 + 64) = v62;
      *(_QWORD *)(v71 + 72) = v123;
      *(_QWORD *)(v71 + 80) = v63;
      *(_QWORD *)(v71 + 88) = v122;
      *(_QWORD *)(v71 + 96) = v64;
      *(_BYTE *)(v71 + 104) = v121;
      *(_BYTE *)(v71 + 105) = v120;
      v44 += v119;
      *(_QWORD *)(v71 + 112) = v74;
      --v35;
      v7 = v136;
    }
    while (v35);
    swift_release();
    v140 = v65;
    sub_1C02D3D68(&v140);
    if (qword_1ED727970 != -1)
      swift_once();
    v75 = sub_1C0303B98();
    __swift_project_value_buffer(v75, (uint64_t)&unk_1ED7295C8);
    v76 = sub_1C0303B80();
    v77 = sub_1C03042E8();
    if (os_log_type_enabled(v76, v77))
    {
      v78 = (_DWORD *)OUTLINED_FUNCTION_4_0();
      v139[0] = OUTLINED_FUNCTION_4_0();
      *v78 = 136315138;
      OUTLINED_FUNCTION_28_2();
      v79 = v140;
      swift_bridgeObjectRetain();
      v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF5B8EA0);
      v81 = MEMORY[0x1C3B97040](v79, v80);
      v83 = v82;
      swift_bridgeObjectRelease();
      v137 = sub_1C003E6D8(v81, v83, v139);
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_7_18(&dword_1C0039000, v76, v77, "scored handles: %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_28_2();
    result = v140;
    if (*(_QWORD *)(v140 + 16))
    {
      v85 = *(_QWORD *)(v140 + 112);
      v86 = __OFSUB__(v85, v115);
      v87 = v85 - v115;
      if (!v86)
      {
        v88 = *(_QWORD *)(v140 + 16);
        if (v88)
        {
          v128 = v114;
          v89 = v87 & ~(v87 >> 63);
          v90 = swift_bridgeObjectRetain();
          v91 = 0;
          v92 = MEMORY[0x1E0DEE9D8];
          v129 = v89;
          v130 = (char *)v90;
          do
          {
            v93 = v90 + v91;
            if (*(_QWORD *)(v90 + v91 + 112) >= v89)
            {
              v94 = *(_QWORD *)(v93 + 32);
              v95 = *(_QWORD *)(v93 + 40);
              v96 = *(_BYTE *)(v93 + 48);
              v98 = *(_QWORD *)(v93 + 56);
              v97 = *(_QWORD *)(v93 + 64);
              v99 = *(_QWORD *)(v93 + 72);
              v100 = *(_QWORD *)(v93 + 80);
              v101 = *(_QWORD *)(v93 + 96);
              v133 = *(_QWORD *)(v93 + 88);
              v134 = v99;
              LODWORD(v132) = *(unsigned __int8 *)(v93 + 104);
              LODWORD(v131) = *(unsigned __int8 *)(v93 + 105);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v102 = OUTLINED_FUNCTION_14_1();
              v135 = v98;
              v136 = v94;
              if ((v102 & 1) == 0)
              {
                OUTLINED_FUNCTION_4_113();
                v92 = v105;
              }
              v103 = *(_QWORD *)(v92 + 16);
              if (v103 >= *(_QWORD *)(v92 + 24) >> 1)
              {
                OUTLINED_FUNCTION_4_113();
                v92 = v106;
              }
              *(_QWORD *)(v92 + 16) = v103 + 1;
              v104 = v92 + 80 * v103;
              *(_QWORD *)(v104 + 32) = v136;
              *(_QWORD *)(v104 + 40) = v95;
              *(_BYTE *)(v104 + 48) = v96;
              *(_QWORD *)(v104 + 56) = v135;
              *(_QWORD *)(v104 + 64) = v97;
              *(_QWORD *)(v104 + 72) = v134;
              *(_QWORD *)(v104 + 80) = v100;
              *(_QWORD *)(v104 + 88) = v133;
              *(_QWORD *)(v104 + 96) = v101;
              *(_BYTE *)(v104 + 104) = v132;
              *(_BYTE *)(v104 + 105) = v131;
              v89 = v129;
              v90 = (uint64_t)v130;
            }
            v91 += 88;
            --v88;
          }
          while (v88);
          swift_bridgeObjectRelease();
        }
        else
        {
          v92 = MEMORY[0x1E0DEE9D8];
        }
        sub_1C0057214(v92);
        v111 = v110;
        swift_bridgeObjectRelease();
        v112 = v117;
        sub_1C009E3B0(v116, v117);
        v113 = *(int *)(type metadata accessor for Contact() + 80);
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v112 + v113) = v111;
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  v25 = 0;
  v130 = v19 + 3;
  v131 = (uint64_t)v17;
  v129 = (uint64_t)(v17 + 4);
  v26 = v132;
  while (v25 < *(_QWORD *)(v26 + 16))
  {
    v27 = (*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80);
    v28 = *(_QWORD *)(v135 + 72);
    sub_1C02D4808(v26 + v27 + v28 * v25, (uint64_t)v19);
    if (!v134)
      goto LABEL_8;
    v29 = v14;
    v30 = v131;
    v31 = v130[*(int *)(v7 + 36)];
    sub_1C02D4808((uint64_t)v19, v131);
    if (v31 == 1)
    {
      sub_1C02D4898(v30);
      v14 = v29;
      v26 = v132;
LABEL_8:
      sub_1C02D4850((uint64_t)v19, (uint64_t)v14);
      if ((OUTLINED_FUNCTION_14_1() & 1) == 0)
      {
        OUTLINED_FUNCTION_1_138();
        sub_1C00B198C();
      }
      v33 = v139[0];
      v34 = *(_QWORD *)(v139[0] + 16);
      if (v34 >= *(_QWORD *)(v139[0] + 24) >> 1)
      {
        sub_1C00B198C();
        v33 = v139[0];
      }
      *(_QWORD *)(v33 + 16) = v34 + 1;
      sub_1C02D4850((uint64_t)v14, v33 + v27 + v34 * v28);
      v7 = v136;
      goto LABEL_13;
    }
    v32 = *(unsigned __int8 *)(v129 + *(int *)(v7 + 36));
    sub_1C02D4898(v30);
    v14 = v29;
    v26 = v132;
    if (v32 == 1)
      goto LABEL_8;
    sub_1C02D4898((uint64_t)v19);
LABEL_13:
    if (v133 == ++v25)
    {
      v25 = v139[0];
      v23 = MEMORY[0x1E0DEE9D8];
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_69:
  swift_once();
LABEL_19:
  v36 = sub_1C0303B98();
  __swift_project_value_buffer(v36, (uint64_t)&unk_1ED7295C8);
  swift_retain_n();
  v37 = sub_1C0303B80();
  v38 = sub_1C03042E8();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (_DWORD *)OUTLINED_FUNCTION_4_0();
    v139[0] = OUTLINED_FUNCTION_4_0();
    *v39 = 136315138;
    swift_retain();
    v40 = MEMORY[0x1C3B97040]();
    v42 = v41;
    swift_release();
    v138 = sub_1C003E6D8(v40, v42, v139);
    sub_1C03044B0();
    OUTLINED_FUNCTION_291();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_7_18(&dword_1C0039000, v37, v38, "allowed handles: %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_291();
  v107 = (uint64_t)v128;
  sub_1C009E3B0(v116, (uint64_t)v128);
  v108 = sub_1C02D38EC(v25);
  swift_release();
  v109 = *(int *)(type metadata accessor for Contact() + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v107 + v109) = v108;
  return sub_1C009DEB0(v107, v117);
}

uint64_t sub_1C02D4808(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C02D4850(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C02D4898(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C02D48D8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  char v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  _QWORD *v107;
  char *v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  char v117;
  uint64_t v118;
  uint64_t v119;

  v3 = a1[1];
  v4 = sub_1C03049CC();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1C02D4FFC(0, (char *)v3, (char *)1, a1);
      return;
    }
    goto LABEL_127;
  }
  v5 = v4;
  sub_1C027E0A4(v3 / 2);
  v99 = v6;
  v100 = v3;
  v108 = v7;
  v97 = a1;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v38 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_89:
    if (v38 < 2)
    {
LABEL_104:
      swift_bridgeObjectRelease();
      if (v100 >= -1)
      {
        *(_QWORD *)(v99 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_132;
    }
    v87 = *v97;
    while (1)
    {
      v88 = v38 - 2;
      if (v38 < 2)
        break;
      if (!v87)
        goto LABEL_136;
      v89 = v10;
      v90 = v10 + 32;
      v91 = *(_QWORD *)&v10[16 * v88 + 32];
      v92 = *(_QWORD *)&v10[16 * v38 + 24];
      sub_1C02D5128((char *)(v87 + 88 * v91), (char *)(v87 + 88 * *(_QWORD *)&v90[16 * v38 - 16]), v87 + 88 * v92, v108);
      if (v1)
        goto LABEL_101;
      if (v92 < v91)
        goto LABEL_122;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v89 = sub_1C020FAB8();
      if (v88 >= *((_QWORD *)v89 + 2))
        goto LABEL_123;
      v93 = &v89[16 * v88 + 32];
      *(_QWORD *)v93 = v91;
      *((_QWORD *)v93 + 1) = v92;
      v94 = *((_QWORD *)v89 + 2);
      if (v38 > v94)
        goto LABEL_124;
      v10 = v89;
      memmove(&v89[16 * v38 + 16], &v89[16 * v38 + 32], 16 * (v94 - v38));
      *((_QWORD *)v89 + 2) = v94 - 1;
      v38 = v94 - 1;
      if (v94 <= 2)
        goto LABEL_104;
    }
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
    return;
  }
  v98 = v5;
  v8 = 0;
  v9 = *a1;
  v95 = *a1 - 88;
  v96 = *a1 + 256;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v11 = v3;
  while (1)
  {
    v12 = v8;
    v13 = v8 + 1;
    v101 = v10;
    v105 = v8;
    if (v8 + 1 < v11)
    {
      v14 = *(_QWORD *)(v9 + 88 * v13 + 80);
      v15 = *(_QWORD *)(v9 + 88 * v8 + 80);
      v13 = v12 + 2;
      if (v12 + 2 < v11)
      {
        v16 = (uint64_t *)(v96 + 88 * v12);
        v17 = v14;
        while (1)
        {
          v19 = *v16;
          v16 += 11;
          v18 = v19;
          if (v15 < v14 == v17 >= v19)
            break;
          ++v13;
          v17 = v18;
          if (v13 >= v11)
          {
            v13 = v11;
            break;
          }
        }
      }
      if (v15 < v14)
      {
        if (v13 < v12)
          goto LABEL_129;
        if (v12 < v13)
        {
          v20 = 88 * v13;
          v21 = v13;
          v22 = v12;
          v23 = 88 * v12;
          do
          {
            if (v22 != --v13)
            {
              if (!v9)
                goto LABEL_135;
              v24 = v9 + v20;
              v25 = *(_QWORD *)(v9 + v23);
              v26 = *(_QWORD *)(v9 + v23 + 8);
              v117 = *(_BYTE *)(v9 + v23 + 16);
              v115 = *(_OWORD *)(v9 + v23 + 24);
              v113 = *(_OWORD *)(v9 + v23 + 40);
              v109 = *(_QWORD *)(v9 + v23 + 64);
              v111 = *(_QWORD *)(v9 + v23 + 56);
              v106 = *(_BYTE *)(v9 + v23 + 72);
              v103 = *(_BYTE *)(v9 + v23 + 73);
              v102 = *(_QWORD *)(v9 + v23 + 80);
              memmove((void *)(v9 + v23), (const void *)(v9 + v20 - 88), 0x58uLL);
              *(_QWORD *)(v24 - 88) = v25;
              *(_QWORD *)(v24 - 80) = v26;
              *(_BYTE *)(v24 - 72) = v117;
              *(_OWORD *)(v24 - 64) = v115;
              *(_OWORD *)(v24 - 48) = v113;
              *(_QWORD *)(v24 - 32) = v111;
              *(_QWORD *)(v24 - 24) = v109;
              *(_BYTE *)(v24 - 16) = v106;
              *(_BYTE *)(v24 - 15) = v103;
              v10 = v101;
              *(_QWORD *)(v24 - 8) = v102;
            }
            ++v22;
            v20 -= 88;
            v23 += 88;
          }
          while (v22 < v13);
          v11 = v100;
          v13 = v21;
          v12 = v105;
        }
      }
    }
    if (v13 < v11)
    {
      if (__OFSUB__(v13, v12))
        goto LABEL_126;
      if (v13 - v12 < v98)
      {
        if (__OFADD__(v12, v98))
          goto LABEL_130;
        if (v12 + v98 >= v11)
          v27 = v11;
        else
          v27 = v12 + v98;
        if (v27 < v12)
          goto LABEL_131;
        if (v13 != v27)
        {
          v28 = (_QWORD *)(v95 + 88 * v13);
          v104 = v27;
          do
          {
            v29 = *(_QWORD *)(v9 + 88 * v13 + 80);
            v30 = v12;
            v107 = v28;
            do
            {
              if (v28[10] >= v29)
                break;
              if (!v9)
                goto LABEL_133;
              v31 = v9;
              v32 = v28[12];
              v118 = v28[11];
              v33 = *((_BYTE *)v28 + 104);
              v116 = *((_OWORD *)v28 + 7);
              v114 = *((_OWORD *)v28 + 8);
              v34 = v28[18];
              v112 = v28[19];
              v110 = *((_BYTE *)v28 + 160);
              v35 = *((_BYTE *)v28 + 161);
              memcpy(v28 + 11, v28, 0x58uLL);
              *v28 = v118;
              v28[1] = v32;
              *((_BYTE *)v28 + 16) = v33;
              *(_OWORD *)(v28 + 3) = v116;
              *(_OWORD *)(v28 + 5) = v114;
              v28[7] = v34;
              v28[8] = v112;
              *((_BYTE *)v28 + 72) = v110;
              *((_BYTE *)v28 + 73) = v35;
              v28[10] = v29;
              v28 -= 11;
              ++v30;
              v9 = v31;
            }
            while (v13 != v30);
            ++v13;
            v12 = v105;
            v28 = v107 + 11;
          }
          while (v13 != v104);
          v13 = v104;
          v10 = v101;
        }
      }
    }
    if (v13 < v12)
      goto LABEL_125;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1C00500C8(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v37 = *((_QWORD *)v10 + 2);
    v36 = *((_QWORD *)v10 + 3);
    v38 = v37 + 1;
    if (v37 >= v36 >> 1)
      v10 = sub_1C00500C8((char *)(v36 > 1), v37 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v38;
    v39 = v10 + 32;
    v40 = &v10[16 * v37 + 32];
    *(_QWORD *)v40 = v105;
    *((_QWORD *)v40 + 1) = v13;
    v119 = v13;
    if (v37)
      break;
    v38 = 1;
LABEL_83:
    v11 = v100;
    v8 = v119;
    if (v119 >= v100)
      goto LABEL_89;
  }
  while (1)
  {
    v41 = v38 - 1;
    if (v38 >= 4)
    {
      v46 = &v39[16 * v38];
      v47 = *((_QWORD *)v46 - 8);
      v48 = *((_QWORD *)v46 - 7);
      v52 = __OFSUB__(v48, v47);
      v49 = v48 - v47;
      if (v52)
        goto LABEL_110;
      v51 = *((_QWORD *)v46 - 6);
      v50 = *((_QWORD *)v46 - 5);
      v52 = __OFSUB__(v50, v51);
      v44 = v50 - v51;
      v45 = v52;
      if (v52)
        goto LABEL_111;
      v53 = v38 - 2;
      v54 = &v39[16 * v38 - 32];
      v56 = *(_QWORD *)v54;
      v55 = *((_QWORD *)v54 + 1);
      v52 = __OFSUB__(v55, v56);
      v57 = v55 - v56;
      if (v52)
        goto LABEL_112;
      v52 = __OFADD__(v44, v57);
      v58 = v44 + v57;
      if (v52)
        goto LABEL_114;
      if (v58 >= v49)
      {
        v76 = &v39[16 * v41];
        v78 = *(_QWORD *)v76;
        v77 = *((_QWORD *)v76 + 1);
        v52 = __OFSUB__(v77, v78);
        v79 = v77 - v78;
        if (v52)
          goto LABEL_120;
        v69 = v44 < v79;
        goto LABEL_72;
      }
    }
    else
    {
      if (v38 != 3)
      {
        v70 = *((_QWORD *)v10 + 4);
        v71 = *((_QWORD *)v10 + 5);
        v52 = __OFSUB__(v71, v70);
        v63 = v71 - v70;
        v64 = v52;
        goto LABEL_66;
      }
      v43 = *((_QWORD *)v10 + 4);
      v42 = *((_QWORD *)v10 + 5);
      v52 = __OFSUB__(v42, v43);
      v44 = v42 - v43;
      v45 = v52;
    }
    if ((v45 & 1) != 0)
      goto LABEL_113;
    v53 = v38 - 2;
    v59 = &v39[16 * v38 - 32];
    v61 = *(_QWORD *)v59;
    v60 = *((_QWORD *)v59 + 1);
    v62 = __OFSUB__(v60, v61);
    v63 = v60 - v61;
    v64 = v62;
    if (v62)
      goto LABEL_115;
    v65 = &v39[16 * v41];
    v67 = *(_QWORD *)v65;
    v66 = *((_QWORD *)v65 + 1);
    v52 = __OFSUB__(v66, v67);
    v68 = v66 - v67;
    if (v52)
      goto LABEL_117;
    if (__OFADD__(v63, v68))
      goto LABEL_119;
    if (v63 + v68 >= v44)
    {
      v69 = v44 < v68;
LABEL_72:
      if (v69)
        v41 = v53;
      goto LABEL_74;
    }
LABEL_66:
    if ((v64 & 1) != 0)
      goto LABEL_116;
    v72 = &v39[16 * v41];
    v74 = *(_QWORD *)v72;
    v73 = *((_QWORD *)v72 + 1);
    v52 = __OFSUB__(v73, v74);
    v75 = v73 - v74;
    if (v52)
      goto LABEL_118;
    if (v75 < v63)
      goto LABEL_83;
LABEL_74:
    v80 = v41 - 1;
    if (v41 - 1 >= v38)
    {
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
      goto LABEL_121;
    }
    if (!v9)
      goto LABEL_134;
    v81 = v10;
    v82 = &v39[16 * v80];
    v83 = *(_QWORD *)v82;
    v84 = &v39[16 * v41];
    v85 = *((_QWORD *)v84 + 1);
    sub_1C02D5128((char *)(v9 + 88 * *(_QWORD *)v82), (char *)(v9 + 88 * *(_QWORD *)v84), v9 + 88 * v85, v108);
    if (v1)
      break;
    if (v85 < v83)
      goto LABEL_107;
    if (v41 > *((_QWORD *)v81 + 2))
      goto LABEL_108;
    *(_QWORD *)v82 = v83;
    *(_QWORD *)&v39[16 * v80 + 8] = v85;
    v86 = *((_QWORD *)v81 + 2);
    if (v41 >= v86)
      goto LABEL_109;
    v38 = v86 - 1;
    memmove(&v39[16 * v41], v84 + 16, 16 * (v86 - 1 - v41));
    *((_QWORD *)v81 + 2) = v86 - 1;
    v10 = v81;
    if (v86 <= 2)
      goto LABEL_83;
  }
LABEL_101:
  swift_bridgeObjectRelease();
  if (v100 < -1)
    goto LABEL_128;
  *(_QWORD *)(v99 + 16) = 0;
  swift_bridgeObjectRelease();
}

char *sub_1C02D4FFC(char *result, char *a2, char *a3, uint64_t *a4)
{
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v14 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v16 = *a4;
    v5 = (_QWORD *)(*a4 + 88 * (_QWORD)a3 - 88);
    while (2)
    {
      v6 = *(_QWORD *)(v16 + 88 * (_QWORD)v4 + 80);
      v7 = v14;
      v15 = v5;
      do
      {
        if (v5[10] >= v6)
          break;
        if (!v16)
        {
          __break(1u);
          return result;
        }
        v8 = v5[11];
        v20 = v5[12];
        v9 = *((_BYTE *)v5 + 104);
        v18 = *((_OWORD *)v5 + 8);
        v19 = *((_OWORD *)v5 + 7);
        v11 = v5[18];
        v10 = v5[19];
        v17 = *((_BYTE *)v5 + 160);
        v12 = *((_BYTE *)v5 + 161);
        result = (char *)memcpy(v5 + 11, v5, 0x58uLL);
        *v5 = v8;
        v5[1] = v20;
        *((_BYTE *)v5 + 16) = v9;
        *(_OWORD *)(v5 + 3) = v19;
        *(_OWORD *)(v5 + 5) = v18;
        v5[7] = v11;
        v5[8] = v10;
        *((_BYTE *)v5 + 72) = v17;
        *((_BYTE *)v5 + 73) = v12;
        v5[10] = v6;
        v5 -= 11;
        ++v7;
      }
      while (v4 != v7);
      ++v4;
      v5 = v15 + 11;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1C02D5128(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  char *v14;
  char *v18;
  char *v19;
  char *v20;
  BOOL v21;
  BOOL v22;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 88;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 88;
  if (v9 >= v11)
  {
    sub_1C00AE0D8(a2, (uint64_t)(a3 - (_QWORD)a2) / 88, a4);
    v12 = (unint64_t)&v4[88 * v11];
    if (v7 >= v6 || v10 < 88)
      goto LABEL_41;
    v18 = (char *)(a3 - 88);
    while (1)
    {
      v19 = v18 + 88;
      if (*((_QWORD *)v6 - 1) >= *(_QWORD *)(v12 - 8))
      {
        v20 = (char *)(v12 - 88);
        v22 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v12 -= 88;
        if (!v22)
          goto LABEL_37;
      }
      else
      {
        v20 = v6 - 88;
        v21 = v19 != v6 || v18 >= v6;
        v6 -= 88;
        if (!v21)
          goto LABEL_37;
      }
      memmove(v18, v20, 0x58uLL);
LABEL_37:
      v18 -= 88;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_41;
    }
  }
  sub_1C00AE0D8(a1, (a2 - a1) / 88, a4);
  v12 = (unint64_t)&v4[88 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 88)
  {
    do
    {
      if (*((_QWORD *)v4 + 10) >= *((_QWORD *)v6 + 10))
      {
        v13 = v7 == v4;
        v14 = v4;
        v4 += 88;
        if (v13 && v7 < v4)
          goto LABEL_16;
      }
      else
      {
        v13 = v7 == v6;
        v14 = v6;
        v6 += 88;
        if (v13 && v7 < v6)
          goto LABEL_16;
      }
      memmove(v7, v14, 0x58uLL);
LABEL_16:
      v7 += 88;
    }
    while ((unint64_t)v4 < v12 && (unint64_t)v6 < a3);
  }
  v6 = v7;
LABEL_41:
  sub_1C00AE0D8(v4, (uint64_t)(v12 - (_QWORD)v4) / 88, v6);
  return 1;
}

uint64_t OUTLINED_FUNCTION_1_138()
{
  return 0;
}

void OUTLINED_FUNCTION_4_113()
{
  sub_1C0050A34();
}

SiriInference::DateTimeResolutionContext::Hemisphere_optional __swiftcall DateTimeResolutionContext.Hemisphere.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (SiriInference::DateTimeResolutionContext::Hemisphere_optional)rawValue;
}

uint64_t DateTimeResolutionContext.Hemisphere.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

SiriInference::DateTimeResolutionContext::Hemisphere_optional sub_1C02D5308(Swift::Int *a1)
{
  return DateTimeResolutionContext.Hemisphere.init(rawValue:)(*a1);
}

uint64_t sub_1C02D5310@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DateTimeResolutionContext.Hemisphere.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C02D5334()
{
  sub_1C02D66E4();
  return sub_1C03040FC();
}

uint64_t sub_1C02D5390()
{
  sub_1C02D66E4();
  return sub_1C03040D8();
}

uint64_t DateTimeResolutionContext.__allocating_init(with:regionFormat:regionAwareLanguage:timeZone:hemisphere:calendar:date:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  DateTimeResolutionContext.init(with:regionFormat:regionAwareLanguage:timeZone:hemisphere:calendar:date:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t sub_1C02D5460(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x65676175676E616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6F466E6F69676572 && a2 == 0xEC00000074616D72;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x80000001C0330950 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x656E6F5A656D6974 && a2 == 0xE800000000000000;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x65687073696D6568 && a2 == 0xEA00000000006572;
        if (v8 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = a1 == 0x7261646E656C6163 && a2 == 0xE800000000000000;
          if (v9 || (sub_1C0304A08() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 1702125924 && a2 == 0xE400000000000000)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            v11 = sub_1C0304A08();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 6;
            else
              return 7;
          }
        }
      }
    }
  }
}

uint64_t sub_1C02D573C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C02D5770 + 4 * byte_1C0325820[a1]))(0x65676175676E616CLL, 0xE800000000000000);
}

uint64_t sub_1C02D5770()
{
  return 0x6F466E6F69676572;
}

unint64_t sub_1C02D5790()
{
  return 0xD000000000000013;
}

uint64_t sub_1C02D57AC()
{
  return 0x656E6F5A656D6974;
}

uint64_t sub_1C02D57C0()
{
  return 0x65687073696D6568;
}

uint64_t sub_1C02D57DC()
{
  return 0x7261646E656C6163;
}

uint64_t sub_1C02D57F0()
{
  return 1702125924;
}

uint64_t sub_1C02D5800()
{
  unsigned __int8 *v0;

  return sub_1C02D573C(*v0);
}

uint64_t sub_1C02D5808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C02D5460(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C02D582C()
{
  sub_1C02D5D48();
  return sub_1C0304BAC();
}

uint64_t sub_1C02D5854()
{
  sub_1C02D5D48();
  return sub_1C0304BB8();
}

uint64_t sub_1C02D587C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;

  v37 = OUTLINED_FUNCTION_22_55();
  v39 = *(_QWORD *)(v37 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_53();
  v38 = v2;
  v3 = sub_1C0301EC4();
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_6_105(v5, v36);
  v45 = sub_1C0301F00();
  v43 = *(_QWORD *)(v45 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_53();
  v44 = v7;
  v8 = OUTLINED_FUNCTION_24_38();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v46 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v47 = (uint64_t)&v36 - v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v36 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3CA8);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_6_0();
  v20 = v19 - v18;
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  sub_1C02D5D48();
  sub_1C0304BA0();
  OUTLINED_FUNCTION_18_48((uint64_t)v15, v50 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_language);
  v51 = 0;
  sub_1C0068358(&qword_1EF5BE2F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E50]);
  v49 = v16;
  v21 = v20;
  v22 = v48;
  sub_1C030499C();
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v20, v49);
  }
  else
  {
    v24 = (uint64_t)v46;
    v48 = v17;
    v25 = *(void (**)(char *, uint64_t))(v9 + 8);
    v25(v15, v8);
    v26 = v50;
    OUTLINED_FUNCTION_18_48(v47, v50 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_regionFormat);
    v51 = 1;
    OUTLINED_FUNCTION_10_83();
    OUTLINED_FUNCTION_16_60();
    OUTLINED_FUNCTION_18_48(v24, v26 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_regionAwareLanguage);
    v51 = 2;
    OUTLINED_FUNCTION_10_83();
    v25((char *)v24, v8);
    v28 = v43;
    v27 = v44;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v44, v26 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_timeZone, v45);
    v51 = 3;
    sub_1C0068358(&qword_1EF5BF140, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1488]);
    OUTLINED_FUNCTION_15_61();
    OUTLINED_FUNCTION_51_7(v27, *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
    v51 = *(_BYTE *)(v26 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_hemisphere);
    v52 = 4;
    sub_1C02D5D84();
    sub_1C030499C();
    v29 = v26 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_calendar;
    swift_beginAccess();
    v31 = v40;
    v30 = v41;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v40, v29, v42);
    v52 = 5;
    sub_1C0068358(&qword_1EF5C3CC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11F0], MEMORY[0x1E0CB1208]);
    OUTLINED_FUNCTION_15_61();
    OUTLINED_FUNCTION_51_7(v31, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
    v33 = v38;
    v32 = v39;
    v34 = v37;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v38, v26 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_date, v37);
    v52 = 6;
    sub_1C0068358(&qword_1ED725900, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1C030499C();
    v35 = v48;
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v34);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v21, v49);
  }
}

unint64_t sub_1C02D5D48()
{
  unint64_t result;

  result = qword_1EF5C3CB0;
  if (!qword_1EF5C3CB0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0325AA0, &type metadata for DateTimeResolutionContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3CB0);
  }
  return result;
}

unint64_t sub_1C02D5D84()
{
  unint64_t result;

  result = qword_1EF5C3CB8;
  if (!qword_1EF5C3CB8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTimeResolutionContext.Hemisphere, &type metadata for DateTimeResolutionContext.Hemisphere);
    atomic_store(result, (unint64_t *)&qword_1EF5C3CB8);
  }
  return result;
}

uint64_t DateTimeResolutionContext.__allocating_init(from:)()
{
  uint64_t v0;

  v0 = swift_allocObject();
  DateTimeResolutionContext.init(from:)();
  return v0;
}

uint64_t DateTimeResolutionContext.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[3];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;

  v31 = OUTLINED_FUNCTION_22_55();
  v30 = *(_QWORD *)(v31 - 8);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_6_105(v2, v29[0]);
  v3 = sub_1C0301EC4();
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_53();
  v32 = v5;
  v6 = sub_1C0301F00();
  v36 = *(_QWORD *)(v6 - 8);
  v37 = v6;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_53();
  v33 = v8;
  v9 = OUTLINED_FUNCTION_24_38();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v14);
  v38 = (char *)v29 - v15;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3CC8);
  v16 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_6_0();
  v19 = v18 - v17;
  v20 = v0[3];
  v41 = v0;
  __swift_project_boxed_opaque_existential_1(v0, v20);
  sub_1C02D5D48();
  v40 = v19;
  v21 = v43;
  sub_1C0304B88();
  if (v21)
  {
    v22 = (uint64_t)v41;
    v27 = v42;
    type metadata accessor for DateTimeResolutionContext();
    swift_deallocPartialClassInstance();
    v28 = v22;
  }
  else
  {
    v29[1] = (uint64_t)v13;
    v29[2] = v10;
    v43 = v16;
    v51 = 0;
    sub_1C0068358(&qword_1EF5BE2D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E68]);
    OUTLINED_FUNCTION_7_103();
    OUTLINED_FUNCTION_4_114();
    v24 = v42;
    v29[0] = v42 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_language;
    OUTLINED_FUNCTION_9_93(v42 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_language);
    v50 = 1;
    OUTLINED_FUNCTION_7_103();
    OUTLINED_FUNCTION_5_100();
    OUTLINED_FUNCTION_9_93(v24 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_regionFormat);
    v49 = 2;
    OUTLINED_FUNCTION_7_103();
    v38 = 0;
    OUTLINED_FUNCTION_5_100();
    OUTLINED_FUNCTION_9_93(v24 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_regionAwareLanguage);
    v48 = 3;
    sub_1C0068358(&qword_1EF5BF150, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB14A0]);
    v25 = v33;
    v26 = v37;
    OUTLINED_FUNCTION_5_100();
    v27 = v24;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v24 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_timeZone, v25, v26);
    v46 = 4;
    sub_1C02D637C();
    OUTLINED_FUNCTION_4_114();
    *(_BYTE *)(v24 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_hemisphere) = v47;
    v45 = 5;
    sub_1C0068358(&qword_1EF5C3CD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11F0], MEMORY[0x1E0CB1218]);
    OUTLINED_FUNCTION_4_114();
    OUTLINED_FUNCTION_12_70(v24 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_calendar, v34);
    v44 = 6;
    sub_1C0068358(&qword_1ED725908, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    OUTLINED_FUNCTION_4_114();
    OUTLINED_FUNCTION_0_152(v43);
    OUTLINED_FUNCTION_12_70(v24 + OBJC_IVAR____TtC13SiriInference25DateTimeResolutionContext_date, v30);
    v28 = (uint64_t)v41;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v28);
  return v27;
}

unint64_t sub_1C02D637C()
{
  unint64_t result;

  result = qword_1EF5C3CD0;
  if (!qword_1EF5C3CD0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTimeResolutionContext.Hemisphere, &type metadata for DateTimeResolutionContext.Hemisphere);
    atomic_store(result, (unint64_t *)&qword_1EF5C3CD0);
  }
  return result;
}

unint64_t sub_1C02D63BC()
{
  unint64_t result;

  result = qword_1EF5C3CE0;
  if (!qword_1EF5C3CE0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTimeResolutionContext.Hemisphere, &type metadata for DateTimeResolutionContext.Hemisphere);
    atomic_store(result, (unint64_t *)&qword_1EF5C3CE0);
  }
  return result;
}

uint64_t sub_1C02D63F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = DateTimeResolutionContext.__allocating_init(from:)();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1C02D6420()
{
  return sub_1C02D587C();
}

uint64_t sub_1C02D6440()
{
  return type metadata accessor for DateTimeResolutionContext();
}

uint64_t sub_1C02D6448()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = sub_1C0301DB0();
  if (v1 <= 0x3F)
  {
    result = sub_1C0301F00();
    if (v2 <= 0x3F)
    {
      result = sub_1C0301EC4();
      if (v3 <= 0x3F)
      {
        result = sub_1C0301CFC();
        if (v4 <= 0x3F)
          return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t method lookup function for DateTimeResolutionContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DateTimeResolutionContext.__allocating_init(with:regionFormat:regionAwareLanguage:timeZone:hemisphere:calendar:date:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of DateTimeResolutionContext.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of DateTimeResolutionContext.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 320))();
}

uint64_t storeEnumTagSinglePayload for DateTimeResolutionContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1C02D65A4 + 4 * byte_1C0325836[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1C02D65D8 + 4 * byte_1C0325831[v4]))();
}

uint64_t sub_1C02D65D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02D65E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02D65E8);
  return result;
}

uint64_t sub_1C02D65F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02D65FCLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1C02D6600(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02D6608(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DateTimeResolutionContext.CodingKeys()
{
  return &type metadata for DateTimeResolutionContext.CodingKeys;
}

unint64_t sub_1C02D6628()
{
  unint64_t result;

  result = qword_1EF5C3E80;
  if (!qword_1EF5C3E80)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0325A78, &type metadata for DateTimeResolutionContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3E80);
  }
  return result;
}

unint64_t sub_1C02D6668()
{
  unint64_t result;

  result = qword_1EF5C3E88;
  if (!qword_1EF5C3E88)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03259E8, &type metadata for DateTimeResolutionContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3E88);
  }
  return result;
}

unint64_t sub_1C02D66A8()
{
  unint64_t result;

  result = qword_1EF5C3E90;
  if (!qword_1EF5C3E90)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0325A10, &type metadata for DateTimeResolutionContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C3E90);
  }
  return result;
}

unint64_t sub_1C02D66E4()
{
  unint64_t result;

  result = qword_1EF5C3E98;
  if (!qword_1EF5C3E98)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTimeResolutionContext.Hemisphere, &type metadata for DateTimeResolutionContext.Hemisphere);
    atomic_store(result, (unint64_t *)&qword_1EF5C3E98);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_152@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(a1 + 8))(*(_QWORD *)(v2 - 112), v1);
}

uint64_t OUTLINED_FUNCTION_3_139()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 88) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_4_114()
{
  return sub_1C03048E8();
}

uint64_t OUTLINED_FUNCTION_5_100()
{
  return sub_1C03048E8();
}

uint64_t OUTLINED_FUNCTION_6_105@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t OUTLINED_FUNCTION_7_103()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_8_81()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 128) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_9_93(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_10_83()
{
  return sub_1C030499C();
}

uint64_t OUTLINED_FUNCTION_12_70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 32))(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_15_61()
{
  return sub_1C030499C();
}

uint64_t OUTLINED_FUNCTION_16_60()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, uint64_t);
  uint64_t v2;

  return v1(*(_QWORD *)(v2 - 136), v0);
}

uint64_t OUTLINED_FUNCTION_17_61(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_18_48(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_19_51@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);

  return v3(v1 + a1, v2);
}

uint64_t OUTLINED_FUNCTION_20_44(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v1, v3);
}

uint64_t OUTLINED_FUNCTION_21_53(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_22_55()
{
  return sub_1C0301CFC();
}

uint64_t OUTLINED_FUNCTION_23_45(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_24_38()
{
  return sub_1C0301DB0();
}

uint64_t OUTLINED_FUNCTION_25_38()
{
  return 0;
}

uint64_t sub_1C02D6848(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint8_t *v34;
  NSObject *log;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_32_34();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C03084B0;
  v11 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 64) = &off_1E799BE20;
  *(_QWORD *)(inited + 32) = a4;
  *(_QWORD *)(inited + 40) = a5;
  *(_QWORD *)(inited + 96) = v11;
  *(_QWORD *)(inited + 104) = &off_1E799BE20;
  *(_QWORD *)(inited + 72) = a2;
  *(_QWORD *)(inited + 80) = a3;
  OUTLINED_FUNCTION_32();
  swift_bridgeObjectRetain();
  sub_1C006890C(0xD0000000000000BELL, 0x80000001C0336AF0, inited);
  if (v5)
  {
    swift_setDeallocating();
    sub_1C004EFEC();
  }
  else
  {
    swift_setDeallocating();
    sub_1C004EFEC();
    v12 = swift_retain();
    v13 = sub_1C00704C0(v12);
    v15 = v14;
    OUTLINED_FUNCTION_32();
    v36 = sub_1C0221124(v13, v15, a4, a5);
    swift_bridgeObjectRelease();
    swift_release();
    if (qword_1ED728298 != -1)
      swift_once();
    v17 = OUTLINED_FUNCTION_9_0();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED729610);
    inited = v36;
    OUTLINED_FUNCTION_30_42();
    OUTLINED_FUNCTION_9_2();
    OUTLINED_FUNCTION_9_2();
    v18 = sub_1C0303B80();
    v19 = sub_1C03042E8();
    if (os_log_type_enabled(v18, v19))
    {
      log = v18;
      v20 = OUTLINED_FUNCTION_4_0();
      v37 = OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v20 = 136316162;
      sub_1C003E6D8(0xD0000000000000BELL, 0x80000001C0336AF0, &v37);
      OUTLINED_FUNCTION_24_39();
      *(_WORD *)(v20 + 12) = 2080;
      OUTLINED_FUNCTION_32();
      sub_1C003E6D8(a4, a5, &v37);
      OUTLINED_FUNCTION_24_39();
      OUTLINED_FUNCTION_8_2();
      *(_WORD *)(v20 + 22) = 2080;
      swift_bridgeObjectRetain();
      sub_1C003E6D8(a2, a3, &v37);
      OUTLINED_FUNCTION_23_46();
      OUTLINED_FUNCTION_8_2();
      *(_WORD *)(v20 + 32) = 2048;
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_23_46();
      OUTLINED_FUNCTION_17_0();
      v34 = (uint8_t *)v20;
      *(_WORD *)(v20 + 42) = 2080;
      v21 = *(_QWORD *)(v36 + 16);
      if (v21)
      {
        OUTLINED_FUNCTION_21();
        v22 = MEMORY[0x1E0DEE9D8];
        v23 = 32;
        do
        {
          v24 = sub_1C03049E4();
          v26 = v25;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_35_23();
            v22 = v29;
          }
          v27 = *(_QWORD *)(v22 + 16);
          if (v27 >= *(_QWORD *)(v22 + 24) >> 1)
          {
            OUTLINED_FUNCTION_35_23();
            v22 = v30;
          }
          *(_QWORD *)(v22 + 16) = v27 + 1;
          v28 = v22 + 16 * v27;
          *(_QWORD *)(v28 + 32) = v24;
          *(_QWORD *)(v28 + 40) = v26;
          v23 += 64;
          --v21;
        }
        while (v21);
        OUTLINED_FUNCTION_17_0();
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
      sub_1C004B224();
      v31 = sub_1C0303E50();
      v33 = v32;
      swift_bridgeObjectRelease();
      sub_1C003E6D8(v31, v33, &v37);
      sub_1C03044B0();
      OUTLINED_FUNCTION_2();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0039000, log, v19, "SiriRemembers+Entity#search %s with %s, query %s, returned %ld with ids %s", v34, 0x34u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }

    swift_release();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_29_40();
  }
  return inited;
}

uint64_t sub_1C02D6CF0@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t a3@<X3>, unint64_t a4@<X4>, unint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t inited;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  NSObject *v40;
  _BOOL4 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  unint64_t v80;
  uint64_t v81[5];
  uint64_t v82;

  OUTLINED_FUNCTION_32_34();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C03084B0;
  v12 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 64) = &off_1E799BE20;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  *(_QWORD *)(inited + 96) = v12;
  *(_QWORD *)(inited + 104) = &off_1E799BE20;
  *(_QWORD *)(inited + 72) = a3;
  *(_QWORD *)(inited + 80) = a4;
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_74_1();
  v13 = "isphere";
  v14 = sub_1C00CD0B4(0xD000000000000087, 0x80000001C0336A60, inited);
  v82 = v5;
  if (v5)
  {
    swift_setDeallocating();
    return sub_1C004EFEC();
  }
  v17 = v14;
  v76 = a4;
  v77 = v15;
  v71 = a3;
  v69 = a1;
  v74 = a5;
  v75 = a2;
  swift_setDeallocating();
  sub_1C004EFEC();
  if (v17)
  {
    v18 = OUTLINED_FUNCTION_25_39();
    if ((v19 & 1) == 0)
    {
      if ((v18 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v18 < *(_QWORD *)(v77 + 16))
      {
        inited = v77 + 32;
        OUTLINED_FUNCTION_20_45(v18, v19, v20, v21, v22, v23, v24, v25, v67, a1, a3);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727520);
        if ((OUTLINED_FUNCTION_5_0() & 1) != 0)
        {
          a4 = (unint64_t)v79;
          v26 = OUTLINED_FUNCTION_37_34();
          v28 = sub_1C00A9B84(v26, v27, v17);
          if ((v29 & 1) != 0)
          {
            OUTLINED_FUNCTION_44();
            sub_1C00B0E2C();
            v62 = v66;
            OUTLINED_FUNCTION_33();
            v63 = 1;
LABEL_26:
            sub_1C0056D18();
            OUTLINED_FUNCTION_15_2();
            v65 = xmmword_1C031ECC0;
            goto LABEL_27;
          }
          if ((v28 & 0x8000000000000000) == 0)
          {
            if (v28 < *(_QWORD *)(v77 + 16))
            {
              OUTLINED_FUNCTION_20_45(v28, v29, v30, v31, v32, v33, v34, v35, v68, v69, v71);
              if ((OUTLINED_FUNCTION_5_0() & 1) != 0)
              {
                a2 = v80;
                if (v80)
                {
                  v13 = v79;
                  swift_bridgeObjectRelease();
                  OUTLINED_FUNCTION_33();
                  v36 = qword_1ED728298;
                  a3 = v75;
                  OUTLINED_FUNCTION_21();
                  inited = v76;
                  swift_bridgeObjectRetain();
                  if (v36 == -1)
                  {
LABEL_14:
                    v37 = OUTLINED_FUNCTION_9_0();
                    __swift_project_value_buffer(v37, (uint64_t)qword_1ED729610);
                    OUTLINED_FUNCTION_30_42();
                    swift_bridgeObjectRetain_n();
                    OUTLINED_FUNCTION_9_2();
                    OUTLINED_FUNCTION_9_2();
                    v38 = sub_1C0303B80();
                    v39 = sub_1C03042E8();
                    v40 = v38;
                    v41 = os_log_type_enabled(v38, v39);
                    v42 = v69;
                    if (v41)
                    {
                      v43 = OUTLINED_FUNCTION_4_0();
                      v44 = OUTLINED_FUNCTION_4_0();
                      v81[0] = v44;
                      *(_DWORD *)v43 = 136315906;
                      OUTLINED_FUNCTION_27_51(v44, 0x80000001C0336A60, v45, v46, v47, v48, v49, v50, v44, v69, v71, (uint64_t)"isphere");
                      OUTLINED_FUNCTION_11_84();
                      *(_WORD *)(v43 + 12) = 2080;
                      swift_bridgeObjectRetain();
                      sub_1C003E6D8(v42, v75, v81);
                      OUTLINED_FUNCTION_11_84();
                      OUTLINED_FUNCTION_8_2();
                      *(_WORD *)(v43 + 22) = 2080;
                      swift_bridgeObjectRetain();
                      sub_1C003E6D8(v72, v76, v81);
                      OUTLINED_FUNCTION_11_84();
                      OUTLINED_FUNCTION_8_2();
                      *(_WORD *)(v43 + 32) = 2048;
                      swift_bridgeObjectRelease();
                      OUTLINED_FUNCTION_17_0();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      sub_1C03044B0();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      OUTLINED_FUNCTION_17_0();
                      swift_bridgeObjectRelease();
                      _os_log_impl(&dword_1C0039000, v40, v39, "SiriRemembers+Entity#search %s with uuid %s, type %s returned entity with ID %lld", (uint8_t *)v43, 0x2Au);
                      OUTLINED_FUNCTION_36_38();
                      OUTLINED_FUNCTION_5();
                    }

                    OUTLINED_FUNCTION_2();
                    OUTLINED_FUNCTION_2();
                    OUTLINED_FUNCTION_29_40();
                    result = swift_bridgeObjectRelease_n();
                    *a5 = a4;
                    a5[1] = v71;
                    a5[2] = inited;
                    a5[3] = v69;
                    a5[4] = a3;
                    a5[5] = (unint64_t)v13;
                    a5[6] = a2;
                    a5[7] = MEMORY[0x1E0DEE9D8];
                    return result;
                  }
LABEL_33:
                  swift_once();
                  goto LABEL_14;
                }
              }
              v62 = 0;
              v63 = 3;
              goto LABEL_26;
            }
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        v62 = 0;
        v63 = 3;
LABEL_23:
        sub_1C0056D18();
        OUTLINED_FUNCTION_15_2();
        v65 = xmmword_1C0318E50;
LABEL_27:
        *(_OWORD *)v64 = v65;
        *(_QWORD *)(v64 + 16) = v62;
        *(_BYTE *)(v64 + 24) = v63;
        OUTLINED_FUNCTION_7_22();
        swift_bridgeObjectRelease();
        return OUTLINED_FUNCTION_33();
      }
      __break(1u);
      goto LABEL_31;
    }
    OUTLINED_FUNCTION_44();
    sub_1C00B0E2C();
    v62 = v61;
    OUTLINED_FUNCTION_33();
    v63 = 1;
    goto LABEL_23;
  }
  if (qword_1ED728298 != -1)
    swift_once();
  v51 = OUTLINED_FUNCTION_9_0();
  __swift_project_value_buffer(v51, (uint64_t)qword_1ED729610);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_9_2();
  v52 = sub_1C0303B80();
  v53 = sub_1C03042E8();
  if (os_log_type_enabled(v52, v53))
  {
    v54 = OUTLINED_FUNCTION_4_0();
    v78 = OUTLINED_FUNCTION_4_0();
    v81[0] = v78;
    *(_DWORD *)v54 = 136315650;
    OUTLINED_FUNCTION_27_51(v78, 0x80000001C0336A60, v55, v56, v57, v58, v59, v60, v67, a1, a3, (uint64_t)"isphere");
    OUTLINED_FUNCTION_10_84();
    *(_WORD *)(v54 + 12) = 2080;
    OUTLINED_FUNCTION_44();
    sub_1C003E6D8(v70, v75, v81);
    OUTLINED_FUNCTION_10_84();
    OUTLINED_FUNCTION_8_2();
    *(_WORD *)(v54 + 22) = 2080;
    OUTLINED_FUNCTION_21();
    sub_1C003E6D8(v73, a4, v81);
    OUTLINED_FUNCTION_10_84();
    OUTLINED_FUNCTION_8_2();
    _os_log_impl(&dword_1C0039000, v52, v53, "SiriRemembers+Entity#search %s with uuid %s, type %s returned no entities", (uint8_t *)v54, 0x20u);
    OUTLINED_FUNCTION_36_38();
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_2();
  result = OUTLINED_FUNCTION_2();
  *((_OWORD *)v74 + 2) = 0u;
  *((_OWORD *)v74 + 3) = 0u;
  *(_OWORD *)v74 = 0u;
  *((_OWORD *)v74 + 1) = 0u;
  return result;
}

unint64_t sub_1C02D7398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18[40];

  OUTLINED_FUNCTION_32_34();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
  *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 64) = &off_1E799BE20;
  *(_QWORD *)(inited + 32) = a2;
  *(_QWORD *)(inited + 40) = a3;
  swift_bridgeObjectRetain();
  v7 = sub_1C00CD0B4(0xD000000000000033, 0x80000001C0336BB0, inited);
  if (v3)
  {
    swift_setDeallocating();
    v9 = inited;
    sub_1C004EFEC();
    return v9;
  }
  v10 = v7;
  v11 = v8;
  swift_setDeallocating();
  sub_1C004EFEC();
  if (!v10)
    return 0;
  result = OUTLINED_FUNCTION_25_39();
  if ((v13 & 1) != 0)
  {
    OUTLINED_FUNCTION_44();
    sub_1C00B0E2C();
    v9 = v14;
    OUTLINED_FUNCTION_33();
    v15 = 1;
    goto LABEL_13;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(v11 + 16))
  {
    sub_1C0055F14(v11 + 40 * result + 32, (uint64_t)v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727520);
    if ((OUTLINED_FUNCTION_5_0() & 1) != 0)
    {
      v9 = v17;
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_33();
      return v9;
    }
    v9 = 0;
    v15 = 3;
LABEL_13:
    sub_1C0056D18();
    OUTLINED_FUNCTION_15_2();
    *(_OWORD *)v16 = xmmword_1C0318E50;
    *(_QWORD *)(v16 + 16) = v9;
    *(_BYTE *)(v16 + 24) = v15;
    OUTLINED_FUNCTION_7_22();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_33();
    return v9;
  }
  __break(1u);
  return result;
}

void SiriRemembersV1API.Entity.type.getter()
{
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_9();
}

void SiriRemembersV1API.Entity.uuid.getter()
{
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_9();
}

void SiriRemembersV1API.Entity.tokens.getter()
{
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_9();
}

uint64_t SiriRemembersV1API.Entity.aggregations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriRemembersV1API.Entity.init(type:uuid:tokens:aggregations:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  *a8 = 0;
  a8[1] = result;
  a8[2] = a2;
  a8[3] = a3;
  a8[4] = a4;
  a8[5] = a5;
  a8[6] = a6;
  a8[7] = a7;
  return result;
}

unint64_t sub_1C02D75E8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  unint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;

  result = OUTLINED_FUNCTION_38_32(25705, 0xE200000000000000);
  if ((v9 & 1) != 0)
  {
    OUTLINED_FUNCTION_74_1();
    sub_1C00B0E2C();
    OUTLINED_FUNCTION_18_49();
    sub_1C0056D18();
    OUTLINED_FUNCTION_15_2();
    v23 = xmmword_1C0318E50;
LABEL_14:
    *(_OWORD *)v22 = v23;
    *(_QWORD *)(v22 + 16) = a3;
    v24 = 1;
LABEL_19:
    *(_BYTE *)(v22 + 24) = v24;
    return OUTLINED_FUNCTION_7_22();
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v12 = *(_QWORD *)(a1 + 16);
  if (result >= v12)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  OUTLINED_FUNCTION_6_106(result, v9, v10, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727520);
  if ((OUTLINED_FUNCTION_4_115() & 1) == 0)
  {
    sub_1C0056D18();
    OUTLINED_FUNCTION_15_2();
    v25 = xmmword_1C0318E50;
LABEL_18:
    *(_OWORD *)v22 = v25;
    *(_QWORD *)(v22 + 16) = 0;
    v24 = 3;
    goto LABEL_19;
  }
  result = OUTLINED_FUNCTION_38_32(1684632949, 0xE400000000000000);
  if ((v13 & 1) != 0)
  {
    OUTLINED_FUNCTION_74_1();
    sub_1C00B0E2C();
    OUTLINED_FUNCTION_18_49();
    sub_1C0056D18();
    OUTLINED_FUNCTION_15_2();
    v23 = xmmword_1C031ECD0;
    goto LABEL_14;
  }
  if (result >= v12)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  OUTLINED_FUNCTION_6_106(result, v13, v14, v15);
  if ((OUTLINED_FUNCTION_4_115() & 1) == 0 || !v29)
  {
    sub_1C0056D18();
    OUTLINED_FUNCTION_15_2();
    v25 = xmmword_1C031ECD0;
    goto LABEL_18;
  }
  v16 = OUTLINED_FUNCTION_37_34();
  result = OUTLINED_FUNCTION_38_32(v16, v17);
  if ((v18 & 1) != 0)
  {
    OUTLINED_FUNCTION_74_1();
    sub_1C00B0E2C();
    OUTLINED_FUNCTION_18_49();
    sub_1C0056D18();
    OUTLINED_FUNCTION_15_2();
    *(_OWORD *)v26 = xmmword_1C031ECC0;
    *(_QWORD *)(v26 + 16) = a3;
    v27 = 1;
LABEL_22:
    *(_BYTE *)(v26 + 24) = v27;
    OUTLINED_FUNCTION_7_22();
    return swift_bridgeObjectRelease();
  }
  if (result < v12)
  {
    OUTLINED_FUNCTION_6_106(result, v18, v19, v20);
    if ((OUTLINED_FUNCTION_4_115() & 1) != 0)
    {
      *a4 = v28;
      a4[1] = a2;
      a4[2] = a3;
      a4[3] = v28;
      a4[4] = v29;
      a4[5] = v28;
      v21 = MEMORY[0x1E0DEE9D8];
      a4[6] = v29;
      a4[7] = v21;
      return OUTLINED_FUNCTION_47();
    }
    sub_1C0056D18();
    OUTLINED_FUNCTION_15_2();
    *(_OWORD *)v26 = xmmword_1C031ECC0;
    *(_QWORD *)(v26 + 16) = 0;
    v27 = 3;
    goto LABEL_22;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C02D787C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1701869940 && a2 == 0xE400000000000000;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1684632949 && a2 == 0xE400000000000000;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x736E656B6F74 && a2 == 0xE600000000000000;
        if (v8 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x7461676572676761 && a2 == 0xEC000000736E6F69)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_1C0304A08();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_1C02D7A68(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C02D7A90 + 4 * byte_1C0325AF0[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1C02D7A90()
{
  return 1701869940;
}

uint64_t sub_1C02D7AA0()
{
  return 1684632949;
}

uint64_t sub_1C02D7AB0()
{
  return 0x736E656B6F74;
}

uint64_t sub_1C02D7AC4()
{
  return 0x7461676572676761;
}

uint64_t sub_1C02D7AE4()
{
  unsigned __int8 *v0;

  return sub_1C02D7A68(*v0);
}

uint64_t sub_1C02D7AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C02D787C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C02D7B10()
{
  sub_1C02D7D38();
  return sub_1C0304BAC();
}

uint64_t sub_1C02D7B38()
{
  sub_1C02D7D38();
  return sub_1C0304BB8();
}

void SiriRemembersV1API.Entity.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[8];
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3EA0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[1];
  v11[5] = v1[2];
  v11[6] = v8;
  v9 = v1[3];
  v11[3] = v1[4];
  v11[4] = v9;
  v10 = v1[5];
  v11[1] = v1[6];
  v11[2] = v10;
  v11[0] = v1[7];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02D7D38();
  sub_1C0304BA0();
  v16 = 0;
  sub_1C03049A8();
  if (!v2)
  {
    v15 = 1;
    OUTLINED_FUNCTION_28_16();
    v14 = 2;
    OUTLINED_FUNCTION_28_16();
    v13 = 3;
    OUTLINED_FUNCTION_28_16();
    v11[7] = v11[0];
    v12 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C0D60);
    sub_1C0212434(&qword_1EF5C0D88, &qword_1EF5C0D90, (uint64_t)&protocol conformance descriptor for SiriRemembersV1API.Aggregation, MEMORY[0x1E0DEAF10]);
    sub_1C030499C();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  OUTLINED_FUNCTION_28_0();
}

unint64_t sub_1C02D7D38()
{
  unint64_t result;

  result = qword_1EF5C3EA8;
  if (!qword_1EF5C3EA8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0325C2C, &_s6EntityV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C3EA8);
  }
  return result;
}

void SiriRemembersV1API.Entity.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3EB0);
  MEMORY[0x1E0C80A78](v5);
  v6 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  sub_1C02D7D38();
  sub_1C0304B88();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    v7 = sub_1C03048F4();
    v12 = OUTLINED_FUNCTION_5_101();
    OUTLINED_FUNCTION_35_43();
    v14 = v6;
    v11 = OUTLINED_FUNCTION_5_101();
    OUTLINED_FUNCTION_35_43();
    v13 = v6;
    v10 = OUTLINED_FUNCTION_5_101();
    v9 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C0D60);
    sub_1C0212434(&qword_1EF5C0D68, &qword_1EF5C0D70, (uint64_t)&protocol conformance descriptor for SiriRemembersV1API.Aggregation, MEMORY[0x1E0DEAF40]);
    OUTLINED_FUNCTION_21();
    sub_1C03048E8();
    OUTLINED_FUNCTION_1_139();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_47();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_17_0();
    *a2 = v7;
    a2[1] = v12;
    a2[2] = v14;
    a2[3] = v11;
    a2[4] = v13;
    a2[5] = v10;
    a2[6] = v9;
    a2[7] = v15;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_17_0();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28_0();
}

void sub_1C02D8048(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  SiriRemembersV1API.Entity.init(from:)(a1, a2);
}

void sub_1C02D805C(_QWORD *a1)
{
  SiriRemembersV1API.Entity.encode(to:)(a1);
}

uint64_t _s6EntityVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s6EntityVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s6EntityVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6EntityVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6EntityVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s6EntityVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriRemembersV1API.Entity()
{
  return &type metadata for SiriRemembersV1API.Entity;
}

uint64_t _s6EntityV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C02D8310 + 4 * byte_1C0325AFA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C02D8344 + 4 * byte_1C0325AF5[v4]))();
}

uint64_t sub_1C02D8344(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02D834C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02D8354);
  return result;
}

uint64_t sub_1C02D8360(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02D8368);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C02D836C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02D8374(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s6EntityV10CodingKeysOMa()
{
  return &_s6EntityV10CodingKeysON;
}

unint64_t sub_1C02D8394()
{
  unint64_t result;

  result = qword_1EF5C3EB8;
  if (!qword_1EF5C3EB8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0325C04, &_s6EntityV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C3EB8);
  }
  return result;
}

unint64_t sub_1C02D83D4()
{
  unint64_t result;

  result = qword_1EF5C3EC0;
  if (!qword_1EF5C3EC0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0325B74, &_s6EntityV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C3EC0);
  }
  return result;
}

unint64_t sub_1C02D8414()
{
  unint64_t result;

  result = qword_1EF5C3EC8;
  if (!qword_1EF5C3EC8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0325B9C, &_s6EntityV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C3EC8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_139()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_115()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_5_101()
{
  return sub_1C03048AC();
}

uint64_t OUTLINED_FUNCTION_6_106(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  return sub_1C0055F14(v4 + 40 * a1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_10_84()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_11_84()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_18_49()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_20_45(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  return sub_1C0055F14(v11 + 40 * a1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_23_46()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_24_39()
{
  return sub_1C03044B0();
}

uint64_t OUTLINED_FUNCTION_25_39()
{
  uint64_t v0;

  return sub_1C00A9B84(25705, 0xE200000000000000, v0);
}

uint64_t OUTLINED_FUNCTION_27_51(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  return sub_1C003E6D8(0xD000000000000087, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_29_40()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_30_42()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_35_43()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_37_34()
{
  return 0x736E656B6F74;
}

uint64_t sub_1C02D8548(void (*a1)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v2;
  uint64_t v3;

  a1(&v3, &v2);
  return v3;
}

void sub_1C02D85A0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *matched;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  int *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  int v49;
  unsigned int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v63 = type metadata accessor for ContactResolver.HandleSignalSet(0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_6_0();
  v7 = v6 - v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DA8);
  v53 = *(_QWORD *)(v8 - 8);
  v54 = v8;
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_6_0();
  v11 = v10 - v9;
  matched = (int *)type metadata accessor for ContactMatchRuntimeData(0);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_19_2();
  v16 = v14 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v45 - v18;
  sub_1C00638E8(a1, (uint64_t)&v45 - v18, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
  v20 = (uint64_t)&v19[matched[5]];
  sub_1C010E578(v20);
  sub_1C013F82C();
  v21 = MEMORY[0x1E0DEE9D8];
  v22 = sub_1C0303DB4();
  v23 = &v19[matched[6]];
  *v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  *((_QWORD *)v23 + 2) = v21;
  *(_QWORD *)&v19[matched[7]] = v22;
  *(_QWORD *)&v19[matched[8]] = 0;
  v19[matched[9]] = 1;
  v24 = type metadata accessor for ContactQuickResolver(0);
  v25 = OUTLINED_FUNCTION_203_0();
  v26 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Contact() + 80));
  v27 = *(_QWORD *)(v26 + 16);
  if (v27)
  {
    v45 = v20;
    v46 = v16;
    v47 = v19;
    v48 = a2;
    v28 = *(unsigned __int16 *)(v62 + *(int *)(v24 + 24) + *(int *)(v25 + 60));
    v64 = v21;
    v55 = v26;
    swift_bridgeObjectRetain();
    sub_1C00B198C();
    v29 = v64;
    v52 = sub_1C0303550();
    v30 = 0;
    v50 = v28 >> 8;
    v51 = v28;
    v49 = v28 & 1;
    do
    {
      v61 = v27;
      v62 = v29;
      v31 = *(_QWORD *)(v55 + v30 + 32);
      v32 = *(_QWORD *)(v55 + v30 + 40);
      v33 = *(unsigned __int8 *)(v55 + v30 + 48);
      v34 = *(_QWORD *)(v55 + v30 + 64);
      v59 = *(_QWORD *)(v55 + v30 + 56);
      v60 = v31;
      v35 = *(_QWORD *)(v55 + v30 + 72);
      v36 = *(_QWORD *)(v55 + v30 + 80);
      v37 = *(_QWORD *)(v55 + v30 + 96);
      v57 = *(_QWORD *)(v55 + v30 + 88);
      v58 = v35;
      v38 = *(_BYTE *)(v55 + v30 + 104);
      v56 = *(unsigned __int8 *)(v55 + v30 + 105);
      v39 = (int *)v63;
      v40 = v7 + *(int *)(v63 + 36);
      *(_DWORD *)(v7 + 1) = 0;
      __swift_storeEnumTagSinglePayload(v40, 1, 1, v52);
      v41 = 0;
      *(_BYTE *)(v7 + v39[10]) = 0;
      v42 = v39[12];
      *(_BYTE *)(v7 + v42) = 0;
      *(_BYTE *)(v7 + v39[13]) = 0;
      *(_BYTE *)(v7 + v39[14]) = 0;
      *(_BYTE *)v7 = v38;
      if (v51 == 2 || (v41 = v50 == v33) || !v49)
        *(_BYTE *)(v7 + v42) = 1;
      else
        v41 = 0;
      *(_BYTE *)(v7 + *(int *)(v63 + 44)) = v41;
      sub_1C004555C(v7, v11 + *(int *)(v54 + 36), type metadata accessor for ContactResolver.HandleSignalSet);
      *(_QWORD *)v11 = v60;
      *(_QWORD *)(v11 + 8) = v32;
      *(_BYTE *)(v11 + 16) = v33;
      *(_QWORD *)(v11 + 24) = v59;
      *(_QWORD *)(v11 + 32) = v34;
      *(_QWORD *)(v11 + 40) = v58;
      *(_QWORD *)(v11 + 48) = v36;
      *(_QWORD *)(v11 + 56) = v57;
      *(_QWORD *)(v11 + 64) = v37;
      *(_BYTE *)(v11 + 72) = v38;
      *(_BYTE *)(v11 + 73) = v56;
      v29 = v62;
      v44 = *(_QWORD *)(v62 + 16);
      v43 = *(_QWORD *)(v62 + 24);
      v64 = v62;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v44 >= v43 >> 1)
      {
        sub_1C00B198C();
        v29 = v64;
      }
      *(_QWORD *)(v29 + 16) = v44 + 1;
      sub_1C02D4850(v11, v29+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(_QWORD *)(v53 + 72) * v44);
      v30 += 80;
      v27 = v61 - 1;
    }
    while (v61 != 1);
    swift_bridgeObjectRelease();
    v19 = v47;
    a2 = v48;
    v20 = v45;
    v16 = v46;
  }
  else
  {
    v29 = v21;
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(v20 + 272) = v29;
  sub_1C02D3DD4((uint64_t)v19, 1, v16);
  sub_1C02D8A2C(v16, (uint64_t)v19);
  sub_1C00638E8((uint64_t)v19, a2, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
  sub_1C006395C((uint64_t)v19, type metadata accessor for ContactMatchRuntimeData);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C02D8980@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  result = (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v9 + 24))(*a2, a2[1], v8, v9);
  if (v4)
    *a3 = v4;
  else
    *a4 = result;
  return result;
}

uint64_t sub_1C02D89F8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C02D8980(*(_QWORD **)(v2 + 16), *(_QWORD **)(v2 + 24), a1, a2);
}

id sub_1C02D8A14(id a1)
{
  return a1;
}

void sub_1C02D8A20(id a1)
{

}

uint64_t sub_1C02D8A2C(uint64_t a1, uint64_t a2)
{
  uint64_t matched;

  matched = type metadata accessor for ContactMatchRuntimeData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(matched - 8) + 40))(a2, a1, matched);
  return a2;
}

_QWORD *sub_1C02D8A70(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  void *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = (void *)a2[5];
    v4[5] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)v4 + v9;
    v11 = (uint64_t)a2 + v9;
    *v10 = *((_BYTE *)a2 + v9);
    v12 = *(uint64_t *)((char *)a2 + v9 + 16);
    *((_QWORD *)v10 + 1) = *(uint64_t *)((char *)a2 + v9 + 8);
    *((_QWORD *)v10 + 2) = v12;
    v13 = *(uint64_t *)((char *)a2 + v9 + 32);
    *((_QWORD *)v10 + 3) = *(uint64_t *)((char *)a2 + v9 + 24);
    *((_QWORD *)v10 + 4) = v13;
    v14 = *(uint64_t *)((char *)a2 + v9 + 48);
    *((_QWORD *)v10 + 5) = *(uint64_t *)((char *)a2 + v9 + 40);
    *((_QWORD *)v10 + 6) = v14;
    v15 = (int *)type metadata accessor for ContactResolverConfig(0);
    v16 = v15[8];
    v35 = v11 + v16;
    v36 = &v10[v16];
    v17 = sub_1C0301DB0();
    v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v19 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(v36, v35, v17);
    v10[v15[9]] = *(_BYTE *)(v11 + v15[9]);
    v10[v15[10]] = *(_BYTE *)(v11 + v15[10]);
    *(_QWORD *)&v10[v15[11]] = *(_QWORD *)(v11 + v15[11]);
    v10[v15[12]] = *(_BYTE *)(v11 + v15[12]);
    *(_QWORD *)&v10[v15[13]] = *(_QWORD *)(v11 + v15[13]);
    v10[v15[14]] = *(_BYTE *)(v11 + v15[14]);
    *(_WORD *)&v10[v15[15]] = *(_WORD *)(v11 + v15[15]);
    v20 = v15[16];
    v21 = &v10[v20];
    v22 = v11 + v20;
    v23 = *(_QWORD *)(v11 + v20);
    swift_bridgeObjectRetain();
    if (v23)
    {
      v24 = *(_QWORD *)(v22 + 8);
      *(_QWORD *)v21 = v23;
      *((_QWORD *)v21 + 1) = v24;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v21 = *(_OWORD *)v22;
    }
    v26 = v15[17];
    v27 = &v10[v26];
    v28 = (_QWORD *)(v11 + v26);
    v29 = v28[1];
    *(_QWORD *)v27 = *v28;
    *((_QWORD *)v27 + 1) = v29;
    v10[v15[18]] = *(_BYTE *)(v11 + v15[18]);
    v10[v15[19]] = *(_BYTE *)(v11 + v15[19]);
    v30 = v15[20];
    v31 = &v10[v30];
    v32 = (_QWORD *)(v11 + v30);
    v33 = v32[1];
    *(_QWORD *)v31 = *v32;
    *((_QWORD *)v31 + 1) = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t *sub_1C02D8C68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v6 = (void *)a1[5];
  v7 = (void *)a2[5];
  a1[5] = (uint64_t)v7;
  v8 = v7;

  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (uint64_t *)((char *)a2 + v9);
  *v10 = *((_BYTE *)a2 + v9);
  *((_QWORD *)v10 + 1) = *(uint64_t *)((char *)a2 + v9 + 8);
  *((_QWORD *)v10 + 2) = *(uint64_t *)((char *)a2 + v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 3) = v11[3];
  *((_QWORD *)v10 + 4) = v11[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 5) = v11[5];
  *((_QWORD *)v10 + 6) = v11[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = (int *)type metadata accessor for ContactResolverConfig(0);
  v13 = v12[8];
  v14 = &v10[v13];
  v15 = (char *)v11 + v13;
  v16 = sub_1C0301DB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v10[v12[9]] = *((_BYTE *)v11 + v12[9]);
  v10[v12[10]] = *((_BYTE *)v11 + v12[10]);
  *(_QWORD *)&v10[v12[11]] = *(_QWORD *)((char *)v11 + v12[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[v12[12]] = *((_BYTE *)v11 + v12[12]);
  *(_QWORD *)&v10[v12[13]] = *(_QWORD *)((char *)v11 + v12[13]);
  v10[v12[14]] = *((_BYTE *)v11 + v12[14]);
  *(_WORD *)&v10[v12[15]] = *(_WORD *)((char *)v11 + v12[15]);
  v17 = v12[16];
  v18 = &v10[v17];
  v19 = (char *)v11 + v17;
  v20 = *(_QWORD *)&v10[v17];
  v21 = *(_QWORD *)((char *)v11 + v17);
  if (!v20)
  {
    if (v21)
    {
      v23 = *((_QWORD *)v19 + 1);
      *(_QWORD *)v18 = v21;
      *((_QWORD *)v18 + 1) = v23;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v18 = *(_OWORD *)v19;
    goto LABEL_8;
  }
  if (!v21)
  {
    swift_release();
    goto LABEL_7;
  }
  v22 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v22;
  swift_retain();
  swift_release();
LABEL_8:
  v24 = v12[17];
  v25 = &v10[v24];
  v26 = (_QWORD *)((char *)v11 + v24);
  *(_QWORD *)v25 = *v26;
  *((_QWORD *)v25 + 1) = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[v12[18]] = *((_BYTE *)v11 + v12[18]);
  v10[v12[19]] = *((_BYTE *)v11 + v12[19]);
  v27 = v12[20];
  v28 = &v10[v27];
  v29 = (_QWORD *)((char *)v11 + v27);
  *(_QWORD *)v28 = *v29;
  *((_QWORD *)v28 + 1) = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C02D8E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;

  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(void **)(a1 + 40);
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;

  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = (_QWORD *)(a2 + v9);
  *(_BYTE *)v10 = *(_BYTE *)(a2 + v9);
  v12 = *(_QWORD *)(a2 + v9 + 16);
  *(_QWORD *)(v10 + 8) = *(_QWORD *)(a2 + v9 + 8);
  *(_QWORD *)(v10 + 16) = v12;
  swift_bridgeObjectRelease();
  v13 = v11[4];
  *(_QWORD *)(v10 + 24) = v11[3];
  *(_QWORD *)(v10 + 32) = v13;
  swift_bridgeObjectRelease();
  v14 = v11[6];
  *(_QWORD *)(v10 + 40) = v11[5];
  *(_QWORD *)(v10 + 48) = v14;
  swift_bridgeObjectRelease();
  v15 = (int *)type metadata accessor for ContactResolverConfig(0);
  v16 = v15[8];
  v17 = v10 + v16;
  v18 = (char *)v11 + v16;
  v19 = sub_1C0301DB0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  *(_BYTE *)(v10 + v15[9]) = *((_BYTE *)v11 + v15[9]);
  *(_BYTE *)(v10 + v15[10]) = *((_BYTE *)v11 + v15[10]);
  *(_QWORD *)(v10 + v15[11]) = *(_QWORD *)((char *)v11 + v15[11]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v10 + v15[12]) = *((_BYTE *)v11 + v15[12]);
  *(_QWORD *)(v10 + v15[13]) = *(_QWORD *)((char *)v11 + v15[13]);
  *(_BYTE *)(v10 + v15[14]) = *((_BYTE *)v11 + v15[14]);
  *(_WORD *)(v10 + v15[15]) = *(_WORD *)((char *)v11 + v15[15]);
  v20 = v15[16];
  v21 = (_QWORD *)(v10 + v20);
  v22 = (char *)v11 + v20;
  v23 = *(_QWORD *)(v10 + v20);
  v24 = *(_QWORD *)((char *)v11 + v20);
  if (!v23)
  {
    if (v24)
    {
      v26 = *((_QWORD *)v22 + 1);
      *v21 = v24;
      v21[1] = v26;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v21 = *(_OWORD *)v22;
    goto LABEL_8;
  }
  if (!v24)
  {
    swift_release();
    goto LABEL_7;
  }
  v25 = *((_QWORD *)v22 + 1);
  *v21 = v24;
  v21[1] = v25;
  swift_release();
LABEL_8:
  v27 = v15[17];
  v28 = (_QWORD *)(v10 + v27);
  v29 = (_QWORD *)((char *)v11 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v10 + v15[18]) = *((_BYTE *)v11 + v15[18]);
  *(_BYTE *)(v10 + v15[19]) = *((_BYTE *)v11 + v15[19]);
  v32 = v15[20];
  v33 = (_QWORD *)(v10 + v32);
  v34 = (_QWORD *)((char *)v11 + v32);
  v36 = *v34;
  v35 = v34[1];
  *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C02D9060()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C02D906C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_203_0();
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1C02D90DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C02D90E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = OUTLINED_FUNCTION_203_0();
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C02D9150()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ContactResolverConfig(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C02D91CC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v49;
  void *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    if (EnumCaseMultiPayload == 1)
    {
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      v8 = a2[4];
      *(_QWORD *)(a1 + 24) = a2[3];
      *(_QWORD *)(a1 + 32) = v8;
      v9 = a2[6];
      *(_QWORD *)(a1 + 40) = a2[5];
      *(_QWORD *)(a1 + 48) = v9;
      v10 = a2[8];
      *(_QWORD *)(a1 + 56) = a2[7];
      *(_QWORD *)(a1 + 64) = v10;
      v11 = a2[10];
      *(_QWORD *)(a1 + 72) = a2[9];
      *(_QWORD *)(a1 + 80) = v11;
      v12 = a2[12];
      *(_QWORD *)(a1 + 88) = a2[11];
      *(_QWORD *)(a1 + 96) = v12;
      v13 = a2[14];
      *(_QWORD *)(a1 + 104) = a2[13];
      *(_QWORD *)(a1 + 112) = v13;
      v14 = a2[16];
      *(_QWORD *)(a1 + 120) = a2[15];
      *(_QWORD *)(a1 + 128) = v14;
      v15 = a2[18];
      *(_QWORD *)(a1 + 136) = a2[17];
      *(_QWORD *)(a1 + 144) = v15;
      v16 = a2[20];
      *(_QWORD *)(a1 + 152) = a2[19];
      *(_QWORD *)(a1 + 160) = v16;
      v49 = a2[23];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v49)
      {
        v17 = a2[22];
        *(_QWORD *)(a1 + 168) = a2[21];
        *(_QWORD *)(a1 + 176) = v17;
        *(_QWORD *)(a1 + 184) = v49;
        swift_retain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
        *(_QWORD *)(a1 + 184) = a2[23];
      }
      v36 = a2[26];
      if (v36)
      {
        *(_BYTE *)(a1 + 192) = *((_BYTE *)a2 + 192);
        *(_QWORD *)(a1 + 200) = a2[25];
        *(_QWORD *)(a1 + 208) = v36;
        v37 = a2[28];
        *(_QWORD *)(a1 + 216) = a2[27];
        *(_QWORD *)(a1 + 224) = v37;
        *(_QWORD *)(a1 + 232) = a2[29];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v47 = *((_OWORD *)a2 + 13);
        *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
        *(_OWORD *)(a1 + 208) = v47;
        *(_OWORD *)(a1 + 224) = *((_OWORD *)a2 + 14);
      }
      *(_QWORD *)(a1 + 240) = a2[30];
      *(_BYTE *)(a1 + 248) = *((_BYTE *)a2 + 248);
      *(_QWORD *)(a1 + 256) = a2[32];
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      v19 = a2[4];
      *(_QWORD *)(a1 + 24) = a2[3];
      *(_QWORD *)(a1 + 32) = v19;
      v20 = a2[6];
      *(_QWORD *)(a1 + 40) = a2[5];
      *(_QWORD *)(a1 + 48) = v20;
      v21 = a2[8];
      *(_QWORD *)(a1 + 56) = a2[7];
      *(_QWORD *)(a1 + 64) = v21;
      v22 = a2[10];
      *(_QWORD *)(a1 + 72) = a2[9];
      *(_QWORD *)(a1 + 80) = v22;
      v23 = a2[12];
      *(_QWORD *)(a1 + 88) = a2[11];
      *(_QWORD *)(a1 + 96) = v23;
      v24 = a2[14];
      *(_QWORD *)(a1 + 104) = a2[13];
      *(_QWORD *)(a1 + 112) = v24;
      v25 = a2[16];
      *(_QWORD *)(a1 + 120) = a2[15];
      *(_QWORD *)(a1 + 128) = v25;
      v26 = a2[18];
      *(_QWORD *)(a1 + 136) = a2[17];
      *(_QWORD *)(a1 + 144) = v26;
      v27 = a2[20];
      *(_QWORD *)(a1 + 152) = a2[19];
      *(_QWORD *)(a1 + 160) = v27;
      v28 = a2[22];
      *(_QWORD *)(a1 + 168) = a2[21];
      *(_QWORD *)(a1 + 176) = v28;
      v29 = a2[24];
      *(_QWORD *)(a1 + 184) = a2[23];
      *(_QWORD *)(a1 + 192) = v29;
      v30 = a2[26];
      *(_QWORD *)(a1 + 200) = a2[25];
      *(_QWORD *)(a1 + 208) = v30;
      *(_QWORD *)(a1 + 216) = a2[27];
      v31 = (int *)type metadata accessor for Contact();
      v32 = v31[19];
      __dst = (void *)(a1 + v32);
      v33 = (char *)a2 + v32;
      v34 = sub_1C0301954();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v34))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
        memcpy(__dst, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(__dst, v33, v34);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v34);
      }
      *(_QWORD *)(a1 + v31[20]) = *(uint64_t *)((char *)a2 + v31[20]);
      *(_BYTE *)(a1 + v31[21]) = *((_BYTE *)a2 + v31[21]);
      v38 = v31[22];
      v39 = (_QWORD *)(a1 + v38);
      v40 = (uint64_t *)((char *)a2 + v38);
      v41 = v40[1];
      *v39 = *v40;
      v39[1] = v41;
      *(_BYTE *)(a1 + v31[23]) = *((_BYTE *)a2 + v31[23]);
      v42 = v31[24];
      v43 = (_QWORD *)(a1 + v42);
      v44 = (uint64_t *)((char *)a2 + v42);
      v45 = v44[1];
      *v43 = *v44;
      v43[1] = v45;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC868);
      *(_BYTE *)(a1 + *(int *)(v46 + 48)) = *((_BYTE *)a2 + *(int *)(v46 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C02D9600(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 184))
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(a1 + 208))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = a1 + *(int *)(type metadata accessor for Contact() + 76);
    v5 = sub_1C0301954();
    if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C02D97AC(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v46;
  void *__dst;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  if (EnumCaseMultiPayload == 1)
  {
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v6 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v6;
    v7 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v7;
    v8 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v8;
    v9 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v9;
    v10 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v10;
    v11 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v11;
    v12 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v12;
    v13 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = v13;
    v14 = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = v14;
    v46 = *(_QWORD *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v46)
    {
      v15 = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = v15;
      *(_QWORD *)(a1 + 184) = v46;
      swift_retain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    }
    v33 = *(_QWORD *)(a2 + 208);
    if (v33)
    {
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = v33;
      v34 = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = v34;
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v44 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v44;
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    }
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v16 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v16;
    v17 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v17;
    v18 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v18;
    v19 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v19;
    v20 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v20;
    v21 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v21;
    v22 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v22;
    v23 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = v23;
    v24 = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = v24;
    v25 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = v25;
    v26 = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = v26;
    v27 = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = v27;
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    v28 = (int *)type metadata accessor for Contact();
    v29 = v28[19];
    __dst = (void *)(a1 + v29);
    v30 = (const void *)(a2 + v29);
    v31 = sub_1C0301954();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
      memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(__dst, v30, v31);
      __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v31);
    }
    *(_QWORD *)(a1 + v28[20]) = *(_QWORD *)(a2 + v28[20]);
    *(_BYTE *)(a1 + v28[21]) = *(_BYTE *)(a2 + v28[21]);
    v35 = v28[22];
    v36 = (_QWORD *)(a1 + v35);
    v37 = (_QWORD *)(a2 + v35);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    *(_BYTE *)(a1 + v28[23]) = *(_BYTE *)(a2 + v28[23]);
    v39 = v28[24];
    v40 = (_QWORD *)(a1 + v39);
    v41 = (_QWORD *)(a2 + v39);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC868);
    *(_BYTE *)(a1 + *(int *)(v43 + 48)) = *(_BYTE *)(a2 + *(int *)(v43 + 48));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1C02D9BAC(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  int *v5;
  uint64_t v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  void *__dsta;
  void *__dst;

  if (a1 != a2)
  {
    sub_1C006395C(a1, type metadata accessor for ContactQuickResolver.ResolutionState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    if (EnumCaseMultiPayload == 1)
    {
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      __dsta = *(void **)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__dsta)
      {
        *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
        *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
        *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
        swift_retain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v10 = *(_OWORD *)(a2 + 168);
        *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
        *(_OWORD *)(a1 + 168) = v10;
      }
      if (*(_QWORD *)(a2 + 208))
      {
        *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
        *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
        *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
        *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
        *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
        *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v18 = *(_OWORD *)(a2 + 192);
        v19 = *(_OWORD *)(a2 + 224);
        *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
        *(_OWORD *)(a1 + 224) = v19;
        *(_OWORD *)(a1 + 192) = v18;
      }
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      v5 = (int *)type metadata accessor for Contact();
      v6 = v5[19];
      __dst = (void *)(a1 + v6);
      v7 = (const void *)(a2 + v6);
      v8 = sub_1C0301954();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
        memcpy(__dst, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(__dst, v7, v8);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v8);
      }
      *(_QWORD *)(a1 + v5[20]) = *(_QWORD *)(a2 + v5[20]);
      *(_BYTE *)(a1 + v5[21]) = *(_BYTE *)(a2 + v5[21]);
      v11 = v5[22];
      v12 = (_QWORD *)(a1 + v11);
      v13 = (_QWORD *)(a2 + v11);
      *v12 = *v13;
      v12[1] = v13[1];
      *(_BYTE *)(a1 + v5[23]) = *(_BYTE *)(a2 + v5[23]);
      v14 = v5[24];
      v15 = (_QWORD *)(a1 + v14);
      v16 = (_QWORD *)(a2 + v14);
      *v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC868);
      *(_BYTE *)(a1 + *(int *)(v17 + 48)) = *(_BYTE *)(a2 + *(int *)(v17 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1C02DA0A4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
    *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
    *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
    *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
    *(_OWORD *)((char *)a1 + 136) = *(_OWORD *)((char *)a2 + 136);
    *(_OWORD *)((char *)a1 + 152) = *(_OWORD *)((char *)a2 + 152);
    *(_OWORD *)((char *)a1 + 168) = *(_OWORD *)((char *)a2 + 168);
    *(_OWORD *)((char *)a1 + 184) = *(_OWORD *)((char *)a2 + 184);
    *(_OWORD *)((char *)a1 + 200) = *(_OWORD *)((char *)a2 + 200);
    *((_QWORD *)a1 + 27) = *((_QWORD *)a2 + 27);
    v6 = (int *)type metadata accessor for Contact();
    v7 = v6[19];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1C0301954();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    *(_QWORD *)((char *)a1 + v6[20]) = *(_QWORD *)((char *)a2 + v6[20]);
    *((_BYTE *)a1 + v6[21]) = *((_BYTE *)a2 + v6[21]);
    *(_OWORD *)((char *)a1 + v6[22]) = *(_OWORD *)((char *)a2 + v6[22]);
    *((_BYTE *)a1 + v6[23]) = *((_BYTE *)a2 + v6[23]);
    *(_OWORD *)((char *)a1 + v6[24]) = *(_OWORD *)((char *)a2 + v6[24]);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC868);
    *((_BYTE *)a1 + *(int *)(v12 + 48)) = *((_BYTE *)a2 + *(int *)(v12 + 48));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1C02DA270(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_1C006395C((uint64_t)a1, type metadata accessor for ContactQuickResolver.ResolutionState);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
      *(_OWORD *)((char *)a1 + 136) = *(_OWORD *)((char *)a2 + 136);
      *(_OWORD *)((char *)a1 + 152) = *(_OWORD *)((char *)a2 + 152);
      *(_OWORD *)((char *)a1 + 168) = *(_OWORD *)((char *)a2 + 168);
      *(_OWORD *)((char *)a1 + 184) = *(_OWORD *)((char *)a2 + 184);
      *(_OWORD *)((char *)a1 + 200) = *(_OWORD *)((char *)a2 + 200);
      *((_QWORD *)a1 + 27) = *((_QWORD *)a2 + 27);
      v6 = (int *)type metadata accessor for Contact();
      v7 = v6[19];
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1C0301954();
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      }
      *(_QWORD *)((char *)a1 + v6[20]) = *(_QWORD *)((char *)a2 + v6[20]);
      *((_BYTE *)a1 + v6[21]) = *((_BYTE *)a2 + v6[21]);
      *(_OWORD *)((char *)a1 + v6[22]) = *(_OWORD *)((char *)a2 + v6[22]);
      *((_BYTE *)a1 + v6[23]) = *((_BYTE *)a2 + v6[23]);
      *(_OWORD *)((char *)a1 + v6[24]) = *(_OWORD *)((char *)a2 + v6[24]);
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC868);
      *((_BYTE *)a1 + *(int *)(v12 + 48)) = *((_BYTE *)a2 + *(int *)(v12 + 48));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C02DA460()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  result = type metadata accessor for Contact();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[4] = v2;
    v2[5] = &unk_1C0325CF0;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void OUTLINED_FUNCTION_3_140(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_1C004555C(a1, v2, v1);
}

void OUTLINED_FUNCTION_4_116()
{
  void *v0;

  sub_1C02D8A20(v0);
  sub_1C02D8A20(v0);
}

void OUTLINED_FUNCTION_7_104()
{
  void *v0;

  sub_1C02D8A20(v0);
}

uint64_t OUTLINED_FUNCTION_9_94@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return a1(v4, v2, v1, v3);
}

void OUTLINED_FUNCTION_11_85()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_14_72()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_15_62()
{
  type metadata accessor for ContactQuickResolver.ResolutionState(0);
  return swift_storeEnumTagMultiPayload();
}

_QWORD *OUTLINED_FUNCTION_16_61()
{
  uint64_t v0;

  return sub_1C0040644((_QWORD *)(v0 + 128));
}

uint64_t OUTLINED_FUNCTION_21_54()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t OUTLINED_FUNCTION_25_40(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = a1;
  return v1 + 72;
}

_QWORD *OUTLINED_FUNCTION_35_44()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

void OUTLINED_FUNCTION_37_35(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C004555C(a1, a2, v2);
}

id OUTLINED_FUNCTION_40_32()
{
  void *v0;

  return v0;
}

uint64_t sub_1C02DA5DC()
{
  uint64_t inited;
  uint64_t v1;
  __int16 v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B87E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0305B60;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = 0;
  *(_BYTE *)(inited + 48) = 2;
  v3 = 0;
  type metadata accessor for DateTime();
  swift_allocObject();
  DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(0, 0, 0, (char *)&v3 + 1, 3, 0, 0, (char *)&v3);
  *(_QWORD *)(inited + 56) = v1;
  sub_1C0099A4C();
  return sub_1C0303DB4();
}

uint64_t sub_1C02DA698()
{
  uint64_t inited;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE v79[6];
  int v80;
  int v81;
  __int16 v82;
  __int16 v83;
  char v84;
  char v85;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B87E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0325D10;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = 0;
  *(_BYTE *)(inited + 48) = 2;
  type metadata accessor for DateTime();
  swift_allocObject();
  OUTLINED_FUNCTION_2_126();
  OUTLINED_FUNCTION_3_23(7, 0, 0, v1, 11, v2, v3, v4);
  *(_QWORD *)(inited + 56) = v5;
  *(_OWORD *)(inited + 64) = xmmword_1C0308540;
  *(_BYTE *)(inited + 80) = 0;
  OUTLINED_FUNCTION_0_153();
  v6 = OUTLINED_FUNCTION_3_141();
  OUTLINED_FUNCTION_3_23(v6, v7, v8, v9, 5, v10, v11, v12);
  *(_QWORD *)(inited + 88) = v13;
  *(_OWORD *)(inited + 96) = xmmword_1C03156F0;
  *(_BYTE *)(inited + 112) = 0;
  v14 = OUTLINED_FUNCTION_0_153();
  OUTLINED_FUNCTION_2_137(v14, v15, v16, v17, v18, v19, v20, v21, v76, *(int *)v79, *(__int16 *)&v79[4], 1, 1);
  *(_QWORD *)(inited + 120) = v22;
  *(_OWORD *)(inited + 128) = xmmword_1C0308550;
  *(_BYTE *)(inited + 144) = 0;
  OUTLINED_FUNCTION_0_153();
  OUTLINED_FUNCTION_2_126();
  OUTLINED_FUNCTION_3_78(11, 0, 0, v23, 5, v24, v25, v26);
  *(_QWORD *)(inited + 152) = v27;
  *(_OWORD *)(inited + 160) = xmmword_1C0308560;
  *(_BYTE *)(inited + 176) = 0;
  OUTLINED_FUNCTION_0_153();
  v28 = OUTLINED_FUNCTION_3_141();
  OUTLINED_FUNCTION_3_23(v28, v29, v30, v31, 4, v32, v33, v34);
  *(_QWORD *)(inited + 184) = v35;
  *(_OWORD *)(inited + 192) = xmmword_1C0315700;
  *(_BYTE *)(inited + 208) = 0;
  v36 = OUTLINED_FUNCTION_0_153();
  OUTLINED_FUNCTION_2_137(v36, v37, v38, v39, v40, v41, v42, v43, v77, v80, v82, v84, v85);
  *(_QWORD *)(inited + 216) = v44;
  *(_OWORD *)(inited + 224) = xmmword_1C0308570;
  *(_BYTE *)(inited + 240) = 0;
  OUTLINED_FUNCTION_0_153();
  v45 = OUTLINED_FUNCTION_3_141();
  OUTLINED_FUNCTION_3_23(v45, v46, v47, v48, 3, v49, v50, v51);
  *(_QWORD *)(inited + 248) = v52;
  *(_OWORD *)(inited + 256) = xmmword_1C03085A0;
  *(_BYTE *)(inited + 272) = 0;
  OUTLINED_FUNCTION_0_83();
  OUTLINED_FUNCTION_2_126();
  OUTLINED_FUNCTION_3_78(0, 0, 0, v53, 6, v54, v55, v56);
  *(_QWORD *)(inited + 280) = v57;
  *(_OWORD *)(inited + 288) = xmmword_1C03089A0;
  *(_BYTE *)(inited + 304) = 0;
  OUTLINED_FUNCTION_0_83();
  v58 = OUTLINED_FUNCTION_3_141();
  OUTLINED_FUNCTION_3_23(v58, v59, v60, v61, 11, v62, v63, v64);
  *(_QWORD *)(inited + 312) = v65;
  *(_OWORD *)(inited + 320) = xmmword_1C0315710;
  *(_BYTE *)(inited + 336) = 0;
  v66 = OUTLINED_FUNCTION_0_153();
  OUTLINED_FUNCTION_2_137(v66, v67, v68, v69, v70, v71, v72, v73, v78, v81, v83, 1, 1);
  *(_QWORD *)(inited + 344) = v74;
  sub_1C0099A4C();
  return sub_1C0303DB4();
}

uint64_t OUTLINED_FUNCTION_0_153()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_2_137(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  DateTime.init(withStartHour:startMinute:startSecond:startMeridiem:endHour:endMinute:endSecond:endMeridiem:)(6, 0, 0, &a13, 5, 0, 0, &a12);
}

uint64_t OUTLINED_FUNCTION_3_141()
{
  return 9;
}

uint64_t sub_1C02DA900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC6F0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0048FE0(a1, v3 + 16);
  *(_QWORD *)(v3 + 56) = a2;
  v11 = sub_1C0303454();
  if (__swift_getEnumTagSinglePayload(a3, 1, v11) != 1)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(a1);
    v12 = v3 + OBJC_IVAR____TtC13SiriInference24SeASModelAppResolverRule_appMatcher;
    v13 = a3;
LABEL_6:
    sub_1C02DBF2C(v13, v12);
    return v3;
  }
  sub_1C0303448();
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(a1);
    sub_1C0056C9C(a3, &qword_1EF5BC6F0);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v11);
    v12 = v3 + OBJC_IVAR____TtC13SiriInference24SeASModelAppResolverRule_appMatcher;
    v13 = (uint64_t)v10;
    goto LABEL_6;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  sub_1C0056C9C(a3, &qword_1EF5BC6F0);
  __swift_destroy_boxed_opaque_existential_0Tm(v3 + 16);
  swift_release();
  type metadata accessor for SeASModelAppResolverRule();
  swift_deallocPartialClassInstance();
  return v3;
}

uint64_t sub_1C02DAA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC6F0);
  v3[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C02DAACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  int EnumTagSinglePayload;
  uint64_t v30;
  os_log_type_t v31;
  _WORD *v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  os_log_type_t v55;
  _WORD *v56;
  os_log_type_t v57;
  _WORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 *v65;
  _QWORD *v66;
  uint64_t v67[2];

  v63 = *(_QWORD *)(v0 + 176);
  v1 = *(_QWORD *)(v63 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    OUTLINED_FUNCTION_9_2();
    v3 = (uint64_t *)(v1 + 40);
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v6 = *(v3 - 1);
      v5 = *v3;
      OUTLINED_FUNCTION_65();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_4_10();
        v4 = v9;
      }
      v7 = v4[2];
      if (v7 >= v4[3] >> 1)
      {
        OUTLINED_FUNCTION_4_10();
        v4 = v10;
      }
      v4[2] = v7 + 1;
      v8 = &v4[2 * v7];
      v8[4] = v6;
      v8[5] = v5;
      v3 += 3;
      --v2;
    }
    while (v2);
    OUTLINED_FUNCTION_2();
  }
  else
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v11 = *(NSObject **)(v66[23] + 56);
  v12 = swift_bridgeObjectRetain();
  v13 = sub_1C0159EB8(v12, 7);
  OUTLINED_FUNCTION_33();
  if (qword_1EF5B7F18 != -1)
    swift_once();
  v14 = sub_1C0303B98();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EF5FC6E0);
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_6_60();
  v15 = OUTLINED_FUNCTION_9_1();
  if (os_log_type_enabled(v11, v15))
  {
    v16 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v67[0] = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v16 = 136315138;
    v17 = swift_bridgeObjectRetain();
    v18 = MEMORY[0x1C3B97040](v17, MEMORY[0x1E0DEA968]);
    v20 = v19;
    OUTLINED_FUNCTION_33();
    v66[20] = sub_1C003E6D8(v18, v20, v67);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_2();
    _os_log_impl(&dword_1C0039000, v11, v15, "SeASModelAppResolverRule#resolve candidate apps: %s", v16, 0xCu);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_2();

  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_6_60();
  v21 = OUTLINED_FUNCTION_9_1();
  if (os_log_type_enabled(v11, v21))
  {
    v22 = OUTLINED_FUNCTION_4_0();
    v67[0] = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v22 = 134218242;
    v66[18] = 7;
    sub_1C03044B0();
    *(_WORD *)(v22 + 12) = 2080;
    sub_1C00F6888();
    swift_bridgeObjectRetain();
    v23 = sub_1C0303D9C();
    v25 = v24;
    swift_bridgeObjectRelease();
    v66[19] = sub_1C003E6D8(v23, v25, v67);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_2();
    _os_log_impl(&dword_1C0039000, v11, v21, "SeASModelAppResolverRule#resolve app usage in last %ld days: %s", (uint8_t *)v22, 0x16u);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_2();

  v26 = v66;
  v27 = v66[24];
  sub_1C02DB9A0(v66[23] + OBJC_IVAR____TtC13SiriInference24SeASModelAppResolverRule_appMatcher, v27);
  v28 = sub_1C0303454();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v27, 1, v28);
  v30 = v66[24];
  if (EnumTagSinglePayload == 1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_33();
    sub_1C0056C9C(v30, &qword_1EF5BC6F0);
    OUTLINED_FUNCTION_6_60();
    v31 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_4(v31))
    {
      v32 = (_WORD *)OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_13(v32);
      v35 = "SeASModelAppResolverRule#resolve interaction stats is nil";
      goto LABEL_19;
    }
LABEL_20:
    OUTLINED_FUNCTION_23_47();
    *v4 = 0;
    v4[1] = 0;
    *((_BYTE *)v4 + 16) = 3;
    goto LABEL_21;
  }
  v36 = sub_1C0303424();
  v37 = v66[24];
  v39 = v36;
  v65 = (__int128 *)(v66 + 7);
  OUTLINED_FUNCTION_16_62();
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_6_60();
  v40 = OUTLINED_FUNCTION_9_1();
  v64 = v13;
  if (os_log_type_enabled(v37, v40))
  {
    v41 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v67[0] = OUTLINED_FUNCTION_4_0();
    *(_DWORD *)v41 = 136315138;
    sub_1C0303550();
    swift_bridgeObjectRetain();
    v42 = sub_1C0303D9C();
    v44 = v43;
    swift_bridgeObjectRelease();
    v66[17] = sub_1C003E6D8(v42, v44, v67);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_2();
    _os_log_impl(&dword_1C0039000, v37, v40, "SeASModelAppResolverRule#resolve interaction stats %s", v41, 0xCu);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_2();

  v26 = v66;
  v45 = (_QWORD *)v66[23];
  v46 = sub_1C02DBCC0(v39);
  v47 = sub_1C02DB9E8(v39);
  swift_bridgeObjectRelease();
  v48 = v45 + 2;
  v49 = v45[5];
  v50 = v45[6];
  __swift_project_boxed_opaque_existential_1(v48, v49);
  sub_1C019F7B0(v49, v50, (uint64_t)v65);
  if (!v66[10])
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_33();
    sub_1C0056C9C((uint64_t)v65, &qword_1EF5B9B68);
    OUTLINED_FUNCTION_6_60();
    v55 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_4(v55))
    {
      v56 = (_WORD *)OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_13(v56);
      v35 = "SeASModelAppResolverRule#resolve Unable to get the CoreML model for prediction";
LABEL_19:
      OUTLINED_FUNCTION_14_73(&dword_1C0039000, v33, v34, v35);
      OUTLINED_FUNCTION_5();
    }
    goto LABEL_20;
  }
  v51 = v66 + 2;
  sub_1C004CD5C(v65, (uint64_t)(v66 + 2));
  v52 = sub_1C02DB2F8((uint64_t)v4, *(_QWORD *)(v63 + 16), v64, (uint64_t)v46, (uint64_t)v47);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v52)
  {
    v53 = v66[5];
    v54 = v66[6];
    __swift_project_boxed_opaque_existential_1(v51, v53);
    (*(void (**)(id, uint64_t, uint64_t))(v54 + 16))(v52, v53, v54);
    v61 = v66[15];
    v62 = v66[16];
    __swift_project_boxed_opaque_existential_1(v66 + 12, v61);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v62 + 24))(v4, v61, v62);

    OUTLINED_FUNCTION_33();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v66 + 12));
  }
  else
  {
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_6_60();
    v57 = OUTLINED_FUNCTION_9_1();
    if (OUTLINED_FUNCTION_4(v57))
    {
      v58 = (_WORD *)OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_13(v58);
      OUTLINED_FUNCTION_14_73(&dword_1C0039000, v59, v60, "SeASModelAppResolverRule#resolve Unable to generate CoreML model feature input");
      OUTLINED_FUNCTION_5();
    }
    OUTLINED_FUNCTION_23_47();
    *v4 = 0;
    v4[1] = 0;
    *((_BYTE *)v4 + 16) = 3;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v51);
LABEL_21:
  OUTLINED_FUNCTION_21_55();
  return ((uint64_t (*)(void))v26[1])();
}

id sub_1C02DB2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  id result;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _WORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  __n128 *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  __n128 *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  void *v80;
  void *v81;
  uint64_t v82;
  __n128 *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  id v105;
  void *v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  __n128 *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __n128 v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  __n128 *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  __n128 v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  __n128 *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  __n128 v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220[4];

  v199 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727640);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C030CE50;
  v11 = (void *)sub_1C00F6888();
  *(_QWORD *)(v10 + 32) = OUTLINED_FUNCTION_19_52();
  v12 = *(_QWORD *)(a1 + 16);
  v13 = sub_1C030427C();
  OUTLINED_FUNCTION_0_154(v13);
  v14 = (uint64_t *)objc_allocWithZone(MEMORY[0x1E0C9E970]);
  result = sub_1C0122AE4(v220[0], 65568);
  v185 = (uint64_t)result;
  v192 = v12;
  v171 = a3;
  v178 = a4;
  if (result)
  {
    if (v12)
    {
      v164 = v9;
      if (v12 > *(_QWORD *)(a2 + 16))
      {
        __break(1u);
      }
      else
      {
        swift_bridgeObjectRetain();
        v20 = 0;
        v21 = a2 + 48;
        v157 = a1;
        v22 = a1 + 40;
        do
        {
          v212 = *(_QWORD *)(v22 - 8);
          v23 = (__n128 *)OUTLINED_FUNCTION_1_140();
          OUTLINED_FUNCTION_6_107(v23, v24, v25, v26, v27, v28, v29, v30, v150, v157, v164, v171, v178, v185, v192, v199, v22, v212, v31);
          OUTLINED_FUNCTION_65();
          v32 = sub_1C030427C();
          v33 = OUTLINED_FUNCTION_5_102(v32);
          OUTLINED_FUNCTION_0_154(v33);
          sub_1C03041A4();
          v34 = (void *)OUTLINED_FUNCTION_3_142();
          v35 = OUTLINED_FUNCTION_33();
          OUTLINED_FUNCTION_11_86(v35, sel_setObject_forKeyedSubscript_);

          v36 = (__n128 *)OUTLINED_FUNCTION_1_140();
          OUTLINED_FUNCTION_6_107(v36, v37, v38, v39, v40, v41, v42, v43, v151, v158, v165, v172, v179, v186, v193, v200, v206, v213, v44);
          v45 = sub_1C030427C();
          v46 = OUTLINED_FUNCTION_5_102(v45);
          OUTLINED_FUNCTION_0_154(v46);
          v47 = (void *)v201;
          if (*(_QWORD *)(v201 + 16))
          {
            v48 = OUTLINED_FUNCTION_65();
            OUTLINED_FUNCTION_15_63(v48, v49, v50, v51, v52, v53, v54, v55, v152, v159, v166, v173, v180, v187, v194, v201, v207, v214);
            OUTLINED_FUNCTION_29();
          }
          sub_1C03041F8();
          v56 = (void *)OUTLINED_FUNCTION_3_142();
          v57 = OUTLINED_FUNCTION_33();
          OUTLINED_FUNCTION_11_86(v57, sel_setObject_forKeyedSubscript_);

          v58 = (__n128 *)OUTLINED_FUNCTION_1_140();
          OUTLINED_FUNCTION_6_107(v58, v59, v60, v61, v62, v63, v64, v65, v152, v159, v166, v173, v180, v187, v194, v201, v207, v214, v66);
          v67 = sub_1C030427C();
          v68 = OUTLINED_FUNCTION_5_102(v67);
          OUTLINED_FUNCTION_0_154(v68);
          v69 = v181;
          if (*(_QWORD *)(v181 + 16))
          {
            v70 = OUTLINED_FUNCTION_65();
            v78 = OUTLINED_FUNCTION_15_63(v70, v71, v72, v73, v74, v75, v76, v77, v153, v160, v167, v174, v181, v188, v195, v202, v208, v215);
            if ((v79 & 1) != 0)
              v80 = *(void **)(*(_QWORD *)(v69 + 56) + 8 * v78);
            else
              v80 = 0;
            OUTLINED_FUNCTION_29();
          }
          else
          {
            v80 = 0;
          }
          sub_1C030427C();
          v81 = (void *)OUTLINED_FUNCTION_3_142();
          v82 = OUTLINED_FUNCTION_33();
          OUTLINED_FUNCTION_11_86(v82, sel_setObject_forKeyedSubscript_);

          v83 = (__n128 *)OUTLINED_FUNCTION_1_140();
          OUTLINED_FUNCTION_6_107(v83, v84, v85, v86, v87, v88, v89, v90, v153, v160, v167, v174, v181, v188, v195, v202, v208, v215, v91);
          v92 = sub_1C030427C();
          v93 = OUTLINED_FUNCTION_5_102(v92);
          v94 = OUTLINED_FUNCTION_0_154(v93);
          v102 = v175;
          if (*(_QWORD *)(v175 + 16)
            && (v103 = OUTLINED_FUNCTION_15_63(v94, v95, v96, v97, v98, v99, v100, v101, v154, v161, v168, v175, v182, v189, v196, v203, v209, v216), (v104 & 1) != 0))
          {
            v105 = *(id *)(*(_QWORD *)(v102 + 56) + 8 * v103);
          }
          else
          {
            v105 = (id)OUTLINED_FUNCTION_19_52();
          }
          v106 = v105;
          v22 = v209 + 16;
          OUTLINED_FUNCTION_29();
          v107 = (void *)sub_1C0304120();
          v108 = OUTLINED_FUNCTION_33();
          v109 = v189;
          OUTLINED_FUNCTION_7_105(v108, sel_setObject_forKeyedSubscript_);

          v110 = (__n128 *)OUTLINED_FUNCTION_1_140();
          OUTLINED_FUNCTION_6_107(v110, v111, v112, v113, v114, v115, v116, v117, v154, v161, v168, v175, v182, v189, v196, v203, v209, v20 + 1, v118);
          v119 = sub_1C030427C();
          v120 = OUTLINED_FUNCTION_5_102(v119);
          OUTLINED_FUNCTION_0_154(v120);
          sub_1C0304438();
          v121 = (void *)OUTLINED_FUNCTION_3_142();
          v122 = OUTLINED_FUNCTION_33();
          OUTLINED_FUNCTION_7_105(v122, sel_setObject_forKeyedSubscript_);

          v123 = (__n128 *)OUTLINED_FUNCTION_1_140();
          OUTLINED_FUNCTION_6_107(v123, v124, v125, v126, v127, v128, v129, v130, v155, v162, v169, v176, v183, v190, v197, v204, v210, v217, v131);
          v132 = sub_1C030427C();
          v133 = OUTLINED_FUNCTION_5_102(v132);
          OUTLINED_FUNCTION_0_154(v133);
          OUTLINED_FUNCTION_19_52();
          v134 = (void *)OUTLINED_FUNCTION_3_142();
          v135 = OUTLINED_FUNCTION_33();
          OUTLINED_FUNCTION_7_105(v135, sel_setObject_forKeyedSubscript_);

          v136 = (__n128 *)OUTLINED_FUNCTION_1_140();
          OUTLINED_FUNCTION_6_107(v136, v137, v138, v139, v140, v141, v142, v143, v156, v163, v170, v177, v184, v191, v198, v205, v211, v218, v144);
          v145 = sub_1C030427C();
          v146 = OUTLINED_FUNCTION_5_102(v145);
          OUTLINED_FUNCTION_0_154(v146);
          v147 = *(_QWORD *)(v21 - 8);
          v220[0] = *(_QWORD *)(v21 - 16);
          v220[1] = v147;
          sub_1C004F444();
          sub_1C004F480();
          v14 = v220;
          sub_1C0303E44();
          sub_1C03041A4();
          v148 = (void *)OUTLINED_FUNCTION_3_142();
          v149 = OUTLINED_FUNCTION_33();
          OUTLINED_FUNCTION_7_105(v149, sel_setObject_forKeyedSubscript_);

          v21 += 24;
          v20 = v219;
        }
        while (v192 != v219);
        swift_bridgeObjectRelease();
        return (id)v109;
      }
    }
  }
  else
  {
    if (qword_1EF5B7F18 != -1)
      swift_once();
    v16 = sub_1C0303B98();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EF5FC6E0);
    v17 = sub_1C0303B80();
    v18 = sub_1C03042E8();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (_WORD *)OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_13(v19);
      _os_log_impl(&dword_1C0039000, v17, v18, "SeASModelAppResolverRule#getFeatureInput Unable to initialize MLMultiArray", 0, 2u);
      OUTLINED_FUNCTION_5();
    }

    return 0;
  }
  return result;
}

unint64_t sub_1C02DB7E0()
{
  return 0xD000000000000018;
}

uint64_t sub_1C02DB7FC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  swift_release();
  sub_1C0056C9C(v0 + OBJC_IVAR____TtC13SiriInference24SeASModelAppResolverRule_appMatcher, &qword_1EF5BC6F0);
  return v0;
}

uint64_t sub_1C02DB838()
{
  sub_1C02DB7FC();
  return swift_deallocClassInstance();
}

uint64_t sub_1C02DB85C()
{
  return type metadata accessor for SeASModelAppResolverRule();
}

uint64_t type metadata accessor for SeASModelAppResolverRule()
{
  uint64_t result;

  result = qword_1EF5C3F00;
  if (!qword_1EF5C3F00)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C02DB89C()
{
  unint64_t v0;

  sub_1C01780D8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1C02DB920(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C008E620;
  return sub_1C02DAA6C(a1, a2);
}

unint64_t sub_1C02DB984()
{
  sub_1C02DB7E0();
  return 0xD000000000000018;
}

uint64_t sub_1C02DB9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC6F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1C02DB9E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *result;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  long double v29;
  _QWORD *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;

  v2 = sub_1C0301CFC();
  v43 = *(_QWORD *)(v2 - 8);
  v44 = v2;
  MEMORY[0x1E0C80A78](v2);
  v42 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C0303550();
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC1F0);
  result = (_QWORD *)sub_1C0304804();
  v7 = 0;
  v45 = a1;
  v10 = *(_QWORD *)(a1 + 64);
  v9 = a1 + 64;
  v8 = v10;
  v11 = 1 << *(_BYTE *)(v9 - 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v8;
  v35 = v9;
  v36 = (unint64_t)(v11 + 63) >> 6;
  v37 = result + 8;
  v38 = result;
  v15 = v39;
  v14 = v40;
  v17 = v41;
  v16 = v42;
  if ((v12 & v8) == 0)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  v46 = v7;
  for (i = v18 | (v7 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v45 + 48) + 16 * i);
    v25 = *v24;
    v26 = v24[1];
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v15, *(_QWORD *)(v45 + 56) + *(_QWORD *)(v14 + 72) * i, v17);
    swift_bridgeObjectRetain();
    sub_1C0303520();
    sub_1C0301C9C();
    v28 = v27;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v44);
    v29 = log(fabs(v28));
    (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v17);
    result = v38;
    *(_QWORD *)((char *)v37 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v30 = (_QWORD *)(result[6] + 16 * i);
    *v30 = v25;
    v30[1] = v26;
    *(long double *)(result[7] + 8 * i) = v29;
    v31 = result[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    result[2] = v33;
    v7 = v46;
    if (v13)
      goto LABEL_4;
LABEL_5:
    v20 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_24;
    if (v20 >= v36)
      return result;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    v22 = v7 + 1;
    if (!v21)
    {
      v22 = v7 + 2;
      if (v7 + 2 >= v36)
        return result;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (!v21)
      {
        v22 = v7 + 3;
        if (v7 + 3 >= v36)
          return result;
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
          break;
      }
    }
LABEL_18:
    v13 = (v21 - 1) & v21;
    v46 = v22;
  }
  v23 = v7 + 4;
  if (v7 + 4 >= v36)
    return result;
  v21 = *(_QWORD *)(v35 + 8 * v23);
  if (v21)
  {
    v22 = v7 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v36)
      return result;
    v21 = *(_QWORD *)(v35 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

_QWORD *sub_1C02DBCC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = sub_1C0303550();
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  MEMORY[0x1E0C80A78](v2);
  v33 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727D60);
  result = (_QWORD *)sub_1C0304804();
  v5 = 0;
  v36 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  v29 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v6;
  v30 = (unint64_t)(v7 + 63) >> 6;
  v31 = result;
  v32 = result + 8;
  v10 = v33;
  v11 = v34;
  v12 = v35;
  if ((v8 & v6) == 0)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v14 = v5;
  for (i = v13 | (v5 << 6); ; i = __clz(__rbit64(v17)) + (v18 << 6))
  {
    v20 = (uint64_t *)(*(_QWORD *)(v36 + 48) + 16 * i);
    v22 = *v20;
    v21 = v20[1];
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v10, *(_QWORD *)(v36 + 56) + *(_QWORD *)(v11 + 72) * i, v12);
    swift_bridgeObjectRetain();
    v23 = sub_1C0303538();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v10, v12);
    result = v31;
    *(_QWORD *)((char *)v32 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v24 = (_QWORD *)(result[6] + 16 * i);
    *v24 = v22;
    v24[1] = v21;
    *(_QWORD *)(result[7] + 8 * i) = v23;
    v25 = result[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    result[2] = v27;
    v5 = v14;
    if (v9)
      goto LABEL_4;
LABEL_5:
    v16 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_24;
    if (v16 >= v30)
      return result;
    v17 = *(_QWORD *)(v29 + 8 * v16);
    v18 = v5 + 1;
    if (!v17)
    {
      v18 = v5 + 2;
      if (v5 + 2 >= v30)
        return result;
      v17 = *(_QWORD *)(v29 + 8 * v18);
      if (!v17)
      {
        v18 = v5 + 3;
        if (v5 + 3 >= v30)
          return result;
        v17 = *(_QWORD *)(v29 + 8 * v18);
        if (!v17)
          break;
      }
    }
LABEL_18:
    v9 = (v17 - 1) & v17;
    v14 = v18;
  }
  v19 = v5 + 4;
  if (v5 + 4 >= v30)
    return result;
  v17 = *(_QWORD *)(v29 + 8 * v19);
  if (v17)
  {
    v18 = v5 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v18 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v18 >= v30)
      return result;
    v17 = *(_QWORD *)(v29 + 8 * v18);
    ++v19;
    if (v17)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1C02DBF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC6F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_154(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return sub_1C0304150();
}

uint64_t OUTLINED_FUNCTION_1_140()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_3_142()
{
  return sub_1C0304120();
}

uint64_t OUTLINED_FUNCTION_5_102(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return sub_1C030427C();
}

__n128 OUTLINED_FUNCTION_6_107(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __n128 a19)
{
  __n128 result;

  result = a19;
  a1[1] = a19;
  return result;
}

id OUTLINED_FUNCTION_7_105(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  return objc_msgSend(v4, a2, v2, v3);
}

id OUTLINED_FUNCTION_11_86(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  return objc_msgSend(v4, a2, v2, v3);
}

void OUTLINED_FUNCTION_14_73(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  NSObject *v5;
  uint8_t *v6;

  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

unint64_t OUTLINED_FUNCTION_15_63(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;

  return sub_1C00B3C3C(a18, v18);
}

uint64_t OUTLINED_FUNCTION_16_62()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_19_52()
{
  return sub_1C0304444();
}

uint64_t OUTLINED_FUNCTION_21_55()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_23_47()
{
  void *v0;

}

void sub_1C02DC034(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;

  v4 = sub_1C0301B70();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_1_3();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v2, a1);
  v6 = objc_allocWithZone(MEMORY[0x1E0CB3650]);
  v7 = sub_1C02DDAF8(v2, 1);
  if (!v1)
  {
    v8 = v7;
    v9 = sub_1C02DDC08(v7);
    if (v10 >> 60 == 15)
    {
      sub_1C02DD154();
      OUTLINED_FUNCTION_15_2();
      *v11 = 0;
      v11[1] = 0;
      OUTLINED_FUNCTION_7_22();
    }
    else
    {
      v12 = v9;
      v13 = v10;
      sub_1C0301984();
      swift_allocObject();
      sub_1C0301978();
      OUTLINED_FUNCTION_20_46();
      sub_1C02DDC68();
      sub_1C030196C();
      swift_release();
      sub_1C00D9830(v12, v13);
    }

  }
}

uint64_t sub_1C02DC180(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x796164696C6F68 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7972746E756F63 && a2 == 0xE700000000000000;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7261646E656C6163 && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1C0304A08();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1C02DC2D4(char a1)
{
  if (!a1)
    return 0x796164696C6F68;
  if (a1 == 1)
    return 0x7972746E756F63;
  return 0x7261646E656C6163;
}

uint64_t sub_1C02DC32C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C4100);
  OUTLINED_FUNCTION_42_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_1_3();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02DE504();
  sub_1C0304BA0();
  OUTLINED_FUNCTION_99_1();
  if (!v2)
  {
    OUTLINED_FUNCTION_99_1();
    sub_1C0255DD8();
    sub_1C030499C();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v1);
}

void sub_1C02DC44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12)
{
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_40_0();
  v14 = v13;
  v16 = v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C40F0);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_6_0();
  __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  sub_1C02DE504();
  sub_1C0304B88();
  if (v12)
  {
    OUTLINED_FUNCTION_10_0();
  }
  else
  {
    v18 = OUTLINED_FUNCTION_13_24();
    v20 = v19;
    v25 = v18;
    swift_bridgeObjectRetain();
    v21 = OUTLINED_FUNCTION_13_24();
    v23 = v22;
    v24 = v21;
    sub_1C0255CE8();
    swift_bridgeObjectRetain();
    sub_1C03048E8();
    OUTLINED_FUNCTION_3_27();
    OUTLINED_FUNCTION_10_0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_8_1();
    *(_QWORD *)v16 = v25;
    *(_QWORD *)(v16 + 8) = v20;
    *(_QWORD *)(v16 + 16) = v24;
    *(_QWORD *)(v16 + 24) = v23;
    *(_BYTE *)(v16 + 32) = a12;
  }
  OUTLINED_FUNCTION_28_0();
}

uint64_t sub_1C02DC600()
{
  char *v0;

  return sub_1C02DC2D4(*v0);
}

uint64_t sub_1C02DC608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C02DC180(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C02DC62C()
{
  sub_1C02DE504();
  return sub_1C0304BAC();
}

uint64_t sub_1C02DC654()
{
  sub_1C02DE504();
  return sub_1C0304BB8();
}

double sub_1C02DC67C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  double result;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  char v15;

  sub_1C02DC44C(a1, a2, a3, a4, a5, a6, a7, a8, v12, v13, SBYTE4(v13), SBYTE5(v13));
  if (!v9)
  {
    result = *(double *)&v13;
    *(_OWORD *)a9 = v13;
    *(_OWORD *)(a9 + 16) = v14;
    *(_BYTE *)(a9 + 32) = v15;
  }
  return result;
}

uint64_t sub_1C02DC6C0(_QWORD *a1)
{
  return sub_1C02DC32C(a1);
}

uint64_t sub_1C02DC6D4()
{
  unint64_t v0;

  v0 = sub_1C030484C();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_1C02DC720(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_4_117 + 4
                                                                                                 * byte_1C0325D90[a1]))(0x6E6F6973726576, 0xE700000000000000);
}

uint64_t sub_1C02DC758()
{
  return 0x796164696C6F68;
}

uint64_t sub_1C02DC780()
{
  return 0x7261646E656C6163;
}

uint64_t sub_1C02DC79C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_4_117_0
                                                            + 4 * byte_1C0325D96[a1]))(0x6E6F6973726576, 0xE700000000000000);
}

uint64_t sub_1C02DC7D4()
{
  return 0x796164696C6F68;
}

uint64_t sub_1C02DC7FC()
{
  return 0x7261646E656C6163;
}

void sub_1C02DC818(char *a1)
{
  sub_1C025E0CC(*a1);
}

void sub_1C02DC824()
{
  unsigned __int8 *v0;

  sub_1C00CED20(*v0);
}

void sub_1C02DC82C(uint64_t a1)
{
  char *v1;

  sub_1C00C2310(a1, *v1);
}

void sub_1C02DC834(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EAD68(a1, *v1);
}

uint64_t sub_1C02DC83C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C02DC6D4();
  *a1 = result;
  return result;
}

uint64_t sub_1C02DC868@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1C02DC720(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C02DC890()
{
  unsigned __int8 *v0;

  return sub_1C02DC79C(*v0);
}

uint64_t sub_1C02DC898@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C02DC71C();
  *a1 = result;
  return result;
}

void sub_1C02DC8BC(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1C02DC8C8()
{
  sub_1C02DD118();
  return sub_1C0304BAC();
}

uint64_t sub_1C02DC8F0()
{
  sub_1C02DD118();
  return sub_1C0304BB8();
}

void sub_1C02DC918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  int *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  int EnumTagSinglePayload;
  uint64_t v44;
  uint64_t *v45;
  char *v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  int *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  char v71;

  OUTLINED_FUNCTION_40_0();
  v68 = v10;
  v14 = v13;
  v63 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728360);
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_6_0();
  v19 = v18 - v17;
  v64 = sub_1C0301CFC();
  v69 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  OUTLINED_FUNCTION_12_26();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v58 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C3FC0);
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_20_46();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_6_0();
  v28 = (uint64_t *)(v27 - v26);
  v30 = v29[7];
  v70 = v28;
  v31 = (uint64_t *)((char *)v28 + v30);
  *v31 = 0;
  v31[1] = 0;
  v66 = v29;
  v67 = v31;
  v32 = v14[3];
  v65 = v14;
  __swift_project_boxed_opaque_existential_1(v14, v32);
  sub_1C02DD118();
  v33 = v68;
  sub_1C0304B88();
  if (!v33)
  {
    v62 = v22;
    v68 = v24;
    OUTLINED_FUNCTION_27_52();
    *v70 = sub_1C03048D0();
    LOBYTE(a10) = 1;
    OUTLINED_FUNCTION_27_52();
    v34 = sub_1C03048AC();
    v36 = v35;
    v61 = v23;
    v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36A8]), sel_init);
    objc_msgSend(v37, sel_setFormatOptions_, 1907);
    v59 = v34;
    v60 = v36;
    v38 = (void *)sub_1C0303E8C();
    v39 = objc_msgSend(v37, sel_dateFromString_, v38);

    if (v39)
    {
      sub_1C0301CD8();

      v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 32);
      v41 = v19;
      v42 = v64;
      v40(v19, v12, v64);
      __swift_storeEnumTagSinglePayload(v19, 0, 1, v42);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v19, 1, v42);
      v45 = v67;
      v44 = v68;
      if (EnumTagSinglePayload != 1)
      {
        v59 = (uint64_t)v37;
        swift_bridgeObjectRelease();
        v46 = v62;
        v40((uint64_t)v62, v41, v42);
        v47 = v66;
        v49 = v69;
        v48 = (uint64_t)v70;
        (*(void (**)(char *, char *, uint64_t))(v69 + 16))((char *)v70 + v66[5], v46, v42);
        OUTLINED_FUNCTION_16_63(2);
        v50 = sub_1C03048AC();
        v53 = (uint64_t *)(v48 + v47[6]);
        *v53 = v50;
        v53[1] = v54;
        OUTLINED_FUNCTION_16_63(3);
        *v45 = sub_1C0304870();
        v45[1] = v55;
        OUTLINED_FUNCTION_164();
        v71 = 4;
        OUTLINED_FUNCTION_18_50(&qword_1EF5C3FE0, v56, (uint64_t (*)(void))sub_1C02DD190, MEMORY[0x1E0DEAF40]);
        OUTLINED_FUNCTION_3_143();
        *(_QWORD *)(v48 + v47[8]) = a10;
        OUTLINED_FUNCTION_164();
        v71 = 5;
        OUTLINED_FUNCTION_18_50(&qword_1EF5C3FF8, v57, (uint64_t (*)(void))sub_1C02DD1CC, MEMORY[0x1E0DEAF40]);
        OUTLINED_FUNCTION_3_143();
        OUTLINED_FUNCTION_11_87();
        (*(void (**)(char *, uint64_t))(v49 + 8))(v46, v64);
        OUTLINED_FUNCTION_1_141();
        *(_QWORD *)(v48 + v47[9]) = a10;
        sub_1C02DD208(v48, v63);
        OUTLINED_FUNCTION_25_41();
        sub_1C0168108(v48);
        goto LABEL_4;
      }
    }
    else
    {
      v41 = v19;
      __swift_storeEnumTagSinglePayload(v19, 1, 1, v64);
      v44 = v68;
    }
    sub_1C00CF854(v41);
    sub_1C02DD154();
    OUTLINED_FUNCTION_15_2();
    v51 = v60;
    *v52 = v59;
    v52[1] = v51;
    OUTLINED_FUNCTION_7_22();

    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v11, v61);
  }
  OUTLINED_FUNCTION_25_41();
  swift_bridgeObjectRelease();
LABEL_4:
  OUTLINED_FUNCTION_28_0();
}

void sub_1C02DCE20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_40_0();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C4008);
  OUTLINED_FUNCTION_42_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_6_0();
  v8 = v7 - v6;
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1C02DD118();
  sub_1C0304BA0();
  sub_1C0304984();
  if (!v1)
  {
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36A8]), sel_init);
    objc_msgSend(v9, sel_setFormatOptions_, 1907);
    OUTLINED_FUNCTION_20_46();
    v10 = (void *)sub_1C0301C60();
    v11 = objc_msgSend(v9, sel_stringFromDate_, v10);

    sub_1C0303EB0();
    sub_1C0304960();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_15_64(2);
    sub_1C0304960();
    OUTLINED_FUNCTION_15_64(3);
    sub_1C0304924();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_164();
    OUTLINED_FUNCTION_18_50(&qword_1EF5C4010, v12, (uint64_t (*)(void))sub_1C02DD24C, MEMORY[0x1E0DEAF10]);
    OUTLINED_FUNCTION_34_40();
    OUTLINED_FUNCTION_4_77();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_45_0();
    OUTLINED_FUNCTION_164();
    OUTLINED_FUNCTION_18_50(&qword_1EF5C4020, v13, (uint64_t (*)(void))sub_1C02DD2EC, MEMORY[0x1E0DEAF10]);
    OUTLINED_FUNCTION_34_40();
    OUTLINED_FUNCTION_4_77();
    OUTLINED_FUNCTION_28();

  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v8, v0);
  OUTLINED_FUNCTION_28_0();
}

void sub_1C02DD0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_1C02DC918(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1C02DD0CC()
{
  sub_1C02DCE20();
}

uint64_t type metadata accessor for HolidaysDBUpdate()
{
  uint64_t result;

  result = qword_1EF5C4090;
  if (!qword_1EF5C4090)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1C02DD118()
{
  unint64_t result;

  result = qword_1EF5C3FC8;
  if (!qword_1EF5C3FC8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0326018, &unk_1E79A9240);
    atomic_store(result, (unint64_t *)&qword_1EF5C3FC8);
  }
  return result;
}

unint64_t sub_1C02DD154()
{
  unint64_t result;

  result = qword_1EF5C3FD0;
  if (!qword_1EF5C3FD0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0325FD8, &unk_1E79A91B0);
    atomic_store(result, (unint64_t *)&qword_1EF5C3FD0);
  }
  return result;
}

unint64_t sub_1C02DD190()
{
  unint64_t result;

  result = qword_1EF5C3FE8;
  if (!qword_1EF5C3FE8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0320888, &unk_1E79A3A38);
    atomic_store(result, (unint64_t *)&qword_1EF5C3FE8);
  }
  return result;
}

unint64_t sub_1C02DD1CC()
{
  unint64_t result;

  result = qword_1EF5C4000;
  if (!qword_1EF5C4000)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0325FB0, &unk_1E79A9110);
    atomic_store(result, (unint64_t *)&qword_1EF5C4000);
  }
  return result;
}

uint64_t sub_1C02DD208(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HolidaysDBUpdate();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C02DD24C()
{
  unint64_t result;

  result = qword_1EF5C4018;
  if (!qword_1EF5C4018)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0320860, &unk_1E79A3A38);
    atomic_store(result, (unint64_t *)&qword_1EF5C4018);
  }
  return result;
}

uint64_t sub_1C02DD288(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x1C3B9827C](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C02DD2EC()
{
  unint64_t result;

  result = qword_1EF5C4028;
  if (!qword_1EF5C4028)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0325F88, &unk_1E79A9110);
    atomic_store(result, (unint64_t *)&qword_1EF5C4028);
  }
  return result;
}

void sub_1C02DD328()
{
  uint64_t v0;
  uint64_t v1;
  int64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  int *v20;
  void (*v21)(char *, uint64_t);
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  _OWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t inited;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  int64_t *v57;
  uint64_t v58;
  _BYTE v59[176];

  OUTLINED_FUNCTION_40_0();
  v57 = v2;
  v58 = v0;
  v4 = v3;
  v56 = OUTLINED_FUNCTION_20_46();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_12_26();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v49 - v7;
  v9 = sub_1C0301CFC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v49 - v14;
  v16 = v4;
  v17 = v58;
  v18 = sub_1C0251338();
  if (!v17)
  {
    v19 = v18;
    v54 = v16;
    *(_QWORD *)&v55 = v8;
    v53 = v1;
    v20 = (int *)v56;
    v58 = 0;
    v21 = *(void (**)(char *, uint64_t))(v10 + 8);
    v21(v13, v9);
    v21(v15, v9);
    if (v19 >= *v57)
    {
      if (qword_1ED7256B8 != -1)
        swift_once();
      v27 = sub_1C0303B98();
      __swift_project_value_buffer(v27, (uint64_t)qword_1ED729440);
      v28 = v55;
      sub_1C02DD208((uint64_t)v57, v55);
      v29 = sub_1C0303B80();
      v30 = sub_1C03042E8();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v31 = 134217984;
        sub_1C0168108(v28);
        sub_1C03044B0();
        _os_log_impl(&dword_1C0039000, v29, v30, "Skipping reapply for update %ld", v31, 0xCu);
        OUTLINED_FUNCTION_5();
      }
      sub_1C0168108(v28);

    }
    else if (*v57 == v19 + 1)
    {
      v22 = v20;
      v23 = v58;
      sub_1C0253C50();
      if (!v23)
      {
        sub_1C02543CC(*(int64_t *)((char *)v57 + v20[6]), *(int64_t *)((char *)v57 + v20[6] + 8), *(int64_t *)((char *)v57 + v20[7]), *(int64_t *)((char *)v57 + v20[7] + 8));
        v24 = *(int64_t *)((char *)v57 + v20[8]);
        v25 = *(_QWORD *)(v24 + 16);
        if (v25)
        {
          OUTLINED_FUNCTION_45_0();
          v26 = 32;
          do
          {
            memcpy(v59, (const void *)(v24 + v26), 0xA3uLL);
            sub_1C0154FE0((uint64_t)v59);
            sub_1C0253E8C();
            sub_1C0155028((uint64_t)v59);
            v26 += 168;
            --v25;
          }
          while (v25);
          OUTLINED_FUNCTION_28();
        }
        v56 = *(int64_t *)((char *)v57 + v22[9]);
        v38 = *(_QWORD *)(v56 + 16);
        if (v38)
        {
          v58 = 0;
          v39 = *(_QWORD *)(v56 + 40);
          v41 = *(_QWORD *)(v56 + 48);
          v40 = *(_QWORD *)(v56 + 56);
          v42 = *(unsigned __int8 *)(v56 + 64);
          v50 = *(_QWORD *)(v56 + 32);
          v51 = v42;
          sub_1C0055230();
          swift_bridgeObjectRetain();
          v43 = v39;
          swift_bridgeObjectRetain();
          OUTLINED_FUNCTION_45_0();
          if (OUTLINED_FUNCTION_33_40() != 1)
          {
            v57 = 0;
            v52 = v38 - 1;
            v55 = xmmword_1C03067E0;
            v53 = 0x80000001C0336D30;
            v49 = "E";
            v44 = v50;
            v45 = v51;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727638);
            inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = v55;
            v47 = MEMORY[0x1E0DEA968];
            *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
            *(_QWORD *)(inited + 64) = &off_1E799BE20;
            *(_QWORD *)(inited + 72) = v41;
            *(_QWORD *)(inited + 32) = v44;
            *(_QWORD *)(inited + 40) = v43;
            *(_QWORD *)(inited + 96) = v47;
            *(_QWORD *)(inited + 104) = &off_1E799BE20;
            *(_QWORD *)(inited + 80) = v40;
            __asm { BR              X11 }
          }
          sub_1C0255288();
          OUTLINED_FUNCTION_15_2();
          *(_QWORD *)v48 = 1;
          *(_OWORD *)(v48 + 8) = 0u;
          *(_OWORD *)(v48 + 24) = 0u;
          *(_QWORD *)(v48 + 40) = 0;
          *(_BYTE *)(v48 + 48) = 2;
          OUTLINED_FUNCTION_7_22();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_28();
          swift_bridgeObjectRelease();
        }
      }
    }
    else
    {
      if (qword_1ED7256B8 != -1)
        swift_once();
      v32 = sub_1C0303B98();
      __swift_project_value_buffer(v32, (uint64_t)qword_1ED729440);
      v33 = v53;
      sub_1C02DD208((uint64_t)v57, v53);
      v34 = sub_1C0303B80();
      v35 = sub_1C03042F4();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = swift_slowAlloc();
        *(_DWORD *)v36 = 134218240;
        sub_1C0168108(v33);
        sub_1C03044B0();
        *(_WORD *)(v36 + 12) = 2048;
        sub_1C03044B0();
        _os_log_impl(&dword_1C0039000, v34, v35, "Not applying update version %ld out of order; waiting for %ld",
          (uint8_t *)v36,
          0x16u);
        OUTLINED_FUNCTION_5();
      }
      sub_1C0168108(v33);

      sub_1C02DD154();
      OUTLINED_FUNCTION_15_2();
      *v37 = xmmword_1C0307CF0;
      OUTLINED_FUNCTION_7_22();
    }
  }
  OUTLINED_FUNCTION_28_0();
}

id sub_1C02DDAF8(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  id v11;
  id v12;
  uint64_t v13;
  id v15[2];

  v3 = v2;
  v15[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = (void *)sub_1C0301B10();
  v15[0] = 0;
  v7 = objc_msgSend(v3, sel_initWithURL_options_error_, v6, a2, v15);

  v8 = v15[0];
  if (v7)
  {
    v9 = sub_1C0301B70();
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v11 = v8;
    v10(a1, v9);
  }
  else
  {
    v12 = v15[0];
    sub_1C0301ABC();

    swift_willThrow();
    v13 = sub_1C0301B70();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);
  }
  return v7;
}

uint64_t sub_1C02DDC08(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_regularFileContents);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C0301C00();

  return v3;
}

unint64_t sub_1C02DDC68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF5C4030;
  if (!qword_1EF5C4030)
  {
    v1 = type metadata accessor for HolidaysDBUpdate();
    result = MEMORY[0x1C3B9827C](&unk_1C0325DD8, v1);
    atomic_store(result, (unint64_t *)&qword_1EF5C4030);
  }
  return result;
}

uint64_t sub_1C02DDCA8(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C02DDCE8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for HolidayCalendarInfo()
{
  OUTLINED_FUNCTION_17_2();
}

void type metadata accessor for HolidaysDBUpdateError()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C02DDD44(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1C02DDD90 + 4 * byte_1C0325DA1[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1C02DDDC4 + 4 * byte_1C0325D9C[v4]))();
}

uint64_t sub_1C02DDDC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02DDDCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02DDDD4);
  return result;
}

uint64_t sub_1C02DDDE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02DDDE8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1C02DDDEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02DDDF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for HolidaysDBUpdate.CodingKeys()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t *sub_1C02DDE0C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1C0301CFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[6];
    v12 = a3[7];
    v13 = (uint64_t *)((char *)v4 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (uint64_t *)((char *)v4 + v12);
    v17 = (uint64_t *)((char *)a2 + v12);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)v4 + v19) = *(uint64_t *)((char *)a2 + v19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C02DDEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1C0301CFC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1C02DDF78(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C0301CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (_QWORD *)((char *)a1 + v10);
  v13 = (_QWORD *)((char *)a2 + v10);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = (_QWORD *)((char *)a1 + v11);
  v16 = (_QWORD *)((char *)a2 + v11);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1C02DE038(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C0301CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1C02DE134(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C0301CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  v11 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  return a1;
}

_QWORD *sub_1C02DE1C8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C0301CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C02DE294()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C02DE2A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_1C0301CFC();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 20), a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_1C02DE320()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C02DE32C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1C0301CFC();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1C02DE3A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C0301CFC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1C02DE448()
{
  unint64_t result;

  result = qword_1EF5C40D8;
  if (!qword_1EF5C40D8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0325F60, &unk_1E79A9240);
    atomic_store(result, (unint64_t *)&qword_1EF5C40D8);
  }
  return result;
}

unint64_t sub_1C02DE488()
{
  unint64_t result;

  result = qword_1EF5C40E0;
  if (!qword_1EF5C40E0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0325E98, &unk_1E79A9240);
    atomic_store(result, (unint64_t *)&qword_1EF5C40E0);
  }
  return result;
}

unint64_t sub_1C02DE4C8()
{
  unint64_t result;

  result = qword_1EF5C40E8;
  if (!qword_1EF5C40E8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0325EC0, &unk_1E79A9240);
    atomic_store(result, (unint64_t *)&qword_1EF5C40E8);
  }
  return result;
}

unint64_t sub_1C02DE504()
{
  unint64_t result;

  result = qword_1EF5C40F8;
  if (!qword_1EF5C40F8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0326120, &type metadata for HolidayCalendarInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C40F8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HolidayCalendarInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C02DE58C + 4 * byte_1C0325DAB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C02DE5C0 + 4 * byte_1C0325DA6[v4]))();
}

uint64_t sub_1C02DE5C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02DE5C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02DE5D0);
  return result;
}

uint64_t sub_1C02DE5DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02DE5E4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C02DE5E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02DE5F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HolidayCalendarInfo.CodingKeys()
{
  return &type metadata for HolidayCalendarInfo.CodingKeys;
}

unint64_t sub_1C02DE610()
{
  unint64_t result;

  result = qword_1EF5C4108;
  if (!qword_1EF5C4108)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03260F8, &type metadata for HolidayCalendarInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C4108);
  }
  return result;
}

unint64_t sub_1C02DE650()
{
  unint64_t result;

  result = qword_1EF5C4110;
  if (!qword_1EF5C4110)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0326068, &type metadata for HolidayCalendarInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C4110);
  }
  return result;
}

unint64_t sub_1C02DE690()
{
  unint64_t result;

  result = qword_1EF5C4118;
  if (!qword_1EF5C4118)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0326090, &type metadata for HolidayCalendarInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C4118);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_141()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 112) + 8))(v0, *(_QWORD *)(v1 - 168));
}

uint64_t OUTLINED_FUNCTION_3_143()
{
  return sub_1C03048E8();
}

uint64_t OUTLINED_FUNCTION_4_117()
{
  return 0x646E6F6973726576;
}

uint64_t OUTLINED_FUNCTION_9_95()
{
  return 0x6F666E4977656ELL;
}

uint64_t OUTLINED_FUNCTION_10_85()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
}

void OUTLINED_FUNCTION_11_87()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_15_64(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = a1;
}

uint64_t OUTLINED_FUNCTION_16_63@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t OUTLINED_FUNCTION_18_50(unint64_t *a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t *v4;

  return sub_1C02DD288(a1, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_20_46()
{
  return type metadata accessor for HolidaysDBUpdate();
}

uint64_t OUTLINED_FUNCTION_25_41()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_0Tm(*(_QWORD *)(v0 - 136));
}

uint64_t OUTLINED_FUNCTION_27_52()
{
  uint64_t v0;

  return v0 - 72;
}

uint64_t OUTLINED_FUNCTION_34_40()
{
  uint64_t v0;

  return v0 - 72;
}

unint64_t DateTime.Date.CalendarEra.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 7;
  if (result < 7)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t DateTime.Date.CalendarEra.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1C02DE7E4()
{
  unint64_t result;

  result = qword_1EF5C4120;
  if (!qword_1EF5C4120)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.CalendarEra, &type metadata for DateTime.Date.CalendarEra);
    atomic_store(result, (unint64_t *)&qword_1EF5C4120);
  }
  return result;
}

unint64_t sub_1C02DE820@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return DateTime.Date.CalendarEra.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C02DE828@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DateTime.Date.CalendarEra.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C02DE84C()
{
  sub_1C02DE9C0();
  return sub_1C03040FC();
}

uint64_t sub_1C02DE8A8()
{
  sub_1C02DE9C0();
  return sub_1C03040D8();
}

uint64_t _s11CalendarEraOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1C02DE940 + 4 * byte_1C0326175[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1C02DE974 + 4 * byte_1C0326170[v4]))();
}

uint64_t sub_1C02DE974(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02DE97C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02DE984);
  return result;
}

uint64_t sub_1C02DE990(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02DE998);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1C02DE99C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02DE9A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DateTime.Date.CalendarEra()
{
  return &type metadata for DateTime.Date.CalendarEra;
}

unint64_t sub_1C02DE9C0()
{
  unint64_t result;

  result = qword_1EF5C4128;
  if (!qword_1EF5C4128)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.Date.CalendarEra, &type metadata for DateTime.Date.CalendarEra);
    atomic_store(result, (unint64_t *)&qword_1EF5C4128);
  }
  return result;
}

uint64_t sub_1C02DE9FC(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1C0210004();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1C02DFD24(v6);
  return sub_1C0304744();
}

void static BiomeSiriUIProcessor.metricName.getter()
{
  OUTLINED_FUNCTION_6_108();
}

void BiomeSiriUIProcessor.__allocating_init(siriUIEvent:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  BiomeSiriUIProcessor.init(siriUIEvent:)(a1);
  OUTLINED_FUNCTION_9();
}

id BiomeSiriUIProcessor.init(siriUIEvent:)(void *a1)
{
  char *v1;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  id v10;
  id v11;
  objc_super v13;

  v3 = (objc_class *)OUTLINED_FUNCTION_7_9();
  v4 = sub_1C0303778();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC13SiriInference20BiomeSiriUIProcessor_siriUIEvent] = a1;
  v8 = &v1[OBJC_IVAR____TtC13SiriInference20BiomeSiriUIProcessor_siriTasksEvaluator];
  *((_QWORD *)v8 + 3) = &type metadata for SiriTasksEvaluator;
  *((_QWORD *)v8 + 4) = &off_1E799C5E8;
  v9 = v1;
  v10 = a1;
  sub_1C030376C();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v9[OBJC_IVAR____TtC13SiriInference20BiomeSiriUIProcessor_intentEventStore], v7, v4);

  v13.receiver = v9;
  v13.super_class = v3;
  v11 = objc_msgSendSuper2(&v13, sel_init);

  return v11;
}

void sub_1C02DEBA4()
{
  uint64_t v0;
  objc_class *v1;
  void *v2;
  id v3;

  v1 = (objc_class *)OUTLINED_FUNCTION_7_9();
  v2 = *(void **)(v0 + OBJC_IVAR____TtC13SiriInference20BiomeSiriUIProcessor_siriUIEvent);
  v3 = objc_allocWithZone(v1);
  BiomeSiriUIProcessor.init(siriUIEvent:)(v2);
  OUTLINED_FUNCTION_9();
}

Swift::Void __swiftcall BiomeSiriUIProcessor.main()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_7_9();
  if ((objc_msgSend(v0, sel_isCancelled) & 1) == 0)
  {
    v1 = sub_1C03046E4();
    sub_1C01D2D1C(v1, v2, (uint64_t)v0);
    swift_bridgeObjectRelease();
  }
}

void sub_1C02DEC6C(uint64_t a1)
{
  char *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;

  v2 = *(void **)&v1[OBJC_IVAR____TtC13SiriInference20BiomeSiriUIProcessor_siriUIEvent];
  v3 = OUTLINED_FUNCTION_5_103(a1, sel_eventBody);
  if (!v3)
  {
    if (qword_1ED728298 != -1)
      swift_once();
    v14 = sub_1C0303B98();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED729610);
    v15 = v1;
    v16 = sub_1C0303B80();
    v17 = sub_1C03042F4();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      v31 = OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v18 = 136315138;
      v19 = v2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727938);
      v20 = sub_1C0303F1C();
      sub_1C003E6D8(v20, v21, &v31);
      OUTLINED_FUNCTION_4_118();
      sub_1C03044B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0039000, v16, v17, "biome siriUI event lacks eventBody: %s", v18, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }
    goto LABEL_17;
  }
  v4 = v3;
  if (qword_1ED728298 != -1)
    swift_once();
  v5 = sub_1C0303B98();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED729610);
  v6 = v4;
  v7 = sub_1C0303B80();
  v8 = sub_1C03042DC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)OUTLINED_FUNCTION_4_0();
    v30 = OUTLINED_FUNCTION_4_0();
    v31 = v30;
    *(_DWORD *)v9 = 136315138;
    v10 = OUTLINED_FUNCTION_5_103(v30, sel_dismissalReason);
    v11 = sub_1C0303EB0();
    v13 = v12;

    sub_1C003E6D8(v11, v13, &v31);
    OUTLINED_FUNCTION_4_118();
    sub_1C03044B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, v7, v8, "biome siriUI event has dismissalReason: %s", v9, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }

  v22 = (uint64_t)objc_msgSend(v6, sel_isStarting);
  if ((v22 & 1) != 0)
    goto LABEL_15;
  v23 = OUTLINED_FUNCTION_5_103(v22, sel_dismissalReason);
  v24 = sub_1C0303EB0();
  v26 = v25;

  if (v24 == 0xD000000000000011 && v26 == 0x80000001C0336DF0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v27 = sub_1C0304A08();
  swift_bridgeObjectRelease();
  if ((v27 & 1) != 0)
  {
LABEL_15:
    v15 = (char *)v6;
    v16 = sub_1C0303B80();
    v28 = sub_1C03042DC();
    if (os_log_type_enabled(v16, v28))
    {
      v29 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      *(_DWORD *)v29 = 67109120;
      LODWORD(v31) = objc_msgSend(v15, sel_isStarting);
      sub_1C03044B0();

      _os_log_impl(&dword_1C0039000, v16, v28, "Skip the siriTasksEvaluation with isStarting: %{BOOL}d", v29, 8u);
      OUTLINED_FUNCTION_5();
    }
LABEL_17:

    return;
  }
  if ((sub_1C02DF144() & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1(&v1[OBJC_IVAR____TtC13SiriInference20BiomeSiriUIProcessor_siriTasksEvaluator], *(_QWORD *)&v1[OBJC_IVAR____TtC13SiriInference20BiomeSiriUIProcessor_siriTasksEvaluator + 24]);
    sub_1C01C00B8();
  }

}

uint64_t sub_1C02DF144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  void (*v47)(_BYTE *, uint64_t);
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  NSObject *v53;
  os_log_type_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  _BYTE *v59;
  void (*v60)(_BYTE *, uint64_t);
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  void (*v64)(_BYTE *, uint64_t);
  _BYTE v66[4];
  int v67;
  uint64_t v68;
  _BYTE *v69;
  _BYTE *v70;
  _BYTE *v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728360);
  v1 = MEMORY[0x1E0C80A78](v0);
  v3 = &v66[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v1);
  v5 = &v66[-v4];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7271D8);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v66[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1C0301CFC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v71 = &v66[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x1E0C80A78](v11);
  v70 = &v66[-v14];
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = &v66[-v16];
  MEMORY[0x1E0C80A78](v15);
  v19 = &v66[-v18];
  sub_1C0301C90();
  sub_1C0301CF0();
  v20 = *MEMORY[0x1E0D9A7F8];
  v21 = sub_1C0303814();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v8, v20, v21);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v21);
  v72 = v10;
  v73 = v19;
  v22 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16);
  v23 = v9;
  v24 = v19;
  v25 = v17;
  v22(v5, v24, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v9);
  v22(v3, v17, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v9);
  v26 = sub_1C0303760();
  sub_1C003E978((uint64_t)v3, &qword_1ED728360);
  sub_1C003E978((uint64_t)v5, &qword_1ED728360);
  sub_1C003E978((uint64_t)v8, &qword_1ED7271D8);
  if (v26 < 0 || (v26 & 0x4000000000000000) != 0)
  {
    v48 = swift_bridgeObjectRetain();
    sub_1C00B13D4(v48);
    v27 = v49;
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = v26 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v75 = v27;
  sub_1C02DE9FC(&v75);
  v29 = v70;
  v28 = v71;
  swift_bridgeObjectRelease();
  v30 = v75;
  if (v75 < 0 || (v75 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v50 = sub_1C03047F8();
    swift_release();
    if (v50)
      goto LABEL_7;
  }
  else if (*(_QWORD *)(v75 + 16))
  {
LABEL_7:
    sub_1C02CFE78(0, (v30 & 0xC000000000000001) == 0, v30);
    v69 = v25;
    if ((v30 & 0xC000000000000001) != 0)
      MEMORY[0x1C3B975EC](0, v30);
    else
      swift_retain();
    swift_release();
    sub_1C030163C();
    swift_allocObject();
    sub_1C0301630();
    sub_1C03037D8();
    v31 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D9A7B8];
    v32 = sub_1C03037B4();
    v34 = v33;
    sub_1C006831C(&qword_1EF5C4140, v31, MEMORY[0x1E0D9A7C0]);
    sub_1C0301624();
    sub_1C0040600(v32, v34);
    swift_release();
    if (qword_1ED728298 != -1)
      swift_once();
    v35 = sub_1C0303B98();
    __swift_project_value_buffer(v35, (uint64_t)qword_1ED729610);
    swift_retain_n();
    v36 = sub_1C0303B80();
    v37 = sub_1C03042DC();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      v75 = v39;
      *(_DWORD *)v38 = 136315138;
      v40 = sub_1C03037CC();
      v74 = sub_1C003E6D8(v40, v41, &v75);
      sub_1C03044B0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0039000, v36, v37, "The intentEvent Type is: %s", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v39, -1, -1);
      MEMORY[0x1C3B98378](v38, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v42 = v69;
    v43 = v23;
    if (sub_1C03037CC() == 0xD000000000000011 && v44 == 0x80000001C0330740)
    {
      swift_release();
      swift_bridgeObjectRelease();
      v45 = 1;
    }
    else
    {
      v45 = sub_1C0304A08();
      swift_release();
      swift_bridgeObjectRelease();
    }
    v46 = v72;
    swift_release();
    v47 = *(void (**)(_BYTE *, uint64_t))(v46 + 8);
    v47(v42, v43);
    v47(v73, v43);
    return v45 & 1;
  }
  swift_release();
  if (qword_1ED728298 != -1)
    swift_once();
  v51 = sub_1C0303B98();
  __swift_project_value_buffer(v51, (uint64_t)qword_1ED729610);
  v52 = v73;
  v22(v29, v73, v23);
  v22(v28, v25, v23);
  v53 = sub_1C0303B80();
  v54 = sub_1C03042DC();
  v55 = v54;
  if (os_log_type_enabled(v53, v54))
  {
    v56 = swift_slowAlloc();
    v68 = swift_slowAlloc();
    v75 = v68;
    *(_DWORD *)v56 = 136315394;
    sub_1C006831C((unint64_t *)&qword_1ED728060, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v67 = v55;
    v57 = sub_1C03049E4();
    v74 = sub_1C003E6D8(v57, v58, &v75);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    v59 = v29;
    v60 = *(void (**)(_BYTE *, uint64_t))(v72 + 8);
    v60(v59, v23);
    *(_WORD *)(v56 + 12) = 2080;
    v61 = sub_1C03049E4();
    v74 = sub_1C003E6D8(v61, v62, &v75);
    sub_1C03044B0();
    swift_bridgeObjectRelease();
    v60(v28, v23);
    _os_log_impl(&dword_1C0039000, v53, (os_log_type_t)v67, "Fail to fetch intentStart event between %s and %s", (uint8_t *)v56, 0x16u);
    v63 = v68;
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v63, -1, -1);
    MEMORY[0x1C3B98378](v56, -1, -1);

    v60(v25, v23);
    v60(v73, v23);
  }
  else
  {

    v64 = *(void (**)(_BYTE *, uint64_t))(v72 + 8);
    v64(v28, v23);
    v64(v29, v23);
    v64(v25, v23);
    v64(v52, v23);
  }
  v45 = 0;
  return v45 & 1;
}

id BiomeSiriUIProcessor.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BiomeSiriUIProcessor.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BiomeSiriUIProcessor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_7_9();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C02DFC40()
{
  OUTLINED_FUNCTION_6_108();
}

uint64_t sub_1C02DFC4C()
{
  return type metadata accessor for BiomeSiriUIProcessor();
}

uint64_t type metadata accessor for BiomeSiriUIProcessor()
{
  uint64_t result;

  result = qword_1ED727358;
  if (!qword_1ED727358)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C02DFC8C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C0303778();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for BiomeSiriUIProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BiomeSiriUIProcessor.__allocating_init(siriUIEvent:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_1C02DFD24(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;

  v120 = sub_1C0301CFC();
  v118 = *(_QWORD *)(v120 - 8);
  v2 = MEMORY[0x1E0C80A78](v120);
  v119 = (char *)&v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v108 - v4;
  v6 = a1[1];
  v7 = sub_1C03049CC();
  if (v7 >= v6)
  {
    if (v6 < 0)
      goto LABEL_134;
    if (v6)
      sub_1C02E051C(0, v6, 1, a1);
    return;
  }
  v110 = v7;
  sub_1C027E1C4(v6 / 2);
  v116 = v8;
  v122 = v9;
  v114 = v6;
  v109 = a1;
  if (v6 <= 0)
    goto LABEL_96;
  v10 = 0;
  v11 = *a1;
  v108 = *a1 - 8;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v121 = v11;
  while (1)
  {
    v13 = (uint64_t)v10;
    v14 = (uint64_t)v10 + 1;
    if ((uint64_t)v10 + 1 < v6)
    {
      v111 = v12;
      swift_retain();
      swift_retain();
      sub_1C03037A8();
      v15 = v119;
      sub_1C03037A8();
      v16 = sub_1C0301C6C();
      v17 = v6;
      v18 = *(void (**)(char *, uint64_t))(v118 + 8);
      v19 = v15;
      v20 = v120;
      v18(v19, v120);
      v18(v5, v20);
      swift_release();
      swift_release();
      if (v13 + 2 >= v17)
      {
        v14 = v13 + 2;
      }
      else
      {
        v21 = v13;
        while (1)
        {
          swift_retain();
          swift_retain();
          sub_1C03037A8();
          v22 = v119;
          sub_1C03037A8();
          v23 = sub_1C0301C6C();
          v24 = v22;
          v25 = v120;
          v18(v24, v120);
          v18(v5, v25);
          swift_release();
          swift_release();
          if (((v16 ^ v23) & 1) != 0)
            break;
          v26 = v21 + 3;
          ++v21;
          if (v26 >= v114)
          {
            v6 = v114;
            v14 = v114;
            goto LABEL_13;
          }
        }
        v14 = v21 + 2;
      }
      v6 = v114;
LABEL_13:
      v12 = v111;
      if ((v16 & 1) != 0)
      {
        v27 = v121;
        if (v14 < v13)
          goto LABEL_135;
        if (v13 < v14)
        {
          v28 = (uint64_t *)(v108 + 8 * v14);
          v29 = v14;
          v30 = v13;
          v31 = (uint64_t *)(v121 + 8 * v13);
          do
          {
            if (v30 != --v29)
            {
              if (!v27)
                goto LABEL_141;
              v32 = *v31;
              *v31 = *v28;
              *v28 = v32;
            }
            ++v30;
            --v28;
            ++v31;
          }
          while (v30 < v29);
        }
      }
    }
    if (v14 < v6)
    {
      if (__OFSUB__(v14, v13))
        goto LABEL_133;
      if (v14 - v13 < v110)
      {
        if (__OFADD__(v13, v110))
          goto LABEL_136;
        if (v13 + v110 >= v6)
          v33 = v6;
        else
          v33 = v13 + v110;
        if (v33 < v13)
        {
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }
        if (v14 != v33)
        {
          v111 = v12;
          v112 = v33;
          v34 = (_QWORD *)(v108 + 8 * v14);
          v113 = v13;
          do
          {
            v35 = v13;
            v115 = v34;
            while (1)
            {
              v36 = v14;
              swift_retain();
              swift_retain();
              sub_1C03037A8();
              v37 = v119;
              sub_1C03037A8();
              v38 = sub_1C0301C6C();
              v39 = *(void (**)(char *, uint64_t))(v118 + 8);
              v40 = v37;
              v41 = v120;
              v39(v40, v120);
              v39(v5, v41);
              swift_release();
              swift_release();
              if ((v38 & 1) == 0)
                break;
              if (!v121)
                goto LABEL_139;
              v42 = *v34;
              *v34 = v34[1];
              v34[1] = v42;
              --v34;
              ++v35;
              v14 = v36;
              if (v36 == v35)
                goto LABEL_37;
            }
            v14 = v36;
LABEL_37:
            ++v14;
            v34 = v115 + 1;
            v13 = v113;
          }
          while (v14 != v112);
          v14 = v112;
          v12 = v111;
        }
      }
    }
    if (v14 < v13)
      goto LABEL_132;
    v43 = v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v115 = (_QWORD *)v14;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      v12 = v43;
    else
      v12 = sub_1C00500C8(0, *((_QWORD *)v43 + 2) + 1, 1, v43);
    v46 = *((_QWORD *)v12 + 2);
    v45 = *((_QWORD *)v12 + 3);
    v47 = v46 + 1;
    v48 = v121;
    if (v46 >= v45 >> 1)
    {
      v99 = sub_1C00500C8((char *)(v45 > 1), v46 + 1, 1, v12);
      v48 = v121;
      v12 = v99;
    }
    *((_QWORD *)v12 + 2) = v47;
    v49 = &v12[16 * v46 + 32];
    v50 = v115;
    *(_QWORD *)v49 = v13;
    *((_QWORD *)v49 + 1) = v50;
    if (v46)
      break;
    v47 = 1;
LABEL_88:
    v6 = v114;
    v10 = v115;
    if ((uint64_t)v115 >= v114)
      goto LABEL_97;
  }
  v51 = v12 + 32;
  while (1)
  {
    v52 = v47 - 1;
    if (v47 >= 4)
    {
      v57 = &v51[16 * v47];
      v58 = *((_QWORD *)v57 - 8);
      v59 = *((_QWORD *)v57 - 7);
      v63 = __OFSUB__(v59, v58);
      v60 = v59 - v58;
      if (v63)
        goto LABEL_117;
      v62 = *((_QWORD *)v57 - 6);
      v61 = *((_QWORD *)v57 - 5);
      v63 = __OFSUB__(v61, v62);
      v55 = v61 - v62;
      v56 = v63;
      if (v63)
        goto LABEL_118;
      v64 = v47 - 2;
      v65 = &v51[16 * v47 - 32];
      v67 = *(_QWORD *)v65;
      v66 = *((_QWORD *)v65 + 1);
      v63 = __OFSUB__(v66, v67);
      v68 = v66 - v67;
      if (v63)
        goto LABEL_119;
      v63 = __OFADD__(v55, v68);
      v69 = v55 + v68;
      if (v63)
        goto LABEL_121;
      if (v69 >= v60)
      {
        v87 = &v51[16 * v52];
        v89 = *(_QWORD *)v87;
        v88 = *((_QWORD *)v87 + 1);
        v63 = __OFSUB__(v88, v89);
        v90 = v88 - v89;
        if (v63)
          goto LABEL_127;
        v80 = v55 < v90;
        goto LABEL_77;
      }
    }
    else
    {
      if (v47 != 3)
      {
        v81 = *((_QWORD *)v12 + 4);
        v82 = *((_QWORD *)v12 + 5);
        v63 = __OFSUB__(v82, v81);
        v74 = v82 - v81;
        v75 = v63;
        goto LABEL_71;
      }
      v54 = *((_QWORD *)v12 + 4);
      v53 = *((_QWORD *)v12 + 5);
      v63 = __OFSUB__(v53, v54);
      v55 = v53 - v54;
      v56 = v63;
    }
    if ((v56 & 1) != 0)
      goto LABEL_120;
    v64 = v47 - 2;
    v70 = &v51[16 * v47 - 32];
    v72 = *(_QWORD *)v70;
    v71 = *((_QWORD *)v70 + 1);
    v73 = __OFSUB__(v71, v72);
    v74 = v71 - v72;
    v75 = v73;
    if (v73)
      goto LABEL_122;
    v76 = &v51[16 * v52];
    v78 = *(_QWORD *)v76;
    v77 = *((_QWORD *)v76 + 1);
    v63 = __OFSUB__(v77, v78);
    v79 = v77 - v78;
    if (v63)
      goto LABEL_124;
    if (__OFADD__(v74, v79))
      goto LABEL_126;
    if (v74 + v79 >= v55)
    {
      v80 = v55 < v79;
LABEL_77:
      if (v80)
        v52 = v64;
      goto LABEL_79;
    }
LABEL_71:
    if ((v75 & 1) != 0)
      goto LABEL_123;
    v83 = &v51[16 * v52];
    v85 = *(_QWORD *)v83;
    v84 = *((_QWORD *)v83 + 1);
    v63 = __OFSUB__(v84, v85);
    v86 = v84 - v85;
    if (v63)
      goto LABEL_125;
    if (v86 < v74)
      goto LABEL_88;
LABEL_79:
    v91 = v52 - 1;
    if (v52 - 1 >= v47)
    {
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
      goto LABEL_128;
    }
    if (!v48)
      goto LABEL_140;
    v92 = v12;
    v93 = &v51[16 * v91];
    v94 = *(_QWORD *)v93;
    v95 = &v51[16 * v52];
    v96 = *((_QWORD *)v95 + 1);
    v97 = v117;
    sub_1C02E06A8((char *)(v48 + 8 * *(_QWORD *)v93), (char *)(v48 + 8 * *(_QWORD *)v95), (char *)(v48 + 8 * v96), v116);
    v117 = v97;
    if (v97)
      break;
    if (v96 < v94)
      goto LABEL_114;
    if (v52 > *((_QWORD *)v92 + 2))
      goto LABEL_115;
    *(_QWORD *)v93 = v94;
    *(_QWORD *)&v51[16 * v91 + 8] = v96;
    v98 = *((_QWORD *)v92 + 2);
    if (v52 >= v98)
      goto LABEL_116;
    v47 = v98 - 1;
    memmove(&v51[16 * v52], v95 + 16, 16 * (v98 - 1 - v52));
    v12 = v92;
    *((_QWORD *)v92 + 2) = v98 - 1;
    v48 = v121;
    if (v98 <= 2)
      goto LABEL_88;
  }
LABEL_94:
  swift_bridgeObjectRelease();
  if (v114 >= -1)
    goto LABEL_111;
  __break(1u);
LABEL_96:
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v47 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_97:
  if (v47 >= 2)
  {
    v100 = *v109;
    v101 = v117;
    while (1)
    {
      v102 = v47 - 2;
      if (v47 < 2)
        break;
      if (!v100)
        goto LABEL_142;
      v103 = v12;
      v104 = *(_QWORD *)&v12[16 * v102 + 32];
      v105 = *(_QWORD *)&v12[16 * v47 + 24];
      sub_1C02E06A8((char *)(v100 + 8 * v104), (char *)(v100 + 8 * *(_QWORD *)&v12[16 * v47 + 16]), (char *)(v100 + 8 * v105), v116);
      if (v101)
        goto LABEL_94;
      if (v105 < v104)
        goto LABEL_129;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v103 = sub_1C020FAB8();
      if (v102 >= *((_QWORD *)v103 + 2))
        goto LABEL_130;
      v106 = &v103[16 * v102 + 32];
      *(_QWORD *)v106 = v104;
      *((_QWORD *)v106 + 1) = v105;
      v107 = *((_QWORD *)v103 + 2);
      if (v47 > v107)
        goto LABEL_131;
      memmove(&v103[16 * v47 + 16], &v103[16 * v47 + 32], 16 * (v107 - v47));
      v12 = v103;
      *((_QWORD *)v103 + 2) = v107 - 1;
      v47 = v107 - 1;
      if (v107 <= 2)
        goto LABEL_110;
    }
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
    goto LABEL_137;
  }
LABEL_110:
  swift_bridgeObjectRelease();
  if (v114 >= -1)
  {
LABEL_111:
    *(_QWORD *)((v122 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_1C0304150();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
}

uint64_t sub_1C02E051C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  char v16;
  void (*v17)(char *, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v23 = a1;
  v7 = sub_1C0301CFC();
  v26 = *(_QWORD *)(v7 - 8);
  v27 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v25 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v21 - v11;
  v22 = a2;
  if (a3 != a2)
  {
    v28 = *a4;
    v13 = (_QWORD *)(v28 + 8 * a3 - 8);
    while (2)
    {
      v14 = v23;
      v24 = v13;
      do
      {
        swift_retain();
        swift_retain();
        sub_1C03037A8();
        v15 = v25;
        sub_1C03037A8();
        v16 = sub_1C0301C6C();
        v17 = *(void (**)(char *, uint64_t))(v26 + 8);
        v18 = v15;
        v19 = v27;
        v17(v18, v27);
        v17(v12, v19);
        swift_release();
        result = swift_release();
        if ((v16 & 1) == 0)
          break;
        if (!v28)
        {
          __break(1u);
          return result;
        }
        v20 = *v13;
        *v13 = v13[1];
        v13[1] = v20;
        --v13;
        ++v14;
      }
      while (a3 != v14);
      ++a3;
      v13 = v24 + 1;
      if (a3 != v22)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1C02E06A8(char *a1, char *a2, char *a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v16;
  char *v17;
  char v18;
  void (*v19)(char *, uint64_t);
  char *v20;
  uint64_t v21;
  char *v22;
  BOOL v23;
  char *v24;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  unint64_t v34;
  uint64_t v35;
  BOOL v36;
  char *v37;
  char *v38;
  BOOL v39;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;

  v8 = sub_1C0301CFC();
  v49 = *(_QWORD *)(v8 - 8);
  v50 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v48 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v47 = (char *)&v42 - v11;
  v12 = (a2 - a1) / 8;
  v13 = (a3 - a2) / 8;
  if (v12 >= v13)
  {
    sub_1C00ADA28(a2, (a3 - a2) / 8, a4);
    v14 = &a4[8 * v13];
    if (a3 - a2 < 8 || a1 >= a2)
      goto LABEL_39;
    v27 = a3 - 8;
    v43 = a1;
    v44 = a4;
    v28 = v47;
    while (1)
    {
      v51 = (unint64_t)v14;
      v29 = v14 - 8;
      v45 = a2 - 8;
      v46 = v27 + 8;
      swift_retain();
      swift_retain();
      sub_1C03037A8();
      v30 = v48;
      sub_1C03037A8();
      v31 = sub_1C0301C6C();
      v32 = *(void (**)(char *, uint64_t))(v49 + 8);
      v33 = v30;
      v34 = (unint64_t)a2;
      v35 = v50;
      v32(v33, v50);
      v32(v28, v35);
      swift_release();
      swift_release();
      if ((v31 & 1) != 0)
      {
        v36 = v46 != (char *)v34 || (unint64_t)v27 >= v34;
        a4 = v44;
        v37 = v45;
        a2 = v45;
        v38 = v43;
        v14 = (char *)v51;
        if (!v36)
          goto LABEL_35;
      }
      else
      {
        v39 = v46 != (char *)v51 || (unint64_t)v27 >= v51;
        v37 = v29;
        v14 = v29;
        a2 = (char *)v34;
        v38 = v43;
        a4 = v44;
        if (!v39)
          goto LABEL_35;
      }
      *(_QWORD *)v27 = *(_QWORD *)v37;
LABEL_35:
      v27 -= 8;
      if (v14 <= a4 || a2 <= v38)
        goto LABEL_39;
    }
  }
  sub_1C00ADA28(a1, (a2 - a1) / 8, a4);
  v14 = &a4[8 * v12];
  if (a2 - a1 >= 8 && a2 < a3)
  {
    v51 = (unint64_t)&a4[8 * v12];
    v46 = a3;
    do
    {
      swift_retain();
      swift_retain();
      v16 = v47;
      sub_1C03037A8();
      v17 = v48;
      sub_1C03037A8();
      v18 = sub_1C0301C6C();
      v19 = *(void (**)(char *, uint64_t))(v49 + 8);
      v20 = v17;
      v21 = v50;
      v19(v20, v50);
      v19(v16, v21);
      swift_release();
      swift_release();
      if ((v18 & 1) != 0)
      {
        v22 = a2;
        v23 = a1 == a2;
        a2 += 8;
      }
      else
      {
        v22 = a4;
        v23 = a1 == a4;
        a4 += 8;
      }
      v14 = (char *)v51;
      v24 = v46;
      if (!v23)
        *(_QWORD *)a1 = *(_QWORD *)v22;
      a1 += 8;
    }
    while (a4 < v14 && a2 < v24);
  }
  a2 = a1;
LABEL_39:
  sub_1C00ADA28(a4, (v14 - a4) / 8, a2);
  return 1;
}

id OUTLINED_FUNCTION_5_103(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

void __swiftcall SportsPersonalizationEntity.init(sportsItem:personalizationLevel:)(SiriInference::SportsPersonalizationEntity *__return_ptr retstr, SiriInference::SportsItem_optional *sportsItem, SiriInference::PersonalizationLevel_optional personalizationLevel)
{
  _BYTE *v3;
  _BYTE v5[128];
  _BYTE __src[136];

  v3 = *(_BYTE **)&personalizationLevel;
  sub_1C02E0A34((uint64_t)sportsItem, (uint64_t)v5);
  LOBYTE(v3) = *v3;
  sub_1C02E0A34((uint64_t)v5, (uint64_t)__src);
  __src[128] = (_BYTE)v3;
  memcpy(retstr, __src, sizeof(SiriInference::SportsPersonalizationEntity));
}

uint64_t sub_1C02E0A34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

SiriInference::SportsRecommendationQuery __swiftcall SportsRecommendationQuery.init(sportsPersonalizationEntities:)(SiriInference::SportsRecommendationQuery sportsPersonalizationEntities)
{
  SiriInference::SportsRecommendationQuery *v1;

  v1->sportsPersonalizationEntities._rawValue = sportsPersonalizationEntities.sportsPersonalizationEntities._rawValue;
  return sportsPersonalizationEntities;
}

uint64_t SportsRecommendationQuery.sportsPersonalizationEntities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsRecommendationQuery.sportsPersonalizationEntities.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*SportsRecommendationQuery.sportsPersonalizationEntities.modify())(_QWORD)
{
  return nullsub_1;
}

void static SportsRecommendationQuery.== infix(_:_:)()
{
  sub_1C00F0940();
}

uint64_t sub_1C02E0AD0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD00000000000001DLL && a2 == 0x80000001C0336E10)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1C02E0B54()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1C02E0B74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C02E0AD0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C02E0B9C()
{
  sub_1C02E0CE0();
  return sub_1C0304BAC();
}

uint64_t sub_1C02E0BC4()
{
  sub_1C02E0CE0();
  return sub_1C0304BB8();
}

void SportsRecommendationQuery.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_40_0();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C4148);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_39_2();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C02E0CE0();
  sub_1C0304BA0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C4158);
  sub_1C02E0E6C(&qword_1EF5C4160, (uint64_t (*)(void))sub_1C02E0D1C, MEMORY[0x1E0DEAF10]);
  sub_1C030499C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v3);
  OUTLINED_FUNCTION_28_0();
}

unint64_t sub_1C02E0CE0()
{
  unint64_t result;

  result = qword_1EF5C4150;
  if (!qword_1EF5C4150)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0326758, &type metadata for SportsRecommendationQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C4150);
  }
  return result;
}

unint64_t sub_1C02E0D1C()
{
  unint64_t result;

  result = qword_1EF5C4168;
  if (!qword_1EF5C4168)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for SportsPersonalizationEntity, &type metadata for SportsPersonalizationEntity);
    atomic_store(result, (unint64_t *)&qword_1EF5C4168);
  }
  return result;
}

void SportsRecommendationQuery.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_40_0();
  v13 = v12;
  v15 = v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C4170);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_39_2();
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  sub_1C02E0CE0();
  sub_1C0304B88();
  if (!v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C4158);
    sub_1C02E0E6C(&qword_1EF5C4178, (uint64_t (*)(void))sub_1C02E0ED4, MEMORY[0x1E0DEAF40]);
    sub_1C03048E8();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v11, v16);
    *v15 = a10;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
  OUTLINED_FUNCTION_28_0();
}

uint64_t sub_1C02E0E6C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF5C4158);
    v8 = a2();
    result = MEMORY[0x1C3B9827C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C02E0ED4()
{
  unint64_t result;

  result = qword_1EF5C4180;
  if (!qword_1EF5C4180)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for SportsPersonalizationEntity, &type metadata for SportsPersonalizationEntity);
    atomic_store(result, (unint64_t *)&qword_1EF5C4180);
  }
  return result;
}

void sub_1C02E0F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  SportsRecommendationQuery.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1C02E0F24()
{
  SportsRecommendationQuery.encode(to:)();
}

_QWORD *SportsPersonalizationEntity.sportsItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[16];

  sub_1C02E0A34(v1, (uint64_t)v4);
  sub_1C02E0A34((uint64_t)v4, a1);
  return sub_1C00F47DC(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C00F45D4);
}

uint64_t SportsPersonalizationEntity.sportsItem.setter(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[128];
  _QWORD v4[16];

  sub_1C02E0A34(a1, (uint64_t)v3);
  sub_1C02E0A34(v1, (uint64_t)v4);
  sub_1C00F47DC(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C00F4748);
  return sub_1C02E0A34((uint64_t)v3, v1);
}

uint64_t (*SportsPersonalizationEntity.sportsItem.modify())(_QWORD)
{
  return nullsub_1;
}

void SportsPersonalizationEntity.personalizationLevel.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 128);
}

_BYTE *SportsPersonalizationEntity.personalizationLevel.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 128) = *result;
  return result;
}

uint64_t (*SportsPersonalizationEntity.personalizationLevel.modify())(_QWORD)
{
  return nullsub_1;
}

BOOL static SportsPersonalizationEntity.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73[128];
  _BYTE v74[128];
  uint64_t v75[16];
  uint64_t v76[16];
  uint64_t v77;
  _QWORD v78[16];
  _QWORD v79[16];
  _BYTE v80[128];

  sub_1C02E0A34(a1, (uint64_t)v78);
  v4 = *(unsigned __int8 *)(a1 + 128);
  sub_1C02E0A34(a2, (uint64_t)v79);
  v5 = *(unsigned __int8 *)(a2 + 128);
  sub_1C02E0A34((uint64_t)v78, (uint64_t)v80);
  if (sub_1C00B8890((uint64_t)v80) == 1)
  {
    OUTLINED_FUNCTION_9_96((uint64_t)v79);
    if (sub_1C00B8890((uint64_t)v76) == 1)
      goto LABEL_9;
LABEL_6:
    OUTLINED_FUNCTION_9_96((uint64_t)v78);
    sub_1C02E0A34((uint64_t)v79, (uint64_t)&v77);
    sub_1C00F47DC(v79, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C00F45D4);
    sub_1C00F4668(v76);
    return 0;
  }
  sub_1C02E0A34((uint64_t)v78, (uint64_t)v75);
  OUTLINED_FUNCTION_9_96((uint64_t)v79);
  if (sub_1C00B8890((uint64_t)v76) == 1)
  {
    v6 = OUTLINED_FUNCTION_8_82(&v57, v75);
    OUTLINED_FUNCTION_6_109((uint64_t)v6, v7, v8, v9, v10, v11, v12, v13, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,
      v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63,
      v64,
      v65,
      v66,
      v67,
      v68,
      v69,
      v70,
      v71,
      v72,
      v73[0]);
    sub_1C02E0A34((uint64_t)v78, (uint64_t)v74);
    sub_1C00C7588((uint64_t)v74);
    sub_1C00C7588((uint64_t)v73);
    sub_1C00F4838((uint64_t)&v57);
    goto LABEL_6;
  }
  sub_1C02E0A34((uint64_t)v79, (uint64_t)&v41);
  OUTLINED_FUNCTION_8_82(&v25, &v41);
  v15 = sub_1C02E0A34((uint64_t)v78, (uint64_t)&v57);
  OUTLINED_FUNCTION_6_109(v15, v16, v17, v18, v19, v20, v21, v22, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    v73[0]);
  sub_1C00C7588((uint64_t)v73);
  sub_1C00C7588((uint64_t)&v57);
  v23 = static SportsItem.== infix(_:_:)(v75, &v25);
  OUTLINED_FUNCTION_8_82(v74, v75);
  sub_1C00F4838((uint64_t)v74);
  sub_1C00F47DC(v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C00F4748);
  if ((v23 & 1) == 0)
    return 0;
LABEL_9:
  if (v4 != 5)
  {
    if (v5 != 5)
    {
      sub_1C025D28C(v4);
      if ((v24 & 1) != 0)
        return 1;
    }
    return 0;
  }
  return v5 == 5;
}

uint64_t sub_1C02E11C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74497374726F7073 && a2 == 0xEA00000000006D65;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C0336E30)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C02E12BC(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000014;
  else
    return 0x74497374726F7073;
}

uint64_t sub_1C02E12FC()
{
  char *v0;

  return sub_1C02E12BC(*v0);
}

uint64_t sub_1C02E1304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C02E11C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C02E1328()
{
  sub_1C02E1768();
  return sub_1C0304BAC();
}

uint64_t sub_1C02E1350()
{
  sub_1C02E1768();
  return sub_1C0304BB8();
}

void SportsPersonalizationEntity.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  _BYTE v10[136];
  char v11;

  OUTLINED_FUNCTION_40_0();
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C4188);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C02E0A34(v0, (uint64_t)v10);
  v11 = *(_BYTE *)(v0 + 128);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C02E1768();
  sub_1C0304BA0();
  sub_1C02E0A34((uint64_t)v10, (uint64_t)&v9);
  sub_1C02E17A4();
  OUTLINED_FUNCTION_2_138();
  if (!v1)
  {
    v9 = v11;
    sub_1C02E17E0();
    OUTLINED_FUNCTION_2_138();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  OUTLINED_FUNCTION_28_0();
}

void SportsPersonalizationEntity.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  _BYTE v18[136];
  _QWORD v19[16];
  uint64_t v20;
  _QWORD v21[17];
  _BYTE v22[136];
  _OWORD v23[8];

  OUTLINED_FUNCTION_40_0();
  v14 = v13;
  v17 = v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C41A8);
  MEMORY[0x1E0C80A78](v16);
  sub_1C02BE548(v23);
  sub_1C02E0A34((uint64_t)v23, (uint64_t)v22);
  v22[128] = 5;
  __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  sub_1C02E1768();
  sub_1C0304B88();
  if (!v12)
  {
    sub_1C02E181C();
    OUTLINED_FUNCTION_3_144();
    sub_1C02E0A34((uint64_t)&v20, (uint64_t)v19);
    sub_1C02E0A34((uint64_t)v19, (uint64_t)v22);
    sub_1C00F47DC(v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C00F45D4);
    sub_1C02E1858();
    OUTLINED_FUNCTION_3_144();
    OUTLINED_FUNCTION_1_142();
    v22[128] = a12;
    sub_1C02E0A34((uint64_t)v19, (uint64_t)v18);
    v18[128] = a12;
    memcpy(v17, v18, 0x81uLL);
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  memcpy(v21, v22, 0x81uLL);
  sub_1C00F47DC(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C00F4748);
  OUTLINED_FUNCTION_28_0();
}

void sub_1C02E1660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[7];

  SportsPersonalizationEntity.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_1C02E1674()
{
  SportsPersonalizationEntity.encode(to:)();
}

SiriInference::PersonalizationLevel_optional __swiftcall PersonalizationLevel.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SiriInference::PersonalizationLevel_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1C030484C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PersonalizationLevel.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C02E1710 + 4 * byte_1C0326300[*v0]))(0x74726F7073, 0xE500000000000000);
}

uint64_t sub_1C02E1710()
{
  return 0x65756761656CLL;
}

uint64_t sub_1C02E1724()
{
  return 1835099508;
}

uint64_t sub_1C02E1734()
{
  return 0x6574656C687461;
}

uint64_t sub_1C02E174C()
{
  return 7105633;
}

void sub_1C02E175C(char *a1)
{
  sub_1C025D28C(*a1);
}

unint64_t sub_1C02E1768()
{
  unint64_t result;

  result = qword_1EF5C4190;
  if (!qword_1EF5C4190)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0326708, &type metadata for SportsPersonalizationEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C4190);
  }
  return result;
}

unint64_t sub_1C02E17A4()
{
  unint64_t result;

  result = qword_1EF5C4198;
  if (!qword_1EF5C4198)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for SportsItem, &type metadata for SportsItem);
    atomic_store(result, (unint64_t *)&qword_1EF5C4198);
  }
  return result;
}

unint64_t sub_1C02E17E0()
{
  unint64_t result;

  result = qword_1EF5C41A0;
  if (!qword_1EF5C41A0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for PersonalizationLevel, &type metadata for PersonalizationLevel);
    atomic_store(result, (unint64_t *)&qword_1EF5C41A0);
  }
  return result;
}

unint64_t sub_1C02E181C()
{
  unint64_t result;

  result = qword_1EF5C41B0;
  if (!qword_1EF5C41B0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for SportsItem, &type metadata for SportsItem);
    atomic_store(result, (unint64_t *)&qword_1EF5C41B0);
  }
  return result;
}

unint64_t sub_1C02E1858()
{
  unint64_t result;

  result = qword_1EF5C41B8;
  if (!qword_1EF5C41B8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for PersonalizationLevel, &type metadata for PersonalizationLevel);
    atomic_store(result, (unint64_t *)&qword_1EF5C41B8);
  }
  return result;
}

void sub_1C02E1894()
{
  unsigned __int8 *v0;

  sub_1C00CED2C(*v0);
}

void sub_1C02E189C(uint64_t a1)
{
  char *v1;

  sub_1C00C1D98(a1, *v1);
}

void sub_1C02E18A4(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EB0BC(a1, *v1);
}

SiriInference::PersonalizationLevel_optional sub_1C02E18AC(Swift::String *a1)
{
  return PersonalizationLevel.init(rawValue:)(*a1);
}

uint64_t sub_1C02E18B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PersonalizationLevel.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C02E18DC()
{
  sub_1C02E230C();
  return sub_1C03040F0();
}

uint64_t sub_1C02E1938()
{
  sub_1C02E230C();
  return sub_1C03040CC();
}

unint64_t sub_1C02E1988()
{
  unint64_t result;

  result = qword_1EF5C41C0;
  if (!qword_1EF5C41C0)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for PersonalizationLevel, &type metadata for PersonalizationLevel);
    atomic_store(result, (unint64_t *)&qword_1EF5C41C0);
  }
  return result;
}

void type metadata accessor for SportsRecommendationQuery()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t destroy for SportsPersonalizationEntity(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for SportsPersonalizationEntity(_QWORD *__dst, _QWORD *__src)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = __src[1];
  if (v4 == 1)
  {
    memcpy(__dst, __src, 0x80uLL);
  }
  else
  {
    *__dst = *__src;
    __dst[1] = v4;
    v5 = __src[3];
    __dst[2] = __src[2];
    __dst[3] = v5;
    v6 = __src[5];
    __dst[4] = __src[4];
    __dst[5] = v6;
    v7 = __src[7];
    __dst[6] = __src[6];
    __dst[7] = v7;
    v8 = __src[9];
    __dst[8] = __src[8];
    __dst[9] = v8;
    v9 = __src[11];
    __dst[10] = __src[10];
    __dst[11] = v9;
    v10 = __src[13];
    __dst[12] = __src[12];
    __dst[13] = v10;
    v11 = __src[15];
    __dst[14] = __src[14];
    __dst[15] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *((_BYTE *)__dst + 128) = *((_BYTE *)__src + 128);
  return __dst;
}

_QWORD *assignWithCopy for SportsPersonalizationEntity(_QWORD *__dst, _QWORD *__src)
{
  uint64_t v4;

  v4 = __src[1];
  if (__dst[1] != 1)
  {
    if (v4 != 1)
    {
      *__dst = *__src;
      __dst[1] = __src[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      __dst[2] = __src[2];
      __dst[3] = __src[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      __dst[4] = __src[4];
      __dst[5] = __src[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      __dst[6] = __src[6];
      __dst[7] = __src[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      __dst[8] = __src[8];
      __dst[9] = __src[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      __dst[10] = __src[10];
      __dst[11] = __src[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      __dst[12] = __src[12];
      __dst[13] = __src[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      __dst[14] = __src[14];
      __dst[15] = __src[15];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1C02E1D68((uint64_t)__dst);
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    memcpy(__dst, __src, 0x80uLL);
    goto LABEL_8;
  }
  *__dst = *__src;
  __dst[1] = __src[1];
  __dst[2] = __src[2];
  __dst[3] = __src[3];
  __dst[4] = __src[4];
  __dst[5] = __src[5];
  __dst[6] = __src[6];
  __dst[7] = __src[7];
  __dst[8] = __src[8];
  __dst[9] = __src[9];
  __dst[10] = __src[10];
  __dst[11] = __src[11];
  __dst[12] = __src[12];
  __dst[13] = __src[13];
  __dst[14] = __src[14];
  __dst[15] = __src[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_8:
  *((_BYTE *)__dst + 128) = *((_BYTE *)__src + 128);
  return __dst;
}

uint64_t sub_1C02E1D68(uint64_t a1)
{
  destroy for SportsItem();
  return a1;
}

void *__swift_memcpy129_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x81uLL);
}

_QWORD *assignWithTake for SportsPersonalizationEntity(_QWORD *__dst, _QWORD *__src)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (__dst[1] != 1)
  {
    v4 = __src[1];
    if (v4 != 1)
    {
      *__dst = *__src;
      __dst[1] = v4;
      swift_bridgeObjectRelease();
      v5 = __src[3];
      __dst[2] = __src[2];
      __dst[3] = v5;
      swift_bridgeObjectRelease();
      v6 = __src[5];
      __dst[4] = __src[4];
      __dst[5] = v6;
      swift_bridgeObjectRelease();
      v7 = __src[7];
      __dst[6] = __src[6];
      __dst[7] = v7;
      swift_bridgeObjectRelease();
      v8 = __src[9];
      __dst[8] = __src[8];
      __dst[9] = v8;
      swift_bridgeObjectRelease();
      v9 = __src[11];
      __dst[10] = __src[10];
      __dst[11] = v9;
      swift_bridgeObjectRelease();
      v10 = __src[13];
      __dst[12] = __src[12];
      __dst[13] = v10;
      swift_bridgeObjectRelease();
      v11 = __src[15];
      __dst[14] = __src[14];
      __dst[15] = v11;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C02E1D68((uint64_t)__dst);
  }
  memcpy(__dst, __src, 0x80uLL);
LABEL_6:
  *((_BYTE *)__dst + 128) = *((_BYTE *)__src + 128);
  return __dst;
}

uint64_t getEnumTagSinglePayload for SportsPersonalizationEntity(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;
  int v4;
  BOOL v5;

  if (a2)
  {
    if (a2 > 0x7FFFFFFD && *(_BYTE *)(a1 + 129))
    {
      v2 = *(_DWORD *)a1 + 2147483645;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v4 = v3 - 1;
      if (v4 < 0)
        v4 = -1;
      v5 = __OFSUB__(v4, 1);
      v2 = v4 - 1;
      if (v2 < 0 != v5)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsPersonalizationEntity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 128) = 0;
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 129) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 129) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

void type metadata accessor for SportsPersonalizationEntity()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t storeEnumTagSinglePayload for PersonalizationLevel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C02E1FA8 + 4 * byte_1C032630A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C02E1FDC + 4 * byte_1C0326305[v4]))();
}

uint64_t sub_1C02E1FDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02E1FE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02E1FECLL);
  return result;
}

uint64_t sub_1C02E1FF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02E2000);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C02E2004(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02E200C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PersonalizationLevel()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t storeEnumTagSinglePayload for SportsPersonalizationEntity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C02E2070 + 4 * byte_1C0326314[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C02E20A4 + 4 * byte_1C032630F[v4]))();
}

uint64_t sub_1C02E20A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02E20AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02E20B4);
  return result;
}

uint64_t sub_1C02E20C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02E20C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C02E20CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02E20D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsPersonalizationEntity.CodingKeys()
{
  return &type metadata for SportsPersonalizationEntity.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SportsRecommendationQuery.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C02E2130 + 4 * byte_1C0326319[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C02E2150 + 4 * byte_1C032631E[v4]))();
}

_BYTE *sub_1C02E2130(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C02E2150(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C02E2158(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C02E2160(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C02E2168(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C02E2170(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsRecommendationQuery.CodingKeys()
{
  return &type metadata for SportsRecommendationQuery.CodingKeys;
}

unint64_t sub_1C02E2190()
{
  unint64_t result;

  result = qword_1EF5C41C8;
  if (!qword_1EF5C41C8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0326628, &type metadata for SportsRecommendationQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C41C8);
  }
  return result;
}

unint64_t sub_1C02E21D0()
{
  unint64_t result;

  result = qword_1EF5C41D0;
  if (!qword_1EF5C41D0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03266E0, &type metadata for SportsPersonalizationEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C41D0);
  }
  return result;
}

unint64_t sub_1C02E2210()
{
  unint64_t result;

  result = qword_1EF5C41D8;
  if (!qword_1EF5C41D8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0326650, &type metadata for SportsPersonalizationEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C41D8);
  }
  return result;
}

unint64_t sub_1C02E2250()
{
  unint64_t result;

  result = qword_1EF5C41E0;
  if (!qword_1EF5C41E0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0326678, &type metadata for SportsPersonalizationEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C41E0);
  }
  return result;
}

unint64_t sub_1C02E2290()
{
  unint64_t result;

  result = qword_1EF5C41E8;
  if (!qword_1EF5C41E8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0326598, &type metadata for SportsRecommendationQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C41E8);
  }
  return result;
}

unint64_t sub_1C02E22D0()
{
  unint64_t result;

  result = qword_1EF5C41F0;
  if (!qword_1EF5C41F0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03265C0, &type metadata for SportsRecommendationQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C41F0);
  }
  return result;
}

unint64_t sub_1C02E230C()
{
  unint64_t result;

  result = qword_1EF5C41F8;
  if (!qword_1EF5C41F8)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for PersonalizationLevel, &type metadata for PersonalizationLevel);
    atomic_store(result, (unint64_t *)&qword_1EF5C41F8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_142()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_2_138()
{
  return sub_1C0304954();
}

uint64_t OUTLINED_FUNCTION_3_144()
{
  return sub_1C03048A0();
}

uint64_t OUTLINED_FUNCTION_6_109(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  return sub_1C02E0A34((uint64_t)&STACK[0x400], (uint64_t)&a57);
}

void *OUTLINED_FUNCTION_8_82(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x80uLL);
}

uint64_t OUTLINED_FUNCTION_9_96(uint64_t a1)
{
  return sub_1C02E0A34(a1, (uint64_t)&STACK[0x300]);
}

void sub_1C02E23A0(__int16 a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C02E23C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727E60);
  v2 = OUTLINED_FUNCTION_17_24();
  OUTLINED_FUNCTION_3_145(v2);
  OUTLINED_FUNCTION_33_19();
  *v1 = OUTLINED_FUNCTION_5_104();
  v1[1] = v3;
  return nullsub_1(v0);
}

uint64_t sub_1C02E5984(__int16 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = MEMORY[0x1E0DEE9D8];
  switch(a1)
  {
    case 8:
    case 13:
    case 14:
    case 19:
    case 20:
    case 21:
    case 25:
    case 27:
    case 32:
    case 33:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727E60);
      v1 = OUTLINED_FUNCTION_17_24();
      *(_OWORD *)(v1 + 16) = xmmword_1C0305B60;
      *(_QWORD *)(v1 + 32) = OUTLINED_FUNCTION_5_104();
      *(_QWORD *)(v1 + 40) = v4;
      break;
    case 15:
    case 16:
    case 28:
    case 29:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727E60);
      v1 = OUTLINED_FUNCTION_16_0();
      *(_OWORD *)(v1 + 16) = xmmword_1C03084B0;
      *(_QWORD *)(v1 + 32) = OUTLINED_FUNCTION_5_104();
      *(_QWORD *)(v1 + 40) = v2;
      *(_QWORD *)(v1 + 48) = sub_1C0303EB0();
      *(_QWORD *)(v1 + 56) = v3;
      break;
    default:
      return v1;
  }
  return v1;
}

uint64_t sub_1C02E5AD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v0 = sub_1C0303F10();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727E60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C0309BD0;
  *(_QWORD *)(inited + 32) = v0;
  *(_QWORD *)(inited + 40) = v2;
  sub_1C004F408();
  OUTLINED_FUNCTION_65();
  *(_QWORD *)(inited + 48) = sub_1C0304504();
  *(_QWORD *)(inited + 56) = v4;
  *(_QWORD *)(inited + 64) = OUTLINED_FUNCTION_6_110();
  *(_QWORD *)(inited + 72) = v5;
  v6 = OUTLINED_FUNCTION_6_110();
  v8 = v7;
  OUTLINED_FUNCTION_29();
  v9 = 0;
  *(_QWORD *)(inited + 80) = v6;
  *(_QWORD *)(inited + 88) = v8;
  while (1)
  {
    OUTLINED_FUNCTION_65();
    if ((unsigned __int16)OUTLINED_FUNCTION_9_97() != 376)
      break;
    v9 += 16;
    if (v9 == 64)
    {
      v10 = 376;
LABEL_6:
      swift_bridgeObjectRelease();
      return v10;
    }
  }
  OUTLINED_FUNCTION_65();
  result = OUTLINED_FUNCTION_9_97();
  v10 = result;
  if ((unsigned __int16)result != 376)
    goto LABEL_6;
  __break(1u);
  return result;
}

uint64_t sub_1C02E5C48(unsigned __int16 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C02E5C7C + 4 * word_1C0326B06[a1]))(0x726567616E616DLL, 0xE700000000000000);
}

uint64_t sub_1C02E5C7C()
{
  return 0x6E61747369737361;
}

uint64_t sub_1C02E5C9C()
{
  return 0x6573756F7073;
}

uint64_t sub_1C02E5CB0()
{
  return 0x796C696D6166;
}

uint64_t sub_1C02E5CC4()
{
  return 0x72656E74726170;
}

uint64_t sub_1C02E5EFC()
{
  return 0x207265676E756F79;
}

uint64_t sub_1C02E5F10()
{
  return 0x6973207265646C65;
}

uint64_t sub_1C02E5F34()
{
  return 0x747365676E756F79;
}

unint64_t sub_1C02E5F58()
{
  return 0xD000000000000010;
}

uint64_t sub_1C02E5FB4()
{
  return 0x7320747365646C65;
}

uint64_t sub_1C02E5FDC()
{
  return 0x6220747365646C65;
}

unint64_t sub_1C02E6038()
{
  return 0xD000000000000013;
}

unint64_t sub_1C02E6050()
{
  return 0xD000000000000011;
}

unint64_t sub_1C02E6068()
{
  return 0xD000000000000014;
}

unint64_t sub_1C02E6080()
{
  return 0xD000000000000012;
}

uint64_t sub_1C02E6098()
{
  return 0x6972665F656C616DLL;
}

void sub_1C02E60B8()
{
  JUMPOUT(0x1C02E60D4);
}

uint64_t sub_1C02E60DC()
{
  return 0x7261705F656C616DLL;
}

uint64_t sub_1C02E60FC()
{
  return 0x705F656C616D6566;
}

uint64_t sub_1C02E6120()
{
  return 0x656972666C726967;
}

void sub_1C02E6158()
{
  JUMPOUT(0x1C02E6170);
}

uint64_t sub_1C02E6178()
{
  return 0x746F6D646E617267;
}

unint64_t sub_1C02E6188()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1C02E61A0()
{
  return 0xD00000000000001ALL;
}

void sub_1C02E61B8()
{
  JUMPOUT(0x1C02E7044);
}

unint64_t sub_1C02E61CC()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1C02E61E4()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1C02E61FC()
{
  return 0xD000000000000011;
}

unint64_t sub_1C02E6214()
{
  return 0xD000000000000011;
}

unint64_t sub_1C02E622C()
{
  return 0xD000000000000011;
}

uint64_t sub_1C02E6244()
{
  return 0x696863646E617267;
}

void sub_1C02E6264()
{
  JUMPOUT(0x1C02E627CLL);
}

uint64_t sub_1C02E6284()
{
  return 0x6E6F73646E617267;
}

unint64_t sub_1C02E629C()
{
  return 0xD000000000000010;
}

uint64_t sub_1C02E62B4()
{
  return 0x7267207461657267;
}

unint64_t sub_1C02E62D8()
{
  return 0xD000000000000013;
}

uint64_t sub_1C02E62F0()
{
  return 0x692D746E65726170;
}

unint64_t sub_1C02E6434()
{
  return 0xD000000000000015;
}

unint64_t sub_1C02E644C()
{
  return 0xD000000000000013;
}

unint64_t sub_1C02E6464()
{
  return 0xD00000000000001CLL;
}

unint64_t sub_1C02E647C()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1C02E6494()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1C02E64AC()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1C02E64C4()
{
  return 0xD000000000000023;
}

unint64_t sub_1C02E64D0()
{
  return 0xD000000000000020;
}

uint64_t sub_1C02E64E8()
{
  return 0x2D726568746F7262;
}

unint64_t sub_1C02E650C()
{
  return 0xD000000000000016;
}

unint64_t sub_1C02E6524()
{
  return 0xD000000000000014;
}

unint64_t sub_1C02E653C()
{
  return 0xD00000000000001ELL;
}

unint64_t sub_1C02E6554()
{
  return 0xD00000000000001FLL;
}

unint64_t sub_1C02E656C()
{
  return 0xD00000000000001CLL;
}

unint64_t sub_1C02E6584()
{
  return 0xD00000000000001ELL;
}

unint64_t sub_1C02E659C()
{
  return 0xD000000000000026;
}

unint64_t sub_1C02E65B4()
{
  return 0xD000000000000024;
}

unint64_t sub_1C02E65CC()
{
  return 0xD000000000000021;
}

unint64_t sub_1C02E65E4()
{
  return 0xD000000000000024;
}

unint64_t sub_1C02E65FC()
{
  return 0xD000000000000024;
}

unint64_t sub_1C02E6614()
{
  return 0xD000000000000027;
}

unint64_t sub_1C02E662C()
{
  return 0xD000000000000010;
}

unint64_t sub_1C02E6644()
{
  return 0xD000000000000011;
}

uint64_t sub_1C02E665C()
{
  return 0x6E692D646C696863;
}

uint64_t sub_1C02E66A0()
{
  return 0x6C2D6E692D6E6F73;
}

uint64_t sub_1C02E66C0()
{
  return 0x6E6973756F63;
}

uint64_t sub_1C02E66D4()
{
  return 0x756F635F656C616DLL;
}

uint64_t sub_1C02E66F4()
{
  return 0x635F656C616D6566;
}

unint64_t sub_1C02E6718()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1C02E6730()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1C02E6748()
{
  return 0xD000000000000023;
}

unint64_t sub_1C02E6754()
{
  return 0xD000000000000021;
}

unint64_t sub_1C02E676C()
{
  return 0xD000000000000020;
}

unint64_t sub_1C02E6784()
{
  return 0xD000000000000028;
}

unint64_t sub_1C02E679C()
{
  return 0xD000000000000026;
}

unint64_t sub_1C02E67B4()
{
  return 0xD00000000000001FLL;
}

unint64_t sub_1C02E67CC()
{
  return 0xD000000000000027;
}

unint64_t sub_1C02E67E4()
{
  return 0xD000000000000025;
}

unint64_t sub_1C02E67FC()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1C02E6814()
{
  return 0xD000000000000022;
}

unint64_t sub_1C02E682C()
{
  return 0xD000000000000020;
}

unint64_t sub_1C02E6844()
{
  return 0xD000000000000020;
}

unint64_t sub_1C02E685C()
{
  return 0xD000000000000028;
}

unint64_t sub_1C02E6874()
{
  return 0xD000000000000026;
}

unint64_t sub_1C02E688C()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1C02E68A4()
{
  return 0xD000000000000023;
}

unint64_t sub_1C02E68B0()
{
  return 0xD000000000000021;
}

unint64_t sub_1C02E68C8()
{
  return 0xD00000000000001FLL;
}

unint64_t sub_1C02E68E0()
{
  return 0xD000000000000027;
}

unint64_t sub_1C02E68F8()
{
  return 0xD000000000000025;
}

unint64_t sub_1C02E6910()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1C02E6928()
{
  return 0xD000000000000022;
}

unint64_t sub_1C02E6940()
{
  return 0xD000000000000020;
}

unint64_t sub_1C02E6958()
{
  return 0xD000000000000020;
}

unint64_t sub_1C02E6970()
{
  return 0xD000000000000028;
}

unint64_t sub_1C02E6988()
{
  return 0xD000000000000026;
}

unint64_t sub_1C02E69A0()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C02E69B8()
{
  return 0x1000000000000025;
}

unint64_t sub_1C02E69D0()
{
  return 0xD000000000000021;
}

unint64_t sub_1C02E69E8()
{
  return 0xD000000000000022;
}

unint64_t sub_1C02E6A00()
{
  return 0xD000000000000025;
}

unint64_t sub_1C02E6A18()
{
  return 0xD000000000000020;
}

unint64_t sub_1C02E6A30()
{
  return 0xD00000000000003ALL;
}

unint64_t sub_1C02E6A48()
{
  return 0xD000000000000038;
}

unint64_t sub_1C02E6A60()
{
  return 0xD000000000000044;
}

unint64_t sub_1C02E6A78()
{
  return 0xD000000000000042;
}

unint64_t sub_1C02E6AB4()
{
  return 0xD000000000000017;
}

unint64_t sub_1C02E6ACC()
{
  return 0xD000000000000015;
}

unint64_t sub_1C02E6AE4()
{
  return 0xD00000000000001FLL;
}

unint64_t sub_1C02E6AFC()
{
  return 0xD000000000000027;
}

unint64_t sub_1C02E6B14()
{
  return 0xD000000000000025;
}

unint64_t sub_1C02E6B2C()
{
  return 0xD00000000000001FLL;
}

unint64_t sub_1C02E6B44()
{
  return 0xD000000000000027;
}

unint64_t sub_1C02E6B5C()
{
  return 0xD000000000000025;
}

unint64_t sub_1C02E6B74()
{
  return 0xD000000000000013;
}

unint64_t sub_1C02E6B8C()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1C02E6BA4()
{
  return 0xD000000000000019;
}

unint64_t sub_1C02E6BBC()
{
  return 0xD000000000000013;
}

unint64_t sub_1C02E6BD4()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1C02E6BEC()
{
  return 0xD000000000000019;
}

unint64_t sub_1C02E6C04()
{
  return 0xD000000000000019;
}

unint64_t sub_1C02E6C1C()
{
  return 0xD000000000000022;
}

unint64_t sub_1C02E6C34()
{
  return 0xD000000000000020;
}

unint64_t sub_1C02E6C4C()
{
  return 0xD000000000000013;
}

unint64_t sub_1C02E6C64()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1C02E6C7C()
{
  return 0xD000000000000019;
}

unint64_t sub_1C02E6C94()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C02E6CAC()
{
  return 0x6E7561646E617267;
}

unint64_t sub_1C02E6CCC()
{
  return 0xD000000000000015;
}

unint64_t sub_1C02E6CE4()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1C02E6CFC()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1C02E6D14()
{
  return 0xD000000000000015;
}

unint64_t sub_1C02E6D2C()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1C02E6D44()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1C02E6D5C()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1C02E6D74()
{
  return 0xD000000000000015;
}

unint64_t sub_1C02E6D8C()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1C02E6DA4()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1C02E6DBC()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1C02E6DD4()
{
  return 0xD000000000000025;
}

unint64_t sub_1C02E6DEC()
{
  return 0xD000000000000023;
}

uint64_t sub_1C02E6DF8()
{
  return 0x636E75646E617267;
}

uint64_t sub_1C02E6E18()
{
  return 0x73676E696C626973;
}

uint64_t sub_1C02E6E3C()
{
  return 0x726F5F656365696ELL;
}

unint64_t sub_1C02E6E60()
{
  return 0xD000000000000016;
}

unint64_t sub_1C02E6E78()
{
  return 0xD000000000000016;
}

unint64_t sub_1C02E6E90()
{
  return 0xD000000000000031;
}

unint64_t sub_1C02E6EA8()
{
  return 0xD000000000000035;
}

unint64_t sub_1C02E6EC0()
{
  return 0xD000000000000013;
}

unint64_t sub_1C02E6ED8()
{
  return 0xD000000000000014;
}

unint64_t sub_1C02E6EF0()
{
  return 0xD00000000000002DLL;
}

unint64_t sub_1C02E6F08()
{
  return 0xD000000000000029;
}

void sub_1C02E6F20()
{
  JUMPOUT(0x1C02E6F38);
}

unint64_t sub_1C02E6F40()
{
  return 0xD000000000000020;
}

unint64_t sub_1C02E6F58()
{
  return 0xD000000000000021;
}

uint64_t sub_1C02E6F70()
{
  return 0x70656E646E617267;
}

unint64_t sub_1C02E6F90()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1C02E6FA8()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1C02E6FC0()
{
  return 0x6572617070657473;
}

void sub_1C02E6FD8()
{
  JUMPOUT(0x1C02E7064);
}

uint64_t sub_1C02E6FFC()
{
  return 0x6E6F7370657473;
}

uint64_t sub_1C02E7010()
{
  return 0x6775616470657473;
}

unint64_t sub_1C02E706C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C02E7084()
{
  return 0x100000000000001DLL;
}

unint64_t sub_1C02E70A0()
{
  return 0xD00000000000001FLL;
}

unint64_t sub_1C02E70B8()
{
  return 0xD000000000000015;
}

unint64_t sub_1C02E70D0()
{
  return 0xD000000000000018;
}

unint64_t sub_1C02E70E8()
{
  return 0xD000000000000011;
}

unint64_t sub_1C02E7100()
{
  return 0xD00000000000001CLL;
}

unint64_t sub_1C02E7118()
{
  return 0xD000000000000027;
}

unint64_t sub_1C02E7130()
{
  return 0xD000000000000020;
}

unint64_t sub_1C02E7148()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1C02E7160()
{
  return 0x656C636E75;
}

unint64_t sub_1C02E7174()
{
  return 0xD000000000000023;
}

unint64_t sub_1C02E7180()
{
  return 0xD000000000000021;
}

unint64_t sub_1C02E7198()
{
  return 0xD000000000000023;
}

unint64_t sub_1C02E71A4()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1C02E71BC()
{
  return 0xD000000000000023;
}

unint64_t sub_1C02E71C8()
{
  return 0xD000000000000021;
}

unint64_t sub_1C02E71E0()
{
  return 0xD000000000000023;
}

uint64_t sub_1C02E71EC()
{
  return 1953396065;
}

unint64_t sub_1C02E71FC()
{
  return 0xD000000000000028;
}

unint64_t sub_1C02E7214()
{
  return 0xD000000000000026;
}

unint64_t sub_1C02E722C()
{
  return 0xD000000000000019;
}

unint64_t sub_1C02E7244()
{
  return 0xD000000000000021;
}

unint64_t sub_1C02E725C()
{
  return 0xD00000000000001FLL;
}

unint64_t sub_1C02E7274()
{
  return 0xD000000000000020;
}

unint64_t sub_1C02E728C()
{
  return 0xD000000000000019;
}

unint64_t sub_1C02E72A4()
{
  return 0xD00000000000001FLL;
}

unint64_t sub_1C02E72BC()
{
  return 0xD000000000000021;
}

unint64_t sub_1C02E72D4()
{
  return 0xD000000000000022;
}

unint64_t sub_1C02E72EC()
{
  return 0xD000000000000020;
}

unint64_t sub_1C02E7304()
{
  return 0xD000000000000027;
}

unint64_t sub_1C02E731C()
{
  return 0xD00000000000002ALL;
}

unint64_t sub_1C02E7334()
{
  return 0xD00000000000002DLL;
}

unint64_t sub_1C02E734C()
{
  return 0xD00000000000002CLL;
}

unint64_t sub_1C02E7364()
{
  return 0xD000000000000020;
}

unint64_t sub_1C02E737C()
{
  return 0xD000000000000020;
}

unint64_t sub_1C02E7394()
{
  return 0xD000000000000020;
}

unint64_t sub_1C02E73AC()
{
  return 0xD000000000000020;
}

unint64_t sub_1C02E73C4()
{
  return 0xD000000000000016;
}

unint64_t sub_1C02E73DC()
{
  return 0xD000000000000016;
}

unint64_t sub_1C02E73F4()
{
  return 0xD000000000000010;
}

unint64_t sub_1C02E740C()
{
  return 0xD000000000000015;
}

unint64_t sub_1C02E7424()
{
  return 0xD000000000000013;
}

unint64_t sub_1C02E743C()
{
  return 0xD000000000000013;
}

unint64_t sub_1C02E7454()
{
  return 0xD000000000000024;
}

unint64_t sub_1C02E746C()
{
  return 0xD000000000000026;
}

unint64_t sub_1C02E7484()
{
  return 0xD000000000000024;
}

unint64_t sub_1C02E749C()
{
  return 0xD000000000000026;
}

uint64_t sub_1C02E74B4()
{
  return 0x6A75675F746E7561;
}

unint64_t sub_1C02E74D4()
{
  return 0xD000000000000017;
}

unint64_t sub_1C02E74EC()
{
  return 0xD00000000000002DLL;
}

unint64_t sub_1C02E7504()
{
  return 0xD000000000000013;
}

unint64_t sub_1C02E751C()
{
  return 0xD000000000000018;
}

unint64_t sub_1C02E7534()
{
  return 0xD000000000000016;
}

unint64_t sub_1C02E754C()
{
  return 0xD000000000000016;
}

unint64_t sub_1C02E7564()
{
  return 0xD000000000000025;
}

unint64_t sub_1C02E757C()
{
  return 0xD000000000000023;
}

unint64_t sub_1C02E7588()
{
  return 0xD000000000000025;
}

unint64_t sub_1C02E75A0()
{
  return 0xD000000000000025;
}

unint64_t sub_1C02E75B8()
{
  return 0xD000000000000023;
}

unint64_t sub_1C02E75C4()
{
  return 0xD000000000000025;
}

unint64_t sub_1C02E75DC()
{
  return 0xD000000000000028;
}

unint64_t sub_1C02E75F4()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1C02E760C()
{
  return 0xD000000000000023;
}

unint64_t sub_1C02E7618()
{
  return 0xD000000000000021;
}

unint64_t sub_1C02E7630()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1C02E7648()
{
  return 0xD000000000000021;
}

unint64_t sub_1C02E7660()
{
  return 0xD000000000000023;
}

unint64_t sub_1C02E766C()
{
  return 0xD000000000000029;
}

unint64_t sub_1C02E7684()
{
  return 0xD00000000000002CLL;
}

unint64_t sub_1C02E769C()
{
  return 0xD00000000000002FLL;
}

unint64_t sub_1C02E76B4()
{
  return 0xD00000000000002ELL;
}

unint64_t sub_1C02E76CC()
{
  return 0xD000000000000012;
}

unint64_t sub_1C02E76E4()
{
  return 0xD000000000000017;
}

unint64_t sub_1C02E76FC()
{
  return 0xD000000000000015;
}

uint64_t sub_1C02E7714()
{
  return 0x616D5F656C636E75;
}

void sub_1C02E7738()
{
  JUMPOUT(0x1C02E7754);
}

unint64_t sub_1C02E775C()
{
  return 0xD000000000000018;
}

unint64_t sub_1C02E7774()
{
  return 0xD000000000000014;
}

unint64_t sub_1C02E778C()
{
  return 0xD000000000000019;
}

unint64_t sub_1C02E77A4()
{
  return 0xD000000000000017;
}

unint64_t sub_1C02E77BC()
{
  return 0xD000000000000017;
}

void sub_1C02E77D4()
{
  JUMPOUT(0x1C02E77F0);
}

uint64_t sub_1C02E77F8()
{
  return 0x6E616B5F746E7561;
}

unint64_t sub_1C02E7814()
{
  return 0xD000000000000016;
}

unint64_t sub_1C02E782C()
{
  return 0xD00000000000002FLL;
}

unint64_t sub_1C02E7844()
{
  return 0xD000000000000015;
}

unint64_t sub_1C02E785C()
{
  return 0xD000000000000012;
}

unint64_t sub_1C02E7874()
{
  return 0xD000000000000017;
}

uint64_t sub_1C02E788C()
{
  return 0x61745F656C636E75;
}

unint64_t sub_1C02E78A8()
{
  return 0xD000000000000023;
}

uint64_t sub_1C02E78B4()
{
  return 0x6D61745F746E7561;
}

unint64_t sub_1C02E78D4()
{
  return 0xD000000000000022;
}

unint64_t sub_1C02E78EC()
{
  return 0xD000000000000020;
}

unint64_t sub_1C02E7904()
{
  return 0xD000000000000027;
}

unint64_t sub_1C02E791C()
{
  return 0xD00000000000002DLL;
}

unint64_t sub_1C02E7934()
{
  return 0xD00000000000002CLL;
}

unint64_t sub_1C02E794C()
{
  return 0xD000000000000010;
}

unint64_t sub_1C02E7964()
{
  return 0xD000000000000015;
}

unint64_t sub_1C02E797C()
{
  return 0xD000000000000013;
}

unint64_t sub_1C02E7994()
{
  return 0xD000000000000013;
}

void sub_1C02E79AC()
{
  JUMPOUT(0x1C02E79C4);
}

unint64_t sub_1C02E79CC()
{
  return 0xD000000000000024;
}

unint64_t sub_1C02E79E4()
{
  return 0xD000000000000024;
}

unint64_t sub_1C02E79FC()
{
  return 0xD000000000000022;
}

void sub_1C02E7A14()
{
  JUMPOUT(0x1C02E7A2CLL);
}

unint64_t sub_1C02E7A34()
{
  return 0xD000000000000022;
}

unint64_t sub_1C02E7A4C()
{
  return 0xD000000000000020;
}

unint64_t sub_1C02E7A64()
{
  return 0xD000000000000020;
}

unint64_t sub_1C02E7A7C()
{
  return 0xD000000000000023;
}

unint64_t sub_1C02E7A88()
{
  return 0xD000000000000021;
}

unint64_t sub_1C02E7AA0()
{
  return 0xD000000000000014;
}

unint64_t sub_1C02E7AB8()
{
  return 0xD00000000000002BLL;
}

unint64_t sub_1C02E7AD0()
{
  return 0xD00000000000002ELL;
}

unint64_t sub_1C02E7AE8()
{
  return 0xD00000000000002DLL;
}

unint64_t sub_1C02E7B00()
{
  return 0xD000000000000021;
}

unint64_t sub_1C02E7B18()
{
  return 0xD000000000000021;
}

unint64_t sub_1C02E7B30()
{
  return 0xD000000000000017;
}

unint64_t sub_1C02E7B48()
{
  return 0xD000000000000017;
}

unint64_t sub_1C02E7B60()
{
  return 0xD000000000000011;
}

unint64_t sub_1C02E7B78()
{
  return 0xD000000000000016;
}

unint64_t sub_1C02E7B90()
{
  return 0xD000000000000014;
}

unint64_t sub_1C02E7BA8()
{
  return 0xD000000000000025;
}

unint64_t sub_1C02E7BC0()
{
  return 0xD000000000000023;
}

unint64_t sub_1C02E7BCC()
{
  return 0xD000000000000025;
}

unint64_t sub_1C02E7BE4()
{
  return 0xD000000000000025;
}

unint64_t sub_1C02E7BFC()
{
  return 0xD000000000000023;
}

unint64_t sub_1C02E7C08()
{
  return 0xD000000000000025;
}

unint64_t sub_1C02E7C20()
{
  return 0xD00000000000002ALL;
}

unint64_t sub_1C02E7C38()
{
  return 0xD000000000000028;
}

unint64_t sub_1C02E7C50()
{
  return 0xD000000000000023;
}

unint64_t sub_1C02E7C5C()
{
  return 0xD000000000000021;
}

unint64_t sub_1C02E7C74()
{
  return 0xD000000000000022;
}

unint64_t sub_1C02E7C8C()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1C02E7CA4()
{
  return 0xD000000000000021;
}

unint64_t sub_1C02E7CBC()
{
  return 0xD000000000000023;
}

unint64_t sub_1C02E7CC8()
{
  return 0xD000000000000024;
}

unint64_t sub_1C02E7CE0()
{
  return 0xD000000000000022;
}

unint64_t sub_1C02E7CF8()
{
  return 0xD000000000000029;
}

unint64_t sub_1C02E7D10()
{
  return 0xD00000000000002CLL;
}

unint64_t sub_1C02E7D28()
{
  return 0xD00000000000002FLL;
}

unint64_t sub_1C02E7D40()
{
  return 0xD00000000000002ELL;
}

unint64_t sub_1C02E7D58()
{
  return 0xD000000000000022;
}

unint64_t sub_1C02E7D70()
{
  return 0xD000000000000022;
}

unint64_t sub_1C02E7D88()
{
  return 0xD000000000000022;
}

unint64_t sub_1C02E7DA0()
{
  return 0xD000000000000017;
}

unint64_t sub_1C02E7DB8()
{
  return 0xD000000000000015;
}

unint64_t sub_1C02E7DD0()
{
  return 0xD000000000000015;
}

unint64_t sub_1C02E7DE8()
{
  return 0xD000000000000023;
}

unint64_t sub_1C02E7DF4()
{
  return 0xD000000000000021;
}

unint64_t sub_1C02E7E0C()
{
  return 0xD000000000000023;
}

unint64_t sub_1C02E7E18()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1C02E7E30()
{
  return 0xD000000000000023;
}

unint64_t sub_1C02E7E3C()
{
  return 0xD000000000000021;
}

unint64_t sub_1C02E7E70()
{
  return 0xD000000000000028;
}

unint64_t sub_1C02E7E88()
{
  return 0xD000000000000026;
}

unint64_t sub_1C02E7EA0()
{
  return 0xD000000000000020;
}

unint64_t sub_1C02E7EB8()
{
  return 0xD000000000000019;
}

unint64_t sub_1C02E7ED0()
{
  return 0xD00000000000001FLL;
}

unint64_t sub_1C02E7EE8()
{
  return 0xD000000000000021;
}

unint64_t sub_1C02E7F00()
{
  return 0xD000000000000020;
}

unint64_t sub_1C02E7F18()
{
  return 0xD000000000000027;
}

unint64_t sub_1C02E7F30()
{
  return 0xD00000000000002DLL;
}

unint64_t sub_1C02E7F48()
{
  return 0xD000000000000010;
}

unint64_t sub_1C02E7F60()
{
  return 0xD000000000000015;
}

void sub_1C02E7F78()
{
  JUMPOUT(0x1C02E7F8CLL);
}

uint64_t static NLRelationlabel.makeCNLabelContactRelation(nlRelationLabel:)()
{
  unsigned __int16 v0;
  __int16 v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRetain();
  v0 = sub_1C005257C();
  if (v0 == 376)
    return 0;
  v1 = v0;
  if (sub_1C02E5C48(v0) == 0x796C696D6166 && v2 == 0xE600000000000000)
    goto LABEL_9;
  v4 = sub_1C0304A08();
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
    return 0;
  sub_1C02E23A0(v1);
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  v6 = *(_QWORD *)(v5 + 32);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_29();
  return v6;
}

void sub_1C02E8078(unsigned __int16 *a1, unsigned __int16 *a2)
{
  sub_1C025D940(*a1, *a2);
}

uint64_t sub_1C02E8084@<X0>(_WORD *a1@<X8>)
{
  uint64_t result;

  result = sub_1C005257C();
  *a1 = result;
  return result;
}

uint64_t sub_1C02E80B0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int16 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1C02E5C48(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

ValueMetadata *type metadata accessor for NLRelationlabel()
{
  return &type metadata for NLRelationlabel;
}

void sub_1C02E80E8()
{
  unsigned __int16 *v0;

  sub_1C00CED38(*v0);
}

uint64_t sub_1C02E80F0(uint64_t a1)
{
  unsigned __int16 *v1;

  return sub_1C00C1AC0(a1, *v1);
}

void sub_1C02E80F8()
{
  sub_1C02EB1D4();
}

_WORD *__swift_memcpy2_2(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for NLSemanticRelationLabel(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE89)
  {
    if (a2 + 375 <= 0xFFFEFFFF)
      v2 = 2;
    else
      v2 = 4;
    if (a2 + 375 < 0xFF0000)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    else
    {
      v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((_BYTE *)a1 + 2))
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 16)) - 376;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x178;
  v5 = v6 - 376;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NLSemanticRelationLabel(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;

  if (a3 + 375 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 375 < 0xFF0000)
    v4 = 1;
  else
    v4 = v3;
  if (a3 >= 0xFE89)
    v5 = v4;
  else
    v5 = 0;
  if (a2 <= 0xFE88)
    return ((uint64_t (*)(void))((char *)&loc_1C02E81E4 + 4 * byte_1C0326DFB[v5]))();
  *a1 = a2 + 375;
  return ((uint64_t (*)(void))((char *)sub_1C02E821C + 4 * byte_1C0326DF6[v5]))();
}

uint64_t sub_1C02E821C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1C02E8224(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1C02E822CLL);
  return result;
}

uint64_t sub_1C02E8238(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1C02E8240);
  *(_WORD *)result = a2 + 375;
  return result;
}

uint64_t sub_1C02E8244(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1C02E824C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1C02E8258(unsigned __int16 *a1)
{
  return *a1;
}

_WORD *sub_1C02E8260(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for NLSemanticRelationLabel()
{
  return &type metadata for NLSemanticRelationLabel;
}

unint64_t sub_1C02E827C()
{
  unint64_t result;

  result = qword_1EF5C4200;
  if (!qword_1EF5C4200)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0326EB0, &type metadata for NLSemanticRelationLabel);
    atomic_store(result, (unint64_t *)&qword_1EF5C4200);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_145(uint64_t a1)
{
  return sub_1C00B0B10(a1, 1);
}

uint64_t OUTLINED_FUNCTION_4_119(uint64_t a1)
{
  return sub_1C00B0B10(a1, 2);
}

uint64_t OUTLINED_FUNCTION_5_104()
{
  return sub_1C0303EB0();
}

uint64_t OUTLINED_FUNCTION_6_110()
{
  return sub_1C0304504();
}

uint64_t OUTLINED_FUNCTION_9_97()
{
  return sub_1C005257C();
}

uint64_t ContactResolutionInfo.personType.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t ContactResolutionInfo.signals.getter()
{
  return swift_bridgeObjectRetain();
}

void ContactResolutionInfo.forcePromptType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t sub_1C02E8330(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContactResolutionInfo(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for ContactResolutionInfo(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for ContactResolutionInfo()
{
  return &type metadata for ContactResolutionInfo;
}

uint64_t *XPCActivityOperation.init(activity:)(uint64_t a1)
{
  char *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  objc_super v10;

  *(_QWORD *)&v1[OBJC_IVAR____TtC13SiriInference20XPCActivityOperation_activity] = 0;
  *(uint64_t *)((char *)OBJC_IVAR____TtC13SiriInference20XPCActivityOperation_completionKVObservation + (_QWORD)v1) = 0;
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for XPCActivityOperation();
  v3 = (char *)objc_msgSendSuper2(&v10, sel_init);
  *(_QWORD *)&v3[OBJC_IVAR____TtC13SiriInference20XPCActivityOperation_activity] = a1;
  v4 = v3;
  OUTLINED_FUNCTION_0_155();
  swift_unknownObjectRelease();
  swift_getKeyPath();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = &qword_1EF5C4000;
  *(_QWORD *)(v5 + 24) = a1;
  v6 = &qword_1EF5C4000;
  OUTLINED_FUNCTION_0_155();
  v7 = sub_1C0301AD4();
  swift_release();
  swift_release();

  OUTLINED_FUNCTION_10_14();
  v8 = *(void **)((char *)&qword_1EF5C4000
                + (_QWORD)OBJC_IVAR____TtC13SiriInference20XPCActivityOperation_completionKVObservation);
  *(uint64_t *)((char *)&qword_1EF5C4000
             + (_QWORD)OBJC_IVAR____TtC13SiriInference20XPCActivityOperation_completionKVObservation) = v7;

  return &qword_1EF5C4000;
}

uint64_t type metadata accessor for XPCActivityOperation()
{
  return objc_opt_self();
}

char *keypath_get_selector_isFinished()
{
  return sel_isFinished;
}

uint64_t sub_1C02E854C()
{
  char *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _xpc_activity_s *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  if (objc_msgSend(v0, sel_isCancelled))
  {
    if (qword_1ED728430 != -1)
      swift_once();
    v1 = sub_1C0303B98();
    __swift_project_value_buffer(v1, (uint64_t)qword_1ED729650);
    v2 = sub_1C0303B80();
    v3 = sub_1C03042E8();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)OUTLINED_FUNCTION_6();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1C0039000, v2, v3, "XPC activity has been cancelled", v4, 2u);
      OUTLINED_FUNCTION_5();
    }

    return 1;
  }
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC13SiriInference20XPCActivityOperation_activity])
  {
    v5 = (_xpc_activity_s *)swift_unknownObjectRetain();
    if (xpc_activity_should_defer(v5))
    {
      objc_msgSend(v0, sel_cancel);
      if (qword_1ED728430 != -1)
        swift_once();
      v6 = sub_1C0303B98();
      __swift_project_value_buffer(v6, (uint64_t)qword_1ED729650);
      v7 = sub_1C0303B80();
      v8 = sub_1C03042E8();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)OUTLINED_FUNCTION_6();
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_1C0039000, v7, v8, "XPC activity has been deferred", v9, 2u);
        OUTLINED_FUNCTION_5();
      }

      OUTLINED_FUNCTION_10_14();
      return 1;
    }
    OUTLINED_FUNCTION_10_14();
  }
  return 0;
}

id XPCActivityOperation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id XPCActivityOperation.init()()
{
  char *v0;
  uint64_t v1;
  objc_super v3;

  v1 = OBJC_IVAR____TtC13SiriInference20XPCActivityOperation_activity;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13SiriInference20XPCActivityOperation_activity] = 0;
  *(uint64_t *)((char *)OBJC_IVAR____TtC13SiriInference20XPCActivityOperation_completionKVObservation + (_QWORD)v0) = 0;
  *(_QWORD *)&v0[v1] = 0;
  swift_unknownObjectRelease();
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for XPCActivityOperation();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t *XPCActivityOperation.__allocating_init(activity:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return XPCActivityOperation.init(activity:)(a1);
}

id sub_1C02E87C4@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_isFinished);
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1C02E87F4(uint64_t a1, uint64_t a2, uint64_t a3, _xpc_activity_s *a4)
{
  uint64_t result;
  xpc_activity_state_t v6;
  char v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725688);
  result = sub_1C0301AC8();
  if (v7 != 2 && (v7 & 1) != 0)
  {
    if ((sub_1C02E854C() & 1) != 0)
      v6 = 3;
    else
      v6 = 5;
    return xpc_activity_set_state(a4, v6);
  }
  return result;
}

uint64_t sub_1C02E886C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C02E8898(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C02E87F4(a1, a2, *(_QWORD *)(v2 + 16), *(_xpc_activity_s **)(v2 + 24));
}

id XPCActivityOperation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for XPCActivityOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for XPCActivityOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of XPCActivityOperation.__allocating_init(activity:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t OUTLINED_FUNCTION_0_155()
{
  return swift_unknownObjectRetain();
}

void sub_1C02E8928(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = objc_msgSend(a1, sel_identifier);
  v15 = sub_1C0303EB0();
  v7 = v6;

  swift_bridgeObjectRetain();
  v9 = sub_1C02EA1AC(a1);
  v10 = v8;
  if (v8)
    v11 = v8;
  else
    v11 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  v12 = objc_msgSend(a1, sel_intentHandlingStatus);
  v13 = (void *)MEMORY[0x1C3B97BB0]();
  sub_1C02E9BB0(a1, &v16);
  if (v2)
  {
    objc_autoreleasePoolPop(v13);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

  }
  else
  {
    if (!v10)
      v9 = 0;
    objc_autoreleasePoolPop(v13);

    v14 = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a2 = v15;
    a2[1] = v7;
    a2[2] = v9;
    a2[3] = v11;
    a2[4] = (uint64_t)v12;
    a2[5] = v14;
  }
}

uint64_t sub_1C02E8A60(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  id v28;
  void (*v29)(char *, uint64_t);
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  os_log_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  NSObject *v55;
  os_log_type_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  os_log_t v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  int v75;
  void (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  os_log_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)();
  void *v91;
  uint64_t (*v92)(_QWORD);
  uint64_t v93;

  v77 = a6;
  v78 = a7;
  v74 = a5;
  v75 = a4;
  v84 = a3;
  v9 = sub_1C0301CFC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](v9);
  v81 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v80 = (os_log_t)((char *)&v71 - v14);
  v15 = MEMORY[0x1E0C80A78](v13);
  v73 = (char *)&v71 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v71 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v71 - v20;
  v22 = swift_allocObject();
  v83 = v22;
  *(_QWORD *)(v22 + 16) = MEMORY[0x1E0DEE9D8];
  v23 = v22 + 16;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v86 = a2;
  v25 = a2;
  v26 = v24;
  v27 = v9;
  v24(v21, v25, v9);
  v82 = v23;
  if (a1)
  {
    v85 = a1;
  }
  else
  {
    v28 = objc_msgSend((id)objc_opt_self(), sel_intent);
    sub_1C0301C18();
    v85 = objc_msgSend(v28, sel_publisherFromStartTime_);

  }
  v29 = *(void (**)(char *, uint64_t))(v10 + 8);
  v30 = a1;
  v79 = v29;
  v29(v21, v9);
  v26(v19, v86, v9);
  v72 = v19;
  v31 = v73;
  v26(v73, v84, v9);
  v32 = *(unsigned __int8 *)(v10 + 80);
  v33 = (v32 + 32) & ~v32;
  v34 = (v11 + v32 + v33) & ~v32;
  v35 = v34 + v11;
  v76 = v26;
  v36 = swift_allocObject();
  v37 = v77;
  *(_QWORD *)(v36 + 16) = v74;
  *(_QWORD *)(v36 + 24) = v37;
  v38 = v36 + v33;
  v39 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v39(v38, v72, v27);
  v39(v36 + v34, v31, v27);
  *(_BYTE *)(v36 + v35) = v75;
  v40 = v83;
  *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFFF8) + v36 + 8) = v83;
  v41 = v40;
  v92 = (uint64_t (*)(_QWORD))sub_1C02E9AB8;
  v93 = v36;
  v42 = MEMORY[0x1E0C809B0];
  v88 = MEMORY[0x1E0C809B0];
  v89 = 1107296256;
  v90 = sub_1C025FCF8;
  v91 = &block_descriptor_28;
  v43 = OUTLINED_FUNCTION_1_143();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_9_3();
  swift_release();
  v44 = v85;
  v45 = objc_msgSend(v85, sel_filterWithIsIncluded_, v43);
  _Block_release(v43);
  v92 = nullsub_1;
  v93 = 0;
  v88 = v42;
  v89 = 1107296256;
  v90 = sub_1C025FD34;
  v91 = &block_descriptor_6_4;
  v46 = OUTLINED_FUNCTION_1_143();
  v47 = swift_allocObject();
  v48 = v78;
  *(_QWORD *)(v47 + 16) = v41;
  *(_QWORD *)(v47 + 24) = v48;
  v92 = (uint64_t (*)(_QWORD))sub_1C02E9BA8;
  v93 = v47;
  v88 = v42;
  v89 = 1107296256;
  v90 = sub_1C025FCF8;
  v91 = &block_descriptor_12_2;
  v49 = OUTLINED_FUNCTION_1_143();
  OUTLINED_FUNCTION_9_3();
  swift_release();
  v50 = objc_msgSend(v45, sel_sinkWithCompletion_shouldContinue_, v46, v49);
  _Block_release(v49);
  _Block_release(v46);

  if (qword_1ED728298 != -1)
    swift_once();
  v51 = sub_1C0303B98();
  __swift_project_value_buffer(v51, (uint64_t)qword_1ED729610);
  v52 = v80;
  v53 = v76;
  v76((char *)v80, v86, v27);
  v54 = v81;
  v53(v81, v84, v27);
  OUTLINED_FUNCTION_9_3();
  v55 = sub_1C0303B80();
  v56 = sub_1C03042E8();
  v57 = v56;
  if (os_log_type_enabled(v55, v56))
  {
    v58 = swift_slowAlloc();
    v86 = swift_slowAlloc();
    v88 = v86;
    *(_DWORD *)v58 = 134218498;
    LODWORD(v84) = v57;
    OUTLINED_FUNCTION_28_2();
    v87 = *(_QWORD *)(*(_QWORD *)(v41 + 16) + 16);
    v85 = v44;
    sub_1C03044B0();
    OUTLINED_FUNCTION_1_0();
    *(_WORD *)(v58 + 12) = 2080;
    sub_1C0068358((unint64_t *)&qword_1ED728060, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v59 = OUTLINED_FUNCTION_3_146();
    v61 = OUTLINED_FUNCTION_27_46(v59, v60);
    OUTLINED_FUNCTION_0_156(v61);
    swift_bridgeObjectRelease();
    v62 = v52;
    v63 = v79;
    v79((char *)v62, v27);
    *(_WORD *)(v58 + 22) = 2080;
    v80 = v55;
    v64 = v81;
    v65 = OUTLINED_FUNCTION_3_146();
    v67 = OUTLINED_FUNCTION_27_46(v65, v66);
    OUTLINED_FUNCTION_0_156(v67);
    swift_bridgeObjectRelease();
    v63(v64, v27);
    _os_log_impl(&dword_1C0039000, v80, (os_log_type_t)v84, "Biome: Fetched %ld interaction events with Date between %s and %s", (uint8_t *)v58, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_1_0();
  v68 = v79;
  v79((char *)v52, v27);
  v68(v54, v27);

  OUTLINED_FUNCTION_28_2();
  v69 = *(_QWORD *)(v41 + 16);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_1_0();
  return v69;
}

uint64_t sub_1C02E9090()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C02E90B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  NSObject *v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v35;
  uint64_t v36;
  os_log_type_t v37;
  uint64_t v38;
  NSObject *v39;
  void *v40;
  uint64_t *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD *v46;
  uint64_t v47;
  id v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56[4];
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  _OWORD v61[2];

  v11 = objc_msgSend(a1, sel_eventBody);
  if (!v11)
  {
    if (qword_1ED728298 != -1)
      swift_once();
    v26 = sub_1C0303B98();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED729610);
    v12 = sub_1C0303B80();
    v27 = sub_1C03042E8();
    if (os_log_type_enabled(v12, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1C0039000, v12, v27, "Skipping BMStoreEvent that lacks a BMIntentEvent eventBody", v28, 2u);
      MEMORY[0x1C3B98378](v28, -1, -1);
    }
    goto LABEL_30;
  }
  v12 = v11;
  if (a3)
  {
    v13 = sub_1C02EA1AC(v11);
    if (!v14)
    {
LABEL_9:
      if (qword_1ED728298 != -1)
        swift_once();
      v17 = sub_1C0303B98();
      __swift_project_value_buffer(v17, (uint64_t)qword_1ED729610);
      v12 = v12;
      v18 = sub_1C0303B80();
      v19 = sub_1C03042E8();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        v21 = swift_slowAlloc();
        v56[0] = v21;
        *(_DWORD *)v20 = 136315138;
        *(_QWORD *)&v57 = sub_1C02EA1AC(v12);
        *((_QWORD *)&v57 + 1) = v22;
        __swift_instantiateConcreteTypeFromMangledName(qword_1ED727DC0);
        v23 = sub_1C0303EF8();
        *(_QWORD *)&v57 = sub_1C003E6D8(v23, v24, v56);
        sub_1C03044B0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C0039000, v18, v19, "Skipping BMIntentEvent. event intentClass=%s", v20, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B98378](v21, -1, -1);
        v25 = (uint64_t)v20;
LABEL_27:
        MEMORY[0x1C3B98378](v25, -1, -1);

        return 0;
      }

      goto LABEL_30;
    }
    if (v13 == a2 && v14 == a3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = sub_1C0304A08();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
        goto LABEL_9;
    }
  }
  sub_1C0301C18();
  v30 = v29;
  -[NSObject absoluteTimestamp](v12, sel_absoluteTimestamp);
  v32 = v31;
  sub_1C0301C18();
  if (v32 < v30 || v33 < v32)
  {
    v35 = v33;
    if (qword_1ED728298 != -1)
      swift_once();
    v36 = sub_1C0303B98();
    __swift_project_value_buffer(v36, (uint64_t)qword_1ED729610);
    v18 = sub_1C0303B80();
    v37 = sub_1C03042E8();
    if (os_log_type_enabled(v18, v37))
    {
      v38 = swift_slowAlloc();
      *(_DWORD *)v38 = 134218496;
      sub_1C03044B0();
      *(_WORD *)(v38 + 12) = 2048;
      sub_1C03044B0();
      *(_WORD *)(v38 + 22) = 2048;
      *(double *)&v57 = v35;
      sub_1C03044B0();
      _os_log_impl(&dword_1C0039000, v18, v37, "Skipping BMIntentEvent, out of date range. %f not in [%f, %f]", (uint8_t *)v38, 0x20u);
      v25 = v38;
      goto LABEL_27;
    }

LABEL_30:
    return 0;
  }
  v39 = v12;
  sub_1C02E8928(v39, (uint64_t *)&v57);
  if (a6 == 2)
  {
    v40 = (void *)*((_QWORD *)&v59 + 1);
  }
  else
  {
    v40 = (void *)*((_QWORD *)&v59 + 1);
    if (((((a6 & 1) == 0) ^ objc_msgSend(*((id *)&v59 + 1), sel__donatedBySiri)) & 1) == 0)
    {
      if (qword_1ED728298 != -1)
        swift_once();
      v47 = sub_1C0303B98();
      __swift_project_value_buffer(v47, (uint64_t)qword_1ED729610);
      *(_OWORD *)v56 = v57;
      v61[0] = v58;
      sub_1C0098758((uint64_t)v56);
      sub_1C0098758((uint64_t)v61);
      v48 = v40;
      sub_1C0098758((uint64_t)v56);
      sub_1C0098758((uint64_t)v61);
      v49 = v48;
      v50 = sub_1C0303B80();
      v51 = sub_1C03042E8();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = (uint8_t *)swift_slowAlloc();
        v53 = swift_slowAlloc();
        *(_QWORD *)&v60 = v53;
        *(_DWORD *)v52 = 136315138;
        objc_msgSend(v49, sel__donatedBySiri);
        v54 = sub_1C0303EF8();
        sub_1C003E6D8(v54, v55, (uint64_t *)&v60);
        sub_1C03044B0();
        swift_bridgeObjectRelease();
        sub_1C0098780((uint64_t)v56);
        sub_1C0098780((uint64_t)v61);

        sub_1C0098780((uint64_t)v56);
        sub_1C0098780((uint64_t)v61);

        _os_log_impl(&dword_1C0039000, v50, v51, "Skipping BMIntentEvent. event isDonatedBySiri=%s", v52, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B98378](v53, -1, -1);
        MEMORY[0x1C3B98378](v52, -1, -1);

        sub_1C0098780((uint64_t)v56);
        sub_1C0098780((uint64_t)v61);

      }
      else
      {

        sub_1C0098780((uint64_t)v56);
        sub_1C0098780((uint64_t)v61);

        sub_1C0098780((uint64_t)v56);
        sub_1C0098780((uint64_t)v61);

        sub_1C0098780((uint64_t)v56);
        sub_1C0098780((uint64_t)v61);

      }
      return 0;
    }
  }
  v42 = (uint64_t *)(a7 + 16);
  v60 = v58;
  v61[0] = v57;
  swift_beginAccess();
  sub_1C0098758((uint64_t)v61);
  sub_1C0098758((uint64_t)&v60);
  v43 = v40;
  sub_1C00ABD50();
  v44 = *(_QWORD *)(*(_QWORD *)(a7 + 16) + 16);
  sub_1C00ABF04();
  v45 = *v42;
  *(_QWORD *)(v45 + 16) = v44 + 1;
  v46 = (_OWORD *)(v45 + 48 * v44);
  v46[2] = v57;
  v46[3] = v58;
  v46[4] = v59;
  swift_endAccess();

  sub_1C0098780((uint64_t)v61);
  sub_1C0098780((uint64_t)&v60);

  return 1;
}

uint64_t sub_1C02E9A10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = sub_1C0301CFC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v3 + v4) & ~v3;
  swift_bridgeObjectRelease();
  v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v0 + v4, v1);
  v6(v0 + v5, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C02E9AB8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_1C0301CFC() - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = *(_QWORD *)(v3 + 64);
  return sub_1C02E90B4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v5, v1 + ((v6 + v4 + v5) & ~v4), *(_BYTE *)(v1 + ((v6 + v4 + v5) & ~v4) + v6), *(_QWORD *)(((((v6 + v4 + v5) & ~v4) + v6) & 0xFFFFFFFFFFFFF8) + v1 + 8));
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

BOOL sub_1C02E9B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  return *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16) < a3;
}

uint64_t sub_1C02E9B84()
{
  swift_release();
  return swift_deallocObject();
}

BOOL sub_1C02E9BA8(uint64_t a1)
{
  uint64_t v1;

  return sub_1C02E9B38(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1C02E9BB0(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  id v29;
  uint64_t v30;
  uint64_t *v31;
  NSObject *log;
  uint8_t *buf;
  uint64_t v34;
  _QWORD *v35;
  os_log_type_t type;
  uint64_t v37;

  v5 = objc_msgSend(a1, sel_interaction);
  v6 = sub_1C0301C00();
  v8 = v7;

  v9 = objc_allocWithZone(MEMORY[0x1E0CB3710]);
  sub_1C00C83C0(v6, v8);
  v10 = sub_1C02EA0D0(v6, v8);
  if (v2)
  {
LABEL_2:
    sub_1C0040600(v6, v8);
    return;
  }
  v11 = v10;
  sub_1C0091278();
  sub_1C0303EB0();
  v12 = (void *)sub_1C0304414();
  swift_bridgeObjectRelease();
  if (!v12)
  {
    if (qword_1ED728298 != -1)
      swift_once();
    v24 = sub_1C0303B98();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED729610);
    v25 = a1;
    v26 = sub_1C0303B80();
    v27 = sub_1C03042F4();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v35 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v28 = 138412290;
      v37 = (uint64_t)v25;
      v29 = v25;
      sub_1C03044B0();
      *v35 = v25;

      _os_log_impl(&dword_1C0039000, v26, v27, "Biome: BMIntentEvent serialized INInteraction is invalid. event=%@", v28, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727620);
      swift_arrayDestroy();
      MEMORY[0x1C3B98378](v35, -1, -1);
      MEMORY[0x1C3B98378](v28, -1, -1);

    }
    else
    {

    }
    type metadata accessor for InferenceError();
    swift_allocObject();
    v30 = sub_1C026A508(2, 0, 0xE000000000000000, 0xD000000000000079, 0x80000001C033A040, 0xD000000000000027, 0x80000001C033A0C0, 93, MEMORY[0x1E0DEE9D8], 1);
    sub_1C0068358((unint64_t *)&qword_1ED727E90, (uint64_t (*)(uint64_t))type metadata accessor for InferenceError, (uint64_t)&protocol conformance descriptor for InferenceError);
    swift_allocError();
    *v31 = v30;
    swift_willThrow();

    goto LABEL_2;
  }
  if (qword_1ED728298 != -1)
    swift_once();
  v13 = sub_1C0303B98();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED729610);
  v14 = v12;
  v15 = sub_1C0303B80();
  v16 = sub_1C03042E8();
  if (os_log_type_enabled(v15, v16))
  {
    type = v16;
    v17 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v37 = v34;
    *(_DWORD *)v17 = 136315138;
    buf = v17;
    v18 = objc_msgSend(v14, sel_intent);
    log = v15;
    v19 = a2;
    v20 = objc_msgSend(v18, sel__className);

    v21 = sub_1C0303EB0();
    v23 = v22;

    a2 = v19;
    sub_1C003E6D8(v21, v23, &v37);
    sub_1C03044B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0039000, log, type, "Got interaction from extractInteraction: %s", buf, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B98378](v34, -1, -1);
    MEMORY[0x1C3B98378](buf, -1, -1);

    sub_1C0040600(v6, v8);
  }
  else
  {
    sub_1C0040600(v6, v8);

  }
  *a2 = v14;
}

id sub_1C02EA0D0(uint64_t a1, unint64_t a2)
{
  void *v2;
  void *v3;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v11[2];

  v3 = v2;
  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = (void *)sub_1C0301BE8();
  v11[0] = 0;
  v7 = objc_msgSend(v3, sel_initForReadingFromData_error_, v6, v11);

  if (v7)
  {
    v8 = v11[0];
  }
  else
  {
    v9 = v11[0];
    sub_1C0301ABC();

    swift_willThrow();
  }
  sub_1C0040600(a1, a2);
  return v7;
}

uint64_t sub_1C02EA1AC(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_intentClass);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C0303EB0();

  return v3;
}

void destroy for BiomeInteractionEvent(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for BiomeInteractionEvent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = v5;
  return a1;
}

_QWORD *assignWithCopy for BiomeInteractionEvent(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  v4 = (void *)a2[5];
  v5 = (void *)a1[5];
  a1[5] = v4;
  v6 = v4;

  return a1;
}

_QWORD *assignWithTake for BiomeInteractionEvent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  v7 = (void *)a1[5];
  a1[4] = a2[4];
  a1[5] = v6;

  return a1;
}

ValueMetadata *type metadata accessor for BiomeInteractionEvent()
{
  return &type metadata for BiomeInteractionEvent;
}

uint64_t OUTLINED_FUNCTION_0_156(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = a1;
  return sub_1C03044B0();
}

void *OUTLINED_FUNCTION_1_143()
{
  uint64_t v0;

  return _Block_copy((const void *)(v0 - 136));
}

uint64_t OUTLINED_FUNCTION_3_146()
{
  return sub_1C03049E4();
}

void sub_1C02EA3B0(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD v24[9];
  int v25;
  uint64_t v26;
  uint64_t v27;

  v24[7] = a5;
  v26 = a4;
  v27 = a6;
  v25 = a3;
  v24[5] = a1;
  v7 = sub_1C0301E40();
  v24[1] = *(_QWORD *)(v7 - 8);
  v24[2] = v7;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_6_0();
  v24[0] = v10 - v9;
  v11 = sub_1C0301E04();
  v24[3] = *(_QWORD *)(v11 - 8);
  v24[4] = v11;
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_6_0();
  v13 = sub_1C0301E34();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_6_0();
  _s19ConvergenceStrategyOMa();
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_19_2();
  v24[6] = v15 - v16;
  v18 = MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v24 - v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728360);
  OUTLINED_FUNCTION_121();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_19_2();
  MEMORY[0x1E0C80A78](v22);
  v24[8] = a2;
  sub_1C00805FC(a2, (uint64_t)v20);
  v23 = (char *)sub_1C02EA558
      + 4 * byte_1C0326FA6[__swift_getEnumTagSinglePayload((uint64_t)v20, 3, v13)];
  __asm { BR              X10 }
}

uint64_t sub_1C02EA558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v7 - 152) + 104))(v0, *MEMORY[0x1E0CB0F88], *(_QWORD *)(v7 - 144));
  v9 = *(_QWORD *)(v7 - 176);
  v8 = *(_QWORD *)(v7 - 168);
  v10 = *(_QWORD *)(v7 - 160);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v9, *MEMORY[0x1E0CB1010], v10);
  sub_1C0301E94();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v10);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 152) + 8))(v0, *(_QWORD *)(v7 - 144));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  v11 = *(_QWORD *)(v7 - 88);
  LODWORD(v10) = *(_DWORD *)(v7 - 100);
  sub_1C00805FC(*(_QWORD *)(v7 - 112), v5);
  if ((v10 & 1) != 0)
  {
    v12 = *(_QWORD *)(v7 - 128);
    __swift_storeEnumTagSinglePayload(v12, 3, 3, v3);
    sub_1C00B9A14(v5, v12);
    v14 = v13;
    sub_1C0080640(v12);
    sub_1C0080640(v5);
    if ((v14 & 1) == 0)
    {
      OUTLINED_FUNCTION_1_144(v6, v11);
      return sub_1C00CF854(v6);
    }
  }
  else
  {
    sub_1C0080640(v5);
  }
  return sub_1C0082138(v6, v11);
}

BOOL sub_1C02EA71C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v17;

  v0 = sub_1C0301EAC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_6_0();
  v4 = v3 - v2;
  v5 = sub_1C0301DC8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_19_2();
  v9 = (char *)(v7 - v8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - v11;
  sub_1C0301DE0();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, *MEMORY[0x1E0CB0EF8], v5);
  v13 = sub_1C0301DBC();
  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  v14(v12, v5);
  if ((v13 & 1) == 0)
    return 0;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x1E0CB1158], v0);
  v15 = sub_1C0301EB8();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  return (v15 & 3) == 0 && v15 % 100 || v15 % 400 == 0;
}

void OUTLINED_FUNCTION_1_144(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1C008067C(a1, *(_QWORD *)(v2 - 120), 0, 1, a2);
}

uint64_t OUTLINED_FUNCTION_2_139(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_4_120@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t DateTime.RecurrencePattern.__allocating_init(withRecurrenceDateTimeRange:recurrencePeriod:totalNumberOfOccurrences:recurrenceDateTimes:fromDateTime:toDateTime:definedValue:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  uint64_t result;
  char v17;

  result = OUTLINED_FUNCTION_18_51();
  v17 = *a8;
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)(result + 32) = a3;
  *(_BYTE *)(result + 40) = a4 & 1;
  *(_QWORD *)(result + 48) = a5;
  *(_QWORD *)(result + 56) = a6;
  *(_QWORD *)(result + 64) = a7;
  *(_BYTE *)(result + 72) = v17;
  return result;
}

void sub_1C02EA954(uint64_t a1, unsigned __int8 a2)
{
  sub_1C02EB718(a1, a2, (void (*)(_QWORD))MEMORY[0x1E0DEDF10]);
}

void sub_1C02EA960(uint64_t a1, unsigned __int8 a2)
{
  sub_1C02EB718(a1, a2, (void (*)(_QWORD))MEMORY[0x1E0DEDF30]);
}

void sub_1C02EA96C(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C2E9C);
}

void sub_1C02EA978(uint64_t a1, uint64_t a2)
{
  sub_1C02EB368(a1, a2, (void (*)(uint64_t))sub_1C0269E18);
}

void sub_1C02EA984()
{
  OUTLINED_FUNCTION_119();
  sub_1C0304B28();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EA9C0(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C2DF0);
}

void sub_1C02EA9CC(uint64_t a1, uint64_t a2)
{
  sub_1C02EB54C(a1, a2, (void (*)(uint64_t))StreetName.Suffix.rawValue.getter);
}

void sub_1C02EA9D8(uint64_t a1, uint64_t a2)
{
  sub_1C02EB54C(a1, a2, (void (*)(uint64_t))StreetType.Value.rawValue.getter);
}

void sub_1C02EA9E4(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C2CE8);
}

void sub_1C02EA9F0(uint64_t a1, uint64_t a2)
{
  sub_1C02EB54C(a1, a2, (void (*)(uint64_t))POILandmark.Prefix.rawValue.getter);
}

void sub_1C02EA9FC()
{
  OUTLINED_FUNCTION_2_140();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EAA44()
{
  char v0;

  OUTLINED_FUNCTION_2_140();
  if (v0)
    OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EAAA8(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C2AE0);
}

void sub_1C02EAAB4(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C29FC);
}

void sub_1C02EAAC0()
{
  char v0;

  OUTLINED_FUNCTION_2_140();
  if (v0)
    OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EAB28()
{
  sub_1C02EB50C();
}

void sub_1C02EAB4C(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C28E4);
}

void sub_1C02EAB58(uint64_t a1, uint64_t a2)
{
  sub_1C02EB54C(a1, a2, (void (*)(uint64_t))AirportLandmark.Prefix.rawValue.getter);
}

void sub_1C02EAB64()
{
  sub_1C02EB50C();
}

void sub_1C02EAB7C(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C2780);
}

void sub_1C02EAB88(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C2714);
}

void sub_1C02EAB94(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C2658);
}

void sub_1C02EABA0(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C254C);
}

void sub_1C02EABB0()
{
  OUTLINED_FUNCTION_2_140();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EAC1C()
{
  OUTLINED_FUNCTION_2_140();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EACA8()
{
  OUTLINED_FUNCTION_2_140();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EACF8()
{
  OUTLINED_FUNCTION_2_140();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EAD40(uint64_t a1, uint64_t a2)
{
  sub_1C02EB54C(a1, a2, (void (*)(uint64_t))BusinessLandmark.Prefix.rawValue.getter);
}

void sub_1C02EAD4C()
{
  sub_1C02EB50C();
}

void sub_1C02EAD68(uint64_t a1, uint64_t a2)
{
  sub_1C02EB368(a1, a2, (void (*)(uint64_t))sub_1C02DC720);
}

void sub_1C02EAD74()
{
  OUTLINED_FUNCTION_2_140();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EADCC(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C221C);
}

void sub_1C02EADD8()
{
  OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_6_12();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EAE08()
{
  OUTLINED_FUNCTION_2_140();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EAE58()
{
  OUTLINED_FUNCTION_2_140();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EAEC4(uint64_t a1, uint64_t a2)
{
  sub_1C02EB368(a1, a2, (void (*)(uint64_t))sub_1C0251B70);
}

void sub_1C02EAED0()
{
  OUTLINED_FUNCTION_2_140();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EAF3C(uint64_t a1, uint64_t a2)
{
  sub_1C02EB54C(a1, a2, (void (*)(uint64_t))OccupantNamePrefix.Value.rawValue.getter);
}

void sub_1C02EAF48(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C1F2C);
}

void sub_1C02EAF54()
{
  OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_6_12();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EAF8C(uint64_t a1, uint64_t a2)
{
  sub_1C02EB54C(a1, a2, (void (*)(uint64_t))OccupantNamePostfix.Value.rawValue.getter);
}

void sub_1C02EAF98()
{
  OUTLINED_FUNCTION_2_140();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EAFE0()
{
  OUTLINED_FUNCTION_2_140();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EB058(uint64_t a1, uint64_t a2)
{
  sub_1C02EB368(a1, a2, (void (*)(uint64_t))sub_1C01D36A0);
}

void sub_1C02EB064()
{
  char v0;

  OUTLINED_FUNCTION_2_140();
  if (v0)
    OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EB0BC(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C1D98);
}

void sub_1C02EB0C8(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C1D00);
}

void sub_1C02EB0D4(uint64_t a1, uint64_t a2)
{
  sub_1C02EB368(a1, a2, (void (*)(uint64_t))sub_1C006AF9C);
}

void sub_1C02EB0E0()
{
  OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EB164(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C1B5C);
}

void sub_1C02EB174()
{
  OUTLINED_FUNCTION_2_140();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EB1D4()
{
  unsigned __int16 v0;

  OUTLINED_FUNCTION_2_140();
  sub_1C02E5C48(v0);
  OUTLINED_FUNCTION_1_16();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EB214()
{
  OUTLINED_FUNCTION_2_140();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EB280(uint64_t a1, uint64_t a2)
{
  sub_1C02EB368(a1, a2, (void (*)(uint64_t))sub_1C02F2110);
}

void sub_1C02EB28C(uint64_t a1, uint64_t a2)
{
  sub_1C02EB368(a1, a2, (void (*)(uint64_t))sub_1C00C519C);
}

void sub_1C02EB298()
{
  OUTLINED_FUNCTION_119();
  sub_1C0303E20();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EB328(uint64_t a1, uint64_t a2)
{
  sub_1C02EB368(a1, a2, (void (*)(uint64_t))sub_1C019F2C0);
}

void sub_1C02EB334(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C17A4);
}

void sub_1C02EB340()
{
  sub_1C02EB50C();
}

void sub_1C02EB35C(uint64_t a1, uint64_t a2)
{
  sub_1C02EB368(a1, a2, (void (*)(uint64_t))sub_1C01DAAA4);
}

void sub_1C02EB368(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  OUTLINED_FUNCTION_119();
  a3(a2);
  OUTLINED_FUNCTION_1_16();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EB3B0(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C1688);
}

void sub_1C02EB3BC(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C15F8);
}

void sub_1C02EB3CC()
{
  OUTLINED_FUNCTION_2_140();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EB430()
{
  OUTLINED_FUNCTION_2_140();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EB498()
{
  OUTLINED_FUNCTION_2_140();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EB4FC(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C1454);
}

void sub_1C02EB50C()
{
  OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_1_16();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EB540(uint64_t a1, uint64_t a2)
{
  sub_1C02EB54C(a1, a2, (void (*)(uint64_t))Country.Value.rawValue.getter);
}

void sub_1C02EB54C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_119();
  a3(v4);
  OUTLINED_FUNCTION_1_16();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EB59C()
{
  OUTLINED_FUNCTION_2_140();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EB604()
{
  char v0;

  OUTLINED_FUNCTION_2_140();
  if (v0)
    OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_1_145();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EB668()
{
  OUTLINED_FUNCTION_119();
  sub_1C0304B10();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EB694(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C1304);
}

void sub_1C02EB6A0()
{
  OUTLINED_FUNCTION_119();
  sub_1C0303E20();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EB6E8()
{
  OUTLINED_FUNCTION_119();
  sub_1C0304B10();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EB718(uint64_t a1, unsigned __int8 a2, void (*a3)(_QWORD))
{
  OUTLINED_FUNCTION_119();
  a3(a2);
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EB74C()
{
  OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_6_12();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

void sub_1C02EB778(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C11E4);
}

void sub_1C02EB784(uint64_t a1, uint64_t a2)
{
  sub_1C02EB790(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1C00C1184);
}

void sub_1C02EB790(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t))
{
  _BYTE v5[72];

  OUTLINED_FUNCTION_119();
  a3(v5, a2);
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

uint64_t sub_1C02EB7C4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  int64_t v29;
  __int128 v30[4];

  v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v4)
      return sub_1C0304618();
    v7 = v5;
    v8 = a2;
    return sub_1C02ED320(v7, v8);
  }
  if (v4)
  {
    if (a2 < 0)
      v7 = a2;
    else
      v7 = a2 & 0xFFFFFFFFFFFFFF8;
    v8 = a1;
    return sub_1C02ED320(v7, v8);
  }
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v28 = a1 + 56;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(a1 + 56);
  result = type metadata accessor for DateTime();
  v12 = 0;
  v29 = (unint64_t)(v9 + 63) >> 6;
  v13 = a2 + 56;
  if (!v11)
    goto LABEL_21;
LABEL_20:
  v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v14 | (v12 << 6); ; i = __clz(__rbit64(v17)) + (v12 << 6))
  {
    v19 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * i);
    sub_1C0304B04();
    swift_retain();
    sub_1C02A4F30(v30);
    v20 = sub_1C0304B40();
    v21 = -1 << *(_BYTE *)(a2 + 32);
    v22 = v20 & ~v21;
    if (((*(_QWORD *)(v13 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
      goto LABEL_43;
    v23 = swift_retain();
    v24 = static DateTime.== infix(_:_:)(v23, v19);
    swift_release();
    if ((v24 & 1) == 0)
    {
      v25 = ~v21;
      while (1)
      {
        v22 = (v22 + 1) & v25;
        if (((*(_QWORD *)(v13 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
          break;
        v26 = swift_retain();
        v27 = static DateTime.== infix(_:_:)(v26, v19);
        swift_release();
        if ((v27 & 1) != 0)
          goto LABEL_40;
      }
LABEL_43:
      swift_release();
      return 0;
    }
LABEL_40:
    result = swift_release();
    if (v11)
      goto LABEL_20;
LABEL_21:
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v16 >= v29)
      return 1;
    v17 = *(_QWORD *)(v28 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v29)
        return 1;
      v17 = *(_QWORD *)(v28 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v29)
          return 1;
        v17 = *(_QWORD *)(v28 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_34:
    v11 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v29)
    return 1;
  v17 = *(_QWORD *)(v28 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_34;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v29)
      return 1;
    v17 = *(_QWORD *)(v28 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_34;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1C02EBACC(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  unint64_t j;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  int64_t v32;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = *(_QWORD *)(result + 56);
  v30 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & v4;
  v31 = (unint64_t)(v5 + 63) >> 6;
  v8 = a2 + 56;
  if ((v6 & v4) == 0)
    goto LABEL_8;
LABEL_7:
  v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v32 = v3;
  for (i = v9 | (v3 << 6); ; i = __clz(__rbit64(v12)) + (v13 << 6))
  {
    v15 = result;
    v16 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * i);
    v18 = *v16;
    v17 = v16[1];
    sub_1C0304B04();
    swift_bridgeObjectRetain();
    sub_1C0303E20();
    v19 = sub_1C0304B40();
    v20 = -1 << *(_BYTE *)(a2 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
      goto LABEL_39;
    v22 = *(_QWORD *)(a2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (!v24 && (OUTLINED_FUNCTION_25_42() & 1) == 0)
    {
      v25 = ~v20;
      for (j = v21 + 1; ; j = v27 + 1)
      {
        v27 = j & v25;
        if (((*(_QWORD *)(v8 + (((j & v25) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v25)) & 1) == 0)
          break;
        v28 = (_QWORD *)(v22 + 16 * v27);
        v29 = *v28 == v18 && v28[1] == v17;
        if (v29 || (OUTLINED_FUNCTION_25_42() & 1) != 0)
          goto LABEL_28;
      }
LABEL_39:
      OUTLINED_FUNCTION_18();
      return 0;
    }
LABEL_28:
    OUTLINED_FUNCTION_18();
    result = v15;
    v3 = v32;
    if (v7)
      goto LABEL_7;
LABEL_8:
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v11 >= v31)
      return 1;
    v12 = *(_QWORD *)(v30 + 8 * v11);
    v13 = v3 + 1;
    if (!v12)
    {
      v13 = v3 + 2;
      if (v3 + 2 >= v31)
        return 1;
      v12 = *(_QWORD *)(v30 + 8 * v13);
      if (!v12)
      {
        v13 = v3 + 3;
        if (v3 + 3 >= v31)
          return 1;
        v12 = *(_QWORD *)(v30 + 8 * v13);
        if (!v12)
          break;
      }
    }
LABEL_21:
    v7 = (v12 - 1) & v12;
    v32 = v13;
  }
  v14 = v3 + 4;
  if (v3 + 4 >= v31)
    return 1;
  v12 = *(_QWORD *)(v30 + 8 * v14);
  if (v12)
  {
    v13 = v3 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v31)
      return 1;
    v12 = *(_QWORD *)(v30 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_21;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1C02EBD34(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      OUTLINED_FUNCTION_23_48();
      goto LABEL_25;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v12 >= v9)
      return 1;
    ++v4;
    if (*(_QWORD *)(v5 + 8 * v12))
      goto LABEL_24;
    v4 = v12 + 1;
    if (v12 + 1 >= v9)
      return 1;
    if (*(_QWORD *)(v5 + 8 * v4))
      goto LABEL_24;
    v4 = v12 + 2;
    if (v12 + 2 >= v9)
      return 1;
    if (*(_QWORD *)(v5 + 8 * v4))
      goto LABEL_24;
    v4 = v12 + 3;
    if (v12 + 3 >= v9)
      return 1;
    if (*(_QWORD *)(v5 + 8 * v4))
      goto LABEL_24;
    v13 = v12 + 4;
    if (v13 >= v9)
      return 1;
    if (!*(_QWORD *)(v5 + 8 * v13))
    {
      while (1)
      {
        v4 = v13 + 1;
        if (__OFADD__(v13, 1))
          goto LABEL_35;
        if (v4 >= v9)
          return 1;
        ++v13;
        if (*(_QWORD *)(v5 + 8 * v4))
          goto LABEL_24;
      }
    }
    v4 = v13;
LABEL_24:
    OUTLINED_FUNCTION_21_56();
LABEL_25:
    v14 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v11);
    OUTLINED_FUNCTION_119();
    sub_1C0304B10();
    result = OUTLINED_FUNCTION_78_0();
    v15 = -1 << *(_BYTE *)(a2 + 32);
    v16 = result & ~v15;
    if (((*(_QWORD *)(v10 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      return 0;
    v17 = *(_QWORD *)(a2 + 48);
  }
  while (*(unsigned __int8 *)(v17 + v16) == v14);
  v18 = ~v15;
  while (1)
  {
    v16 = (v16 + 1) & v18;
    if (((*(_QWORD *)(v10 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      return 0;
    if (*(unsigned __int8 *)(v17 + v16) == v14)
      goto LABEL_7;
  }
}

uint64_t DateTime.RecurrencePattern.recurrenceDateTimeRange.getter()
{
  return swift_retain();
}

uint64_t DateTime.RecurrencePattern.recurrencePeriod.getter()
{
  return swift_retain();
}

uint64_t DateTime.RecurrencePattern.totalNumberOfOccurrences.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t DateTime.RecurrencePattern.recurrenceDateTimes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DateTime.RecurrencePattern.fromDateTime.getter()
{
  return swift_retain();
}

uint64_t DateTime.RecurrencePattern.toDateTime.getter()
{
  return swift_retain();
}

void DateTime.RecurrencePattern.definedValue.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 72);
}

uint64_t DateTime.RecurrencePattern.__allocating_init(withRecurrencePeriod:)(uint64_t a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_18_51();
  DateTime.RecurrencePattern.init(withRecurrencePeriod:)(a1);
  return v2;
}

uint64_t DateTime.RecurrencePattern.init(withRecurrencePeriod:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = a1;
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 40) = 1;
  swift_retain();
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1C03047F8())
  {
    sub_1C01200EC(MEMORY[0x1E0DEE9D8]);
    v2 = v4;
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E8];
  }
  swift_release();
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 48) = v2;
  *(_BYTE *)(v1 + 72) = 3;
  return v1;
}

uint64_t DateTime.RecurrencePattern.__allocating_init(withRecurrenceDateTimeRange:recurrencePeriod:totalNumberOfOccurrences:recurrenceDateTimes:fromDateTime:toDateTime:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_18_51();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)(result + 32) = a3;
  *(_BYTE *)(result + 40) = a4 & 1;
  *(_QWORD *)(result + 48) = a5;
  *(_QWORD *)(result + 56) = a6;
  *(_QWORD *)(result + 64) = a7;
  *(_BYTE *)(result + 72) = 3;
  return result;
}

uint64_t DateTime.RecurrencePattern.init(withRecurrenceDateTimeRange:recurrencePeriod:totalNumberOfOccurrences:recurrenceDateTimes:fromDateTime:toDateTime:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a3;
  *(_BYTE *)(v7 + 40) = a4 & 1;
  *(_QWORD *)(v7 + 48) = a5;
  *(_QWORD *)(v7 + 56) = a6;
  *(_QWORD *)(v7 + 64) = a7;
  return OUTLINED_FUNCTION_52(3);
}

uint64_t DateTime.RecurrencePattern.init(withRecurrenceDateTimeRange:recurrencePeriod:totalNumberOfOccurrences:recurrenceDateTimes:fromDateTime:toDateTime:definedValue:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  uint64_t v8;
  char v9;

  v9 = *a8;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_BYTE *)(v8 + 40) = a4 & 1;
  *(_QWORD *)(v8 + 48) = a5;
  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)(v8 + 64) = a7;
  return OUTLINED_FUNCTION_52(v9);
}

uint64_t sub_1C02EC0B0(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = v1;
  if (*(_QWORD *)(v1 + 16))
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_9_3();
    sub_1C0256BE0();
    OUTLINED_FUNCTION_1_0();
  }
  else
  {
    OUTLINED_FUNCTION_62();
  }
  if (*(_QWORD *)(v1 + 24))
  {
    OUTLINED_FUNCTION_62();
    sub_1C00E2390();
  }
  else
  {
    OUTLINED_FUNCTION_62();
  }
  if (*(_BYTE *)(v1 + 40) == 1)
  {
    OUTLINED_FUNCTION_62();
  }
  else
  {
    OUTLINED_FUNCTION_62();
    sub_1C0304B10();
  }
  v4 = *(_QWORD *)(v1 + 48);
  swift_bridgeObjectRetain();
  sub_1C02ED470(a1, v4);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + 56))
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_45_24();
    OUTLINED_FUNCTION_1_0();
  }
  else
  {
    OUTLINED_FUNCTION_62();
  }
  if (*(_QWORD *)(v2 + 64))
  {
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_45_24();
    OUTLINED_FUNCTION_1_0();
  }
  else
  {
    OUTLINED_FUNCTION_62();
  }
  if (*(_BYTE *)(v2 + 72) == 3)
    return OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_62();
  sub_1C0303E20();
  return swift_bridgeObjectRelease();
}

uint64_t static DateTime.RecurrencePattern.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16))
  {
    if (!v4)
      return 0;
    v5 = type metadata accessor for DateTime.DateTimeRange();
    OUTLINED_FUNCTION_9_3();
    v6 = OUTLINED_FUNCTION_39();
    static DateTime.DateTimeRange.== infix(_:_:)(v6, v4);
    OUTLINED_FUNCTION_38_28();
    OUTLINED_FUNCTION_1_0();
    if ((v5 & 1) == 0)
      return 0;
  }
  else if (v4)
  {
    return 0;
  }
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a2 + 24);
  if (v7)
  {
    if (!v8)
      return 0;
    type metadata accessor for DateTime.Interval();
    if (!static DateTime.Interval.== infix(_:_:)(v7, v8))
      return 0;
  }
  else if (v8)
  {
    return 0;
  }
  v9 = *(_BYTE *)(a2 + 40);
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 40))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32))
      v9 = 1;
    if ((v9 & 1) != 0)
      return 0;
  }
  if ((sub_1C02EB7C4(*(_QWORD *)(a1 + 48), *(_QWORD *)(a2 + 48)) & 1) == 0)
    return 0;
  v10 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (!v10)
      return 0;
    v11 = OUTLINED_FUNCTION_41_23();
    OUTLINED_FUNCTION_9_3();
    v12 = OUTLINED_FUNCTION_39();
    static DateTime.== infix(_:_:)(v12, v10);
    OUTLINED_FUNCTION_38_28();
    OUTLINED_FUNCTION_1_0();
    if ((v11 & 1) == 0)
      return 0;
  }
  else if (v10)
  {
    return 0;
  }
  v13 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (!v13)
      goto LABEL_26;
    return 0;
  }
  if (!v13)
    return 0;
  v14 = OUTLINED_FUNCTION_41_23();
  OUTLINED_FUNCTION_9_3();
  v15 = OUTLINED_FUNCTION_39();
  static DateTime.== infix(_:_:)(v15, v13);
  OUTLINED_FUNCTION_38_28();
  OUTLINED_FUNCTION_1_0();
  if ((v14 & 1) == 0)
    return 0;
LABEL_26:
  v16 = *(unsigned __int8 *)(a1 + 72);
  v17 = *(unsigned __int8 *)(a2 + 72);
  result = v17 == 3 && v16 == 3;
  if (v16 != 3 && v17 != 3)
    return sub_1C025C4A0(*(_BYTE *)(a1 + 72), v17);
  return result;
}

unint64_t sub_1C02EC3A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];

  if (*(_QWORD *)(v0 + 24))
  {
    OUTLINED_FUNCTION_9_3();
    sub_1C03046CC();
    OUTLINED_FUNCTION_26_50();
    v16[0] = 0xD000000000000011;
    v16[1] = 0x80000001C033A130;
    sub_1C00E2498();
    sub_1C0303FD0();
    OUTLINED_FUNCTION_33();
    sub_1C00500A0();
    v2 = v1;
    v3 = *(_QWORD *)(v1 + 16);
    if (v3 >= *(_QWORD *)(v1 + 24) >> 1)
    {
      OUTLINED_FUNCTION_2_13();
      v2 = v14;
    }
    *(_QWORD *)(v2 + 16) = v3 + 1;
    v4 = v2 + 16 * v3;
    *(_QWORD *)(v4 + 32) = 0xD000000000000011;
    *(_QWORD *)(v4 + 40) = 0x80000001C033A130;
    OUTLINED_FUNCTION_1_0();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9D8];
  }
  sub_1C03046CC();
  OUTLINED_FUNCTION_26_50();
  v16[0] = 0xD000000000000014;
  v16[1] = 0x80000001C033A0F0;
  OUTLINED_FUNCTION_41_23();
  sub_1C02ED888((unint64_t *)&qword_1EF5B9810, 255, (uint64_t (*)(uint64_t))type metadata accessor for DateTime, (uint64_t)&protocol conformance descriptor for DateTime);
  sub_1C030424C();
  sub_1C0303FD0();
  OUTLINED_FUNCTION_18();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C00500A0();
    v2 = v12;
  }
  v5 = *(_QWORD *)(v2 + 16);
  if (v5 >= *(_QWORD *)(v2 + 24) >> 1)
  {
    OUTLINED_FUNCTION_2_13();
    v2 = v13;
  }
  *(_QWORD *)(v2 + 16) = v5 + 1;
  v6 = v2 + 16 * v5;
  *(_QWORD *)(v6 + 32) = 0xD000000000000014;
  *(_QWORD *)(v6 + 40) = 0x80000001C033A0F0;
  if (*(_BYTE *)(v0 + 72) != 3)
  {
    strcpy((char *)v16, "definedValue=");
    HIWORD(v16[1]) = -4864;
    sub_1C0303FD0();
    swift_bridgeObjectRelease();
    v7 = v16[0];
    v8 = v16[1];
    v9 = *(_QWORD *)(v2 + 16);
    if (v9 >= *(_QWORD *)(v2 + 24) >> 1)
    {
      OUTLINED_FUNCTION_2_13();
      v2 = v15;
    }
    *(_QWORD *)(v2 + 16) = v9 + 1;
    v10 = v2 + 16 * v9;
    *(_QWORD *)(v10 + 32) = v7;
    *(_QWORD *)(v10 + 40) = v8;
  }
  sub_1C03046CC();
  OUTLINED_FUNCTION_26_50();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7283A0);
  sub_1C004B224();
  sub_1C0303E50();
  OUTLINED_FUNCTION_33();
  sub_1C0303FD0();
  OUTLINED_FUNCTION_18();
  sub_1C0303FD0();
  return 0xD000000000000012;
}

uint64_t sub_1C02EC678(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  char v8;

  if (a1 == 0xD000000000000017 && a2 == 0x80000001C033A190 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C033A1B0 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C033A1D0 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C033A1F0 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = a1 == 0x657461446D6F7266 && a2 == 0xEC000000656D6954;
    if (v5 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      v6 = a1 == 0x6954657461446F74 && a2 == 0xEA0000000000656DLL;
      if (v6 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else if (a1 == 0x5664656E69666564 && a2 == 0xEC00000065756C61)
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else
      {
        v8 = sub_1C0304A08();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 6;
        else
          return 7;
      }
    }
  }
}

uint64_t sub_1C02EC968(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1C02EC9A4 + 4 * byte_1C0326FB0[a1]))(0xD000000000000017, 0x80000001C033A190);
}

unint64_t sub_1C02EC9A4()
{
  return 0xD000000000000010;
}

uint64_t sub_1C02EC9C0()
{
  uint64_t v0;

  return v0 + 8;
}

uint64_t sub_1C02EC9E8()
{
  return 0x657461446D6F7266;
}

uint64_t sub_1C02ECA08()
{
  return 0x6954657461446F74;
}

uint64_t sub_1C02ECA24()
{
  return 0x5664656E69666564;
}

uint64_t sub_1C02ECA44()
{
  unsigned __int8 *v0;

  return sub_1C02EC968(*v0);
}

uint64_t sub_1C02ECA4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C02EC678(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C02ECA70()
{
  sub_1C02ED700();
  return sub_1C0304BAC();
}

uint64_t sub_1C02ECA98()
{
  sub_1C02ED700();
  return sub_1C0304BB8();
}

uint64_t DateTime.RecurrencePattern.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DateTime.RecurrencePattern.__deallocating_deinit()
{
  DateTime.RecurrencePattern.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C02ECB1C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C4220);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02ED700();
  sub_1C0304BA0();
  v14 = *(_QWORD *)(v3 + 16);
  HIBYTE(v13) = 0;
  type metadata accessor for DateTime.DateTimeRange();
  OUTLINED_FUNCTION_19_53(&qword_1EF5B9478, v9, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.DateTimeRange, (uint64_t)&protocol conformance descriptor for DateTime.DateTimeRange);
  OUTLINED_FUNCTION_9_82();
  if (!v2)
  {
    v14 = *(_QWORD *)(v3 + 24);
    HIBYTE(v13) = 1;
    type metadata accessor for DateTime.Interval();
    OUTLINED_FUNCTION_19_53(&qword_1EF5C1F30, v10, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.Interval, (uint64_t)&protocol conformance descriptor for DateTime.Interval);
    OUTLINED_FUNCTION_9_82();
    LOBYTE(v14) = 2;
    sub_1C0304948();
    v14 = *(_QWORD *)(v3 + 48);
    HIBYTE(v13) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C4230);
    sub_1C02ED798(&qword_1EF5C4238, &qword_1EF5BA1A0, (uint64_t)&protocol conformance descriptor for DateTime, MEMORY[0x1E0DEB3B8]);
    sub_1C030499C();
    v14 = *(_QWORD *)(v3 + 56);
    HIBYTE(v13) = 4;
    type metadata accessor for DateTime();
    OUTLINED_FUNCTION_19_53(&qword_1EF5BA1A0, v11, (uint64_t (*)(uint64_t))type metadata accessor for DateTime, (uint64_t)&protocol conformance descriptor for DateTime);
    OUTLINED_FUNCTION_9_82();
    v14 = *(_QWORD *)(v3 + 64);
    HIBYTE(v13) = 5;
    OUTLINED_FUNCTION_9_82();
    LOBYTE(v14) = *(_BYTE *)(v3 + 72);
    HIBYTE(v13) = 6;
    sub_1C02ED73C();
    OUTLINED_FUNCTION_9_82();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1C02ECDEC()
{
  __int128 v0[4];

  sub_1C0304B04();
  sub_1C02EC0B0(v0);
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_1_2();
}

uint64_t DateTime.RecurrencePattern.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DateTime.RecurrencePattern.init(from:)(a1);
  return v2;
}

uint64_t DateTime.RecurrencePattern.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C4248);
  MEMORY[0x1E0C80A78](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02ED700();
  sub_1C0304B88();
  if (v2)
  {
    type metadata accessor for DateTime.RecurrencePattern();
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for DateTime.DateTimeRange();
    OUTLINED_FUNCTION_19_53(&qword_1EF5B9498, v5, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.DateTimeRange, (uint64_t)&protocol conformance descriptor for DateTime.DateTimeRange);
    OUTLINED_FUNCTION_12_36();
    *(_QWORD *)(v1 + 16) = v10;
    type metadata accessor for DateTime.Interval();
    OUTLINED_FUNCTION_19_53(&qword_1EF5C1F40, v6, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.Interval, (uint64_t)&protocol conformance descriptor for DateTime.Interval);
    OUTLINED_FUNCTION_12_36();
    *(_QWORD *)(v1 + 24) = v10;
    LOBYTE(v10) = 2;
    *(_QWORD *)(v1 + 32) = sub_1C0304894();
    *(_BYTE *)(v1 + 40) = v7 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C4230);
    sub_1C02ED798(&qword_1EF5C4250, &qword_1EF5BA1D0, (uint64_t)&protocol conformance descriptor for DateTime, MEMORY[0x1E0DEB3D8]);
    sub_1C03048E8();
    *(_QWORD *)(v1 + 48) = v10;
    type metadata accessor for DateTime();
    OUTLINED_FUNCTION_19_53(&qword_1EF5BA1D0, v9, (uint64_t (*)(uint64_t))type metadata accessor for DateTime, (uint64_t)&protocol conformance descriptor for DateTime);
    OUTLINED_FUNCTION_22_56();
    OUTLINED_FUNCTION_12_36();
    *(_QWORD *)(v1 + 56) = v10;
    OUTLINED_FUNCTION_22_56();
    OUTLINED_FUNCTION_12_36();
    *(_QWORD *)(v1 + 64) = v10;
    sub_1C02ED820();
    OUTLINED_FUNCTION_12_36();
    OUTLINED_FUNCTION_10_5();
    *(_BYTE *)(v1 + 72) = 2;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return v1;
}

uint64_t sub_1C02ED21C(uint64_t *a1, uint64_t *a2)
{
  return static DateTime.RecurrencePattern.== infix(_:_:)(*a1, *a2) & 1;
}

void sub_1C02ED23C()
{
  sub_1C02ECDEC();
}

uint64_t sub_1C02ED25C(__int128 *a1)
{
  return sub_1C02EC0B0(a1);
}

uint64_t sub_1C02ED27C()
{
  __int128 v1[4];

  sub_1C0304B04();
  sub_1C02EC0B0(v1);
  return sub_1C0304B40();
}

uint64_t sub_1C02ED2B8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = DateTime.RecurrencePattern.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1C02ED2E0(_QWORD *a1)
{
  return sub_1C02ECB1C(a1);
}

unint64_t sub_1C02ED300()
{
  return sub_1C02EC3A8();
}

uint64_t sub_1C02ED320(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  char v14;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1C03045F4();
  if (v3 != result)
    return 0;
  v5 = 0;
  v6 = a2 + 56;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    v9 &= v9 - 1;
LABEL_19:
    swift_retain();
    v14 = sub_1C0304630();
    result = swift_release();
    if ((v14 & 1) == 0)
      return 0;
  }
  v11 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v11 >= v10)
    return 1;
  v12 = *(_QWORD *)(v6 + 8 * v11);
  ++v5;
  if (v12)
    goto LABEL_18;
  v5 = v11 + 1;
  if (v11 + 1 >= v10)
    return 1;
  v12 = *(_QWORD *)(v6 + 8 * v5);
  if (v12)
  {
LABEL_18:
    v9 = (v12 - 1) & v12;
    goto LABEL_19;
  }
  v13 = v11 + 2;
  if (v13 >= v10)
    return 1;
  v12 = *(_QWORD *)(v6 + 8 * v13);
  if (v12)
  {
    v5 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    v5 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v5 >= v10)
      return 1;
    v12 = *(_QWORD *)(v6 + 8 * v5);
    ++v13;
    if (v12)
      goto LABEL_18;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1C02ED470(__int128 *a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[9];
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v35;

  v3 = *((_QWORD *)a1 + 8);
  v4 = a1[1];
  v26 = *a1;
  v27 = v4;
  v5 = a1[3];
  v28 = a1[2];
  v29 = v5;
  v30 = v3;
  sub_1C0304B40();
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C03045C4();
    type metadata accessor for DateTime();
    sub_1C02ED888((unint64_t *)&qword_1EF5B9810, 255, (uint64_t (*)(uint64_t))type metadata accessor for DateTime, (uint64_t)&protocol conformance descriptor for DateTime);
    result = sub_1C0304270();
    a2 = v31;
    v7 = v32;
    v8 = v33;
    v9 = v34;
    v10 = v35;
  }
  else
  {
    v11 = -1 << *(_BYTE *)(a2 + 32);
    v7 = a2 + 56;
    v8 = ~v11;
    v12 = -v11;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v10 = v13 & *(_QWORD *)(a2 + 56);
    result = swift_bridgeObjectRetain();
    v9 = 0;
  }
  v14 = 0;
  v15 = (unint64_t)(v8 + 64) >> 6;
  if (a2 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v10)
    {
      v16 = (v10 - 1) & v10;
      v17 = __clz(__rbit64(v10)) | (v9 << 6);
      v18 = v9;
      goto LABEL_23;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v18 >= v15)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v18);
    if (!v20)
    {
      v18 = v9 + 2;
      if (v9 + 2 >= v15)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v18);
      if (!v20)
      {
        v21 = v9 + 3;
        while (v21 < v15)
        {
          v20 = *(_QWORD *)(v7 + 8 * v21++);
          if (v20)
          {
            v18 = v21 - 1;
            goto LABEL_22;
          }
        }
LABEL_26:
        v25 = 0;
LABEL_27:
        sub_1C00B7078();
        return sub_1C0304B10();
      }
    }
LABEL_22:
    v16 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v18 << 6);
LABEL_23:
    v25 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v17);
    v22 = v25;
    swift_retain();
    if (!v22)
      goto LABEL_27;
    while (1)
    {
      sub_1C0304B04();
      sub_1C02A4F30(v24);
      v23 = sub_1C0304B40();
      result = swift_release();
      v14 ^= v23;
      v9 = v18;
      v10 = v16;
      if ((a2 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      v19 = sub_1C0304624();
      if (!v19)
        goto LABEL_26;
      v24[0] = v19;
      type metadata accessor for DateTime();
      swift_dynamicCast();
      if (!v25)
        goto LABEL_27;
      v18 = v9;
      v16 = v10;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1C02ED700()
{
  unint64_t result;

  result = qword_1EF5C4228;
  if (!qword_1EF5C4228)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03271EC, &_s17RecurrencePatternC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C4228);
  }
  return result;
}

unint64_t sub_1C02ED73C()
{
  unint64_t result;

  result = qword_1EF5C4240;
  if (!qword_1EF5C4240)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.RecurrencePattern.DefinedRecurrencePattern, &type metadata for DateTime.RecurrencePattern.DefinedRecurrencePattern);
    atomic_store(result, (unint64_t *)&qword_1EF5C4240);
  }
  return result;
}

uint64_t type metadata accessor for DateTime.RecurrencePattern()
{
  return objc_opt_self();
}

uint64_t sub_1C02ED798(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF5C4230);
    v10 = sub_1C02ED888(a2, 255, (uint64_t (*)(uint64_t))type metadata accessor for DateTime, a3);
    result = MEMORY[0x1C3B9827C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C02ED820()
{
  unint64_t result;

  result = qword_1EF5C4258;
  if (!qword_1EF5C4258)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for DateTime.RecurrencePattern.DefinedRecurrencePattern, &type metadata for DateTime.RecurrencePattern.DefinedRecurrencePattern);
    atomic_store(result, (unint64_t *)&qword_1EF5C4258);
  }
  return result;
}

uint64_t sub_1C02ED85C(uint64_t a1, uint64_t a2)
{
  return sub_1C02ED888(&qword_1EF5C4260, a2, (uint64_t (*)(uint64_t))type metadata accessor for DateTime.RecurrencePattern, (uint64_t)&protocol conformance descriptor for DateTime.RecurrencePattern);
}

uint64_t sub_1C02ED888(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1C3B9827C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for DateTime.RecurrencePattern()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DateTime.RecurrencePattern.__allocating_init(withRecurrencePeriod:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of DateTime.RecurrencePattern.__allocating_init(withRecurrenceDateTimeRange:recurrencePeriod:totalNumberOfOccurrences:recurrenceDateTimes:fromDateTime:toDateTime:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v4 + 144))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of DateTime.RecurrencePattern.__allocating_init(withRecurrenceDateTimeRange:recurrencePeriod:totalNumberOfOccurrences:recurrenceDateTimes:fromDateTime:toDateTime:definedValue:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v4 + 152))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of DateTime.RecurrencePattern.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DateTime.RecurrencePattern.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DateTime.RecurrencePattern.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DateTime.RecurrencePattern.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DateTime.RecurrencePattern.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t _s17RecurrencePatternC10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1C02ED998 + 4 * byte_1C0326FBC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1C02ED9CC + 4 * byte_1C0326FB7[v4]))();
}

uint64_t sub_1C02ED9CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02ED9D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02ED9DCLL);
  return result;
}

uint64_t sub_1C02ED9E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02ED9F0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1C02ED9F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02ED9FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s17RecurrencePatternC10CodingKeysOMa()
{
  return &_s17RecurrencePatternC10CodingKeysON;
}

unint64_t sub_1C02EDA1C()
{
  unint64_t result;

  result = qword_1EF5C4378;
  if (!qword_1EF5C4378)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03271C4, &_s17RecurrencePatternC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C4378);
  }
  return result;
}

unint64_t sub_1C02EDA5C()
{
  unint64_t result;

  result = qword_1EF5C4380;
  if (!qword_1EF5C4380)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327134, &_s17RecurrencePatternC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C4380);
  }
  return result;
}

unint64_t sub_1C02EDA9C()
{
  unint64_t result;

  result = qword_1EF5C4388;
  if (!qword_1EF5C4388)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C032715C, &_s17RecurrencePatternC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF5C4388);
  }
  return result;
}

void sub_1C02EDAD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_10_86();
  v2 = v0 + 56;
  OUTLINED_FUNCTION_14_74();
  v4 = v3 >> 6;
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = 0;
  if (!v1)
    goto LABEL_3;
LABEL_2:
  OUTLINED_FUNCTION_23_48();
  while (1)
  {
    sub_1C0304B04();
    swift_bridgeObjectRetain();
    sub_1C0303E20();
    v9 = OUTLINED_FUNCTION_78_0();
    swift_bridgeObjectRelease();
    v5 ^= v9;
    if (v1)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v6++, 1))
      goto LABEL_17;
    if (v6 >= v4)
    {
LABEL_15:
      swift_release();
      sub_1C0304B10();
      OUTLINED_FUNCTION_15_65();
      return;
    }
    if (!*(_QWORD *)(v2 + 8 * v6))
      break;
LABEL_12:
    OUTLINED_FUNCTION_21_56();
  }
  v8 = v6 + 1;
  if (v6 + 1 >= v4)
    goto LABEL_15;
  if (*(_QWORD *)(v2 + 8 * v8))
  {
    ++v6;
    goto LABEL_12;
  }
  while (1)
  {
    v6 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v6 >= v4)
      goto LABEL_15;
    ++v8;
    if (*(_QWORD *)(v2 + 8 * v6))
      goto LABEL_12;
  }
  __break(1u);
LABEL_17:
  __break(1u);
}

void sub_1C02EDBF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_10_86();
  v2 = 0;
  v3 = 0;
  v4 = v0 + 56;
  OUTLINED_FUNCTION_14_74();
  v6 = v5 >> 6;
  if (!v1)
    goto LABEL_3;
LABEL_2:
  for (v1 &= v1 - 1; ; v1 = (v8 - 1) & v8)
  {
    sub_1C0304B04();
    sub_1C0304B10();
    v2 ^= OUTLINED_FUNCTION_78_0();
    if (v1)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v3++, 1))
      goto LABEL_17;
    if (v3 >= v6)
    {
LABEL_15:
      sub_1C0304B10();
      OUTLINED_FUNCTION_15_65();
      return;
    }
    v8 = *(_QWORD *)(v4 + 8 * v3);
    if (!v8)
      break;
LABEL_12:
    ;
  }
  v9 = v3 + 1;
  if (v3 + 1 >= v6)
    goto LABEL_15;
  v8 = *(_QWORD *)(v4 + 8 * v9);
  if (v8)
  {
    ++v3;
    goto LABEL_12;
  }
  while (1)
  {
    v3 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v3 >= v6)
      goto LABEL_15;
    v8 = *(_QWORD *)(v4 + 8 * v3);
    ++v9;
    if (v8)
      goto LABEL_12;
  }
  __break(1u);
LABEL_17:
  __break(1u);
}

uint64_t OUTLINED_FUNCTION_1_145()
{
  return sub_1C0303E20();
}

uint64_t OUTLINED_FUNCTION_2_140()
{
  return sub_1C0304B04();
}

uint64_t OUTLINED_FUNCTION_10_86()
{
  return sub_1C0304B40();
}

void OUTLINED_FUNCTION_13_70()
{
  sub_1C02EB50C();
}

uint64_t OUTLINED_FUNCTION_18_51()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_19_53(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  return sub_1C02ED888(a1, 255, a3, a4);
}

uint64_t OUTLINED_FUNCTION_22_56()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_25_42()
{
  return sub_1C0304A08();
}

uint64_t sub_1C02EDE08()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  char v21;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5B87E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C03067E0;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = 0;
  *(_BYTE *)(inited + 48) = 2;
  v21 = 1;
  v20 = 1;
  type metadata accessor for DateTime();
  swift_allocObject();
  OUTLINED_FUNCTION_1_23(9, v1, v2, &v21, v3, v4, v5, &v20);
  *(_QWORD *)(inited + 56) = v6;
  *(_OWORD *)(inited + 64) = xmmword_1C0308570;
  *(_BYTE *)(inited + 80) = 0;
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_1_23(10, v7, v8, &v21, v9, v10, v11, &v20);
  *(_QWORD *)(inited + 88) = v12;
  *(_OWORD *)(inited + 96) = xmmword_1C03089A0;
  *(_BYTE *)(inited + 112) = 0;
  OUTLINED_FUNCTION_0_26();
  OUTLINED_FUNCTION_1_23(10, v13, v14, &v21, v15, v16, v17, &v20);
  *(_QWORD *)(inited + 120) = v18;
  sub_1C0099A4C();
  return sub_1C0303DB4();
}

uint64_t INShareETAIntent.memorableParameters()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[4];
  uint64_t v6;

  v1 = MEMORY[0x1E0DEE9E0];
  v6 = MEMORY[0x1E0DEE9E0];
  v2 = sub_1C02EDFAC(v0);
  if (v2)
  {
    v3 = v2;
    v5[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED727C58);
    v5[0] = v3;
    sub_1C006EBFC((uint64_t)v5);
    return v6;
  }
  return v1;
}

uint64_t sub_1C02EDF8C()
{
  return INShareETAIntent.memorableParameters()();
}

uint64_t sub_1C02EDFAC(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_recipients);
  if (!v1)
    return 0;
  v2 = v1;
  sub_1C0132288();
  v3 = sub_1C0304138();

  return v3;
}

uint64_t DateTimeSlotResolutionTask.run(withAlreadyResolvedSlots:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;

  __swift_project_boxed_opaque_existential_1((_QWORD *)v1, *(_QWORD *)(v1 + 24));
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_BYTE *)(v1 + 57);
  v7 = *(_QWORD *)(v1 + 64);
  v8 = *(_BYTE *)(v1 + 72);
  v9 = *(_BYTE *)(v1 + 73);
  v10 = *(_BYTE *)(v1 + 74);
  LOBYTE(v32) = *(_BYTE *)(v1 + 56);
  BYTE1(v32) = v6;
  v33 = v7;
  v34 = v8;
  v35 = v9;
  v36 = v10;
  swift_bridgeObjectRetain();
  DateTimeResolver.makeRecommendation(value:context:spec:)(v4, v5, (unsigned __int8 *)&v32, (uint64_t)&v37);
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    v12 = v37;
    v13 = v38;
    if (qword_1EF5B7F10 != -1)
      swift_once();
    v14 = sub_1C0303B98();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EF5FC6C8);
    sub_1C008739C(v12, v13);
    sub_1C008739C(v12, v13);
    v15 = sub_1C0303B80();
    v16 = sub_1C03042E8();
    if (os_log_type_enabled(v15, v16))
    {
      v39 = a1;
      v17 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      *(_DWORD *)v17 = 136315138;
      sub_1C008739C(v12, v13);
      sub_1C02EE498(v12, v13);
      v19 = v18;
      v21 = v20;
      OUTLINED_FUNCTION_4_121();
      v37 = sub_1C003E6D8(v19, v21, &v32);
      sub_1C03044B0();
      swift_bridgeObjectRelease();
      sub_1C00873C0(v12, v13);
      OUTLINED_FUNCTION_4_121();
      _os_log_impl(&dword_1C0039000, v15, v16, "DateTime recommendations: %s", v17, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }
    sub_1C00873C0(v12, v13);
    OUTLINED_FUNCTION_4_121();

    sub_1C0198AA4(v12, v13, v22, v23, v24, v25, v26, v27, v29, v30, v31, v32);
    result = OUTLINED_FUNCTION_4_121();
    v28 = v33;
    *(_QWORD *)a1 = v32;
    *(_BYTE *)(a1 + 8) = v28;
  }
  return result;
}

void sub_1C02EE290()
{
  uint64_t v0;
  _BYTE v2[136];
  _BYTE v3[136];
  _BYTE v4[136];

  OUTLINED_FUNCTION_9_81(v0, (uint64_t)v2);
  OUTLINED_FUNCTION_9_81((uint64_t)v2, (uint64_t)v4);
  OUTLINED_FUNCTION_9_81(v0, (uint64_t)v3);
  sub_1C0199960((uint64_t)v3);
  OUTLINED_FUNCTION_10_87();
  __asm { BR              X10 }
}

void sub_1C02EE2FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[16];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[17];
  char v27;

  v1 = OUTLINED_FUNCTION_9_81(v0 - 184, (uint64_t)v26);
  OUTLINED_FUNCTION_16_64(v1, v2, v3, v4, v5, v6, v7, v8, v21, v23[0], v23[1], v23[2], v23[3], v23[4], v23[5], v23[6], v23[7], v23[8], v23[9],
    v23[10],
    v23[11],
    v23[12],
    v23[13],
    v23[14],
    v23[15],
    v24,
    v25,
    v26[0]);
  OUTLINED_FUNCTION_2_141();
  v24 = v9;
  v25 = v10;
  memcpy(v23, v11, sizeof(v23));
  v12 = OUTLINED_FUNCTION_9_81(v0 - 184, (uint64_t)&v27);
  v20 = OUTLINED_FUNCTION_21_57(v12, v13, v14, v15, v16, v17, v18, v19, v22, v23[0], v23[1], v23[2], v23[3], v23[4], v23[5], v23[6], v23[7], v23[8], v23[9],
          v23[10],
          v23[11],
          v23[12],
          v23[13],
          v23[14],
          v23[15],
          v24,
          v25,
          v26[0],
          v26[1],
          v26[2],
          v26[3],
          v26[4],
          v26[5],
          v26[6],
          v26[7],
          v26[8],
          v26[9],
          v26[10],
          v26[11],
          v26[12],
          v26[13],
          v26[14],
          v26[15],
          v26[16],
          v27);
  OUTLINED_FUNCTION_18_52();
  sub_1C00C7588(v20);
  sub_1C0303EF8();
  sub_1C0303FD0();
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_18_52();
  OUTLINED_FUNCTION_11_88();
}

void sub_1C02EE498(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C02EE4DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_2_141();
  v3 = v1;
  sub_1C008739C(v0, 0);
  OUTLINED_FUNCTION_41_23();
  OUTLINED_FUNCTION_39_15();
  OUTLINED_FUNCTION_25_43();
  OUTLINED_FUNCTION_27_53();
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_60_1();
  sub_1C00873C0(v0, 0);
  return v3;
}

void sub_1C02EE610(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[720];
  _BYTE v4[720];
  _BYTE v5[720];

  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_9_81(v1, (uint64_t)v3);
  OUTLINED_FUNCTION_9_81((uint64_t)v3, (uint64_t)v5);
  OUTLINED_FUNCTION_9_81(v1, (uint64_t)v4);
  sub_1C0199A18((uint64_t)v4);
  OUTLINED_FUNCTION_10_87();
  __asm { BR              X10 }
}

void sub_1C02EE690()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  uint64_t v3;
  _BYTE v4[712];
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[720];

  OUTLINED_FUNCTION_9_81((uint64_t)v9, (uint64_t)&v7);
  OUTLINED_FUNCTION_26_51();
  OUTLINED_FUNCTION_2_141();
  v5 = v0;
  v6 = v1;
  memcpy(v4, v2, sizeof(v4));
  OUTLINED_FUNCTION_9_81((uint64_t)v9, (uint64_t)&v8);
  v3 = OUTLINED_FUNCTION_23_49();
  OUTLINED_FUNCTION_19_54();
  sub_1C0199A5C(v3);
  sub_1C0303EF8();
  sub_1C0303FD0();
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_19_54();
  OUTLINED_FUNCTION_11_88();
}

void sub_1C02EE83C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for Contact();
  v2 = MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0060770(v0, (uint64_t)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (char *)sub_1C02EE924 + 4 * byte_1C032747C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1C02EE924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_22_57();
  OUTLINED_FUNCTION_2_141();
  OUTLINED_FUNCTION_8_83(v2);
  OUTLINED_FUNCTION_20_47();
  sub_1C0303FD0();
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_60_1();
  v3 = *(_QWORD *)(v1 - 64);
  sub_1C017111C(v0);
  return v3;
}

uint64_t DateTimeSlotResolutionTask.init(query:context:spec:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;

  v4 = *a3;
  v5 = a3[1];
  v6 = *((_QWORD *)a3 + 1);
  v7 = a3[16];
  v8 = a3[17];
  v9 = a3[18];
  *(_QWORD *)(a4 + 40) = result;
  *(_QWORD *)(a4 + 48) = a2;
  *(_BYTE *)(a4 + 56) = v4;
  *(_BYTE *)(a4 + 57) = v5;
  *(_QWORD *)(a4 + 64) = v6;
  *(_BYTE *)(a4 + 72) = v7;
  *(_BYTE *)(a4 + 73) = v8;
  *(_BYTE *)(a4 + 74) = v9;
  *(_QWORD *)(a4 + 24) = &type metadata for DateTimeResolver;
  *(_QWORD *)(a4 + 32) = &off_1E79A1228;
  return result;
}

uint64_t sub_1C02EEA68@<X0>(uint64_t a1@<X8>)
{
  return DateTimeSlotResolutionTask.run(withAlreadyResolvedSlots:)(a1);
}

uint64_t destroy for DateTimeSlotResolutionTask(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DateTimeSlotResolutionTask(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_WORD *)(a1 + 73) = *(_WORD *)(a2 + 73);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DateTimeSlotResolutionTask(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_BYTE *)(a1 + 74) = *(_BYTE *)(a2 + 74);
  return a1;
}

void *__swift_memcpy75_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x4BuLL);
}

uint64_t assignWithTake for DateTimeSlotResolutionTask(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_BYTE *)(a1 + 74) = *(_BYTE *)(a2 + 74);
  return a1;
}

uint64_t getEnumTagSinglePayload for DateTimeSlotResolutionTask(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 75))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DateTimeSlotResolutionTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 74) = 0;
    *(_WORD *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 75) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 75) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DateTimeSlotResolutionTask()
{
  return &type metadata for DateTimeSlotResolutionTask;
}

uint64_t sub_1C02EED10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  v2 = OUTLINED_FUNCTION_6_111(a1);
  v3(v2);
  return v1;
}

uint64_t sub_1C02EED5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  v2 = OUTLINED_FUNCTION_6_111(a1);
  v3(v2);
  return v1;
}

uint64_t OUTLINED_FUNCTION_3_147()
{
  return sub_1C0303FD0();
}

uint64_t OUTLINED_FUNCTION_4_121()
{
  uint64_t v0;
  unsigned __int8 v1;

  return sub_1C00873C0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_6_111(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_8_83@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 64) = a1;
  *(_QWORD *)(v4 - 56) = v1;
  return sub_1C0065660(v2, v3);
}

uint64_t OUTLINED_FUNCTION_10_87()
{
  return 1701736302;
}

uint64_t OUTLINED_FUNCTION_12_71()
{
  return sub_1C03046CC();
}

uint64_t OUTLINED_FUNCTION_14_75()
{
  return sub_1C03046CC();
}

uint64_t OUTLINED_FUNCTION_16_64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  return nullsub_1(&a28);
}

uint64_t OUTLINED_FUNCTION_18_52()
{
  uint64_t v0;

  return sub_1C02EED10(v0);
}

uint64_t OUTLINED_FUNCTION_19_54()
{
  uint64_t v0;

  return sub_1C02EED5C(v0);
}

uint64_t OUTLINED_FUNCTION_20_47()
{
  return sub_1C0303EF8();
}

uint64_t OUTLINED_FUNCTION_21_57(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  return nullsub_1(&a45);
}

uint64_t OUTLINED_FUNCTION_22_57()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C0045588(v1, v0);
}

uint64_t OUTLINED_FUNCTION_23_49()
{
  return nullsub_1(&STACK[0x5B0]);
}

uint64_t OUTLINED_FUNCTION_25_43()
{
  return sub_1C0303EF8();
}

uint64_t OUTLINED_FUNCTION_27_53()
{
  return sub_1C0303FD0();
}

uint64_t sub_1C02EEFAC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C02EEFB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = sub_1C0301DB0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t sub_1C02EF03C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C02EF048(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1C0301DB0();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for AsrPhoneticSequenceFetcher()
{
  uint64_t result;

  result = qword_1EF5C4400;
  if (!qword_1EF5C4400)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C02EF0F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C0301DB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C02EF164(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  void *v4;
  unint64_t v5;
  id v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  os_log_type_t v33;
  uint64_t v34;
  void *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint64_t v40;
  void *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  os_log_type_t v47;
  uint64_t v48;
  void *v49;
  os_log_t v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  id v56;
  os_log_type_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  os_log_type_t v64;
  uint64_t v65;
  void *v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  NSObject *v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  os_log_type_t v77;
  uint8_t *v78;
  void *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  void *v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  void *v92;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100[3];

  v4 = *(void **)(v2 + *(int *)(type metadata accessor for AsrPhoneticSequenceFetcher() + 20));
  if (!v4)
  {
    if (qword_1ED727970 != -1)
      swift_once();
    v76 = OUTLINED_FUNCTION_9_0();
    v71 = OUTLINED_FUNCTION_7(v76, (uint64_t)&unk_1ED7295C8);
    v77 = sub_1C03042F4();
    if (os_log_type_enabled(v71, v77))
    {
      v78 = (uint8_t *)OUTLINED_FUNCTION_4_0();
      *(_WORD *)v78 = 0;
      _os_log_impl(&dword_1C0039000, v71, v77, "[AsrPhoneticSequenceFetcher] could not fetch speech lattice", v78, 2u);
      OUTLINED_FUNCTION_5();
    }
    goto LABEL_81;
  }
  v5 = v4;
  v6 = objc_msgSend((id)v5, sel_recognition);
  v7 = &loc_1C0305000;
  if (!v6 || (v8 = sub_1C02EFC90(v6)) == 0)
  {
    if (qword_1ED727970 == -1)
    {
LABEL_74:
      v69 = OUTLINED_FUNCTION_9_0();
      v70 = __swift_project_value_buffer(v69, (uint64_t)&unk_1ED7295C8);
      v71 = (id)v5;
      sub_1C0303B80();
      v72 = OUTLINED_FUNCTION_34();
      if (OUTLINED_FUNCTION_13_2(v72))
      {
        v73 = (uint8_t *)OUTLINED_FUNCTION_4_0();
        v100[0] = OUTLINED_FUNCTION_4_0();
        *(_DWORD *)v73 = v7[371];
        sub_1C02EFD04(v71);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BC1C0);
        v74 = sub_1C0303EF8();
        sub_1C003E6D8(v74, v75, v100);
        sub_1C03044B0();

        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_13_0(&dword_1C0039000, v70, (os_log_type_t)v3, "[AsrPhoneticSequenceFetcher] speech package does not contain any phrases: %s", v73);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_5();
      }

LABEL_81:
      return 0;
    }
LABEL_88:
    swift_once();
    goto LABEL_74;
  }
  v9 = v8 & 0xFFFFFFFFFFFFFF8;
  v81 = v8;
  v83 = v8 & 0xFFFFFFFFFFFFFF8;
  if (v8 >> 62)
  {
    v10 = sub_1C03047F8();
    v9 = v83;
  }
  else
  {
    v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v11 = v81;
  if (v10)
  {
    v80 = (void *)v5;
    v5 = 0;
    v96 = MEMORY[0x1E0DEE9D8];
    v7 = &unk_1ED7295C8;
    v82 = v10;
    while (1)
    {
      if ((v81 & 0xC000000000000001) != 0)
      {
        v12 = (id)MEMORY[0x1C3B975EC](v5, v81);
      }
      else
      {
        if (v5 >= *(_QWORD *)(v9 + 16))
          goto LABEL_87;
        v12 = *(id *)(v81 + 32 + 8 * v5);
      }
      v85 = v12;
      if (__OFADD__(v5, 1))
        goto LABEL_86;
      v84 = v5 + 1;
      sub_1C02EFD88(v12, (SEL *)&selRef_interpretations, &qword_1EF5C4440);
      if (!v13)
      {
        if (qword_1ED727970 != -1)
          swift_once();
        v63 = OUTLINED_FUNCTION_9_0();
        OUTLINED_FUNCTION_7(v63, (uint64_t)&unk_1ED7295C8);
        v64 = OUTLINED_FUNCTION_34();
        if (OUTLINED_FUNCTION_6_1(v64))
        {
          v65 = OUTLINED_FUNCTION_4_0();
          *(_DWORD *)v65 = 134349056;
          *(_QWORD *)(v65 + 4) = v5;
          OUTLINED_FUNCTION_49_13();
          OUTLINED_FUNCTION_13_0(v66, v67, v68, "[AsrPhoneticSequenceFetcher] interpretations is nil for phrase %{public}ld, skipping phrase", (uint8_t *)v65);
          OUTLINED_FUNCTION_5();
        }

        goto LABEL_71;
      }
      v11 = v13;
      v5 = v13 & 0xFFFFFFFFFFFFFF8;
      if (!(v13 >> 62))
      {
        v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v14)
          break;
        goto LABEL_70;
      }
      v14 = sub_1C03047F8();
      if (v14)
        break;
LABEL_70:

      swift_bridgeObjectRelease();
LABEL_71:
      v5 = v84;
      v9 = v83;
      if (v84 == v82)
      {

        swift_bridgeObjectRelease();
        return v96;
      }
    }
    v3 = 0;
    v90 = v11;
    v91 = v11 & 0xC000000000000001;
    v86 = v11 + 32;
    v88 = v14;
    v89 = v5;
    while (1)
    {
      if (v91)
      {
        v15 = (id)MEMORY[0x1C3B975EC](v3, v11);
      }
      else
      {
        if (v3 >= *(_QWORD *)(v5 + 16))
          goto LABEL_85;
        v15 = *(id *)(v86 + 8 * v3);
      }
      v92 = v15;
      if (__OFADD__(v3++, 1))
        break;
      sub_1C02EFD88(v15, (SEL *)&selRef_tokens, &qword_1EF5C4438);
      if (v17)
      {
        v18 = v17;
        if (v17 >> 62)
          v19 = sub_1C03047F8();
        else
          v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v98 = v19;
        if (v19)
        {
          v87 = v3;
          v20 = 0;
          v99 = v18 & 0xC000000000000001;
          v5 = v19;
          v97 = v18;
          while (1)
          {
            if (v99)
              v21 = (id)MEMORY[0x1C3B975EC](v20, v18);
            else
              v21 = *(id *)(v18 + 8 * v20 + 32);
            v22 = v21;
            v23 = v20 + 1;
            if (__OFADD__(v20, 1))
            {
              __break(1u);
              goto LABEL_83;
            }
            v24 = sub_1C009F8D4(v21, (SEL *)&selRef_text);
            if (!v25)
              goto LABEL_38;
            v26 = v24;
            v27 = v25;
            v28 = sub_1C009F8D4(v22, (SEL *)&selRef_phoneSequence);
            if (!v29)
              break;
            v30 = v29;
            v95 = v28;
            if (qword_1ED727970 != -1)
              swift_once();
            v31 = OUTLINED_FUNCTION_9_0();
            __swift_project_value_buffer(v31, (uint64_t)&unk_1ED7295C8);
            swift_bridgeObjectRetain_n();
            v32 = (void *)sub_1C0303B80();
            v33 = sub_1C03042E8();
            if (OUTLINED_FUNCTION_6_1(v33))
            {
              v34 = OUTLINED_FUNCTION_4_0();
              v100[0] = OUTLINED_FUNCTION_4_0();
              *(_DWORD *)v34 = 136315138;
              OUTLINED_FUNCTION_32();
              *(_QWORD *)(v34 + 4) = sub_1C003E6D8(v26, v27, v100);
              OUTLINED_FUNCTION_11_89();
              OUTLINED_FUNCTION_49_13();
              OUTLINED_FUNCTION_13_0(v35, v36, v37, "[AsrPhoneticSequenceFetcher] interpretation.token.text: %s", (uint8_t *)v34);
              swift_arrayDestroy();
              OUTLINED_FUNCTION_5();
            }

            OUTLINED_FUNCTION_2();
            v100[0] = a1;
            v100[1] = a2;
            sub_1C004F408();
            v11 = (uint64_t)v100;
            if ((sub_1C030454C() & 1) != 0)
            {
              OUTLINED_FUNCTION_21();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
              {
                v44 = v96;
              }
              else
              {
                sub_1C00500A0();
                v44 = v52;
              }
              v45 = *(_QWORD *)(v44 + 16);
              if (v45 >= *(_QWORD *)(v44 + 24) >> 1)
              {
                sub_1C00500A0();
                v44 = v53;
              }
              *(_QWORD *)(v44 + 16) = v45 + 1;
              v96 = v44;
              v46 = v44 + 16 * v45;
              *(_QWORD *)(v46 + 32) = v95;
              *(_QWORD *)(v46 + 40) = v30;
              OUTLINED_FUNCTION_32();
              OUTLINED_FUNCTION_21();
              v11 = sub_1C0303B80();
              v47 = sub_1C03042E8();
              if (OUTLINED_FUNCTION_6_1(v47))
              {
                v48 = OUTLINED_FUNCTION_4_0();
                v100[0] = OUTLINED_FUNCTION_4_0();
                *(_DWORD *)v48 = 136315394;
                OUTLINED_FUNCTION_32();
                *(_QWORD *)(v48 + 4) = sub_1C003E6D8(v26, v27, v100);
                OUTLINED_FUNCTION_11_89();
                *(_WORD *)(v48 + 12) = 2080;
                OUTLINED_FUNCTION_21();
                *(_QWORD *)(v48 + 14) = sub_1C003E6D8(v95, v30, v100);
                swift_bridgeObjectRelease_n();
                OUTLINED_FUNCTION_49_13();
                _os_log_impl(v49, v50, v51, "[AsrPhoneticSequenceFetcher] Contact name token found: %s, phone sequence: %s", (uint8_t *)v48, 0x16u);
                swift_arrayDestroy();
                OUTLINED_FUNCTION_5();
              }

              OUTLINED_FUNCTION_2();
              OUTLINED_FUNCTION_2();
              v7 = &unk_1ED7295C8;
              v18 = v97;
              v5 = v98;
            }
            else
            {
              OUTLINED_FUNCTION_17_0();
              swift_bridgeObjectRelease();

              v7 = &unk_1ED7295C8;
              v18 = v97;
            }
LABEL_52:
            ++v20;
            if (v23 == v5)
            {

              OUTLINED_FUNCTION_17_0();
              v5 = v89;
              v11 = v90;
              v3 = v87;
              v14 = v88;
              goto LABEL_61;
            }
          }
          swift_bridgeObjectRelease();
          v18 = v97;
LABEL_38:
          if (qword_1ED727970 != -1)
            swift_once();
          v38 = OUTLINED_FUNCTION_9_0();
          OUTLINED_FUNCTION_7(v38, (uint64_t)&unk_1ED7295C8);
          v39 = OUTLINED_FUNCTION_34();
          if (OUTLINED_FUNCTION_6_1(v39))
          {
            v40 = OUTLINED_FUNCTION_4_0();
            *(_DWORD *)v40 = 134217984;
            *(_QWORD *)(v40 + 4) = v20;
            OUTLINED_FUNCTION_49_13();
            OUTLINED_FUNCTION_13_0(v41, v42, v43, "[AsrPhoneticSequenceFetcher] no text or phone sequence found for token at index %ld, skipping", (uint8_t *)v40);
            OUTLINED_FUNCTION_5();
          }

          goto LABEL_52;
        }

        OUTLINED_FUNCTION_17_0();
      }
      else
      {
        if (qword_1ED727970 != -1)
          swift_once();
        v54 = OUTLINED_FUNCTION_9_0();
        v55 = __swift_project_value_buffer(v54, (uint64_t)&unk_1ED7295C8);
        v56 = v92;
        sub_1C0303B80();
        v57 = OUTLINED_FUNCTION_34();
        if (OUTLINED_FUNCTION_13_2(v57))
        {
          v58 = OUTLINED_FUNCTION_4_0();
          v100[0] = OUTLINED_FUNCTION_4_0();
          *(_DWORD *)v58 = 136315138;
          v59 = objc_msgSend(v56, sel_description);
          v60 = sub_1C0303EB0();
          v62 = v61;

          *(_QWORD *)(v58 + 4) = sub_1C003E6D8(v60, v62, v100);
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_13_0(&dword_1C0039000, v55, (os_log_type_t)v3, "[AsrPhoneticSequenceFetcher] no tokens found for interpretation %s, skipping", (uint8_t *)v58);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_5();
        }

        v5 = v89;
        v11 = v90;
        v14 = v88;
      }
LABEL_61:
      if (v3 == v14)
        goto LABEL_70;
    }
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
LABEL_83:

  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

void sub_1C02EFC18(uint64_t a1, uint64_t a2)
{
  id v4;

  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (v4)
  {
    sub_1C02EFDF0(a1, a2, v4);
    OUTLINED_FUNCTION_37_0();
  }
  else
  {
    __break(1u);
  }
}

void sub_1C02EFC74(void *a1)
{
  sub_1C02EFD88(a1, (SEL *)&selRef_interpretations, &qword_1EF5C4440);
}

uint64_t sub_1C02EFC90(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_phrases);

  if (!v2)
    return 0;
  sub_1C00447B0(0, &qword_1EF5C4448);
  v3 = sub_1C0304138();

  return v3;
}

uint64_t sub_1C02EFD04(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_dictionaryRepresentation);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C0303D90();

  return v3;
}

void sub_1C02EFD6C(void *a1)
{
  sub_1C02EFD88(a1, (SEL *)&selRef_tokens, &qword_1EF5C4438);
}

void sub_1C02EFD88(void *a1, SEL *a2, unint64_t *a3)
{
  id v4;
  void *v5;

  v4 = objc_msgSend(a1, *a2);
  if (v4)
  {
    v5 = v4;
    sub_1C00447B0(0, a3);
    sub_1C0304138();

  }
  OUTLINED_FUNCTION_37_0();
}

void sub_1C02EFDF0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1C0303E8C();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setPhoneSequence_, v4);

}

uint64_t OUTLINED_FUNCTION_11_89()
{
  return swift_bridgeObjectRelease_n();
}

void sub_1C02EFE4C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v12 = (int *)type metadata accessor for StitchedContactData(0);
  v13 = (uint64_t)a9 + v12[7];
  v14 = type metadata accessor for StitchableInteraction();
  __swift_storeEnumTagSinglePayload(v13, 1, 1, v14);
  v15 = (char *)a9 + v12[8];
  v15[6] = 0;
  *((_WORD *)v15 + 2) = 0;
  *(_DWORD *)v15 = 2;
  v16 = v12[9];
  *(_QWORD *)((char *)a9 + v16) = 0;
  v17 = v12[10];
  *((_BYTE *)a9 + v17) = 0;
  v18 = v12[11];
  *((_BYTE *)a9 + v18) = 0;
  v19 = v12[12];
  *((_BYTE *)a9 + v19) = 0;
  v20 = v12[13];
  *((_BYTE *)a9 + v20) = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  sub_1C02F2AB8(a6, v13);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a9 + v16) = a7;
  *((_BYTE *)a9 + v17) = sub_1C02EFFD4() & 1;
  *((_BYTE *)a9 + v18) = sub_1C02F019C();
  *((_BYTE *)a9 + v19) = sub_1C02F0344() & 1;
  *((_BYTE *)a9 + v20) = sub_1C02F0684() & 1;
  v21 = sub_1C02F0A18(a8);
  swift_release();
  sub_1C0044B78(a8, &qword_1EF5BA150);
  sub_1C0044B78(a6, &qword_1EF5BA150);
  v15[6] = BYTE6(v21);
  *((_WORD *)v15 + 2) = WORD2(v21);
  *(_DWORD *)v15 = v21;
}

uint64_t sub_1C02EFFD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int EnumTagSinglePayload;
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v1 = sub_1C0303784();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v18 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA150);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for StitchedContactData(0);
  sub_1C0044B0C(v0 + *(int *)(v11 + 28), (uint64_t)v10, &qword_1EF5BA150);
  v12 = type metadata accessor for StitchableInteraction();
  v13 = 1;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  sub_1C0044B78((uint64_t)v10, &qword_1EF5BA150);
  if (EnumTagSinglePayload == 1)
  {
    if (*(_QWORD *)(v0 + *(int *)(v11 + 36)))
    {
      swift_retain();
      sub_1C03037F0();
      (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x1E0D9A6E8], v1);
      sub_1C006831C(qword_1EF5C4450, (uint64_t (*)(uint64_t))MEMORY[0x1E0D9A6F0], MEMORY[0x1E0D9A6F8]);
      v15 = sub_1C0303E80();
      swift_release();
      v16 = *(void (**)(char *, uint64_t))(v2 + 8);
      v16(v5, v1);
      v16(v7, v1);
      v13 = v15 ^ 1;
    }
    else
    {
      v13 = 0;
    }
  }
  return v13 & 1;
}

BOOL sub_1C02F019C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _BOOL8 v11;
  char v12;
  uint64_t v14;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA150);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StitchableInteraction();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (uint64_t *)((char *)&v14 - v8);
  v10 = type metadata accessor for StitchedContactData(0);
  sub_1C0044B0C(v0 + *(int *)(v10 + 28), (uint64_t)v3, &qword_1EF5BA150);
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v4) != 1)
  {
    sub_1C01322C4((uint64_t)v3, (uint64_t)v9);
    if (*v9 == 0xD000000000000011 && v9[1] == 0x80000001C0330740)
    {
      sub_1C01322C4((uint64_t)v9, (uint64_t)v7);
    }
    else
    {
      v12 = sub_1C0304A08();
      sub_1C01322C4((uint64_t)v9, (uint64_t)v7);
      v11 = 0;
      if ((v12 & 1) == 0)
      {
LABEL_8:
        sub_1C003DD84((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
        return v11;
      }
    }
    v11 = *(double *)&v7[*(int *)(v4 + 28)] < 5.0;
    goto LABEL_8;
  }
  sub_1C0044B78((uint64_t)v3, &qword_1EF5BA150);
  return 0;
}

uint64_t sub_1C02F0344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int EnumTagSinglePayload;
  char v18;
  char v19;
  char v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v1 = sub_1C0303784();
  v27 = *(_QWORD *)(v1 - 8);
  v28 = v1;
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v27 - v5;
  v7 = (int *)type metadata accessor for StitchedContactData(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v27 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA150);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0044B0C(v0 + v7[7], (uint64_t)v15, &qword_1EF5BA150);
  v16 = type metadata accessor for StitchableInteraction();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16);
  sub_1C0044B78((uint64_t)v15, &qword_1EF5BA150);
  sub_1C00638BC(v0, (uint64_t)v12, type metadata accessor for StitchedContactData);
  if (EnumTagSinglePayload == 1)
  {
    sub_1C003DD84((uint64_t)v12, type metadata accessor for StitchedContactData);
  }
  else
  {
    v18 = v12[v7[11]];
    sub_1C003DD84((uint64_t)v12, type metadata accessor for StitchedContactData);
    if ((v18 & 1) == 0)
    {
      v20 = 1;
      return v20 & 1;
    }
  }
  if (*(_QWORD *)(v0 + 16) == 0xD000000000000011 && *(_QWORD *)(v0 + 24) == 0x80000001C0330740)
  {
    sub_1C00638BC(v0, (uint64_t)v10, type metadata accessor for StitchedContactData);
  }
  else
  {
    v19 = sub_1C0304A08();
    sub_1C00638BC(v0, (uint64_t)v10, type metadata accessor for StitchedContactData);
    if ((v19 & 1) == 0
      && (*((_QWORD *)v10 + 2) != 0xD000000000000013 || *((_QWORD *)v10 + 3) != 0x80000001C03346C0))
    {
      v22 = sub_1C0304A08();
      sub_1C003DD84((uint64_t)v10, type metadata accessor for StitchedContactData);
      v20 = 0;
      if ((v22 & 1) != 0)
        return v20 & 1;
      if (*(_QWORD *)(v0 + v7[9]))
      {
        swift_retain();
        sub_1C03037F0();
        v24 = v27;
        v23 = v28;
        (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v4, *MEMORY[0x1E0D9A6E8], v28);
        sub_1C006831C(qword_1EF5C4450, (uint64_t (*)(uint64_t))MEMORY[0x1E0D9A6F0], MEMORY[0x1E0D9A6F8]);
        v25 = sub_1C0303E80();
        swift_release();
        v26 = *(void (**)(char *, uint64_t))(v24 + 8);
        v26(v4, v23);
        v26(v6, v23);
        v20 = v25 ^ 1;
        return v20 & 1;
      }
      goto LABEL_11;
    }
  }
  sub_1C003DD84((uint64_t)v10, type metadata accessor for StitchedContactData);
LABEL_11:
  v20 = 0;
  return v20 & 1;
}

uint64_t sub_1C02F0684()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD v21[6];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  const char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  MEMORY[0x1E0C80A78](v29);
  v2 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for StitchedContactResolverRecommendation(0);
  v3 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StitchedContactResolverRequest(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + *(int *)(type metadata accessor for StitchedContactData(0) + 48)) != 1)
    return 0;
  v10 = *(_QWORD *)(v0 + 32);
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11)
    return 1;
  v22 = v3;
  v12 = *(int *)(v6 + 24);
  v24 = v10 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v27 = v5 + 24;
  swift_bridgeObjectRetain();
  v13 = 0;
  v26 = "needsConfirmation";
  v21[4] = v7;
  v21[5] = v10;
  v21[2] = v11;
  v21[3] = v9;
  v21[1] = v12;
  do
  {
    if (v13 >= *(_QWORD *)(v10 + 16))
    {
      __break(1u);
      JUMPOUT(0x1C02F0A08);
    }
    v14 = *(_QWORD *)(v7 + 72);
    v25 = v13;
    sub_1C00638BC(v24 + v14 * v13, (uint64_t)v9, type metadata accessor for StitchedContactResolverRequest);
    v15 = *(_QWORD *)&v9[v12];
    swift_bridgeObjectRetain();
    sub_1C003DD84((uint64_t)v9, type metadata accessor for StitchedContactResolverRequest);
    if (*(_QWORD *)(v15 + 16))
    {
      v16 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      v23 = v15;
      sub_1C00638BC(v15 + v16, (uint64_t)v5, type metadata accessor for StitchedContactResolverRecommendation);
      v17 = type metadata accessor for ContactResolverRunTimeData(0);
      sub_1C0044B0C((uint64_t)&v5[*(int *)(v17 + 40)], (uint64_t)v2, &qword_1ED7261A8);
      v18 = (char *)&loc_1C02F089C + *((int *)qword_1C02F0A08 + swift_getEnumCaseMultiPayload());
      __asm { BR              X9 }
    }
    swift_bridgeObjectRelease();
    v13 = v25 + 1;
  }
  while (v25 + 1 != v11);
  v19 = 1;
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t sub_1C02F0A18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v34;
  unint64_t result;
  uint64_t v36;
  char v38;
  double v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD __dst[10];
  _QWORD v49[11];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA150);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&__dst[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&__dst[-1] - v7;
  v9 = (int *)type metadata accessor for StitchableInteraction();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)&__dst[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v14 = (_QWORD *)((char *)&__dst[-1] - v13);
  v15 = type metadata accessor for StitchedContactData(0);
  if ((*(_BYTE *)(v1 + *(int *)(v15 + 48)) & 1) != 0)
    return 2;
  sub_1C0044B0C(v1 + *(int *)(v15 + 28), (uint64_t)v8, &qword_1EF5BA150);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)v9) == 1)
  {
    v16 = (uint64_t)v8;
LABEL_6:
    sub_1C0044B78(v16, &qword_1EF5BA150);
    return 2;
  }
  sub_1C01322C4((uint64_t)v8, (uint64_t)v14);
  sub_1C0044B0C(a1, (uint64_t)v6, &qword_1EF5BA150);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, (uint64_t)v9) == 1)
  {
    sub_1C003DD84((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
    v16 = (uint64_t)v6;
    goto LABEL_6;
  }
  sub_1C01322C4((uint64_t)v6, (uint64_t)v12);
  v17 = *v14;
  v18 = v14[1];
  if ((*v14 != 0xD000000000000011 || v18 != 0x80000001C0330740) && (sub_1C0304A08() & 1) == 0
    || (v17 == *v12 ? (v19 = v18 == v12[1]) : (v19 = 0),
        !v19 && (sub_1C0304A08() & 1) == 0
     || (sub_1C0301C48(), v21 = v20, v20 >= 30.0)
     || (*((_BYTE *)v12 + v9[8]) & 1) != 0
     || (v22 = *(uint64_t *)((char *)v14 + v9[9]), *(_QWORD *)(v22 + 16) != 1)
     || (memcpy(__dst, (const void *)(v22 + 32), sizeof(__dst)),
         v23 = *(_QWORD *)((char *)v12 + v9[9]),
         *(_QWORD *)(v23 + 16) != 1)))
  {
    sub_1C003DD84((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
    sub_1C003DD84((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
    return 2;
  }
  v24 = __dst[0];
  v25 = __dst[1];
  memcpy(v49, (const void *)(v23 + 32), 0x50uLL);
  v26 = v49[0];
  v27 = v49[1];
  KeyPath = swift_getKeyPath();
  sub_1C02F2B00((uint64_t)__dst);
  sub_1C02F2B00((uint64_t)v49);
  v47 = sub_1C02F0F6C(KeyPath, (uint64_t)__dst, (uint64_t)v49);
  swift_release();
  v29 = swift_getKeyPath();
  v30 = sub_1C02F0F6C(v29, (uint64_t)__dst, (uint64_t)v49);
  swift_release();
  v31 = swift_getKeyPath();
  v32 = sub_1C02F0F6C(v31, (uint64_t)__dst, (uint64_t)v49);
  swift_release();
  if (v24 == v26 && v25 == v27)
  {
    v34 = 0x1000000;
  }
  else if ((sub_1C0304A08() & 1) != 0)
  {
    v34 = 0x1000000;
  }
  else
  {
    v34 = 0;
  }
  v36 = v49[3];
  if (__dst[3])
  {
    if (v49[3])
    {
      if (__dst[2] == v49[2] && __dst[3] == v49[3])
        v38 = 1;
      else
        v38 = sub_1C0304A08();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C02F2B74((uint64_t)v49);
      sub_1C02F2B74((uint64_t)__dst);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1C02F2B74((uint64_t)v49);
      sub_1C02F2B74((uint64_t)__dst);
      v38 = 0;
    }
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  sub_1C02F2B74((uint64_t)v49);
  result = sub_1C02F2B74((uint64_t)__dst);
  if (v36)
  {
    v38 = 0;
LABEL_41:
    result = swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  v38 = 1;
LABEL_42:
  v39 = *(double *)((char *)v12 + v9[7]);
  if ((~*(_QWORD *)&v39 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_57;
  }
  if (v39 <= -9.22337204e18)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  if (v39 >= 9.22337204e18)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  result = sub_1C0217E2C((uint64_t)v39);
  if ((~*(_QWORD *)&v21 & 0x7FF0000000000000) == 0)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  if (v21 >= 9.22337204e18)
  {
LABEL_61:
    __break(1u);
    return result;
  }
  v40 = result;
  v41 = sub_1C0217E2C((uint64_t)v21);
  sub_1C003DD84((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
  sub_1C003DD84((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
  v42 = 256;
  if ((v30 & 1) == 0)
    v42 = 0;
  v43 = v42 & 0xFFFFFFFFFFFFFFFELL | v47 & 1;
  v44 = 0x10000;
  if ((v32 & 1) == 0)
    v44 = 0;
  v45 = v43 | v44 | v34;
  v46 = 0x100000000;
  if ((v38 & 1) == 0)
    v46 = 0;
  return v45 | v46 | ((unint64_t)v40 << 40) | ((unint64_t)v41 << 48);
}

uint64_t sub_1C02F0F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (*(_QWORD *)(a2 + 40) == 1)
  {
    v4 = 0;
    v5 = 0;
    v6 = 1;
    v7 = 1;
    if (*(_QWORD *)(a3 + 40) == 1)
      goto LABEL_8;
LABEL_7:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = v15;
    v7 = v16;
    if (v6 == 1)
      goto LABEL_8;
    if (v16 != 1)
    {
      if (v6)
      {
        if (!v16)
        {
          sub_1C00C09A0(v15, 0);
          goto LABEL_10;
        }
        if (v4 != v15 || v6 != v16)
        {
          v10 = sub_1C0304A08();
          sub_1C00C09A0(v15, v16);
          sub_1C00C09A0(v4, v6);
          return v10 & 1;
        }
        sub_1C00C09A0(v4, v6);
        v13 = v4;
        v14 = v6;
      }
      else
      {
        if (v16)
        {
          sub_1C00C09A0(v15, v16);
          v8 = v4;
          v9 = 0;
          goto LABEL_11;
        }
        sub_1C00C09A0(v15, 0);
        v13 = v4;
        v14 = 0;
      }
      sub_1C00C09A0(v13, v14);
      v10 = 1;
      return v10 & 1;
    }
LABEL_10:
    v8 = v4;
    v9 = v6;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_getAtKeyPath();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v15;
  v6 = v16;
  if (*(_QWORD *)(a3 + 40) != 1)
    goto LABEL_7;
  if (v16 != 1)
    goto LABEL_10;
  v5 = 0;
  v7 = 1;
LABEL_8:
  v8 = v5;
  v9 = v7;
LABEL_11:
  sub_1C00C09A0(v8, v9);
  v10 = 0;
  return v10 & 1;
}

uint64_t sub_1C02F119C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  char v13;

  v2 = a1 == 0x64496B736174 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7954746E65746E69 && a2 == 0xEA00000000006570;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7374736575716572 && a2 == 0xE800000000000000;
      if (v7 || (sub_1C0304A08() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x7463617265746E69 && a2 == 0xEB000000006E6F69;
        if (v8 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001C0332650 || (sub_1C0304A08() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = a1 == 0x6552746E65746E69 && a2 == 0xEC000000746C7573;
          if (v9 || (sub_1C0304A08() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v10 = a1 == 0x7475636578457369 && a2 == 0xEA00000000006465;
            if (v10 || (sub_1C0304A08() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v11 = a1 == 0x486B636975517369 && a2 == 0xED00007075676E61;
              if (v11 || (sub_1C0304A08() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                v12 = a1 == 0x7365636375537369 && a2 == 0xE900000000000073;
                if (v12 || (sub_1C0304A08() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else if (a1 == 0xD000000000000018 && a2 == 0x80000001C033A220)
                {
                  swift_bridgeObjectRelease();
                  return 9;
                }
                else
                {
                  v13 = sub_1C0304A08();
                  swift_bridgeObjectRelease();
                  if ((v13 & 1) != 0)
                    return 9;
                  else
                    return 10;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C02F15E8()
{
  return 10;
}

uint64_t sub_1C02F15F0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C02F1620 + 4 * byte_1C0327500[a1]))(0x64496B736174, 0xE600000000000000);
}

uint64_t sub_1C02F1620()
{
  return 0x7954746E65746E69;
}

uint64_t sub_1C02F1640()
{
  return 0x7374736575716572;
}

uint64_t sub_1C02F1658()
{
  return 0x7463617265746E69;
}

unint64_t sub_1C02F1678()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1C02F169C()
{
  return 0x6552746E65746E69;
}

uint64_t sub_1C02F16BC()
{
  return 0x7475636578457369;
}

uint64_t sub_1C02F16D8()
{
  return 0x486B636975517369;
}

uint64_t sub_1C02F16FC()
{
  return 0x7365636375537369;
}

unint64_t sub_1C02F1718()
{
  return 0xD000000000000018;
}

void sub_1C02F1734(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C4638);
  OUTLINED_FUNCTION_73();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_58(a1);
  sub_1C02F91C4();
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_28_16();
  if (!v1)
  {
    OUTLINED_FUNCTION_28_16();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C4648);
    sub_1C02F9200();
    OUTLINED_FUNCTION_169();
    type metadata accessor for StitchedContactData(0);
    type metadata accessor for StitchableInteraction();
    sub_1C006831C(&qword_1EF5C4660, (uint64_t (*)(uint64_t))type metadata accessor for StitchableInteraction, (uint64_t)&unk_1C030D41C);
    OUTLINED_FUNCTION_9_82();
    sub_1C020DEE4();
    OUTLINED_FUNCTION_9_82();
    sub_1C03037FC();
    sub_1C006831C(&qword_1EF5C4668, (uint64_t (*)(uint64_t))MEMORY[0x1E0D9A7E0], MEMORY[0x1E0D9A7F0]);
    OUTLINED_FUNCTION_9_82();
    OUTLINED_FUNCTION_41_3();
    OUTLINED_FUNCTION_41_3();
    OUTLINED_FUNCTION_41_3();
    OUTLINED_FUNCTION_41_3();
  }
  OUTLINED_FUNCTION_75_5(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_52_7();
}

uint64_t sub_1C02F19D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6769666E6F63 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1702125924 && a2 == 0xE400000000000000;
    if (v6 || (sub_1C0304A08() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E656D6D6F636572 && a2 == 0xEF736E6F69746164)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1C0304A08();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1C02F1B28(char a1)
{
  if (!a1)
    return 0x6769666E6F63;
  if (a1 == 1)
    return 1702125924;
  return 0x6E656D6D6F636572;
}

void sub_1C02F1B80(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C46B0);
  OUTLINED_FUNCTION_73();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_58(a1);
  sub_1C02F93C8();
  OUTLINED_FUNCTION_18_1();
  type metadata accessor for PrivatizedContactResolverConfig(0);
  sub_1C006831C(&qword_1EF5BE4E0, type metadata accessor for PrivatizedContactResolverConfig, (uint64_t)&unk_1C03120AC);
  OUTLINED_FUNCTION_8_84();
  if (!v1)
  {
    type metadata accessor for StitchedContactResolverRequest(0);
    sub_1C0301CFC();
    sub_1C006831C(&qword_1ED725900, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1C030499C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C46C0);
    sub_1C02F9404();
    OUTLINED_FUNCTION_8_84();
  }
  OUTLINED_FUNCTION_75_5(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_52_7();
}

uint64_t sub_1C02F1D00()
{
  unsigned __int8 *v0;

  return sub_1C02F15F0(*v0);
}

uint64_t sub_1C02F1D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C02F119C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C02F1D2C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C02F15E8();
  *a1 = result;
  return result;
}

uint64_t sub_1C02F1D50()
{
  sub_1C02F91C4();
  return sub_1C0304BAC();
}

uint64_t sub_1C02F1D78()
{
  sub_1C02F91C4();
  return sub_1C0304BB8();
}

void sub_1C02F1DA0(_QWORD *a1)
{
  sub_1C02F1734(a1);
}

uint64_t sub_1C02F1DB4()
{
  char *v0;

  return sub_1C02F1B28(*v0);
}

uint64_t sub_1C02F1DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C02F19D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C02F1DE0()
{
  sub_1C02F93C8();
  return sub_1C0304BAC();
}

uint64_t sub_1C02F1E08()
{
  sub_1C02F93C8();
  return sub_1C0304BB8();
}

void sub_1C02F1E30(_QWORD *a1)
{
  sub_1C02F1B80(a1);
}

uint64_t sub_1C02F1E44(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x44656D69546E7572 && a2 == 0xEB00000000617461;
  if (v2 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6F725072657375 && a2 == 0xEA00000000007470)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C02F1F54(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6D6F725072657375;
  else
    return 0x44656D69546E7572;
}

void sub_1C02F1F98(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C46D8);
  OUTLINED_FUNCTION_73();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_58(a1);
  sub_1C02F9480();
  OUTLINED_FUNCTION_18_1();
  type metadata accessor for ContactResolverRunTimeData(0);
  sub_1C006831C(&qword_1EF5BE4F0, type metadata accessor for ContactResolverRunTimeData, (uint64_t)&unk_1C030FA28);
  OUTLINED_FUNCTION_8_84();
  if (!v1)
  {
    type metadata accessor for StitchedContactResolverRecommendation(0);
    sub_1C020DE6C();
    sub_1C0304954();
  }
  OUTLINED_FUNCTION_75_5(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_52_7();
}

uint64_t sub_1C02F20CC()
{
  unint64_t v0;

  sub_1C030484C();
  OUTLINED_FUNCTION_10_2();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1C02F2110(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_41_27 + 4
                                                                                                 * byte_1C032750A[a1]))(6775156, 0xE300000000000000);
}

uint64_t sub_1C02F2148()
{
  return 0x64657463656C6573;
}

uint64_t sub_1C02F2164(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_41_27_0
                                                            + 4 * byte_1C032750F[a1]))(6775156, 0xE300000000000000);
}

uint64_t sub_1C02F219C()
{
  return 0x64657463656C6573;
}

uint64_t sub_1C02F21B8()
{
  char *v0;

  return sub_1C02F1F54(*v0);
}

uint64_t sub_1C02F21C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C02F1E44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C02F21E4()
{
  sub_1C02F9480();
  return sub_1C0304BAC();
}

uint64_t sub_1C02F220C()
{
  sub_1C02F9480();
  return sub_1C0304BB8();
}

void sub_1C02F2234(_QWORD *a1)
{
  sub_1C02F1F98(a1);
}

void sub_1C02F2248(char *a1)
{
  sub_1C025D820(*a1);
}

void sub_1C02F2254()
{
  unsigned __int8 *v0;

  sub_1C00CED6C(*v0);
}

void sub_1C02F225C(uint64_t a1)
{
  char *v1;

  sub_1C00C19D0(a1, *v1);
}

void sub_1C02F2264(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EB280(a1, *v1);
}

uint64_t sub_1C02F226C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C02F20CC();
  *a1 = result;
  return result;
}

uint64_t sub_1C02F2298@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1C02F2110(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C02F22C0()
{
  unsigned __int8 *v0;

  return sub_1C02F2164(*v0);
}

uint64_t sub_1C02F22C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C02F210C();
  *a1 = result;
  return result;
}

void sub_1C02F22EC(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1C02F22F8()
{
  sub_1C02F927C();
  return sub_1C0304BAC();
}

uint64_t sub_1C02F2320()
{
  sub_1C02F927C();
  return sub_1C0304BB8();
}

void sub_1C02F2348()
{
  uint64_t v0;
  char v1;
  char v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_40_0();
  v2 = v1;
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C4670);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_1_3();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1C02F927C();
  sub_1C0304BA0();
  if (v2)
  {
    OUTLINED_FUNCTION_28_16();
    if (!v0)
    {
      OUTLINED_FUNCTION_164();
      OUTLINED_FUNCTION_18_53(&qword_1EF5BD970, v7, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
      OUTLINED_FUNCTION_34_41();
      OUTLINED_FUNCTION_169();
      OUTLINED_FUNCTION_164();
      OUTLINED_FUNCTION_18_53(&qword_1EF5C4680, v8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEE988]);
      OUTLINED_FUNCTION_34_41();
      goto LABEL_6;
    }
  }
  else
  {
    OUTLINED_FUNCTION_19_55();
    OUTLINED_FUNCTION_28_16();
    if (!v0)
    {
      OUTLINED_FUNCTION_28_16();
      sub_1C02F92B8();
LABEL_6:
      OUTLINED_FUNCTION_169();
    }
  }
  OUTLINED_FUNCTION_75_5(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  OUTLINED_FUNCTION_28_0();
}

uint64_t sub_1C02F2550()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;

  OUTLINED_FUNCTION_40_0();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C4690);
  OUTLINED_FUNCTION_73();
  MEMORY[0x1E0C80A78](v3);
  v4 = v2[3];
  OUTLINED_FUNCTION_58(v2);
  sub_1C02F927C();
  OUTLINED_FUNCTION_15_66();
  if (!v0)
  {
    LOBYTE(v12) = 0;
    v4 = OUTLINED_FUNCTION_29_41();
    v6 = v5;
    v7 = v4 == 0x616D7269666E6F63 && v5 == 0xEC0000006E6F6974;
    if (v7 || (OUTLINED_FUNCTION_19_55(), (OUTLINED_FUNCTION_14_76() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      v4 = OUTLINED_FUNCTION_29_41();
      sub_1C02F938C();
      OUTLINED_FUNCTION_12_47();
      OUTLINED_FUNCTION_0_3();
    }
    else if (v4 == 0xD000000000000015 && v6 == 0x80000001C0328740
           || (OUTLINED_FUNCTION_14_76() & 1) != 0
           || v4 == 0xD000000000000014 && v6 == 0x80000001C0328760
           || (OUTLINED_FUNCTION_14_76() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_164();
      OUTLINED_FUNCTION_18_53(&qword_1EF5BD988, v9, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
      OUTLINED_FUNCTION_12_47();
      v4 = v12;
      OUTLINED_FUNCTION_164();
      OUTLINED_FUNCTION_18_53(&qword_1EF5C46A0, v10, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEE9A0]);
      OUTLINED_FUNCTION_12_47();
      OUTLINED_FUNCTION_0_3();
    }
    else
    {
      sub_1C02F92F4();
      swift_allocError();
      *v11 = v4;
      v11[1] = v6;
      swift_willThrow();
      OUTLINED_FUNCTION_0_3();
    }
  }
  OUTLINED_FUNCTION_10_0();
  return v4;
}

uint64_t sub_1C02F2924()
{
  unint64_t v0;

  sub_1C030484C();
  OUTLINED_FUNCTION_10_2();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1C02F2964(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C02F299C + 4 * byte_1C0327514[a1]))(0x656D7269666E6F63, 0xE900000000000064);
}

uint64_t sub_1C02F299C()
{
  return 0x64657463656A6572;
}

uint64_t sub_1C02F29B4()
{
  return 0x656C6C65636E6163;
}

uint64_t sub_1C02F29C8()
{
  return 0x7465736E75;
}

uint64_t sub_1C02F29DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  char v6;

  result = sub_1C02F2550();
  if (!v1)
  {
    *(_QWORD *)a1 = result;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
    *(_BYTE *)(a1 + 24) = v6;
  }
  return result;
}

void sub_1C02F2A0C()
{
  sub_1C02F2348();
}

void sub_1C02F2A2C(char *a1)
{
  sub_1C025C9DC(*a1);
}

void sub_1C02F2A38()
{
  unsigned __int8 *v0;

  sub_1C00CEDB0(*v0);
}

void sub_1C02F2A40(uint64_t a1)
{
  char *v1;

  sub_1C00C15F8(a1, *v1);
}

void sub_1C02F2A48(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C02EB3BC(a1, *v1);
}

uint64_t sub_1C02F2A50@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C02F2924();
  *a1 = result;
  return result;
}

uint64_t sub_1C02F2A7C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1C02F2964(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t type metadata accessor for StitchedContactData(uint64_t a1)
{
  return sub_1C003CD30(a1, (uint64_t *)&unk_1EF5C45D8);
}

uint64_t sub_1C02F2AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C02F2B00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C00EE078(v2, v3);
  return a1;
}

uint64_t sub_1C02F2B74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0066AFC(v2, v3);
  return a1;
}

uint64_t type metadata accessor for StitchedContactResolverRecommendation(uint64_t a1)
{
  return sub_1C003CD30(a1, qword_1EF5C4548);
}

uint64_t type metadata accessor for StitchedContactResolverRequest(uint64_t a1)
{
  return sub_1C003CD30(a1, qword_1EF5C44B0);
}

uint64_t sub_1C02F2C10(uint64_t a1)
{
  return sub_1C01DAD5C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_1C02F2C24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1C01DAD00(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t sub_1C02F2C80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1C01DAD00(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1C01DAD5C(v7, v8, v9, v10);
  return a1;
}

uint64_t sub_1C02F2CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1C01DAD5C(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_1C02F2D38(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C02F2D78(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

void type metadata accessor for StitchedContactUserPrompt()
{
  OUTLINED_FUNCTION_17_2();
}

_QWORD *sub_1C02F2DCC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v26;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v8 = a2[4];
    a1[3] = a2[3];
    a1[4] = v8;
    v9 = a2[6];
    a1[5] = a2[5];
    a1[6] = v9;
    v10 = (int *)type metadata accessor for PrivatizedContactResolverConfig(0);
    v11 = v10[8];
    v26 = (char *)v4 + v11;
    v12 = (char *)a2 + v11;
    v13 = sub_1C0301DB0();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v26, v12, v13);
    *((_BYTE *)v4 + v10[9]) = *((_BYTE *)a2 + v10[9]);
    *(_QWORD *)((char *)v4 + v10[10]) = *(_QWORD *)((char *)a2 + v10[10]);
    *((_BYTE *)v4 + v10[11]) = *((_BYTE *)a2 + v10[11]);
    *(_QWORD *)((char *)v4 + v10[12]) = *(_QWORD *)((char *)a2 + v10[12]);
    *((_BYTE *)v4 + v10[13]) = *((_BYTE *)a2 + v10[13]);
    v15 = v10[14];
    v16 = (_QWORD *)((char *)v4 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = *(int *)(a3 + 20);
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_1C0301CFC();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23(v20, v21, v22);
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C02F2F60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for PrivatizedContactResolverConfig(0) + 32);
  v5 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_1C0301CFC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C02F3018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = (int *)type metadata accessor for PrivatizedContactResolverConfig(0);
  v9 = v8[8];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1C0301DB0();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  *(_BYTE *)(a1 + v8[9]) = *(_BYTE *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_BYTE *)(a1 + v8[11]) = *(_BYTE *)(a2 + v8[11]);
  *(_QWORD *)(a1 + v8[12]) = *(_QWORD *)(a2 + v8[12]);
  *(_BYTE *)(a1 + v8[13]) = *(_BYTE *)(a2 + v8[13]);
  v14 = v8[14];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = *(int *)(a3 + 20);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_1C0301CFC();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22(v19, v20, v21);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C02F3180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for PrivatizedContactResolverConfig(0);
  v7 = v6[8];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
  *(_QWORD *)(a1 + v6[10]) = *(_QWORD *)(a2 + v6[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
  *(_QWORD *)(a1 + v6[12]) = *(_QWORD *)(a2 + v6[12]);
  *(_BYTE *)(a1 + v6[13]) = *(_BYTE *)(a2 + v6[13]);
  v11 = v6[14];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = *(int *)(a3 + 20);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_1C0301CFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C02F3318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = (int *)type metadata accessor for PrivatizedContactResolverConfig(0);
  v7 = v6[8];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
  *(_QWORD *)(a1 + v6[10]) = *(_QWORD *)(a2 + v6[10]);
  *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
  *(_QWORD *)(a1 + v6[12]) = *(_QWORD *)(a2 + v6[12]);
  *(_BYTE *)(a1 + v6[13]) = *(_BYTE *)(a2 + v6[13]);
  *(_OWORD *)(a1 + v6[14]) = *(_OWORD *)(a2 + v6[14]);
  v11 = *(int *)(a3 + 20);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1C0301CFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1C02F3428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = (int *)type metadata accessor for PrivatizedContactResolverConfig(0);
  v10 = v9[8];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1C0301DB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  *(_BYTE *)(a1 + v9[9]) = *(_BYTE *)(a2 + v9[9]);
  *(_QWORD *)(a1 + v9[10]) = *(_QWORD *)(a2 + v9[10]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v9[11]) = *(_BYTE *)(a2 + v9[11]);
  *(_QWORD *)(a1 + v9[12]) = *(_QWORD *)(a2 + v9[12]);
  *(_BYTE *)(a1 + v9[13]) = *(_BYTE *)(a2 + v9[13]);
  v14 = v9[14];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (uint64_t *)(a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  v19 = *(int *)(a3 + 20);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_1C0301CFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C02F3570()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C02F357C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = OUTLINED_FUNCTION_32_36();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
LABEL_5:
    OUTLINED_FUNCTION_46(v8, v3, v7);
    return;
  }
  v9 = sub_1C0301CFC();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v8 = v4 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_33_15(*(_QWORD *)(v4 + *(int *)(a3 + 24)));
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C02F35F4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C02F3600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  OUTLINED_FUNCTION_32_36();
  OUTLINED_FUNCTION_0_6();
  if (v10)
  {
    v8 = v7;
    v9 = v5;
  }
  else
  {
    sub_1C0301CFC();
    OUTLINED_FUNCTION_0_6();
    if (!v10)
    {
      *(_QWORD *)(v5 + *(int *)(a4 + 24)) = (v4 - 1);
      OUTLINED_FUNCTION_37_0();
      return;
    }
    v8 = v11;
    v9 = v5 + *(int *)(a4 + 20);
  }
  OUTLINED_FUNCTION_49_3(v9, v4, v4, v8);
}

uint64_t sub_1C02F3670()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for PrivatizedContactResolverConfig(319);
  if (v1 <= 0x3F)
  {
    result = sub_1C0301CFC();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C02F3700(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(uint64_t, uint64_t, uint64_t);
  uint64_t v132;
  void *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *__dst;
  char *__dsta;
  uint64_t *v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v17 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
    return a1;
  }
  v5 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  v6 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v6;
  v7 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v7;
  v8 = a2[8];
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_QWORD *)(a1 + 64) = v8;
  v9 = a2[10];
  *(_QWORD *)(a1 + 72) = a2[9];
  *(_QWORD *)(a1 + 80) = v9;
  v10 = a2[12];
  *(_QWORD *)(a1 + 88) = a2[11];
  *(_QWORD *)(a1 + 96) = v10;
  v12 = a2;
  v11 = a2[14];
  *(_QWORD *)(a1 + 104) = a2[13];
  *(_QWORD *)(a1 + 112) = v11;
  v13 = a2[16];
  *(_QWORD *)(a1 + 120) = a2[15];
  *(_QWORD *)(a1 + 128) = v13;
  v14 = a2[18];
  *(_QWORD *)(a1 + 136) = a2[17];
  *(_QWORD *)(a1 + 144) = v14;
  v15 = a2[20];
  *(_QWORD *)(a1 + 152) = a2[19];
  *(_QWORD *)(a1 + 160) = v15;
  v154 = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v154)
  {
    v16 = v12[22];
    *(_QWORD *)(a1 + 168) = v12[21];
    *(_QWORD *)(a1 + 176) = v16;
    *(_QWORD *)(a1 + 184) = v154;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(v12 + 21);
    *(_QWORD *)(a1 + 184) = v12[23];
  }
  v18 = v12[26];
  if (v18)
  {
    *(_BYTE *)(a1 + 192) = *((_BYTE *)v12 + 192);
    *(_QWORD *)(a1 + 200) = v12[25];
    *(_QWORD *)(a1 + 208) = v18;
    v19 = v12[28];
    *(_QWORD *)(a1 + 216) = v12[27];
    *(_QWORD *)(a1 + 224) = v19;
    *(_QWORD *)(a1 + 232) = v12[29];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *((_OWORD *)v12 + 13);
    *(_OWORD *)(a1 + 192) = *((_OWORD *)v12 + 12);
    *(_OWORD *)(a1 + 208) = v20;
    *(_OWORD *)(a1 + 224) = *((_OWORD *)v12 + 14);
  }
  *(_QWORD *)(a1 + 240) = v12[30];
  *(_BYTE *)(a1 + 248) = *((_BYTE *)v12 + 248);
  *(_QWORD *)(a1 + 256) = v12[32];
  *(_BYTE *)(a1 + 264) = *((_BYTE *)v12 + 264);
  v21 = v12[35];
  *(_QWORD *)(a1 + 272) = v12[34];
  *(_QWORD *)(a1 + 280) = v21;
  *(_WORD *)(a1 + 288) = *((_WORD *)v12 + 144);
  *(_QWORD *)(a1 + 296) = v12[37];
  v22 = (int *)type metadata accessor for ContactResolverRunTimeData(0);
  v23 = v22[10];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)((char *)v12 + v23);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *v24 = *v25;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    goto LABEL_20;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      goto LABEL_20;
    }
    v150 = v12;
    v152 = v26;
    v155 = a1;
    v28 = v25[1];
    *v24 = *v25;
    v24[1] = v28;
    *((_BYTE *)v24 + 16) = *((_BYTE *)v25 + 16);
    v29 = v25[4];
    v24[3] = v25[3];
    v24[4] = v29;
    v30 = v25[6];
    v24[5] = v25[5];
    v24[6] = v30;
    v31 = v25[8];
    v24[7] = v25[7];
    v24[8] = v31;
    v32 = v25[10];
    v24[9] = v25[9];
    v24[10] = v32;
    v33 = v25[12];
    v24[11] = v25[11];
    v24[12] = v33;
    v34 = v25[14];
    v24[13] = v25[13];
    v24[14] = v34;
    v35 = v25[16];
    v24[15] = v25[15];
    v24[16] = v35;
    v36 = v25[18];
    v24[17] = v25[17];
    v24[18] = v36;
    v37 = v25[20];
    v24[19] = v25[19];
    v24[20] = v37;
    v38 = v25[22];
    v24[21] = v25[21];
    v24[22] = v38;
    v39 = v25[24];
    v24[23] = v25[23];
    v24[24] = v39;
    v40 = v25[26];
    v24[25] = v25[25];
    v24[26] = v40;
    v24[27] = v25[27];
    v41 = (int *)type metadata accessor for Contact();
    v42 = v41[19];
    __dst = (char *)v24 + v42;
    v43 = (char *)v25 + v42;
    v44 = sub_1C0301954();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
      goto LABEL_16;
LABEL_18:
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(__dst, v43, v44);
    __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v44);
    goto LABEL_19;
  }
  v150 = v12;
  v152 = v26;
  v155 = a1;
  v45 = v25[1];
  *v24 = *v25;
  v24[1] = v45;
  *((_BYTE *)v24 + 16) = *((_BYTE *)v25 + 16);
  v46 = v25[4];
  v24[3] = v25[3];
  v24[4] = v46;
  v47 = v25[6];
  v24[5] = v25[5];
  v24[6] = v47;
  v48 = v25[8];
  v24[7] = v25[7];
  v24[8] = v48;
  v49 = v25[10];
  v24[9] = v25[9];
  v24[10] = v49;
  v50 = v25[12];
  v24[11] = v25[11];
  v24[12] = v50;
  v51 = v25[14];
  v24[13] = v25[13];
  v24[14] = v51;
  v52 = v25[16];
  v24[15] = v25[15];
  v24[16] = v52;
  v53 = v25[18];
  v24[17] = v25[17];
  v24[18] = v53;
  v54 = v25[20];
  v24[19] = v25[19];
  v24[20] = v54;
  v55 = v25[22];
  v24[21] = v25[21];
  v24[22] = v55;
  v56 = v25[24];
  v24[23] = v25[23];
  v24[24] = v56;
  v57 = v25[26];
  v24[25] = v25[25];
  v24[26] = v57;
  v24[27] = v25[27];
  v41 = (int *)type metadata accessor for Contact();
  v58 = v41[19];
  __dst = (char *)v24 + v58;
  v43 = (char *)v25 + v58;
  v44 = sub_1C0301954();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
    goto LABEL_18;
LABEL_16:
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
  memcpy(__dst, v43, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
LABEL_19:
  v12 = v150;
  *(_QWORD *)((char *)v24 + v41[20]) = *(_QWORD *)((char *)v25 + v41[20]);
  *((_BYTE *)v24 + v41[21]) = *((_BYTE *)v25 + v41[21]);
  v60 = v41[22];
  v61 = (_QWORD *)((char *)v24 + v60);
  v62 = (_QWORD *)((char *)v25 + v60);
  v63 = v62[1];
  *v61 = *v62;
  v61[1] = v63;
  *((_BYTE *)v24 + v41[23]) = *((_BYTE *)v25 + v41[23]);
  v64 = v41[24];
  v65 = (_QWORD *)((char *)v24 + v64);
  v66 = (_QWORD *)((char *)v25 + v64);
  v67 = v66[1];
  *v65 = *v66;
  v65[1] = v67;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = v152;
  swift_storeEnumTagMultiPayload();
  a1 = v155;
LABEL_20:
  *(_BYTE *)(a1 + v22[11]) = *((_BYTE *)v12 + v22[11]);
  *(_BYTE *)(a1 + v22[12]) = *((_BYTE *)v12 + v22[12]);
  *(_BYTE *)(a1 + v22[13]) = *((_BYTE *)v12 + v22[13]);
  v68 = v22[14];
  v69 = (_QWORD *)(a1 + v68);
  v70 = (uint64_t *)((char *)v12 + v68);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v12 + v68, 1, v26))
  {
    v72 = swift_getEnumCaseMultiPayload();
    switch(v72)
    {
      case 2:
        *v69 = *v70;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        v151 = v12;
        v153 = v26;
        v156 = a1;
        v90 = v70[1];
        *v69 = *v70;
        v69[1] = v90;
        *((_BYTE *)v69 + 16) = *((_BYTE *)v70 + 16);
        v91 = v70[4];
        v69[3] = v70[3];
        v69[4] = v91;
        v92 = v70[6];
        v69[5] = v70[5];
        v69[6] = v92;
        v93 = v70[8];
        v69[7] = v70[7];
        v69[8] = v93;
        v94 = v70[10];
        v69[9] = v70[9];
        v69[10] = v94;
        v95 = v70[12];
        v69[11] = v70[11];
        v69[12] = v95;
        v96 = v70[14];
        v69[13] = v70[13];
        v69[14] = v96;
        v97 = v70[16];
        v69[15] = v70[15];
        v69[16] = v97;
        v98 = v70[18];
        v69[17] = v70[17];
        v69[18] = v98;
        v99 = v70[20];
        v69[19] = v70[19];
        v69[20] = v99;
        v100 = v70[22];
        v69[21] = v70[21];
        v69[22] = v100;
        v101 = v70[24];
        v69[23] = v70[23];
        v69[24] = v101;
        v102 = v70[26];
        v69[25] = v70[25];
        v69[26] = v102;
        v69[27] = v70[27];
        v86 = (int *)type metadata accessor for Contact();
        v103 = v86[19];
        __dsta = (char *)v69 + v103;
        v88 = (char *)v70 + v103;
        v89 = sub_1C0301954();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v88, 1, v89))
        {
LABEL_29:
          v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
          memcpy(__dsta, v88, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
LABEL_32:
          v12 = v151;
          *(_QWORD *)((char *)v69 + v86[20]) = *(_QWORD *)((char *)v70 + v86[20]);
          *((_BYTE *)v69 + v86[21]) = *((_BYTE *)v70 + v86[21]);
          v105 = v86[22];
          v106 = (_QWORD *)((char *)v69 + v105);
          v107 = (_QWORD *)((char *)v70 + v105);
          v108 = v107[1];
          *v106 = *v107;
          v106[1] = v108;
          *((_BYTE *)v69 + v86[23]) = *((_BYTE *)v70 + v86[23]);
          v109 = v86[24];
          v110 = (_QWORD *)((char *)v69 + v109);
          v111 = (_QWORD *)((char *)v70 + v109);
          v112 = v111[1];
          *v110 = *v111;
          v110[1] = v112;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v26 = v153;
          swift_storeEnumTagMultiPayload();
          a1 = v156;
          break;
        }
LABEL_31:
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(__dsta, v88, v89);
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v89);
        goto LABEL_32;
      case 0:
        v151 = v12;
        v153 = v26;
        v156 = a1;
        v73 = v70[1];
        *v69 = *v70;
        v69[1] = v73;
        *((_BYTE *)v69 + 16) = *((_BYTE *)v70 + 16);
        v74 = v70[4];
        v69[3] = v70[3];
        v69[4] = v74;
        v75 = v70[6];
        v69[5] = v70[5];
        v69[6] = v75;
        v76 = v70[8];
        v69[7] = v70[7];
        v69[8] = v76;
        v77 = v70[10];
        v69[9] = v70[9];
        v69[10] = v77;
        v78 = v70[12];
        v69[11] = v70[11];
        v69[12] = v78;
        v79 = v70[14];
        v69[13] = v70[13];
        v69[14] = v79;
        v80 = v70[16];
        v69[15] = v70[15];
        v69[16] = v80;
        v81 = v70[18];
        v69[17] = v70[17];
        v69[18] = v81;
        v82 = v70[20];
        v69[19] = v70[19];
        v69[20] = v82;
        v83 = v70[22];
        v69[21] = v70[21];
        v69[22] = v83;
        v84 = v70[24];
        v69[23] = v70[23];
        v69[24] = v84;
        v85 = v70[26];
        v69[25] = v70[25];
        v69[26] = v85;
        v69[27] = v70[27];
        v86 = (int *)type metadata accessor for Contact();
        v87 = v86[19];
        __dsta = (char *)v69 + v87;
        v88 = (char *)v70 + v87;
        v89 = sub_1C0301954();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v88, 1, v89))
          goto LABEL_29;
        goto LABEL_31;
      default:
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        break;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v26);
    goto LABEL_34;
  }
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261B8);
  memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
LABEL_34:
  v113 = v22[15];
  v114 = a1 + v113;
  v115 = (uint64_t)v12 + v113;
  v116 = *(_QWORD *)(v115 + 8);
  if (v116 == 1)
  {
    v117 = *(_OWORD *)(v115 + 16);
    *(_OWORD *)v114 = *(_OWORD *)v115;
    *(_OWORD *)(v114 + 16) = v117;
    *(_OWORD *)(v114 + 32) = *(_OWORD *)(v115 + 32);
  }
  else
  {
    *(_QWORD *)v114 = *(_QWORD *)v115;
    *(_QWORD *)(v114 + 8) = v116;
    v118 = *(_QWORD *)(v115 + 24);
    *(_QWORD *)(v114 + 16) = *(_QWORD *)(v115 + 16);
    *(_QWORD *)(v114 + 24) = v118;
    v119 = *(_QWORD *)(v115 + 40);
    *(_QWORD *)(v114 + 32) = *(_QWORD *)(v115 + 32);
    *(_QWORD *)(v114 + 40) = v119;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v120 = v22[16];
  v121 = a1 + v120;
  v122 = (uint64_t)v12 + v120;
  *(_DWORD *)v121 = *(_DWORD *)v122;
  *(_BYTE *)(v121 + 4) = *(_BYTE *)(v122 + 4);
  v123 = v22[17];
  v124 = (_QWORD *)(a1 + v123);
  v125 = (uint64_t *)((char *)v12 + v123);
  v126 = v125[1];
  *v124 = *v125;
  v124[1] = v126;
  v127 = v22[18];
  v128 = a1 + v127;
  v129 = (uint64_t)v12 + v127;
  v130 = sub_1C0301D5C();
  v131 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 16);
  swift_bridgeObjectRetain();
  v131(v128, v129, v130);
  v132 = v22[19];
  v133 = (void *)(a1 + v132);
  v134 = (char *)v12 + v132;
  if (__swift_getEnumTagSinglePayload((uint64_t)v12 + v132, 1, v130))
  {
    v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
    memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
  }
  else
  {
    v131((uint64_t)v133, (uint64_t)v134, v130);
    __swift_storeEnumTagSinglePayload((uint64_t)v133, 0, 1, v130);
  }
  *(_BYTE *)(a1 + v22[20]) = *((_BYTE *)v12 + v22[20]);
  v136 = v22[21];
  v137 = (_QWORD *)(a1 + v136);
  v138 = (uint64_t *)((char *)v12 + v136);
  v139 = v138[1];
  *v137 = *v138;
  v137[1] = v139;
  v140 = *(int *)(a3 + 20);
  v141 = a1 + v140;
  v142 = (uint64_t)v12 + v140;
  v143 = *((unsigned __int8 *)v12 + v140 + 24);
  swift_bridgeObjectRetain();
  if (v143 == 255)
  {
    *(_OWORD *)v141 = *(_OWORD *)v142;
    *(_OWORD *)(v141 + 9) = *(_OWORD *)(v142 + 9);
  }
  else
  {
    v144 = *(_QWORD *)v142;
    v145 = *(_QWORD *)(v142 + 8);
    v146 = *(_QWORD *)(v142 + 16);
    sub_1C01DAD00(v144, v145, v146, v143);
    *(_QWORD *)v141 = v144;
    *(_QWORD *)(v141 + 8) = v145;
    *(_QWORD *)(v141 + 16) = v146;
    *(_BYTE *)(v141 + 24) = v143;
  }
  return a1;
}

uint64_t sub_1C02F4498(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  int v20;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 184))
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 208))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for ContactResolverRunTimeData(0);
  v5 = a1 + v4[10];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload > 1)
      goto LABEL_11;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v5 + *(int *)(type metadata accessor for Contact() + 76);
    v9 = sub_1C0301954();
    if (!__swift_getEnumTagSinglePayload(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_11:
  v10 = a1 + v4[14];
  if (__swift_getEnumTagSinglePayload(v10, 1, v6))
    goto LABEL_18;
  v11 = swift_getEnumCaseMultiPayload();
  if (v11 != 2)
  {
    if (v11 > 1)
      goto LABEL_18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = v10 + *(int *)(type metadata accessor for Contact() + 76);
    v13 = sub_1C0301954();
    if (!__swift_getEnumTagSinglePayload(v12, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_18:
  if (*(_QWORD *)(a1 + v4[15] + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v14 = a1 + v4[18];
  v15 = sub_1C0301D5C();
  v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
  v16(v14, v15);
  v17 = a1 + v4[19];
  if (!__swift_getEnumTagSinglePayload(v17, 1, v15))
    v16(v17, v15);
  result = swift_bridgeObjectRelease();
  v19 = a1 + *(int *)(a2 + 20);
  v20 = *(unsigned __int8 *)(v19 + 24);
  if (v20 != 255)
    return sub_1C01DAD5C(*(_QWORD *)v19, *(_QWORD *)(v19 + 8), *(_QWORD *)(v19 + 16), v20);
  return result;
}

uint64_t sub_1C02F4890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t, uint64_t);
  uint64_t v131;
  void *v132;
  const void *v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *__dst;
  char *__dsta;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v10;
  v11 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v11;
  v12 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v12;
  v13 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v13;
  v14 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v14;
  v153 = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v153)
  {
    v15 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = v15;
    *(_QWORD *)(a1 + 184) = v153;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  }
  v16 = a2;
  v17 = *(_QWORD *)(a2 + 208);
  if (v17)
  {
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = v17;
    v18 = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 224) = v18;
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v19;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  }
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v20 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v20;
  *(_WORD *)(a1 + 288) = *(_WORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  v21 = (int *)type metadata accessor for ContactResolverRunTimeData(0);
  v22 = v21[10];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *v23 = *v24;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    goto LABEL_18;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      goto LABEL_18;
    }
    v149 = v16;
    v151 = v25;
    v154 = a1;
    v27 = v24[1];
    *v23 = *v24;
    v23[1] = v27;
    *((_BYTE *)v23 + 16) = *((_BYTE *)v24 + 16);
    v28 = v24[4];
    v23[3] = v24[3];
    v23[4] = v28;
    v29 = v24[6];
    v23[5] = v24[5];
    v23[6] = v29;
    v30 = v24[8];
    v23[7] = v24[7];
    v23[8] = v30;
    v31 = v24[10];
    v23[9] = v24[9];
    v23[10] = v31;
    v32 = v24[12];
    v23[11] = v24[11];
    v23[12] = v32;
    v33 = v24[14];
    v23[13] = v24[13];
    v23[14] = v33;
    v34 = v24[16];
    v23[15] = v24[15];
    v23[16] = v34;
    v35 = v24[18];
    v23[17] = v24[17];
    v23[18] = v35;
    v36 = v24[20];
    v23[19] = v24[19];
    v23[20] = v36;
    v37 = v24[22];
    v23[21] = v24[21];
    v23[22] = v37;
    v38 = v24[24];
    v23[23] = v24[23];
    v23[24] = v38;
    v39 = v24[26];
    v23[25] = v24[25];
    v23[26] = v39;
    v23[27] = v24[27];
    v40 = (int *)type metadata accessor for Contact();
    v41 = v40[19];
    __dst = (char *)v23 + v41;
    v42 = (char *)v24 + v41;
    v43 = sub_1C0301954();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
      goto LABEL_14;
LABEL_16:
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(__dst, v42, v43);
    __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v43);
    goto LABEL_17;
  }
  v149 = v16;
  v151 = v25;
  v154 = a1;
  v44 = v24[1];
  *v23 = *v24;
  v23[1] = v44;
  *((_BYTE *)v23 + 16) = *((_BYTE *)v24 + 16);
  v45 = v24[4];
  v23[3] = v24[3];
  v23[4] = v45;
  v46 = v24[6];
  v23[5] = v24[5];
  v23[6] = v46;
  v47 = v24[8];
  v23[7] = v24[7];
  v23[8] = v47;
  v48 = v24[10];
  v23[9] = v24[9];
  v23[10] = v48;
  v49 = v24[12];
  v23[11] = v24[11];
  v23[12] = v49;
  v50 = v24[14];
  v23[13] = v24[13];
  v23[14] = v50;
  v51 = v24[16];
  v23[15] = v24[15];
  v23[16] = v51;
  v52 = v24[18];
  v23[17] = v24[17];
  v23[18] = v52;
  v53 = v24[20];
  v23[19] = v24[19];
  v23[20] = v53;
  v54 = v24[22];
  v23[21] = v24[21];
  v23[22] = v54;
  v55 = v24[24];
  v23[23] = v24[23];
  v23[24] = v55;
  v56 = v24[26];
  v23[25] = v24[25];
  v23[26] = v56;
  v23[27] = v24[27];
  v40 = (int *)type metadata accessor for Contact();
  v57 = v40[19];
  __dst = (char *)v23 + v57;
  v42 = (char *)v24 + v57;
  v43 = sub_1C0301954();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
    goto LABEL_16;
LABEL_14:
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
  memcpy(__dst, v42, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
LABEL_17:
  v16 = v149;
  *(_QWORD *)((char *)v23 + v40[20]) = *(_QWORD *)((char *)v24 + v40[20]);
  *((_BYTE *)v23 + v40[21]) = *((_BYTE *)v24 + v40[21]);
  v59 = v40[22];
  v60 = (_QWORD *)((char *)v23 + v59);
  v61 = (_QWORD *)((char *)v24 + v59);
  v62 = v61[1];
  *v60 = *v61;
  v60[1] = v62;
  *((_BYTE *)v23 + v40[23]) = *((_BYTE *)v24 + v40[23]);
  v63 = v40[24];
  v64 = (_QWORD *)((char *)v23 + v63);
  v65 = (_QWORD *)((char *)v24 + v63);
  v66 = v65[1];
  *v64 = *v65;
  v64[1] = v66;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = v151;
  swift_storeEnumTagMultiPayload();
  a1 = v154;
LABEL_18:
  *(_BYTE *)(a1 + v21[11]) = *(_BYTE *)(v16 + v21[11]);
  *(_BYTE *)(a1 + v21[12]) = *(_BYTE *)(v16 + v21[12]);
  *(_BYTE *)(a1 + v21[13]) = *(_BYTE *)(v16 + v21[13]);
  v67 = v21[14];
  v68 = (_QWORD *)(a1 + v67);
  v69 = (_QWORD *)(v16 + v67);
  if (__swift_getEnumTagSinglePayload(v16 + v67, 1, v25))
  {
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261B8);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_32;
  }
  v71 = swift_getEnumCaseMultiPayload();
  switch(v71)
  {
    case 2:
      *v68 = *v69;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      v150 = v16;
      v152 = v25;
      v155 = a1;
      v89 = v69[1];
      *v68 = *v69;
      v68[1] = v89;
      *((_BYTE *)v68 + 16) = *((_BYTE *)v69 + 16);
      v90 = v69[4];
      v68[3] = v69[3];
      v68[4] = v90;
      v91 = v69[6];
      v68[5] = v69[5];
      v68[6] = v91;
      v92 = v69[8];
      v68[7] = v69[7];
      v68[8] = v92;
      v93 = v69[10];
      v68[9] = v69[9];
      v68[10] = v93;
      v94 = v69[12];
      v68[11] = v69[11];
      v68[12] = v94;
      v95 = v69[14];
      v68[13] = v69[13];
      v68[14] = v95;
      v96 = v69[16];
      v68[15] = v69[15];
      v68[16] = v96;
      v97 = v69[18];
      v68[17] = v69[17];
      v68[18] = v97;
      v98 = v69[20];
      v68[19] = v69[19];
      v68[20] = v98;
      v99 = v69[22];
      v68[21] = v69[21];
      v68[22] = v99;
      v100 = v69[24];
      v68[23] = v69[23];
      v68[24] = v100;
      v101 = v69[26];
      v68[25] = v69[25];
      v68[26] = v101;
      v68[27] = v69[27];
      v85 = (int *)type metadata accessor for Contact();
      v102 = v85[19];
      __dsta = (char *)v68 + v102;
      v87 = (char *)v69 + v102;
      v88 = sub_1C0301954();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v87, 1, v88))
      {
LABEL_27:
        v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
        memcpy(__dsta, v87, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
LABEL_30:
        v16 = v150;
        *(_QWORD *)((char *)v68 + v85[20]) = *(_QWORD *)((char *)v69 + v85[20]);
        *((_BYTE *)v68 + v85[21]) = *((_BYTE *)v69 + v85[21]);
        v104 = v85[22];
        v105 = (_QWORD *)((char *)v68 + v104);
        v106 = (_QWORD *)((char *)v69 + v104);
        v107 = v106[1];
        *v105 = *v106;
        v105[1] = v107;
        *((_BYTE *)v68 + v85[23]) = *((_BYTE *)v69 + v85[23]);
        v108 = v85[24];
        v109 = (_QWORD *)((char *)v68 + v108);
        v110 = (_QWORD *)((char *)v69 + v108);
        v111 = v110[1];
        *v109 = *v110;
        v109[1] = v111;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v25 = v152;
        swift_storeEnumTagMultiPayload();
        a1 = v155;
        break;
      }
LABEL_29:
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(__dsta, v87, v88);
      __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v88);
      goto LABEL_30;
    case 0:
      v150 = v16;
      v152 = v25;
      v155 = a1;
      v72 = v69[1];
      *v68 = *v69;
      v68[1] = v72;
      *((_BYTE *)v68 + 16) = *((_BYTE *)v69 + 16);
      v73 = v69[4];
      v68[3] = v69[3];
      v68[4] = v73;
      v74 = v69[6];
      v68[5] = v69[5];
      v68[6] = v74;
      v75 = v69[8];
      v68[7] = v69[7];
      v68[8] = v75;
      v76 = v69[10];
      v68[9] = v69[9];
      v68[10] = v76;
      v77 = v69[12];
      v68[11] = v69[11];
      v68[12] = v77;
      v78 = v69[14];
      v68[13] = v69[13];
      v68[14] = v78;
      v79 = v69[16];
      v68[15] = v69[15];
      v68[16] = v79;
      v80 = v69[18];
      v68[17] = v69[17];
      v68[18] = v80;
      v81 = v69[20];
      v68[19] = v69[19];
      v68[20] = v81;
      v82 = v69[22];
      v68[21] = v69[21];
      v68[22] = v82;
      v83 = v69[24];
      v68[23] = v69[23];
      v68[24] = v83;
      v84 = v69[26];
      v68[25] = v69[25];
      v68[26] = v84;
      v68[27] = v69[27];
      v85 = (int *)type metadata accessor for Contact();
      v86 = v85[19];
      __dsta = (char *)v68 + v86;
      v87 = (char *)v69 + v86;
      v88 = sub_1C0301954();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v87, 1, v88))
        goto LABEL_27;
      goto LABEL_29;
    default:
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      break;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v25);
LABEL_32:
  v112 = v21[15];
  v113 = a1 + v112;
  v114 = v16 + v112;
  v115 = *(_QWORD *)(v114 + 8);
  if (v115 == 1)
  {
    v116 = *(_OWORD *)(v114 + 16);
    *(_OWORD *)v113 = *(_OWORD *)v114;
    *(_OWORD *)(v113 + 16) = v116;
    *(_OWORD *)(v113 + 32) = *(_OWORD *)(v114 + 32);
  }
  else
  {
    *(_QWORD *)v113 = *(_QWORD *)v114;
    *(_QWORD *)(v113 + 8) = v115;
    v117 = *(_QWORD *)(v114 + 24);
    *(_QWORD *)(v113 + 16) = *(_QWORD *)(v114 + 16);
    *(_QWORD *)(v113 + 24) = v117;
    v118 = *(_QWORD *)(v114 + 40);
    *(_QWORD *)(v113 + 32) = *(_QWORD *)(v114 + 32);
    *(_QWORD *)(v113 + 40) = v118;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v119 = v21[16];
  v120 = a1 + v119;
  v121 = v16 + v119;
  *(_DWORD *)v120 = *(_DWORD *)v121;
  *(_BYTE *)(v120 + 4) = *(_BYTE *)(v121 + 4);
  v122 = v21[17];
  v123 = (_QWORD *)(a1 + v122);
  v124 = (_QWORD *)(v16 + v122);
  v125 = v124[1];
  *v123 = *v124;
  v123[1] = v125;
  v126 = v21[18];
  v127 = a1 + v126;
  v128 = v16 + v126;
  v129 = sub_1C0301D5C();
  v130 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 16);
  swift_bridgeObjectRetain();
  v130(v127, v128, v129);
  v131 = v21[19];
  v132 = (void *)(a1 + v131);
  v133 = (const void *)(v16 + v131);
  if (__swift_getEnumTagSinglePayload(v16 + v131, 1, v129))
  {
    v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
    memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
  }
  else
  {
    v130((uint64_t)v132, (uint64_t)v133, v129);
    __swift_storeEnumTagSinglePayload((uint64_t)v132, 0, 1, v129);
  }
  *(_BYTE *)(a1 + v21[20]) = *(_BYTE *)(v16 + v21[20]);
  v135 = v21[21];
  v136 = (_QWORD *)(a1 + v135);
  v137 = (_QWORD *)(v16 + v135);
  v138 = v137[1];
  *v136 = *v137;
  v136[1] = v138;
  v139 = *(int *)(a3 + 20);
  v140 = a1 + v139;
  v141 = v16 + v139;
  v142 = *(unsigned __int8 *)(v16 + v139 + 24);
  swift_bridgeObjectRetain();
  if (v142 == 255)
  {
    *(_OWORD *)v140 = *(_OWORD *)v141;
    *(_OWORD *)(v140 + 9) = *(_OWORD *)(v141 + 9);
  }
  else
  {
    v143 = *(_QWORD *)v141;
    v144 = *(_QWORD *)(v141 + 8);
    v145 = *(_QWORD *)(v141 + 16);
    sub_1C01DAD00(v143, v144, v145, v142);
    *(_QWORD *)v140 = v143;
    *(_QWORD *)(v140 + 8) = v144;
    *(_QWORD *)(v140 + 16) = v145;
    *(_BYTE *)(v140 + 24) = v142;
  }
  return a1;
}

uint64_t sub_1C02F5600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  int *v25;
  uint64_t v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int EnumTagSinglePayload;
  int v42;
  int v43;
  int *v44;
  uint64_t v45;
  const void *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int *v50;
  uint64_t v51;
  const void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  __int128 *v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  _BYTE *v80;
  _BYTE *v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  void *v86;
  const void *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(void *, const void *, uint64_t);
  uint64_t v91;
  void *v92;
  const void *v93;
  int v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  __int128 *v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unsigned __int8 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  __int128 v114;
  __int128 v115;
  void *__dst;
  void *v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 168);
  v7 = (_OWORD *)(a2 + 168);
  v8 = *(_QWORD *)(a2 + 184);
  if (*(_QWORD *)(a1 + 184))
  {
    if (v8)
    {
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C011A248(a1 + 168);
      v9 = *(_QWORD *)(a2 + 184);
      *v6 = *v7;
      *(_QWORD *)(a1 + 184) = v9;
    }
  }
  else if (v8)
  {
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *v7;
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *v6 = v10;
  }
  v11 = (_OWORD *)(a1 + 192);
  v12 = (_OWORD *)(a2 + 192);
  v13 = *(_QWORD *)(a2 + 208);
  if (*(_QWORD *)(a1 + 208))
  {
    if (v13)
    {
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C011A27C(a1 + 192);
      v15 = *(_OWORD *)(a2 + 208);
      v14 = *(_OWORD *)(a2 + 224);
      *v11 = *v12;
      *(_OWORD *)(a1 + 208) = v15;
      *(_OWORD *)(a1 + 224) = v14;
    }
  }
  else if (v13)
  {
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v16 = *v12;
    v17 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v17;
    *v11 = v16;
  }
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_BYTE *)(a1 + 289) = *(_BYTE *)(a2 + 289);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = type metadata accessor for ContactResolverRunTimeData(0);
  v19 = (int *)v18;
  if (a1 != a2)
  {
    v20 = *(int *)(v18 + 40);
    v21 = a1 + v20;
    v22 = a2 + v20;
    sub_1C0044B78(a1 + v20, &qword_1ED7261A8);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)v21 = *(_QWORD *)v22;
      swift_bridgeObjectRetain();
LABEL_27:
      swift_storeEnumTagMultiPayload();
      goto LABEL_28;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v120 = a3;
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
      *(_BYTE *)(v21 + 16) = *(_BYTE *)(v22 + 16);
      *(_QWORD *)(v21 + 24) = *(_QWORD *)(v22 + 24);
      *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
      *(_QWORD *)(v21 + 40) = *(_QWORD *)(v22 + 40);
      *(_QWORD *)(v21 + 48) = *(_QWORD *)(v22 + 48);
      *(_QWORD *)(v21 + 56) = *(_QWORD *)(v22 + 56);
      *(_QWORD *)(v21 + 64) = *(_QWORD *)(v22 + 64);
      *(_QWORD *)(v21 + 72) = *(_QWORD *)(v22 + 72);
      *(_QWORD *)(v21 + 80) = *(_QWORD *)(v22 + 80);
      *(_QWORD *)(v21 + 88) = *(_QWORD *)(v22 + 88);
      *(_QWORD *)(v21 + 96) = *(_QWORD *)(v22 + 96);
      *(_QWORD *)(v21 + 104) = *(_QWORD *)(v22 + 104);
      *(_QWORD *)(v21 + 112) = *(_QWORD *)(v22 + 112);
      *(_QWORD *)(v21 + 120) = *(_QWORD *)(v22 + 120);
      *(_QWORD *)(v21 + 128) = *(_QWORD *)(v22 + 128);
      *(_QWORD *)(v21 + 136) = *(_QWORD *)(v22 + 136);
      *(_QWORD *)(v21 + 144) = *(_QWORD *)(v22 + 144);
      *(_QWORD *)(v21 + 152) = *(_QWORD *)(v22 + 152);
      *(_QWORD *)(v21 + 160) = *(_QWORD *)(v22 + 160);
      *(_QWORD *)(v21 + 168) = *(_QWORD *)(v22 + 168);
      *(_QWORD *)(v21 + 176) = *(_QWORD *)(v22 + 176);
      *(_QWORD *)(v21 + 184) = *(_QWORD *)(v22 + 184);
      *(_QWORD *)(v21 + 192) = *(_QWORD *)(v22 + 192);
      *(_QWORD *)(v21 + 200) = *(_QWORD *)(v22 + 200);
      *(_QWORD *)(v21 + 208) = *(_QWORD *)(v22 + 208);
      *(_QWORD *)(v21 + 216) = *(_QWORD *)(v22 + 216);
      v25 = (int *)type metadata accessor for Contact();
      v29 = v25[19];
      __dst = (void *)(v21 + v29);
      v27 = (const void *)(v22 + v29);
      v28 = sub_1C0301954();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
      {
LABEL_23:
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
        memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
LABEL_26:
        a3 = v120;
        *(_QWORD *)(v21 + v25[20]) = *(_QWORD *)(v22 + v25[20]);
        *(_BYTE *)(v21 + v25[21]) = *(_BYTE *)(v22 + v25[21]);
        v31 = v25[22];
        v32 = (_QWORD *)(v21 + v31);
        v33 = (_QWORD *)(v22 + v31);
        *v32 = *v33;
        v32[1] = v33[1];
        *(_BYTE *)(v21 + v25[23]) = *(_BYTE *)(v22 + v25[23]);
        v34 = v25[24];
        v35 = (_QWORD *)(v21 + v34);
        v36 = (_QWORD *)(v22 + v34);
        *v35 = *v36;
        v35[1] = v36[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_27;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy((void *)v21, (const void *)v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        goto LABEL_28;
      }
      v120 = a3;
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
      *(_BYTE *)(v21 + 16) = *(_BYTE *)(v22 + 16);
      *(_QWORD *)(v21 + 24) = *(_QWORD *)(v22 + 24);
      *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
      *(_QWORD *)(v21 + 40) = *(_QWORD *)(v22 + 40);
      *(_QWORD *)(v21 + 48) = *(_QWORD *)(v22 + 48);
      *(_QWORD *)(v21 + 56) = *(_QWORD *)(v22 + 56);
      *(_QWORD *)(v21 + 64) = *(_QWORD *)(v22 + 64);
      *(_QWORD *)(v21 + 72) = *(_QWORD *)(v22 + 72);
      *(_QWORD *)(v21 + 80) = *(_QWORD *)(v22 + 80);
      *(_QWORD *)(v21 + 88) = *(_QWORD *)(v22 + 88);
      *(_QWORD *)(v21 + 96) = *(_QWORD *)(v22 + 96);
      *(_QWORD *)(v21 + 104) = *(_QWORD *)(v22 + 104);
      *(_QWORD *)(v21 + 112) = *(_QWORD *)(v22 + 112);
      *(_QWORD *)(v21 + 120) = *(_QWORD *)(v22 + 120);
      *(_QWORD *)(v21 + 128) = *(_QWORD *)(v22 + 128);
      *(_QWORD *)(v21 + 136) = *(_QWORD *)(v22 + 136);
      *(_QWORD *)(v21 + 144) = *(_QWORD *)(v22 + 144);
      *(_QWORD *)(v21 + 152) = *(_QWORD *)(v22 + 152);
      *(_QWORD *)(v21 + 160) = *(_QWORD *)(v22 + 160);
      *(_QWORD *)(v21 + 168) = *(_QWORD *)(v22 + 168);
      *(_QWORD *)(v21 + 176) = *(_QWORD *)(v22 + 176);
      *(_QWORD *)(v21 + 184) = *(_QWORD *)(v22 + 184);
      *(_QWORD *)(v21 + 192) = *(_QWORD *)(v22 + 192);
      *(_QWORD *)(v21 + 200) = *(_QWORD *)(v22 + 200);
      *(_QWORD *)(v21 + 208) = *(_QWORD *)(v22 + 208);
      *(_QWORD *)(v21 + 216) = *(_QWORD *)(v22 + 216);
      v25 = (int *)type metadata accessor for Contact();
      v26 = v25[19];
      __dst = (void *)(v21 + v26);
      v27 = (const void *)(v22 + v26);
      v28 = sub_1C0301954();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
        goto LABEL_23;
    }
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(__dst, v27, v28);
    __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v28);
    goto LABEL_26;
  }
LABEL_28:
  *(_BYTE *)(a1 + v19[11]) = *(_BYTE *)(a2 + v19[11]);
  *(_BYTE *)(a1 + v19[12]) = *(_BYTE *)(a2 + v19[12]);
  *(_BYTE *)(a1 + v19[13]) = *(_BYTE *)(a2 + v19[13]);
  v37 = v19[14];
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v38, 1, v40);
  v42 = __swift_getEnumTagSinglePayload(v39, 1, v40);
  if (EnumTagSinglePayload)
  {
    if (!v42)
    {
      v43 = swift_getEnumCaseMultiPayload();
      if (v43 == 2)
      {
        *(_QWORD *)v38 = *(_QWORD *)v39;
        swift_bridgeObjectRetain();
LABEL_56:
        swift_storeEnumTagMultiPayload();
        goto LABEL_57;
      }
      if (v43 == 1)
      {
        v121 = a3;
        *(_QWORD *)v38 = *(_QWORD *)v39;
        *(_QWORD *)(v38 + 8) = *(_QWORD *)(v39 + 8);
        *(_BYTE *)(v38 + 16) = *(_BYTE *)(v39 + 16);
        *(_QWORD *)(v38 + 24) = *(_QWORD *)(v39 + 24);
        *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
        *(_QWORD *)(v38 + 40) = *(_QWORD *)(v39 + 40);
        *(_QWORD *)(v38 + 48) = *(_QWORD *)(v39 + 48);
        *(_QWORD *)(v38 + 56) = *(_QWORD *)(v39 + 56);
        *(_QWORD *)(v38 + 64) = *(_QWORD *)(v39 + 64);
        *(_QWORD *)(v38 + 72) = *(_QWORD *)(v39 + 72);
        *(_QWORD *)(v38 + 80) = *(_QWORD *)(v39 + 80);
        *(_QWORD *)(v38 + 88) = *(_QWORD *)(v39 + 88);
        *(_QWORD *)(v38 + 96) = *(_QWORD *)(v39 + 96);
        *(_QWORD *)(v38 + 104) = *(_QWORD *)(v39 + 104);
        *(_QWORD *)(v38 + 112) = *(_QWORD *)(v39 + 112);
        *(_QWORD *)(v38 + 120) = *(_QWORD *)(v39 + 120);
        *(_QWORD *)(v38 + 128) = *(_QWORD *)(v39 + 128);
        *(_QWORD *)(v38 + 136) = *(_QWORD *)(v39 + 136);
        *(_QWORD *)(v38 + 144) = *(_QWORD *)(v39 + 144);
        *(_QWORD *)(v38 + 152) = *(_QWORD *)(v39 + 152);
        *(_QWORD *)(v38 + 160) = *(_QWORD *)(v39 + 160);
        *(_QWORD *)(v38 + 168) = *(_QWORD *)(v39 + 168);
        *(_QWORD *)(v38 + 176) = *(_QWORD *)(v39 + 176);
        *(_QWORD *)(v38 + 184) = *(_QWORD *)(v39 + 184);
        *(_QWORD *)(v38 + 192) = *(_QWORD *)(v39 + 192);
        *(_QWORD *)(v38 + 200) = *(_QWORD *)(v39 + 200);
        *(_QWORD *)(v38 + 208) = *(_QWORD *)(v39 + 208);
        *(_QWORD *)(v38 + 216) = *(_QWORD *)(v39 + 216);
        v44 = (int *)type metadata accessor for Contact();
        v54 = v44[19];
        v118 = (void *)(v38 + v54);
        v46 = (const void *)(v39 + v54);
        v47 = sub_1C0301954();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47))
        {
LABEL_47:
          v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
          memcpy(v118, v46, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
LABEL_55:
          a3 = v121;
          *(_QWORD *)(v38 + v44[20]) = *(_QWORD *)(v39 + v44[20]);
          *(_BYTE *)(v38 + v44[21]) = *(_BYTE *)(v39 + v44[21]);
          v58 = v44[22];
          v59 = (_QWORD *)(v38 + v58);
          v60 = (_QWORD *)(v39 + v58);
          *v59 = *v60;
          v59[1] = v60[1];
          *(_BYTE *)(v38 + v44[23]) = *(_BYTE *)(v39 + v44[23]);
          v61 = v44[24];
          v62 = (_QWORD *)(v38 + v61);
          v63 = (_QWORD *)(v39 + v61);
          *v62 = *v63;
          v62[1] = v63[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_56;
        }
      }
      else
      {
        if (v43)
        {
          memcpy((void *)v38, (const void *)v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
LABEL_57:
          __swift_storeEnumTagSinglePayload(v38, 0, 1, v40);
          goto LABEL_61;
        }
        v121 = a3;
        *(_QWORD *)v38 = *(_QWORD *)v39;
        *(_QWORD *)(v38 + 8) = *(_QWORD *)(v39 + 8);
        *(_BYTE *)(v38 + 16) = *(_BYTE *)(v39 + 16);
        *(_QWORD *)(v38 + 24) = *(_QWORD *)(v39 + 24);
        *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
        *(_QWORD *)(v38 + 40) = *(_QWORD *)(v39 + 40);
        *(_QWORD *)(v38 + 48) = *(_QWORD *)(v39 + 48);
        *(_QWORD *)(v38 + 56) = *(_QWORD *)(v39 + 56);
        *(_QWORD *)(v38 + 64) = *(_QWORD *)(v39 + 64);
        *(_QWORD *)(v38 + 72) = *(_QWORD *)(v39 + 72);
        *(_QWORD *)(v38 + 80) = *(_QWORD *)(v39 + 80);
        *(_QWORD *)(v38 + 88) = *(_QWORD *)(v39 + 88);
        *(_QWORD *)(v38 + 96) = *(_QWORD *)(v39 + 96);
        *(_QWORD *)(v38 + 104) = *(_QWORD *)(v39 + 104);
        *(_QWORD *)(v38 + 112) = *(_QWORD *)(v39 + 112);
        *(_QWORD *)(v38 + 120) = *(_QWORD *)(v39 + 120);
        *(_QWORD *)(v38 + 128) = *(_QWORD *)(v39 + 128);
        *(_QWORD *)(v38 + 136) = *(_QWORD *)(v39 + 136);
        *(_QWORD *)(v38 + 144) = *(_QWORD *)(v39 + 144);
        *(_QWORD *)(v38 + 152) = *(_QWORD *)(v39 + 152);
        *(_QWORD *)(v38 + 160) = *(_QWORD *)(v39 + 160);
        *(_QWORD *)(v38 + 168) = *(_QWORD *)(v39 + 168);
        *(_QWORD *)(v38 + 176) = *(_QWORD *)(v39 + 176);
        *(_QWORD *)(v38 + 184) = *(_QWORD *)(v39 + 184);
        *(_QWORD *)(v38 + 192) = *(_QWORD *)(v39 + 192);
        *(_QWORD *)(v38 + 200) = *(_QWORD *)(v39 + 200);
        *(_QWORD *)(v38 + 208) = *(_QWORD *)(v39 + 208);
        *(_QWORD *)(v38 + 216) = *(_QWORD *)(v39 + 216);
        v44 = (int *)type metadata accessor for Contact();
        v45 = v44[19];
        v118 = (void *)(v38 + v45);
        v46 = (const void *)(v39 + v45);
        v47 = sub_1C0301954();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47))
          goto LABEL_47;
      }
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v118, v46, v47);
      __swift_storeEnumTagSinglePayload((uint64_t)v118, 0, 1, v47);
      goto LABEL_55;
    }
    goto LABEL_37;
  }
  if (v42)
  {
    sub_1C0044B78(v38, &qword_1ED7261A8);
LABEL_37:
    v48 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261B8) - 8);
LABEL_38:
    memcpy((void *)v38, (const void *)v39, *(_QWORD *)(v48 + 64));
    goto LABEL_61;
  }
  if (a1 == a2)
    goto LABEL_61;
  sub_1C0044B78(v38, &qword_1ED7261A8);
  v49 = swift_getEnumCaseMultiPayload();
  if (v49 != 2)
  {
    if (v49 == 1)
    {
      v122 = a3;
      *(_QWORD *)v38 = *(_QWORD *)v39;
      *(_QWORD *)(v38 + 8) = *(_QWORD *)(v39 + 8);
      *(_BYTE *)(v38 + 16) = *(_BYTE *)(v39 + 16);
      *(_QWORD *)(v38 + 24) = *(_QWORD *)(v39 + 24);
      *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
      *(_QWORD *)(v38 + 40) = *(_QWORD *)(v39 + 40);
      *(_QWORD *)(v38 + 48) = *(_QWORD *)(v39 + 48);
      *(_QWORD *)(v38 + 56) = *(_QWORD *)(v39 + 56);
      *(_QWORD *)(v38 + 64) = *(_QWORD *)(v39 + 64);
      *(_QWORD *)(v38 + 72) = *(_QWORD *)(v39 + 72);
      *(_QWORD *)(v38 + 80) = *(_QWORD *)(v39 + 80);
      *(_QWORD *)(v38 + 88) = *(_QWORD *)(v39 + 88);
      *(_QWORD *)(v38 + 96) = *(_QWORD *)(v39 + 96);
      *(_QWORD *)(v38 + 104) = *(_QWORD *)(v39 + 104);
      *(_QWORD *)(v38 + 112) = *(_QWORD *)(v39 + 112);
      *(_QWORD *)(v38 + 120) = *(_QWORD *)(v39 + 120);
      *(_QWORD *)(v38 + 128) = *(_QWORD *)(v39 + 128);
      *(_QWORD *)(v38 + 136) = *(_QWORD *)(v39 + 136);
      *(_QWORD *)(v38 + 144) = *(_QWORD *)(v39 + 144);
      *(_QWORD *)(v38 + 152) = *(_QWORD *)(v39 + 152);
      *(_QWORD *)(v38 + 160) = *(_QWORD *)(v39 + 160);
      *(_QWORD *)(v38 + 168) = *(_QWORD *)(v39 + 168);
      *(_QWORD *)(v38 + 176) = *(_QWORD *)(v39 + 176);
      *(_QWORD *)(v38 + 184) = *(_QWORD *)(v39 + 184);
      *(_QWORD *)(v38 + 192) = *(_QWORD *)(v39 + 192);
      *(_QWORD *)(v38 + 200) = *(_QWORD *)(v39 + 200);
      *(_QWORD *)(v38 + 208) = *(_QWORD *)(v39 + 208);
      *(_QWORD *)(v38 + 216) = *(_QWORD *)(v39 + 216);
      v50 = (int *)type metadata accessor for Contact();
      v56 = v50[19];
      v119 = (void *)(v38 + v56);
      v52 = (const void *)(v39 + v56);
      v53 = sub_1C0301954();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53))
      {
LABEL_52:
        v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
        memcpy(v119, v52, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
LABEL_59:
        a3 = v122;
        *(_QWORD *)(v38 + v50[20]) = *(_QWORD *)(v39 + v50[20]);
        *(_BYTE *)(v38 + v50[21]) = *(_BYTE *)(v39 + v50[21]);
        v64 = v50[22];
        v65 = (_QWORD *)(v38 + v64);
        v66 = (_QWORD *)(v39 + v64);
        *v65 = *v66;
        v65[1] = v66[1];
        *(_BYTE *)(v38 + v50[23]) = *(_BYTE *)(v39 + v50[23]);
        v67 = v50[24];
        v68 = (_QWORD *)(v38 + v67);
        v69 = (_QWORD *)(v39 + v67);
        *v68 = *v69;
        v68[1] = v69[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_60;
      }
    }
    else
    {
      if (v49)
      {
        v48 = *(_QWORD *)(v40 - 8);
        goto LABEL_38;
      }
      v122 = a3;
      *(_QWORD *)v38 = *(_QWORD *)v39;
      *(_QWORD *)(v38 + 8) = *(_QWORD *)(v39 + 8);
      *(_BYTE *)(v38 + 16) = *(_BYTE *)(v39 + 16);
      *(_QWORD *)(v38 + 24) = *(_QWORD *)(v39 + 24);
      *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
      *(_QWORD *)(v38 + 40) = *(_QWORD *)(v39 + 40);
      *(_QWORD *)(v38 + 48) = *(_QWORD *)(v39 + 48);
      *(_QWORD *)(v38 + 56) = *(_QWORD *)(v39 + 56);
      *(_QWORD *)(v38 + 64) = *(_QWORD *)(v39 + 64);
      *(_QWORD *)(v38 + 72) = *(_QWORD *)(v39 + 72);
      *(_QWORD *)(v38 + 80) = *(_QWORD *)(v39 + 80);
      *(_QWORD *)(v38 + 88) = *(_QWORD *)(v39 + 88);
      *(_QWORD *)(v38 + 96) = *(_QWORD *)(v39 + 96);
      *(_QWORD *)(v38 + 104) = *(_QWORD *)(v39 + 104);
      *(_QWORD *)(v38 + 112) = *(_QWORD *)(v39 + 112);
      *(_QWORD *)(v38 + 120) = *(_QWORD *)(v39 + 120);
      *(_QWORD *)(v38 + 128) = *(_QWORD *)(v39 + 128);
      *(_QWORD *)(v38 + 136) = *(_QWORD *)(v39 + 136);
      *(_QWORD *)(v38 + 144) = *(_QWORD *)(v39 + 144);
      *(_QWORD *)(v38 + 152) = *(_QWORD *)(v39 + 152);
      *(_QWORD *)(v38 + 160) = *(_QWORD *)(v39 + 160);
      *(_QWORD *)(v38 + 168) = *(_QWORD *)(v39 + 168);
      *(_QWORD *)(v38 + 176) = *(_QWORD *)(v39 + 176);
      *(_QWORD *)(v38 + 184) = *(_QWORD *)(v39 + 184);
      *(_QWORD *)(v38 + 192) = *(_QWORD *)(v39 + 192);
      *(_QWORD *)(v38 + 200) = *(_QWORD *)(v39 + 200);
      *(_QWORD *)(v38 + 208) = *(_QWORD *)(v39 + 208);
      *(_QWORD *)(v38 + 216) = *(_QWORD *)(v39 + 216);
      v50 = (int *)type metadata accessor for Contact();
      v51 = v50[19];
      v119 = (void *)(v38 + v51);
      v52 = (const void *)(v39 + v51);
      v53 = sub_1C0301954();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53))
        goto LABEL_52;
    }
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v119, v52, v53);
    __swift_storeEnumTagSinglePayload((uint64_t)v119, 0, 1, v53);
    goto LABEL_59;
  }
  *(_QWORD *)v38 = *(_QWORD *)v39;
  swift_bridgeObjectRetain();
LABEL_60:
  swift_storeEnumTagMultiPayload();
LABEL_61:
  v70 = v19[15];
  v71 = a1 + v70;
  v72 = (__int128 *)(a2 + v70);
  v73 = *(_QWORD *)(a1 + v70 + 8);
  v74 = *(_QWORD *)(a2 + v70 + 8);
  if (v73 == 1)
  {
    if (v74 == 1)
    {
      v75 = *v72;
      v76 = v72[2];
      *(_OWORD *)(v71 + 16) = v72[1];
      *(_OWORD *)(v71 + 32) = v76;
      *(_OWORD *)v71 = v75;
    }
    else
    {
      *(_QWORD *)v71 = *(_QWORD *)v72;
      *(_QWORD *)(v71 + 8) = *((_QWORD *)v72 + 1);
      *(_QWORD *)(v71 + 16) = *((_QWORD *)v72 + 2);
      *(_QWORD *)(v71 + 24) = *((_QWORD *)v72 + 3);
      *(_QWORD *)(v71 + 32) = *((_QWORD *)v72 + 4);
      *(_QWORD *)(v71 + 40) = *((_QWORD *)v72 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v74 == 1)
  {
    sub_1C015FEC4(v71);
    v78 = v72[1];
    v77 = v72[2];
    *(_OWORD *)v71 = *v72;
    *(_OWORD *)(v71 + 16) = v78;
    *(_OWORD *)(v71 + 32) = v77;
  }
  else
  {
    *(_QWORD *)v71 = *(_QWORD *)v72;
    *(_QWORD *)(v71 + 8) = *((_QWORD *)v72 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v71 + 16) = *((_QWORD *)v72 + 2);
    *(_QWORD *)(v71 + 24) = *((_QWORD *)v72 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v71 + 32) = *((_QWORD *)v72 + 4);
    *(_QWORD *)(v71 + 40) = *((_QWORD *)v72 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v79 = v19[16];
  v80 = (_BYTE *)(a1 + v79);
  v81 = (_BYTE *)(a2 + v79);
  *v80 = *v81;
  v80[1] = v81[1];
  v80[2] = v81[2];
  v80[3] = v81[3];
  v80[4] = v81[4];
  v82 = v19[17];
  v83 = (_QWORD *)(a1 + v82);
  v84 = (_QWORD *)(a2 + v82);
  *v83 = *v84;
  v83[1] = v84[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v85 = v19[18];
  v86 = (void *)(a1 + v85);
  v87 = (const void *)(a2 + v85);
  v88 = sub_1C0301D5C();
  v89 = *(_QWORD *)(v88 - 8);
  v90 = *(void (**)(void *, const void *, uint64_t))(v89 + 24);
  v90(v86, v87, v88);
  v91 = v19[19];
  v92 = (void *)(a1 + v91);
  v93 = (const void *)(a2 + v91);
  v94 = __swift_getEnumTagSinglePayload(a1 + v91, 1, v88);
  v95 = __swift_getEnumTagSinglePayload((uint64_t)v93, 1, v88);
  if (v94)
  {
    if (!v95)
    {
      (*(void (**)(void *, const void *, uint64_t))(v89 + 16))(v92, v93, v88);
      __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, v88);
      goto LABEL_74;
    }
    goto LABEL_73;
  }
  if (v95)
  {
    (*(void (**)(void *, uint64_t))(v89 + 8))(v92, v88);
LABEL_73:
    v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    goto LABEL_74;
  }
  v90(v92, v93, v88);
LABEL_74:
  *(_BYTE *)(a1 + v19[20]) = *(_BYTE *)(a2 + v19[20]);
  v97 = v19[21];
  v98 = (_QWORD *)(a1 + v97);
  v99 = (_QWORD *)(a2 + v97);
  *v98 = *v99;
  v98[1] = v99[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v100 = *(int *)(a3 + 20);
  v101 = a1 + v100;
  v102 = (__int128 *)(a2 + v100);
  v103 = *(unsigned __int8 *)(a2 + v100 + 24);
  if (*(unsigned __int8 *)(a1 + v100 + 24) == 255)
  {
    if (v103 == 255)
    {
      v115 = *v102;
      *(_OWORD *)(v101 + 9) = *(__int128 *)((char *)v102 + 9);
      *(_OWORD *)v101 = v115;
    }
    else
    {
      v111 = *(_QWORD *)v102;
      v112 = *((_QWORD *)v102 + 1);
      v113 = *((_QWORD *)v102 + 2);
      sub_1C01DAD00(v111, v112, v113, v103);
      *(_QWORD *)v101 = v111;
      *(_QWORD *)(v101 + 8) = v112;
      *(_QWORD *)(v101 + 16) = v113;
      *(_BYTE *)(v101 + 24) = v103;
    }
  }
  else if (v103 == 255)
  {
    sub_1C020D710(v101);
    v114 = *(__int128 *)((char *)v102 + 9);
    *(_OWORD *)v101 = *v102;
    *(_OWORD *)(v101 + 9) = v114;
  }
  else
  {
    v104 = *(_QWORD *)v102;
    v105 = *((_QWORD *)v102 + 1);
    v106 = *((_QWORD *)v102 + 2);
    sub_1C01DAD00(v104, v105, v106, v103);
    v107 = *(_QWORD *)v101;
    v108 = *(_QWORD *)(v101 + 8);
    v109 = *(_QWORD *)(v101 + 16);
    *(_QWORD *)v101 = v104;
    *(_QWORD *)(v101 + 8) = v105;
    *(_QWORD *)(v101 + 16) = v106;
    v110 = *(_BYTE *)(v101 + 24);
    *(_BYTE *)(v101 + 24) = v103;
    sub_1C01DAD5C(v107, v108, v109, v110);
  }
  return a1;
}

uint64_t sub_1C02F6E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  int *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  int v28;
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  _OWORD *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  void *v54;
  const void *v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD *v58;
  _OWORD *v59;
  uint64_t v61;

  memcpy((void *)a1, (const void *)a2, 0x108uLL);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_WORD *)(a1 + 288) = *(_WORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  v6 = (int *)type metadata accessor for ContactResolverRunTimeData(0);
  v7 = v6[10];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v61 = a3;
  if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
    *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
    *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
    *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
    *(_OWORD *)(v8 + 72) = *(_OWORD *)(v9 + 72);
    *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
    *(_OWORD *)(v8 + 104) = *(_OWORD *)(v9 + 104);
    *(_OWORD *)(v8 + 120) = *(_OWORD *)(v9 + 120);
    *(_OWORD *)(v8 + 136) = *(_OWORD *)(v9 + 136);
    *(_OWORD *)(v8 + 152) = *(_OWORD *)(v9 + 152);
    *(_OWORD *)(v8 + 168) = *(_OWORD *)(v9 + 168);
    *(_OWORD *)(v8 + 184) = *(_OWORD *)(v9 + 184);
    *(_OWORD *)(v8 + 200) = *(_OWORD *)(v9 + 200);
    *(_QWORD *)(v8 + 216) = *(_QWORD *)(v9 + 216);
    v18 = (int *)type metadata accessor for Contact();
    v19 = v18[19];
    v20 = (void *)(v8 + v19);
    v21 = (const void *)(v9 + v19);
    v22 = sub_1C0301954();
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
    }
    *(_QWORD *)(v8 + v18[20]) = *(_QWORD *)(v9 + v18[20]);
    *(_BYTE *)(v8 + v18[21]) = *(_BYTE *)(v9 + v18[21]);
    *(_OWORD *)(v8 + v18[22]) = *(_OWORD *)(v9 + v18[22]);
    *(_BYTE *)(v8 + v18[23]) = *(_BYTE *)(v9 + v18[23]);
    *(_OWORD *)(v8 + v18[24]) = *(_OWORD *)(v9 + v18[24]);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy((void *)v8, (const void *)v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      goto LABEL_13;
    }
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
    *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
    *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
    *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
    *(_OWORD *)(v8 + 72) = *(_OWORD *)(v9 + 72);
    *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
    *(_OWORD *)(v8 + 104) = *(_OWORD *)(v9 + 104);
    *(_OWORD *)(v8 + 120) = *(_OWORD *)(v9 + 120);
    *(_OWORD *)(v8 + 136) = *(_OWORD *)(v9 + 136);
    *(_OWORD *)(v8 + 152) = *(_OWORD *)(v9 + 152);
    *(_OWORD *)(v8 + 168) = *(_OWORD *)(v9 + 168);
    *(_OWORD *)(v8 + 184) = *(_OWORD *)(v9 + 184);
    *(_OWORD *)(v8 + 200) = *(_OWORD *)(v9 + 200);
    *(_QWORD *)(v8 + 216) = *(_QWORD *)(v9 + 216);
    v12 = (int *)type metadata accessor for Contact();
    v13 = v12[19];
    v14 = (void *)(v8 + v13);
    v15 = (const void *)(v9 + v13);
    v16 = sub_1C0301954();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
    *(_QWORD *)(v8 + v12[20]) = *(_QWORD *)(v9 + v12[20]);
    *(_BYTE *)(v8 + v12[21]) = *(_BYTE *)(v9 + v12[21]);
    *(_OWORD *)(v8 + v12[22]) = *(_OWORD *)(v9 + v12[22]);
    *(_BYTE *)(v8 + v12[23]) = *(_BYTE *)(v9 + v12[23]);
    *(_OWORD *)(v8 + v12[24]) = *(_OWORD *)(v9 + v12[24]);
  }
  swift_storeEnumTagMultiPayload();
  a3 = v61;
LABEL_13:
  *(_BYTE *)(a1 + v6[11]) = *(_BYTE *)(a2 + v6[11]);
  *(_BYTE *)(a1 + v6[12]) = *(_BYTE *)(a2 + v6[12]);
  *(_BYTE *)(a1 + v6[13]) = *(_BYTE *)(a2 + v6[13]);
  v24 = v6[14];
  v25 = (_OWORD *)(a1 + v24);
  v26 = (_OWORD *)(a2 + v24);
  if (__swift_getEnumTagSinglePayload(a2 + v24, 1, v10))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261B8);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_28;
  }
  v28 = swift_getEnumCaseMultiPayload();
  if (v28 == 1)
  {
    *v25 = *v26;
    *((_BYTE *)v25 + 16) = *((_BYTE *)v26 + 16);
    *(_OWORD *)((char *)v25 + 24) = *(_OWORD *)((char *)v26 + 24);
    *(_OWORD *)((char *)v25 + 40) = *(_OWORD *)((char *)v26 + 40);
    *(_OWORD *)((char *)v25 + 56) = *(_OWORD *)((char *)v26 + 56);
    *(_OWORD *)((char *)v25 + 72) = *(_OWORD *)((char *)v26 + 72);
    *(_OWORD *)((char *)v25 + 88) = *(_OWORD *)((char *)v26 + 88);
    *(_OWORD *)((char *)v25 + 104) = *(_OWORD *)((char *)v26 + 104);
    *(_OWORD *)((char *)v25 + 120) = *(_OWORD *)((char *)v26 + 120);
    *(_OWORD *)((char *)v25 + 136) = *(_OWORD *)((char *)v26 + 136);
    *(_OWORD *)((char *)v25 + 152) = *(_OWORD *)((char *)v26 + 152);
    *(_OWORD *)((char *)v25 + 168) = *(_OWORD *)((char *)v26 + 168);
    *(_OWORD *)((char *)v25 + 184) = *(_OWORD *)((char *)v26 + 184);
    *(_OWORD *)((char *)v25 + 200) = *(_OWORD *)((char *)v26 + 200);
    *((_QWORD *)v25 + 27) = *((_QWORD *)v26 + 27);
    v35 = (int *)type metadata accessor for Contact();
    v36 = v35[19];
    v37 = (char *)v25 + v36;
    v38 = (char *)v26 + v36;
    v39 = sub_1C0301954();
    if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v39);
    }
    *(_QWORD *)((char *)v25 + v35[20]) = *(_QWORD *)((char *)v26 + v35[20]);
    *((_BYTE *)v25 + v35[21]) = *((_BYTE *)v26 + v35[21]);
    *(_OWORD *)((char *)v25 + v35[22]) = *(_OWORD *)((char *)v26 + v35[22]);
    *((_BYTE *)v25 + v35[23]) = *((_BYTE *)v26 + v35[23]);
    *(_OWORD *)((char *)v25 + v35[24]) = *(_OWORD *)((char *)v26 + v35[24]);
    goto LABEL_26;
  }
  if (!v28)
  {
    *v25 = *v26;
    *((_BYTE *)v25 + 16) = *((_BYTE *)v26 + 16);
    *(_OWORD *)((char *)v25 + 24) = *(_OWORD *)((char *)v26 + 24);
    *(_OWORD *)((char *)v25 + 40) = *(_OWORD *)((char *)v26 + 40);
    *(_OWORD *)((char *)v25 + 56) = *(_OWORD *)((char *)v26 + 56);
    *(_OWORD *)((char *)v25 + 72) = *(_OWORD *)((char *)v26 + 72);
    *(_OWORD *)((char *)v25 + 88) = *(_OWORD *)((char *)v26 + 88);
    *(_OWORD *)((char *)v25 + 104) = *(_OWORD *)((char *)v26 + 104);
    *(_OWORD *)((char *)v25 + 120) = *(_OWORD *)((char *)v26 + 120);
    *(_OWORD *)((char *)v25 + 136) = *(_OWORD *)((char *)v26 + 136);
    *(_OWORD *)((char *)v25 + 152) = *(_OWORD *)((char *)v26 + 152);
    *(_OWORD *)((char *)v25 + 168) = *(_OWORD *)((char *)v26 + 168);
    *(_OWORD *)((char *)v25 + 184) = *(_OWORD *)((char *)v26 + 184);
    *(_OWORD *)((char *)v25 + 200) = *(_OWORD *)((char *)v26 + 200);
    *((_QWORD *)v25 + 27) = *((_QWORD *)v26 + 27);
    v29 = (int *)type metadata accessor for Contact();
    v30 = v29[19];
    v31 = (char *)v25 + v30;
    v32 = (char *)v26 + v30;
    v33 = sub_1C0301954();
    if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
      __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v33);
    }
    *(_QWORD *)((char *)v25 + v29[20]) = *(_QWORD *)((char *)v26 + v29[20]);
    *((_BYTE *)v25 + v29[21]) = *((_BYTE *)v26 + v29[21]);
    *(_OWORD *)((char *)v25 + v29[22]) = *(_OWORD *)((char *)v26 + v29[22]);
    *((_BYTE *)v25 + v29[23]) = *((_BYTE *)v26 + v29[23]);
    *(_OWORD *)((char *)v25 + v29[24]) = *(_OWORD *)((char *)v26 + v29[24]);
LABEL_26:
    swift_storeEnumTagMultiPayload();
    a3 = v61;
    goto LABEL_27;
  }
  memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_27:
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v10);
LABEL_28:
  v41 = v6[15];
  v42 = (_OWORD *)(a1 + v41);
  v43 = (_OWORD *)(a2 + v41);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  v42[2] = v43[2];
  v45 = v6[16];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_BYTE *)(v46 + 4) = *(_BYTE *)(v47 + 4);
  *(_DWORD *)v46 = *(_DWORD *)v47;
  *(_OWORD *)(a1 + v6[17]) = *(_OWORD *)(a2 + v6[17]);
  v48 = v6[18];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = sub_1C0301D5C();
  v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 32);
  v52(v49, v50, v51);
  v53 = v6[19];
  v54 = (void *)(a1 + v53);
  v55 = (const void *)(a2 + v53);
  if (__swift_getEnumTagSinglePayload(a2 + v53, 1, v51))
  {
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    v52((uint64_t)v54, (uint64_t)v55, v51);
    __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v51);
  }
  *(_BYTE *)(a1 + v6[20]) = *(_BYTE *)(a2 + v6[20]);
  *(_OWORD *)(a1 + v6[21]) = *(_OWORD *)(a2 + v6[21]);
  v57 = *(int *)(a3 + 20);
  v58 = (_OWORD *)(a1 + v57);
  v59 = (_OWORD *)(a2 + v57);
  *v58 = *v59;
  *(_OWORD *)((char *)v58 + 9) = *(_OWORD *)((char *)v59 + 9);
  return a1;
}

uint64_t sub_1C02F765C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int EnumTagSinglePayload;
  int v40;
  int v41;
  int *v42;
  uint64_t v43;
  void *v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int *v50;
  uint64_t v51;
  void *v52;
  const void *v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  void *v58;
  const void *v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  void *v64;
  const void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  void *v90;
  const void *v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v15;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 184))
  {
    if (*(_QWORD *)(a2 + 184))
    {
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      swift_release();
      v16 = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = v16;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C011A248(a1 + 168);
  }
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
LABEL_6:
  if (*(_QWORD *)(a1 + 208))
  {
    v17 = *(_QWORD *)(a2 + 208);
    if (v17)
    {
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = v17;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = v18;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1C011A27C(a1 + 192);
  }
  v19 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v19;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
LABEL_11:
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_release();
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v20 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_BYTE *)(a1 + 289) = *(_BYTE *)(a2 + 289);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRelease();
  v21 = type metadata accessor for ContactResolverRunTimeData(0);
  v22 = (int *)v21;
  if (a1 == a2)
    goto LABEL_21;
  v23 = *(int *)(v21 + 40);
  v24 = (_OWORD *)(a1 + v23);
  v25 = (_OWORD *)(a2 + v23);
  sub_1C0044B78(a1 + v23, &qword_1ED7261A8);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      goto LABEL_21;
    }
    v109 = a3;
    *v24 = *v25;
    *((_BYTE *)v24 + 16) = *((_BYTE *)v25 + 16);
    *(_OWORD *)((char *)v24 + 24) = *(_OWORD *)((char *)v25 + 24);
    *(_OWORD *)((char *)v24 + 40) = *(_OWORD *)((char *)v25 + 40);
    *(_OWORD *)((char *)v24 + 56) = *(_OWORD *)((char *)v25 + 56);
    *(_OWORD *)((char *)v24 + 72) = *(_OWORD *)((char *)v25 + 72);
    *(_OWORD *)((char *)v24 + 88) = *(_OWORD *)((char *)v25 + 88);
    *(_OWORD *)((char *)v24 + 104) = *(_OWORD *)((char *)v25 + 104);
    *(_OWORD *)((char *)v24 + 120) = *(_OWORD *)((char *)v25 + 120);
    *(_OWORD *)((char *)v24 + 136) = *(_OWORD *)((char *)v25 + 136);
    *(_OWORD *)((char *)v24 + 152) = *(_OWORD *)((char *)v25 + 152);
    *(_OWORD *)((char *)v24 + 168) = *(_OWORD *)((char *)v25 + 168);
    *(_OWORD *)((char *)v24 + 184) = *(_OWORD *)((char *)v25 + 184);
    *(_OWORD *)((char *)v24 + 200) = *(_OWORD *)((char *)v25 + 200);
    *((_QWORD *)v24 + 27) = *((_QWORD *)v25 + 27);
    v28 = (int *)type metadata accessor for Contact();
    v29 = v28[19];
    v30 = (char *)v24 + v29;
    v31 = (char *)v25 + v29;
    v32 = sub_1C0301954();
    if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
      goto LABEL_17;
LABEL_19:
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
    __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
    goto LABEL_20;
  }
  v109 = a3;
  *v24 = *v25;
  *((_BYTE *)v24 + 16) = *((_BYTE *)v25 + 16);
  *(_OWORD *)((char *)v24 + 24) = *(_OWORD *)((char *)v25 + 24);
  *(_OWORD *)((char *)v24 + 40) = *(_OWORD *)((char *)v25 + 40);
  *(_OWORD *)((char *)v24 + 56) = *(_OWORD *)((char *)v25 + 56);
  *(_OWORD *)((char *)v24 + 72) = *(_OWORD *)((char *)v25 + 72);
  *(_OWORD *)((char *)v24 + 88) = *(_OWORD *)((char *)v25 + 88);
  *(_OWORD *)((char *)v24 + 104) = *(_OWORD *)((char *)v25 + 104);
  *(_OWORD *)((char *)v24 + 120) = *(_OWORD *)((char *)v25 + 120);
  *(_OWORD *)((char *)v24 + 136) = *(_OWORD *)((char *)v25 + 136);
  *(_OWORD *)((char *)v24 + 152) = *(_OWORD *)((char *)v25 + 152);
  *(_OWORD *)((char *)v24 + 168) = *(_OWORD *)((char *)v25 + 168);
  *(_OWORD *)((char *)v24 + 184) = *(_OWORD *)((char *)v25 + 184);
  *(_OWORD *)((char *)v24 + 200) = *(_OWORD *)((char *)v25 + 200);
  *((_QWORD *)v24 + 27) = *((_QWORD *)v25 + 27);
  v28 = (int *)type metadata accessor for Contact();
  v33 = v28[19];
  v30 = (char *)v24 + v33;
  v31 = (char *)v25 + v33;
  v32 = sub_1C0301954();
  if (!__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
    goto LABEL_19;
LABEL_17:
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
  memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
LABEL_20:
  a3 = v109;
  *(_QWORD *)((char *)v24 + v28[20]) = *(_QWORD *)((char *)v25 + v28[20]);
  *((_BYTE *)v24 + v28[21]) = *((_BYTE *)v25 + v28[21]);
  *(_OWORD *)((char *)v24 + v28[22]) = *(_OWORD *)((char *)v25 + v28[22]);
  *((_BYTE *)v24 + v28[23]) = *((_BYTE *)v25 + v28[23]);
  *(_OWORD *)((char *)v24 + v28[24]) = *(_OWORD *)((char *)v25 + v28[24]);
  swift_storeEnumTagMultiPayload();
LABEL_21:
  *(_BYTE *)(a1 + v22[11]) = *(_BYTE *)(a2 + v22[11]);
  *(_BYTE *)(a1 + v22[12]) = *(_BYTE *)(a2 + v22[12]);
  *(_BYTE *)(a1 + v22[13]) = *(_BYTE *)(a2 + v22[13]);
  v35 = v22[14];
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v36, 1, v38);
  v40 = __swift_getEnumTagSinglePayload(v37, 1, v38);
  if (EnumTagSinglePayload)
  {
    if (!v40)
    {
      v41 = swift_getEnumCaseMultiPayload();
      if (v41 == 1)
      {
        v110 = a3;
        *(_OWORD *)v36 = *(_OWORD *)v37;
        *(_BYTE *)(v36 + 16) = *(_BYTE *)(v37 + 16);
        *(_OWORD *)(v36 + 24) = *(_OWORD *)(v37 + 24);
        *(_OWORD *)(v36 + 40) = *(_OWORD *)(v37 + 40);
        *(_OWORD *)(v36 + 56) = *(_OWORD *)(v37 + 56);
        *(_OWORD *)(v36 + 72) = *(_OWORD *)(v37 + 72);
        *(_OWORD *)(v36 + 88) = *(_OWORD *)(v37 + 88);
        *(_OWORD *)(v36 + 104) = *(_OWORD *)(v37 + 104);
        *(_OWORD *)(v36 + 120) = *(_OWORD *)(v37 + 120);
        *(_OWORD *)(v36 + 136) = *(_OWORD *)(v37 + 136);
        *(_OWORD *)(v36 + 152) = *(_OWORD *)(v37 + 152);
        *(_OWORD *)(v36 + 168) = *(_OWORD *)(v37 + 168);
        *(_OWORD *)(v36 + 184) = *(_OWORD *)(v37 + 184);
        *(_OWORD *)(v36 + 200) = *(_OWORD *)(v37 + 200);
        *(_QWORD *)(v36 + 216) = *(_QWORD *)(v37 + 216);
        v56 = (int *)type metadata accessor for Contact();
        v57 = v56[19];
        v58 = (void *)(v36 + v57);
        v59 = (const void *)(v37 + v57);
        v60 = sub_1C0301954();
        if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60))
        {
          v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v59, v60);
          __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
        }
        *(_QWORD *)(v36 + v56[20]) = *(_QWORD *)(v37 + v56[20]);
        *(_BYTE *)(v36 + v56[21]) = *(_BYTE *)(v37 + v56[21]);
        *(_OWORD *)(v36 + v56[22]) = *(_OWORD *)(v37 + v56[22]);
        *(_BYTE *)(v36 + v56[23]) = *(_BYTE *)(v37 + v56[23]);
        *(_OWORD *)(v36 + v56[24]) = *(_OWORD *)(v37 + v56[24]);
      }
      else
      {
        if (v41)
        {
          memcpy((void *)v36, (const void *)v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
LABEL_47:
          __swift_storeEnumTagSinglePayload(v36, 0, 1, v38);
          goto LABEL_48;
        }
        v110 = a3;
        *(_OWORD *)v36 = *(_OWORD *)v37;
        *(_BYTE *)(v36 + 16) = *(_BYTE *)(v37 + 16);
        *(_OWORD *)(v36 + 24) = *(_OWORD *)(v37 + 24);
        *(_OWORD *)(v36 + 40) = *(_OWORD *)(v37 + 40);
        *(_OWORD *)(v36 + 56) = *(_OWORD *)(v37 + 56);
        *(_OWORD *)(v36 + 72) = *(_OWORD *)(v37 + 72);
        *(_OWORD *)(v36 + 88) = *(_OWORD *)(v37 + 88);
        *(_OWORD *)(v36 + 104) = *(_OWORD *)(v37 + 104);
        *(_OWORD *)(v36 + 120) = *(_OWORD *)(v37 + 120);
        *(_OWORD *)(v36 + 136) = *(_OWORD *)(v37 + 136);
        *(_OWORD *)(v36 + 152) = *(_OWORD *)(v37 + 152);
        *(_OWORD *)(v36 + 168) = *(_OWORD *)(v37 + 168);
        *(_OWORD *)(v36 + 184) = *(_OWORD *)(v37 + 184);
        *(_OWORD *)(v36 + 200) = *(_OWORD *)(v37 + 200);
        *(_QWORD *)(v36 + 216) = *(_QWORD *)(v37 + 216);
        v42 = (int *)type metadata accessor for Contact();
        v43 = v42[19];
        v44 = (void *)(v36 + v43);
        v45 = (const void *)(v37 + v43);
        v46 = sub_1C0301954();
        if (__swift_getEnumTagSinglePayload((uint64_t)v45, 1, v46))
        {
          v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
          __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v46);
        }
        *(_QWORD *)(v36 + v42[20]) = *(_QWORD *)(v37 + v42[20]);
        *(_BYTE *)(v36 + v42[21]) = *(_BYTE *)(v37 + v42[21]);
        *(_OWORD *)(v36 + v42[22]) = *(_OWORD *)(v37 + v42[22]);
        *(_BYTE *)(v36 + v42[23]) = *(_BYTE *)(v37 + v42[23]);
        *(_OWORD *)(v36 + v42[24]) = *(_OWORD *)(v37 + v42[24]);
      }
      swift_storeEnumTagMultiPayload();
      a3 = v110;
      goto LABEL_47;
    }
    goto LABEL_29;
  }
  if (v40)
  {
    sub_1C0044B78(v36, &qword_1ED7261A8);
LABEL_29:
    v48 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261B8) - 8);
LABEL_30:
    memcpy((void *)v36, (const void *)v37, *(_QWORD *)(v48 + 64));
    goto LABEL_48;
  }
  if (a1 == a2)
    goto LABEL_48;
  sub_1C0044B78(v36, &qword_1ED7261A8);
  v49 = swift_getEnumCaseMultiPayload();
  if (v49 == 1)
  {
    v112 = a3;
    *(_OWORD *)v36 = *(_OWORD *)v37;
    *(_BYTE *)(v36 + 16) = *(_BYTE *)(v37 + 16);
    *(_OWORD *)(v36 + 24) = *(_OWORD *)(v37 + 24);
    *(_OWORD *)(v36 + 40) = *(_OWORD *)(v37 + 40);
    *(_OWORD *)(v36 + 56) = *(_OWORD *)(v37 + 56);
    *(_OWORD *)(v36 + 72) = *(_OWORD *)(v37 + 72);
    *(_OWORD *)(v36 + 88) = *(_OWORD *)(v37 + 88);
    *(_OWORD *)(v36 + 104) = *(_OWORD *)(v37 + 104);
    *(_OWORD *)(v36 + 120) = *(_OWORD *)(v37 + 120);
    *(_OWORD *)(v36 + 136) = *(_OWORD *)(v37 + 136);
    *(_OWORD *)(v36 + 152) = *(_OWORD *)(v37 + 152);
    *(_OWORD *)(v36 + 168) = *(_OWORD *)(v37 + 168);
    *(_OWORD *)(v36 + 184) = *(_OWORD *)(v37 + 184);
    *(_OWORD *)(v36 + 200) = *(_OWORD *)(v37 + 200);
    *(_QWORD *)(v36 + 216) = *(_QWORD *)(v37 + 216);
    v62 = (int *)type metadata accessor for Contact();
    v63 = v62[19];
    v64 = (void *)(v36 + v63);
    v65 = (const void *)(v37 + v63);
    v66 = sub_1C0301954();
    if (__swift_getEnumTagSinglePayload((uint64_t)v65, 1, v66))
    {
      v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
      __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v66);
    }
    a3 = v112;
    *(_QWORD *)(v36 + v62[20]) = *(_QWORD *)(v37 + v62[20]);
    *(_BYTE *)(v36 + v62[21]) = *(_BYTE *)(v37 + v62[21]);
    *(_OWORD *)(v36 + v62[22]) = *(_OWORD *)(v37 + v62[22]);
    *(_BYTE *)(v36 + v62[23]) = *(_BYTE *)(v37 + v62[23]);
    *(_OWORD *)(v36 + v62[24]) = *(_OWORD *)(v37 + v62[24]);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    if (v49)
    {
      v48 = *(_QWORD *)(v38 - 8);
      goto LABEL_30;
    }
    v111 = a3;
    *(_OWORD *)v36 = *(_OWORD *)v37;
    *(_BYTE *)(v36 + 16) = *(_BYTE *)(v37 + 16);
    *(_OWORD *)(v36 + 24) = *(_OWORD *)(v37 + 24);
    *(_OWORD *)(v36 + 40) = *(_OWORD *)(v37 + 40);
    *(_OWORD *)(v36 + 56) = *(_OWORD *)(v37 + 56);
    *(_OWORD *)(v36 + 72) = *(_OWORD *)(v37 + 72);
    *(_OWORD *)(v36 + 88) = *(_OWORD *)(v37 + 88);
    *(_OWORD *)(v36 + 104) = *(_OWORD *)(v37 + 104);
    *(_OWORD *)(v36 + 120) = *(_OWORD *)(v37 + 120);
    *(_OWORD *)(v36 + 136) = *(_OWORD *)(v37 + 136);
    *(_OWORD *)(v36 + 152) = *(_OWORD *)(v37 + 152);
    *(_OWORD *)(v36 + 168) = *(_OWORD *)(v37 + 168);
    *(_OWORD *)(v36 + 184) = *(_OWORD *)(v37 + 184);
    *(_OWORD *)(v36 + 200) = *(_OWORD *)(v37 + 200);
    *(_QWORD *)(v36 + 216) = *(_QWORD *)(v37 + 216);
    v50 = (int *)type metadata accessor for Contact();
    v51 = v50[19];
    v52 = (void *)(v36 + v51);
    v53 = (const void *)(v37 + v51);
    v54 = sub_1C0301954();
    if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v54))
    {
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED725F50);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
      __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v54);
    }
    *(_QWORD *)(v36 + v50[20]) = *(_QWORD *)(v37 + v50[20]);
    *(_BYTE *)(v36 + v50[21]) = *(_BYTE *)(v37 + v50[21]);
    *(_OWORD *)(v36 + v50[22]) = *(_OWORD *)(v37 + v50[22]);
    *(_BYTE *)(v36 + v50[23]) = *(_BYTE *)(v37 + v50[23]);
    *(_OWORD *)(v36 + v50[24]) = *(_OWORD *)(v37 + v50[24]);
    swift_storeEnumTagMultiPayload();
    a3 = v111;
  }
LABEL_48:
  v68 = v22[15];
  v69 = a1 + v68;
  v70 = a2 + v68;
  if (*(_QWORD *)(a1 + v68 + 8) == 1)
  {
LABEL_51:
    v72 = *(_OWORD *)(v70 + 16);
    *(_OWORD *)v69 = *(_OWORD *)v70;
    *(_OWORD *)(v69 + 16) = v72;
    *(_OWORD *)(v69 + 32) = *(_OWORD *)(v70 + 32);
    goto LABEL_53;
  }
  v71 = *(_QWORD *)(v70 + 8);
  if (v71 == 1)
  {
    sub_1C015FEC4(v69);
    goto LABEL_51;
  }
  *(_QWORD *)v69 = *(_QWORD *)v70;
  *(_QWORD *)(v69 + 8) = v71;
  swift_bridgeObjectRelease();
  v73 = *(_QWORD *)(v70 + 24);
  *(_QWORD *)(v69 + 16) = *(_QWORD *)(v70 + 16);
  *(_QWORD *)(v69 + 24) = v73;
  swift_bridgeObjectRelease();
  v74 = *(_QWORD *)(v70 + 40);
  *(_QWORD *)(v69 + 32) = *(_QWORD *)(v70 + 32);
  *(_QWORD *)(v69 + 40) = v74;
  swift_bridgeObjectRelease();
LABEL_53:
  v75 = v22[16];
  v76 = (_BYTE *)(a1 + v75);
  v77 = (_BYTE *)(a2 + v75);
  *v76 = *v77;
  v76[1] = v77[1];
  v76[2] = v77[2];
  v76[3] = v77[3];
  v76[4] = v77[4];
  v78 = v22[17];
  v79 = (_QWORD *)(a1 + v78);
  v80 = (uint64_t *)(a2 + v78);
  v82 = *v80;
  v81 = v80[1];
  *v79 = v82;
  v79[1] = v81;
  swift_bridgeObjectRelease();
  v83 = v22[18];
  v84 = a1 + v83;
  v85 = a2 + v83;
  v86 = sub_1C0301D5C();
  v87 = *(_QWORD *)(v86 - 8);
  v88 = *(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 40);
  v88(v84, v85, v86);
  v89 = v22[19];
  v90 = (void *)(a1 + v89);
  v91 = (const void *)(a2 + v89);
  LODWORD(v84) = __swift_getEnumTagSinglePayload(a1 + v89, 1, v86);
  v92 = __swift_getEnumTagSinglePayload((uint64_t)v91, 1, v86);
  if ((_DWORD)v84)
  {
    if (!v92)
    {
      (*(void (**)(void *, const void *, uint64_t))(v87 + 32))(v90, v91, v86);
      __swift_storeEnumTagSinglePayload((uint64_t)v90, 0, 1, v86);
      goto LABEL_59;
    }
    goto LABEL_58;
  }
  if (v92)
  {
    (*(void (**)(void *, uint64_t))(v87 + 8))(v90, v86);
LABEL_58:
    v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728070);
    memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    goto LABEL_59;
  }
  v88((uint64_t)v90, (uint64_t)v91, v86);
LABEL_59:
  *(_BYTE *)(a1 + v22[20]) = *(_BYTE *)(a2 + v22[20]);
  v94 = v22[21];
  v95 = (_QWORD *)(a1 + v94);
  v96 = (uint64_t *)(a2 + v94);
  v98 = *v96;
  v97 = v96[1];
  *v95 = v98;
  v95[1] = v97;
  swift_bridgeObjectRelease();
  v99 = *(int *)(a3 + 20);
  v100 = a1 + v99;
  v101 = a2 + v99;
  v102 = *(unsigned __int8 *)(a1 + v99 + 24);
  if (v102 == 255)
  {
LABEL_63:
    *(_OWORD *)v100 = *(_OWORD *)v101;
    *(_OWORD *)(v100 + 9) = *(_OWORD *)(v101 + 9);
    return a1;
  }
  v103 = *(unsigned __int8 *)(v101 + 24);
  if (v103 == 255)
  {
    sub_1C020D710(v100);
    goto LABEL_63;
  }
  v104 = *(_QWORD *)(v101 + 16);
  v105 = *(_QWORD *)v100;
  v106 = *(_QWORD *)(v100 + 8);
  v107 = *(_QWORD *)(v100 + 16);
  *(_OWORD *)v100 = *(_OWORD *)v101;
  *(_QWORD *)(v100 + 16) = v104;
  *(_BYTE *)(v100 + 24) = v103;
  sub_1C01DAD5C(v105, v106, v107, v102);
  return a1;
}

uint64_t sub_1C02F8420()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C02F842C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContactResolverRunTimeData(0);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    OUTLINED_FUNCTION_46(a1, a2, v4);
  else
    OUTLINED_FUNCTION_37_0();
}

uint64_t sub_1C02F8494()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C02F84A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v8;

  type metadata accessor for ContactResolverRunTimeData(0);
  OUTLINED_FUNCTION_0_6();
  if (v8)
  {
    OUTLINED_FUNCTION_49_3(a1, a2, a2, v7);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 20) + 24) = ~(_BYTE)a2;
    OUTLINED_FUNCTION_37_0();
  }
}

uint64_t sub_1C02F8500()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ContactResolverRunTimeData(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1C02F8570(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  _DWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v27;
  char *v28;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[7];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    a1[4] = a2[4];
    v12 = (int *)type metadata accessor for StitchableInteraction();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA150);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = v11[1];
      *v10 = *v11;
      v10[1] = v15;
      v16 = v11[3];
      v10[2] = v11[2];
      v10[3] = v16;
      v17 = v12[6];
      v27 = (char *)v11 + v17;
      v28 = (char *)v10 + v17;
      v18 = sub_1C0301CFC();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19(v28, v27, v18);
      *(_QWORD *)((char *)v10 + v12[7]) = *(_QWORD *)((char *)v11 + v12[7]);
      *((_BYTE *)v10 + v12[8]) = *((_BYTE *)v11 + v12[8]);
      *(_QWORD *)((char *)v10 + v12[9]) = *(_QWORD *)((char *)v11 + v12[9]);
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, (uint64_t)v12);
    }
    v20 = a3[8];
    v21 = a3[9];
    v22 = (_DWORD *)((char *)v4 + v20);
    v23 = (_DWORD *)((char *)a2 + v20);
    *v22 = *v23;
    *(_DWORD *)((char *)v22 + 3) = *(_DWORD *)((char *)v23 + 3);
    *(_QWORD *)((char *)v4 + v21) = *(_QWORD *)((char *)a2 + v21);
    v24 = a3[11];
    *((_BYTE *)v4 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    *((_BYTE *)v4 + v24) = *((_BYTE *)a2 + v24);
    v25 = a3[13];
    *((_BYTE *)v4 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    *((_BYTE *)v4 + v25) = *((_BYTE *)a2 + v25);
  }
  swift_retain();
  return v4;
}

uint64_t sub_1C02F8744(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for StitchableInteraction();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_1C0301CFC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

_QWORD *sub_1C02F87FC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  char *v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  v8 = a3[7];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = (int *)type metadata accessor for StitchableInteraction();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA150);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v10[1];
    *v9 = *v10;
    v9[1] = v13;
    v14 = v10[3];
    v9[2] = v10[2];
    v9[3] = v14;
    v15 = v11[6];
    v25 = (char *)v10 + v15;
    v26 = (char *)v9 + v15;
    v16 = sub_1C0301CFC();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17(v26, v25, v16);
    *(_QWORD *)((char *)v9 + v11[7]) = *(_QWORD *)((char *)v10 + v11[7]);
    *((_BYTE *)v9 + v11[8]) = *((_BYTE *)v10 + v11[8]);
    *(_QWORD *)((char *)v9 + v11[9]) = *(_QWORD *)((char *)v10 + v11[9]);
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, (uint64_t)v11);
  }
  v18 = a3[8];
  v19 = a3[9];
  v20 = (_DWORD *)((char *)a1 + v18);
  v21 = (_DWORD *)((char *)a2 + v18);
  *v20 = *v21;
  *(_DWORD *)((char *)v20 + 3) = *(_DWORD *)((char *)v21 + 3);
  *(_QWORD *)((char *)a1 + v19) = *(_QWORD *)((char *)a2 + v19);
  v22 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + v22) = *((_BYTE *)a2 + v22);
  v23 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + v23) = *((_BYTE *)a2 + v23);
  swift_retain();
  return a1;
}

_QWORD *sub_1C02F89A8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int *v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  int *v18;
  int v19;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = (int *)type metadata accessor for StitchableInteraction();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, (uint64_t)v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)v9);
  if (!EnumTagSinglePayload)
  {
    if (!v11)
    {
      *v7 = *v8;
      v7[1] = v8[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7[2] = v8[2];
      v7[3] = v8[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v21 = v9[6];
      v22 = (char *)v7 + v21;
      v23 = (char *)v8 + v21;
      v24 = sub_1C0301CFC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
      *(_QWORD *)((char *)v7 + v9[7]) = *(_QWORD *)((char *)v8 + v9[7]);
      *((_BYTE *)v7 + v9[8]) = *((_BYTE *)v8 + v9[8]);
      *(_QWORD *)((char *)v7 + v9[9]) = *(_QWORD *)((char *)v8 + v9[9]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1C003DD84((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA150);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v7[3] = v8[3];
  v12 = v9[6];
  v25 = (char *)v8 + v12;
  v26 = (char *)v7 + v12;
  v13 = sub_1C0301CFC();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v26, v25, v13);
  *(_QWORD *)((char *)v7 + v9[7]) = *(_QWORD *)((char *)v8 + v9[7]);
  *((_BYTE *)v7 + v9[8]) = *((_BYTE *)v8 + v9[8]);
  *(_QWORD *)((char *)v7 + v9[9]) = *(_QWORD *)((char *)v8 + v9[9]);
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, (uint64_t)v9);
LABEL_7:
  v16 = a3[8];
  v17 = (_DWORD *)((char *)a1 + v16);
  v18 = (int *)((char *)a2 + v16);
  v19 = *v18;
  *(_DWORD *)((char *)v17 + 3) = *(int *)((char *)v18 + 3);
  *v17 = v19;
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_retain();
  swift_release();
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  return a1;
}

uint64_t sub_1C02F8C74(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  _DWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[7];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for StitchableInteraction();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA150);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = v9[1];
    *v8 = *v9;
    v8[1] = v12;
    v13 = v10[6];
    v14 = (char *)v8 + v13;
    v15 = (char *)v9 + v13;
    v16 = sub_1C0301CFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    *(_QWORD *)((char *)v8 + v10[7]) = *(_QWORD *)((char *)v9 + v10[7]);
    *((_BYTE *)v8 + v10[8]) = *((_BYTE *)v9 + v10[8]);
    *(_QWORD *)((char *)v8 + v10[9]) = *(_QWORD *)((char *)v9 + v10[9]);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, (uint64_t)v10);
  }
  v17 = a3[8];
  v18 = a3[9];
  v19 = (_DWORD *)(a1 + v17);
  v20 = (_DWORD *)(a2 + v17);
  *v19 = *v20;
  *(_DWORD *)((char *)v19 + 3) = *(_DWORD *)((char *)v20 + 3);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  v21 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  v22 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  return a1;
}

_QWORD *sub_1C02F8DCC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  int EnumTagSinglePayload;
  int v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  _DWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = (int *)type metadata accessor for StitchableInteraction();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v11);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v11);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      v27 = v10[1];
      *v9 = *v10;
      v9[1] = v27;
      swift_bridgeObjectRelease();
      v28 = v10[3];
      v9[2] = v10[2];
      v9[3] = v28;
      swift_bridgeObjectRelease();
      v29 = v11[6];
      v30 = (char *)v9 + v29;
      v31 = (char *)v10 + v29;
      v32 = sub_1C0301CFC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
      *(_QWORD *)((char *)v9 + v11[7]) = *(_QWORD *)((char *)v10 + v11[7]);
      *((_BYTE *)v9 + v11[8]) = *((_BYTE *)v10 + v11[8]);
      *(_QWORD *)((char *)v9 + v11[9]) = *(_QWORD *)((char *)v10 + v11[9]);
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1C003DD84((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA150);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v14 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v14;
  v15 = v11[6];
  v16 = (char *)v9 + v15;
  v17 = (char *)v10 + v15;
  v18 = sub_1C0301CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  *(_QWORD *)((char *)v9 + v11[7]) = *(_QWORD *)((char *)v10 + v11[7]);
  *((_BYTE *)v9 + v11[8]) = *((_BYTE *)v10 + v11[8]);
  *(_QWORD *)((char *)v9 + v11[9]) = *(_QWORD *)((char *)v10 + v11[9]);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, (uint64_t)v11);
LABEL_7:
  v20 = a3[8];
  v21 = a3[9];
  v22 = (_DWORD *)((char *)a1 + v20);
  v23 = (_DWORD *)((char *)a2 + v20);
  *v22 = *v23;
  *(_DWORD *)((char *)v22 + 3) = *(_DWORD *)((char *)v23 + 3);
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
  swift_release();
  v24 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + v24) = *((_BYTE *)a2 + v24);
  v25 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + v25) = *((_BYTE *)a2 + v25);
  return a1;
}

uint64_t sub_1C02F8FF4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C02F9000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_33_15(*(_QWORD *)(a1 + 8));
    OUTLINED_FUNCTION_37_0();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA150);
    OUTLINED_FUNCTION_46(a1 + *(int *)(a3 + 28), a2, v6);
  }
}

uint64_t sub_1C02F905C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C02F9068(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_37_0();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA150);
    OUTLINED_FUNCTION_49_3(a1 + *(int *)(a4 + 28), a2, a2, v7);
  }
}

void sub_1C02F90C8()
{
  unint64_t v0;

  sub_1C02F9170();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1C02F9170()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF5C45E8[0])
  {
    type metadata accessor for StitchableInteraction();
    v0 = sub_1C030448C();
    if (!v1)
      atomic_store(v0, qword_1EF5C45E8);
  }
}

unint64_t sub_1C02F91C4()
{
  unint64_t result;

  result = qword_1EF5C4640;
  if (!qword_1EF5C4640)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327D88, &type metadata for StitchedContactData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C4640);
  }
  return result;
}

unint64_t sub_1C02F9200()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF5C4650;
  if (!qword_1EF5C4650)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF5C4648);
    sub_1C006831C(&qword_1EF5C4658, type metadata accessor for StitchedContactResolverRequest, (uint64_t)&unk_1C03276E0);
    v3 = v2;
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0DEAF10], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF5C4650);
  }
  return result;
}

unint64_t sub_1C02F927C()
{
  unint64_t result;

  result = qword_1EF5C4678;
  if (!qword_1EF5C4678)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327D38, &unk_1E79AA050);
    atomic_store(result, (unint64_t *)&qword_1EF5C4678);
  }
  return result;
}

unint64_t sub_1C02F92B8()
{
  unint64_t result;

  result = qword_1EF5C4688;
  if (!qword_1EF5C4688)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327D10, &unk_1E79AA170);
    atomic_store(result, (unint64_t *)&qword_1EF5C4688);
  }
  return result;
}

unint64_t sub_1C02F92F4()
{
  unint64_t result;

  result = qword_1EF5C4698;
  if (!qword_1EF5C4698)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327CD0, &unk_1E79A9FC0);
    atomic_store(result, (unint64_t *)&qword_1EF5C4698);
  }
  return result;
}

uint64_t sub_1C02F9330(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3;
    result = MEMORY[0x1C3B9827C](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C02F938C()
{
  unint64_t result;

  result = qword_1EF5C46A8;
  if (!qword_1EF5C46A8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327CA8, &unk_1E79AA170);
    atomic_store(result, (unint64_t *)&qword_1EF5C46A8);
  }
  return result;
}

unint64_t sub_1C02F93C8()
{
  unint64_t result;

  result = qword_1EF5C46B8;
  if (!qword_1EF5C46B8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327C30, &type metadata for StitchedContactResolverRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C46B8);
  }
  return result;
}

unint64_t sub_1C02F9404()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF5C46C8;
  if (!qword_1EF5C46C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF5C46C0);
    sub_1C006831C(&qword_1EF5C46D0, type metadata accessor for StitchedContactResolverRecommendation, (uint64_t)&unk_1C03276B8);
    v3 = v2;
    result = MEMORY[0x1C3B9827C](MEMORY[0x1E0DEAF10], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF5C46C8);
  }
  return result;
}

unint64_t sub_1C02F9480()
{
  unint64_t result;

  result = qword_1EF5C46E0;
  if (!qword_1EF5C46E0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327BE0, &type metadata for StitchedContactResolverRecommendation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C46E0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StitchedContactResolverRecommendation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C02F9508 + 4 * byte_1C032751D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C02F953C + 4 * byte_1C0327518[v4]))();
}

uint64_t sub_1C02F953C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02F9544(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02F954CLL);
  return result;
}

uint64_t sub_1C02F9558(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02F9560);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C02F9564(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02F956C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StitchedContactResolverRecommendation.CodingKeys()
{
  return &type metadata for StitchedContactResolverRecommendation.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for StitchedContactResolverRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C02F95D4 + 4 * byte_1C0327527[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C02F9608 + 4 * byte_1C0327522[v4]))();
}

uint64_t sub_1C02F9608(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02F9610(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02F9618);
  return result;
}

uint64_t sub_1C02F9624(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02F962CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C02F9630(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02F9638(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StitchedContactResolverRequest.CodingKeys()
{
  return &type metadata for StitchedContactResolverRequest.CodingKeys;
}

void type metadata accessor for StitchedContactUserPrompt.DecodingErr()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C02F9660(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C02F96AC + 4 * byte_1C0327531[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C02F96E0 + 4 * byte_1C032752C[v4]))();
}

uint64_t sub_1C02F96E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02F96E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02F96F0);
  return result;
}

uint64_t sub_1C02F96FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02F9704);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C02F9708(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02F9710(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for StitchedContactUserPrompt.Keys()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t storeEnumTagSinglePayload for StitchedContactData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1C02F9774 + 4 * byte_1C032753B[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1C02F97A8 + 4 * byte_1C0327536[v4]))();
}

uint64_t sub_1C02F97A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02F97B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02F97B8);
  return result;
}

uint64_t sub_1C02F97C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02F97CCLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1C02F97D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02F97D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StitchedContactData.CodingKeys()
{
  return &type metadata for StitchedContactData.CodingKeys;
}

uint64_t sub_1C02F97F4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C02F9840 + 4 * byte_1C0327545[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C02F9874 + 4 * byte_1C0327540[v4]))();
}

uint64_t sub_1C02F9874(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02F987C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02F9884);
  return result;
}

uint64_t sub_1C02F9890(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02F9898);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C02F989C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02F98A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for StitchedContactConfirmationResolution()
{
  OUTLINED_FUNCTION_17_2();
}

_DWORD *__swift_memcpy7_1(_DWORD *result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_DWORD *)((char *)result + 3) = *(int *)((char *)a2 + 3);
  *result = v2;
  return result;
}

uint64_t sub_1C02F98D0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[7])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C02F991C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 6) = 0;
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 7) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 7) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

void type metadata accessor for PotentialRetryInteractionInfo()
{
  OUTLINED_FUNCTION_17_2();
}

uint64_t sub_1C02F9970()
{
  unsigned __int8 *v0;

  return sub_1C02F2964(*v0);
}

uint64_t sub_1C02F9978()
{
  sub_1C02FA78C();
  return sub_1C03040F0();
}

uint64_t sub_1C02F99D4()
{
  sub_1C02FA78C();
  return sub_1C03040CC();
}

uint64_t sub_1C02F9A20(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = 0;
  if (((a1 ^ a2) & 1) != 0
    || ((a1 >> 8) & 1) != ((a2 >> 8) & 1)
    || ((a1 >> 16) & 1) != ((a2 >> 16) & 1)
    || ((a1 >> 24) & 1) != ((a2 >> 24) & 1)
    || (BYTE4(a1) & 1) != (BYTE4(a2) & 1))
  {
    return v2;
  }
  v3 = a2 & 0xFF0000000000;
  v4 = 0xA0000000000;
  if ((a1 & 0xFF0000000000) != 0xA0000000000)
  {
    if (v3 == 0xA0000000000)
      return 0;
    v3 = qword_1C0327F10[(uint64_t)(a1 << 16) >> 56];
    v4 = qword_1C0327F10[(uint64_t)(a2 << 16) >> 56];
  }
  if (v3 != v4)
    return 0;
  v5 = a2 & 0xFF000000000000;
  if ((a1 & 0xFF000000000000) == 0xA000000000000)
  {
    if (v5 != 0xA000000000000)
      return 0;
  }
  else if (v5 == 0xA000000000000
         || qword_1C0327F10[(uint64_t)(a1 << 8) >> 56] != qword_1C0327F10[(uint64_t)(a2 << 8) >> 56])
  {
    return 0;
  }
  return 1;
}

uint64_t sub_1C02F9AFC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000026 && a2 == 0x80000001C033A240 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000027 && a2 == 0x80000001C033A270 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000001C033A2A0 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001C033A2D0 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000001C033A2F0 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001C0332630 || (sub_1C0304A08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001C033A320)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_1C0304A08();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_1C02F9D98(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1C02F9DD4 + 4 * byte_1C032754A[a1]))(0xD000000000000026, 0x80000001C033A240);
}

uint64_t sub_1C02F9DD4()
{
  uint64_t v0;

  return v0 - 1;
}

void sub_1C02F9E44()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_40_0();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C4750);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_3();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C02FA750();
  sub_1C0304BA0();
  OUTLINED_FUNCTION_41_3();
  if (!v0)
  {
    OUTLINED_FUNCTION_41_3();
    OUTLINED_FUNCTION_41_3();
    OUTLINED_FUNCTION_41_3();
    OUTLINED_FUNCTION_41_3();
    sub_1C020DEA8();
    OUTLINED_FUNCTION_9_82();
    OUTLINED_FUNCTION_9_82();
  }
  OUTLINED_FUNCTION_75_5(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_28_0();
}

unint64_t sub_1C02F9FDC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  unsigned __int8 v15;
  unsigned __int8 v16;

  OUTLINED_FUNCTION_40_0();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C4768);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_58(v2);
  sub_1C02FA750();
  OUTLINED_FUNCTION_15_66();
  if (v0)
    return OUTLINED_FUNCTION_10_0();
  v5 = OUTLINED_FUNCTION_1_41();
  v6 = OUTLINED_FUNCTION_1_41();
  v7 = OUTLINED_FUNCTION_1_41();
  v14 = OUTLINED_FUNCTION_1_41();
  v13 = OUTLINED_FUNCTION_1_41();
  sub_1C020DFE0();
  OUTLINED_FUNCTION_36_39();
  OUTLINED_FUNCTION_36_39();
  OUTLINED_FUNCTION_65_8(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_10_0();
  v9 = 0x100000000;
  if ((v13 & 1) == 0)
    v9 = 0;
  v10 = 0x1000000;
  if ((v14 & 1) == 0)
    v10 = 0;
  v11 = 0x10000;
  if ((v7 & 1) == 0)
    v11 = 0;
  v12 = 256;
  if ((v6 & 1) == 0)
    v12 = 0;
  return v12 & 0xFFFFFFFFFFFFFFFELL | v5 & 1 | v11 | v10 | v9 | ((unint64_t)v16 << 40) | ((unint64_t)v15 << 48);
}

uint64_t sub_1C02FA1F0()
{
  unsigned __int8 *v0;

  return sub_1C02F9D98(*v0);
}

uint64_t sub_1C02FA1F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C02F9AFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C02FA21C()
{
  sub_1C02FA750();
  return sub_1C0304BAC();
}

uint64_t sub_1C02FA244()
{
  sub_1C02FA750();
  return sub_1C0304BB8();
}

int8x8_t sub_1C02FA26C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;
  int8x8_t result;
  uint64x2_t v5;
  int16x8_t v6;

  v3 = sub_1C02F9FDC();
  if (!v1)
  {
    *(_BYTE *)a1 = v3 & 1;
    v5 = (uint64x2_t)vdupq_n_s64(v3);
    v6 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v5, (uint64x2_t)xmmword_1C0305B80), (int32x4_t)vshlq_u64(v5, (uint64x2_t)xmmword_1C0305B70));
    *(int8x8_t *)v6.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v6), (int8x8_t)0x1000100010001);
    result = vmovn_s16(v6);
    *(_DWORD *)(a1 + 1) = result.i32[0];
    *(_BYTE *)(a1 + 5) = BYTE5(v3);
    *(_BYTE *)(a1 + 6) = BYTE6(v3);
  }
  return result;
}

void sub_1C02FA2DC()
{
  sub_1C02F9E44();
}

uint64_t sub_1C02FA354(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[5];
  v7 = a1[6];
  v8 = *a2;
  v9 = a2[1];
  v10 = a2[2];
  v11 = a2[3];
  v12 = a2[4];
  v13 = a2[5];
  v14 = a2[6];
  if (a1[4])
    v15 = 0x100000000;
  else
    v15 = 0;
  v16 = v5 == 0;
  v17 = 0x1000000;
  if (v16)
    v18 = 0;
  else
    v18 = 0x1000000;
  v16 = v4 == 0;
  v19 = 0x10000;
  if (v16)
    v20 = 0;
  else
    v20 = 0x10000;
  v16 = v3 == 0;
  v21 = 256;
  if (v16)
    v22 = 0;
  else
    v22 = 256;
  v23 = v22 | v2 | v20 | v18 | v15 | (v6 << 40) | (v7 << 48);
  if (v12)
    v24 = 0x100000000;
  else
    v24 = 0;
  if (!v11)
    v17 = 0;
  if (!v10)
    v19 = 0;
  if (!v9)
    v21 = 0;
  return sub_1C02F9A20(v23, v21 | v8 | v19 | v17 | v24 | (v13 << 40) | (v14 << 48));
}

unint64_t sub_1C02FA414()
{
  unint64_t result;

  result = qword_1EF5C46E8;
  if (!qword_1EF5C46E8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03278A0, &unk_1E79AA170);
    atomic_store(result, (unint64_t *)&qword_1EF5C46E8);
  }
  return result;
}

unint64_t sub_1C02FA454()
{
  unint64_t result;

  result = qword_1EF5C46F0;
  if (!qword_1EF5C46F0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327958, &type metadata for StitchedContactData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C46F0);
  }
  return result;
}

unint64_t sub_1C02FA494()
{
  unint64_t result;

  result = qword_1EF5C46F8;
  if (!qword_1EF5C46F8)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327A48, &unk_1E79AA050);
    atomic_store(result, (unint64_t *)&qword_1EF5C46F8);
  }
  return result;
}

unint64_t sub_1C02FA4D4()
{
  unint64_t result;

  result = qword_1EF5C4700;
  if (!qword_1EF5C4700)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327B00, &type metadata for StitchedContactResolverRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C4700);
  }
  return result;
}

unint64_t sub_1C02FA514()
{
  unint64_t result;

  result = qword_1EF5C4708;
  if (!qword_1EF5C4708)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327BB8, &type metadata for StitchedContactResolverRecommendation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C4708);
  }
  return result;
}

unint64_t sub_1C02FA554()
{
  unint64_t result;

  result = qword_1EF5C4710;
  if (!qword_1EF5C4710)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327B28, &type metadata for StitchedContactResolverRecommendation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C4710);
  }
  return result;
}

unint64_t sub_1C02FA594()
{
  unint64_t result;

  result = qword_1EF5C4718;
  if (!qword_1EF5C4718)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327B50, &type metadata for StitchedContactResolverRecommendation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C4718);
  }
  return result;
}

unint64_t sub_1C02FA5D4()
{
  unint64_t result;

  result = qword_1EF5C4720;
  if (!qword_1EF5C4720)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327A70, &type metadata for StitchedContactResolverRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C4720);
  }
  return result;
}

unint64_t sub_1C02FA614()
{
  unint64_t result;

  result = qword_1EF5C4728;
  if (!qword_1EF5C4728)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327A98, &type metadata for StitchedContactResolverRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C4728);
  }
  return result;
}

unint64_t sub_1C02FA654()
{
  unint64_t result;

  result = qword_1EF5C4730;
  if (!qword_1EF5C4730)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327980, &unk_1E79AA050);
    atomic_store(result, (unint64_t *)&qword_1EF5C4730);
  }
  return result;
}

unint64_t sub_1C02FA694()
{
  unint64_t result;

  result = qword_1EF5C4738;
  if (!qword_1EF5C4738)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03279A8, &unk_1E79AA050);
    atomic_store(result, (unint64_t *)&qword_1EF5C4738);
  }
  return result;
}

unint64_t sub_1C02FA6D4()
{
  unint64_t result;

  result = qword_1EF5C4740;
  if (!qword_1EF5C4740)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03278C8, &type metadata for StitchedContactData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C4740);
  }
  return result;
}

unint64_t sub_1C02FA714()
{
  unint64_t result;

  result = qword_1EF5C4748;
  if (!qword_1EF5C4748)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C03278F0, &type metadata for StitchedContactData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C4748);
  }
  return result;
}

unint64_t sub_1C02FA750()
{
  unint64_t result;

  result = qword_1EF5C4758;
  if (!qword_1EF5C4758)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327EB8, &type metadata for PotentialRetryInteractionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C4758);
  }
  return result;
}

unint64_t sub_1C02FA78C()
{
  unint64_t result;

  result = qword_1EF5C4760;
  if (!qword_1EF5C4760)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327828, &unk_1E79AA170);
    atomic_store(result, (unint64_t *)&qword_1EF5C4760);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PotentialRetryInteractionInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1C02FA814 + 4 * byte_1C0327556[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1C02FA848 + 4 * byte_1C0327551[v4]))();
}

uint64_t sub_1C02FA848(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02FA850(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02FA858);
  return result;
}

uint64_t sub_1C02FA864(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02FA86CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1C02FA870(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02FA878(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PotentialRetryInteractionInfo.CodingKeys()
{
  return &type metadata for PotentialRetryInteractionInfo.CodingKeys;
}

unint64_t sub_1C02FA898()
{
  unint64_t result;

  result = qword_1EF5C4770;
  if (!qword_1EF5C4770)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327E90, &type metadata for PotentialRetryInteractionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C4770);
  }
  return result;
}

unint64_t sub_1C02FA8D8()
{
  unint64_t result;

  result = qword_1EF5C4778;
  if (!qword_1EF5C4778)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327E00, &type metadata for PotentialRetryInteractionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C4778);
  }
  return result;
}

unint64_t sub_1C02FA918()
{
  unint64_t result;

  result = qword_1EF5C4780;
  if (!qword_1EF5C4780)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327E28, &type metadata for PotentialRetryInteractionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF5C4780);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_8_84()
{
  return sub_1C030499C();
}

uint64_t OUTLINED_FUNCTION_9_98()
{
  return 0x6974756C6F736572;
}

uint64_t OUTLINED_FUNCTION_14_76()
{
  return sub_1C0304A08();
}

uint64_t OUTLINED_FUNCTION_15_66()
{
  return sub_1C0304B88();
}

uint64_t OUTLINED_FUNCTION_18_53(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_1C02F9330(a1, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_19_55()
{
  return 0x616D7269666E6F63;
}

uint64_t OUTLINED_FUNCTION_29_41()
{
  return sub_1C03048AC();
}

uint64_t OUTLINED_FUNCTION_32_36()
{
  return type metadata accessor for PrivatizedContactResolverConfig(0);
}

uint64_t OUTLINED_FUNCTION_34_41()
{
  uint64_t v0;

  return v0 - 96;
}

uint64_t OUTLINED_FUNCTION_41_27()
{
  return 25705;
}

ValueMetadata *type metadata accessor for NowPlayingAppUsageRelativeSignal()
{
  return &type metadata for NowPlayingAppUsageRelativeSignal;
}

int64_t sub_1C02FAA38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t result;
  int64_t v6;
  int v7;
  int v8;
  char v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = a1;
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1AF4();
    v4 = a2;
    v26 = v27;
    result = sub_1C00824B4(v3);
    v6 = result;
    v8 = v7;
    v10 = v9 & 1;
    v24 = v3;
    v25 = v3 + 56;
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v3 + 32))
    {
      if (((*(_QWORD *)(v25 + (((unint64_t)v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
        goto LABEL_19;
      if (*(_DWORD *)(v3 + 36) != v8)
        goto LABEL_20;
      v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v6);
      v13 = *v11;
      v12 = v11[1];
      v14 = *(_QWORD *)(v4 + 16);
      swift_bridgeObjectRetain();
      if (v14)
      {
        swift_bridgeObjectRetain();
        v15 = sub_1C00B3C3C(v13, v12);
        if ((v16 & 1) != 0)
          v17 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15);
        else
          v17 = 0;
        swift_bridgeObjectRelease();
      }
      else
      {
        v17 = 0;
      }
      v18 = v26;
      v19 = *(_QWORD *)(v26 + 16);
      if (v19 >= *(_QWORD *)(v26 + 24) >> 1)
      {
        sub_1C00B1AF4();
        v4 = a2;
        v18 = v26;
      }
      *(_QWORD *)(v18 + 16) = v19 + 1;
      v26 = v18;
      v20 = (_QWORD *)(v18 + 24 * v19);
      v20[4] = v13;
      v20[5] = v12;
      v20[6] = v17;
      v3 = v24;
      result = sub_1C0082610(v6, v8, v10 & 1, v24);
      v6 = result;
      v8 = v21;
      v10 = v22 & 1;
      if (!--v2)
      {
        sub_1C00A6E5C(result, v21, v22 & 1);
        swift_bridgeObjectRelease();
        return v26;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1C02FAC38(uint64_t a1, uint64_t a2)
{
  __int128 *v2;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v9;
  __int128 v10;

  v5 = swift_allocObject();
  v6 = *v2;
  v7 = v2[1];
  *(_OWORD *)(v5 + 16) = *v2;
  *(_OWORD *)(v5 + 32) = v7;
  *(_OWORD *)(v5 + 48) = v2[2];
  *(_QWORD *)(v5 + 64) = *((_QWORD *)v2 + 6);
  *(_QWORD *)(v5 + 72) = a1;
  *(_QWORD *)(v5 + 80) = a2;
  v10 = v6;
  v9 = *((_QWORD *)v2 + 2);
  sub_1C0098758((uint64_t)&v10);
  sub_1C00CDCC8((uint64_t)&v9);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C03023C8();
  return swift_release();
}

_QWORD *sub_1C02FACF8(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  _QWORD *result;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  double v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t *);
  uint64_t v49[5];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;

  v47 = a4;
  v48 = a3;
  v6 = sub_1C030205C();
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_1C0301CFC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)v44 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)v44 - v18;
  v20 = *a1;
  (*(void (**)(uint64_t))(a2 + 32))(v17);
  sub_1C0301C54();
  sub_1C00E5714((uint64_t)sub_1C02FB670, (uint64_t)v49, v20, v21, v22, v23, v24, v25, v44[0], v16, v45, v46, v47, (uint64_t)v48, v49[0], v49[1], (uint64_t)v16, v49[3], v49[4],
    v50);
  sub_1C0301C54();
  v26 = sub_1C0302320();
  swift_bridgeObjectRelease();
  v27 = *(void (**)(char *, uint64_t))(v10 + 8);
  v27(v13, v9);
  result = sub_1C006F164(&v50);
  v29 = v53;
  v30 = v54;
  v31 = (unint64_t)(v52 + 64) >> 6;
  v32 = 0.0;
  if (!v54)
    goto LABEL_3;
LABEL_2:
  v33 = __clz(__rbit64(v30));
  v30 &= v30 - 1;
  v34 = v33 | (v29 << 6);
  while (1)
  {
    v32 = v32 + *(double *)(*(_QWORD *)(v50 + 56) + 8 * v34);
    if (v30)
      goto LABEL_2;
LABEL_3:
    v35 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v35 >= v31)
      goto LABEL_23;
    v36 = *(_QWORD *)(v51 + 8 * v35);
    v37 = v29 + 1;
    if (!v36)
    {
      v37 = v29 + 2;
      if (v29 + 2 >= v31)
        goto LABEL_23;
      v36 = *(_QWORD *)(v51 + 8 * v37);
      if (!v36)
      {
        v37 = v29 + 3;
        if (v29 + 3 >= v31)
          goto LABEL_23;
        v36 = *(_QWORD *)(v51 + 8 * v37);
        if (!v36)
        {
          v37 = v29 + 4;
          if (v29 + 4 >= v31)
            goto LABEL_23;
          v36 = *(_QWORD *)(v51 + 8 * v37);
          if (!v36)
          {
            v37 = v29 + 5;
            if (v29 + 5 >= v31)
              goto LABEL_23;
            v36 = *(_QWORD *)(v51 + 8 * v37);
            if (!v36)
            {
              v37 = v29 + 6;
              if (v29 + 6 >= v31)
                goto LABEL_23;
              v36 = *(_QWORD *)(v51 + 8 * v37);
              if (!v36)
              {
                v38 = v29 + 7;
                while (v38 < v31)
                {
                  v36 = *(_QWORD *)(v51 + 8 * v38++);
                  if (v36)
                  {
                    v37 = v38 - 1;
                    goto LABEL_20;
                  }
                }
LABEL_23:
                swift_bridgeObjectRetain();
                swift_release();
                v39 = sub_1C02FB688(v26, 1000.0, v32);
                swift_bridgeObjectRelease();
                swift_retain();
                v40 = swift_bridgeObjectRetain();
                v41 = sub_1C02FAA38(v40, v39);
                swift_release();
                swift_bridgeObjectRelease();
                *v8 = sub_1C02CA948(v41);
                v43 = v45;
                v42 = v46;
                (*(void (**)(uint64_t *, _QWORD, uint64_t))(v45 + 104))(v8, *MEMORY[0x1E0DA4720], v46);
                v48(v8);
                (*(void (**)(uint64_t *, uint64_t))(v43 + 8))(v8, v42);
                v27(v19, v9);
                return (_QWORD *)((uint64_t (*)(uint64_t, uint64_t))v27)(v44[1], v9);
              }
            }
          }
        }
      }
    }
LABEL_20:
    v30 = (v36 - 1) & v36;
    v34 = __clz(__rbit64(v36)) + (v37 << 6);
    v29 = v37;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C02FB04C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  __objc2_prop_list **p_base_props;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  unsigned int v37;
  unsigned int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;

  v55 = a2;
  v57 = a3;
  v5 = sub_1C0302344();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x1E0C80A78](v5);
  v54 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1C030232C();
  v53 = *(_QWORD *)(v50 - 8);
  v7 = MEMORY[0x1E0C80A78](v50);
  v49 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v48 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728360);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C0301CFC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v48 - v19;
  v21 = *a1;
  v22 = sub_1C00D8030(*a1);
  if (!v23)
    goto LABEL_13;
  v56 = v3;
  v24 = objc_msgSend(v21, sel_absoluteTimestamp, v22);
  if (!v24)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v14);
    goto LABEL_12;
  }
  v25 = v24;
  sub_1C0301CD8();

  v26 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v26(v13, v18, v14);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v14);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14) == 1)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    sub_1C00CF854((uint64_t)v13);
LABEL_13:
    v33 = sub_1C0302314();
    v34 = v57;
    v35 = 1;
    return __swift_storeEnumTagSinglePayload(v34, v35, 1, v33);
  }
  v26(v20, v13, v14);
  if ((sub_1C0301C6C() & 1) == 0)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v27 = sub_1C00D8030(v21);
  if (v28)
  {
    v29 = v28;
    v55 = v27;
    swift_bridgeObjectRelease();
    v30 = HIBYTE(v29) & 0xF;
    if ((v29 & 0x2000000000000000) == 0)
      v30 = v55 & 0xFFFFFFFFFFFFLL;
    if (!v30)
      goto LABEL_16;
  }
  v31 = objc_msgSend(v21, sel_bundleID);
  if (v31)
  {

    p_base_props = (__objc2_prop_list **)(&ContactRankerInput + 64);
  }
  else
  {
LABEL_16:
    p_base_props = &ContactRankerInput.base_props;
    if (!objc_msgSend(v21, sel_playbackState))
    {
      swift_bridgeObjectRelease();
      v45 = v57;
      v26((char *)v57, v20, v14);
      v46 = *MEMORY[0x1E0DA4A78];
      v47 = sub_1C0302314();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(v45, v46, v47);
      return __swift_storeEnumTagSinglePayload(v45, 0, 1, v47);
    }
  }
  v37 = objc_msgSend(v21, (SEL)p_base_props[317]);
  if (v37 - 2 < 4)
  {
    v38 = (unsigned int *)MEMORY[0x1E0DA4A98];
LABEL_19:
    v39 = v53;
    v40 = v50;
    (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v10, *v38, v50);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v49, v10, v40);
    sub_1C0302338();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v10, v40);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    v41 = v57;
    (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v57, v54, v52);
    v42 = *MEMORY[0x1E0DA4A70];
    v43 = sub_1C0302314();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v41, v42, v43);
    v34 = v41;
    v35 = 0;
    v33 = v43;
    return __swift_storeEnumTagSinglePayload(v34, v35, 1, v33);
  }
  v44 = v37;
  if (v37 == 1)
  {
    v38 = (unsigned int *)MEMORY[0x1E0DA4AA0];
    goto LABEL_19;
  }
  if (!v37)
    goto LABEL_24;
  type metadata accessor for BMMediaNowPlayingPlaybackState(0);
  v58 = v44;
  result = sub_1C0304A50();
  __break(1u);
  return result;
}

uint64_t sub_1C02FB50C()
{
  uint64_t v0;

  v0 = qword_1EF5C4788;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C02FB544()
{
  sub_1C02FB5E4();
  return sub_1C0302104();
}

uint64_t sub_1C02FB594()
{
  sub_1C02FB5E4();
  return sub_1C03020D4();
}

unint64_t sub_1C02FB5E4()
{
  unint64_t result;

  result = qword_1EF5C4798;
  if (!qword_1EF5C4798)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C0327F90, &type metadata for NowPlayingAppUsageRelativeSignal);
    atomic_store(result, (unint64_t *)&qword_1EF5C4798);
  }
  return result;
}

uint64_t sub_1C02FB620()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_1C02FB664(uint64_t *a1)
{
  uint64_t v1;

  return sub_1C02FACF8(a1, v1 + 16, *(void (**)(uint64_t *))(v1 + 72), *(_QWORD *)(v1 + 80));
}

uint64_t sub_1C02FB670@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1C02FB04C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1C02FB688(uint64_t a1, double a2, double a3)
{
  uint64_t result;
  _QWORD *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  double v20;
  uint64_t *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED727D60);
  result = sub_1C0304804();
  v7 = (_QWORD *)result;
  v8 = 0;
  v9 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a1 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  v14 = result + 64;
  if (!v12)
    goto LABEL_5;
LABEL_4:
  v15 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v15 | (v8 << 6); ; i = __clz(__rbit64(v18)) + (v8 << 6))
  {
    v20 = round(*(double *)(*(_QWORD *)(a1 + 56) + 8 * i) * a2 / a3);
    if ((~*(_QWORD *)&v20 & 0x7FF0000000000000) == 0)
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    if (v20 <= -9.22337204e18)
      goto LABEL_27;
    if (v20 >= 9.22337204e18)
      goto LABEL_28;
    v21 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v22 = *v21;
    result = v21[1];
    *(_QWORD *)(v14 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v23 = (_QWORD *)(v7[6] + 16 * i);
    *v23 = v22;
    v23[1] = result;
    *(_QWORD *)(v7[7] + 8 * i) = (uint64_t)v20;
    v24 = v7[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_29;
    v7[2] = v26;
    result = swift_bridgeObjectRetain();
    if (v12)
      goto LABEL_4;
LABEL_5:
    v17 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_30;
    if (v17 >= v13)
      return (uint64_t)v7;
    v18 = *(_QWORD *)(v9 + 8 * v17);
    ++v8;
    if (!v18)
    {
      v8 = v17 + 1;
      if (v17 + 1 >= v13)
        return (uint64_t)v7;
      v18 = *(_QWORD *)(v9 + 8 * v8);
      if (!v18)
      {
        v8 = v17 + 2;
        if (v17 + 2 >= v13)
          return (uint64_t)v7;
        v18 = *(_QWORD *)(v9 + 8 * v8);
        if (!v18)
          break;
      }
    }
LABEL_18:
    v12 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v13)
    return (uint64_t)v7;
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
  {
    v8 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v8 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v8 >= v13)
      return (uint64_t)v7;
    v18 = *(_QWORD *)(v9 + 8 * v8);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_1C02FB8A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_27_54();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_15_67();
  OUTLINED_FUNCTION_38_6();
  OUTLINED_FUNCTION_23_50();
  v1 = sub_1C0302D7C();
  sub_1C006831C(&qword_1EF5C47B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DA1280], MEMORY[0x1E0DA0440]);
  OUTLINED_FUNCTION_16_65();
  OUTLINED_FUNCTION_5_106();
  if (!v1)
  {
    OUTLINED_FUNCTION_20_48();
    OUTLINED_FUNCTION_4_122();
    if (!v2)
    {
      OUTLINED_FUNCTION_50_1();
      OUTLINED_FUNCTION_75_12();
      OUTLINED_FUNCTION_7_106();
      OUTLINED_FUNCTION_0_157(MEMORY[0x1E0DEE9D8], v6, v7);
      OUTLINED_FUNCTION_1_146();
      OUTLINED_FUNCTION_31_42((unint64_t *)&qword_1ED727E90, v3, (uint64_t)&protocol conformance descriptor for InferenceError);
      v4 = OUTLINED_FUNCTION_3_148();
      OUTLINED_FUNCTION_6_112(v4, v5);
    }
    OUTLINED_FUNCTION_0_16();
  }
  OUTLINED_FUNCTION_11_90();
  OUTLINED_FUNCTION_7_5();
}

uint64_t sub_1C02FB9A0()
{
  return sub_1C02FBAE4((uint64_t (*)(uint64_t))type metadata accessor for RunTimeDataRecord, &qword_1EF5C47C8, (uint64_t)&unk_1C0312CF0);
}

void sub_1C02FB9CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_27_54();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_15_67();
  OUTLINED_FUNCTION_38_6();
  OUTLINED_FUNCTION_23_50();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5C47D0);
  sub_1C008F1DC();
  OUTLINED_FUNCTION_16_65();
  OUTLINED_FUNCTION_5_106();
  if (!v1)
  {
    OUTLINED_FUNCTION_20_48();
    OUTLINED_FUNCTION_4_122();
    if (!v2)
    {
      OUTLINED_FUNCTION_50_1();
      OUTLINED_FUNCTION_75_12();
      OUTLINED_FUNCTION_7_106();
      OUTLINED_FUNCTION_0_157(MEMORY[0x1E0DEE9D8], v6, v7);
      OUTLINED_FUNCTION_1_146();
      OUTLINED_FUNCTION_31_42((unint64_t *)&qword_1ED727E90, v3, (uint64_t)&protocol conformance descriptor for InferenceError);
      v4 = OUTLINED_FUNCTION_3_148();
      OUTLINED_FUNCTION_6_112(v4, v5);
    }
    OUTLINED_FUNCTION_0_16();
  }
  OUTLINED_FUNCTION_11_90();
  OUTLINED_FUNCTION_7_5();
}

uint64_t sub_1C02FBAB8()
{
  return sub_1C02FBAE4((uint64_t (*)(uint64_t))type metadata accessor for Contact, &qword_1EF5BC758, (uint64_t)&protocol conformance descriptor for Contact);
}

uint64_t sub_1C02FBAE4(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;

  OUTLINED_FUNCTION_27_54();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_28_43();
  OUTLINED_FUNCTION_38_6();
  OUTLINED_FUNCTION_23_50();
  a1(0);
  sub_1C006831C(a2, a1, a3);
  sub_1C0301648();
  swift_release();
  if (!v3)
  {
    OUTLINED_FUNCTION_20_48();
    v9 = OUTLINED_FUNCTION_4_122();
    if (v10)
    {
      v4 = v9;
    }
    else
    {
      v4 = OUTLINED_FUNCTION_50_1();
      OUTLINED_FUNCTION_75_12();
      OUTLINED_FUNCTION_7_106();
      OUTLINED_FUNCTION_0_157(MEMORY[0x1E0DEE9D8], v15, v16);
      OUTLINED_FUNCTION_1_146();
      OUTLINED_FUNCTION_31_42((unint64_t *)&qword_1ED727E90, v12, (uint64_t)&protocol conformance descriptor for InferenceError);
      v13 = OUTLINED_FUNCTION_3_148();
      OUTLINED_FUNCTION_6_112(v13, v14);
    }
    OUTLINED_FUNCTION_0_16();
  }
  return v4;
}

void sub_1C02FBC1C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  OUTLINED_FUNCTION_27_54();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_28_43();
  OUTLINED_FUNCTION_38_6();
  OUTLINED_FUNCTION_23_50();
  sub_1C02FC6E8();
  OUTLINED_FUNCTION_16_65();
  OUTLINED_FUNCTION_5_106();
  if (!a3)
  {
    OUTLINED_FUNCTION_20_48();
    OUTLINED_FUNCTION_4_122();
    if (!v6)
    {
      OUTLINED_FUNCTION_50_1();
      OUTLINED_FUNCTION_75_12();
      OUTLINED_FUNCTION_7_106();
      OUTLINED_FUNCTION_0_157(MEMORY[0x1E0DEE9D8], v10, a1);
      OUTLINED_FUNCTION_1_146();
      OUTLINED_FUNCTION_31_42((unint64_t *)&qword_1ED727E90, v7, (uint64_t)&protocol conformance descriptor for InferenceError);
      v8 = OUTLINED_FUNCTION_3_148();
      OUTLINED_FUNCTION_6_112(v8, v9);
    }
    OUTLINED_FUNCTION_0_16();
  }
  OUTLINED_FUNCTION_11_90();
  OUTLINED_FUNCTION_7_5();
}

void sub_1C02FBD10(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  OUTLINED_FUNCTION_27_54();
  OUTLINED_FUNCTION_12_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_28_43();
  OUTLINED_FUNCTION_38_6();
  OUTLINED_FUNCTION_23_50();
  sub_1C020DE6C();
  OUTLINED_FUNCTION_16_65();
  OUTLINED_FUNCTION_5_106();
  if (!a4)
  {
    OUTLINED_FUNCTION_20_48();
    OUTLINED_FUNCTION_4_122();
    if (!v8)
    {
      OUTLINED_FUNCTION_50_1();
      OUTLINED_FUNCTION_75_12();
      OUTLINED_FUNCTION_7_106();
      OUTLINED_FUNCTION_0_157(MEMORY[0x1E0DEE9D8], a1, a2);
      OUTLINED_FUNCTION_1_146();
      OUTLINED_FUNCTION_31_42((unint64_t *)&qword_1ED727E90, v9, (uint64_t)&protocol conformance descriptor for InferenceError);
      v10 = OUTLINED_FUNCTION_3_148();
      OUTLINED_FUNCTION_6_112(v10, v11);
    }
    OUTLINED_FUNCTION_0_16();
  }
  OUTLINED_FUNCTION_11_90();
  OUTLINED_FUNCTION_7_5();
}

uint64_t sub_1C02FBE0C()
{
  return sub_1C02FBAE4(type metadata accessor for StitchedContactData, &qword_1EF5C47E8, (uint64_t)&unk_1C0327758);
}

uint64_t sub_1C02FBE38()
{
  return sub_1C02FBAE4((uint64_t (*)(uint64_t))MEMORY[0x1E0DA05B0], &qword_1EF5C47C0, MEMORY[0x1E0DA05C0]);
}

_BYTE *sub_1C02FBE64()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t *v12;
  _BYTE v14[264];

  v2 = sub_1C0303EEC();
  MEMORY[0x1E0C80A78](v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  memcpy(v14, v0, sizeof(v14));
  sub_1C0301660();
  swift_allocObject();
  sub_1C0301654();
  sub_1C003F850();
  v5 = sub_1C0301648();
  v7 = v6;
  swift_release();
  if (!v1)
  {
    sub_1C0303EE0();
    v8 = sub_1C0303EC8();
    if (v9)
    {
      v4 = (_BYTE *)v8;
    }
    else
    {
      v4 = (_BYTE *)type metadata accessor for InferenceError();
      swift_allocObject();
      v11 = sub_1C026A508(66, 0, 0xE000000000000000, 0xD000000000000077, 0x80000001C033A340, 0x697274536E6F736ALL, 0xEC0000002928676ELL, 14, MEMORY[0x1E0DEE9D8], 2);
      sub_1C026A340(0, 0xE000000000000000);
      sub_1C006831C((unint64_t *)&qword_1ED727E90, (uint64_t (*)(uint64_t))type metadata accessor for InferenceError, (uint64_t)&protocol conformance descriptor for InferenceError);
      swift_allocError();
      *v12 = v11;
      swift_willThrow();
    }
    sub_1C0040600(v5, v7);
  }
  return v4;
}

BOOL sub_1C02FC068()
{
  uint64_t v1;

  sub_1C0302668();
  sub_1C0303040();
  sub_1C0302E54();
  swift_release();
  if (v1)
    swift_release();
  return v1 != 0;
}

void sub_1C02FC0CC(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  unsigned __int8 v32;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  int v44;
  int v45;
  unint64_t v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD v52[2];
  uint64_t v53;
  int v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unsigned __int8 v59[16];
  uint64_t v60;
  uint64_t v61;

  v2 = sub_1C0302770();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C0302D70();
  v8 = 0xE000000000000000;
  if (v7)
  {
    v9 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0)
      v9 = v6 & 0xFFFFFFFFFFFFLL;
    if (v9)
    {
      v10 = sub_1C020004C();
      v55 = v11;
      v56 = v10;
      OUTLINED_FUNCTION_14();
      goto LABEL_8;
    }
    OUTLINED_FUNCTION_14();
  }
  v55 = 0xE000000000000000;
  v56 = 0;
LABEL_8:
  sub_1C02FC540((char *)v59);
  v12 = v59[0];
  sub_1C030304C();
  OUTLINED_FUNCTION_5_55();
  v58 = v14;
  if (!v23)
    v8 = v13;
  v15 = sub_1C0302AC4();
  if (!v15)
  {
    v36 = MEMORY[0x1E0DEE9D8];
LABEL_54:
    v50 = v55;
    v49 = v56;
    v51 = v58;
    *(_BYTE *)a1 = v12;
    *(_QWORD *)(a1 + 8) = v51;
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v36;
    *(_QWORD *)(a1 + 32) = v49;
    *(_QWORD *)(a1 + 40) = v50;
    OUTLINED_FUNCTION_1();
    return;
  }
  v54 = v12;
  v53 = a1;
  v60 = MEMORY[0x1E0DEE9E8];
  v61 = MEMORY[0x1E0DEE9E8];
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v57 = v8;
    v17 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v52[1] = v15;
    v18 = v15 + v17;
    v19 = *(_QWORD *)(v3 + 72);
    v20 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v20(v5, v18, v2);
      v21 = sub_1C0302764();
      if (v22)
      {
        v23 = v21 == 0x54746361746E6F63 && v22 == 0xEB00000000657079;
        if (v23)
        {
          OUTLINED_FUNCTION_14();
        }
        else
        {
          v24 = sub_1C0304A08();
          OUTLINED_FUNCTION_14();
          if ((v24 & 1) == 0)
            goto LABEL_25;
        }
        v25 = sub_1C0302758();
        v27 = v26;
        OUTLINED_FUNCTION_44_31();
        if ((OUTLINED_FUNCTION_29_42() & 1) != 0)
        {
          OUTLINED_FUNCTION_44_31();
          v28 = sub_1C0303F94();
          OUTLINED_FUNCTION_25_44(v28);
          OUTLINED_FUNCTION_43_29();
        }
        OUTLINED_FUNCTION_39_32();
        if ((OUTLINED_FUNCTION_29_42() & 1) != 0)
        {
          OUTLINED_FUNCTION_39_32();
          v29 = sub_1C0303F94();
          OUTLINED_FUNCTION_25_44(v29);
          OUTLINED_FUNCTION_43_29();
        }
        OUTLINED_FUNCTION_32_37();
        if ((OUTLINED_FUNCTION_29_42() & 1) != 0)
        {
          OUTLINED_FUNCTION_32_37();
          v30 = sub_1C0303F94();
          OUTLINED_FUNCTION_25_44(v30);
          OUTLINED_FUNCTION_43_29();
        }
        v31 = v25 == 0x656E6F6870 && v27 == 0xE500000000000000;
        if (v31 || (OUTLINED_FUNCTION_37_36(), (OUTLINED_FUNCTION_3_1() & 1) != 0))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v32 = 2;
          goto LABEL_44;
        }
        if (v25 == 0x6C69616D65 && v27 == 0xE500000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_43:
          swift_bridgeObjectRelease();
          v32 = 1;
LABEL_44:
          sub_1C022D344(v59, v32);
          OUTLINED_FUNCTION_55();
          v57 = 0xE000000000000000;
          v58 = 0;
          goto LABEL_26;
        }
        OUTLINED_FUNCTION_37_36();
        v34 = OUTLINED_FUNCTION_3_1();
        OUTLINED_FUNCTION_14();
        if ((v34 & 1) != 0)
          goto LABEL_43;
      }
LABEL_25:
      OUTLINED_FUNCTION_55();
LABEL_26:
      v18 += v19;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        v35 = v60;
        v8 = v57;
        goto LABEL_47;
      }
    }
  }
  swift_bridgeObjectRelease();
  v35 = MEMORY[0x1E0DEE9E8];
LABEL_47:
  sub_1C00D43BC(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  sub_1C00B0D9C();
  v36 = v37;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v38 = sub_1C00824B4(v35);
  v40 = v39;
  v42 = v41;
  v43 = sub_1C00C72BC(v35);
  LOBYTE(v12) = v54;
  if (((v42 | v45) & 1) == 0)
  {
    a1 = v53;
    if (v40 == v44)
    {
      if (v38 == v43)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C00C72CC(v38, v40, v35, v59);
        v46 = v8;
        v47 = v59[0];
        v48 = *(_QWORD *)(v35 + 16);
        swift_bridgeObjectRelease();
        if (v48 == 1)
          LOBYTE(v12) = v47;
        v8 = v46;
      }
      goto LABEL_54;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1C02FC540@<X0>(char *a1@<X8>)
{
  uint64_t result;
  char v3;
  uint64_t v4;

  sub_1C0302668();
  sub_1C0302F38();
  swift_retain();
  sub_1C0302E54();
  swift_release();
  swift_release();
  if (v4)
  {
    result = swift_release();
    v3 = 2;
  }
  else
  {
    sub_1C0302F44();
    swift_retain();
    sub_1C0302E54();
    swift_release_n();
    result = swift_release();
    v3 = 0;
  }
  *a1 = v3;
  return result;
}

uint64_t sub_1C02FC60C(uint64_t result)
{
  uint64_t v1;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1C0303FAC();
    v1 = sub_1C0304090();
    swift_bridgeObjectRelease();
    return v1;
  }
  return result;
}

void sub_1C02FC6C8(void *a1@<X8>)
{
  UsoEntity_common_Person.toContactQuery()(a1);
}

unint64_t sub_1C02FC6E8()
{
  unint64_t result;

  result = qword_1EF5C47E0;
  if (!qword_1EF5C47E0)
  {
    result = MEMORY[0x1C3B9827C](&unk_1C030CA80, &type metadata for SiriTasksEvaluationData);
    atomic_store(result, (unint64_t *)&qword_1EF5C47E0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_157@<X0>(uint64_t a1@<X8>, uint64_t a2, char a3)
{
  uint64_t v3;

  return sub_1C026A508(66, 0, 0xE000000000000000, 0xD000000000000077, (v3 - 32) | 0x8000000000000000, 0x697274536E6F736ALL, 0xEC0000002928676ELL, 14, a1, a3);
}

uint64_t OUTLINED_FUNCTION_1_146()
{
  return sub_1C026A340(0, 0xE000000000000000);
}

uint64_t OUTLINED_FUNCTION_3_148()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_4_122()
{
  return sub_1C0303EC8();
}

uint64_t OUTLINED_FUNCTION_5_106()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_6_112(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *a2 = v2;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_11_90()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_15_67()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 56) = v0;
  return sub_1C0301660();
}

uint64_t OUTLINED_FUNCTION_16_65()
{
  return sub_1C0301648();
}

uint64_t OUTLINED_FUNCTION_20_48()
{
  return sub_1C0303EE0();
}

void OUTLINED_FUNCTION_22_58(uint64_t a1)
{
  uint64_t *v1;

  sub_1C003E978(a1, v1);
}

uint64_t OUTLINED_FUNCTION_23_50()
{
  return sub_1C0301654();
}

void OUTLINED_FUNCTION_24_40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C022D204(v12 - 112, v10, v11, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t OUTLINED_FUNCTION_25_44(uint64_t result)
{
  return sub_1C02FC60C(result);
}

uint64_t OUTLINED_FUNCTION_27_54()
{
  return sub_1C0303EEC();
}

uint64_t OUTLINED_FUNCTION_29_42()
{
  return sub_1C0304060();
}

_QWORD *OUTLINED_FUNCTION_30_43()
{
  uint64_t v0;

  return sub_1C0040644((_QWORD *)(v0 + 384));
}

uint64_t OUTLINED_FUNCTION_32_37()
{
  return 0x7373657264646120;
}

uint64_t OUTLINED_FUNCTION_34_42(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_37_36()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_40_33()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_41_28()
{
  sub_1C0050474();
}

void OUTLINED_FUNCTION_43_29()
{
  JUMPOUT(0x1C3B96E30);
}

_QWORD *OUTLINED_FUNCTION_45_29()
{
  uint64_t v0;

  return sub_1C003F648((_QWORD *)(v0 + 384));
}

SiriInference::SlotType_optional __swiftcall SlotType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (SiriInference::SlotType_optional)rawValue;
}

uint64_t SlotType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1C02FC8F4()
{
  unint64_t result;

  result = qword_1EF5C4820;
  if (!qword_1EF5C4820)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for SlotType, &type metadata for SlotType);
    atomic_store(result, (unint64_t *)&qword_1EF5C4820);
  }
  return result;
}

SiriInference::SlotType_optional sub_1C02FC930(Swift::Int *a1)
{
  return SlotType.init(rawValue:)(*a1);
}

uint64_t sub_1C02FC938@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = SlotType.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C02FC95C()
{
  sub_1C02FCAD0();
  return sub_1C03040FC();
}

uint64_t sub_1C02FC9B8()
{
  sub_1C02FCAD0();
  return sub_1C03040D8();
}

uint64_t storeEnumTagSinglePayload for SlotType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C02FCA50 + 4 * byte_1C032809D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C02FCA84 + 4 * byte_1C0328098[v4]))();
}

uint64_t sub_1C02FCA84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02FCA8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C02FCA94);
  return result;
}

uint64_t sub_1C02FCAA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C02FCAA8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C02FCAAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C02FCAB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SlotType()
{
  return &type metadata for SlotType;
}

unint64_t sub_1C02FCAD0()
{
  unint64_t result;

  result = qword_1EF5C4828;
  if (!qword_1EF5C4828)
  {
    result = MEMORY[0x1C3B9827C](&protocol conformance descriptor for SlotType, &type metadata for SlotType);
    atomic_store(result, (unint64_t *)&qword_1EF5C4828);
  }
  return result;
}

uint64_t sub_1C02FCB0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1764();
    v3 = v23;
    v6 = (uint64_t *)(a1 + 40);
    do
    {
      v8 = *(v6 - 1);
      v7 = *v6;
      v9 = HIBYTE(*v6) & 0xF;
      if ((*v6 & 0x2000000000000000) == 0)
        v9 = v8 & 0xFFFFFFFFFFFFLL;
      if (v9)
      {
        v10 = *a2;
        v11 = *(_QWORD *)(*a2 + 16);
        OUTLINED_FUNCTION_45_0();
        if (!v11)
          goto LABEL_11;
        OUTLINED_FUNCTION_45_0();
        v12 = sub_1C00B3C3C(v8, v7);
        if ((v13 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_11:
          sub_1C02FF6F8();
          v17 = v16;
          v19 = v18;
          OUTLINED_FUNCTION_45_0();
          swift_bridgeObjectRetain();
          sub_1C00B52A8(v17, v19, v8, v7);
          OUTLINED_FUNCTION_86_3();
          v8 = v17;
          v7 = v19;
          goto LABEL_12;
        }
        v14 = (uint64_t *)(*(_QWORD *)(v10 + 56) + 16 * v12);
        v8 = *v14;
        v15 = v14[1];
        OUTLINED_FUNCTION_47();
        OUTLINED_FUNCTION_86_3();
        v7 = v15;
      }
      else
      {
        OUTLINED_FUNCTION_45_0();
      }
LABEL_12:
      v20 = *(_QWORD *)(v23 + 16);
      if (v20 >= *(_QWORD *)(v23 + 24) >> 1)
        sub_1C00B1764();
      v6 += 2;
      *(_QWORD *)(v23 + 16) = v20 + 1;
      v21 = v23 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v8;
      *(_QWORD *)(v21 + 40) = v7;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1C02FCC84(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t matched;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;

  v3 = v2;
  v17 = a2;
  matched = type metadata accessor for ContactMatchRuntimeData(0);
  v6 = *(_QWORD *)(matched - 8);
  MEMORY[0x1E0C80A78](matched);
  v8 = (uint64_t *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1B9C();
    v10 = v18;
    v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v12 = a1 + v11;
    v13 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      sub_1C02FE880(v12, v17, v8);
      if (v3)
        break;
      v3 = 0;
      v18 = v10;
      v14 = *(_QWORD *)(v10 + 16);
      if (v14 >= *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_1C00B1B9C();
        v10 = v18;
      }
      *(_QWORD *)(v10 + 16) = v14 + 1;
      sub_1C004555C((uint64_t)v8, v10 + v11 + v14 * v13, type metadata accessor for ContactMatchRuntimeData);
      v12 += v13;
      if (!--v9)
        return v10;
    }
    swift_release();
  }
  return v10;
}

uint64_t sub_1C02FCDD4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v24;
  uint64_t v25;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1E80();
    v3 = v25;
    v5 = (uint64_t *)(a1 + 96);
    do
    {
      v6 = *((_BYTE *)v5 - 48);
      v8 = *(v5 - 1);
      v7 = *v5;
      v9 = HIBYTE(*v5) & 0xF;
      if ((*v5 & 0x2000000000000000) == 0)
        v9 = v8 & 0xFFFFFFFFFFFFLL;
      if (v9)
      {
        v24 = *((_BYTE *)v5 - 48);
        v10 = *a2;
        v11 = *(_QWORD *)(*a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (!v11)
          goto LABEL_11;
        swift_bridgeObjectRetain();
        v12 = sub_1C00B3C3C(v8, v7);
        if ((v13 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_11:
          sub_1C02FF6F8();
          v17 = v16;
          v19 = v18;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C00B52A8(v17, v19, v8, v7);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          v8 = v17;
          v7 = v19;
          v6 = v24;
          goto LABEL_12;
        }
        v14 = (uint64_t *)(*(_QWORD *)(v10 + 56) + 16 * v12);
        v8 = *v14;
        v15 = v14[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v7 = v15;
        v6 = v24;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
LABEL_12:
      v20 = *(_QWORD *)(v25 + 16);
      if (v20 >= *(_QWORD *)(v25 + 24) >> 1)
        sub_1C00B1E80();
      *(_QWORD *)(v25 + 16) = v20 + 1;
      v21 = v25 + 80 * v20;
      *(_QWORD *)(v21 + 32) = 0;
      *(_QWORD *)(v21 + 40) = 0xE000000000000000;
      *(_BYTE *)(v21 + 48) = v6;
      *(_QWORD *)(v21 + 56) = 0;
      *(_QWORD *)(v21 + 64) = 0xE000000000000000;
      *(_QWORD *)(v21 + 72) = 0;
      *(_QWORD *)(v21 + 80) = 0xE000000000000000;
      *(_QWORD *)(v21 + 88) = v8;
      *(_QWORD *)(v21 + 96) = v7;
      *(_WORD *)(v21 + 104) = 512;
      v5 += 10;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1C02FD014(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;

  v3 = v2;
  v34 = a2;
  v32 = type metadata accessor for StitchedContactResolverRequest(0);
  v5 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v35 = MEMORY[0x1E0DEE9D8];
    sub_1C00B21A8();
    v9 = v35;
    v31 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v10 = a1 + v31;
    v30 = *(_QWORD *)(v5 + 72);
    while (1)
    {
      v33 = v3;
      sub_1C00638E8(v10, (uint64_t)v7, type metadata accessor for StitchedContactResolverRequest);
      v12 = *((_QWORD *)v7 + 1);
      v11 = *((_QWORD *)v7 + 2);
      v13 = HIBYTE(v11) & 0xF;
      if ((v11 & 0x2000000000000000) == 0)
        v13 = v12 & 0xFFFFFFFFFFFFLL;
      if (!v13)
        goto LABEL_12;
      v14 = *v34;
      v15 = *(_QWORD *)(*v34 + 16);
      swift_bridgeObjectRetain();
      if (!v15)
        goto LABEL_10;
      swift_bridgeObjectRetain();
      v16 = sub_1C00B3C3C(v12, v11);
      if ((v17 & 1) == 0)
        break;
      v18 = (uint64_t *)(*(_QWORD *)(v14 + 56) + 16 * v16);
      v12 = *v18;
      v19 = v18[1];
      swift_bridgeObjectRetain();
LABEL_11:
      swift_bridgeObjectRelease_n();
      v11 = v19;
LABEL_12:
      *((_QWORD *)v7 + 1) = v12;
      *((_QWORD *)v7 + 2) = v11;
      v23 = *(int *)(v32 + 24);
      v24 = swift_bridgeObjectRetain();
      v25 = v33;
      v26 = sub_1C02FD444(v24, v34);
      v3 = v25;
      swift_bridgeObjectRelease_n();
      *(_QWORD *)&v7[v23] = v26;
      v35 = v9;
      v27 = *(_QWORD *)(v9 + 16);
      if (v27 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_1C00B21A8();
        v9 = v35;
      }
      *(_QWORD *)(v9 + 16) = v27 + 1;
      v28 = v30;
      sub_1C004555C((uint64_t)v7, v9 + v31 + v27 * v30, type metadata accessor for StitchedContactResolverRequest);
      v10 += v28;
      if (!--v8)
        return v9;
    }
    swift_bridgeObjectRelease();
LABEL_10:
    sub_1C02FF6F8();
    v21 = v20;
    v19 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C00B52A8(v21, v19, v12, v11);
    v12 = v21;
    goto LABEL_11;
  }
  return v9;
}

uint64_t sub_1C02FD258(uint64_t a1, uint64_t *a2)
{
  int64_t v3;
  uint64_t result;
  uint64_t *i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  int64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32[10];
  _QWORD v33[2];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v38 = MEMORY[0x1E0DEE9D8];
    sub_1C00B1BC8(0, v3, 0);
    result = v38;
    for (i = (uint64_t *)(a1 + 56); ; i += 10)
    {
      v28 = v3;
      v29 = result;
      v6 = *(i - 2);
      v7 = *(i - 1);
      v8 = *i;
      v9 = i[1];
      v10 = i[2];
      v11 = i[3];
      v12 = i[4];
      v14 = i[5];
      v13 = i[6];
      v32[0] = *(i - 3);
      v32[1] = v6;
      v32[2] = v7;
      v32[3] = v8;
      v32[4] = v9;
      v32[5] = v10;
      v32[6] = v11;
      v32[7] = v12;
      v32[8] = v14;
      v32[9] = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C00EE078(v9, v10);
      sub_1C02FE674(v32, a2, (uint64_t)v33);
      if (v31)
        break;
      v31 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C0066AFC(v9, v10);
      v15 = v33[0];
      v16 = v33[1];
      v17 = v34;
      v18 = v35;
      v19 = v36;
      v20 = v37;
      result = v29;
      v38 = v29;
      v22 = *(_QWORD *)(v29 + 16);
      v21 = *(_QWORD *)(v29 + 24);
      if (v22 >= v21 >> 1)
      {
        v30 = v34;
        v25 = v36;
        v26 = v35;
        v24 = v37;
        sub_1C00B1BC8(v21 > 1, v22 + 1, 1);
        v20 = v24;
        v19 = v25;
        v18 = v26;
        v17 = v30;
        result = v38;
      }
      *(_QWORD *)(result + 16) = v22 + 1;
      v23 = result + 80 * v22;
      *(_QWORD *)(v23 + 32) = v15;
      *(_QWORD *)(v23 + 40) = v16;
      *(_OWORD *)(v23 + 48) = v17;
      *(_OWORD *)(v23 + 64) = v18;
      *(_OWORD *)(v23 + 80) = v19;
      *(_OWORD *)(v23 + 96) = v20;
      v3 = v28 - 1;
      if (v28 == 1)
        return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0066AFC(v9, v10);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C02FD444(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  MEMORY[0x1E0C80A78](v6);
  v42 = (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for ContactResolverRunTimeData(0);
  MEMORY[0x1E0C80A78](v41);
  v40 = (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for StitchedContactResolverRecommendation(0);
  v9 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = MEMORY[0x1E0DEE9D8];
  if (v12)
  {
    v46 = MEMORY[0x1E0DEE9D8];
    sub_1C00B221C();
    v36 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v14 = a1 + v36;
    v35 = *(_QWORD *)(v9 + 72);
    v37 = v11;
    v38 = a2;
    do
    {
      v44 = v12;
      sub_1C00638E8(v14, (uint64_t)v11, type metadata accessor for StitchedContactResolverRecommendation);
      v15 = v40;
      sub_1C00638E8((uint64_t)v11, v40, type metadata accessor for ContactResolverRunTimeData);
      v16 = swift_bridgeObjectRetain();
      v17 = sub_1C02FCC84(v16, a2);
      v45 = v3;
      swift_bridgeObjectRelease_n();
      *(_QWORD *)(v15 + 296) = v17;
      v18 = v42;
      v19 = v15 + *(int *)(v41 + 40);
      sub_1C02FEE2C(v19, v42);
      sub_1C006CC50(v18, v19, &qword_1ED7261A8);
      sub_1C02FF810(v15, (uint64_t)v11, type metadata accessor for ContactResolverRunTimeData);
      v20 = &v11[*(int *)(v39 + 20)];
      v22 = *(_QWORD *)v20;
      v21 = *((_QWORD *)v20 + 1);
      v23 = *((_QWORD *)v20 + 2);
      v24 = v20[24];
      if (v24 == 255)
      {
        v30 = -1;
      }
      else
      {
        v43 = sub_1C02FE43C(*(_QWORD *)v20, *((_QWORD *)v20 + 1), *((_QWORD *)v20 + 2), v20[24]);
        v26 = v25;
        v28 = v27;
        v30 = v29;
        sub_1C01DAD48(v22, v21, v23, v24);
        v22 = v43;
        v21 = v26;
        v23 = v28;
      }
      *(_QWORD *)v20 = v22;
      *((_QWORD *)v20 + 1) = v21;
      *((_QWORD *)v20 + 2) = v23;
      v20[24] = v30;
      v13 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C00B221C();
        v13 = v46;
      }
      v11 = v37;
      a2 = v38;
      v31 = v44;
      v32 = *(_QWORD *)(v13 + 16);
      if (v32 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_1C00B221C();
        v13 = v46;
      }
      *(_QWORD *)(v13 + 16) = v32 + 1;
      v33 = v35;
      sub_1C004555C((uint64_t)v11, v13 + v36 + v32 * v35, type metadata accessor for StitchedContactResolverRecommendation);
      v14 += v33;
      v12 = v31 - 1;
      v3 = v45;
    }
    while (v12);
  }
  return v13;
}

uint64_t sub_1C02FD754(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v15[2];
  uint64_t v16;

  v15[1] = a2;
  v4 = type metadata accessor for Contact();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v15[0] = v2;
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1C00B17F8();
    v9 = v16;
    v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v11 = (uint64_t *)(a1 + v10);
    v12 = *(_QWORD *)(v5 + 72);
    do
    {
      sub_1C02FEC40(v11, (uint64_t)v7);
      v16 = v9;
      v13 = *(_QWORD *)(v9 + 16);
      if (v13 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_1C00B17F8();
        v9 = v16;
      }
      *(_QWORD *)(v9 + 16) = v13 + 1;
      sub_1C004555C((uint64_t)v7, v9 + v10 + v13 * v12, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
      v11 = (uint64_t *)((char *)v11 + v12);
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1C02FD894(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v25[8];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[8];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v37 = MEMORY[0x1E0DEE9D8];
    sub_1C00B2420(0, v4, 0);
    v5 = v37;
    v7 = (_QWORD *)(a1 + 72);
    while (1)
    {
      v8 = *(v7 - 4);
      v9 = *(v7 - 3);
      v10 = *(v7 - 2);
      v11 = *(v7 - 1);
      v12 = *v7;
      v25[0] = *((_BYTE *)v7 - 40);
      v26 = v8;
      v27 = v9;
      v28 = v10;
      v29 = v11;
      v30 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C02FF508(v25, a2, (uint64_t)v31);
      if (v3)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = v31[0];
      v15 = v32;
      v14 = v33;
      v17 = v34;
      v16 = v35;
      v18 = v36;
      v37 = v5;
      v20 = *(_QWORD *)(v5 + 16);
      v19 = *(_QWORD *)(v5 + 24);
      if (v20 >= v19 >> 1)
      {
        v23 = v35;
        sub_1C00B2420((char *)(v19 > 1), v20 + 1, 1);
        v16 = v23;
        v5 = v37;
      }
      *(_QWORD *)(v5 + 16) = v20 + 1;
      v21 = v5 + 48 * v20;
      *(_BYTE *)(v21 + 32) = v13;
      *(_QWORD *)(v21 + 40) = v15;
      *(_QWORD *)(v21 + 48) = v14;
      *(_QWORD *)(v21 + 56) = v17;
      *(_QWORD *)(v21 + 64) = v16;
      *(_QWORD *)(v21 + 72) = v18;
      v7 += 6;
      --v4;
      v3 = 0;
      if (!v4)
        return v5;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_1C02FDA14(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v33 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED726DA8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v29[1] = v2;
    v38 = MEMORY[0x1E0DEE9D8];
    sub_1C00B198C();
    v9 = v38;
    v32 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v10 = a1 + v32;
    v31 = *(_QWORD *)(v5 + 72);
    while (1)
    {
      v37 = v8;
      sub_1C0045DFC(v10, (uint64_t)v7, &qword_1ED726DA8);
      v11 = v7[16];
      v12 = *((_QWORD *)v7 + 7);
      v13 = *((_QWORD *)v7 + 8);
      v14 = HIBYTE(v13) & 0xF;
      if ((v13 & 0x2000000000000000) == 0)
        v14 = v12 & 0xFFFFFFFFFFFFLL;
      if (v14)
        break;
      swift_bridgeObjectRetain();
      v36 = v13;
LABEL_13:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)v7 = 0;
      *((_QWORD *)v7 + 1) = 0xE000000000000000;
      v7[16] = v11;
      *((_QWORD *)v7 + 3) = 0;
      *((_QWORD *)v7 + 4) = 0xE000000000000000;
      *((_QWORD *)v7 + 5) = 0;
      *((_QWORD *)v7 + 6) = 0xE000000000000000;
      v24 = v36;
      *((_QWORD *)v7 + 7) = v12;
      *((_QWORD *)v7 + 8) = v24;
      *((_WORD *)v7 + 36) = 512;
      v26 = *(_QWORD *)(v9 + 16);
      v25 = *(_QWORD *)(v9 + 24);
      v38 = v9;
      if (v26 >= v25 >> 1)
      {
        sub_1C00B198C();
        v9 = v38;
      }
      *(_QWORD *)(v9 + 16) = v26 + 1;
      v27 = v31;
      sub_1C02D4850((uint64_t)v7, v9 + v32 + v26 * v31);
      v10 += v27;
      v8 = v37 - 1;
      if (v37 == 1)
        return v9;
    }
    v34 = v7[16];
    v35 = v9;
    v15 = *v33;
    v16 = *(_QWORD *)(*v33 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16)
    {
      swift_bridgeObjectRetain();
      v17 = sub_1C00B3C3C(v12, v13);
      if ((v18 & 1) != 0)
      {
        v19 = (uint64_t *)(*(_QWORD *)(v15 + 56) + 16 * v17);
        v12 = *v19;
        v36 = v19[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
LABEL_12:
        v9 = v35;
        v11 = v34;
        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
    }
    sub_1C02FF6F8();
    v21 = v20;
    v30 = v20;
    v23 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36 = v23;
    sub_1C00B52A8(v21, v23, v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v12 = v30;
    goto LABEL_12;
  }
  return v9;
}

uint64_t sub_1C02FDCF8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *i;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1C00B243C();
    v3 = v25;
    for (i = (_QWORD *)(a1 + 64); ; i += 11)
    {
      v6 = *((_BYTE *)i - 16);
      v7 = i[4];
      v8 = i[6];
      v9 = HIBYTE(v7) & 0xF;
      v24 = i[3];
      if ((v7 & 0x2000000000000000) == 0)
        v9 = v24 & 0xFFFFFFFFFFFFLL;
      if (v9)
        break;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      v15 = v7;
LABEL_13:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = *(_QWORD *)(v25 + 16);
      if (v19 >= *(_QWORD *)(v25 + 24) >> 1)
        sub_1C00B243C();
      *(_QWORD *)(v25 + 16) = v19 + 1;
      v20 = v25 + 88 * v19;
      *(_QWORD *)(v20 + 32) = 0;
      *(_QWORD *)(v20 + 40) = 0xE000000000000000;
      *(_BYTE *)(v20 + 48) = v6;
      *(_QWORD *)(v20 + 56) = 0;
      *(_QWORD *)(v20 + 64) = 0xE000000000000000;
      *(_QWORD *)(v20 + 72) = 0;
      *(_QWORD *)(v20 + 80) = 0xE000000000000000;
      *(_QWORD *)(v20 + 88) = v24;
      *(_QWORD *)(v20 + 96) = v15;
      *(_WORD *)(v20 + 104) = 512;
      *(_QWORD *)(v20 + 112) = v8;
      if (!--v2)
        return v3;
    }
    v23 = *((_BYTE *)i - 16);
    v10 = *a2;
    v11 = *(_QWORD *)(*a2 + 16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    if (v11)
    {
      swift_bridgeObjectRetain();
      v12 = sub_1C00B3C3C(v24, v7);
      if ((v13 & 1) != 0)
      {
        v14 = (uint64_t *)(*(_QWORD *)(v10 + 56) + 16 * v12);
        v15 = v14[1];
        v24 = *v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
LABEL_12:
        v6 = v23;
        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
    }
    sub_1C02FF6F8();
    v17 = v16;
    v15 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C00B52A8(v17, v15, v24, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v24 = v17;
    goto LABEL_12;
  }
  return v3;
}

uint64_t sub_1C02FDFA4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = type metadata accessor for StitchableInteraction();
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA150);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0045DFC(a1, (uint64_t)v9, &qword_1EF5BA150);
  v10 = 1;
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v4) != 1)
  {
    sub_1C004555C((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
    sub_1C02FE27C(v6, a2);
    sub_1C006395C((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StitchableInteraction);
    v10 = 0;
  }
  return __swift_storeEnumTagSinglePayload((uint64_t)a2, v10, 1, v4);
}

uint64_t sub_1C02FE0D4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF5BA150);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C00638E8((uint64_t)a1, (uint64_t)a2, type metadata accessor for StitchedContactData);
  v10 = *a1;
  v9 = a1[1];
  v11 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v11 = *a1 & 0xFFFFFFFFFFFFLL;
  if (!v11)
  {
    OUTLINED_FUNCTION_65();
    goto LABEL_10;
  }
  v12 = *v2;
  if (!*(_QWORD *)(*v3 + 16))
  {
LABEL_9:
    sub_1C02FF6F8();
    v18 = v17;
    v20 = v19;
    OUTLINED_FUNCTION_65();
    swift_bridgeObjectRetain();
    sub_1C00B52A8(v18, v20, v10, v9);
    OUTLINED_FUNCTION_29();
    v10 = v18;
    v9 = v20;
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_65();
  v13 = sub_1C00B3C3C(v10, v9);
  if ((v14 & 1) == 0)
  {
    OUTLINED_FUNCTION_29();
    goto LABEL_9;
  }
  v15 = (uint64_t *)(*(_QWORD *)(v12 + 56) + 16 * v13);
  v10 = *v15;
  v16 = v15[1];
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_29();
  v9 = v16;
LABEL_10:
  swift_bridgeObjectRelease();
  *a2 = v10;
  a2[1] = v9;
  v21 = (uint64_t)a2 + *(int *)(type metadata accessor for StitchedContactData(0) + 28);
  sub_1C02FDFA4(v21, v8);
  sub_1C006CC50((uint64_t)v8, v21, &qword_1EF5BA150);
  v22 = OUTLINED_FUNCTION_47();
  v23 = sub_1C02FD014(v22, v3);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  a2[4] = v23;
  return result;
}

void sub_1C02FE27C(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = (int *)type metadata accessor for StitchableInteraction();
  v7 = swift_bridgeObjectRetain();
  v8 = sub_1C02FD258(v7, v2);
  swift_bridgeObjectRelease();
  v9 = *a1;
  v10 = a1[1];
  v12 = a1[2];
  v11 = a1[3];
  v13 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v13 = v12 & 0xFFFFFFFFFFFFLL;
  if (!v13)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_10;
  }
  v31 = *a1;
  v14 = *v2;
  v15 = *(_QWORD *)(*v3 + 16);
  swift_bridgeObjectRetain();
  if (!v15)
  {
LABEL_9:
    sub_1C02FF6F8();
    v30 = v8;
    v21 = v20;
    v23 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C00B52A8(v21, v23, v12, v11);
    swift_bridgeObjectRelease();
    v12 = v21;
    v11 = v23;
    v8 = v30;
    v9 = v31;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v16 = sub_1C00B3C3C(v12, v11);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v18 = (uint64_t *)(*(_QWORD *)(v14 + 56) + 16 * v16);
  v12 = *v18;
  v19 = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = v19;
  v9 = v31;
LABEL_10:
  v24 = v6[6];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_1C0301CFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v26, v25, v27);
  sub_1C0217D00(*(double *)((char *)a1 + v6[7]));
  v28 = *((_BYTE *)a1 + v6[8]);
  *a2 = v9;
  a2[1] = v10;
  a2[2] = v12;
  a2[3] = v11;
  *(_QWORD *)((char *)a2 + v6[7]) = v29;
  *((_BYTE *)a2 + v6[8]) = v28;
  *(_QWORD *)((char *)a2 + v6[9]) = v8;
}

uint64_t sub_1C02FE43C(uint64_t a1, unint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = v4;
  v8 = a1;
  if (a4)
  {
    v8 = sub_1C02FCB0C(a1, v4);
    if (!a3)
      return v8;
    v14 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v14 = a2 & 0xFFFFFFFFFFFFLL;
    if (v14)
    {
      if (*(_QWORD *)(*v4 + 16))
      {
        swift_bridgeObjectRetain();
        sub_1C00B3C3C(a2, a3);
        if ((v15 & 1) != 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          return v8;
        }
        swift_bridgeObjectRelease();
      }
      sub_1C02FF6F8();
      v17 = v16;
      v19 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C00B52A8(v17, v19, a2, a3);
      swift_bridgeObjectRelease();
      return v8;
    }
LABEL_16:
    swift_bridgeObjectRetain();
    return v8;
  }
  v9 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v9 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v9)
    goto LABEL_16;
  v10 = *v4;
  if (!*(_QWORD *)(*v5 + 16))
  {
LABEL_21:
    sub_1C02FF6F8();
    v21 = v20;
    v23 = v22;
    sub_1C01DAD00(v8, a2, a3, 0);
    swift_bridgeObjectRetain();
    sub_1C00B52A8(v21, v23, v8, a2);
    sub_1C01DAD5C(v8, a2, a3, 0);
    return v21;
  }
  swift_bridgeObjectRetain();
  v11 = sub_1C00B3C3C(v8, a2);
  if ((v12 & 1) == 0)
  {
    sub_1C01DAD5C(v8, a2, a3, 0);
    goto LABEL_21;
  }
  v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 16 * v11);
  swift_bridgeObjectRetain();
  sub_1C01DAD5C(v8, a2, a3, 0);
  return v13;
}

double sub_1C02FE674@<D0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double result;

  v6 = *a1;
  v5 = a1[1];
  v7 = a1[2];
  v8 = a1[3];
  v9 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v9 = *a1 & 0xFFFFFFFFFFFFLL;
  if (v9)
  {
    v10 = *a2;
    if (*(_QWORD *)(*a2 + 16))
    {
      swift_bridgeObjectRetain();
      v11 = sub_1C00B3C3C(v6, v5);
      if ((v12 & 1) != 0)
      {
        v13 = (uint64_t *)(*(_QWORD *)(v10 + 56) + 16 * v11);
        v6 = *v13;
        v14 = v13[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v5 = v14;
        if (!v8)
          goto LABEL_9;
LABEL_12:
        v20 = HIBYTE(v8) & 0xF;
        if ((v8 & 0x2000000000000000) == 0)
          v20 = v7 & 0xFFFFFFFFFFFFLL;
        if (v20)
        {
          if (*(_QWORD *)(*a2 + 16))
          {
            swift_bridgeObjectRetain();
            sub_1C00B3C3C(v7, v8);
            if ((v21 & 1) != 0)
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
LABEL_21:
              v7 = sub_1C020004C();
              v15 = v26;
              swift_bridgeObjectRelease();
              goto LABEL_22;
            }
            swift_bridgeObjectRelease();
          }
          sub_1C02FF6F8();
          v23 = v22;
          v25 = v24;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C00B52A8(v23, v25, v7, v8);
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
        swift_bridgeObjectRetain();
        goto LABEL_21;
      }
      swift_bridgeObjectRelease();
    }
    sub_1C02FF6F8();
    v17 = v16;
    v19 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C00B52A8(v17, v19, v6, v5);
    swift_bridgeObjectRelease();
    v6 = v17;
    v5 = v19;
    if (v8)
      goto LABEL_12;
  }
  else
  {
    swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_12;
  }
LABEL_9:
  v15 = 0;
LABEL_22:
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_QWORD *)(a3 + 16) = v7;
  *(_QWORD *)(a3 + 24) = v15;
  result = 0.0;
  *(_OWORD *)(a3 + 32) = xmmword_1C0307CF0;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  return result;
}

uint64_t sub_1C02FE880@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t *v45;
  uint64_t matched;
  uint64_t v47;
  uint64_t v48[34];
  _QWORD v49[33];
  _BYTE v50[272];

  v45 = a2;
  v5 = type metadata accessor for ContactResolver.SignalSet(0);
  MEMORY[0x1E0C80A78](v5);
  v47 = (uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for Contact();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00638E8(a1, (uint64_t)a3, type metadata accessor for ContactMatchRuntimeData);
  v9[16] = 2;
  *((_QWORD *)v9 + 3) = 0;
  *((_QWORD *)v9 + 4) = 0xE000000000000000;
  *((_QWORD *)v9 + 5) = 0;
  *((_QWORD *)v9 + 6) = 0xE000000000000000;
  *((_QWORD *)v9 + 9) = 0;
  *((_QWORD *)v9 + 10) = 0xE000000000000000;
  *((_QWORD *)v9 + 11) = 0;
  *((_QWORD *)v9 + 12) = 0xE000000000000000;
  *((_QWORD *)v9 + 13) = 0;
  *((_QWORD *)v9 + 14) = 0xE000000000000000;
  *((_QWORD *)v9 + 15) = 0;
  *((_QWORD *)v9 + 16) = 0xE000000000000000;
  *((_QWORD *)v9 + 17) = 0;
  *((_QWORD *)v9 + 18) = 0xE000000000000000;
  *((_QWORD *)v9 + 19) = 0;
  *((_QWORD *)v9 + 20) = 0xE000000000000000;
  *((_QWORD *)v9 + 21) = 0;
  *((_QWORD *)v9 + 22) = 0xE000000000000000;
  *((_QWORD *)v9 + 23) = 0;
  *((_QWORD *)v9 + 24) = 0xE000000000000000;
  v10 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v9 + 25) = 0;
  *((_QWORD *)v9 + 26) = 0xE000000000000000;
  *((_QWORD *)v9 + 27) = v10;
  v11 = (uint64_t)&v9[v7[19]];
  *((_QWORD *)v9 + 7) = 0;
  *((_QWORD *)v9 + 8) = 0xE000000000000000;
  v12 = sub_1C0301954();
  __swift_storeEnumTagSinglePayload(v11, 1, 1, v12);
  v9[v7[21]] = 0;
  v9[v7[23]] = 2;
  v13 = &v9[v7[24]];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0xE000000000000000;
  v14 = *a3;
  v15 = a3[1];
  v16 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0)
    v16 = *a3 & 0xFFFFFFFFFFFFLL;
  if (!v16)
  {
    swift_bridgeObjectRetain();
    v23 = v45;
    goto LABEL_10;
  }
  v17 = v45;
  v18 = *v45;
  if (!*(_QWORD *)(*v45 + 16))
  {
LABEL_9:
    sub_1C02FF6F8();
    v24 = v17;
    v26 = v25;
    v28 = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C00B52A8(v26, v28, v14, v15);
    swift_bridgeObjectRelease();
    v23 = v24;
    v14 = v26;
    v15 = v28;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v19 = sub_1C00B3C3C(v14, v15);
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v21 = (uint64_t *)(*(_QWORD *)(v18 + 56) + 16 * v19);
  v14 = *v21;
  v22 = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = v22;
  v23 = v17;
LABEL_10:
  v29 = v7[20];
  v30 = v7[22];
  v31 = &v9[v30];
  *(_QWORD *)v9 = v14;
  *((_QWORD *)v9 + 1) = v15;
  v32 = (uint64_t *)((char *)a3 + v30);
  v33 = v32[1];
  *(_QWORD *)v31 = *v32;
  *((_QWORD *)v31 + 1) = v33;
  swift_bridgeObjectRetain();
  v34 = swift_bridgeObjectRetain();
  v35 = sub_1C02FCDD4(v34, v23);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v9[v29] = v35;
  sub_1C006395C((uint64_t)a3, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
  sub_1C004555C((uint64_t)v9, (uint64_t)a3, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
  matched = type metadata accessor for ContactMatchRuntimeData(0);
  v36 = (uint64_t)a3 + *(int *)(matched + 20);
  v37 = v47;
  sub_1C00638E8(v36, v47, type metadata accessor for ContactResolver.SignalSet);
  memcpy(v49, (const void *)(v37 + 8), sizeof(v49));
  memcpy(v48, (const void *)(v37 + 8), 0x108uLL);
  sub_1C02FF394(v48, (uint64_t)v50);
  sub_1C0040644(v49);
  memcpy((void *)(v37 + 8), v50, 0x108uLL);
  v38 = swift_bridgeObjectRetain();
  v39 = sub_1C02FDA14(v38, v23);
  swift_bridgeObjectRelease_n();
  *(_QWORD *)(v37 + 272) = v39;
  sub_1C02FF810(v37, v36, type metadata accessor for ContactResolver.SignalSet);
  v40 = (char *)a3 + *(int *)(matched + 24);
  LOBYTE(v39) = *v40;
  v41 = *((_QWORD *)v40 + 1);
  v42 = swift_bridgeObjectRetain();
  v43 = sub_1C02FDCF8(v42, v23);
  result = swift_bridgeObjectRelease_n();
  *v40 = v39;
  *((_QWORD *)v40 + 1) = v41;
  *((_QWORD *)v40 + 2) = v43;
  return result;
}

uint64_t sub_1C02FEC40@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;

  v3 = v2;
  *(_BYTE *)(a2 + 16) = 2;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0xE000000000000000;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0xE000000000000000;
  *(_QWORD *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 64) = 0xE000000000000000;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = 0xE000000000000000;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = 0xE000000000000000;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = 0xE000000000000000;
  *(_QWORD *)(a2 + 120) = 0;
  *(_QWORD *)(a2 + 128) = 0xE000000000000000;
  *(_QWORD *)(a2 + 136) = 0;
  *(_QWORD *)(a2 + 144) = 0xE000000000000000;
  *(_QWORD *)(a2 + 152) = 0;
  *(_QWORD *)(a2 + 160) = 0xE000000000000000;
  *(_QWORD *)(a2 + 168) = 0;
  *(_QWORD *)(a2 + 176) = 0xE000000000000000;
  *(_QWORD *)(a2 + 184) = 0;
  *(_QWORD *)(a2 + 192) = 0xE000000000000000;
  *(_QWORD *)(a2 + 200) = 0;
  *(_QWORD *)(a2 + 208) = 0xE000000000000000;
  *(_QWORD *)(a2 + 216) = MEMORY[0x1E0DEE9D8];
  v6 = (int *)type metadata accessor for Contact();
  v7 = a2 + v6[19];
  v8 = sub_1C0301954();
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v8);
  *(_BYTE *)(a2 + v6[21]) = 0;
  *(_BYTE *)(a2 + v6[23]) = 2;
  v9 = (_QWORD *)(a2 + v6[24]);
  *v9 = 0;
  v9[1] = 0xE000000000000000;
  v11 = *a1;
  v10 = a1[1];
  v12 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v12 = *a1 & 0xFFFFFFFFFFFFLL;
  if (!v12)
  {
    swift_bridgeObjectRetain();
    goto LABEL_10;
  }
  v13 = *v3;
  if (!*(_QWORD *)(*v3 + 16))
  {
LABEL_9:
    sub_1C02FF6F8();
    v19 = v18;
    v21 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C00B52A8(v19, v21, v11, v10);
    swift_bridgeObjectRelease();
    v11 = v19;
    v10 = v21;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v14 = sub_1C00B3C3C(v11, v10);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v16 = (uint64_t *)(*(_QWORD *)(v13 + 56) + 16 * v14);
  v11 = *v16;
  v17 = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = v17;
LABEL_10:
  v22 = v6[20];
  v23 = (_QWORD *)(a2 + v6[22]);
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v10;
  v24 = (uint64_t *)((char *)a1 + v6[22]);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRetain();
  v26 = swift_bridgeObjectRetain();
  v27 = sub_1C02FCDD4(v26, v3);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v22) = v27;
  return result;
}

void sub_1C02FEE2C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v10[6];

  v10[1] = a2;
  v3 = type metadata accessor for Contact();
  v4 = MEMORY[0x1E0C80A78](v3);
  v5 = MEMORY[0x1E0C80A78](v4);
  v6 = MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7261A8);
  MEMORY[0x1E0C80A78](v7);
  sub_1C0045DFC(a1, (uint64_t)v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1ED7261A8);
  v9 = (char *)sub_1C02FEF5C + 4 * byte_1C03281C0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1C02FEF5C()
{
  uint64_t *v0;
  int *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1C004555C(v4, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
  *(_BYTE *)(v2 + 16) = 2;
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = 0xE000000000000000;
  *(_QWORD *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 48) = 0xE000000000000000;
  *(_QWORD *)(v2 + 72) = 0;
  *(_QWORD *)(v2 + 80) = 0xE000000000000000;
  *(_QWORD *)(v2 + 88) = 0;
  *(_QWORD *)(v2 + 96) = 0xE000000000000000;
  *(_QWORD *)(v2 + 104) = 0;
  *(_QWORD *)(v2 + 112) = 0xE000000000000000;
  *(_QWORD *)(v2 + 120) = 0;
  *(_QWORD *)(v2 + 128) = 0xE000000000000000;
  *(_QWORD *)(v2 + 136) = 0;
  *(_QWORD *)(v2 + 144) = 0xE000000000000000;
  *(_QWORD *)(v2 + 152) = 0;
  *(_QWORD *)(v2 + 160) = 0xE000000000000000;
  *(_QWORD *)(v2 + 168) = 0;
  *(_QWORD *)(v2 + 176) = 0xE000000000000000;
  *(_QWORD *)(v2 + 184) = 0;
  *(_QWORD *)(v2 + 192) = 0xE000000000000000;
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v2 + 200) = 0;
  *(_QWORD *)(v2 + 208) = 0xE000000000000000;
  *(_QWORD *)(v2 + 216) = v6;
  v7 = v2 + v1[19];
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = 0xE000000000000000;
  v8 = sub_1C0301954();
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v8);
  *(_BYTE *)(v2 + v1[21]) = 0;
  *(_BYTE *)(v2 + v1[23]) = 2;
  v9 = (_QWORD *)(v2 + v1[24]);
  *v9 = 0;
  v9[1] = 0xE000000000000000;
  v11 = *v3;
  v10 = v3[1];
  v12 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v12 = *v3 & 0xFFFFFFFFFFFFLL;
  if (!v12)
  {
    swift_bridgeObjectRetain();
    v14 = v0;
    goto LABEL_10;
  }
  v13 = *v0;
  if (!*(_QWORD *)(*v0 + 16))
  {
LABEL_9:
    sub_1C02FF6F8();
    v20 = v19;
    v22 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C00B52A8(v20, v22, v11, v10);
    swift_bridgeObjectRelease();
    v11 = v20;
    v14 = v0;
    v10 = v22;
    goto LABEL_10;
  }
  v14 = v0;
  swift_bridgeObjectRetain();
  v15 = sub_1C00B3C3C(v11, v10);
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v17 = (uint64_t *)(*(_QWORD *)(v13 + 56) + 16 * v15);
  v11 = *v17;
  v18 = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = v18;
LABEL_10:
  v23 = v1[20];
  v24 = v1[22];
  v25 = (_QWORD *)(v2 + v24);
  *(_QWORD *)v2 = v11;
  *(_QWORD *)(v2 + 8) = v10;
  v26 = (uint64_t *)((char *)v3 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  swift_bridgeObjectRetain();
  v28 = swift_bridgeObjectRetain();
  v29 = sub_1C02FCDD4(v28, v14);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v23) = v29;
  sub_1C004555C(v2, *(_QWORD *)(v5 - 120), (uint64_t (*)(_QWORD))type metadata accessor for Contact);
  sub_1C006395C((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for Contact);
  return swift_storeEnumTagMultiPayload();
}

double sub_1C02FF394@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;

  v3 = v2;
  v6 = *a1;
  v5 = a1[1];
  v7 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v7 = *a1 & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    swift_bridgeObjectRetain();
    goto LABEL_10;
  }
  v8 = *v2;
  if (!*(_QWORD *)(*v3 + 16))
  {
LABEL_9:
    sub_1C02FF6F8();
    v14 = v13;
    v16 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C00B52A8(v14, v16, v6, v5);
    swift_bridgeObjectRelease();
    v6 = v14;
    v5 = v16;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v9 = sub_1C00B3C3C(v6, v5);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v11 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v9);
  v6 = *v11;
  v12 = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = v12;
LABEL_10:
  v17 = swift_bridgeObjectRetain();
  v18 = sub_1C02FD894(v17, v3);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0xE000000000000000;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0xE000000000000000;
  *(_QWORD *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 64) = 0xE000000000000000;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = 0xE000000000000000;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = 0xE000000000000000;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = 0xE000000000000000;
  *(_QWORD *)(a2 + 120) = 0;
  *(_QWORD *)(a2 + 128) = 0xE000000000000000;
  *(_QWORD *)(a2 + 136) = 0;
  *(_QWORD *)(a2 + 144) = 0xE000000000000000;
  *(_QWORD *)(a2 + 152) = 0;
  *(_QWORD *)(a2 + 160) = 0xE000000000000000;
  result = 0.0;
  *(_OWORD *)(a2 + 216) = 0u;
  *(_OWORD *)(a2 + 200) = 0u;
  *(_OWORD *)(a2 + 184) = 0u;
  *(_OWORD *)(a2 + 168) = 0u;
  *(_QWORD *)(a2 + 232) = 0;
  *(_QWORD *)(a2 + 240) = v18;
  *(_BYTE *)(a2 + 248) = 1;
  *(_QWORD *)(a2 + 256) = 0;
  return result;
}

void sub_1C02FF508(char *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;

  v31 = *a1;
  v6 = *((_QWORD *)a1 + 1);
  v5 = *((_QWORD *)a1 + 2);
  v8 = *((_QWORD *)a1 + 3);
  v7 = *((_QWORD *)a1 + 4);
  v9 = *((double *)a1 + 5);
  v10 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v10 = v6 & 0xFFFFFFFFFFFFLL;
  if (v10)
  {
    v11 = *a2;
    if (*(_QWORD *)(*a2 + 16))
    {
      swift_bridgeObjectRetain();
      v12 = sub_1C00B3C3C(v6, v5);
      if ((v13 & 1) != 0)
      {
        v14 = (uint64_t *)(*(_QWORD *)(v11 + 56) + 16 * v12);
        v6 = *v14;
        v15 = v14[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v5 = v15;
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
    }
    sub_1C02FF6F8();
    v17 = v16;
    v19 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C00B52A8(v17, v19, v6, v5);
    swift_bridgeObjectRelease();
    v6 = v17;
    v5 = v19;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
LABEL_10:
  v20 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v20 = v8 & 0xFFFFFFFFFFFFLL;
  if (!v20)
  {
    swift_bridgeObjectRetain();
    goto LABEL_19;
  }
  v21 = *a2;
  if (!*(_QWORD *)(*a2 + 16))
  {
LABEL_18:
    sub_1C02FF6F8();
    v27 = v26;
    v29 = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C00B52A8(v27, v29, v8, v7);
    swift_bridgeObjectRelease();
    v8 = v27;
    v7 = v29;
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  v22 = sub_1C00B3C3C(v8, v7);
  if ((v23 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  v24 = (uint64_t *)(*(_QWORD *)(v21 + 56) + 16 * v22);
  v8 = *v24;
  v25 = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = v25;
LABEL_19:
  sub_1C0217D00(v9);
  *(_BYTE *)a3 = v31;
  *(_QWORD *)(a3 + 8) = v6;
  *(_QWORD *)(a3 + 16) = v5;
  *(_QWORD *)(a3 + 24) = v8;
  *(_QWORD *)(a3 + 32) = v7;
  *(_QWORD *)(a3 + 40) = v30;
}

void sub_1C02FF6F8()
{
  uint64_t v0;

  if ((((unint64_t)"ble+SiriInference.swift" >> 61) & ((((unint64_t)"ble+SiriInference.swift" >> 56) & 0xF) == 0)) == 0)
  {
    v0 = sub_1C0303F94();
    if (v0 < 0)
    {
      __break(1u);
    }
    else if (v0)
    {
      OUTLINED_FUNCTION_3_149();
    }
    __break(1u);
  }
  __break(1u);
}

void sub_1C02FF810(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_39_0(a1, a2, a3);
  OUTLINED_FUNCTION_54(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  OUTLINED_FUNCTION_9();
}

ValueMetadata *type metadata accessor for StitchedDataAnonymizer()
{
  return &type metadata for StitchedDataAnonymizer;
}

void OUTLINED_FUNCTION_3_149()
{
  JUMPOUT(0x1C3B98390);
}

uint64_t sub_1C02FF85C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t result;
  id v12;
  _QWORD v13[2];

  v3 = sub_1C0301B70();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - v8;
  sub_1C02FFCCC((uint64_t)v13 - v8);
  sub_1C00E69C8();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  v10 = sub_1C0105824((uint64_t)v7, a1);
  if (v1)
    return OUTLINED_FUNCTION_12_13();
  v12 = v10;
  OUTLINED_FUNCTION_12_13();
  type metadata accessor for PhoneAppPredictorPeopleCentric();
  result = OUTLINED_FUNCTION_3_88();
  *(_QWORD *)(result + 16) = v12;
  return result;
}

void sub_1C02FF94C()
{
  sub_1C02FFA7C();
  OUTLINED_FUNCTION_9();
}

void sub_1C02FF968()
{
  sub_1C02FFAA0();
  OUTLINED_FUNCTION_9();
}

void sub_1C02FF9DC()
{
  sub_1C011F3A8();
}

void sub_1C02FF9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  id v4;

  v3 = a1 == 88 && a2 == 0xE100000000000000;
  if (v3 || (sub_1C0304A08() & 1) != 0)
    v4 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *(_QWORD *)(v2 + 16));
  OUTLINED_FUNCTION_9();
}

uint64_t type metadata accessor for PhoneAppPredictorPeopleCentricInput()
{
  return objc_opt_self();
}

void sub_1C02FFA7C()
{
  sub_1C02FFAC0();
}

void sub_1C02FFAA0()
{
  sub_1C02FFAC0();
}

void sub_1C02FFAC0()
{
  void *v0;
  id v1;
  id v2;

  v0 = (void *)sub_1C0303E8C();
  v1 = OUTLINED_FUNCTION_15_1((uint64_t)v0, sel_featureValueForName_);

  if (v1)
  {
    v2 = objc_msgSend(v1, sel_multiArrayValue);

    if (v2)
    {
      OUTLINED_FUNCTION_9();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1C02FFB88()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_featureNames);
  sub_1C0304240();

  OUTLINED_FUNCTION_9();
}

void sub_1C02FFBD8()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1C0303E8C();
  v1 = OUTLINED_FUNCTION_15_1((uint64_t)v0, sel_featureValueForName_);

  OUTLINED_FUNCTION_9();
}

id sub_1C02FFC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v5 = sub_1C0303EB0();
  v7 = v6;
  swift_retain();
  v8 = (void *)a4(v5, v7);
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C02FFC88()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PhoneAppPredictorPeopleCentricOutput()
{
  return objc_opt_self();
}

uint64_t sub_1C02FFCCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  id v11;
  void *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v15;

  v2 = sub_1C0301B70();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728340);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v11 = sub_1C03012A8(0xD00000000000001ELL, 0x80000001C0328280, 0x636C65646F6D6C6DLL, 0xE800000000000000, v10);
  if (v11)
  {
    v12 = v11;
    sub_1C0301B40();

    v13 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v13(v8, v5, v2);
    OUTLINED_FUNCTION_1_24((uint64_t)v8, 0);
    result = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v2);
    if ((_DWORD)result != 1)
    {

      return ((uint64_t (*)(uint64_t, char *, uint64_t))v13)(a1, v8, v2);
    }
  }
  else
  {
    result = OUTLINED_FUNCTION_1_24((uint64_t)v8, 1);
  }
  __break(1u);
  return result;
}

void sub_1C02FFE50(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E9B0]), sel_init);
  sub_1C02FFEB0(a1, (uint64_t)v2);

  OUTLINED_FUNCTION_1_131();
}

uint64_t sub_1C02FFEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = *(void **)(v2 + 16);
  v12[0] = 0;
  v6 = objc_msgSend(v5, sel_predictionFromFeatures_options_error_, a1, a2, v12);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    type metadata accessor for PhoneAppPredictorPeopleCentricOutput();
    v3 = OUTLINED_FUNCTION_3_88();
    *(_QWORD *)(v3 + 16) = v8;
    v9 = v7;
  }
  else
  {
    v10 = v12[0];
    sub_1C0301ABC();

    swift_willThrow();
  }
  return v3;
}

void sub_1C02FFF7C(void *a1)
{
  uint64_t v2;
  id v3;

  type metadata accessor for PhoneAppPredictorPeopleCentricInput();
  v2 = OUTLINED_FUNCTION_3_88();
  *(_QWORD *)(v2 + 16) = a1;
  v3 = a1;
  sub_1C02FFE50(v2);
  swift_release();
  OUTLINED_FUNCTION_1_131();
}

uint64_t type metadata accessor for PhoneAppPredictorPeopleCentric()
{
  return objc_opt_self();
}

void sub_1C0300050()
{
  sub_1C011F3A8();
}

void sub_1C030005C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  id v4;

  v3 = a1 == 0x737475706E69 && a2 == 0xE600000000000000;
  if (v3 || (sub_1C0304A08() & 1) != 0)
    v4 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *(_QWORD *)(v2 + 16));
  OUTLINED_FUNCTION_9();
}

uint64_t type metadata accessor for ContactRanker_watchos_ios_baxterInput()
{
  return objc_opt_self();
}

void sub_1C030015C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_1C0303E8C();
  v3 = objc_msgSend(v1, sel_featureValueForName_, v2);

  OUTLINED_FUNCTION_9();
}

uint64_t type metadata accessor for ContactRanker_watchos_ios_baxterOutput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ContactRanker_watchos_ios_baxter()
{
  return objc_opt_self();
}

void sub_1C0300248()
{
  sub_1C011F3A8();
}

void sub_1C0300254(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  id v4;

  v3 = a1 == 0x6E695F6C65646F6DLL && a2 == 0xEB00000000747570;
  if (v3 || (sub_1C0304A08() & 1) != 0)
    v4 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *(_QWORD *)(v2 + 16));
  OUTLINED_FUNCTION_9();
}

uint64_t type metadata accessor for PervasiveEntityResolutionInput()
{
  return objc_opt_self();
}

void sub_1C0300314()
{
  void *v0;
  id v1;
  id v2;

  v0 = (void *)sub_1C0303E8C();
  v1 = OUTLINED_FUNCTION_15_1((uint64_t)v0, sel_featureValueForName_);

  if (v1)
  {
    v2 = objc_msgSend(v1, sel_multiArrayValue);

    if (v2)
    {
      OUTLINED_FUNCTION_9();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t type metadata accessor for PervasiveEntityResolutionOutput()
{
  return objc_opt_self();
}

uint64_t sub_1C0300420@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  id v11;
  void *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v15;

  v2 = sub_1C0301B70();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728340);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v11 = sub_1C03012A8(0xD000000000000019, 0x80000001C03283C0, 0x636C65646F6D6C6DLL, 0xE800000000000000, v10);
  if (v11)
  {
    v12 = v11;
    sub_1C0301B40();

    v13 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v13(v8, v5, v2);
    OUTLINED_FUNCTION_1_24((uint64_t)v8, 0);
    result = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v2);
    if ((_DWORD)result != 1)
    {

      return ((uint64_t (*)(uint64_t, char *, uint64_t))v13)(a1, v8, v2);
    }
  }
  else
  {
    result = OUTLINED_FUNCTION_1_24((uint64_t)v8, 1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C03005A4(uint64_t a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E9B0]), sel_init);
  v3 = sub_1C030060C(a1, (uint64_t)v2);

  return v3;
}

uint64_t sub_1C030060C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = *(void **)(v2 + 16);
  v12[0] = 0;
  v6 = objc_msgSend(v5, sel_predictionFromFeatures_options_error_, a1, a2, v12);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    type metadata accessor for PervasiveEntityResolutionOutput();
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v8;
    v9 = v7;
  }
  else
  {
    v10 = v12[0];
    sub_1C0301ABC();

    swift_willThrow();
  }
  return v3;
}

uint64_t type metadata accessor for PervasiveEntityResolution()
{
  return objc_opt_self();
}

uint64_t sub_1C0300700(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t result;
  id v12;
  _QWORD v13[2];

  v3 = sub_1C0301B70();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - v8;
  sub_1C0300904((uint64_t)v13 - v8);
  sub_1C00E69C8();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  v10 = sub_1C0105824((uint64_t)v7, a1);
  if (v1)
    return OUTLINED_FUNCTION_12_13();
  v12 = v10;
  OUTLINED_FUNCTION_12_13();
  type metadata accessor for MessageAppPredictorPeopleCentric();
  result = OUTLINED_FUNCTION_3_88();
  *(_QWORD *)(result + 16) = v12;
  return result;
}

void sub_1C0300848()
{
  sub_1C011F3A8();
}

uint64_t type metadata accessor for MessageAppPredictorPeopleCentricInput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for MessageAppPredictorPeopleCentricOutput()
{
  return objc_opt_self();
}

uint64_t sub_1C0300904@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  id v11;
  void *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v15;

  v2 = sub_1C0301B70();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728340);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v11 = sub_1C03012A8(0xD000000000000020, 0x80000001C0328460, 0x636C65646F6D6C6DLL, 0xE800000000000000, v10);
  if (v11)
  {
    v12 = v11;
    sub_1C0301B40();

    v13 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v13(v8, v5, v2);
    OUTLINED_FUNCTION_1_24((uint64_t)v8, 0);
    result = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v2);
    if ((_DWORD)result != 1)
    {

      return ((uint64_t (*)(uint64_t, char *, uint64_t))v13)(a1, v8, v2);
    }
  }
  else
  {
    result = OUTLINED_FUNCTION_1_24((uint64_t)v8, 1);
  }
  __break(1u);
  return result;
}

void sub_1C0300A88(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E9B0]), sel_init);
  sub_1C0300AE8(a1, (uint64_t)v2);

  OUTLINED_FUNCTION_1_131();
}

uint64_t sub_1C0300AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = *(void **)(v2 + 16);
  v12[0] = 0;
  v6 = objc_msgSend(v5, sel_predictionFromFeatures_options_error_, a1, a2, v12);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    type metadata accessor for MessageAppPredictorPeopleCentricOutput();
    v3 = OUTLINED_FUNCTION_3_88();
    *(_QWORD *)(v3 + 16) = v8;
    v9 = v7;
  }
  else
  {
    v10 = v12[0];
    sub_1C0301ABC();

    swift_willThrow();
  }
  return v3;
}

void sub_1C0300BB4(void *a1)
{
  uint64_t v2;
  id v3;

  type metadata accessor for MessageAppPredictorPeopleCentricInput();
  v2 = OUTLINED_FUNCTION_3_88();
  *(_QWORD *)(v2 + 16) = a1;
  v3 = a1;
  sub_1C0300A88(v2);
  swift_release();
  OUTLINED_FUNCTION_1_131();
}

uint64_t type metadata accessor for MessageAppPredictorPeopleCentric()
{
  return objc_opt_self();
}

uint64_t sub_1C0300C2C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t result;
  id v12;
  _QWORD v13[2];

  v3 = sub_1C0301B70();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - v8;
  sub_1C0300F58((uint64_t)v13 - v8);
  sub_1C00E69C8();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  v10 = sub_1C0105824((uint64_t)v7, a1);
  if (v1)
    return OUTLINED_FUNCTION_12_13();
  v12 = v10;
  OUTLINED_FUNCTION_12_13();
  type metadata accessor for PhoneAppPredictor();
  result = OUTLINED_FUNCTION_16_0();
  *(_QWORD *)(result + 16) = v12;
  return result;
}

void sub_1C0300D78()
{
  sub_1C011F3A8();
}

id sub_1C0300D84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  _QWORD *v6;
  BOOL v7;

  v3 = a1 == 88 && a2 == 0xE100000000000000;
  if (v3 || (sub_1C0304A08() & 1) != 0)
  {
    v6 = (_QWORD *)(v2 + 16);
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  v7 = a1 == 0x745F6E69616D6F64 && a2 == 0xEB00000000657079;
  if (v7 || (sub_1C0304A08() & 1) != 0)
  {
    v6 = (_QWORD *)(v2 + 24);
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  return 0;
}

uint64_t sub_1C0300E70()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0300E94()
{
  sub_1C0300E70();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PhoneAppPredictorInput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PhoneAppPredictorOutput()
{
  return objc_opt_self();
}

uint64_t sub_1C0300F58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  id v11;
  void *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v15;

  v2 = sub_1C0301B70();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED728340);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v11 = sub_1C03012A8(0xD000000000000011, 0x80000001C03284F0, 0x636C65646F6D6C6DLL, 0xE800000000000000, v10);
  if (v11)
  {
    v12 = v11;
    sub_1C0301B40();

    v13 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v13(v8, v5, v2);
    OUTLINED_FUNCTION_1_24((uint64_t)v8, 0);
    result = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v2);
    if ((_DWORD)result != 1)
    {

      return ((uint64_t (*)(uint64_t, char *, uint64_t))v13)(a1, v8, v2);
    }
  }
  else
  {
    result = OUTLINED_FUNCTION_1_24((uint64_t)v8, 1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C03010DC(uint64_t a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E9B0]), sel_init);
  v3 = sub_1C0301144(a1, (uint64_t)v2);

  return v3;
}

uint64_t sub_1C0301144(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = *(void **)(v2 + 16);
  v12[0] = 0;
  v6 = objc_msgSend(v5, sel_predictionFromFeatures_options_error_, a1, a2, v12);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    type metadata accessor for PhoneAppPredictorOutput();
    v3 = OUTLINED_FUNCTION_16_0();
    *(_QWORD *)(v3 + 16) = v8;
    v9 = v7;
  }
  else
  {
    v10 = v12[0];
    sub_1C0301ABC();

    swift_willThrow();
  }
  return v3;
}

uint64_t sub_1C0301214(void *a1, void *a2)
{
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;

  type metadata accessor for PhoneAppPredictorInput();
  v4 = OUTLINED_FUNCTION_16_0();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = a1;
  v6 = a2;
  v7 = sub_1C03010DC(v4);
  swift_release();
  return v7;
}

uint64_t type metadata accessor for PhoneAppPredictor()
{
  return objc_opt_self();
}

id sub_1C03012A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v6;
  void *v7;
  id v8;

  v6 = (void *)sub_1C0303E8C();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1C0303E8C();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(a5, sel_URLForResource_withExtension_, v6, v7);

  return v8;
}

void sub_1C0301390()
{
  sub_1C011F3A8();
}

uint64_t type metadata accessor for ContactRankerInput()
{
  return objc_opt_self();
}

void sub_1C03013C8()
{
  sub_1C02FFAC0();
}

void sub_1C03013DC()
{
  sub_1C02FFAC0();
}

void sub_1C03013F8()
{
  sub_1C02FFAC0();
}

uint64_t type metadata accessor for ContactRankerOutput()
{
  return objc_opt_self();
}

uint64_t sub_1C0301498(uint64_t a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E9B0]), sel_init);
  v3 = sub_1C0301500(a1, (uint64_t)v2);

  return v3;
}

uint64_t sub_1C0301500(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = *(void **)(v2 + 16);
  v12[0] = 0;
  v6 = objc_msgSend(v5, sel_predictionFromFeatures_options_error_, a1, a2, v12);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    type metadata accessor for ContactRankerOutput();
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v8;
    v9 = v7;
  }
  else
  {
    v10 = v12[0];
    sub_1C0301ABC();

    swift_willThrow();
  }
  return v3;
}

uint64_t type metadata accessor for ContactRanker()
{
  return objc_opt_self();
}

uint64_t sub_1C03015F4()
{
  return MEMORY[0x1E0C911D0]();
}

uint64_t sub_1C0301600()
{
  return MEMORY[0x1E0C911E0]();
}

uint64_t sub_1C030160C()
{
  return MEMORY[0x1E0CAE008]();
}

uint64_t sub_1C0301618()
{
  return MEMORY[0x1E0CAE010]();
}

uint64_t sub_1C0301624()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_1C0301630()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_1C030163C()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_1C0301648()
{
  return MEMORY[0x1E0CAE1A0]();
}

uint64_t sub_1C0301654()
{
  return MEMORY[0x1E0CAE1D8]();
}

uint64_t sub_1C0301660()
{
  return MEMORY[0x1E0CAE1E8]();
}

uint64_t sub_1C030166C()
{
  return MEMORY[0x1E0CAE418]();
}

uint64_t sub_1C0301678()
{
  return MEMORY[0x1E0CAE430]();
}

uint64_t sub_1C0301684()
{
  return MEMORY[0x1E0CAE440]();
}

uint64_t sub_1C0301690()
{
  return MEMORY[0x1E0CAE4B8]();
}

uint64_t sub_1C030169C()
{
  return MEMORY[0x1E0CAE550]();
}

uint64_t sub_1C03016A8()
{
  return MEMORY[0x1E0CAE578]();
}

uint64_t sub_1C03016B4()
{
  return MEMORY[0x1E0CAE580]();
}

uint64_t sub_1C03016C0()
{
  return MEMORY[0x1E0CAE590]();
}

uint64_t sub_1C03016CC()
{
  return MEMORY[0x1E0CAE5A0]();
}

uint64_t sub_1C03016D8()
{
  return MEMORY[0x1E0CAE5C0]();
}

uint64_t sub_1C03016E4()
{
  return MEMORY[0x1E0CAE5D0]();
}

uint64_t sub_1C03016F0()
{
  return MEMORY[0x1E0CAE618]();
}

uint64_t sub_1C03016FC()
{
  return MEMORY[0x1E0CAE648]();
}

uint64_t sub_1C0301708()
{
  return MEMORY[0x1E0CAE670]();
}

uint64_t sub_1C0301714()
{
  return MEMORY[0x1E0CAE678]();
}

uint64_t sub_1C0301720()
{
  return MEMORY[0x1E0CAE690]();
}

uint64_t sub_1C030172C()
{
  return MEMORY[0x1E0CAE6F8]();
}

uint64_t sub_1C0301738()
{
  return MEMORY[0x1E0CAE768]();
}

uint64_t sub_1C0301744()
{
  return MEMORY[0x1E0CAE858]();
}

uint64_t sub_1C0301750()
{
  return MEMORY[0x1E0CAE890]();
}

uint64_t sub_1C030175C()
{
  return MEMORY[0x1E0CAE8A8]();
}

uint64_t sub_1C0301768()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_1C0301774()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_1C0301780()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_1C030178C()
{
  return MEMORY[0x1E0CAE910]();
}

uint64_t sub_1C0301798()
{
  return MEMORY[0x1E0CAE930]();
}

uint64_t sub_1C03017A4()
{
  return MEMORY[0x1E0CAE938]();
}

uint64_t sub_1C03017B0()
{
  return MEMORY[0x1E0CAE940]();
}

uint64_t sub_1C03017BC()
{
  return MEMORY[0x1E0CAE948]();
}

uint64_t sub_1C03017C8()
{
  return MEMORY[0x1E0CAE968]();
}

uint64_t sub_1C03017D4()
{
  return MEMORY[0x1E0CAE970]();
}

uint64_t sub_1C03017E0()
{
  return MEMORY[0x1E0CAE978]();
}

uint64_t sub_1C03017EC()
{
  return MEMORY[0x1E0CAE980]();
}

uint64_t sub_1C03017F8()
{
  return MEMORY[0x1E0CAE990]();
}

uint64_t sub_1C0301804()
{
  return MEMORY[0x1E0CAE998]();
}

uint64_t sub_1C0301810()
{
  return MEMORY[0x1E0CAE9A0]();
}

uint64_t sub_1C030181C()
{
  return MEMORY[0x1E0CAE9B8]();
}

uint64_t sub_1C0301828()
{
  return MEMORY[0x1E0CAE9C8]();
}

uint64_t sub_1C0301834()
{
  return MEMORY[0x1E0CAE9D0]();
}

uint64_t sub_1C0301840()
{
  return MEMORY[0x1E0CAE9D8]();
}

uint64_t sub_1C030184C()
{
  return MEMORY[0x1E0CAE9E0]();
}

uint64_t sub_1C0301858()
{
  return MEMORY[0x1E0CAE9F0]();
}

uint64_t sub_1C0301864()
{
  return MEMORY[0x1E0CAE9F8]();
}

uint64_t sub_1C0301870()
{
  return MEMORY[0x1E0CAEA00]();
}

uint64_t sub_1C030187C()
{
  return MEMORY[0x1E0CAEA10]();
}

uint64_t sub_1C0301888()
{
  return MEMORY[0x1E0CAEA18]();
}

uint64_t sub_1C0301894()
{
  return MEMORY[0x1E0CAEA20]();
}

uint64_t sub_1C03018A0()
{
  return MEMORY[0x1E0CAEA28]();
}

uint64_t sub_1C03018AC()
{
  return MEMORY[0x1E0CAEA30]();
}

uint64_t sub_1C03018B8()
{
  return MEMORY[0x1E0CAEA38]();
}

uint64_t sub_1C03018C4()
{
  return MEMORY[0x1E0CAEA40]();
}

uint64_t sub_1C03018D0()
{
  return MEMORY[0x1E0CAEA48]();
}

uint64_t sub_1C03018DC()
{
  return MEMORY[0x1E0CAEA50]();
}

uint64_t sub_1C03018E8()
{
  return MEMORY[0x1E0CAEA58]();
}

uint64_t sub_1C03018F4()
{
  return MEMORY[0x1E0CAEA60]();
}

uint64_t sub_1C0301900()
{
  return MEMORY[0x1E0CAEA68]();
}

uint64_t sub_1C030190C()
{
  return MEMORY[0x1E0CAEA70]();
}

uint64_t sub_1C0301918()
{
  return MEMORY[0x1E0CAEA80]();
}

uint64_t sub_1C0301924()
{
  return MEMORY[0x1E0CAEA88]();
}

uint64_t sub_1C0301930()
{
  return MEMORY[0x1E0CAEA90]();
}

uint64_t sub_1C030193C()
{
  return MEMORY[0x1E0CAEAA0]();
}

uint64_t sub_1C0301948()
{
  return MEMORY[0x1E0CAEAA8]();
}

uint64_t sub_1C0301954()
{
  return MEMORY[0x1E0CAEAB0]();
}

uint64_t sub_1C0301960()
{
  return MEMORY[0x1E0CAEE50]();
}

uint64_t sub_1C030196C()
{
  return MEMORY[0x1E0CAF5C8]();
}

uint64_t sub_1C0301978()
{
  return MEMORY[0x1E0CAF5F8]();
}

uint64_t sub_1C0301984()
{
  return MEMORY[0x1E0CAF608]();
}

uint64_t sub_1C0301990()
{
  return MEMORY[0x1E0CAF6F0]();
}

uint64_t sub_1C030199C()
{
  return MEMORY[0x1E0CAF6F8]();
}

uint64_t sub_1C03019A8()
{
  return MEMORY[0x1E0CAF700]();
}

uint64_t sub_1C03019B4()
{
  return MEMORY[0x1E0CAF708]();
}

uint64_t sub_1C03019C0()
{
  return MEMORY[0x1E0CAF710]();
}

uint64_t sub_1C03019CC()
{
  return MEMORY[0x1E0CAF718]();
}

uint64_t sub_1C03019D8()
{
  return MEMORY[0x1E0CAF728]();
}

uint64_t sub_1C03019E4()
{
  return MEMORY[0x1E0CAF730]();
}

uint64_t sub_1C03019F0()
{
  return MEMORY[0x1E0CAF738]();
}

uint64_t sub_1C03019FC()
{
  return MEMORY[0x1E0CAF740]();
}

uint64_t sub_1C0301A08()
{
  return MEMORY[0x1E0CAF750]();
}

uint64_t sub_1C0301A14()
{
  return MEMORY[0x1E0CAF760]();
}

uint64_t sub_1C0301A20()
{
  return MEMORY[0x1E0CAF768]();
}

uint64_t sub_1C0301A2C()
{
  return MEMORY[0x1E0CAF770]();
}

uint64_t sub_1C0301A38()
{
  return MEMORY[0x1E0CAF778]();
}

uint64_t sub_1C0301A44()
{
  return MEMORY[0x1E0CAF780]();
}

uint64_t sub_1C0301A50()
{
  return MEMORY[0x1E0CAF788]();
}

uint64_t sub_1C0301A5C()
{
  return MEMORY[0x1E0CAF790]();
}

uint64_t sub_1C0301A68()
{
  return MEMORY[0x1E0CAF8D8]();
}

uint64_t sub_1C0301A74()
{
  return MEMORY[0x1E0CAF8E8]();
}

uint64_t sub_1C0301A80()
{
  return MEMORY[0x1E0CAF8F8]();
}

uint64_t sub_1C0301A8C()
{
  return MEMORY[0x1E0CAF900]();
}

uint64_t sub_1C0301A98()
{
  return MEMORY[0x1E0CAF910]();
}

uint64_t sub_1C0301AA4()
{
  return MEMORY[0x1E0CAF920]();
}

uint64_t sub_1C0301AB0()
{
  return MEMORY[0x1E0CAF930]();
}

uint64_t sub_1C0301ABC()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1C0301AC8()
{
  return MEMORY[0x1E0CAFB00]();
}

uint64_t sub_1C0301AD4()
{
  return MEMORY[0x1E0CAFC18]();
}

uint64_t sub_1C0301AE0()
{
  return MEMORY[0x1E0CAFD40]();
}

uint64_t sub_1C0301AEC()
{
  return MEMORY[0x1E0CAFDA0]();
}

uint64_t sub_1C0301AF8()
{
  return MEMORY[0x1E0CAFDD8]();
}

uint64_t sub_1C0301B04()
{
  return MEMORY[0x1E0CAFDE0]();
}

uint64_t sub_1C0301B10()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1C0301B1C()
{
  return MEMORY[0x1E0CAFE78]();
}

uint64_t sub_1C0301B28()
{
  return MEMORY[0x1E0CAFE80]();
}

uint64_t sub_1C0301B34()
{
  return MEMORY[0x1E0CAFEB8]();
}

uint64_t sub_1C0301B40()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1C0301B4C()
{
  return MEMORY[0x1E0CAFF20]();
}

uint64_t sub_1C0301B58()
{
  return MEMORY[0x1E0CAFF40]();
}

uint64_t sub_1C0301B64()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t sub_1C0301B70()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1C0301B7C()
{
  return MEMORY[0x1E0CB0080]();
}

uint64_t sub_1C0301B88()
{
  return MEMORY[0x1E0CB0088]();
}

uint64_t sub_1C0301B94()
{
  return MEMORY[0x1E0CB0098]();
}

uint64_t sub_1C0301BA0()
{
  return MEMORY[0x1E0CB00F8]();
}

uint64_t sub_1C0301BAC()
{
  return MEMORY[0x1E0CB0110]();
}

uint64_t sub_1C0301BB8()
{
  return MEMORY[0x1E0CB0160]();
}

uint64_t sub_1C0301BC4()
{
  return MEMORY[0x1E0CB0178]();
}

uint64_t sub_1C0301BD0()
{
  return MEMORY[0x1E0CB0188]();
}

uint64_t sub_1C0301BDC()
{
  return MEMORY[0x1E0CB01B8]();
}

uint64_t sub_1C0301BE8()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1C0301BF4()
{
  return MEMORY[0x1E0CB0218]();
}

uint64_t sub_1C0301C00()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1C0301C0C()
{
  return MEMORY[0x1E0CB03B8]();
}

uint64_t sub_1C0301C18()
{
  return MEMORY[0x1E0CB03C0]();
}

uint64_t sub_1C0301C24()
{
  return MEMORY[0x1E0CB0588]();
}

uint64_t sub_1C0301C30()
{
  return MEMORY[0x1E0CB0598]();
}

uint64_t sub_1C0301C3C()
{
  return MEMORY[0x1E0CB05A8]();
}

uint64_t sub_1C0301C48()
{
  return MEMORY[0x1E0CB05D8]();
}

uint64_t sub_1C0301C54()
{
  return MEMORY[0x1E0CB0680]();
}

uint64_t sub_1C0301C60()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_1C0301C6C()
{
  return MEMORY[0x1E0CB06D0]();
}

uint64_t sub_1C0301C78()
{
  return MEMORY[0x1E0CB06D8]();
}

uint64_t sub_1C0301C84()
{
  return MEMORY[0x1E0CB06F0]();
}

uint64_t sub_1C0301C90()
{
  return MEMORY[0x1E0CB0700]();
}

uint64_t sub_1C0301C9C()
{
  return MEMORY[0x1E0CB0708]();
}

uint64_t sub_1C0301CA8()
{
  return MEMORY[0x1E0CB07B0]();
}

uint64_t sub_1C0301CB4()
{
  return MEMORY[0x1E0CB07C0]();
}

uint64_t sub_1C0301CC0()
{
  return MEMORY[0x1E0CB07C8]();
}

uint64_t sub_1C0301CCC()
{
  return MEMORY[0x1E0CB07E0]();
}

uint64_t sub_1C0301CD8()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t sub_1C0301CE4()
{
  return MEMORY[0x1E0CB0828]();
}

uint64_t sub_1C0301CF0()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1C0301CFC()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1C0301D08()
{
  return MEMORY[0x1E0CB0900]();
}

uint64_t sub_1C0301D14()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1C0301D20()
{
  return MEMORY[0x1E0CB0918]();
}

uint64_t sub_1C0301D2C()
{
  return MEMORY[0x1E0CB0930]();
}

uint64_t sub_1C0301D38()
{
  return MEMORY[0x1E0CB0948]();
}

uint64_t sub_1C0301D44()
{
  return MEMORY[0x1E0CB0958]();
}

uint64_t sub_1C0301D50()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1C0301D5C()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1C0301D68()
{
  return MEMORY[0x1E0CB0A80]();
}

uint64_t sub_1C0301D74()
{
  return MEMORY[0x1E0CB0A90]();
}

uint64_t sub_1C0301D80()
{
  return MEMORY[0x1E0CB0A98]();
}

uint64_t sub_1C0301D8C()
{
  return MEMORY[0x1E0CB0BE0]();
}

uint64_t sub_1C0301D98()
{
  return MEMORY[0x1E0CB0C20]();
}

uint64_t sub_1C0301DA4()
{
  return MEMORY[0x1E0CB0CC8]();
}

uint64_t sub_1C0301DB0()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_1C0301DBC()
{
  return MEMORY[0x1E0CB0EA8]();
}

uint64_t sub_1C0301DC8()
{
  return MEMORY[0x1E0CB0F00]();
}

uint64_t sub_1C0301DD4()
{
  return MEMORY[0x1E0CB0F20]();
}

uint64_t sub_1C0301DE0()
{
  return MEMORY[0x1E0CB0F28]();
}

uint64_t sub_1C0301DEC()
{
  return MEMORY[0x1E0CB0F38]();
}

uint64_t sub_1C0301DF8()
{
  return MEMORY[0x1E0CB0F68]();
}

uint64_t sub_1C0301E04()
{
  return MEMORY[0x1E0CB0F98]();
}

uint64_t sub_1C0301E10()
{
  return MEMORY[0x1E0CB0FA0]();
}

uint64_t sub_1C0301E1C()
{
  return MEMORY[0x1E0CB0FB8]();
}

uint64_t sub_1C0301E28()
{
  return MEMORY[0x1E0CB0FD0]();
}

uint64_t sub_1C0301E34()
{
  return MEMORY[0x1E0CB0FE8]();
}

uint64_t sub_1C0301E40()
{
  return MEMORY[0x1E0CB1018]();
}

uint64_t sub_1C0301E4C()
{
  return MEMORY[0x1E0CB1058]();
}

uint64_t sub_1C0301E58()
{
  return MEMORY[0x1E0CB1060]();
}

uint64_t sub_1C0301E64()
{
  return MEMORY[0x1E0CB1068]();
}

uint64_t sub_1C0301E70()
{
  return MEMORY[0x1E0CB1070]();
}

uint64_t sub_1C0301E7C()
{
  return MEMORY[0x1E0CB1090]();
}

uint64_t sub_1C0301E88()
{
  return MEMORY[0x1E0CB10C8]();
}

uint64_t sub_1C0301E94()
{
  return MEMORY[0x1E0CB10D0]();
}

uint64_t sub_1C0301EA0()
{
  return MEMORY[0x1E0CB10E0]();
}

uint64_t sub_1C0301EAC()
{
  return MEMORY[0x1E0CB11B8]();
}

uint64_t sub_1C0301EB8()
{
  return MEMORY[0x1E0CB11E0]();
}

uint64_t sub_1C0301EC4()
{
  return MEMORY[0x1E0CB11F0]();
}

uint64_t sub_1C0301ED0()
{
  return MEMORY[0x1E0CB1400]();
}

uint64_t sub_1C0301EDC()
{
  return MEMORY[0x1E0CB1410]();
}

uint64_t sub_1C0301EE8()
{
  return MEMORY[0x1E0CB1458]();
}

uint64_t sub_1C0301EF4()
{
  return MEMORY[0x1E0CB1460]();
}

uint64_t sub_1C0301F00()
{
  return MEMORY[0x1E0CB1470]();
}

uint64_t sub_1C0301F0C()
{
  return MEMORY[0x1E0D70740]();
}

uint64_t sub_1C0301F18()
{
  return MEMORY[0x1E0D6CB60]();
}

uint64_t sub_1C0301F24()
{
  return MEMORY[0x1E0D6CB70]();
}

uint64_t sub_1C0301F30()
{
  return MEMORY[0x1E0D6D028]();
}

uint64_t sub_1C0301F3C()
{
  return MEMORY[0x1E0D6D0D8]();
}

uint64_t sub_1C0301F48()
{
  return MEMORY[0x1E0D6D0E0]();
}

uint64_t sub_1C0301F54()
{
  return MEMORY[0x1E0D6D158]();
}

uint64_t sub_1C0301F60()
{
  return MEMORY[0x1E0D6D1E0]();
}

uint64_t sub_1C0301F6C()
{
  return MEMORY[0x1E0D6D8A8]();
}

uint64_t sub_1C0301F78()
{
  return MEMORY[0x1E0D6D8B0]();
}

uint64_t sub_1C0301F84()
{
  return MEMORY[0x1E0D6F4C8]();
}

uint64_t sub_1C0301F90()
{
  return MEMORY[0x1E0D6F4D0]();
}

uint64_t sub_1C0301F9C()
{
  return MEMORY[0x1E0D6F768]();
}

uint64_t sub_1C0301FA8()
{
  return MEMORY[0x1E0D6F7B0]();
}

uint64_t sub_1C0301FB4()
{
  return MEMORY[0x1E0D6FAA8]();
}

uint64_t sub_1C0301FC0()
{
  return MEMORY[0x1E0D6FAB0]();
}

uint64_t sub_1C0301FCC()
{
  return MEMORY[0x1E0D6FD08]();
}

uint64_t sub_1C0301FD8()
{
  return MEMORY[0x1E0D6FD20]();
}

uint64_t sub_1C0301FE4()
{
  return MEMORY[0x1E0D707A8]();
}

uint64_t sub_1C0301FF0()
{
  return MEMORY[0x1E0D70808]();
}

uint64_t sub_1C0301FFC()
{
  return MEMORY[0x1E0D70818]();
}

uint64_t sub_1C0302008()
{
  return MEMORY[0x1E0D70820]();
}

uint64_t sub_1C0302014()
{
  return MEMORY[0x1E0D708C0]();
}

uint64_t sub_1C0302020()
{
  return MEMORY[0x1E0D708C8]();
}

uint64_t sub_1C030202C()
{
  return MEMORY[0x1E0D02398]();
}

uint64_t sub_1C0302038()
{
  return MEMORY[0x1E0D023A8]();
}

uint64_t sub_1C0302044()
{
  return MEMORY[0x1E0D023B8]();
}

uint64_t sub_1C0302050()
{
  return MEMORY[0x1E0DA4718]();
}

uint64_t sub_1C030205C()
{
  return MEMORY[0x1E0DA4728]();
}

uint64_t sub_1C0302068()
{
  return MEMORY[0x1E0DA4738]();
}

uint64_t sub_1C0302074()
{
  return MEMORY[0x1E0DA4760]();
}

uint64_t sub_1C0302080()
{
  return MEMORY[0x1E0DA4768]();
}

uint64_t sub_1C030208C()
{
  return MEMORY[0x1E0DA4778]();
}

uint64_t sub_1C0302098()
{
  return MEMORY[0x1E0DA4788]();
}

uint64_t sub_1C03020A4()
{
  return MEMORY[0x1E0DA4790]();
}

uint64_t sub_1C03020B0()
{
  return MEMORY[0x1E0DA47A0]();
}

uint64_t sub_1C03020BC()
{
  return MEMORY[0x1E0DA47A8]();
}

uint64_t sub_1C03020C8()
{
  return MEMORY[0x1E0DA47B0]();
}

uint64_t sub_1C03020D4()
{
  return MEMORY[0x1E0DA47D0]();
}

uint64_t sub_1C03020E0()
{
  return MEMORY[0x1E0DA47D8]();
}

uint64_t sub_1C03020EC()
{
  return MEMORY[0x1E0DA47E0]();
}

uint64_t sub_1C03020F8()
{
  return MEMORY[0x1E0DA47E8]();
}

uint64_t sub_1C0302104()
{
  return MEMORY[0x1E0DA47F0]();
}

uint64_t sub_1C0302110()
{
  return MEMORY[0x1E0DA47F8]();
}

uint64_t sub_1C030211C()
{
  return MEMORY[0x1E0DA4800]();
}

uint64_t sub_1C0302128()
{
  return MEMORY[0x1E0DA4808]();
}

uint64_t sub_1C0302134()
{
  return MEMORY[0x1E0DA4810]();
}

uint64_t sub_1C0302140()
{
  return MEMORY[0x1E0DA4818]();
}

uint64_t sub_1C030214C()
{
  return MEMORY[0x1E0DA4820]();
}

uint64_t sub_1C0302158()
{
  return MEMORY[0x1E0DA4828]();
}

uint64_t sub_1C0302164()
{
  return MEMORY[0x1E0DA4830]();
}

uint64_t sub_1C0302170()
{
  return MEMORY[0x1E0DA4838]();
}

uint64_t sub_1C030217C()
{
  return MEMORY[0x1E0DA4840]();
}

uint64_t sub_1C0302188()
{
  return MEMORY[0x1E0DA4848]();
}

uint64_t sub_1C0302194()
{
  return MEMORY[0x1E0DA4850]();
}

uint64_t sub_1C03021A0()
{
  return MEMORY[0x1E0DA4858]();
}

uint64_t sub_1C03021AC()
{
  return MEMORY[0x1E0DA4868]();
}

uint64_t sub_1C03021B8()
{
  return MEMORY[0x1E0DA4870]();
}

uint64_t sub_1C03021C4()
{
  return MEMORY[0x1E0DA4878]();
}

uint64_t sub_1C03021D0()
{
  return MEMORY[0x1E0DA4880]();
}

uint64_t sub_1C03021DC()
{
  return MEMORY[0x1E0DA4888]();
}

uint64_t sub_1C03021E8()
{
  return MEMORY[0x1E0DA4890]();
}

uint64_t sub_1C03021F4()
{
  return MEMORY[0x1E0DA4898]();
}

uint64_t sub_1C0302200()
{
  return MEMORY[0x1E0DA48A8]();
}

uint64_t sub_1C030220C()
{
  return MEMORY[0x1E0DA48B0]();
}

uint64_t sub_1C0302218()
{
  return MEMORY[0x1E0DA48C0]();
}

uint64_t sub_1C0302224()
{
  return MEMORY[0x1E0DA48C8]();
}

uint64_t sub_1C0302230()
{
  return MEMORY[0x1E0DA48D0]();
}

uint64_t sub_1C030223C()
{
  return MEMORY[0x1E0DA48F0]();
}

uint64_t sub_1C0302248()
{
  return MEMORY[0x1E0DA4930]();
}

uint64_t sub_1C0302254()
{
  return MEMORY[0x1E0DA4940]();
}

uint64_t sub_1C0302260()
{
  return MEMORY[0x1E0DA4948]();
}

uint64_t sub_1C030226C()
{
  return MEMORY[0x1E0DA4968]();
}

uint64_t sub_1C0302278()
{
  return MEMORY[0x1E0DA4970]();
}

uint64_t sub_1C0302284()
{
  return MEMORY[0x1E0DA4978]();
}

uint64_t sub_1C0302290()
{
  return MEMORY[0x1E0DA4998]();
}

uint64_t sub_1C030229C()
{
  return MEMORY[0x1E0DA49A0]();
}

uint64_t sub_1C03022A8()
{
  return MEMORY[0x1E0DA49A8]();
}

uint64_t sub_1C03022B4()
{
  return MEMORY[0x1E0DA49E0]();
}

uint64_t sub_1C03022C0()
{
  return MEMORY[0x1E0DA49F0]();
}

uint64_t sub_1C03022CC()
{
  return MEMORY[0x1E0DA4A00]();
}

uint64_t sub_1C03022D8()
{
  return MEMORY[0x1E0DA4A08]();
}

uint64_t sub_1C03022E4()
{
  return MEMORY[0x1E0DA4A10]();
}

uint64_t sub_1C03022F0()
{
  return MEMORY[0x1E0DA4A48]();
}

uint64_t sub_1C03022FC()
{
  return MEMORY[0x1E0DA4A60]();
}

uint64_t sub_1C0302308()
{
  return MEMORY[0x1E0DA4A68]();
}

uint64_t sub_1C0302314()
{
  return MEMORY[0x1E0DA4A80]();
}

uint64_t sub_1C0302320()
{
  return MEMORY[0x1E0DA4A90]();
}

uint64_t sub_1C030232C()
{
  return MEMORY[0x1E0DA4AA8]();
}

uint64_t sub_1C0302338()
{
  return MEMORY[0x1E0DA4AB0]();
}

uint64_t sub_1C0302344()
{
  return MEMORY[0x1E0DA4AB8]();
}

uint64_t sub_1C0302350()
{
  return MEMORY[0x1E0DA4AC0]();
}

uint64_t sub_1C030235C()
{
  return MEMORY[0x1E0DA4AD0]();
}

uint64_t sub_1C0302368()
{
  return MEMORY[0x1E0DA4AD8]();
}

uint64_t sub_1C0302374()
{
  return MEMORY[0x1E0DA4AE0]();
}

uint64_t sub_1C0302380()
{
  return MEMORY[0x1E0DA4AE8]();
}

uint64_t sub_1C030238C()
{
  return MEMORY[0x1E0DA4AF0]();
}

uint64_t sub_1C0302398()
{
  return MEMORY[0x1E0DA4AF8]();
}

uint64_t sub_1C03023A4()
{
  return MEMORY[0x1E0DA4B00]();
}

uint64_t sub_1C03023B0()
{
  return MEMORY[0x1E0DA4B08]();
}

uint64_t sub_1C03023BC()
{
  return MEMORY[0x1E0DA4B58]();
}

uint64_t sub_1C03023C8()
{
  return MEMORY[0x1E0DA4B60]();
}

uint64_t sub_1C03023D4()
{
  return MEMORY[0x1E0DA4B70]();
}

uint64_t sub_1C03023E0()
{
  return MEMORY[0x1E0DA4B78]();
}

uint64_t sub_1C03023EC()
{
  return MEMORY[0x1E0DA4B80]();
}

uint64_t sub_1C03023F8()
{
  return MEMORY[0x1E0DA4B88]();
}

uint64_t sub_1C0302404()
{
  return MEMORY[0x1E0D02510]();
}

uint64_t sub_1C0302410()
{
  return MEMORY[0x1E0D02530]();
}

uint64_t sub_1C030241C()
{
  return MEMORY[0x1E0D02548]();
}

uint64_t sub_1C0302428()
{
  return MEMORY[0x1E0D20EF8]();
}

uint64_t sub_1C0302434()
{
  return MEMORY[0x1E0D50610]();
}

uint64_t sub_1C0302440()
{
  return MEMORY[0x1E0D50628]();
}

uint64_t sub_1C030244C()
{
  return MEMORY[0x1E0D50678]();
}

uint64_t sub_1C0302458()
{
  return MEMORY[0x1E0D50688]();
}

uint64_t sub_1C0302464()
{
  return MEMORY[0x1E0D50690]();
}

uint64_t sub_1C0302470()
{
  return MEMORY[0x1E0D50698]();
}

uint64_t sub_1C030247C()
{
  return MEMORY[0x1E0D506A8]();
}

uint64_t sub_1C0302488()
{
  return MEMORY[0x1E0D506B0]();
}

uint64_t sub_1C0302494()
{
  return MEMORY[0x1E0D506B8]();
}

uint64_t sub_1C03024A0()
{
  return MEMORY[0x1E0D506C0]();
}

uint64_t sub_1C03024AC()
{
  return MEMORY[0x1E0D506D0]();
}

uint64_t sub_1C03024B8()
{
  return MEMORY[0x1E0D506D8]();
}

uint64_t sub_1C03024C4()
{
  return MEMORY[0x1E0D506E0]();
}

uint64_t sub_1C03024D0()
{
  return MEMORY[0x1E0DEFDD0]();
}

uint64_t sub_1C03024DC()
{
  return MEMORY[0x1E0DEFDD8]();
}

uint64_t sub_1C03024E8()
{
  return MEMORY[0x1E0DEFE28]();
}

uint64_t sub_1C03024F4()
{
  return MEMORY[0x1E0DEFE40]();
}

uint64_t sub_1C0302500()
{
  return MEMORY[0x1E0DEFEA8]();
}

uint64_t sub_1C030250C()
{
  return MEMORY[0x1E0DEFEE0]();
}

uint64_t sub_1C0302518()
{
  return MEMORY[0x1E0D9F258]();
}

uint64_t sub_1C0302524()
{
  return MEMORY[0x1E0D9F260]();
}

uint64_t sub_1C0302530()
{
  return MEMORY[0x1E0D9F270]();
}

uint64_t sub_1C030253C()
{
  return MEMORY[0x1E0D9F4D0]();
}

uint64_t sub_1C0302548()
{
  return MEMORY[0x1E0D9F4D8]();
}

uint64_t sub_1C0302554()
{
  return MEMORY[0x1E0D9F4E0]();
}

uint64_t sub_1C0302560()
{
  return MEMORY[0x1E0D9F950]();
}

uint64_t sub_1C030256C()
{
  return MEMORY[0x1E0DA0268]();
}

uint64_t sub_1C0302578()
{
  return MEMORY[0x1E0DA0270]();
}

uint64_t sub_1C0302584()
{
  return MEMORY[0x1E0DA0280]();
}

uint64_t sub_1C0302590()
{
  return MEMORY[0x1E0DA0288]();
}

uint64_t sub_1C030259C()
{
  return MEMORY[0x1E0DA02C8]();
}

uint64_t sub_1C03025A8()
{
  return MEMORY[0x1E0DA02D0]();
}

uint64_t sub_1C03025B4()
{
  return MEMORY[0x1E0DA02F0]();
}

uint64_t sub_1C03025C0()
{
  return MEMORY[0x1E0DA02F8]();
}

uint64_t sub_1C03025CC()
{
  return MEMORY[0x1E0DA0308]();
}

uint64_t sub_1C03025D8()
{
  return MEMORY[0x1E0DA0310]();
}

uint64_t sub_1C03025E4()
{
  return MEMORY[0x1E0DA0320]();
}

uint64_t sub_1C03025F0()
{
  return MEMORY[0x1E0DA0328]();
}

uint64_t sub_1C03025FC()
{
  return MEMORY[0x1E0DA0338]();
}

uint64_t sub_1C0302608()
{
  return MEMORY[0x1E0DA0340]();
}

uint64_t sub_1C0302614()
{
  return MEMORY[0x1E0DA0350]();
}

uint64_t sub_1C0302620()
{
  return MEMORY[0x1E0DA0358]();
}

uint64_t sub_1C030262C()
{
  return MEMORY[0x1E0DA0368]();
}

uint64_t sub_1C0302638()
{
  return MEMORY[0x1E0DA0370]();
}

uint64_t sub_1C0302644()
{
  return MEMORY[0x1E0DA0380]();
}

uint64_t sub_1C0302650()
{
  return MEMORY[0x1E0DA0388]();
}

uint64_t sub_1C030265C()
{
  return MEMORY[0x1E0DA0410]();
}

uint64_t sub_1C0302668()
{
  return MEMORY[0x1E0DA0428]();
}

uint64_t sub_1C0302674()
{
  return MEMORY[0x1E0DA04C0]();
}

uint64_t sub_1C0302680()
{
  return MEMORY[0x1E0DA04C8]();
}

uint64_t sub_1C030268C()
{
  return MEMORY[0x1E0DA04D8]();
}

uint64_t sub_1C0302698()
{
  return MEMORY[0x1E0DA04E8]();
}

uint64_t sub_1C03026A4()
{
  return MEMORY[0x1E0DA0510]();
}

uint64_t sub_1C03026B0()
{
  return MEMORY[0x1E0DA0548]();
}

uint64_t sub_1C03026BC()
{
  return MEMORY[0x1E0DA0550]();
}

uint64_t sub_1C03026C8()
{
  return MEMORY[0x1E0DA0560]();
}

uint64_t sub_1C03026D4()
{
  return MEMORY[0x1E0DA0598]();
}

uint64_t sub_1C03026E0()
{
  return MEMORY[0x1E0DA05A0]();
}

uint64_t sub_1C03026EC()
{
  return MEMORY[0x1E0DA05A8]();
}

uint64_t sub_1C03026F8()
{
  return MEMORY[0x1E0DA05B0]();
}

uint64_t sub_1C0302704()
{
  return MEMORY[0x1E0DA05E0]();
}

uint64_t sub_1C0302710()
{
  return MEMORY[0x1E0DA05E8]();
}

uint64_t sub_1C030271C()
{
  return MEMORY[0x1E0DA0620]();
}

uint64_t sub_1C0302728()
{
  return MEMORY[0x1E0DA0638]();
}

uint64_t sub_1C0302734()
{
  return MEMORY[0x1E0DA0640]();
}

uint64_t sub_1C0302740()
{
  return MEMORY[0x1E0DA0648]();
}

uint64_t sub_1C030274C()
{
  return MEMORY[0x1E0DA0668]();
}

uint64_t sub_1C0302758()
{
  return MEMORY[0x1E0DA0678]();
}

uint64_t sub_1C0302764()
{
  return MEMORY[0x1E0DA0680]();
}

uint64_t sub_1C0302770()
{
  return MEMORY[0x1E0DA0688]();
}

uint64_t sub_1C030277C()
{
  return MEMORY[0x1E0DA0760]();
}

uint64_t sub_1C0302788()
{
  return MEMORY[0x1E0DA0768]();
}

uint64_t sub_1C0302794()
{
  return MEMORY[0x1E0DA0770]();
}

uint64_t sub_1C03027A0()
{
  return MEMORY[0x1E0DA0778]();
}

uint64_t sub_1C03027AC()
{
  return MEMORY[0x1E0DA0780]();
}

uint64_t sub_1C03027B8()
{
  return MEMORY[0x1E0DA0790]();
}

uint64_t sub_1C03027C4()
{
  return MEMORY[0x1E0DA0798]();
}

uint64_t sub_1C03027D0()
{
  return MEMORY[0x1E0DA07A0]();
}

uint64_t sub_1C03027DC()
{
  return MEMORY[0x1E0DA07B8]();
}

uint64_t sub_1C03027E8()
{
  return MEMORY[0x1E0DA07C0]();
}

uint64_t sub_1C03027F4()
{
  return MEMORY[0x1E0DA07C8]();
}

uint64_t sub_1C0302800()
{
  return MEMORY[0x1E0DA07D0]();
}

uint64_t sub_1C030280C()
{
  return MEMORY[0x1E0DA07D8]();
}

uint64_t sub_1C0302818()
{
  return MEMORY[0x1E0DA07E0]();
}

uint64_t sub_1C0302824()
{
  return MEMORY[0x1E0DA07E8]();
}

uint64_t sub_1C0302830()
{
  return MEMORY[0x1E0DA07F0]();
}

uint64_t sub_1C030283C()
{
  return MEMORY[0x1E0DA0878]();
}

uint64_t sub_1C0302848()
{
  return MEMORY[0x1E0DA0888]();
}

uint64_t sub_1C0302854()
{
  return MEMORY[0x1E0DA0890]();
}

uint64_t sub_1C0302860()
{
  return MEMORY[0x1E0DA08B8]();
}

uint64_t sub_1C030286C()
{
  return MEMORY[0x1E0DA08C8]();
}

uint64_t sub_1C0302878()
{
  return MEMORY[0x1E0DA08D0]();
}

uint64_t sub_1C0302884()
{
  return MEMORY[0x1E0DA08D8]();
}

uint64_t sub_1C0302890()
{
  return MEMORY[0x1E0DA08E8]();
}

uint64_t sub_1C030289C()
{
  return MEMORY[0x1E0DA08F0]();
}

uint64_t sub_1C03028A8()
{
  return MEMORY[0x1E0DA08F8]();
}

uint64_t sub_1C03028B4()
{
  return MEMORY[0x1E0DA0900]();
}

uint64_t sub_1C03028C0()
{
  return MEMORY[0x1E0DA0908]();
}

uint64_t sub_1C03028CC()
{
  return MEMORY[0x1E0DA0910]();
}

uint64_t sub_1C03028D8()
{
  return MEMORY[0x1E0DA0918]();
}

uint64_t sub_1C03028E4()
{
  return MEMORY[0x1E0DA0920]();
}

uint64_t sub_1C03028F0()
{
  return MEMORY[0x1E0DA0928]();
}

uint64_t sub_1C03028FC()
{
  return MEMORY[0x1E0DA0938]();
}

uint64_t sub_1C0302908()
{
  return MEMORY[0x1E0DA0940]();
}

uint64_t sub_1C0302914()
{
  return MEMORY[0x1E0DA0948]();
}

uint64_t sub_1C0302920()
{
  return MEMORY[0x1E0DA0950]();
}

uint64_t sub_1C030292C()
{
  return MEMORY[0x1E0DA0958]();
}

uint64_t sub_1C0302938()
{
  return MEMORY[0x1E0DA0960]();
}

uint64_t sub_1C0302944()
{
  return MEMORY[0x1E0DA0B30]();
}

uint64_t sub_1C0302950()
{
  return MEMORY[0x1E0DA0B40]();
}

uint64_t sub_1C030295C()
{
  return MEMORY[0x1E0DA0B48]();
}

uint64_t sub_1C0302968()
{
  return MEMORY[0x1E0DA0B50]();
}

uint64_t sub_1C0302974()
{
  return MEMORY[0x1E0DA0B60]();
}

uint64_t sub_1C0302980()
{
  return MEMORY[0x1E0DA0B68]();
}

uint64_t sub_1C030298C()
{
  return MEMORY[0x1E0DA0B70]();
}

uint64_t sub_1C0302998()
{
  return MEMORY[0x1E0DA0B78]();
}

uint64_t sub_1C03029A4()
{
  return MEMORY[0x1E0DA0BC0]();
}

uint64_t sub_1C03029B0()
{
  return MEMORY[0x1E0DA0BD0]();
}

uint64_t sub_1C03029BC()
{
  return MEMORY[0x1E0DA0C60]();
}

uint64_t sub_1C03029C8()
{
  return MEMORY[0x1E0DA0CA0]();
}

uint64_t sub_1C03029D4()
{
  return MEMORY[0x1E0DA0CF0]();
}

uint64_t sub_1C03029E0()
{
  return MEMORY[0x1E0DA0CF8]();
}

uint64_t sub_1C03029EC()
{
  return MEMORY[0x1E0DA0D00]();
}

uint64_t sub_1C03029F8()
{
  return MEMORY[0x1E0DA0D08]();
}

uint64_t sub_1C0302A04()
{
  return MEMORY[0x1E0DA0D10]();
}

uint64_t sub_1C0302A10()
{
  return MEMORY[0x1E0DA0D18]();
}

uint64_t sub_1C0302A1C()
{
  return MEMORY[0x1E0DA0D20]();
}

uint64_t sub_1C0302A28()
{
  return MEMORY[0x1E0DA0D28]();
}

uint64_t sub_1C0302A34()
{
  return MEMORY[0x1E0DA0D30]();
}

uint64_t sub_1C0302A40()
{
  return MEMORY[0x1E0DA0D38]();
}

uint64_t sub_1C0302A4C()
{
  return MEMORY[0x1E0DA0D40]();
}

uint64_t sub_1C0302A58()
{
  return MEMORY[0x1E0DA0D48]();
}

uint64_t sub_1C0302A64()
{
  return MEMORY[0x1E0DA0D50]();
}

uint64_t sub_1C0302A70()
{
  return MEMORY[0x1E0DA0D58]();
}

uint64_t sub_1C0302A7C()
{
  return MEMORY[0x1E0DA0D60]();
}

uint64_t sub_1C0302A88()
{
  return MEMORY[0x1E0DA0D68]();
}

uint64_t sub_1C0302A94()
{
  return MEMORY[0x1E0DA0D70]();
}

uint64_t sub_1C0302AA0()
{
  return MEMORY[0x1E0DA0D78]();
}

uint64_t sub_1C0302AAC()
{
  return MEMORY[0x1E0DA0D90]();
}

uint64_t sub_1C0302AB8()
{
  return MEMORY[0x1E0DA0DA8]();
}

uint64_t sub_1C0302AC4()
{
  return MEMORY[0x1E0DA0DB8]();
}

uint64_t sub_1C0302AD0()
{
  return MEMORY[0x1E0DA0DE8]();
}

uint64_t sub_1C0302ADC()
{
  return MEMORY[0x1E0DA0DF0]();
}

uint64_t sub_1C0302AE8()
{
  return MEMORY[0x1E0DA0DF8]();
}

uint64_t sub_1C0302AF4()
{
  return MEMORY[0x1E0DA0E10]();
}

uint64_t sub_1C0302B00()
{
  return MEMORY[0x1E0DA0E28]();
}

uint64_t sub_1C0302B0C()
{
  return MEMORY[0x1E0DA0E30]();
}

uint64_t sub_1C0302B18()
{
  return MEMORY[0x1E0DA0E38]();
}

uint64_t sub_1C0302B24()
{
  return MEMORY[0x1E0DA0E40]();
}

uint64_t sub_1C0302B30()
{
  return MEMORY[0x1E0DA0E48]();
}

uint64_t sub_1C0302B3C()
{
  return MEMORY[0x1E0DA0E50]();
}

uint64_t sub_1C0302B48()
{
  return MEMORY[0x1E0DA0E58]();
}

uint64_t sub_1C0302B54()
{
  return MEMORY[0x1E0DA0E60]();
}

uint64_t sub_1C0302B60()
{
  return MEMORY[0x1E0DA0E68]();
}

uint64_t sub_1C0302B6C()
{
  return MEMORY[0x1E0DA0E70]();
}

uint64_t sub_1C0302B78()
{
  return MEMORY[0x1E0DA0F18]();
}

uint64_t sub_1C0302B84()
{
  return MEMORY[0x1E0DA0F30]();
}

uint64_t sub_1C0302B90()
{
  return MEMORY[0x1E0DA0F38]();
}

uint64_t sub_1C0302B9C()
{
  return MEMORY[0x1E0DA0F70]();
}

uint64_t sub_1C0302BA8()
{
  return MEMORY[0x1E0DA0F78]();
}

uint64_t sub_1C0302BB4()
{
  return MEMORY[0x1E0DA1088]();
}

uint64_t sub_1C0302BC0()
{
  return MEMORY[0x1E0DA1090]();
}

uint64_t sub_1C0302BCC()
{
  return MEMORY[0x1E0DA1098]();
}

uint64_t sub_1C0302BD8()
{
  return MEMORY[0x1E0DA10A0]();
}

uint64_t sub_1C0302BE4()
{
  return MEMORY[0x1E0DA10A8]();
}

uint64_t sub_1C0302BF0()
{
  return MEMORY[0x1E0DA10B8]();
}

uint64_t sub_1C0302BFC()
{
  return MEMORY[0x1E0DA10C0]();
}

uint64_t sub_1C0302C08()
{
  return MEMORY[0x1E0DA10C8]();
}

uint64_t sub_1C0302C14()
{
  return MEMORY[0x1E0DA10D0]();
}

uint64_t sub_1C0302C20()
{
  return MEMORY[0x1E0DA10D8]();
}

uint64_t sub_1C0302C2C()
{
  return MEMORY[0x1E0DA10E0]();
}

uint64_t sub_1C0302C38()
{
  return MEMORY[0x1E0DA1110]();
}

uint64_t sub_1C0302C44()
{
  return MEMORY[0x1E0DA1128]();
}

uint64_t sub_1C0302C50()
{
  return MEMORY[0x1E0DA1130]();
}

uint64_t sub_1C0302C5C()
{
  return MEMORY[0x1E0DA1138]();
}

uint64_t sub_1C0302C68()
{
  return MEMORY[0x1E0DA1148]();
}

uint64_t sub_1C0302C74()
{
  return MEMORY[0x1E0DA1150]();
}

uint64_t sub_1C0302C80()
{
  return MEMORY[0x1E0DA1170]();
}

uint64_t sub_1C0302C8C()
{
  return MEMORY[0x1E0DA1180]();
}

uint64_t sub_1C0302C98()
{
  return MEMORY[0x1E0DA1188]();
}

uint64_t sub_1C0302CA4()
{
  return MEMORY[0x1E0DA1190]();
}

uint64_t sub_1C0302CB0()
{
  return MEMORY[0x1E0DA11A0]();
}

uint64_t sub_1C0302CBC()
{
  return MEMORY[0x1E0DA11A8]();
}

uint64_t sub_1C0302CC8()
{
  return MEMORY[0x1E0DA11B0]();
}

uint64_t sub_1C0302CD4()
{
  return MEMORY[0x1E0DA11D8]();
}

uint64_t sub_1C0302CE0()
{
  return MEMORY[0x1E0DA11E0]();
}

uint64_t sub_1C0302CEC()
{
  return MEMORY[0x1E0DA11E8]();
}

uint64_t sub_1C0302CF8()
{
  return MEMORY[0x1E0DA11F0]();
}

uint64_t sub_1C0302D04()
{
  return MEMORY[0x1E0DA11F8]();
}

uint64_t sub_1C0302D10()
{
  return MEMORY[0x1E0DA1200]();
}

uint64_t sub_1C0302D1C()
{
  return MEMORY[0x1E0DA1208]();
}

uint64_t sub_1C0302D28()
{
  return MEMORY[0x1E0DA1218]();
}

uint64_t sub_1C0302D34()
{
  return MEMORY[0x1E0DA1228]();
}

uint64_t sub_1C0302D40()
{
  return MEMORY[0x1E0DA1248]();
}

uint64_t sub_1C0302D4C()
{
  return MEMORY[0x1E0DA1250]();
}

uint64_t sub_1C0302D58()
{
  return MEMORY[0x1E0DA1260]();
}

uint64_t sub_1C0302D64()
{
  return MEMORY[0x1E0DA1268]();
}

uint64_t sub_1C0302D70()
{
  return MEMORY[0x1E0DA1278]();
}

uint64_t sub_1C0302D7C()
{
  return MEMORY[0x1E0DA1280]();
}

uint64_t sub_1C0302D88()
{
  return MEMORY[0x1E0DA12B0]();
}

uint64_t sub_1C0302D94()
{
  return MEMORY[0x1E0DA12B8]();
}

uint64_t sub_1C0302DA0()
{
  return MEMORY[0x1E0DA1318]();
}

uint64_t sub_1C0302DAC()
{
  return MEMORY[0x1E0DA1338]();
}

uint64_t sub_1C0302DB8()
{
  return MEMORY[0x1E0DA1340]();
}

uint64_t sub_1C0302DC4()
{
  return MEMORY[0x1E0DA1348]();
}

uint64_t sub_1C0302DD0()
{
  return MEMORY[0x1E0DA1358]();
}

uint64_t sub_1C0302DDC()
{
  return MEMORY[0x1E0DA1370]();
}

uint64_t sub_1C0302DE8()
{
  return MEMORY[0x1E0DA1378]();
}

uint64_t sub_1C0302DF4()
{
  return MEMORY[0x1E0DA1388]();
}

uint64_t sub_1C0302E00()
{
  return MEMORY[0x1E0DA1390]();
}

uint64_t sub_1C0302E0C()
{
  return MEMORY[0x1E0DA13A8]();
}

uint64_t sub_1C0302E18()
{
  return MEMORY[0x1E0DA13B0]();
}

uint64_t sub_1C0302E24()
{
  return MEMORY[0x1E0DA13B8]();
}

uint64_t sub_1C0302E30()
{
  return MEMORY[0x1E0DA13D0]();
}

uint64_t sub_1C0302E3C()
{
  return MEMORY[0x1E0DA13E0]();
}

uint64_t sub_1C0302E48()
{
  return MEMORY[0x1E0DA1450]();
}

uint64_t sub_1C0302E54()
{
  return MEMORY[0x1E0DA1510]();
}

uint64_t sub_1C0302E60()
{
  return MEMORY[0x1E0DA1518]();
}

uint64_t sub_1C0302E6C()
{
  return MEMORY[0x1E0DA1558]();
}

uint64_t sub_1C0302E78()
{
  return MEMORY[0x1E0DA1650]();
}

uint64_t sub_1C0302E84()
{
  return MEMORY[0x1E0DA1668]();
}

uint64_t sub_1C0302E90()
{
  return MEMORY[0x1E0DA1678]();
}

uint64_t sub_1C0302E9C()
{
  return MEMORY[0x1E0DA1680]();
}

uint64_t sub_1C0302EA8()
{
  return MEMORY[0x1E0DA1688]();
}

uint64_t sub_1C0302EB4()
{
  return MEMORY[0x1E0DA1690]();
}

uint64_t sub_1C0302EC0()
{
  return MEMORY[0x1E0DA1698]();
}

uint64_t sub_1C0302ECC()
{
  return MEMORY[0x1E0DA16A0]();
}

uint64_t sub_1C0302ED8()
{
  return MEMORY[0x1E0DA1780]();
}

uint64_t sub_1C0302EE4()
{
  return MEMORY[0x1E0DA1788]();
}

uint64_t sub_1C0302EF0()
{
  return MEMORY[0x1E0DA1790]();
}

uint64_t sub_1C0302EFC()
{
  return MEMORY[0x1E0DA1798]();
}

uint64_t sub_1C0302F08()
{
  return MEMORY[0x1E0DA17A0]();
}

uint64_t sub_1C0302F14()
{
  return MEMORY[0x1E0DA1850]();
}

uint64_t sub_1C0302F20()
{
  return MEMORY[0x1E0DA1858]();
}

uint64_t sub_1C0302F2C()
{
  return MEMORY[0x1E0DA18C0]();
}

uint64_t sub_1C0302F38()
{
  return MEMORY[0x1E0DA18D0]();
}

uint64_t sub_1C0302F44()
{
  return MEMORY[0x1E0DA1938]();
}

uint64_t sub_1C0302F50()
{
  return MEMORY[0x1E0DA19A8]();
}

uint64_t sub_1C0302F5C()
{
  return MEMORY[0x1E0DA1AC0]();
}

uint64_t sub_1C0302F68()
{
  return MEMORY[0x1E0DA1AD8]();
}

uint64_t sub_1C0302F74()
{
  return MEMORY[0x1E0DA1AE0]();
}

uint64_t sub_1C0302F80()
{
  return MEMORY[0x1E0DA1B90]();
}

uint64_t sub_1C0302F8C()
{
  return MEMORY[0x1E0DA1B98]();
}

uint64_t sub_1C0302F98()
{
  return MEMORY[0x1E0DA1BA0]();
}

uint64_t sub_1C0302FA4()
{
  return MEMORY[0x1E0DA1BB0]();
}

uint64_t sub_1C0302FB0()
{
  return MEMORY[0x1E0DA1BB8]();
}

uint64_t sub_1C0302FBC()
{
  return MEMORY[0x1E0DA1BC0]();
}

uint64_t sub_1C0302FC8()
{
  return MEMORY[0x1E0DA1BC8]();
}

uint64_t sub_1C0302FD4()
{
  return MEMORY[0x1E0DA1BD8]();
}

uint64_t sub_1C0302FE0()
{
  return MEMORY[0x1E0DA1BE0]();
}

uint64_t sub_1C0302FEC()
{
  return MEMORY[0x1E0DA1BE8]();
}

uint64_t sub_1C0302FF8()
{
  return MEMORY[0x1E0DA1CB0]();
}

uint64_t sub_1C0303004()
{
  return MEMORY[0x1E0DA1CD0]();
}

uint64_t sub_1C0303010()
{
  return MEMORY[0x1E0DA1CD8]();
}

uint64_t sub_1C030301C()
{
  return MEMORY[0x1E0DA1CE0]();
}

uint64_t sub_1C0303028()
{
  return MEMORY[0x1E0DA1CE8]();
}

uint64_t sub_1C0303034()
{
  return MEMORY[0x1E0DA1CF0]();
}

uint64_t sub_1C0303040()
{
  return MEMORY[0x1E0DA1E48]();
}

uint64_t sub_1C030304C()
{
  return MEMORY[0x1E0DA1F60]();
}

uint64_t sub_1C0303058()
{
  return MEMORY[0x1E0DA1F68]();
}

uint64_t sub_1C0303064()
{
  return MEMORY[0x1E0DA2098]();
}

uint64_t sub_1C0303070()
{
  return MEMORY[0x1E0DA20B0]();
}

uint64_t sub_1C030307C()
{
  return MEMORY[0x1E0DA2100]();
}

uint64_t sub_1C0303088()
{
  return MEMORY[0x1E0DA2108]();
}

uint64_t sub_1C0303094()
{
  return MEMORY[0x1E0DA2110]();
}

uint64_t sub_1C03030A0()
{
  return MEMORY[0x1E0DA2118]();
}

uint64_t sub_1C03030AC()
{
  return MEMORY[0x1E0DA2120]();
}

uint64_t sub_1C03030B8()
{
  return MEMORY[0x1E0DA2128]();
}

uint64_t sub_1C03030C4()
{
  return MEMORY[0x1E0DA2130]();
}

uint64_t sub_1C03030D0()
{
  return MEMORY[0x1E0DA2138]();
}

uint64_t sub_1C03030DC()
{
  return MEMORY[0x1E0DA2140]();
}

uint64_t sub_1C03030E8()
{
  return MEMORY[0x1E0DA2148]();
}

uint64_t sub_1C03030F4()
{
  return MEMORY[0x1E0DA2150]();
}

uint64_t sub_1C0303100()
{
  return MEMORY[0x1E0DA22C8]();
}

uint64_t sub_1C030310C()
{
  return MEMORY[0x1E0DA22D0]();
}

uint64_t sub_1C0303118()
{
  return MEMORY[0x1E0DA22D8]();
}

uint64_t sub_1C0303124()
{
  return MEMORY[0x1E0DA22E0]();
}

uint64_t sub_1C0303130()
{
  return MEMORY[0x1E0DA22E8]();
}

uint64_t sub_1C030313C()
{
  return MEMORY[0x1E0DA22F0]();
}

uint64_t sub_1C0303148()
{
  return MEMORY[0x1E0DA2300]();
}

uint64_t sub_1C0303154()
{
  return MEMORY[0x1E0DA2308]();
}

uint64_t sub_1C0303160()
{
  return MEMORY[0x1E0DA2318]();
}

uint64_t sub_1C030316C()
{
  return MEMORY[0x1E0DA2320]();
}

uint64_t sub_1C0303178()
{
  return MEMORY[0x1E0DA2328]();
}

uint64_t sub_1C0303184()
{
  return MEMORY[0x1E0DA2330]();
}

uint64_t sub_1C0303190()
{
  return MEMORY[0x1E0DA2338]();
}

uint64_t sub_1C030319C()
{
  return MEMORY[0x1E0DA2340]();
}

uint64_t sub_1C03031A8()
{
  return MEMORY[0x1E0DA2348]();
}

uint64_t sub_1C03031B4()
{
  return MEMORY[0x1E0DA2368]();
}

uint64_t sub_1C03031C0()
{
  return MEMORY[0x1E0DA2378]();
}

uint64_t sub_1C03031CC()
{
  return MEMORY[0x1E0DA2410]();
}

uint64_t sub_1C03031D8()
{
  return MEMORY[0x1E0DA2418]();
}

uint64_t sub_1C03031E4()
{
  return MEMORY[0x1E0DA2428]();
}

uint64_t sub_1C03031F0()
{
  return MEMORY[0x1E0DA2430]();
}

uint64_t sub_1C03031FC()
{
  return MEMORY[0x1E0DA2438]();
}

uint64_t sub_1C0303208()
{
  return MEMORY[0x1E0DA2440]();
}

uint64_t sub_1C0303214()
{
  return MEMORY[0x1E0DA24A0]();
}

uint64_t sub_1C0303220()
{
  return MEMORY[0x1E0DA24A8]();
}

uint64_t sub_1C030322C()
{
  return MEMORY[0x1E0DA24B8]();
}

uint64_t sub_1C0303238()
{
  return MEMORY[0x1E0DA24C0]();
}

uint64_t sub_1C0303244()
{
  return MEMORY[0x1E0DA2510]();
}

uint64_t sub_1C0303250()
{
  return MEMORY[0x1E0DA2520]();
}

uint64_t sub_1C030325C()
{
  return MEMORY[0x1E0DA2528]();
}

uint64_t sub_1C0303268()
{
  return MEMORY[0x1E0DA25C8]();
}

uint64_t sub_1C0303274()
{
  return MEMORY[0x1E0DA25D0]();
}

uint64_t sub_1C0303280()
{
  return MEMORY[0x1E0DA25E0]();
}

uint64_t sub_1C030328C()
{
  return MEMORY[0x1E0DA25E8]();
}

uint64_t sub_1C0303298()
{
  return MEMORY[0x1E0DA2618]();
}

uint64_t sub_1C03032A4()
{
  return MEMORY[0x1E0DA2660]();
}

uint64_t sub_1C03032B0()
{
  return MEMORY[0x1E0DA2730]();
}

uint64_t sub_1C03032BC()
{
  return MEMORY[0x1E0DA2738]();
}

uint64_t sub_1C03032C8()
{
  return MEMORY[0x1E0DA2748]();
}

uint64_t sub_1C03032D4()
{
  return MEMORY[0x1E0DA2750]();
}

uint64_t sub_1C03032E0()
{
  return MEMORY[0x1E0DA2900]();
}

uint64_t sub_1C03032EC()
{
  return MEMORY[0x1E0DA2978]();
}

uint64_t sub_1C03032F8()
{
  return MEMORY[0x1E0DA2AB8]();
}

uint64_t sub_1C0303304()
{
  return MEMORY[0x1E0DA2AD8]();
}

uint64_t sub_1C0303310()
{
  return MEMORY[0x1E0DA2AE0]();
}

uint64_t sub_1C030331C()
{
  return MEMORY[0x1E0DA2AF0]();
}

uint64_t sub_1C0303328()
{
  return MEMORY[0x1E0DA2AF8]();
}

uint64_t sub_1C0303334()
{
  return MEMORY[0x1E0DA2B00]();
}

uint64_t sub_1C0303340()
{
  return MEMORY[0x1E0DA2B08]();
}

uint64_t sub_1C030334C()
{
  return MEMORY[0x1E0DA2B10]();
}

uint64_t sub_1C0303358()
{
  return MEMORY[0x1E0DA2B18]();
}

uint64_t sub_1C0303364()
{
  return MEMORY[0x1E0DA2B58]();
}

uint64_t sub_1C0303370()
{
  return MEMORY[0x1E0DA2B68]();
}

uint64_t sub_1C030337C()
{
  return MEMORY[0x1E0DA2B98]();
}

uint64_t sub_1C0303388()
{
  return MEMORY[0x1E0DA3D40]();
}

uint64_t sub_1C0303394()
{
  return MEMORY[0x1E0DA2BC0]();
}

uint64_t sub_1C03033A0()
{
  return MEMORY[0x1E0DC6638]();
}

uint64_t sub_1C03033AC()
{
  return MEMORY[0x1E0DC6680]();
}

uint64_t sub_1C03033B8()
{
  return MEMORY[0x1E0DC6710]();
}

uint64_t sub_1C03033C4()
{
  return MEMORY[0x1E0DC6738]();
}

uint64_t sub_1C03033D0()
{
  return MEMORY[0x1E0DC6740]();
}

uint64_t sub_1C03033DC()
{
  return MEMORY[0x1E0DA3EC8]();
}

uint64_t sub_1C03033E8()
{
  return MEMORY[0x1E0DA3ED0]();
}

uint64_t sub_1C03033F4()
{
  return MEMORY[0x1E0DA3ED8]();
}

uint64_t sub_1C0303400()
{
  return MEMORY[0x1E0DA3EE0]();
}

uint64_t sub_1C030340C()
{
  return MEMORY[0x1E0DA3EE8]();
}

uint64_t sub_1C0303418()
{
  return MEMORY[0x1E0DA3F10]();
}

uint64_t sub_1C0303424()
{
  return MEMORY[0x1E0DA3F18]();
}

uint64_t sub_1C0303430()
{
  return MEMORY[0x1E0DA3F28]();
}

uint64_t sub_1C030343C()
{
  return MEMORY[0x1E0DA3F40]();
}

uint64_t sub_1C0303448()
{
  return MEMORY[0x1E0DA3F48]();
}

uint64_t sub_1C0303454()
{
  return MEMORY[0x1E0DA3F50]();
}

uint64_t sub_1C0303460()
{
  return MEMORY[0x1E0DA3F70]();
}

uint64_t sub_1C030346C()
{
  return MEMORY[0x1E0DA3F78]();
}

uint64_t sub_1C0303478()
{
  return MEMORY[0x1E0DA3F80]();
}

uint64_t sub_1C0303484()
{
  return MEMORY[0x1E0DA3F88]();
}

uint64_t sub_1C0303490()
{
  return MEMORY[0x1E0DA3FA0]();
}

uint64_t sub_1C030349C()
{
  return MEMORY[0x1E0DA3FB0]();
}

uint64_t sub_1C03034A8()
{
  return MEMORY[0x1E0DA3FB8]();
}

uint64_t sub_1C03034B4()
{
  return MEMORY[0x1E0DA3FC0]();
}

uint64_t sub_1C03034C0()
{
  return MEMORY[0x1E0DA3FC8]();
}

uint64_t sub_1C03034CC()
{
  return MEMORY[0x1E0DA3FD0]();
}

uint64_t sub_1C03034D8()
{
  return MEMORY[0x1E0DA3FD8]();
}

uint64_t sub_1C03034E4()
{
  return MEMORY[0x1E0DA3FE0]();
}

uint64_t sub_1C03034F0()
{
  return MEMORY[0x1E0DA3FE8]();
}

uint64_t sub_1C03034FC()
{
  return MEMORY[0x1E0DA4058]();
}

uint64_t sub_1C0303508()
{
  return MEMORY[0x1E0DA4060]();
}

uint64_t sub_1C0303514()
{
  return MEMORY[0x1E0DA4070]();
}

uint64_t sub_1C0303520()
{
  return MEMORY[0x1E0DA4078]();
}

uint64_t sub_1C030352C()
{
  return MEMORY[0x1E0DA4080]();
}

uint64_t sub_1C0303538()
{
  return MEMORY[0x1E0DA4088]();
}

uint64_t sub_1C0303544()
{
  return MEMORY[0x1E0DA4090]();
}

uint64_t sub_1C0303550()
{
  return MEMORY[0x1E0DA4098]();
}

uint64_t sub_1C030355C()
{
  return MEMORY[0x1E0DA40C0]();
}

uint64_t sub_1C0303568()
{
  return MEMORY[0x1E0DA40C8]();
}

uint64_t sub_1C0303574()
{
  return MEMORY[0x1E0DA40D0]();
}

uint64_t sub_1C0303580()
{
  return MEMORY[0x1E0DA40E8]();
}

uint64_t sub_1C030358C()
{
  return MEMORY[0x1E0DA4130]();
}

uint64_t sub_1C0303598()
{
  return MEMORY[0x1E0DA4140]();
}

uint64_t sub_1C03035A4()
{
  return MEMORY[0x1E0DA4148]();
}

uint64_t sub_1C03035B0()
{
  return MEMORY[0x1E0DA4160]();
}

uint64_t sub_1C03035BC()
{
  return MEMORY[0x1E0DA4178]();
}

uint64_t sub_1C03035C8()
{
  return MEMORY[0x1E0DA4180]();
}

uint64_t sub_1C03035D4()
{
  return MEMORY[0x1E0DA4190]();
}

uint64_t sub_1C03035E0()
{
  return MEMORY[0x1E0DA41A8]();
}

uint64_t sub_1C03035EC()
{
  return MEMORY[0x1E0DA41B0]();
}

uint64_t sub_1C03035F8()
{
  return MEMORY[0x1E0DA41B8]();
}

uint64_t sub_1C0303604()
{
  return MEMORY[0x1E0DA41C8]();
}

uint64_t sub_1C0303610()
{
  return MEMORY[0x1E0DA41E0]();
}

uint64_t sub_1C030361C()
{
  return MEMORY[0x1E0DA41F0]();
}

uint64_t sub_1C0303628()
{
  return MEMORY[0x1E0DA4200]();
}

uint64_t sub_1C0303634()
{
  return MEMORY[0x1E0DA4210]();
}

uint64_t sub_1C0303640()
{
  return MEMORY[0x1E0DA4218]();
}

uint64_t sub_1C030364C()
{
  return MEMORY[0x1E0DA4220]();
}

uint64_t sub_1C0303658()
{
  return MEMORY[0x1E0DA4230]();
}

uint64_t sub_1C0303664()
{
  return MEMORY[0x1E0DA4238]();
}

uint64_t sub_1C0303670()
{
  return MEMORY[0x1E0DA4240]();
}

uint64_t sub_1C030367C()
{
  return MEMORY[0x1E0DA4248]();
}

uint64_t sub_1C0303688()
{
  return MEMORY[0x1E0DA4290]();
}

uint64_t sub_1C0303694()
{
  return MEMORY[0x1E0DA42A8]();
}

uint64_t sub_1C03036A0()
{
  return MEMORY[0x1E0DA42B8]();
}

uint64_t sub_1C03036AC()
{
  return MEMORY[0x1E0DA42C0]();
}

uint64_t sub_1C03036B8()
{
  return MEMORY[0x1E0DA42C8]();
}

uint64_t sub_1C03036C4()
{
  return MEMORY[0x1E0DA42D0]();
}

uint64_t sub_1C03036D0()
{
  return MEMORY[0x1E0DA42F8]();
}

uint64_t sub_1C03036DC()
{
  return MEMORY[0x1E0DA4378]();
}

uint64_t sub_1C03036E8()
{
  return MEMORY[0x1E0DA4380]();
}

uint64_t sub_1C03036F4()
{
  return MEMORY[0x1E0DA4388]();
}

uint64_t sub_1C0303700()
{
  return MEMORY[0x1E0DA4390]();
}

uint64_t sub_1C030370C()
{
  return MEMORY[0x1E0DA43E8]();
}

uint64_t sub_1C0303718()
{
  return MEMORY[0x1E0D981D8]();
}

uint64_t sub_1C0303724()
{
  return MEMORY[0x1E0DA7AB0]();
}

uint64_t sub_1C0303730()
{
  return MEMORY[0x1E0DA7AC0]();
}

uint64_t sub_1C030373C()
{
  return MEMORY[0x1E0DA7AE8]();
}

uint64_t sub_1C0303748()
{
  return MEMORY[0x1E0DA7AF8]();
}

uint64_t sub_1C0303754()
{
  return MEMORY[0x1E0DA7E50]();
}

uint64_t sub_1C0303760()
{
  return MEMORY[0x1E0D9A6A0]();
}

uint64_t sub_1C030376C()
{
  return MEMORY[0x1E0D9A6B0]();
}

uint64_t sub_1C0303778()
{
  return MEMORY[0x1E0D9A6B8]();
}

uint64_t sub_1C0303784()
{
  return MEMORY[0x1E0D9A6F0]();
}

uint64_t sub_1C0303790()
{
  return MEMORY[0x1E0D9A730]();
}

uint64_t sub_1C030379C()
{
  return MEMORY[0x1E0D9A740]();
}

uint64_t sub_1C03037A8()
{
  return MEMORY[0x1E0D9A780]();
}

uint64_t sub_1C03037B4()
{
  return MEMORY[0x1E0D9A788]();
}

uint64_t sub_1C03037C0()
{
  return MEMORY[0x1E0D9A790]();
}

uint64_t sub_1C03037CC()
{
  return MEMORY[0x1E0D9A7A8]();
}

uint64_t sub_1C03037D8()
{
  return MEMORY[0x1E0D9A7B8]();
}

uint64_t sub_1C03037E4()
{
  return MEMORY[0x1E0D9A7C8]();
}

uint64_t sub_1C03037F0()
{
  return MEMORY[0x1E0D9A7D8]();
}

uint64_t sub_1C03037FC()
{
  return MEMORY[0x1E0D9A7E0]();
}

uint64_t sub_1C0303808()
{
  return MEMORY[0x1E0D9A818]();
}

uint64_t sub_1C0303814()
{
  return MEMORY[0x1E0D9A820]();
}

uint64_t sub_1C0303820()
{
  return MEMORY[0x1E0D9A888]();
}

uint64_t sub_1C030382C()
{
  return MEMORY[0x1E0D9A890]();
}

uint64_t sub_1C0303838()
{
  return MEMORY[0x1E0D9A898]();
}

uint64_t sub_1C0303844()
{
  return MEMORY[0x1E0D9A8A0]();
}

uint64_t sub_1C0303850()
{
  return MEMORY[0x1E0D9A8A8]();
}

uint64_t sub_1C030385C()
{
  return MEMORY[0x1E0D9A8B0]();
}

uint64_t sub_1C0303868()
{
  return MEMORY[0x1E0D9A8B8]();
}

uint64_t sub_1C0303874()
{
  return MEMORY[0x1E0D9A900]();
}

uint64_t sub_1C0303880()
{
  return MEMORY[0x1E0D9A928]();
}

uint64_t sub_1C030388C()
{
  return MEMORY[0x1E0D9A970]();
}

uint64_t sub_1C0303898()
{
  return MEMORY[0x1E0D9A980]();
}

uint64_t sub_1C03038A4()
{
  return MEMORY[0x1E0D9A9B8]();
}

uint64_t sub_1C03038B0()
{
  return MEMORY[0x1E0D9A9C8]();
}

uint64_t sub_1C03038BC()
{
  return MEMORY[0x1E0DF1DE0]();
}

uint64_t sub_1C03038C8()
{
  return MEMORY[0x1E0DF1E00]();
}

uint64_t sub_1C03038D4()
{
  return MEMORY[0x1E0DF1E08]();
}

uint64_t sub_1C03038E0()
{
  return MEMORY[0x1E0DF1E18]();
}

uint64_t sub_1C03038EC()
{
  return MEMORY[0x1E0DF1E30]();
}

uint64_t sub_1C03038F8()
{
  return MEMORY[0x1E0DEFF28]();
}

uint64_t sub_1C0303904()
{
  return MEMORY[0x1E0DF1EA0]();
}

uint64_t sub_1C0303910()
{
  return MEMORY[0x1E0DEFF38]();
}

uint64_t sub_1C030391C()
{
  return MEMORY[0x1E0DF1F18]();
}

uint64_t sub_1C0303928()
{
  return MEMORY[0x1E0D7F600]();
}

uint64_t sub_1C0303934()
{
  return MEMORY[0x1E0D7F608]();
}

uint64_t sub_1C0303940()
{
  return MEMORY[0x1E0D7F610]();
}

uint64_t sub_1C030394C()
{
  return MEMORY[0x1E0D7F620]();
}

uint64_t sub_1C0303958()
{
  return MEMORY[0x1E0D7F628]();
}

uint64_t sub_1C0303964()
{
  return MEMORY[0x1E0D7F630]();
}

uint64_t sub_1C0303970()
{
  return MEMORY[0x1E0D98200]();
}

uint64_t sub_1C030397C()
{
  return MEMORY[0x1E0D98208]();
}

uint64_t sub_1C0303988()
{
  return MEMORY[0x1E0D98258]();
}

uint64_t sub_1C0303994()
{
  return MEMORY[0x1E0D982A8]();
}

uint64_t sub_1C03039A0()
{
  return MEMORY[0x1E0D982D8]();
}

uint64_t sub_1C03039AC()
{
  return MEMORY[0x1E0D98390]();
}

uint64_t sub_1C03039B8()
{
  return MEMORY[0x1E0D3BED0]();
}

uint64_t sub_1C03039C4()
{
  return MEMORY[0x1E0D3BFF8]();
}

uint64_t sub_1C03039D0()
{
  return MEMORY[0x1E0D3C020]();
}

uint64_t sub_1C03039DC()
{
  return MEMORY[0x1E0D3D708]();
}

uint64_t sub_1C03039E8()
{
  return MEMORY[0x1E0D3D710]();
}

uint64_t sub_1C03039F4()
{
  return MEMORY[0x1E0D3D718]();
}

uint64_t sub_1C0303A00()
{
  return MEMORY[0x1E0D3E720]();
}

uint64_t sub_1C0303A0C()
{
  return MEMORY[0x1E0D3E740]();
}

uint64_t sub_1C0303A18()
{
  return MEMORY[0x1E0D3EA60]();
}

uint64_t sub_1C0303A24()
{
  return MEMORY[0x1E0D3EA68]();
}

uint64_t sub_1C0303A30()
{
  return MEMORY[0x1E0D3EC50]();
}

uint64_t sub_1C0303A3C()
{
  return MEMORY[0x1E0DA3CB8]();
}

uint64_t sub_1C0303A48()
{
  return MEMORY[0x1E0DA3CD0]();
}

uint64_t sub_1C0303A54()
{
  return MEMORY[0x1E0DA3CD8]();
}

uint64_t sub_1C0303A60()
{
  return MEMORY[0x1E0CF1330]();
}

uint64_t sub_1C0303A6C()
{
  return MEMORY[0x1E0CF1340]();
}

uint64_t sub_1C0303A78()
{
  return MEMORY[0x1E0CF1370]();
}

uint64_t sub_1C0303A84()
{
  return MEMORY[0x1E0DA39B8]();
}

uint64_t sub_1C0303A90()
{
  return MEMORY[0x1E0DA3A50]();
}

uint64_t sub_1C0303A9C()
{
  return MEMORY[0x1E0DA3A58]();
}

uint64_t sub_1C0303AA8()
{
  return MEMORY[0x1E0DA3B30]();
}

uint64_t sub_1C0303AB4()
{
  return MEMORY[0x1E0DA3B58]();
}

uint64_t sub_1C0303AC0()
{
  return MEMORY[0x1E0DA3B60]();
}

uint64_t sub_1C0303ACC()
{
  return MEMORY[0x1E0DA3B68]();
}

uint64_t sub_1C0303AD8()
{
  return MEMORY[0x1E0DA3B70]();
}

uint64_t sub_1C0303AE4()
{
  return MEMORY[0x1E0DA3BE0]();
}

uint64_t sub_1C0303AF0()
{
  return MEMORY[0x1E0DA3BE8]();
}

uint64_t sub_1C0303AFC()
{
  return MEMORY[0x1E0DA3BF0]();
}

uint64_t sub_1C0303B08()
{
  return MEMORY[0x1E0DA3BF8]();
}

uint64_t sub_1C0303B14()
{
  return MEMORY[0x1E0DA3C00]();
}

uint64_t sub_1C0303B20()
{
  return MEMORY[0x1E0DA3C08]();
}

uint64_t sub_1C0303B2C()
{
  return MEMORY[0x1E0DA3C18]();
}

uint64_t sub_1C0303B38()
{
  return MEMORY[0x1E0DA3C20]();
}

uint64_t sub_1C0303B44()
{
  return MEMORY[0x1E0DA3C28]();
}

uint64_t sub_1C0303B50()
{
  return MEMORY[0x1E0DF2088]();
}

uint64_t sub_1C0303B5C()
{
  return MEMORY[0x1E0DF2090]();
}

uint64_t sub_1C0303B68()
{
  return MEMORY[0x1E0DF2100]();
}

uint64_t sub_1C0303B74()
{
  return MEMORY[0x1E0DF2118]();
}

uint64_t sub_1C0303B80()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1C0303B8C()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1C0303B98()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1C0303BA4()
{
  return MEMORY[0x1E0DF2268]();
}

uint64_t sub_1C0303BB0()
{
  return MEMORY[0x1E0DA3D60]();
}

uint64_t sub_1C0303BBC()
{
  return MEMORY[0x1E0DA3D68]();
}

uint64_t sub_1C0303BC8()
{
  return MEMORY[0x1E0DA3D70]();
}

uint64_t sub_1C0303BD4()
{
  return MEMORY[0x1E0DA3DE8]();
}

uint64_t sub_1C0303BE0()
{
  return MEMORY[0x1E0DA3E48]();
}

uint64_t sub_1C0303BEC()
{
  return MEMORY[0x1E0DA3E50]();
}

uint64_t sub_1C0303BF8()
{
  return MEMORY[0x1E0DA3EB0]();
}

uint64_t sub_1C0303C04()
{
  return MEMORY[0x1E0C9E728]();
}

uint64_t sub_1C0303C10()
{
  return MEMORY[0x1E0C9E758]();
}

uint64_t sub_1C0303C1C()
{
  return MEMORY[0x1E0C9E768]();
}

uint64_t sub_1C0303C28()
{
  return MEMORY[0x1E0CD7B38]();
}

uint64_t sub_1C0303C34()
{
  return MEMORY[0x1E0CD7B60]();
}

uint64_t sub_1C0303C40()
{
  return MEMORY[0x1E0CD7B70]();
}

uint64_t sub_1C0303C4C()
{
  return MEMORY[0x1E0CD7B88]();
}

uint64_t sub_1C0303C58()
{
  return MEMORY[0x1E0CD7BA0]();
}

uint64_t sub_1C0303C64()
{
  return MEMORY[0x1E0CD7BB8]();
}

uint64_t sub_1C0303C70()
{
  return MEMORY[0x1E0C95DD8]();
}

uint64_t sub_1C0303C7C()
{
  return MEMORY[0x1E0C96410]();
}

uint64_t sub_1C0303C88()
{
  return MEMORY[0x1E0C96468]();
}

uint64_t sub_1C0303C94()
{
  return MEMORY[0x1E0DEF458]();
}

uint64_t sub_1C0303CA0()
{
  return MEMORY[0x1E0DEF4A8]();
}

uint64_t sub_1C0303CAC()
{
  return MEMORY[0x1E0DEF4B8]();
}

uint64_t sub_1C0303CB8()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1C0303CC4()
{
  return MEMORY[0x1E0DEF560]();
}

uint64_t sub_1C0303CD0()
{
  return MEMORY[0x1E0DEF570]();
}

uint64_t sub_1C0303CDC()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1C0303CE8()
{
  return MEMORY[0x1E0DEF580]();
}

uint64_t sub_1C0303CF4()
{
  return MEMORY[0x1E0DEF588]();
}

uint64_t sub_1C0303D00()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1C0303D0C()
{
  return MEMORY[0x1E0DEF698]();
}

uint64_t sub_1C0303D18()
{
  return MEMORY[0x1E0DEF6A0]();
}

uint64_t sub_1C0303D24()
{
  return MEMORY[0x1E0DEF6B0]();
}

uint64_t sub_1C0303D30()
{
  return MEMORY[0x1E0DEF6B8]();
}

uint64_t sub_1C0303D3C()
{
  return MEMORY[0x1E0DEF758]();
}

uint64_t sub_1C0303D48()
{
  return MEMORY[0x1E0CA92A8]();
}

uint64_t sub_1C0303D54()
{
  return MEMORY[0x1E0CA92F8]();
}

uint64_t sub_1C0303D60()
{
  return MEMORY[0x1E0CA9920]();
}

uint64_t sub_1C0303D6C()
{
  return MEMORY[0x1E0CA9938]();
}

uint64_t sub_1C0303D78()
{
  return MEMORY[0x1E0CA9940]();
}

uint64_t sub_1C0303D84()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1C0303D90()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1C0303D9C()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_1C0303DA8()
{
  return MEMORY[0x1E0DE9E58]();
}

uint64_t sub_1C0303DB4()
{
  return MEMORY[0x1E0DE9E78]();
}

uint64_t sub_1C0303DC0()
{
  return MEMORY[0x1E0DE9F58]();
}

uint64_t sub_1C0303DCC()
{
  return MEMORY[0x1E0DEA070]();
}

uint64_t sub_1C0303DD8()
{
  return MEMORY[0x1E0DEA090]();
}

uint64_t sub_1C0303DE4()
{
  return MEMORY[0x1E0DEA0F0]();
}

uint64_t sub_1C0303DF0()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1C0303DFC()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1C0303E08()
{
  return MEMORY[0x1E0DEA258]();
}

uint64_t sub_1C0303E14()
{
  return MEMORY[0x1E0DEA278]();
}

uint64_t sub_1C0303E20()
{
  return MEMORY[0x1E0DEA2A0]();
}

uint64_t sub_1C0303E2C()
{
  return MEMORY[0x1E0DEA2C0]();
}

uint64_t sub_1C0303E38()
{
  return MEMORY[0x1E0DF1F80]();
}

uint64_t sub_1C0303E44()
{
  return MEMORY[0x1E0DF1FA0]();
}

uint64_t sub_1C0303E50()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1C0303E5C()
{
  return MEMORY[0x1E0DEA3C0]();
}

uint64_t sub_1C0303E68()
{
  return MEMORY[0x1E0DEA3C8]();
}

uint64_t sub_1C0303E74()
{
  return MEMORY[0x1E0DEA3D0]();
}

uint64_t sub_1C0303E80()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1C0303E8C()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1C0303E98()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_1C0303EA4()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_1C0303EB0()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1C0303EBC()
{
  return MEMORY[0x1E0CB1988]();
}

uint64_t sub_1C0303EC8()
{
  return MEMORY[0x1E0CB1990]();
}

uint64_t sub_1C0303ED4()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_1C0303EE0()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t sub_1C0303EEC()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t sub_1C0303EF8()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1C0303F04()
{
  return MEMORY[0x1E0DEA600]();
}

uint64_t sub_1C0303F10()
{
  return MEMORY[0x1E0DEA610]();
}

uint64_t sub_1C0303F1C()
{
  return MEMORY[0x1E0DEA618]();
}

uint64_t sub_1C0303F28()
{
  return MEMORY[0x1E0DEA630]();
}

uint64_t sub_1C0303F34()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1C0303F40()
{
  return MEMORY[0x1E0DEA668]();
}

uint64_t sub_1C0303F4C()
{
  return MEMORY[0x1E0DEA688]();
}

uint64_t sub_1C0303F58()
{
  return MEMORY[0x1E0DEA6A0]();
}

uint64_t sub_1C0303F64()
{
  return MEMORY[0x1E0DEA6A8]();
}

uint64_t sub_1C0303F70()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t sub_1C0303F7C()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1C0303F88()
{
  return MEMORY[0x1E0DEA768]();
}

uint64_t sub_1C0303F94()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_1C0303FA0()
{
  return MEMORY[0x1E0DEA7C0]();
}

uint64_t sub_1C0303FAC()
{
  return MEMORY[0x1E0DEA7D0]();
}

uint64_t sub_1C0303FB8()
{
  return MEMORY[0x1E0DEA7D8]();
}

uint64_t sub_1C0303FC4()
{
  return MEMORY[0x1E0DEA7F8]();
}

uint64_t sub_1C0303FD0()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1C0303FDC()
{
  return MEMORY[0x1E0DEA828]();
}

uint64_t sub_1C0303FE8()
{
  return MEMORY[0x1E0DEA830]();
}

uint64_t sub_1C0303FF4()
{
  return MEMORY[0x1E0DEA840]();
}

uint64_t sub_1C0304000()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1C030400C()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t sub_1C0304018()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_1C0304024()
{
  return MEMORY[0x1E0DEA878]();
}

uint64_t sub_1C0304030()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t sub_1C030403C()
{
  return MEMORY[0x1E0DEA900]();
}

uint64_t sub_1C0304048()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_1C0304054()
{
  return MEMORY[0x1E0DEA940]();
}

uint64_t sub_1C0304060()
{
  return MEMORY[0x1E0DEA948]();
}

uint64_t sub_1C030406C()
{
  return MEMORY[0x1E0DEA950]();
}

uint64_t sub_1C0304078()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_1C0304084()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_1C0304090()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1C030409C()
{
  return MEMORY[0x1E0DEAA58]();
}

uint64_t sub_1C03040A8()
{
  return MEMORY[0x1E0DEAAD8]();
}

uint64_t sub_1C03040B4()
{
  return MEMORY[0x1E0DEABB0]();
}

uint64_t sub_1C03040C0()
{
  return MEMORY[0x1E0DEAC88]();
}

uint64_t sub_1C03040CC()
{
  return MEMORY[0x1E0DEACA0]();
}

uint64_t sub_1C03040D8()
{
  return MEMORY[0x1E0DEACB8]();
}

uint64_t sub_1C03040E4()
{
  return MEMORY[0x1E0DEACD8]();
}

uint64_t sub_1C03040F0()
{
  return MEMORY[0x1E0DEAD18]();
}

uint64_t sub_1C03040FC()
{
  return MEMORY[0x1E0DEAD30]();
}

uint64_t sub_1C0304108()
{
  return MEMORY[0x1E0DEAD50]();
}

uint64_t sub_1C0304114()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1C0304120()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1C030412C()
{
  return MEMORY[0x1E0CB1AE0]();
}

uint64_t sub_1C0304138()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1C0304144()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1C0304150()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1C030415C()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1C0304168()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_1C0304174()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_1C0304180()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1C030418C()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1C0304198()
{
  return MEMORY[0x1E0DEAEF0]();
}

uint64_t sub_1C03041A4()
{
  return MEMORY[0x1E0CB1B28]();
}

uint64_t sub_1C03041B0()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1C03041BC()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t sub_1C03041C8()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_1C03041D4()
{
  return MEMORY[0x1E0DF06F8]();
}

uint64_t sub_1C03041E0()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1C03041EC()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1C03041F8()
{
  return MEMORY[0x1E0CB1B50]();
}

uint64_t sub_1C0304204()
{
  return MEMORY[0x1E0DEAFE8]();
}

uint64_t sub_1C0304210()
{
  return MEMORY[0x1E0DEB030]();
}

uint64_t sub_1C030421C()
{
  return MEMORY[0x1E0DEB120]();
}

uint64_t sub_1C0304228()
{
  return MEMORY[0x1E0CB1B88]();
}

uint64_t sub_1C0304234()
{
  return MEMORY[0x1E0CB1BB0]();
}

uint64_t sub_1C0304240()
{
  return MEMORY[0x1E0CB1BD8]();
}

uint64_t sub_1C030424C()
{
  return MEMORY[0x1E0DEB220]();
}

uint64_t sub_1C0304258()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1C0304264()
{
  return MEMORY[0x1E0DEB2A8]();
}

uint64_t sub_1C0304270()
{
  return MEMORY[0x1E0DEB310]();
}

uint64_t sub_1C030427C()
{
  return MEMORY[0x1E0CB1C10]();
}

uint64_t sub_1C0304288()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t sub_1C0304294()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t sub_1C03042A0()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_1C03042AC()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_1C03042B8()
{
  return MEMORY[0x1E0CB1C58]();
}

uint64_t sub_1C03042C4()
{
  return MEMORY[0x1E0C9E7E0]();
}

uint64_t sub_1C03042D0()
{
  return MEMORY[0x1E0CB1DC0]();
}

uint64_t sub_1C03042DC()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_1C03042E8()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1C03042F4()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1C0304300()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1C030430C()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1C0304318()
{
  return MEMORY[0x1E0CB1E28]();
}

uint64_t sub_1C0304324()
{
  return MEMORY[0x1E0CB1E30]();
}

uint64_t sub_1C0304330()
{
  return MEMORY[0x1E0CB1E68]();
}

uint64_t sub_1C030433C()
{
  return MEMORY[0x1E0CB1E90]();
}

uint64_t sub_1C0304348()
{
  return MEMORY[0x1E0DEF7D8]();
}

uint64_t sub_1C0304354()
{
  return MEMORY[0x1E0DEF7E0]();
}

uint64_t sub_1C0304360()
{
  return MEMORY[0x1E0DEF800]();
}

uint64_t sub_1C030436C()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1C0304378()
{
  return MEMORY[0x1E0DEF840]();
}

uint64_t sub_1C0304384()
{
  return MEMORY[0x1E0DEF858]();
}

uint64_t sub_1C0304390()
{
  return MEMORY[0x1E0DEF860]();
}

uint64_t sub_1C030439C()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1C03043A8()
{
  return MEMORY[0x1E0DEF8F8]();
}

uint64_t sub_1C03043B4()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1C03043C0()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1C03043CC()
{
  return MEMORY[0x1E0DEF920]();
}

uint64_t sub_1C03043D8()
{
  return MEMORY[0x1E0DF2298]();
}

uint64_t sub_1C03043E4()
{
  return MEMORY[0x1E0DF22A0]();
}

uint64_t sub_1C03043F0()
{
  return MEMORY[0x1E0DEFA60]();
}

uint64_t sub_1C03043FC()
{
  return MEMORY[0x1E0DEFA68]();
}

uint64_t sub_1C0304408()
{
  return MEMORY[0x1E0DEFA70]();
}

uint64_t sub_1C0304414()
{
  return MEMORY[0x1E0CB2020]();
}

uint64_t sub_1C0304420()
{
  return MEMORY[0x1E0CB2028]();
}

uint64_t sub_1C030442C()
{
  return MEMORY[0x1E0DEFC68]();
}

uint64_t sub_1C0304438()
{
  return MEMORY[0x1E0CB20D0]();
}

uint64_t sub_1C0304444()
{
  return MEMORY[0x1E0CB20E0]();
}

uint64_t sub_1C0304450()
{
  return MEMORY[0x1E0DEFCD8]();
}

uint64_t sub_1C030445C()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1C0304468()
{
  return MEMORY[0x1E0DEFCF0]();
}

uint64_t sub_1C0304474()
{
  return MEMORY[0x1E0CB2130]();
}

uint64_t sub_1C0304480()
{
  return MEMORY[0x1E0DF22E0]();
}

uint64_t sub_1C030448C()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1C0304498()
{
  return MEMORY[0x1E0DEBA00]();
}

uint64_t sub_1C03044A4()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_1C03044B0()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1C03044BC()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1C03044C8()
{
  return MEMORY[0x1E0CB2400]();
}

uint64_t sub_1C03044D4()
{
  return MEMORY[0x1E0CB2410]();
}

uint64_t sub_1C03044E0()
{
  return MEMORY[0x1E0CB2418]();
}

uint64_t sub_1C03044EC()
{
  return MEMORY[0x1E0CB2430]();
}

uint64_t sub_1C03044F8()
{
  return MEMORY[0x1E0CB2480]();
}

uint64_t sub_1C0304504()
{
  return MEMORY[0x1E0CB24A8]();
}

uint64_t sub_1C0304510()
{
  return MEMORY[0x1E0CB24B8]();
}

uint64_t sub_1C030451C()
{
  return MEMORY[0x1E0CB24F0]();
}

uint64_t sub_1C0304528()
{
  return MEMORY[0x1E0CB2540]();
}

uint64_t sub_1C0304534()
{
  return MEMORY[0x1E0CB2568]();
}

uint64_t sub_1C0304540()
{
  return MEMORY[0x1E0CB2570]();
}

uint64_t sub_1C030454C()
{
  return MEMORY[0x1E0CB2588]();
}

uint64_t sub_1C0304558()
{
  return MEMORY[0x1E0DEFF58]();
}

uint64_t sub_1C0304564()
{
  return MEMORY[0x1E0DEBE30]();
}

uint64_t sub_1C0304570()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1C030457C()
{
  return MEMORY[0x1E0DEC050]();
}

uint64_t sub_1C0304588()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1C0304594()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1C03045A0()
{
  return MEMORY[0x1E0DEC070]();
}

uint64_t sub_1C03045AC()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t sub_1C03045B8()
{
  return MEMORY[0x1E0DEC0A8]();
}

uint64_t sub_1C03045C4()
{
  return MEMORY[0x1E0DEC0B0]();
}

uint64_t sub_1C03045D0()
{
  return MEMORY[0x1E0DEC0B8]();
}

uint64_t sub_1C03045DC()
{
  return MEMORY[0x1E0DEC0D0]();
}

uint64_t sub_1C03045E8()
{
  return MEMORY[0x1E0DEC0D8]();
}

uint64_t sub_1C03045F4()
{
  return MEMORY[0x1E0DEC0E0]();
}

uint64_t sub_1C0304600()
{
  return MEMORY[0x1E0DEC0F8]();
}

uint64_t sub_1C030460C()
{
  return MEMORY[0x1E0DEC100]();
}

uint64_t sub_1C0304618()
{
  return MEMORY[0x1E0DEC108]();
}

uint64_t sub_1C0304624()
{
  return MEMORY[0x1E0DEC110]();
}

uint64_t sub_1C0304630()
{
  return MEMORY[0x1E0DEC118]();
}

uint64_t sub_1C030463C()
{
  return MEMORY[0x1E0DEC128]();
}

uint64_t sub_1C0304648()
{
  return MEMORY[0x1E0DEC130]();
}

uint64_t sub_1C0304654()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1C0304660()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1C030466C()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1C0304678()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1C0304684()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1C0304690()
{
  return MEMORY[0x1E0DEC258]();
}

uint64_t sub_1C030469C()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1C03046A8()
{
  return MEMORY[0x1E0DEC280]();
}

uint64_t sub_1C03046B4()
{
  return MEMORY[0x1E0DEC290]();
}

uint64_t sub_1C03046C0()
{
  return MEMORY[0x1E0DEC2A0]();
}

uint64_t sub_1C03046CC()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1C03046D8()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1C03046E4()
{
  return MEMORY[0x1E0DEC338]();
}

uint64_t sub_1C03046F0()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1C03046FC()
{
  return MEMORY[0x1E0DEC3E8]();
}

uint64_t sub_1C0304708()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_1C0304714()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_1C0304720()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1C030472C()
{
  return MEMORY[0x1E0DEC590]();
}

uint64_t sub_1C0304738()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1C0304744()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1C0304750()
{
  return MEMORY[0x1E0DEC680]();
}

uint64_t sub_1C030475C()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1C0304768()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1C0304774()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1C0304780()
{
  return MEMORY[0x1E0DEC6E0]();
}

uint64_t sub_1C030478C()
{
  return MEMORY[0x1E0DEC700]();
}

uint64_t sub_1C0304798()
{
  return MEMORY[0x1E0DEC708]();
}

uint64_t sub_1C03047A4()
{
  return MEMORY[0x1E0DEC888]();
}

uint64_t sub_1C03047B0()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1C03047BC()
{
  return MEMORY[0x1E0DECAE0]();
}

uint64_t sub_1C03047C8()
{
  return MEMORY[0x1E0DECAF8]();
}

uint64_t sub_1C03047D4()
{
  return MEMORY[0x1E0DECB00]();
}

uint64_t sub_1C03047E0()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1C03047EC()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1C03047F8()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1C0304804()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1C0304810()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1C030481C()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1C0304828()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1C0304834()
{
  return MEMORY[0x1E0DECD90]();
}

uint64_t sub_1C0304840()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1C030484C()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1C0304858()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1C0304864()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_1C0304870()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_1C030487C()
{
  return MEMORY[0x1E0DECF60]();
}

uint64_t sub_1C0304888()
{
  return MEMORY[0x1E0DECF68]();
}

uint64_t sub_1C0304894()
{
  return MEMORY[0x1E0DECF78]();
}

uint64_t sub_1C03048A0()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1C03048AC()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_1C03048B8()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_1C03048C4()
{
  return MEMORY[0x1E0DECFD0]();
}

uint64_t sub_1C03048D0()
{
  return MEMORY[0x1E0DECFE0]();
}

uint64_t sub_1C03048DC()
{
  return MEMORY[0x1E0DECFE8]();
}

uint64_t sub_1C03048E8()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1C03048F4()
{
  return MEMORY[0x1E0DED010]();
}

uint64_t sub_1C0304900()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_1C030490C()
{
  return MEMORY[0x1E0DED048]();
}

uint64_t sub_1C0304918()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t sub_1C0304924()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_1C0304930()
{
  return MEMORY[0x1E0DED098]();
}

uint64_t sub_1C030493C()
{
  return MEMORY[0x1E0DED0A0]();
}

uint64_t sub_1C0304948()
{
  return MEMORY[0x1E0DED0B0]();
}

uint64_t sub_1C0304954()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_1C0304960()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_1C030496C()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_1C0304978()
{
  return MEMORY[0x1E0DED100]();
}

uint64_t sub_1C0304984()
{
  return MEMORY[0x1E0DED110]();
}

uint64_t sub_1C0304990()
{
  return MEMORY[0x1E0DED118]();
}

uint64_t sub_1C030499C()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1C03049A8()
{
  return MEMORY[0x1E0DED140]();
}

uint64_t sub_1C03049B4()
{
  return MEMORY[0x1E0DED170]();
}

uint64_t sub_1C03049C0()
{
  return MEMORY[0x1E0DED1A0]();
}

uint64_t sub_1C03049CC()
{
  return MEMORY[0x1E0DED1B0]();
}

uint64_t sub_1C03049D8()
{
  return MEMORY[0x1E0DED1B8]();
}

uint64_t sub_1C03049E4()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1C03049F0()
{
  return MEMORY[0x1E0DED550]();
}

uint64_t sub_1C03049FC()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_1C0304A08()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1C0304A14()
{
  return MEMORY[0x1E0DED628]();
}

uint64_t sub_1C0304A20()
{
  return MEMORY[0x1E0DED6C8]();
}

uint64_t sub_1C0304A2C()
{
  return MEMORY[0x1E0DED770]();
}

uint64_t sub_1C0304A38()
{
  return MEMORY[0x1E0DED998]();
}

uint64_t sub_1C0304A44()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t sub_1C0304A50()
{
  return MEMORY[0x1E0DED9C8]();
}

uint64_t sub_1C0304A5C()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1C0304A68()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1C0304A74()
{
  return MEMORY[0x1E0CB2628]();
}

uint64_t sub_1C0304A80()
{
  return MEMORY[0x1E0CB2640]();
}

uint64_t sub_1C0304A8C()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_1C0304A98()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1C0304AA4()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1C0304AB0()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1C0304ABC()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1C0304AC8()
{
  return MEMORY[0x1E0DEDB30]();
}

uint64_t sub_1C0304AD4()
{
  return MEMORY[0x1E0CB2660]();
}

uint64_t sub_1C0304AE0()
{
  return MEMORY[0x1E0CB2670]();
}

uint64_t sub_1C0304AEC()
{
  return MEMORY[0x1E0DEDEE0]();
}

uint64_t sub_1C0304AF8()
{
  return MEMORY[0x1E0DEDEF0]();
}

uint64_t sub_1C0304B04()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1C0304B10()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1C0304B1C()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_1C0304B28()
{
  return MEMORY[0x1E0DEDF28]();
}

uint64_t sub_1C0304B34()
{
  return MEMORY[0x1E0DEDF30]();
}

uint64_t sub_1C0304B40()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1C0304B4C()
{
  return MEMORY[0x1E0DEDF80]();
}

uint64_t sub_1C0304B58()
{
  return MEMORY[0x1E0DEDFF8]();
}

uint64_t sub_1C0304B64()
{
  return MEMORY[0x1E0DEE000]();
}

uint64_t sub_1C0304B70()
{
  return MEMORY[0x1E0CB26E8]();
}

uint64_t sub_1C0304B7C()
{
  return MEMORY[0x1E0DEE230]();
}

uint64_t sub_1C0304B88()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1C0304B94()
{
  return MEMORY[0x1E0DEE260]();
}

uint64_t sub_1C0304BA0()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1C0304BAC()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1C0304BB8()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t sub_1C0304BC4()
{
  return MEMORY[0x1E0DEE978]();
}

uint64_t AFCurrentUserInterfaceIdiom()
{
  return MEMORY[0x1E0CFE3C8]();
}

uint64_t AFDeviceSupportsSiriUOD()
{
  return MEMORY[0x1E0CFE460]();
}

uint64_t AFIsInternalInstall()
{
  return MEMORY[0x1E0CFE4D0]();
}

uint64_t AFSystemRootDirectory()
{
  return MEMORY[0x1E0CFE770]();
}

uint64_t AnalyticsSendEvent()
{
  return MEMORY[0x1E0D15420]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1E0D15428]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x1E0D01E18]();
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A40](key, applicationID);
}

uint64_t CKVCustomTypeToNumber()
{
  return MEMORY[0x1E0D16B08]();
}

CLLocationCoordinate2D CLLocationCoordinate2DMake(CLLocationDegrees latitude, CLLocationDegrees longitude)
{
  double v2;
  double v3;
  CLLocationCoordinate2D result;

  MEMORY[0x1E0C9E308](latitude, longitude);
  result.longitude = v3;
  result.latitude = v2;
  return result;
}

uint64_t INMediaItemTypeGetName()
{
  return MEMORY[0x1E0CBD538]();
}

uint64_t INTypedIntentWithIntent()
{
  return MEMORY[0x1E0CBD6C8]();
}

MKCoordinateRegion MKCoordinateRegionMakeWithDistance(CLLocationCoordinate2D centerCoordinate, CLLocationDistance latitudinalMeters, CLLocationDistance longitudinalMeters)
{
  double v3;
  double v4;
  double v5;
  double v6;
  MKCoordinateRegion result;

  MEMORY[0x1E0CC1570]((__n128)centerCoordinate, *(__n128 *)&centerCoordinate.longitude, latitudinalMeters, longitudinalMeters);
  result.span.longitudeDelta = v6;
  result.span.latitudeDelta = v5;
  result.center.longitude = v4;
  result.center.latitude = v3;
  return result;
}

uint64_t MRMediaRemoteGetNowPlayingApplicationPlaybackState()
{
  return MEMORY[0x1E0D4BF18]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

double __exp10(double a1)
{
  double result;

  MEMORY[0x1E0C80AC8](a1);
  return result;
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x1E0DE7960]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x1E0DE7970]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x1E0DEEA50]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

long double cos(long double __x)
{
  long double result;

  MEMORY[0x1E0C82B40](__x);
  return result;
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

long double exp(long double __x)
{
  long double result;

  MEMORY[0x1E0C83280](__x);
  return result;
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

long double log(long double __x)
{
  long double result;

  MEMORY[0x1E0C83BB8](__x);
  return result;
}

long double log10(long double __x)
{
  long double result;

  MEMORY[0x1E0C83BC0](__x);
  return result;
}

long double log1p(long double __x)
{
  long double result;

  MEMORY[0x1E0C83BD0](__x);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1E0C84078](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x1E0C84970]();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

long double pow(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C84BB8](__x, __y);
  return result;
}

int sqlite3_bind_blob(sqlite3_stmt *a1, int a2, const void *a3, int n, void (__cdecl *a5)(void *))
{
  return MEMORY[0x1E0DE8580](a1, *(_QWORD *)&a2, a3, *(_QWORD *)&n, a5);
}

int sqlite3_bind_double(sqlite3_stmt *a1, int a2, double a3)
{
  return MEMORY[0x1E0DE8598](a1, *(_QWORD *)&a2, a3);
}

int sqlite3_bind_int64(sqlite3_stmt *a1, int a2, sqlite3_int64 a3)
{
  return MEMORY[0x1E0DE85A8](a1, *(_QWORD *)&a2, a3);
}

int sqlite3_bind_null(sqlite3_stmt *a1, int a2)
{
  return MEMORY[0x1E0DE85B0](a1, *(_QWORD *)&a2);
}

int sqlite3_bind_parameter_count(sqlite3_stmt *a1)
{
  return MEMORY[0x1E0DE85B8](a1);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return MEMORY[0x1E0DE85D8](a1, *(_QWORD *)&a2, a3, *(_QWORD *)&a4, a5);
}

int sqlite3_busy_timeout(sqlite3 *a1, int ms)
{
  return MEMORY[0x1E0DE8638](a1, *(_QWORD *)&ms);
}

int sqlite3_changes(sqlite3 *a1)
{
  return MEMORY[0x1E0DE8640](a1);
}

int sqlite3_clear_bindings(sqlite3_stmt *a1)
{
  return MEMORY[0x1E0DE8648](a1);
}

int sqlite3_close(sqlite3 *a1)
{
  return MEMORY[0x1E0DE8650](a1);
}

const void *__cdecl sqlite3_column_blob(sqlite3_stmt *a1, int iCol)
{
  return (const void *)MEMORY[0x1E0DE8660](a1, *(_QWORD *)&iCol);
}

int sqlite3_column_bytes(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1E0DE8668](a1, *(_QWORD *)&iCol);
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  return MEMORY[0x1E0DE8678](pStmt);
}

double sqlite3_column_double(sqlite3_stmt *a1, int iCol)
{
  double result;

  MEMORY[0x1E0DE8688](a1, *(_QWORD *)&iCol);
  return result;
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1E0DE8698](a1, *(_QWORD *)&iCol);
}

const char *__cdecl sqlite3_column_name(sqlite3_stmt *a1, int N)
{
  return (const char *)MEMORY[0x1E0DE86A0](a1, *(_QWORD *)&N);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return (const unsigned __int8 *)MEMORY[0x1E0DE86B8](a1, *(_QWORD *)&iCol);
}

int sqlite3_column_type(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1E0DE86C8](a1, *(_QWORD *)&iCol);
}

const char *__cdecl sqlite3_db_filename(sqlite3 *db, const char *zDbName)
{
  return (const char *)MEMORY[0x1E0DE8740](db, zDbName);
}

int sqlite3_db_readonly(sqlite3 *db, const char *zDbName)
{
  return MEMORY[0x1E0DE8758](db, zDbName);
}

const char *__cdecl sqlite3_errmsg(sqlite3 *a1)
{
  return (const char *)MEMORY[0x1E0DE8788](a1);
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  return MEMORY[0x1E0DE8798](a1, sql, callback, a4, errmsg);
}

int sqlite3_extended_result_codes(sqlite3 *a1, int onoff)
{
  return MEMORY[0x1E0DE87B8](a1, *(_QWORD *)&onoff);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return MEMORY[0x1E0DE87C8](pStmt);
}

sqlite3_int64 sqlite3_last_insert_rowid(sqlite3 *a1)
{
  return MEMORY[0x1E0DE8820](a1);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return MEMORY[0x1E0DE8870](filename, ppDb, *(_QWORD *)&flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return MEMORY[0x1E0DE8880](db, zSql, *(_QWORD *)&nByte, ppStmt, pzTail);
}

int sqlite3_reset(sqlite3_stmt *pStmt)
{
  return MEMORY[0x1E0DE88B0](pStmt);
}

const char *__cdecl sqlite3_sql(sqlite3_stmt *pStmt)
{
  return (const char *)MEMORY[0x1E0DE8998](pStmt);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return MEMORY[0x1E0DE89A8](a1);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1E0DEEB40]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x1E0DF0FB0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1E0DF0FB8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1E0DF0FC0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1E0DEEC18]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1E0DEEC38]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1E0DEECC0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1E0DEED08]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1E0DEED70]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x1E0DEED80]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1E0DEEDC8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1E0DEEE08]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setAtWritableKeyPath()
{
  return MEMORY[0x1E0DEEE68]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x1E0DEEE90]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1E0DEEEB8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1E0DEEFC8]();
}

uint64_t tcc_authorization_record_get_authorization_right()
{
  return MEMORY[0x1E0DB1208]();
}

uint64_t tcc_authorization_record_get_service()
{
  return MEMORY[0x1E0DB1220]();
}

uint64_t tcc_identity_create()
{
  return MEMORY[0x1E0DB1290]();
}

uint64_t tcc_message_options_create()
{
  return MEMORY[0x1E0DB12C8]();
}

uint64_t tcc_message_options_set_reply_handler_policy()
{
  return MEMORY[0x1E0DB12F0]();
}

uint64_t tcc_server_create()
{
  return MEMORY[0x1E0DB1320]();
}

uint64_t tcc_server_message_get_authorization_records_by_identity()
{
  return MEMORY[0x1E0DB1328]();
}

uint64_t tcc_service_get_name()
{
  return MEMORY[0x1E0DB1380]();
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return MEMORY[0x1E0C85D90](activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
  MEMORY[0x1E0C85D98](identifier, criteria, handler);
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return MEMORY[0x1E0C85DB8](activity, state);
}

BOOL xpc_activity_should_defer(xpc_activity_t activity)
{
  return MEMORY[0x1E0C85DC8](activity);
}

void xpc_activity_unregister(const char *identifier)
{
  MEMORY[0x1E0C85DD0](identifier);
}

xpc_object_t xpc_BOOL_create(BOOL value)
{
  return (xpc_object_t)MEMORY[0x1E0C85EF0](value);
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return (xpc_object_t)MEMORY[0x1E0C86208](keys, values, count);
}

xpc_object_t xpc_int64_create(int64_t value)
{
  return (xpc_object_t)MEMORY[0x1E0C86568](value);
}

xpc_object_t xpc_string_create(const char *string)
{
  return (xpc_object_t)MEMORY[0x1E0C86720](string);
}

