uint64_t sub_1A273561C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void (*a18)(uint64_t), uint64_t (*a19)(uint64_t), uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t *a26)
{
  uint64_t v26;
  int *v27;
  _QWORD *v28;
  int v29;
  uint64_t v30;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v28[30] = a26;
  a5(a4);
  v32 = *v27;
  v33 = *a26;
  v34 = *((_DWORD *)a26 + 3);
  v28[31] = (char *)a26 + 12;
  v35 = v28[29];
  v36 = 932829133 * ((~((v30 - 136) | 0x53DF11DF) + ((v30 - 136) & 0x53DF11DF)) ^ 0xC6BB3AD);
  v28[92] = v28[28];
  v28[88] = v33;
  v28[91] = v35;
  *(_DWORD *)(v30 - 116) = 1017140188 - v36 + 1793297355 * v32;
  *(_DWORD *)(v30 - 128) = -532470131 - v36 + v34 - ((2 * v34) & 0xC0864D1A);
  *(_DWORD *)(v30 - 120) = (v29 + 955) ^ v36;
  a18(v30 - 136);
  v37 = *(_DWORD *)(v30 - 124);
  v38 = a19(a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v26
                                                      + 8
                                                      * (((v37 == 1934675644) * (((v29 - 28) ^ 0x3D3) + 1859)) ^ v29))
                                          - 12))(v38);
}

uint64_t sub_1A2735748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int *a13, uint64_t a14, uint64_t (*a15)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;

  v23 = *(_QWORD *)(v15 + 8 * v18);
  v24 = 2106769199 * (((v16 | 0x3C1F5A01B6451214) - (v16 & 0x3C1F5A01B6451214)) ^ 0x7C0EE26FD9B93921);
  *(_QWORD *)(v19 + 720) = v20;
  *(_DWORD *)(v22 - 128) = v18 - 822706943 - v24;
  *(_QWORD *)(v19 + 704) = v24 + v23 - 8;
  v21(v22 - 136);
  v25 = a15(*a13, a14, v17);
  v26 = ((2 * v25) & 0xDCF5FFF6) + (v25 ^ (((v18 + 2146606617) & 0xABFDEF95) + 1116369018));
  v27 = 2106769199
      * (((v16 | 0x755FAE9A5F209D69) - (v16 | 0x8AA05165A0DF6296) - 0x755FAE9A5F209D6ALL) ^ 0x354E16F430DCB65CLL);
  *(_QWORD *)(v19 + 704) = v27 + *(_QWORD *)(v15 + 8 * (v18 ^ 0x43)) - 8;
  *(_DWORD *)(v22 - 128) = v18 - 822706943 - v27;
  *(_QWORD *)(v19 + 720) = v20;
  v28 = ((uint64_t (*)(uint64_t))v21)(v22 - 136);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v15 + 8
                                                                     * ((2546 * (v26 == 1853554683)) ^ (v18 - 310)))
                                                   - 12))(v28, 737183914);
}

void sub_1A27358E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int *a14)
{
  void (*v14)(uint64_t);
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  unsigned int v23;

  v14(v17);
  v19 = *a14;
  v20 = **(_QWORD **)(v16 + 240);
  v21 = *(_QWORD *)(v16 + 224);
  v22 = 932829133 * ((213975504 - ((v18 - 136) | 0xCC101D0) + ((v18 - 136) | 0xF33EFE2F)) ^ 0x5375A3A2);
  v23 = -532470131 - v22 + **(_DWORD **)(v16 + 248) - ((**(_DWORD **)(v16 + 248) << ((v15 + 28) ^ 0xEF)) & 0xC0864D1A);
  *(_QWORD *)(v16 + 728) = *(_QWORD *)(v16 + 232);
  *(_QWORD *)(v16 + 736) = v21;
  *(_DWORD *)(v18 - 128) = v23;
  *(_DWORD *)(v18 - 120) = (v15 + 983) ^ v22;
  *(_DWORD *)(v18 - 116) = 1017140188 - v22 + 1793297355 * v19;
  *(_QWORD *)(v16 + 704) = v20;
  JUMPOUT(0x1A27359B4);
}

uint64_t sub_1A2735A38@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (1183 * a1))) - ((v1 ^ 0x2BF08F1Du) - 737185301) + 352))();
}

void sub_1A2735A80()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v3 = (v0 ^ 0x87u) + *(_QWORD *)(v1 + 8 * v0) - 499;
  *v2 = v2[64];
  v2[1] = v3;
  JUMPOUT(0x1A2735AB8);
}

uint64_t sub_1A2735B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t (*a17)(uint64_t, uint64_t))
{
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v20 = *(_QWORD **)(v19 + 416);
  *v20 = 0;
  v20[1] = 0;
  *(_QWORD *)(v19 + 424) = v20 + 1;
  v21 = a17(4096, 2241923698);
  **(_QWORD **)(v19 + 416) = v21;
  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * ((42 * (v21 != 0)) ^ v18)) - 12))();
}

uint64_t sub_1A2735B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;

  v49 = *(_QWORD *)(v46 + 416);
  v50 = (((v45 - 33) | 0x21) + 994) | 0x30;
  **(_DWORD **)(v46 + 424) = v47;
  *(_QWORD *)(v46 + 24) = v49;
  BYTE3(a44) = 1;
  HIDWORD(a44) = 1718253555;
  **(_QWORD **)(v46 + 368) = *(_QWORD *)(v46 + 24);
  v51 = *(_QWORD *)(v44
                  + 8
                  * (int)(((HIDWORD(a23) == 1)
                         * ((((v50 + 157284934) | 0x22908F00) ^ 0xFFFFFF74) + ((v50 + 198181318) | 0x20208780))) ^ v50));
  LODWORD(STACK[0x2AC]) = 1718253555;
  LOBYTE(STACK[0x2B3]) = 1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 - 4))(a1, a2, a3, *(_QWORD *)(v48 + 8 * (v50 - 1581)) - 4, *(_QWORD *)(v48 + 8 * (v50 ^ 0x60B)), *(_QWORD *)(v48 + 8 * (v50 ^ 0x62B)) - 4, *(_QWORD *)(v48 + 8 * (v50 - 1539)), *(_QWORD *)(v48 + 8 * (v50 - 1580)) - 12, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_1A2735D04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return a9(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14);
}

uint64_t sub_1A2735D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  uint64_t v23;
  int v24;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v23
                                                               + 8
                                                               * ((69
                                                                 * (((v24 + a23 + 41) ^ LOBYTE(STACK[0x2B3])) & 1)) ^ (v24 + a23 + 2050)))
                                                   - 4))(a1, 737183914);
}

#error "1A2735DB8: call analysis failed (funcsize=24)"

uint64_t sub_1A2735DBC(uint64_t a1, int a2)
{
  int v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v2 ^ (1324 * (v3 & 1)))) + v5 - (v2 ^ (a2 + 1577))))();
}

void sub_1A2735DE4()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = ((118 * (v0 ^ 0x154u)) ^ 0xFFFFFFFFFFFFFD3CLL) + *(_QWORD *)(v1 + 8 * v0);
  v4 = v2[49];
  v5 = v2[48];
  v2[15] = v2[50];
  v2[16] = v4;
  v2[17] = v3;
  v2[18] = v5;
  v2[20] = v2[33];
  JUMPOUT(0x1A2735E28);
}

uint64_t sub_1A2735F1C@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24)
{
  uint64_t v24;
  int v25;

  LODWORD(STACK[0x20C]) = a24;
  return ((uint64_t (*)(void))(*(_QWORD *)(v24
                                        + 8
                                        * (((a24 != a2 + ((a3 - a1 - 1671191272) & 0x639C54DC) - 204) | ((a24 != a2 + ((a3 - a1 - 1671191272) & 0x639C54DC) - 204) << 6)) ^ (v25 + a3 + 530)))
                            - 12))();
}

void sub_1A2735F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)(v27 + 200) = *(_QWORD *)(v26 + 8 * v25);
  *(_QWORD *)(v27 + 216) = a25;
  JUMPOUT(0x1A273652CLL);
}

uint64_t sub_1A2735F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unint64_t a24,unint64_t *a25,uint64_t a26,int a27,unsigned int a28)
{
  int v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;

  v31 = *a25;
  v30[35] = a25;
  v30[36] = v31;
  v30[37] = a24;
  v30[38] = a28 - 0x5D906247D5C6FE97 + (~(2 * a28) | 0xFFFFFFFFAB8DF7AFLL) + 704;
  return ((uint64_t (*)(void))(*(_QWORD *)(v29
                                        + 8
                                        * (((a24 <= v31) * ((v28 - 406) ^ 0x6C ^ ((v28 - 723) | 0x120))) ^ (v28 - 818)))
                            - 8))();
}

uint64_t sub_1A2736014()
{
  int v0;
  uint64_t v1;
  int v2;

  v2 = LODWORD(STACK[0x228]) ^ 0x2A390428;
  LODWORD(STACK[0x234]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v2 != v0 - 1345) * ((v0 + 611) ^ 0x730)) | v0)) - 12))();
}

uint64_t sub_1A273605C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v23 = LODWORD(STACK[0x234]);
  *(_QWORD *)(v22 + 320) = v23;
  v24 = **(unsigned __int8 **)(v22 + 296);
  **(_BYTE **)(v22 + 288) = v24;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 + 8 * ((3950 * (v23 == 1)) ^ a8)) - 8))(v24, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_1A2736130(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int *a20,uint64_t (*a21)(_QWORD, uint64_t, _QWORD),uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,unsigned int a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v39;

  v37 = (v36 - a2);
  LODWORD(STACK[0x248]) = a3;
  LODWORD(STACK[0x24C]) = a33;
  *(_QWORD *)(v34 + 344) = a32;
  v39 = a21(*a20, a24, a28);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v33 + 8 * ((1512 * (a3 == 1718253555)) ^ (v36 + v35)))
                                                   - v37
                                                   + 1739))(v39, 737183914);
}

uint64_t sub_1A27361B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  int v26;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 + 8 * ((54 * ((((v26 ^ 0xB2) - 80) ^ (HIDWORD(a23) == 1)) & 1)) ^ v26)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1A2736200@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 ^ (230 * (v1 != 0)))) - ((a1 + 1943489848) & 0x8C28ACFE) + 152))();
}

uint64_t sub_1A273623C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  _BOOL4 v8;

  v3 = *(_QWORD *)(v2 + 344);
  v4 = *(_DWORD *)(v3 + 12);
  v3 += 12;
  *(_QWORD *)(v2 + 352) = v3;
  LODWORD(STACK[0x264]) = v4;
  v5 = (v4 ^ 0x9FFBFDD7E3BFF4FDLL)
     + 0x6004022823AFD228
     + (((unint64_t)v4 << ((78 * (a1 ^ 0x67)) ^ 0x9Du)) & 0x1C77FE9FALL);
  v6 = (*(unsigned int *)(v3 - 4) ^ 0x57F7D7FFD2E27EFDLL)
     - 0x57F7D7FFCB72B7DCLL
     + ((2 * *(unsigned int *)(v3 - 4)) & 0x1A5C4FDFALL);
  v7 = (v5 < 0x76FC721) ^ (v6 < 0x76FC721);
  v8 = v5 > v6;
  if (v7)
    v8 = v5 < 0x76FC721;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((3938 * !v8) ^ a1)) - 4))();
}

void sub_1A273632C(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  **(_DWORD **)(v2 + 352) = LODWORD(STACK[0x264]) + 4;
  *(_QWORD *)(v2 + 200) = ((a1 - 1066) ^ 0xFFFFFFFFFFFFFDCFLL) + *(_QWORD *)(v1 + 8 * (a1 - 1481));
  JUMPOUT(0x1A27364D4);
}

void sub_1A27364DC()
{
  JUMPOUT(0x1A27364ECLL);
}

uint64_t sub_1A27365A0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = **(_QWORD **)(v2 + 664);
  *(_QWORD *)(v2 + 696) = v5;
  return ((uint64_t (*)(void))(v4
                            - ((a1 - v3 - 708875052) | 0x2A408C01u)
                            + *(_QWORD *)(v1 + 8 * ((14 * (v5 != 0)) ^ a1))
                            + 4))();
}

uint64_t sub_1A27365F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t (*a22)(void),int a23,int a24)
{
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  _QWORD *v29;
  uint64_t v30;

  v28 = v24 - 1835;
  ((void (*)(_QWORD))a22)(*(_QWORD *)(v26 + 696));
  v29 = *(_QWORD **)(v26 + 664);
  *v29 = 0;
  v29[1] = 0;
  v30 = a22();
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v25 + 8 * ((987 * (a24 == 1)) ^ (v27 + v28 + 324)))
                                                   - 12))(v30, 737183914);
}

uint64_t sub_1A273664C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 688))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

void sub_1A2736678()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 8) = v1;
}

uint64_t sub_1A27366C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  int v51;
  uint64_t v52;
  _QWORD *v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v56 = v53[8];
  v55 = v53[9];
  LODWORD(STACK[0x2D4]) = a50;
  v57 = v53[7];
  v53[60] = v55;
  v53[61] = v56;
  v53[62] = v57;
  v53[11] = v57;
  v53[12] = v56;
  v53[13] = v55;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 + 8 * ((2047 * (a51 == (_DWORD)a3)) ^ (v54 + v51 + 855))) - (v51 - 1733526150) + 3298626799))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1A273672C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  _QWORD *v46;
  char v47;
  char v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  _DWORD *v52;
  int v53;
  unsigned int v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v56;

  v48 = (a8 - 80) & 0xD5;
  v50 = v46[60];
  v49 = (uint64_t *)v46[61];
  v51 = *v49;
  v52 = (_DWORD *)v46[62];
  v53 = STACK[0x2D4];
  v54 = ((*v52 << (v47 + v48 + 101)) & 0xDF6EBEE2) + (*v52 ^ 0xEFB75F71) + 273195151;
  *(_BYTE *)(*v49 + v54) = ((LODWORD(STACK[0x2D4]) - 537762601 - ((2 * LODWORD(STACK[0x2D4])) & 0xBFE4C9AE)) >> 24) ^ 0xDF;
  *(_BYTE *)(v51 + v54 + 1) = ((v53 - 537762601 - ((2 * v53) & 0xBFE4C9AE)) >> 16) ^ 0xF2;
  *(_BYTE *)(v51 + v54 + 2) = ((((unsigned __int16)(v53 + 25815 - ((2 * v53) & 0xC9AE)) >> 8) ^ 0x64)
                             - ((2 * (((unsigned __int16)(v53 + 25815 - ((2 * v53) & 0xC9AE)) >> 8) ^ 0x64)) & 0x96)
                             + 75) ^ 0x4B;
  *(_BYTE *)(v51 + v54 + 3) = (v53 - 41 - ((2 * v53) & 0xAE)) ^ 0xD7;
  *v52 += 4;
  v46[11] = v52;
  v46[12] = v49;
  v46[13] = v50;
  LODWORD(STACK[0x2F0]) = a2;
  v55 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v46[13];
  v46[64] = v55;
  LODWORD(STACK[0x2F4]) = v53;
  v56 = v46[11];
  v46[65] = v46[12];
  v46[66] = v56;
  return v55(273195151, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1A2736840()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (480 * (v0 != 1))))
                            - ((7 * (v1 ^ 0x65F) - 267) | 0x10Eu)
                            + 1314))();
}

uint64_t sub_1A2736888@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((7 * (v1 ^ 0x5B2)) ^ 0x42A) * (a1 >> 31 == 0)) ^ v1)) - 4))();
}

uint64_t sub_1A27368C0@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((104 * (a1 << ((v2 - 127) ^ (113 * (v2 ^ 0x2D)) ^ 0x53u) > v1)) ^ v2))
                            - 4))();
}

uint64_t sub_1A2736904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  uint64_t v56;
  int v57;
  uint64_t v58;
  _QWORD *v59;

  v59[21] = v56;
  v59[76] = a9;
  v59[77] = v56;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 + 8 * (((HIDWORD(a24) == 3 * (v57 ^ 0x80B) - 560) * ((v57 - 218) ^ 0x7AF)) ^ v57)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_1A273695C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (337 * a1)))
                            - ((v1 + 1417) ^ 0xFFFFFFFFD40F773DLL)
                            - ((v1 + 54526288) | 0x28B08C00u)))();
}

uint64_t sub_1A27369A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t (*a17)(_QWORD, uint64_t), uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v59 = a17(*(_QWORD *)(v58 + 616), 2241923698);
  *(_QWORD *)(v58 + 624) = v59;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 + 8 * ((112 * (HIDWORD(a23) != (v56 ^ 0x58A ^ (51 * (v56 ^ 0x7B1))))) ^ v56)) - 4))(v59, v60, v61, v62, v63, v64, v65, v66, a9, a4, a6, a12, v57, a8, a7, a5, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_1A2736A20(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((((v3 ^ 0x231) + 1098) * (a1 != 0)) | v3))
                            + v4
                            - (v3 - v2 - 405)))();
}

uint64_t sub_1A2736A6C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = **(_QWORD **)(v2 + 536);
  *(_QWORD *)(v2 + 632) = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((484 * (v3 > *(_QWORD *)(v2 + 624))) ^ (v0 + 1772))))();
}

uint64_t sub_1A2736C2C(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  *(_DWORD *)(v7 - 196) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((((v2 - v6 - 1258) ^ (a2 + 409) ^ 0x5DF) * (v4 ^ 1)) ^ v2)) - 8))();
}

uint64_t sub_1A2736C64@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v4 = *(unsigned int *)(v3 - 196);
  v2[81] = v4;
  v2[22] = 0;
  v5 = ((a1 + 804760011) & 0xFBF8DFF3 ^ 0x810409A2BFDC8B80) + 0x7EFBF65D6BD3FBFFLL;
  *(_BYTE *)(v2[78] + v5) = *(_BYTE *)(v2[79] + v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((29 * (v4 == 1)) | a1)) - 8))();
}

void sub_1A2736D04()
{
  JUMPOUT(0x1A2736CCCLL);
}

uint64_t sub_1A2736D0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 168) = a3;
  *(_QWORD *)(v4 + 608) = a3;
  *(_QWORD *)(v4 + 616) = v3;
  v5 = *(_QWORD *)(v4 + 560);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(v4 + 568);
  *(_QWORD *)(v4 + 64) = v5;
  *(_QWORD *)(v4 + 72) = *(_QWORD *)(v4 + 552);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 576))(a1, a2, 1718253555);
}

uint64_t sub_1A2736D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  unsigned __int8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  *(_DWORD *)(v22 - 180) = v18;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20
                                                                       + 8
                                                                       * (int)((((v19 ^ (a4 - v21 + 42)) & 1)
                                                                              * ((a4 + 1574077177) & 0xA22D7D9F ^ 0x25A)) ^ a4)))(a1, a2, a3, a18);
}

uint64_t sub_1A2736DAC(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = *(unsigned int *)(v5 - 180);
  v4[23] = v6--;
  v7 = (v6 ^ 0x7B177EDEFFDFAFB0)
     - 0x7B177EDEFFDFAFB0
     + (((a2 + v2 + 716) ^ 0x1D44FD0E1) & (2 * v6));
  *(_BYTE *)(v4[78] + v7) = *(_BYTE *)(v4[79] + v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((21 * (v6 == 0)) ^ v2)) - 12))();
}

uint64_t sub_1A2736E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24)
{
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  _QWORD *v30;
  uint64_t v31;

  *(_QWORD *)(v27 + 176) = v24;
  v29 = v28 + v25 + 405;
  v30 = *(_QWORD **)(v27 + 536);
  v31 = a4(*v30);
  *v30 = *(_QWORD *)(v27 + 624);
  **(_DWORD **)(v27 + 584) = *(_QWORD *)(v27 + 616);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v26 + 8 * ((102 * (a24 != 1)) ^ v29)) - 8))(v31, 737183914);
}

void sub_1A2736EA8(uint64_t a1)
{
  __asm { BR              X13 }
}

uint64_t sub_1A2736F70()
{
  int v0;
  uint64_t (*v1)(uint64_t);
  int v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v7 = *(_QWORD *)(v3 + 8 * (v0 + v2)) - 8;
  *(_DWORD *)(v5 - 44) = (v0 - 315797198) ^ (2106769199
                                           * ((2 * ((v5 - 48) & 0x1B4F1470) - (v5 - 48) - 458167412) ^ 0x8B4CC0B9));
  *(_QWORD *)(v5 - 40) = &v7;
  result = v1(v5 - 48);
  *v4 = *(_DWORD *)(v5 - 48) - 1718253555;
  return result;
}

void sub_1A2737298(uint64_t a1)
{
  __asm { BR              X13 }
}

uint64_t sub_1A2737338@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD v12[3];
  unsigned int v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(_QWORD *)(v4 + 40);
  v12[0] = *((_QWORD *)off_1E47CDD30[a1 ^ 0x43CF3F22] + a1 - 1137655125);
  v12[1] = v3 - ((2 * v3) & 0xB458574F6496B6F2) + 0x5A2C2BA7B24B5B79;
  v8 = *(_QWORD *)(v4 + 72);
  v9 = *(_QWORD *)(v4 + 56);
  v10 = *(_QWORD *)(v4 + 16);
  v12[2] = *(_QWORD *)(v4 + 8);
  v13 = (v2 ^ 0x7E5CD35F) - 941129745 + ((2 * v2) & 0xFCB9A6BE);
  v14 = 1526419896;
  v15 = v9;
  v16 = (v1 ^ 0xF6E5D37F) + 1331593167 + ((2 * v1) & 0xEDCBA6FE);
  v17 = 0;
  v18 = 2083507214;
  v20 = 0;
  v21 = 0;
  v19 = v8;
  v22 = 1178882894;
  v23 = v10;
  v24 = v7;
  v25 = v6;
  v26 = 55;
  *(_DWORD *)(v5 - 32) = a1 + 253222187 * ((v5 - 48) ^ 0xCA55C7DC) + 1064076783;
  *(_QWORD *)(v5 - 40) = v12;
  result = ((uint64_t (*)(uint64_t))off_1E47CDD30[a1 - 1137655536])(v5 - 48);
  *(_DWORD *)(v4 + 64) = *(_DWORD *)(v5 - 48) - 1718253555;
  return result;
}

void sub_1A27374FC(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1A2737690()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  v5 = v3 + v0 + 107;
  v6 = v3 + v0 + 2290;
  *(_QWORD *)(v2 + 240) = &STACK[0x278F89334A281754];
  *(_QWORD *)(v2 + 248) = &STACK[0x1EFC1F4B90642F2E];
  *(_DWORD *)(v4 - 136) = v3
                        + v0
                        + 1756268191
                        * ((((v4 - 136) | 0x17B8C5D0) - (v4 - 136) + ((v4 - 136) & 0xE8473A28)) ^ 0x9A2A4B11)
                        + 2192;
  v7 = sub_1A275B1A8((_DWORD *)(v4 - 136));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1
                                                      + 8
                                                      * (((*(_DWORD *)(v4 - 132) != 665312139) * (v5 ^ 0xD0)) | v6))
                                          - 12))(v7);
}

uint64_t sub_1A273775C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(uint64_t, uint64_t),uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,uint64_t a45,uint64_t a46,__int16 a47,char a48,char a49,int a50)
{
  int v50;
  uint64_t v51;
  int v52;
  _QWORD *v53;
  int v54;
  int v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  a25 = 0;
  v56 = *(_QWORD *)(v51 + 8 * v50);
  v57 = 135 * (v50 ^ 0xD8);
  LODWORD(STACK[0x204]) = ((v57 - 13183014) & (2 * v52)) + (v52 ^ 0xFF9B6CFB) + 6591237;
  v53[1] = v56;
  v53[3] = &a25;
  v53[49] = &a25;
  LODWORD(STACK[0x294]) = a44;
  v58 = v53[1];
  v59 = a40;
  v53[51] = *v53;
  v53[52] = v59;
  v53[53] = a39;
  v53[54] = v58;
  v60 = a20(16, 2241923698);
  v53[55] = v60;
  v53[4] = 0;
  a49 = 0;
  a50 = v55 - 2;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 8 * (((v60 != 0) * (v54 + ((3 * (v57 ^ 0x373) + 27261918) | 0x581B63D0) + 1438)) ^ v57)))(v60, a24, v61, v62, 1718253555, v63, v64, v65, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1A2738198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  int v27;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * (int)((LOBYTE(STACK[0x2D3]) * (((a2 + 157000452) & 0x9CE8FDF1) + 1835)) ^ (v27 + a2 + 953))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1A27381E0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v3 + ((((a1 - 1586284404) & 0x5E8CC2DA) - 574655577) & 0x7BFBEFFB) + 2294)
                                          * v1) ^ (a1 - 1586284404) & 0x5E8CC2DA))
                            - 12))();
}

void sub_1A273823C()
{
  _QWORD *v0;
  uint64_t v1;

  v0[16] = v0[53];
  v1 = v0[51];
  v0[18] = v0[52];
  v0[19] = v1;
  JUMPOUT(0x1A2738270);
}

uint64_t sub_1A2738310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30)
{
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  _BOOL4 v35;

  v33 = (v32 + v30 + 1516);
  v34 = v32 + v30 + 2239;
  LODWORD(STACK[0x22C]) = a30;
  v35 = a30 == ((v32 + v30 - 7) ^ (a5 - 90));
  return ((uint64_t (*)(void))(*(_QWORD *)(v31 + 8 * ((v35 | (2 * v35)) ^ v34)) - v33 + 1621))();
}

uint64_t sub_1A2738350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t *a26,int a27,unsigned int a28,unint64_t a29)
{
  int v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;

  v32 = *a26;
  v31[38] = a26;
  v31[39] = v32;
  v31[40] = a29;
  v31[41] = a28
          - (((unint64_t)a28 << ((3 * (v29 ^ 0x40) - 103) & 0xDF ^ 0xD1u)) & 0x54720850)
          - 0x5D906247D5C6FBD8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v30 + 8 * (((16 * (a29 > v32)) | (32 * (a29 > v32))) ^ v29)) - 8))();
}

uint64_t sub_1A27383DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  int v25;
  uint64_t v26;

  LODWORD(STACK[0x264]) = LODWORD(STACK[0x248]) ^ 0x2A390428;
  return ((uint64_t (*)(void))(*(_QWORD *)(v26 + 8 * ((49 * ((v25 ^ 0x81 ^ (a25 == 1)) & 1)) ^ v25))
                            - 4))();
}

uint64_t sub_1A2738434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                                 + 8
                                                                                 * (((((v3 - 545) | 0x180) ^ 0x59BB6461 ^ ((v3 + 1076443150) | 0x199223C8))
                                                                                   * (v4 != v5)) ^ v3))
                                                                     - 12))(a1, a2, a3, 1505451528);
}

uint64_t sub_1A273848C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;

  v27 = LODWORD(STACK[0x264]) - 1;
  v28 = (v27 ^ 0x7B177EDEFFDFAFB0)
      - 0x7B177EDEFFDFAFB0
      + (((a9 - v26 - 1811) ^ 0x1A6043C9BLL) & (2 * (LODWORD(STACK[0x264]) - 1)));
  *(_BYTE *)(*(_QWORD *)(v25 + 312) + v28) = *(_BYTE *)(*(_QWORD *)(v25 + 320) + v28);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 + 8 * ((83 * (v27 == 0)) | a9)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24);
}

void sub_1A2738510(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)(v20 + 216) = *(_QWORD *)(v19 + 8 * a1);
  *(_QWORD *)(v20 + 232) = a19;
  JUMPOUT(0x1A2738AE8);
}

uint64_t sub_1A2738544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * (a4 ^ (231 * (v4 == v5))))
                                                                     - ((v8 + 463 * (a4 ^ 0x852u) - 1377) ^ (v7 + a4 - 606))))(a1, a2, a3, 1505451528);
}

uint64_t sub_1A2738590@<X0>(int a1@<W3>, int a2@<W8>)
{
  uint64_t v2;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v5 = LODWORD(STACK[0x264]);
  v3[1] = v5--;
  v6 = (v5 ^ 0x7B177EDEFFDFAFB0) - 0x7B177EDEFFDFAFB0 + ((2 * v5) & 0x1FFBF5F60);
  *(_BYTE *)(v3[39] + v6) = *(_BYTE *)(v3[40] + v6);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v5 == 0) * (v4 + a1 + a2 + 134 - 86)) ^ a2))
                            - 4))();
}

uint64_t sub_1A2738610@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = v6 - 1;
  v10 = (v9 ^ v2) + v1 + (v3 & (2 * v9));
  *(_BYTE *)(v5 + v10) = *(_BYTE *)(v4 + v10);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v9 == 0) * v7) ^ a1)) - 4))();
}

uint64_t sub_1A2738648(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int *a21,uint64_t (*a22)(_QWORD, _QWORD, _QWORD),uint64_t a23,unsigned int a24,uint64_t a25,uint64_t a26,int a27,unsigned int a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35)
{
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;

  v37[1] = v35;
  v40 = v37[38];
  *(_DWORD *)(v40 + 8) = a28;
  *(_DWORD *)(v40 + 12) = 0;
  v41 = (v38 - a4);
  v37[46] = v40;
  LODWORD(STACK[0x268]) = a5;
  LODWORD(STACK[0x26C]) = a35;
  v43 = a22(*a21, v37[91], a28);
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v36 + 8 * ((2030 * (a5 == 1718253555)) ^ (v38 + v39)))
                                                  - v41
                                                  + 1515))(v43, a24);
}

uint64_t sub_1A2738650(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int *a21,uint64_t (*a22)(_QWORD, uint64_t, _QWORD),uint64_t a23,unsigned int a24,uint64_t a25,uint64_t a26,int a27,unsigned int a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34)
{
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v41;

  v38 = *(_QWORD *)(v35 + 304);
  *(_DWORD *)(v38 + 8) = a28;
  *(_DWORD *)(v38 + 12) = 0;
  v39 = v36 - a4;
  LODWORD(STACK[0x268]) = a5;
  LODWORD(STACK[0x26C]) = a34;
  *(_QWORD *)(v35 + 368) = v38;
  v41 = a22(*a21, a29, a28);
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v34
                                                              + 8
                                                              * (((a5 == 1718253555) * (v39 + 1372)) ^ (v37 + v36 + 779)))
                                                  - 4))(v41, a24);
}

uint64_t sub_1A27387CC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v1 == 0) ^ v0 ^ 0x63) & 1 | (8
                                                                                * (((v1 == 0) ^ v0 ^ 0x63) & 1))) ^ v0)))();
}

uint64_t sub_1A27387FC@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  _BOOL4 v9;

  v4 = *(_QWORD *)(v3 + 368);
  v5 = *(_DWORD *)(v4 + 12);
  v4 += 12;
  *(_QWORD *)(v3 + 376) = v4;
  LODWORD(STACK[0x284]) = v5;
  v6 = (v5 ^ 0x7B8FDFB4FFB37FFDLL) - 0x7B8FDFB4DCED977CLL + ((2 * v5) & 0x1FF66FFFALL);
  v7 = (a1 ^ *(_DWORD *)(v4 - 4) ^ 0xFF2FBFD7E9DF3F3ALL)
     + ((2 * *(unsigned int *)(v4 - 4)) & 0x1D3BE7EFELL)
     + 0xD0402838E6A8FELL;
  v8 = (v6 < 0x22C5E87D) ^ (v7 < 0x22C5E87D);
  v9 = v6 > v7;
  if (v8)
    v9 = v6 < 0x22C5E87D;
  return (*(uint64_t (**)(void))(v2 + 8 * ((2695 * !v9) ^ v1)))();
}

void sub_1A27388D0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  **(_DWORD **)(v2 + 376) = LODWORD(STACK[0x284]) + 4;
  *(_QWORD *)(v2 + 216) = *(_QWORD *)(v1 + 184 * (v0 ^ 0x225));
  *(_QWORD *)(v2 + 232) = *(_QWORD *)(v2 + 368);
  JUMPOUT(0x1A2738AE8);
}

void sub_1A2738A80()
{
  JUMPOUT(0x1A2738A90);
}

uint64_t sub_1A2738B54(uint64_t a1)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((49 * (((a1 == 0) ^ (v2 - 1)) & 1)) ^ v2))
                            - ((v2 - 1414) | 0x208u)
                            + 532))();
}

uint64_t sub_1A2738B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unsigned int a24)
{
  uint64_t v24;
  uint64_t v25;

  v25 = *(_QWORD *)(v24 + 440);
  **(_DWORD **)(v24 + 448) = 4096;
  *(_QWORD *)(v24 + 32) = v25;
  LODWORD(STACK[0x2CC]) = 1718253555;
  LOBYTE(STACK[0x2D3]) = 1;
  **(_QWORD **)(v24 + 392) = *(_QWORD *)(v24 + 32);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 432))(a1, a24, a3, 1505451528);
}

uint64_t sub_1A2738C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,int a53)
{
  int v53;
  uint64_t v54;
  _QWORD *v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  LODWORD(STACK[0x2F4]) = a52;
  v59 = v55[9];
  v58 = v55[10];
  v60 = v55[8];
  v55[63] = v58;
  v55[64] = v59;
  v55[65] = v60;
  v55[12] = v60;
  v55[13] = v59;
  v55[14] = v58;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 + 8 * (((a53 == (_DWORD)a5) * ((v53 ^ (v56 + 1789)) + 2100)) ^ (v57 + v53 + 1677))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_1A2738C6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  char v49;
  _QWORD *v50;
  char v51;
  char v52;
  uint64_t *v53;
  uint64_t v54;
  _DWORD *v55;
  uint64_t v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;

  v52 = v49 ^ a9;
  v53 = (uint64_t *)v50[65];
  v54 = *v53;
  v56 = v50[63];
  v55 = (_DWORD *)v50[64];
  v57 = STACK[0x2F4];
  v58 = v57 - 537762601 - ((v57 << (v51 + v52 - 112)) & 0xBFE4C9AE);
  v59 = ((2 * *v55) & 0xDFEF6AA6) + (*v55 ^ 0xEFF7B553) + 268978861;
  *(_BYTE *)(*v53 + v59) = HIBYTE(v58) ^ 0xDF;
  *(_BYTE *)(v54 + v59 + 1) = BYTE2(v58) ^ 0xF2;
  *(_BYTE *)(v54 + v59 + 2) = ((BYTE1(v58) ^ 0x64) - ((2 * (BYTE1(v58) ^ 0x64)) & 0x96) + 75) ^ 0x4B;
  *(_BYTE *)(v54 + v59 + 3) = v58 ^ 0xD7;
  *v55 += 4;
  v50[12] = v53;
  v50[13] = v55;
  v50[14] = v56;
  LODWORD(STACK[0x310]) = a5;
  LODWORD(STACK[0x314]) = v57;
  v61 = v50[13];
  v60 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v50[14];
  v50[67] = v60;
  v62 = v50[12];
  v50[68] = v61;
  v50[69] = v62;
  return v60(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_1A2738D6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  uint64_t v59;
  uint64_t v60;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 + 8 * ((61 * ((((v59 & 0xFFFFFFFF80000000) != 0) ^ (a9 + 45)) & 1)) ^ (a9 + 300))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_1A2738DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  uint64_t v65;
  uint64_t v66;

  HIDWORD(a29) = a65;
  v66 = *(_QWORD *)(v65 + 584);
  *(_QWORD *)(v65 + 64) = *(_QWORD *)(v65 + 592);
  *(_QWORD *)(v65 + 72) = v66;
  *(_QWORD *)(v65 + 80) = *(_QWORD *)(v65 + 576);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 600))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_1A2738DDC()
{
  unint64_t v0;
  unint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 176) = v0;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((283 * (v2 ^ 0x4F9)) ^ 0xFFFFF93F) + 113 * (v2 ^ 0x4F3)) * (v0 > v1)) ^ v2)))();
}

uint64_t sub_1A2738E24@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(v3
                            + *(_QWORD *)(v2 + 8 * (((((v1 - 777) | 0x382) + 1992) * a1) ^ v1))
                            - ((v1 - 5979) & 0x59BB73FB)
                            - 4))();
}

uint64_t sub_1A2738E64@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((((a2 - 2463) ^ (a2 - 2479)) * (a1 == 0)) | a2)))();
}

uint64_t sub_1A2738E94()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = **(_QWORD **)(v2 + 560);
  *(_QWORD *)(v2 + 656) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v0 + 1856) ^ (16 * (v3 <= *(_QWORD *)(v2 + 648))))) - 8))();
}

uint64_t sub_1A273903C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;

  LODWORD(STACK[0x3AC]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((a1 - v5 - 704) ^ (v4 + 1525)) * (v2 ^ 1)) ^ a1)) - 4))();
}

uint64_t sub_1A2739068()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  int v3;
  unsigned int v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v4 = STACK[0x3AC];
  v5 = v3 + v0 + 1306;
  v2[24] = LODWORD(STACK[0x3AC]);
  v6 = ((v3 + v0 + 2080109454) & 0xDDBF6FFB ^ 0xFFFFFFFFA6449C04) + v4;
  v7 = (v6 ^ 0x7B177EDEFFDFAFB0) - 0x7B177EDEFFDFAFB0 + ((2 * v6) & 0x1FFBF5F60);
  *(_BYTE *)(v2[81] + v7) = *(_BYTE *)(v2[82] + v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((21 * (((v5 + 2080108148) & 0xDDBF6FFB ^ 0xA6449C04) + v4 != 0)) ^ v5))
                            - 12))();
}

uint64_t sub_1A2739070@<X0>(int a1@<W8>)
{
  int v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;

  LODWORD(STACK[0x39C]) = v1;
  return ((uint64_t (*)(void))(v4
                            + *(_QWORD *)(v3 + 8 * ((155 * ((v2 ^ a1) & 1)) ^ a1))
                            - ((a1 - 67111730) & 0x5DBB6BFB)
                            + 4))();
}

uint64_t sub_1A27390C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 712))(a1, a2, a3, 1505451528);
}

uint64_t sub_1A27390FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  int v31;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * (int)((LOBYTE(STACK[0x2D3]) * (((v31 + a2 - 113) | 0x24) + 1369)) ^ (v31 + a2 - 2))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_1A2739138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;

  v53 = ((_DWORD)a9 - 350296810) & 0x14E11FF7;
  v52[6] = *(_QWORD *)(v51 + 8 * a9) + v53 - 1342;
  LODWORD(STACK[0x2D4]) = 1;
  v54 = v52[6];
  v52[59] = a26;
  v52[60] = v54;
  v55 = *(_DWORD *)(a26 + 12);
  v52[61] = a26 + 12;
  LODWORD(STACK[0x2F0]) = v55;
  v52[10] = a26 + 12;
  v52[12] = a26;
  v52[13] = v54;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 8 * (int)(((v55 < (((_DWORD)v53 + 163306441) & 0xF6441F9F ^ 0xFFFFFF60)) * (v53 - 1211)) ^ v53)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51);
}

uint64_t sub_1A2739300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t v48;
  _QWORD *v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _BOOL4 v55;
  _BOOL4 v56;

  v51 = v49[59];
  v52 = v49[60];
  v53 = (LODWORD(STACK[0x2F0]) ^ 0xFF3FF6EFFFDFFA7DLL)
      + 0xC00910794B6365
      + (((unint64_t)LODWORD(STACK[0x2F0]) << (v50 + a9 + 94)) & 0x1FFBFF4FALL);
  v54 = (*(unsigned int *)(v51 + 8) ^ 0x79CECFDDB736FFD7)
      - 0x79CECFDD3E0BA1F9
      + ((2 * *(unsigned int *)(v51 + 8)) & 0x16E6DFFAELL);
  v55 = v53 < 0x792B5DDE;
  v56 = v53 > v54;
  if (v55 != v54 < 0x792B5DDE)
    v56 = v55;
  v49[4] = v49[61];
  v49[8] = v51;
  v49[9] = v52;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 + 8 * ((1313 * v56) ^ a9)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_1A27393FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  int v71;

  v61 = *(_QWORD *)(v59 + 8 * a9);
  v62 = (a9 + 1705);
  v71 = STACK[0x2D4];
  v60[22] = (v62 ^ 0xFFFFFFFFFFFFF8BCLL) + v61;
  v63 = v60[60];
  v60[14] = v60[61];
  v64 = v60[59];
  v60[16] = v64;
  v60[18] = v63;
  v65 = ((_DWORD)v62 + 1) | 0x22u;
  v60[19] = v64;
  v60[70] = v64;
  v60[72] = v60[18];
  v60[73] = v60[16];
  v60[74] = v60[14];
  v66 = v60[22];
  LODWORD(STACK[0x33C]) = v71;
  v60[75] = v66;
  v67 = *(unsigned int *)(v64 + 8);
  v60[76] = v64 + 8;
  v68 = v65 + v67 - 1891;
  v60[77] = v68;
  LOBYTE(STACK[0x377]) = v68 < 0xFFFFFFFF;
  v60[23] = v67;
  v69 = v60[23];
  v60[79] = v69;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 + 8 * (int)((3916 * (v69 > (unint64_t)(((_DWORD)v65 + 1539044504) & 0xFDFF67FB) + 642030596)) ^ v65)) - ((223 * (v65 ^ 0x761)) ^ 0x536)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_1A273943C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  int v29;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 + 8 * ((1868 * (LODWORD(STACK[0x310]) == (_DWORD)a5)) ^ ((int)a2 + v29))) - (((_DWORD)a2 + v29 + 43) | 0x200u) + 660))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1A2739478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void (*a15)(uint64_t), void (*a16)(uint64_t), uint64_t (*a17)(uint64_t), uint64_t a18, int *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t *a25)
{
  uint64_t v25;
  int v26;
  _QWORD *v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v27[33] = a25;
  v27[91] = 0;
  a16(a18);
  v30 = *a19;
  v31 = *a25;
  v32 = *((_DWORD *)a25 + 3);
  v27[34] = (char *)a25 + 12;
  v33 = v27[30];
  v34 = v27[31];
  v35 = 932829133 * ((v29 - 136) ^ 0xA04B5D8D);
  v27[115] = v31;
  v27[118] = v34;
  *(_DWORD *)(v29 - 116) = 1017140188 - v35 + 1793297355 * v30;
  v27[119] = v33;
  *(_DWORD *)(v29 - 128) = v28 - v35 + v32 - ((2 * v32) & 0xC0864D1A);
  *(_DWORD *)(v29 - 120) = (v26 + 781) ^ v35;
  a15(v29 - 136);
  v36 = *(_DWORD *)(v29 - 124);
  v37 = a17(a18);
  return (*(uint64_t (**)(uint64_t))(v25 + 8
                                                  * (((v36 == 1934675644) * (((v26 ^ 0x7D1) - 891) ^ 0x505)) ^ v26)))(v37);
}

uint64_t sub_1A273957C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t), unsigned int *a12, uint64_t (*a13)(_QWORD, uint64_t, uint64_t), uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unsigned int a24)
{
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  unsigned int v31;
  unint64_t v32;
  uint64_t v33;

  v29 = *(_QWORD *)(v25 + 8 * v26);
  *(_DWORD *)(v28 - 128) = v26 - 822706943 - 2106769199 * ((((2 * v24) | 0xFBD55F68) - v24 + 34951244) ^ 0x92168481);
  *(_QWORD *)(v27 + 936) = a18;
  *(_QWORD *)(v27 + 920) = 2106769199
                         * ((((2 * v24) | 0x1CD4D43FFBD55F68) - v24 - 0xE6A6A1FFDEAAFB4) ^ 0x4E7BD27192168481)
                         + v29
                         + ((v26 - 1777881845) & 0x69F853BE)
                         - 676;
  a11(v28 - 136);
  v30 = a13(*a12, a10, a19);
  v31 = ((2 * v30) & 0xDFDEEFEE) + (v30 ^ 0xEFEF77F7);
  v32 = 2106769199 * ((-2 - ((~v24 | 0xF3F093A3FF4400C1) + (v24 | 0xC0F6C5C00BBFF3ELL))) ^ 0xB3E12BCD90B82BF4);
  *(_QWORD *)(v27 + 920) = v32 + *(_QWORD *)(v25 + 8 * (v26 ^ 0x43)) - 8;
  *(_DWORD *)(v28 - 128) = v26 - 822706943 - v32;
  *(_QWORD *)(v27 + 936) = a18;
  v33 = ((uint64_t (*)(uint64_t))a11)(v28 - 136);
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v25 + 8 * ((549 * (v31 == -269518857)) ^ (v26 - 353)))
                                                  - 8))(v33, a24);
}

uint64_t sub_1A2739744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void (*a15)(uint64_t), void (*a16)(uint64_t), uint64_t (*a17)(uint64_t), uint64_t a18, int *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;

  a16(a18);
  v30 = *a19;
  v31 = **(_QWORD **)(v27 + 264);
  v32 = **(_DWORD **)(v27 + 272);
  v33 = *(_QWORD *)(v27 + 240);
  v34 = 932829133 * (((v29 - 136) & 0xD990A1BB | ~((v29 - 136) | 0xD990A1BB)) ^ 0x862403C9);
  *(_QWORD *)(v27 + 944) = *(_QWORD *)(v27 + 248);
  *(_DWORD *)(v29 - 128) = v28 - v34 + v32 - ((v32 << ((v26 + 67) & 0x6D ^ 0x4C)) & 0xC0864D1A);
  *(_QWORD *)(v27 + 920) = v31;
  *(_QWORD *)(v27 + 952) = v33;
  *(_DWORD *)(v29 - 120) = (v26 + 781) ^ v34;
  *(_DWORD *)(v29 - 116) = 1017140188 - v34 + 1793297355 * v30;
  a15(v29 - 136);
  v35 = a17(a18);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25
                                                      + 8
                                                      * (int)(((a25 != 2) * ((v26 + 866600259) & 0xCC58BD6D ^ 0x555)) ^ (v26 + 866600259) & 0xCC58BD6D))
                                          - (((((v26 + 866600259) & 0xCC58BD6D) - 1325) | 0x1CA) ^ 0x1E6)))(v35);
}

uint64_t sub_1A2739830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  int v29;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 + 8 * ((35 * (HIDWORD(a24) == (((v29 ^ 0x496) - 362) ^ 0x70))) ^ v29 ^ 0x496)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1A2739874@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int a18)
{
  int v18;
  uint64_t v19;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v19 + 8 * (v18 ^ (2540 * (a2 == 1666240185))))
                                                  + 1505453043
                                                  - ((v18 - 97) | 0x60u)
                                                  - ((v18 + 1084883626) | 0x191160E0u)
                                                  + 112))(a1, a18);
}

void sub_1A27398D4()
{
  JUMPOUT(0x1A2739914);
}

uint64_t sub_1A27399AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(uint64_t, uint64_t),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  uint64_t v25;
  int v26;
  uint64_t v27;
  _QWORD *v28;

  v28 = *(_QWORD **)(v27 + 440);
  *v28 = 0;
  v28[1] = 0;
  *(_QWORD *)(v27 + 448) = v28 + 1;
  **(_QWORD **)(v27 + 440) = a20(4096, 2241923698);
  return ((uint64_t (*)(void))(*(_QWORD *)(v25
                                        + 8
                                        * (((8 * ((((v26 + 874) ^ 0x22D ^ (a25 == 1)) & 1) == 0)) & 0xEF | (16 * (((v26 + 106) ^ 0x2D ^ ~(a25 == 1)) & 1))) ^ v26))
                            - 4))();
}

uint64_t sub_1A2739A18(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (122 * (a1 == 0))))
                            - ((v1 + 1986503686) & 0x899857D7)
                            - ((131 * (v1 ^ 0x7B0u)) ^ 0xFFFFFFFFFFFFFFE6)))();
}

uint64_t sub_1A2739A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(_QWORD),unsigned int a24)
{
  uint64_t v24;
  int v25;
  uint64_t v26;

  v26 = a23(*(_QWORD *)(v24 + 440));
  *(_QWORD *)(v24 + 24) = 0;
  LODWORD(STACK[0x2CC]) = v25 - 2;
  LOBYTE(STACK[0x2D3]) = 0;
  **(_QWORD **)(v24 + 392) = *(_QWORD *)(v24 + 24);
  return (*(uint64_t (**)(uint64_t, _QWORD))(v24 + 432))(v26, a24);
}

uint64_t sub_1A2739AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  int v27;
  int v28;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 + 8 * (int)((LOBYTE(STACK[0x2D3]) * ((a2 - v27 - 258) ^ 0x1B5)) ^ (v28 + a2 - 30))) - 8))(a1, a2, a3, 1505451528, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1A2739B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26,uint64_t a27,uint64_t a28,int a29,int a30)
{
  uint64_t v30;
  uint64_t v31;

  LODWORD(STACK[0x21C]) = a30;
  *(_QWORD *)(v31 + 288) = a28;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * ((449 * (a26 != 1)) ^ a9)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22);
}

uint64_t sub_1A2739B84@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(v3
                            + *(_QWORD *)(v2 + 8 * ((a1 - 1093) ^ (2478 * v1)))
                            - ((a1 + 2042585866) & 0xDFFBFBFF)
                            + 4))();
}

void sub_1A2739BC8(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[22] = ((a1 - 1767602358) & 0x695B7F4D ^ 0xFFFFFFFFFFFFF8B8) + *(_QWORD *)(v1 + 8 * a1);
  v2[14] = v2[53];
  v3 = v2[51];
  v2[16] = v2[52];
  v2[18] = v3;
  JUMPOUT(0x1A2739C1CLL);
}

uint64_t sub_1A2739D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  uint64_t v65;
  uint64_t v66;

  HIDWORD(a29) = a65;
  *(_QWORD *)(v65 + 32) = *(_QWORD *)(v65 + 592);
  v66 = *(_QWORD *)(v65 + 576);
  *(_QWORD *)(v65 + 64) = *(_QWORD *)(v65 + 584);
  *(_QWORD *)(v65 + 72) = v66;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 600))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1A2739D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,int a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57)
{
  int v57;
  uint64_t v58;
  _QWORD *v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v63 = v59[8];
  v62 = v59[9];
  v59[63] = v62;
  v59[64] = v63;
  v64 = v59[4];
  v59[65] = v64;
  LODWORD(STACK[0x2F4]) = a53;
  v59[10] = v64;
  v59[12] = v63;
  v59[13] = v62;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * (((a57 == (_DWORD)a5) * (2 * (v57 ^ (v60 + 858)) + 2046)) ^ (v61 + v57 + 1217))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_1A2739DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  _DWORD *v55;
  int v56;
  unsigned int v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v59;

  v53 = v51[63];
  v52 = (uint64_t *)v51[64];
  v54 = *v52;
  v55 = (_DWORD *)v51[65];
  v56 = STACK[0x2F4];
  v57 = ((*v55 << (a9 ^ 0x33)) & 0xFC6EBAB6) + (*v55 ^ 0xFE375D5B) + 29926053;
  *(_BYTE *)(*v52 + v57) = ((LODWORD(STACK[0x2F4]) - 537762601 - ((2 * LODWORD(STACK[0x2F4])) & 0xBFE4C9AE)) >> 24) ^ 0xDF;
  *(_BYTE *)(v54 + v57 + 1) = ((v56 - 537762601 - ((2 * v56) & 0xBFE4C9AE)) >> 16) ^ 0xF2;
  *(_BYTE *)(v54 + v57 + 2) = ((((unsigned __int16)(v56 + 25815 - ((2 * v56) & 0xC9AE)) >> 8) ^ 0x64)
                             - ((2 * (((unsigned __int16)(v56 + 25815 - ((2 * v56) & 0xC9AE)) >> 8) ^ 0x64)) & 0x96)
                             + 75) ^ 0x4B;
  *(_BYTE *)(v54 + v57 + 3) = (v56 - 41 - ((2 * v56) & 0xAE)) ^ 0xD7;
  *v55 += 4;
  v51[10] = v55;
  v51[12] = v52;
  v51[13] = v53;
  LODWORD(STACK[0x310]) = a5;
  v59 = v51[12];
  v58 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v51[13];
  v51[67] = v58;
  v51[68] = v59;
  v51[69] = v51[10];
  LODWORD(STACK[0x314]) = v56;
  return v58(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51);
}

uint64_t sub_1A2739EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30)
{
  int v30;
  uint64_t v31;
  int v32;
  int v33;

  LODWORD(STACK[0x22C]) = a30;
  return ((uint64_t (*)(void))(*(_QWORD *)(v31 + 8 * ((a30 != a5) | (v33 + v30 + 2187)))
                            - ((v30 - v32 - 1442) | 0x60Cu)
                            + 1621))();
}

void sub_1A2739EF4(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)(v20 + 168) = v19 + 8 * (a1 - 1440);
  *(_QWORD *)(v20 + 232) = a19;
  JUMPOUT(0x1A273A528);
}

uint64_t sub_1A2739F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t *a26,int a27,unsigned int a28)
{
  int v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;

  v31 = *a26;
  v30[38] = a26;
  v30[39] = v31;
  v32 = v30[91];
  v30[40] = v32;
  v30[41] = a28
          - ((((v28 + 762) ^ 0x547209D7) + (v28 + 371)) & (2 * a28))
          - 0x5D906247D5C6FBD8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v29 + 8 * (((16 * (v32 > v31)) | (32 * (v32 > v31))) ^ v28)) - 8))();
}

uint64_t sub_1A2739FA4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  uint64_t v18;

  LODWORD(STACK[0x254]) = LODWORD(STACK[0x248]) ^ 0x2A390428;
  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * (((a18 == 1) * (1117 * (a1 ^ 0x955) - 2225)) ^ a1)) - 12))();
}

uint64_t sub_1A2739FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  int v6;
  unint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5
                                                                                 + 8
                                                                                 * ((((((a4 ^ 0x1ED) - 1189) | 0x3AA) ^ 0x658)
                                                                                   * (v4 == 0)) ^ a4 ^ 0x1ED))
                                                                     - ((v6 + (a4 ^ 0x1EDu) - 711) ^ v7)))(a1, a2, a3, 1505451528);
}

uint64_t sub_1A273A038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;

  *(_QWORD *)(v27 + 344) = LODWORD(STACK[0x254]);
  return (*(uint64_t (**)(void))(v26 + 8 * ((4024 * (a25 == ((v25 - v28 + 658134196) & 0x7F0A47F7 ^ 0x7F4))) ^ v25)))();
}

uint64_t sub_1A273A0AC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(unint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v26 = v24[43] - 1;
  v27 = ((v22 + 20601117) | 0x588102E9) ^ v25;
  v28 = *(unsigned __int8 *)(v24[40] + v21 + a6);
  *(_BYTE *)(v24[39] + v21 + a6) = v28;
  v29 = (uint64_t (*)(unint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 + 8 * ((3689 * (v26 == 0)) ^ v22)) - v27);
  return v29(v27, v29, v28, a1, a2, a3, a4, a5, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
}

void sub_1A273A11C()
{
  JUMPOUT(0x1A273A0E4);
}

uint64_t sub_1A273A1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  uint64_t v27;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * ((1002 * (HIDWORD(a24) == (v26 ^ 0x7D5) - 549)) ^ v26)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1A273A1EC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((3238 * (((v1 == 0) ^ (v0 - 39)) & 1)) ^ (v0 + 694))))();
}

uint64_t sub_1A273A234@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  _BOOL4 v8;

  v3 = *(_QWORD *)(v2 + 368);
  v4 = *(_DWORD *)(v3 + 12);
  v3 += 12;
  *(_QWORD *)(v2 + 376) = v3;
  LODWORD(STACK[0x284]) = v4;
  v5 = (v4 ^ 0x7B9CB9BF7BFFEDFFLL) - 0x7B9CB9BEC05723E1 + ((2 * v4) & 0xF7FFDBFE);
  v6 = (*(unsigned int *)(v3 - 4) ^ 0x6FF6ADF52FDD7B7DLL)
     - 0x6FF6ADF47434B163
     + (((unint64_t)*(unsigned int *)(v3 - 4) << (((a1 + 35) & 0x71u) - 112)) & 0x5FBAF6FA);
  v7 = (v5 < 0xBBA8CA1A) ^ (v6 < 0xBBA8CA1A);
  v8 = v5 > v6;
  if (v7)
    v8 = v5 < 0xBBA8CA1A;
  return (*(uint64_t (**)(void))(v1 + 8 * ((a1 - 4) | (4 * v8))))();
}

void sub_1A273A31C(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  **(_DWORD **)(v2 + 376) = LODWORD(STACK[0x284]) + 4;
  *(_QWORD *)(v2 + 168) = v1 + 8 * (a1 - 1131);
  *(_QWORD *)(v2 + 232) = *(_QWORD *)(v2 + 368);
  JUMPOUT(0x1A273A528);
}

void sub_1A273A4CC()
{
  JUMPOUT(0x1A273A4DCLL);
}

uint64_t sub_1A273A598@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = **(_QWORD **)(v2 + 688);
  *(_QWORD *)(v2 + 720) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v3 == 0) * (a1 - 24 + ((a1 + 273) | 4) - 202)) ^ a1)) - 12))();
}

uint64_t sub_1A273A5D8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  uint64_t v18;

  return ((uint64_t (*)(void))(*(_QWORD *)(v18
                                        + 8 * (((a18 != ((a1 + 1086164980) & 0xBF426DFF ^ 0x4FC)) * (a1 - 1754)) ^ a1))
                            - 4))();
}

uint64_t sub_1A273A61C@<X0>(int a1@<W8>)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 184) = v1;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a1 + 94) ^ 0x333 ^ ((a1 - 1725) | 0x420)) * (v1 > v2)) | (a1 + 59))))();
}

uint64_t sub_1A273A658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  int v58;
  uint64_t v59;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 + 8 * (int)(((HIDWORD(a24) != 1) * (((v58 + 726) | 0x18) + ((v58 - 176) ^ 0xFFFFFA26))) ^ v58)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_1A273A698@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((16 * ((a1 ^ (v1 + 31)) & 1)) & 0xBF | (((a1 ^ (v1 + 31)) & 1) << 6)) ^ v1))
                            - 8))();
}

uint64_t sub_1A273A6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  uint64_t v58;
  unsigned int v59;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 + 8 * (int)((41 * (HIDWORD(a24) != ((v59 + 1140627285) & 0xBC036BBB) - 2090)) ^ v59)) - (v59 ^ 0x512)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_1A273A728(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((348 * (((a1 == 0) ^ v1) & 1)) ^ v1))
                            - (v1 + 327)
                            + 2406))();
}

uint64_t sub_1A273A764()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = **(_QWORD **)(v2 + 560);
  *(_QWORD *)(v2 + 656) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((195 * (v3 > *(_QWORD *)(v2 + 648))) ^ v0)) - 8))();
}

uint64_t sub_1A273A988()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  LODWORD(STACK[0x39C]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (155 * (v1 != 0))))
                            - ((16 * ((v0 - 37784374) & 0x5BFBEBFF ^ (v3 + 1460))) ^ 0x474)))();
}

uint64_t sub_1A273A9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)(v27 + 672) = LODWORD(STACK[0x39C]);
  return ((uint64_t (*)(void))(v28
                            - ((v25 + 1210605202) | 0x119300F9u)
                            + *(_QWORD *)(v26 + 8 * (((a25 == 1) * (v25 ^ 0x85A)) ^ v25))
                            + 4))();
}

uint64_t sub_1A273AA28()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 192) = 0;
  v3 = *(_QWORD *)(v2 + 672) - 1;
  **(_BYTE **)(v2 + 648) = **(_BYTE **)(v2 + 656);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((244 * (v3 == 0)) ^ v0 ^ 0x600)) - 8))();
}

uint64_t sub_1A273AAC0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;

  LODWORD(STACK[0x3AC]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((((v3 + ((a1 + 755336080) & 0xD2FA7DFE) + 307) ^ (v3 + 2498)) * (v1 != 0)) ^ a1))
                            - 4))();
}

uint64_t sub_1A273AB08()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (v0 - 1216);
  v4 = LODWORD(STACK[0x3AC]);
  v2[27] = v4--;
  v5 = ((((_DWORD)v3 + 1479172616) | 0x19101F3u) ^ 0x84E88121599B33ABLL)
     + (v4 ^ 0x7B177EDEFFDFAFB0)
     + ((2 * v4) & 0x1FFBF5F60);
  *(_BYTE *)(v2[81] + v5) = *(_BYTE *)(v2[82] + v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)((312 * (((v4 - v3) | (v3 - v4)) >= 0)) | v3 ^ 0x4C0))
                            - 8))();
}

uint64_t sub_1A273ABC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(_QWORD),int a24,int a25)
{
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  _QWORD *v32;
  uint64_t v33;

  *(_QWORD *)(v28 + 192) = v25;
  v30 = (v29 + v26 + 727) | 0xA4;
  v31 = v29 + v26 + 1798;
  v32 = *(_QWORD **)(v28 + 560);
  v33 = a23(*v32);
  *v32 = *(_QWORD *)(v28 + 648);
  **(_DWORD **)(v28 + 608) = *(_QWORD *)(v28 + 640);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27 + 8 * ((255 * (a25 != v30 - 1002)) ^ v31)) - 8))(v33);
}

uint64_t sub_1A273ABCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(_QWORD),int a24,int a25)
{
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  _QWORD *v32;
  uint64_t v33;

  *(_QWORD *)(v28 + 216) = v25;
  v30 = (v29 + v26 + 727) | 0xA4;
  v31 = v29 + v26 + 1798;
  v32 = *(_QWORD **)(v28 + 560);
  v33 = a23(*v32);
  *v32 = *(_QWORD *)(v28 + 648);
  **(_DWORD **)(v28 + 608) = *(_QWORD *)(v28 + 640);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27 + 8 * ((255 * (a25 != v30 - 1002)) ^ v31)) - 8))(v33);
}

uint64_t sub_1A273ABD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unsigned int a24,int a25)
{
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;

  return ((uint64_t (*)(uint64_t, _QWORD))(v28
                                                  - (v25 ^ (v27 + 527))
                                                  + *(_QWORD *)(v26
                                                              + 8
                                                              * ((1653
                                                                * (a25 != ((v25 + 1539013651) & 0xFDFFE3FB ^ (v27 + 1522)))) ^ v25))))(a1, a24);
}

uint64_t sub_1A273AC34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(void),unsigned int a24,int a25)
{
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  _QWORD *v29;
  uint64_t v30;

  v29 = *(_QWORD **)(v27 + 688);
  *v29 = 0;
  v29[1] = 0;
  v30 = a23();
  return (*(uint64_t (**)(uint64_t, _QWORD))(v26
                                                    + 8
                                                    * ((2886
                                                      * (a25 == (v25 ^ (v28 + 742))
                                                              + 1284061195
                                                              + ((v25 + 1073806971) | 0x19BA626B))) ^ v25)))(v30, a24);
}

uint64_t sub_1A273AC94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 712))(a1, a2, a3, 1505451528);
}

void sub_1A273ACCC()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 8) = v1;
}

uint64_t sub_1A273ACD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24)
{
  uint64_t v24;
  _QWORD *v25;
  int v26;
  int v27;
  uint64_t v28;

  v25[96] = v25[56];
  v28 = v25[54];
  v25[97] = v25[55];
  v25[98] = v28;
  LODWORD(STACK[0x418]) = STACK[0x2F0];
  LODWORD(STACK[0x41C]) = STACK[0x2F4];
  return ((uint64_t (*)(void))(*(_QWORD *)(v24 + 8 * ((914 * LOBYTE(STACK[0x2D3])) ^ (v27 + a24 - 107)))
                            - (a24 - v26 - 1517)
                            + 2))();
}

uint64_t sub_1A273AD2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t v48;
  _QWORD *v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;

  v52 = (a9 + 671) | 0x18u;
  v49[1] = *(_QWORD *)(v48 + 8 * a9) + v52 - 705;
  HIDWORD(a47) = 1;
  LODWORD(STACK[0x310]) = 1;
  v53 = v49[1];
  v54 = v49[94];
  v49[8] = v54;
  v55 = *(_DWORD *)(v54 + 12);
  v49[63] = v54;
  v49[64] = v53;
  v49[65] = v54 + 12;
  LODWORD(STACK[0x314]) = v55;
  v49[4] = v53;
  v49[9] = v54 + 12;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 + 8 * (int)(((v55 < 0xFFFFFFFB) * ((v52 - v51 - 588) ^ (v50 + 1657))) ^ v52)) - ((132 * (v52 ^ 0x2AC)) ^ 0x8CCLL)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_1A273B014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  _QWORD *v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;

  v24 = *(_DWORD *)(v22 - 200);
  v23 = *(_DWORD *)(v22 - 196);
  v25 = v20[106];
  v26 = v20[105];
  v20[108] = v20[104];
  v20[109] = v26;
  v20[110] = v25;
  *(_DWORD *)(v22 - 164) = v24;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 + 8 * (int)(((v23 == (_DWORD)a5) * (((v21 + a2 - 110) | 0x10) + 1404)) ^ (v21 + a2 - 94))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

void sub_1A273B06C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = (a1 ^ 0xFFFFFFFFFFFFFFEFLL) + *(_QWORD *)(v1 + 8 * a1);
  JUMPOUT(0x1A273ADD0);
}

uint64_t sub_1A273B090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  _QWORD *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;

  LODWORD(STACK[0x22C]) = *(_DWORD *)(v31 - 164);
  v28[31] = v28[110];
  v32 = v28[108];
  v28[33] = v28[109];
  v28[34] = v32;
  v28[114] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * (int)((((a2 - v29 - 509371223) & 0x1E5C5FFF ^ 0x9AC) * (HIDWORD(a27) == (_DWORD)a5)) ^ (v30 + a2 + 814))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1A273B100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void (*a15)(uint64_t), void (*a16)(uint64_t), uint64_t (*a17)(uint64_t), uint64_t a18, int *a19)
{
  uint64_t v19;
  unsigned int v20;
  _QWORD *v21;
  int v22;
  uint64_t v23;
  uint64_t *v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;

  v24 = (uint64_t *)v21[94];
  v21[36] = v24;
  v21[93] = 0;
  LODWORD(STACK[0x3E4]) = 0;
  a16(a18);
  v25 = *a19;
  v26 = *v24;
  v27 = *((_DWORD *)v24 + 3);
  v21[38] = (char *)v24 + 12;
  v28 = v21[29];
  v29 = v21[30];
  v30 = 932829133 * ((((2 * (v23 - 136)) | 0xFF3B373A) - (v23 - 136) + 6448227) ^ 0x5FD6C610);
  *(_DWORD *)(v23 - 116) = 1017140188 - v30 + v25 * (v20 ^ 0x6AE38957);
  v21[119] = v28;
  *(_DWORD *)(v23 - 128) = v22 - v30 + v27 - ((((v20 + 1155637602) & 0x3B1E5DD3) - 1064940728) & (2 * v27));
  *(_DWORD *)(v23 - 120) = (v20 + 781) ^ v30;
  v21[115] = v26;
  v21[118] = v29;
  a15(v23 - 136);
  LODWORD(v24) = *(_DWORD *)(v23 - 124);
  v31 = a17(a18);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((2638 * ((_DWORD)v24 == 1934675644)) ^ v20)))(v31);
}

uint64_t sub_1A273B230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t), unsigned int *a12, uint64_t (*a13)(_QWORD, uint64_t, uint64_t), uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v24 = *(_QWORD *)(v19 + 8 * v20);
  v25 = 2106769199 * (((~v22 | 0x30EC0CB9680149F6) + (v22 | 0xCF13F34697FEB609)) ^ 0x8F024B28F8029D3DLL);
  *(_DWORD *)(v23 - 128) = v20 - 822706943 - v25;
  *(_QWORD *)(v21 + 936) = a18;
  *(_QWORD *)(v21 + 920) = v25 + v24 - 8;
  a11(v23 - 136);
  v26 = a13(*a12, a10, a19);
  v27 = ((2 * v26) & 0xDCFDFFF6) + (v26 ^ 0xEE7EFFFB);
  v28 = *(_QWORD *)(v19 + 8 * ((int)v20 - 65));
  v29 = 2106769199 * (v22 ^ 0x4011B86E6FFC2B35);
  *(_DWORD *)(v23 - 128) = v20 - 822706943 - v29;
  *(_QWORD *)(v21 + 936) = a18;
  *(_QWORD *)(v21 + 920) = v29 + v28 - 8;
  v30 = ((uint64_t (*)(uint64_t))a11)(v23 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8
                                                      * ((964
                                                        * (v27 == (((_DWORD)v20 - 610695635) & 0x24667B9F) - 293667748)) ^ (v20 + 24)))
                                          - 12))(v30);
}

void sub_1A273B3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void (*a15)(uint64_t), void (*a16)(uint64_t), uint64_t a17, uint64_t a18, int *a19)
{
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;

  a16(a18);
  v23 = *a19;
  v24 = **(_QWORD **)(v20 + 288);
  v25 = **(_DWORD **)(v20 + 304);
  v26 = *(_QWORD *)(v20 + 240);
  v27 = 932829133 * ((v22 + 612956315 - 2 * ((v22 - 136) & 0x2488F923)) ^ 0x84C3A4AE);
  *(_QWORD *)(v20 + 952) = *(_QWORD *)(v20 + 232);
  *(_DWORD *)(v22 - 128) = v21 - v27 + v25 - (((23 * (v19 ^ 0x2A7)) ^ 0xC0864857) & (2 * v25));
  *(_DWORD *)(v22 - 120) = (v19 + 781) ^ v27;
  *(_DWORD *)(v22 - 116) = 1017140188 - v27 + 1793297355 * v23;
  *(_QWORD *)(v20 + 920) = v24;
  *(_QWORD *)(v20 + 944) = v26;
  a15(v22 - 136);
  JUMPOUT(0x1A273B488);
}

uint64_t sub_1A273B4DC@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((((v1 ^ 0x1ED) + 1492) ^ (v1 + 437)) * (a1 == 1666240185)) ^ v1))
                            - 12))();
}

void sub_1A273B534()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 760) = 0;
  JUMPOUT(0x1A273B584);
}

uint64_t sub_1A273B610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(uint64_t, uint64_t))
{
  uint64_t v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  v23 = *(_QWORD **)(v22 + 480);
  *v23 = 0;
  v23[1] = 0;
  *(_QWORD *)(v22 + 488) = v23 + 1;
  v24 = a20(4096, 2241923698);
  **(_QWORD **)(v22 + 480) = v24;
  return (*(uint64_t (**)(void))(v20 + 8 * (int)(((v24 == 0) * (((v21 - 128) ^ 0xFFFFF91D) + (v21 ^ 0x80))) ^ v21)))();
}

uint64_t sub_1A273B66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(_QWORD))
{
  int v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a23(*(_QWORD *)(v24 + 480));
  LODWORD(STACK[0x2F4]) = v23;
  LOBYTE(STACK[0x2D3]) = 0;
  **(_QWORD **)(v24 + 424) = 0;
  return (*(uint64_t (**)(uint64_t))(v24 + 472))(v25);
}

uint64_t sub_1A273B6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;

  *(_QWORD *)(v26 + 904) = 0;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 + 8 * (int)((LOBYTE(STACK[0x2D3]) * (103 * (a24 ^ (v27 + 1520)) + 1814)) ^ (v28 + a24 + 55))) - 8))(a1, a24, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1A273B73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;

  v26 = STACK[0x3E4];
  LODWORD(STACK[0x254]) = STACK[0x3E4];
  v27 = *(_QWORD *)(v23 + 760);
  *(_QWORD *)(v23 + 312) = v27;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 - (v21 ^ (v24 + 1222)) + *(_QWORD *)(v22 + 8 * ((2219 * (v26 > *(_DWORD *)(v27 + 8))) ^ v21)) + 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

void sub_1A273B784()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 8 * v0);
  v2[10] = v2[56];
  v2[6] = v3 + ((v0 - 67633718) & 0xFFFFEFC7) - 4227329739;
  v4 = v2[54];
  v2[12] = v2[55];
  v2[13] = v4;
  JUMPOUT(0x1A273B7D4);
}

uint64_t sub_1A273B8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  uint64_t v53;
  uint64_t v54;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 + 8 * (v52 ^ (3690 * ((v53 & 0xFFFFFFFF80000000) != 0)))) - ((v52 + 2143285400) & 0xD9FB6BFB) - (((v52 - 813) | 0x100u) ^ 0xFFFFFFFFA644992BLL)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_1A273B908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  int v25;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)(v27 + 640) = 2 * *(_QWORD *)(v27 + 632);
  return ((uint64_t (*)(void))(*(_QWORD *)(v26 + 8 * ((125 * (a25 == 2)) ^ v25)) - ((v25 + 463) ^ 0x701)))();
}

uint64_t sub_1A273B950()
{
  unint64_t v0;
  unint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 176) = v0;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v0 > v1) ^ (v2 + 39)) & 1) * (((v2 - 1186) | 0x602) ^ 0x61D)) ^ v2)))();
}

uint64_t sub_1A273B98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  uint64_t v53;
  int v54;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 + 8 * ((329 * LOBYTE(STACK[0x377])) ^ v52)) - ((v52 ^ (v54 + 774)) - v54 + 480) + 1995))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_1A273B9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(_QWORD, uint64_t),uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  int v25;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)(v27 + 648) = a20(*(_QWORD *)(v27 + 640), 2241923698);
  return ((uint64_t (*)(void))(*(_QWORD *)(v26 + 8 * ((15 * (a25 != ((2 * (v25 ^ 0x55E)) ^ 0x518))) ^ v25))
                            - (((v25 ^ 0x55Eu) + 104) ^ 0x2F9)))();
}

uint64_t sub_1A273BA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;
  int v53;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 + 8 * ((484 * (((a1 == 0) ^ v53) & 1)) ^ v53)) - ((v53 + 1178) ^ 0x787)))(a1, a24, a3, a4, 1718253555, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_1A273BA64@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = **(_QWORD **)(v2 + 560);
  *(_QWORD *)(v2 + 656) = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((39 * (v3 <= *(_QWORD *)(v2 + 648))) ^ a1)))();
}

uint64_t sub_1A273BC14@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  unint64_t v5;

  LODWORD(STACK[0x3BC]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((a1 - 800 - v4 - 1022) ^ (v3 + 1295)) * (v1 != 0)) ^ (a1 - 800)))
                            - ((a1 + 1572861040) & 0xFBFB67FB ^ v5)))();
}

void sub_1A273BC64()
{
  JUMPOUT(0x1A273BC6CLL);
}

uint64_t sub_1A273BD18()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  LODWORD(STACK[0x3AC]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((((v0 + 8985492) | 0x593243F8) ^ (v3 + 1039)) * (v1 != 0)) ^ v0))
                            + v4
                            - ((v0 + 1235828348) | 0x10122110u)))();
}

uint64_t sub_1A273BD70()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 672) = LODWORD(STACK[0x3AC]);
  return sub_1A273BD78();
}

uint64_t sub_1A273BD78()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 + 184) = 0;
  v6 = *(_QWORD *)(v2 + 672) - 1;
  **(_BYTE **)(v2 + 648) = **(_BYTE **)(v2 + 656);
  return ((uint64_t (*)(void))(v5
                            - (v3 + v4 + v0 + 1271 + 139)
                            + *(_QWORD *)(v1 + 8 * ((3444 * (v6 == 0)) ^ (v4 + v0 + 1271)))))();
}

void sub_1A273BE0C()
{
  JUMPOUT(0x1A273BDC8);
}

uint64_t sub_1A273BE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(_QWORD),int a24,int a25)
{
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  _QWORD *v32;
  uint64_t v33;

  *(_QWORD *)(v28 + 192) = v25;
  v30 = (v29 + v26 + 727) | 0xA4;
  v31 = v29 + v26 + 1798;
  v32 = *(_QWORD **)(v28 + 560);
  v33 = a23(*v32);
  *v32 = *(_QWORD *)(v28 + 648);
  **(_DWORD **)(v28 + 608) = *(_QWORD *)(v28 + 640);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27 + 8 * ((255 * (a25 != v30 - 1002)) ^ v31)) - 8))(v33);
}

void sub_1A273BE20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 184) = v0;
  JUMPOUT(0x1A273BE28);
}

uint64_t sub_1A273BE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;
  uint64_t v54;

  HIDWORD(a29) = 1718253555;
  v54 = *(_QWORD *)(v52 + 592);
  *(_QWORD *)v52 = *(_QWORD *)(v52 + 584);
  *(_QWORD *)(v52 + 24) = *(_QWORD *)(v52 + 576);
  HIDWORD(a48) = STACK[0x39C];
  LODWORD(a52) = 1718253555;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 600))(a1, a24, a3, a4, 1718253555, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           v54,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_1A273BED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53)
{
  int v53;
  uint64_t v54;
  uint64_t *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;

  LODWORD(STACK[0x33C]) = a49;
  v57 = v55[3];
  v55[67] = v57;
  v58 = *v55;
  v55[68] = *v55;
  v55[69] = a40;
  v55[4] = a40;
  v55[8] = v58;
  v55[9] = v57;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 + 8 * ((2672 * (a53 == (_DWORD)a5)) ^ (v56 + v53 + 588))) - ((v53 - 1392374846) & 0xF94292FF ^ 0x2B5)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1A273BF50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  _QWORD *v48;
  char v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  _DWORD *v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v51 = (uint64_t *)v48[68];
  v52 = *v51;
  v53 = (_DWORD *)v48[67];
  v54 = STACK[0x33C];
  v55 = v54 - 537762601 - ((2 * v54) & 0xBFE4C9AE);
  v56 = ((2 * *v53) & 0xFE762AFA) + (*v53 ^ 0xFF3B157D) + 12905091;
  *(_BYTE *)(*v51 + v56) = (v55 >> (v49 + ((a9 - 90) | 0x98) - 89)) ^ 0xDF;
  *(_BYTE *)(v52 + v56 + 1) = BYTE2(v55) ^ 0xF2;
  *(_BYTE *)(v52 + v56 + 2) = ((((unsigned __int16)(v54 + 25815 - ((2 * v54) & 0xC9AE)) >> 8) ^ 0x64)
                             - ((2 * (((unsigned __int16)(v54 + 25815 - ((2 * v54) & 0xC9AE)) >> 8) ^ 0x64)) & 0x96)
                             + 75) ^ 0x4B;
  *(_BYTE *)(v52 + v56 + 3) = (v54 - 41 - ((2 * v54) & 0xAE)) ^ 0xD7;
  *v53 += 4;
  v48[4] = v48[69];
  v48[8] = v51;
  v48[9] = v53;
  v58 = v48[8];
  v57 = v48[9];
  v59 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v48[4];
  v48[96] = v59;
  v48[97] = v58;
  v48[98] = v57;
  LODWORD(STACK[0x418]) = v54;
  LODWORD(STACK[0x41C]) = a5;
  v48[100] = v59;
  v48[101] = v58;
  v48[102] = v57;
  *(_DWORD *)(v50 - 232) = v54;
  *(_DWORD *)(v50 - 228) = a5;
  v48[104] = v59;
  v48[105] = v58;
  v48[106] = v57;
  *(_DWORD *)(v50 - 200) = v54;
  *(_DWORD *)(v50 - 196) = a5;
  v48[108] = v59;
  v48[109] = v58;
  v48[110] = v57;
  *(_DWORD *)(v50 - 164) = v54;
  HIDWORD(a28) = a5;
  return v59(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_1A273C094@<X0>(int a1@<W4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24)
{
  uint64_t v24;
  int v25;

  LODWORD(STACK[0x264]) = a24;
  return ((uint64_t (*)(void))(*(_QWORD *)(v24 + 8 * ((241 * (a24 == a1)) ^ (v25 + a2 + 1464)))
                            - (((v25 + a2 + 47) | 8u)
                             - 168)
                            - 12))();
}

uint64_t sub_1A273C0D8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = (unint64_t *)v2[95];
  v4 = *v3;
  v5 = v2[93];
  v2[46] = *v3;
  v2[47] = v5;
  v6 = LODWORD(STACK[0x3E4])
     - ((2 * LODWORD(STACK[0x3E4])) & ((4 * a1) ^ 0x54720850))
     - 0x5D906247D5C6FBD8;
  v2[40] = v3;
  v2[41] = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 ^ 0x8F1 ^ (483 * (v5 <= v4)))) - 4))();
}

uint64_t sub_1A273C17C()
{
  int v0;
  int v1;
  unsigned __int8 v2;
  uint64_t v3;

  LODWORD(STACK[0x26C]) = v1;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v2 ^ (v0 + 120) ^ 0x5B) & 1)
                                * (((v0 + 1074429816) | 0x12C0101A) ^ 0x52CA92BC)) ^ v0)))();
}

uint64_t sub_1A273C1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;

  v25 = (v22 + 762332453) & 0x7FC52DF7;
  v26 = LODWORD(STACK[0x26C]) - 1;
  v27 = ((v25 - 536876508) & 0x79BB73FF ^ v26 ^ 0x7B177EDEA664CC4BLL)
      + ((2 * (LODWORD(STACK[0x26C]) - 1)) & 0x1FFBF5F60)
      - 0x7B177EDEFFDFAFB0;
  v28 = *(unsigned __int8 *)(*(_QWORD *)(v24 + 376) + v27);
  *(_BYTE *)(*(_QWORD *)(v24 + 368) + v27) = v28;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8 * ((50 * (v26 == 0)) ^ v25)))(v28, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_1A273C270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  _BOOL4 v67;

  v64 = a9 | 0x1E8;
  v65 = v62[95];
  v66 = *(_QWORD *)(v61 + 8 * v60) - 8;
  v67 = v65 == 0;
  v62[18] = v66;
  v62[19] = v65;
  LODWORD(v65) = STACK[0x264];
  v62[21] = v66;
  LODWORD(STACK[0x204]) = v65;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 + 8 * ((26 * v67) ^ ((v64 ^ 8) + (int)v60))) - (((_DWORD)v60 + 2076144471) & 0xDDFBEFFB ^ (unint64_t)(v63 + 4))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

uint64_t sub_1A273C2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a67;
  int a68;
  uint64_t v68;
  int v69;
  _QWORD *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;

  LODWORD(STACK[0x3C0]) = a68;
  LODWORD(STACK[0x3C4]) = a67;
  v72 = v70[18];
  v71 = (uint64_t *)v70[19];
  v70[86] = v71;
  v70[89] = v72;
  v73 = *v71;
  v70[90] = v73;
  return ((uint64_t (*)(void))(*(_QWORD *)(v68 + 8 * ((1000 * (((v69 - 1) ^ (v73 == 0)) & 1)) ^ v69))
                            - 12))();
}

uint64_t sub_1A273C8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(_QWORD),int a24,int a25)
{
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a23(*(_QWORD *)(v27 + 720));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25
                                                      + 8 * ((2011 * ((((v26 + 170) ^ (a25 == 2)) & 1) == 0)) ^ v26))
                                          - ((v26 + 45) | 0x100u)
                                          + 777))(v28);
}

uint64_t sub_1A273C910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(void))
{
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);

  v24 = (_QWORD *)v23[86];
  *v24 = 0;
  v24[1] = 0;
  v25 = a23();
  v23[21] = v23[89];
  LODWORD(STACK[0x204]) = STACK[0x3C0];
  v26 = (uint64_t (*)(uint64_t))v23[21];
  v23[113] = 0;
  return v26(v25);
}

void fcexHpmxKluw(uint64_t a1, uint64_t a2, int a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;
  _QWORD v12[3];
  unsigned int v13;
  uint64_t *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _DWORD v22[2];
  _QWORD *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v8 = qword_1EE66EF50 ^ (unint64_t)&v21 ^ qword_1EE66EE78;
  qword_1EE66EF50 = 1448277253 * v8 - 0x1478FDDA114D0197;
  qword_1EE66EE78 = 1448277253 * (v8 ^ 0xBC43AA2F8C366115);
  v11 = *a4;
  v9 = (5 * ((qword_1EE66EE78 - (5 * v8 + 105)) ^ 0x15));
  v10 = off_1E47CDD30[((5 * ((qword_1EE66EE78 - (5 * v8 + 105)) ^ 0x15)) ^ byte_1A27BA8A0[byte_1A27BA6A0[v9] ^ 0x4D])
                    - 179];
  v12[0] = *((_QWORD *)v10 + 474) - 8;
  v12[1] = a1;
  v12[2] = a2;
  v13 = (a3 ^ 0xDFB3F35C) + 2088697512 + ((2 * a3) & 0xBF67E6B8);
  v14 = &v11;
  v15 = 5;
  v16 = a5;
  v17 = 0x5AD9B3EEF088B546;
  v18 = 0x532A2ADD6A6B882FLL;
  v19 = 0x1DCB1A4F51323291;
  v20 = 0xD2A736C40E76D58;
  v22[1] = -71465128
         - 1013388011
         * ((2 * ((v22 ^ 0x2D927253) & 0x7E10D3E1) - (v22 ^ 0x2D927253) - 2115032038) ^ 0x7DBF6C51);
  v23 = v12;
  ((void (*)(_DWORD *))((char *)off_1E47CDD30[((5
                                                                          * ((qword_1EE66EE78 - (5 * v8 + 105)) ^ 0x15)) ^ byte_1A27BA3A0[byte_1A27BA1A0[v9] ^ 0xEE])
                                                       - 149]
                                 - 12))(v22);
  *a4 = v11;
  __asm { BR              X9 }
}

uint64_t sub_1A273CBD4@<X0>(int a1@<W8>)
{
  _DWORD *v1;

  *v1 = 1;
  return (a1 - 1718253555);
}

void sub_1A273CC18(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1A273CC9C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t result;
  _QWORD v10[2];
  char v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  unsigned int v16;

  v3 = *(_QWORD *)(v2 + 56);
  v4 = *(_QWORD *)(v2 + 40);
  v5 = *(_DWORD *)v2 + v1;
  v6 = *(_QWORD *)(v2 + 8);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = 2106769199
     * (((v10 | 0x143A3528) - v10 + (v10 & 0xEBC5CAD0)) ^ 0x7BC61E1D);
  v11 = 47 * (((v10 | 0x28) - v10 + (v10 & 0xD0)) ^ 0x1D) + 95;
  v14 = v7;
  v10[0] = v6;
  v10[1] = v3;
  v16 = 1589475069 - v8 + (v5 ^ 0xB9C7F9DB) + ((2 * v5) & 0x738FF3B6);
  v13 = a1 - v8 + 80900690;
  v12 = v4;
  result = ((uint64_t (*)(_QWORD *))((char *)off_1E47CDD30[a1 ^ 0xFB2D972C] - 4))(v10);
  *(_DWORD *)(v2 + 48) = v15 - 1718253555;
  return result;
}

void sub_1A273CDD0()
{
  uint64_t v0;

  v0 = **(_QWORD **)(MEMORY[0x1E0C80A78]() + 8);
  __asm { BR              X9 }
}

uint64_t sub_1A273CFC8()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _BOOL4 v8;

  v6 = v0 + v1;
  *(_QWORD *)(v2 + 3712) = &STACK[0x278F89334A281864];
  *(_QWORD *)(v2 + 3720) = &STACK[0x1EFC1F4B9064304E];
  *(_DWORD *)(v5 - 136) = v0
                        + v1
                        + 1756268191
                        * ((((v5 - 136) | 0xA918D1FC) - (v5 - 136) + ((v5 - 136) & 0x56E72E00)) ^ 0x248A5F3D)
                        + 2173;
  v7 = sub_1A275B1A8((_DWORD *)(v5 - 136));
  v8 = *(_DWORD *)(v5 - 132) != 665312139;
  LODWORD(STACK[0xA0C]) = v3;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * ((v8 | (8 * v8)) ^ (v6 + 1059))) - 4))(v7);
}

uint64_t sub_1A273D088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t (*a32)(uint64_t, uint64_t),uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a66;
  int a68;
  int v68;
  uint64_t v69;
  _QWORD *v70;
  int v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  int v75;
  unsigned int v76;
  uint64_t v77;
  int v78;
  int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unint64_t v87;
  BOOL v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  v74 = (v68 + 92) | 1;
  v75 = (v74 + 97) | 0x219;
  a66 = 0;
  a68 = v71;
  LOBYTE(STACK[0x10C3]) = a17 == 0;
  if (a17)
    v76 = 3;
  else
    v76 = 2;
  v77 = *(_QWORD *)(v72 + 8 * v74);
  v78 = (a19 ^ 0x23E869F8) & (2 * (a19 & 0xA3CD0DFC)) ^ a19 & 0xA3CD0DFC;
  v79 = ((2 * ((v75 + 628780477) ^ a19)) ^ 0xD6EF9C8) & ((v75 + 628780477) ^ a19) ^ (2 * ((v75 + 628780477) ^ a19)) & 0x86B77CE4;
  v80 = v79 ^ 0x82910424;
  v81 = (v79 ^ 0x42478C0) & (4 * v78) ^ v78;
  v82 = ((4 * v80) ^ 0x1ADDF390) & v80 ^ (4 * v80) & 0x86B77CE4;
  v83 = (v82 ^ 0x2957080) & (16 * v81) ^ v81;
  v84 = ((16 * (v82 ^ 0x84220C64)) ^ 0x6B77CE40) & (v82 ^ 0x84220C64) ^ (16 * (v82 ^ 0x84220C64)) & 0x86B77CE0;
  v85 = v83 ^ 0x86B77CE4 ^ (v84 ^ 0x2374C00) & (v83 << 8);
  v86 = a19 ^ (2
             * ((v85 << 16) & 0x6B70000 ^ v85 ^ ((v85 << 16) ^ 0x7CE40000) & (((v84 ^ 0x848030A4) << 8) & 0x6B70000 ^ 0x830000 ^ (((v84 ^ 0x848030A4) << 8) ^ 0x377C0000) & (v84 ^ 0x848030A4))));
  if (v69 != 0xD2A736C40E76D58)
    v76 = 5;
  LODWORD(STACK[0x10C4]) = v76;
  v87 = a19 | ((unint64_t)(a19 < 0x5C32F204) << 32);
  v70[467] = v87 + 0x344F8E9328B6100FLL;
  v70[468] = v87 + 0x34378E06A7F00CEELL;
  LOBYTE(STACK[0x10DC]) = HIBYTE(v86) ^ 0xA7;
  LOBYTE(STACK[0x10DD]) = BYTE2(v86) ^ 0xEB;
  LOBYTE(STACK[0x10DE]) = ((BYTE1(v86) ^ 0xF4) - ((2 * (BYTE1(v86) ^ 0xF4)) & 0x96) + 75) ^ 0x4B;
  LOBYTE(STACK[0x10DF]) = v86 ^ 0x34;
  LODWORD(STACK[0x10E0]) = a19 - 1546842628;
  v88 = v69 == 0xD2A736C40E76D58 || a11 == 0x1DCB1A4F51323291;
  LOBYTE(STACK[0x10E7]) = v76 > 2;
  v70[471] = a11 - 0x1DCB1A4F51323291;
  v70[472] = v69 - 0xD2A736C40E76D58;
  LOBYTE(STACK[0x10FF]) = v88;
  LODWORD(STACK[0x1100]) = a19 - 1546842624;
  LODWORD(STACK[0x1104]) = a18;
  v70[259] = v77 - 8;
  v70[263] = 0;
  v70[271] = &a66;
  v89 = v70[270];
  v73[31] = &a66;
  v73[32] = v89;
  LODWORD(STACK[0x17DC]) = STACK[0xA9C];
  v90 = v70[267];
  v73[34] = v70[268];
  v73[35] = v90;
  v73[36] = v70[266];
  LODWORD(STACK[0x17FC]) = STACK[0xA7C];
  LODWORD(STACK[0x1800]) = STACK[0xA78];
  LODWORD(STACK[0x1804]) = STACK[0xA74];
  v73[39] = v70[263];
  LODWORD(STACK[0x1814]) = STACK[0xA64];
  v91 = v70[260];
  v73[41] = v70[261];
  v73[42] = v91;
  v92 = v70[259];
  LODWORD(STACK[0x182C]) = STACK[0xA44];
  v73[44] = v70[257];
  LODWORD(STACK[0x183C]) = STACK[0xA34];
  v93 = v70[254];
  v73[46] = v70[255];
  v73[47] = v93;
  v94 = v70[252];
  v73[48] = v70[253];
  v73[49] = v94;
  v73[50] = v92;
  v95 = a32(16, 2241923698);
  v73[51] = v95;
  v70[272] = 0;
  LOBYTE(STACK[0xABB]) = 0;
  LODWORD(STACK[0xABC]) = 1718210903;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 + 8 * (((v95 != 0) * ((v75 ^ 0xEF) + 1849)) ^ v75)) - 8))(v95, v96, v97, v98, v99, v100, v101, v102, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_1A274000C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t (*a32)(uint64_t, uint64_t))
{
  int v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v35 = *(_QWORD **)(v34 + 408);
  *v35 = 0;
  v35[1] = 0;
  *(_QWORD *)(v34 + 416) = v35 + 1;
  v36 = a32(4096, 2241923698);
  **(_QWORD **)(v34 + 408) = v36;
  return ((uint64_t (*)(void))(*(_QWORD *)(v33 + 8 * (v32 ^ (2 * (v36 != 0))))
                            - ((v32 - 71466076) ^ 0xFBBD8754)))();
}

uint64_t sub_1A2740070()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 + 408);
  **(_DWORD **)(v3 + 416) = v0;
  *(_QWORD *)(v1 + 2176) = v4;
  LOBYTE(STACK[0xABB]) = 1;
  LODWORD(STACK[0xABC]) = v2;
  LODWORD(STACK[0x187C]) = STACK[0xABC];
  *(_BYTE *)(v3 + 435) = STACK[0xABB];
  **(_QWORD **)(v3 + 248) = *(_QWORD *)(v1 + 2176);
  return (*(uint64_t (**)(void))(v3 + 400))();
}

uint64_t sub_1A27400C8()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v4 = *(_QWORD *)(v3 + 384);
  v1[121] = *(_QWORD *)(v3 + 392);
  v1[122] = v4;
  v5 = *(_QWORD *)(v3 + 368);
  v1[123] = *(_QWORD *)(v3 + 376);
  v1[124] = v5;
  LODWORD(STACK[0x61C]) = STACK[0x183C];
  v1[126] = *(_QWORD *)(v3 + 352);
  LODWORD(STACK[0x62C]) = STACK[0x182C];
  v6 = *(_QWORD *)(v3 + 328);
  v1[128] = *(_QWORD *)(v3 + 336);
  v1[129] = v6;
  LODWORD(STACK[0x644]) = STACK[0x1814];
  v1[131] = *(_QWORD *)(v3 + 312);
  LODWORD(STACK[0x654]) = STACK[0x1804];
  LODWORD(STACK[0x658]) = STACK[0x1800];
  LODWORD(STACK[0x65C]) = STACK[0x17FC];
  v1[134] = *(_QWORD *)(v3 + 288);
  v7 = *(_QWORD *)(v3 + 272);
  v1[135] = *(_QWORD *)(v3 + 280);
  v1[136] = v7;
  LODWORD(STACK[0x67C]) = STACK[0x17DC];
  v1[138] = *(_QWORD *)(v3 + 256);
  v8 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1240 * *(unsigned __int8 *)(v3 + 435)) ^ (v0 + 71465406)))
                         - ((v0 + 71465971) ^ 0x343));
  LODWORD(STACK[0x68C]) = STACK[0x187C];
  return v8();
}

uint64_t sub_1A274019C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,unsigned int a57,uint64_t a58)
{
  _QWORD *v58;
  int v59;
  uint64_t v60;
  _QWORD *v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;

  LODWORD(STACK[0x140C]) = a57;
  v58[572] = a58;
  v62 = a57 > *(_DWORD *)(a58 + 8);
  v63 = v61[48];
  v58[103] = v61[49];
  v58[104] = v63;
  v64 = v61[46];
  v58[105] = v61[47];
  v58[106] = v64;
  LODWORD(STACK[0x58C]) = STACK[0x183C];
  v58[108] = v61[44];
  v65 = v61[41];
  v58[109] = v61[42];
  v58[110] = v65;
  LODWORD(STACK[0x5AC]) = STACK[0x1814];
  v58[112] = v61[39];
  LODWORD(STACK[0x5BC]) = STACK[0x1804];
  LODWORD(STACK[0x5C0]) = STACK[0x1800];
  LODWORD(STACK[0x5C4]) = STACK[0x17FC];
  v58[115] = v61[36];
  v66 = v61[34];
  v58[116] = v61[35];
  v67 = !v62;
  v58[117] = v66;
  LODWORD(STACK[0x5E4]) = STACK[0x17DC];
  v58[119] = v61[32];
  LODWORD(STACK[0x5F4]) = v59;
  return (*(uint64_t (**)(void))(v60 + 8 * (int)((v67 * ((((a1 - 71445357) & 0xFFFFAF79) + 71465451) ^ 0x15A)) ^ a1)))();
}

void sub_1A2740278()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v2 + 8 * v0);
  v1[328] = v3[49];
  v1[329] = v4;
  v5 = v3[46];
  v1[330] = v3[47];
  v1[331] = v5;
  LODWORD(STACK[0xC94]) = STACK[0x183C];
  v1[333] = v3[44];
  LODWORD(STACK[0xCA4]) = STACK[0x182C];
  v6 = v3[41];
  v1[335] = v3[42];
  v1[336] = v6;
  LODWORD(STACK[0xCBC]) = STACK[0x1814];
  v1[338] = v3[39];
  LODWORD(STACK[0xCCC]) = STACK[0x1804];
  LODWORD(STACK[0xCD0]) = STACK[0x1800];
  LODWORD(STACK[0xCD4]) = STACK[0x17FC];
  v1[341] = v3[32];
  LODWORD(STACK[0xCE4]) = STACK[0x140C];
  JUMPOUT(0x1A27402FCLL);
}

uint64_t sub_1A2740438()
{
  unint64_t v0;
  unint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (1134 * (v1 > v0)))) - (((v2 + 694) | 0x100u) ^ 0x782)))();
}

uint64_t sub_1A2740468()
{
  unint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((148 * (v0 >> 31 == 0)) ^ (v1 + 391))) - 12))();
}

uint64_t sub_1A27404A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v23;

  v2[344] = v1;
  v3[109] = v0;
  v2[364] = v3[104];
  v2[365] = v3[105];
  v2[366] = v3[103];
  v2[367] = v3[102];
  LODWORD(STACK[0xDB4]) = STACK[0x19FC];
  v2[369] = v3[100];
  LODWORD(STACK[0xDC4]) = STACK[0x19EC];
  v2[371] = v3[98];
  v2[372] = v3[97];
  LODWORD(STACK[0xDDC]) = STACK[0x19D4];
  v2[374] = v3[95];
  LODWORD(STACK[0xDEC]) = STACK[0x19C4];
  LODWORD(STACK[0xDF0]) = STACK[0x19C0];
  LODWORD(STACK[0xDF4]) = STACK[0x19BC];
  v2[377] = v3[91];
  v2[378] = v3[106];
  v2[379] = v3[109];
  LODWORD(STACK[0xE14]) = 1718210905;
  v2[381] = v3[92];
  LODWORD(STACK[0xE24]) = 1718210905;
  v4 = STACK[0xE24];
  v5 = v2[381];
  v6 = STACK[0xE14];
  v7 = v2[379];
  v8 = v2[378];
  v9 = v2[377];
  v10 = STACK[0xDF4];
  v11 = STACK[0xDF0];
  v12 = STACK[0xDEC];
  v13 = v2[374];
  v14 = STACK[0xDDC];
  v15 = v2[372];
  v16 = v2[371];
  v17 = STACK[0xDC4];
  v18 = v2[369];
  v19 = STACK[0xDB4];
  v20 = v2[367];
  v21 = v2[366];
  v22 = (uint64_t (*)(void))v2[365];
  v23 = v2[364];
  v2[66] = v23;
  v2[67] = v22;
  v2[68] = v21;
  v2[69] = v20;
  LODWORD(STACK[0x464]) = v19;
  v2[71] = v18;
  LODWORD(STACK[0x474]) = v17;
  v2[73] = v16;
  v2[74] = v15;
  LODWORD(STACK[0x48C]) = v14;
  v2[76] = v13;
  LODWORD(STACK[0x498]) = v11;
  LODWORD(STACK[0x49C]) = v10;
  v2[78] = v9;
  v2[79] = v8;
  v2[80] = v7;
  LODWORD(STACK[0x4BC]) = v6;
  v2[82] = v5;
  LODWORD(STACK[0x4CC]) = v4;
  v2[103] = v23;
  v2[104] = v22;
  v2[105] = v21;
  v2[106] = v20;
  LODWORD(STACK[0x58C]) = v19;
  v2[108] = v18;
  v2[109] = v16;
  v2[110] = v15;
  LODWORD(STACK[0x5AC]) = v14;
  v2[112] = v13;
  LODWORD(STACK[0x5BC]) = v12;
  LODWORD(STACK[0x5C0]) = v11;
  LODWORD(STACK[0x5C4]) = v10;
  v2[115] = v9;
  v2[116] = v8;
  v2[117] = v7;
  LODWORD(STACK[0x5E4]) = v6;
  v2[119] = v5;
  LODWORD(STACK[0x5F4]) = v4;
  v2[290] = v23;
  v2[291] = v22;
  v2[292] = v21;
  v2[293] = v20;
  LODWORD(STACK[0xB64]) = v19;
  v2[295] = v18;
  LODWORD(STACK[0xB74]) = v17;
  v2[297] = v16;
  v2[298] = v15;
  LODWORD(STACK[0xB8C]) = v14;
  v2[300] = v13;
  LODWORD(STACK[0xB9C]) = v12;
  LODWORD(STACK[0xBA0]) = v11;
  LODWORD(STACK[0xBA4]) = v10;
  v2[303] = v9;
  v2[304] = v8;
  v2[305] = v7;
  LODWORD(STACK[0xBC4]) = v6;
  v2[307] = v5;
  LODWORD(STACK[0xBD4]) = v4;
  return v22();
}

uint64_t sub_1A2740554@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v2[344] = v1;
  *(_QWORD *)(v4 + 872) = v1;
  v2[364] = *(_QWORD *)(v4 + 832);
  v2[365] = *(_QWORD *)(v4 + 840);
  v2[366] = *(_QWORD *)(v4 + 824);
  v2[367] = *(_QWORD *)(v4 + 816);
  LODWORD(STACK[0xDB4]) = STACK[0x19FC];
  v2[369] = *(_QWORD *)(v4 + 800);
  LODWORD(STACK[0xDC4]) = STACK[0x19EC];
  v2[371] = *(_QWORD *)(v4 + 784);
  v2[372] = *(_QWORD *)(v4 + 776);
  LODWORD(STACK[0xDDC]) = STACK[0x19D4];
  v2[374] = *(_QWORD *)(v4 + 760);
  LODWORD(STACK[0xDEC]) = STACK[0x19C4];
  LODWORD(STACK[0xDF0]) = STACK[0x19C0];
  LODWORD(STACK[0xDF4]) = STACK[0x19BC];
  v2[377] = *(_QWORD *)(v4 + 728);
  v2[378] = *(_QWORD *)(v4 + 848);
  v2[379] = *(_QWORD *)(v4 + 872);
  LODWORD(STACK[0xE14]) = 1718210905;
  v2[381] = *(_QWORD *)(v4 + 736);
  v5 = (uint64_t (*)(void))(4223502164
                         - ((a1 - 2137424694) | 0x7B240300u)
                         + *(_QWORD *)(v3 + 8 * ((*(unsigned __int8 *)(v4 + 871) * (547 * (a1 ^ 0x78C) + 2730)) ^ a1)));
  LODWORD(STACK[0xE24]) = 1718210905;
  return v5();
}

uint64_t sub_1A274064C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t (*a32)(_QWORD, uint64_t))
{
  int v32;
  _QWORD *v33;
  int v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t (*v38)(void);

  v37 = a32(v36[109], 2241923698);
  v36[110] = v37;
  v33[345] = v36[104];
  v33[346] = v36[105];
  v33[347] = v36[103];
  v33[348] = v36[102];
  LODWORD(STACK[0xD1C]) = STACK[0x19FC];
  v33[350] = v36[100];
  LODWORD(STACK[0xD2C]) = STACK[0x19EC];
  v33[352] = v36[98];
  v33[353] = v36[97];
  LODWORD(STACK[0xD44]) = STACK[0x19D4];
  v33[355] = v36[95];
  LODWORD(STACK[0xD54]) = STACK[0x19C4];
  LODWORD(STACK[0xD58]) = STACK[0x19C0];
  LODWORD(STACK[0xD5C]) = STACK[0x19BC];
  v33[358] = v36[91];
  v33[359] = v36[106];
  v33[360] = v36[109];
  LODWORD(STACK[0xD7C]) = v34;
  v33[362] = 0;
  v38 = (uint64_t (*)(void))(*(_QWORD *)(v35 + 8 * ((742 * (v37 != 0)) ^ v32)) - 8);
  LODWORD(STACK[0xD8C]) = 1718210903;
  return v38();
}

void sub_1A2740724()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v5 = 108 * (v0 ^ 0x444);
  v6 = **(_QWORD **)(v4 + 728);
  v7 = (**(unsigned int **)(v4 + 848) ^ 0x7FA39F7BD8FBC54ELL)
     - 0x2202017290404042
     + ((2 * **(unsigned int **)(v4 + 848)) & 0x1B1F78A9CLL);
  v8 = (v7 ^ 0xA9CFB77636017AE7) & (2 * (v7 & ((v5 + 244) ^ 0x2B7447B38))) ^ v7 & ((v5 + 244) ^ 0x2B7447B38);
  v9 = ((2 * (v7 ^ 0xA9CFB7733C816BAFLL)) ^ 0x1422290B178A22B6) & (v7 ^ 0xA9CFB7733C816BAFLL) ^ (2
                                                                                                 * (v7 ^ 0xA9CFB7733C816BAFLL)) & 0xB91D6858BC5115ALL;
  v10 = (v9 ^ 0x890528103440018) & (4 * v8) ^ v8;
  v1[439] = *(_QWORD *)(v4 + 832);
  v1[440] = *(_QWORD *)(v4 + 840);
  v11 = ((4 * (v9 ^ 0x890528488451149)) ^ 0x2E475A162F14456CLL) & (v9 ^ 0x890528488451149) ^ (4
                                                                                                * (v9 ^ 0x890528488451149)) & 0xB91D6858BC51158;
  v1[441] = *(_QWORD *)(v4 + 824);
  v1[442] = *(_QWORD *)(v4 + 816);
  v12 = (v11 ^ 0xA0152040B040150) & (16 * v10) ^ v10;
  LODWORD(STACK[0x100C]) = STACK[0x19FC];
  v1[444] = *(_QWORD *)(v4 + 800);
  LODWORD(STACK[0x101C]) = STACK[0x19EC];
  v13 = *(_QWORD *)(v3 + 8 * v5);
  v14 = ((16 * (v11 ^ 0x190848180C11013)) ^ 0xB91D6858BC5115B0) & (v11 ^ 0x190848180C11013) ^ (16 * (v11 ^ 0x190848180C11013)) & 0xB91D6858BC51150;
  v1[446] = *(_QWORD *)(v4 + 784);
  v1[447] = *(_QWORD *)(v4 + 776);
  v1[448] = v13 - 8;
  LODWORD(STACK[0x103C]) = STACK[0x19D4];
  v1[450] = *(_QWORD *)(v4 + 760);
  v15 = (((v14 ^ 0x28096850384004BLL) << 8) ^ 0x91D6858BC5115B00) & (v14 ^ 0x28096850384004BLL) ^ ((v14 ^ 0x28096850384004BLL) << 8) & 0xB91D6858BC51100;
  LODWORD(STACK[0x104C]) = STACK[0x19C4];
  LODWORD(STACK[0x1050]) = STACK[0x19C0];
  LODWORD(STACK[0x1054]) = STACK[0x19BC];
  v1[453] = *(_QWORD *)(v4 + 728);
  v1[454] = *(_QWORD *)(v4 + 848);
  v1[455] = *(_QWORD *)(v4 + 872);
  LODWORD(STACK[0x1074]) = v2;
  v16 = *(_QWORD *)(v4 + 880);
  v1[457] = v16;
  v1[458] = v16;
  v1[459] = 0x10067F75D0A830F1;
  v1[460] = v6;
  v1[461] = v7 ^ (2
                * (v15 & 0x285014100000000 ^ (v14 ^ 0x911400088411100) & (v12 << 8) ^ v12 ^ (v15 ^ 0x190848181010000) & (((v14 ^ 0x911400088411100) & (v12 << 8) ^ v12) << 16))) ^ 0x131FC4C9D7D7EDCLL;
  JUMPOUT(0x1A2740C48);
}

uint64_t sub_1A2740A38()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x141C]) = STACK[0x5F4];
  v1[574] = v1[119];
  LODWORD(STACK[0x142C]) = STACK[0x5E4];
  v1[576] = v1[117];
  v1[577] = v1[116];
  v1[578] = v1[115];
  LODWORD(STACK[0x144C]) = STACK[0x5C4];
  LODWORD(STACK[0x1450]) = STACK[0x5C0];
  LODWORD(STACK[0x1454]) = STACK[0x5BC];
  v1[581] = v1[112];
  LODWORD(STACK[0x1464]) = STACK[0x5AC];
  v1[583] = v1[110];
  v1[584] = v1[109];
  v1[585] = v1[108];
  LODWORD(STACK[0x1484]) = STACK[0x58C];
  v1[587] = v1[106];
  v1[588] = v1[105];
  v1[589] = v1[104];
  v1[590] = v1[103];
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((LODWORD(STACK[0x141C]) == v2) * (((v0 + 71465271) ^ 0x199) - 258)) ^ (v0 + 71466228)))
                            - (((v0 + 71465271) | 0x50u) ^ 0xD7)))();
}

void sub_1A2740B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  unsigned int a64;
  uint64_t *a65;
  uint64_t v65;
  _QWORD *v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v69 = v65 ^ 0x113;
  v70 = *a65;
  v71 = *(_QWORD *)(v68 + 8 * v65);
  v66[439] = v66[590];
  v66[440] = v66[589];
  v66[441] = v66[588];
  v66[442] = v66[587];
  LODWORD(STACK[0x100C]) = STACK[0x1484];
  v66[444] = v66[585];
  LODWORD(STACK[0x101C]) = v67;
  v66[446] = v66[584];
  v66[447] = v66[583];
  v66[448] = v71;
  LODWORD(STACK[0x103C]) = STACK[0x1464];
  v66[450] = v66[581];
  LODWORD(STACK[0x104C]) = STACK[0x1454];
  LODWORD(STACK[0x1050]) = STACK[0x1450];
  LODWORD(STACK[0x1054]) = STACK[0x144C];
  v66[453] = v66[578];
  v66[454] = v66[577];
  v66[455] = v66[576];
  LODWORD(STACK[0x1074]) = STACK[0x142C];
  v66[457] = v66[574];
  v66[458] = v70;
  v66[459] = 0x10067F75D0A830F1;
  v66[460] = a62;
  v66[461] = a64 - 0x5D906247D5C6FBD8 + ~(unint64_t)((2 * a64) & 0x54720850) + v69 - 459;
  JUMPOUT(0x1A2740C30);
}

uint64_t sub_1A2740D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  uint64_t v63;

  LODWORD(STACK[0x1BBC]) = (((v62 + 1224) | 4) + 708378460) ^ LODWORD(STACK[0x1B00]);
  return (*(uint64_t (**)(void))(v63 + 8 * (v62 ^ 0x707 ^ (141 * (a62 == 3)))))();
}

uint64_t sub_1A2740DDC()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((v0 ^ (v1 + 97)) & 1)
                                          * (((v1 - 1724087232) | 0x62810318) ^ (v3 - 61))) ^ (v1 + 610)))
                            - 8))();
}

uint64_t sub_1A2740E24@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55)
{
  uint64_t v55;

  return (*(uint64_t (**)(void))(v55
                              + 8
                              * (int)(((((a55 == 2) ^ (a1 - 1)) & 1)
                                     * (((a1 + 767070979) & 0xD2476E77) - 1565)) ^ a1)))();
}

uint64_t sub_1A2740E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  uint64_t v63;

  return ((uint64_t (*)(void))(*(_QWORD *)(v63 + 8 * ((28 * (a62 == 1)) ^ v62))
                            - (v62 ^ 0x425u)
                            - ((v62 - 1102) ^ 0xFFFFFFFFFFFFFC53)))();
}

uint64_t sub_1A2740EA4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (366 * (v0 ^ 1)))) - ((v1 + 570141467) & 0xDE0456F6 ^ 0x47CLL)))();
}

uint64_t sub_1A2740EF0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((a1 - 1194) | 0x240) ^ (366 * (v1 ^ 1))))
                            - (((((a1 - 1194) | 0x240) + 696320686) | 0xD23C8248)
                             + 71466268)
                            + 1132))();
}

uint64_t sub_1A2740F48@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  uint64_t (*v69)(void);

  v60 = *(_QWORD *)(v59 + 8 * v57);
  v58[405] = a57;
  v58[406] = v58[574];
  v61 = ((((_DWORD)v57 + 858621178) | 0xC8900148) ^ 0xFFFFFFFF044278A0) + v60;
  v62 = STACK[0x142C];
  LODWORD(STACK[0xEEC]) = STACK[0x142C];
  v58[408] = v58[576];
  v58[409] = v58[577];
  v58[410] = v58[578];
  v63 = STACK[0x144C];
  LODWORD(STACK[0xF08]) = STACK[0x144C];
  v64 = STACK[0x1450];
  LODWORD(STACK[0xF0C]) = STACK[0x1450];
  v65 = STACK[0x1454];
  LODWORD(STACK[0xF10]) = STACK[0x1454];
  v66 = STACK[0x1464];
  LODWORD(STACK[0xF14]) = STACK[0x1464];
  v58[413] = v58[583];
  v58[414] = v58[584];
  v67 = STACK[0x141C];
  LODWORD(STACK[0xF2C]) = STACK[0x141C];
  v58[416] = v58[585];
  v68 = STACK[0x1484];
  LODWORD(STACK[0xF3C]) = STACK[0x1484];
  v58[418] = v58[587];
  v58[419] = v58[588];
  v58[420] = v58[589];
  v58[421] = v58[590];
  v58[404] = v61;
  v58[422] = v61;
  v58[423] = v58[574];
  LODWORD(STACK[0xF74]) = v62;
  v58[425] = v58[576];
  v58[426] = v58[577];
  v58[427] = v58[578];
  LODWORD(STACK[0xF90]) = v63;
  LODWORD(STACK[0xF94]) = v64;
  LODWORD(STACK[0xF98]) = v65;
  LODWORD(STACK[0xF9C]) = v66;
  v58[430] = v58[583];
  v58[431] = v58[584];
  LODWORD(STACK[0xFB4]) = v67;
  v58[433] = v58[585];
  LODWORD(STACK[0xFC4]) = v68;
  v58[435] = v58[587];
  v58[436] = v58[588];
  v58[437] = v58[589];
  v69 = (uint64_t (*)(void))(*(_QWORD *)(v59 + 8 * (int)((((v57 + 779) | a1) + 477) ^ v57 ^ (4012 * (a57 == 0)))) - 8);
  v58[438] = v58[590];
  return v69();
}

uint64_t sub_1A27410DC@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v1 ^ 1) * ((a1 ^ 0x1E7) + 727)) ^ a1)) - 8))();
}

uint64_t sub_1A2741108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  uint64_t v63;
  _QWORD *v64;

  v64[158] = v64[136] + 0x70FD8A2CC383D310;
  v64[159] = LODWORD(STACK[0x1BBC]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v63 + 8 * (((a62 == 3) * (((179 * (v62 ^ 0x470)) ^ 0x692) - 874)) ^ v62))
                            - 8))();
}

uint64_t sub_1A2741168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 4040) = 0;
  v8 = v6[159] - 1;
  *(_BYTE *)(v6[131] + a3 + v6[158]) = *(_BYTE *)(v6[130] + a3 + a2);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * (((v8 == 0) * (v3 ^ (v7 - 223) ^ (v7 + 219))) ^ v3))
                                          - 8))(3618109438);
}

void sub_1A27411DC()
{
  JUMPOUT(0x1A2741198);
}

uint64_t sub_1A27411E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  uint64_t v63;

  return ((uint64_t (*)(void))(*(_QWORD *)(v63
                                        + 8
                                        * (((a62 == ((v62 - 506) ^ 0x266)) * ((v62 - 278039689) & 0x10928BEF ^ 0x3E9)) ^ v62))
                            - 8))();
}

uint64_t sub_1A2741230@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  *(_QWORD *)(v3 + 4288) = 0;
  v6 = v5[159] - 1;
  *(_BYTE *)(v5[130] + a2 + v5[158]) = *(_BYTE *)(v5[127] + a2 + a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((4 * (v6 == 0)) | (8 * (v6 == 0))) ^ a3)) - 8))();
}

void sub_1A27412A4()
{
  JUMPOUT(0x1A2741264);
}

uint64_t sub_1A27412AC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55)
{
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;

  *(_QWORD *)(v56 + 4040) = v55;
  return ((uint64_t (*)(void))(*(_QWORD *)(v57 + 8 * ((218 * (a55 == 3)) ^ (a1 + 71467033)))
                            - (a1 - v58 - 227)
                            - 2))();
}

uint64_t sub_1A27412B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  uint64_t v63;

  return (*(uint64_t (**)(void))(v63 + 8 * (int)(((((v62 - 71332618) & 0xFFFDF7FD) + 71465145) * (a62 == 1)) | v62)))();
}

uint64_t sub_1A2741300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 4264) = 0;
  v7 = v6[159] - 1;
  *(_BYTE *)(v6[130] + a3 + v6[158]) = *(_BYTE *)(v6[127] + a3 + a2);
  return (*(uint64_t (**)(void))(v5 + 8 * ((3365 * (v7 == 0)) ^ (v3 + 1240))))();
}

uint64_t sub_1A2741368@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v6 + (v10 & a3) + (v9 ^ a2) + v5) = *(_BYTE *)(v4 + (v10 & a3) + (v9 ^ a2) + a1);
  return (*(uint64_t (**)(void))(v11 + 8 * (((v7 == v9) * v8) ^ (a4 + 71466500))))();
}

uint64_t sub_1A27413B4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55)
{
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;

  *(_QWORD *)(v56 + 4264) = v55;
  return ((uint64_t (*)(void))(*(_QWORD *)(v57 + 8 * ((218 * (a55 == 3)) ^ (a1 + 71467033)))
                            - (a1 - v58 - 227)
                            - 2))();
}

uint64_t sub_1A27413BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;

  *(_QWORD *)(v64 + 4288) = v63;
  return ((uint64_t (*)(void))(*(_QWORD *)(v65 + 8 * ((218 * (a62 == 3)) ^ (v62 + 71467033)))
                            - (v62 - v66 - 227)
                            - 2))();
}

uint64_t sub_1A27413C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 3696) = 0;
  v7 = v6[159] - 1;
  *(_BYTE *)(v6[137] + a3 + v6[158]) = *(_BYTE *)(v6[135] + a3 + a2);
  return (*(uint64_t (**)(void))(v5 + 8 * (((v7 == 0) | (2 * (v7 == 0))) ^ (v3 + 71465501))))();
}

uint64_t sub_1A2741434@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v4 + (v8 & v9) + (v7 ^ a2) + v3) = *(_BYTE *)(a3 + (v8 & v9) + (v7 ^ a2) + a1);
  return (*(uint64_t (**)(void))(v10 + 8 * (((v5 == v7) | (2 * (v5 == v7))) ^ v6)))();
}

uint64_t sub_1A2741470()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;

  v1[462] = v0;
  v1[181] = *(_QWORD *)(v2 + 1240);
  v1[182] = *(_QWORD *)(v2 + 1232);
  v1[183] = *(_QWORD *)(v2 + 1224);
  v1[184] = *(_QWORD *)(v2 + 1216);
  v3 = STACK[0x1B8C];
  LODWORD(STACK[0x7FC]) = STACK[0x1B8C];
  v1[186] = *(_QWORD *)(v2 + 1200);
  v4 = STACK[0x1B7C];
  LODWORD(STACK[0x80C]) = STACK[0x1B7C];
  v1[188] = *(_QWORD *)(v2 + 1184);
  v1[189] = *(_QWORD *)(v2 + 1176);
  LODWORD(STACK[0x824]) = STACK[0x1B64];
  v1[191] = *(_QWORD *)(v2 + 1160);
  v5 = STACK[0x1B54];
  LODWORD(STACK[0x834]) = STACK[0x1B54];
  v6 = STACK[0x1B50];
  LODWORD(STACK[0x838]) = STACK[0x1B50];
  v7 = STACK[0x1B4C];
  LODWORD(STACK[0x83C]) = STACK[0x1B4C];
  v1[194] = *(_QWORD *)(v2 + 1136);
  v1[195] = *(_QWORD *)(v2 + 1128);
  v1[196] = *(_QWORD *)(v2 + 1120);
  v8 = STACK[0x1B2C];
  LODWORD(STACK[0x85C]) = STACK[0x1B2C];
  v1[198] = *(_QWORD *)(v2 + 1104);
  LODWORD(STACK[0x86C]) = v6;
  v1[200] = *(_QWORD *)(v2 + 1240);
  v1[201] = *(_QWORD *)(v2 + 1232);
  v1[202] = *(_QWORD *)(v2 + 1224);
  v1[203] = *(_QWORD *)(v2 + 1216);
  LODWORD(STACK[0x894]) = v3;
  v1[205] = *(_QWORD *)(v2 + 1200);
  LODWORD(STACK[0x8A4]) = v4;
  v1[207] = *(_QWORD *)(v2 + 1184);
  v1[208] = *(_QWORD *)(v2 + 1176);
  v1[209] = *(_QWORD *)(v2 + 1160);
  LODWORD(STACK[0x8C4]) = v5;
  LODWORD(STACK[0x8C8]) = STACK[0x1B50];
  LODWORD(STACK[0x8CC]) = v7;
  v1[212] = *(_QWORD *)(v2 + 1136);
  v1[213] = *(_QWORD *)(v2 + 1128);
  v1[214] = *(_QWORD *)(v2 + 1120);
  LODWORD(STACK[0x8EC]) = v8;
  v1[216] = *(_QWORD *)(v2 + 1104);
  return (*(uint64_t (**)(void))(v2 + 1248))();
}

void sub_1A2741478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unsigned int *a33,void (*a34)(_QWORD, uint64_t, _QWORD),uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  unsigned int a64;
  uint64_t a65;
  _QWORD *v65;
  _QWORD *v66;
  int v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  int v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;

  v65[121] = v66[155];
  v65[122] = v66[154];
  v65[123] = v66[153];
  v65[124] = v66[152];
  LODWORD(STACK[0x61C]) = STACK[0x1B8C];
  v65[126] = v66[150];
  v67 = STACK[0x1B7C];
  LODWORD(STACK[0x62C]) = STACK[0x1B7C];
  v65[128] = v66[148];
  v65[129] = v66[147];
  LODWORD(STACK[0x644]) = STACK[0x1B64];
  *(_DWORD *)(a65 + 8) = a64;
  *(_DWORD *)(a65 + 12) = 0;
  v65[131] = a65;
  LODWORD(STACK[0x654]) = STACK[0x1B54];
  LODWORD(STACK[0x658]) = STACK[0x1B50];
  LODWORD(STACK[0x65C]) = STACK[0x1B4C];
  v65[134] = v66[142];
  v65[135] = v66[141];
  v65[136] = v66[140];
  LODWORD(STACK[0x67C]) = STACK[0x1B2C];
  v65[138] = v66[138];
  LODWORD(STACK[0x68C]) = v67;
  v85 = STACK[0x67C];
  v83 = v65[135];
  v84 = v65[136];
  v82 = v65[134];
  v81 = STACK[0x65C];
  v80 = STACK[0x658];
  v79 = STACK[0x654];
  v78 = v65[131];
  v77 = STACK[0x644];
  v75 = v65[128];
  v76 = v65[129];
  v74 = STACK[0x62C];
  v68 = v65[126];
  v69 = STACK[0x61C];
  v70 = v65[124];
  v71 = v65[123];
  v72 = v65[122];
  v73 = v65[121];
  a34(*a33, a62, a64);
  v65[140] = v73;
  v65[141] = v72;
  v65[142] = v71;
  v65[143] = v70;
  LODWORD(STACK[0x6B4]) = v69;
  v65[145] = v68;
  LODWORD(STACK[0x6C4]) = v74;
  v65[147] = v75;
  v65[148] = v76;
  LODWORD(STACK[0x6DC]) = v77;
  v65[150] = v78;
  LODWORD(STACK[0x6EC]) = v79;
  LODWORD(STACK[0x6F0]) = v80;
  LODWORD(STACK[0x6F4]) = v81;
  v65[153] = v82;
  v65[154] = v83;
  v65[155] = v84;
  LODWORD(STACK[0x714]) = v85;
  JUMPOUT(0x1A2741654);
}

uint64_t sub_1A27417A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;
  int v66;
  _QWORD *v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BOOL4 v76;

  v67[159] = v67[608];
  v69 = (v66 - 1127633525) & 0x43365BB7;
  LODWORD(STACK[0x734]) = v66;
  v67[161] = v67[607];
  v67[162] = v67[606];
  v67[163] = v67[605];
  LODWORD(STACK[0x754]) = STACK[0x1514];
  v67[165] = v67[603];
  LODWORD(STACK[0x764]) = STACK[0x1504];
  v67[167] = v67[601];
  v67[168] = v67[600];
  LODWORD(STACK[0x77C]) = STACK[0x14EC];
  v67[170] = v67[598];
  LODWORD(STACK[0x78C]) = STACK[0x14DC];
  LODWORD(STACK[0x790]) = STACK[0x14D8];
  LODWORD(STACK[0x794]) = STACK[0x14D4];
  v67[173] = v67[595];
  v67[174] = v67[594];
  v67[175] = v67[593];
  LODWORD(STACK[0x7B4]) = STACK[0x14B4];
  v70 = v67[591];
  v67[177] = v70;
  v67[178] = &a66;
  v71 = (v69 - 4354635) & 0xFBFFEFFB;
  v67[609] = v70;
  LODWORD(STACK[0x1544]) = STACK[0x7B4];
  v67[611] = v67[175];
  v67[612] = v67[174];
  v67[613] = v67[173];
  LODWORD(STACK[0x1564]) = STACK[0x794];
  LODWORD(STACK[0x1568]) = STACK[0x790];
  LODWORD(STACK[0x156C]) = STACK[0x78C];
  v67[616] = v67[170];
  LODWORD(STACK[0x157C]) = STACK[0x77C];
  v67[618] = v67[168];
  v67[619] = v67[167];
  LODWORD(STACK[0x1594]) = STACK[0x764];
  v67[621] = v67[165];
  LODWORD(STACK[0x15A4]) = STACK[0x754];
  v72 = v67[616];
  v67[623] = v67[163];
  v67[624] = v67[162];
  v67[625] = v67[161];
  v73 = SLODWORD(STACK[0x734]);
  v67[626] = v67[159];
  v74 = *(_QWORD *)(v68 + 8 * v73);
  STACK[0x15D0] = v72 + 12;
  STACK[0x15D8] = v72 + 8;
  v76 = v72 == 0;
  LOBYTE(STACK[0x15CF]) = v76;
  v67[179] = v74;
  v67[180] = &a66;
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(a60
                                                                           + 8
                                                                           * (int)((3299
                                                                                  * ((((v71 + 71466528) ^ v76) & 1) == 0)) ^ (v71 + 71466528))))(LODWORD(STACK[0x91C]), v67[220], v67[219], v67[218], LODWORD(STACK[0x984]));
}

uint64_t sub_1A2741AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,_DWORD *a37,_DWORD *a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v60;
  unint64_t v61;
  unint64_t v62;
  int v63;
  _BOOL4 v64;

  v61 = (*a38 ^ 0x7EFD76FB7BDFFD79) - 0x7EFD76FAE4693C43 + ((2 * *a38) & 0xF7BFFAF2);
  v62 = (*a37 ^ 0xFE7A576B37CBFD91)
      + (a6 ^ (v60 - 1107) ^ 0x185A895A41744F9)
      + ((2 * *a37) & 0x6F97FB22);
  v63 = (v61 < 0x9776C132) ^ (v62 < 0x9776C132);
  v64 = v61 > v62;
  if (v63)
    v64 = v61 < 0x9776C132;
  return (*(uint64_t (**)(void))(a60 + 8 * ((3532 * !v64) ^ a6)))();
}

uint64_t sub_1A2741B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,_DWORD *a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,_QWORD *a59)
{
  int v59;
  _DWORD *v60;
  uint64_t (*v61)(void);
  unsigned int v62;
  int v63;
  unsigned int v64;
  int v65;
  int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;

  v62 = ((2 * v59) & 0xAAFDD9FE) + (v59 ^ 0x557EECFF) - 1434381567;
  v63 = *(unsigned __int8 *)(*a59 + v62);
  v64 = v63 + (a6 ^ 0xEEEEEEEE) - ((2 * v63) & 0x16);
  v65 = *(unsigned __int8 *)(*a59 + v62 + 1);
  v66 = *(unsigned __int8 *)(*a59 + v62 + 2);
  v67 = (((v65 - ((2 * v65) & 0x13A)) << 16) - 1902313472) ^ 0x8E9D0000 | ((v64 << 24) - 184549376) ^ 0x8B000000 | (((v66 + 3338208 - ((2 * v66) & 0xBBBBBBBB)) << 8) - 768) ^ 0x32EFDD00;
  v68 = *(unsigned __int8 *)(*a59 + v62 + 3);
  v69 = ((v68 - 285719737 - ((2 * v68) & 0x8E)) ^ 0xE7A74194) & ~v67 | v67 & 0xF6A0FD00;
  *v60 = (((v69 ^ 0x7F619929) - 1972886616) ^ ((v69 ^ 0x5B2A7D6C) - 1373386781) ^ ((v69 ^ 0x2D14E696) - 669164519))
       + 1779679125;
  *a38 += 4;
  return v61();
}

uint64_t sub_1A2741D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  int v62;
  uint64_t v63;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a61 + 8 * (((a62 + 71467140) * v62) ^ (a62 + 71466106))) - (a40 & 0x25B6DA5D) + 597))(1718253555, 4223501939, a3, a4, v63, a6, a7, a43);
}

uint64_t sub_1A2741D94@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61)
{
  uint64_t v61;

  return ((uint64_t (*)(void))(*(_QWORD *)(v61 + 8 * (int)(((a61 == a1) * ((a3 ^ (a2 - 489)) + 71466263)) ^ a3))
                            - (a3 ^ 0x3D6)))();
}

void sub_1A2741DFC()
{
  JUMPOUT(0x1A2741A48);
}

uint64_t sub_1A2741E2C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61)
{
  uint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  int v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  unint64_t v69;
  int v70;
  int v71;
  int v72;
  uint64_t v73;
  _QWORD *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(void);

  v74[384] = v69;
  STACK[0x1A48] = v69;
  v74[383] = v75;
  STACK[0x1A50] = v75;
  LODWORD(STACK[0x1A5C]) = v63;
  LODWORD(STACK[0xE3C]) = v65;
  LODWORD(STACK[0x1A60]) = v65;
  v74[217] = v66;
  v74[218] = a4;
  v74[219] = a3;
  v74[220] = a2;
  LODWORD(STACK[0x91C]) = a1;
  v74[222] = a8;
  LODWORD(STACK[0x92C]) = a6;
  v74[224] = v76;
  v74[225] = v73;
  v74[226] = a57;
  LODWORD(STACK[0x94C]) = v67;
  LODWORD(STACK[0x950]) = v70;
  LODWORD(STACK[0x954]) = v71;
  v74[229] = v61;
  v74[230] = v62;
  v74[231] = a7;
  LODWORD(STACK[0x974]) = v72;
  v74[233] = v68;
  LODWORD(STACK[0x984]) = a5;
  v74[181] = v74[626];
  v74[182] = v74[625];
  v74[183] = v74[624];
  v74[184] = v74[623];
  LODWORD(STACK[0x7FC]) = STACK[0x15A4];
  v74[186] = v74[621];
  LODWORD(STACK[0x80C]) = STACK[0x1594];
  v74[188] = v74[619];
  v74[189] = v74[618];
  LODWORD(STACK[0x824]) = STACK[0x157C];
  v74[191] = v74[616];
  LODWORD(STACK[0x834]) = STACK[0x156C];
  LODWORD(STACK[0x838]) = STACK[0x1568];
  LODWORD(STACK[0x83C]) = STACK[0x1564];
  v74[194] = v74[613];
  v74[195] = v74[612];
  v74[196] = v74[611];
  LODWORD(STACK[0x85C]) = STACK[0x1544];
  v74[198] = v74[609];
  v77 = (uint64_t (*)(void))(*(_QWORD *)(a60 + 8 * ((((a61 + 71466220) ^ 0x83F) * v64) ^ (a61 + 71466244))) - 8);
  LODWORD(STACK[0x86C]) = STACK[0x1A60];
  return v77();
}

uint64_t sub_1A2741F84@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61)
{
  _QWORD *v61;
  int v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  int v66;
  uint64_t (*v67)(void);

  v65 = a1 ^ (v64 - 855);
  *a24 = (v65 - 1646788427 + a61);
  v61[181] = v61[626];
  v61[182] = v61[625];
  v61[183] = v61[624];
  v61[184] = v61[623];
  LODWORD(STACK[0x7FC]) = STACK[0x15A4];
  v61[186] = v61[621];
  LODWORD(STACK[0x80C]) = STACK[0x1594];
  v61[188] = v61[619];
  v61[189] = v61[618];
  LODWORD(STACK[0x824]) = STACK[0x157C];
  v61[191] = v61[616];
  LODWORD(STACK[0x834]) = STACK[0x156C];
  LODWORD(STACK[0x838]) = STACK[0x1568];
  LODWORD(STACK[0x83C]) = STACK[0x1564];
  v61[194] = v61[613];
  v61[195] = v61[612];
  v61[196] = v61[611];
  LODWORD(STACK[0x85C]) = STACK[0x1544];
  v66 = ((8 * ((STACK[0x10E7] & 1) == 0)) & 0xEF | (16 * ((STACK[0x10E7] & 1) == 0))) ^ a1;
  v61[198] = v61[609];
  v67 = (uint64_t (*)(void))(*(_QWORD *)(v63 + 8 * v66) - (v65 ^ 0xFBBD8750));
  LODWORD(STACK[0x86C]) = v62;
  return v67();
}

void sub_1A2742080()
{
  JUMPOUT(0x1A274195CLL);
}

uint64_t sub_1A27420AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,uint64_t a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  uint64_t v59;
  uint64_t v60;
  int v61;
  char v62;
  int v63;
  int v64;
  int v65;
  uint64_t v66;
  unint64_t v67;
  int v68;
  int v69;
  int v70;
  _QWORD *v71;
  unint64_t v72;
  int v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  int v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t (*v86)(void);

  v73 = v64 - 91;
  v71[383] = v72;
  v71[384] = v67;
  STACK[0x1A48] = v67;
  STACK[0x1A50] = v72;
  LOBYTE(STACK[0xE3B]) = v62;
  LODWORD(STACK[0xE3C]) = v63;
  LODWORD(STACK[0x1A5C]) = v61;
  LODWORD(STACK[0x1A60]) = v63;
  LOBYTE(STACK[0x1A67]) = v62;
  v71[217] = a56;
  v71[218] = a55;
  v71[219] = a54;
  v71[220] = a53;
  LODWORD(STACK[0x91C]) = a52;
  v71[222] = a51;
  LODWORD(STACK[0x92C]) = a50;
  v71[224] = a49;
  v71[225] = a48;
  v71[226] = a59;
  LODWORD(STACK[0x94C]) = v65;
  LODWORD(STACK[0x950]) = v68;
  LODWORD(STACK[0x954]) = v69;
  v71[229] = v59;
  v71[230] = v60;
  v71[231] = a8;
  LODWORD(STACK[0x974]) = v70;
  v71[233] = v66;
  LODWORD(STACK[0x984]) = a5;
  LODWORD(STACK[0x16B4]) = STACK[0x984];
  v74 = (v64 - 2083330186) ^ 0x786F6E97u;
  STACK[0x16B8] = v71[233];
  LODWORD(STACK[0x16C4]) = STACK[0x974];
  STACK[0x16C8] = v71[231];
  v75 = v71[229];
  STACK[0x16D0] = v71[230];
  STACK[0x16D8] = v75;
  LODWORD(STACK[0x16E4]) = STACK[0x954];
  LODWORD(STACK[0x16E8]) = STACK[0x950];
  LODWORD(STACK[0x16EC]) = STACK[0x94C];
  v76 = v71[226];
  v77 = v71[225];
  STACK[0x16F0] = v76;
  STACK[0x16F8] = v77;
  STACK[0x1700] = v71[224];
  LODWORD(STACK[0x170C]) = STACK[0x92C];
  v78 = v71[222];
  STACK[0x1710] = v78;
  v79 = STACK[0x91C];
  LODWORD(STACK[0x171C]) = STACK[0x91C];
  v80 = v71[220];
  v81 = v71[219];
  STACK[0x1720] = v80;
  STACK[0x1728] = v81;
  v82 = v71[218];
  v83 = v71[217];
  STACK[0x1730] = v82;
  STACK[0x1738] = v83;
  v71[235] = v83;
  v71[236] = v82;
  v71[237] = v81;
  v71[238] = v80;
  LODWORD(STACK[0x9AC]) = v79;
  v71[240] = v78;
  LODWORD(STACK[0x9BC]) = STACK[0x170C];
  v84 = STACK[0x16F8];
  v71[242] = STACK[0x1700];
  v71[243] = v84;
  LODWORD(STACK[0x9D0]) = STACK[0x16B4];
  LODWORD(STACK[0x9D4]) = STACK[0x16EC];
  LODWORD(STACK[0x9D8]) = STACK[0x16E8];
  LODWORD(STACK[0x9DC]) = STACK[0x16E4];
  v85 = STACK[0x16D0];
  v71[246] = STACK[0x16D8];
  v71[247] = v85;
  v71[248] = STACK[0x16C8];
  LODWORD(STACK[0x9FC]) = STACK[0x16C4];
  v86 = (uint64_t (*)(void))(*(_QWORD *)(8 * ((1017 * (v76 == 0)) ^ v73) + 0xFBBD8673)
                          - ((v74 - 4223501845) ^ (v73 - 2083330095) & 0x7C2D177F));
  v71[250] = STACK[0x16B8];
  return v86();
}

uint64_t sub_1A2743558()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = ((v0 + 987895142) ^ 0xFFFFFFFFC51DE949) + *(_QWORD *)(v2 + 8 * v0);
  v5 = v3[12];
  v1[386] = v3[13];
  v1[387] = v4;
  v1[388] = v5;
  v6 = v3[10];
  v1[389] = v3[11];
  v1[390] = v6;
  LODWORD(STACK[0xE6C]) = STACK[0x171C];
  v1[392] = v3[8];
  LODWORD(STACK[0xE7C]) = STACK[0x170C];
  v7 = v3[5];
  v1[394] = v3[6];
  v8 = v3[4];
  v1[395] = v7;
  LODWORD(STACK[0xE90]) = STACK[0x16B4];
  LODWORD(STACK[0xE94]) = STACK[0x16EC];
  LODWORD(STACK[0xE98]) = STACK[0x16E8];
  LODWORD(STACK[0xE9C]) = STACK[0x16E4];
  v9 = *v3;
  v1[398] = v3[1];
  v1[399] = v9;
  v1[400] = STACK[0x16C8];
  LODWORD(STACK[0xEBC]) = STACK[0x16C4];
  v1[402] = STACK[0x16B8];
  v1[403] = v8;
  v10 = v1[402];
  LODWORD(v9) = STACK[0xEBC];
  v11 = v1[400];
  v12 = v1[399];
  v13 = v1[398];
  v14 = STACK[0xE9C];
  v15 = STACK[0xE98];
  v16 = STACK[0xE94];
  v17 = STACK[0xE90];
  v18 = v1[395];
  v19 = v1[394];
  v20 = STACK[0xE7C];
  v21 = v1[392];
  v22 = STACK[0xE6C];
  v23 = v1[390];
  v24 = v1[389];
  v25 = v1[388];
  v26 = v1[386];
  v1[404] = v1[387];
  v1[405] = v8;
  v1[406] = v10;
  LODWORD(STACK[0xEEC]) = v9;
  v1[408] = v11;
  v1[409] = v12;
  v1[410] = v13;
  LODWORD(STACK[0xF08]) = v14;
  LODWORD(STACK[0xF0C]) = v15;
  LODWORD(STACK[0xF10]) = v16;
  LODWORD(STACK[0xF14]) = v17;
  v1[413] = v18;
  v1[414] = v19;
  LODWORD(STACK[0xF2C]) = v20;
  v1[416] = v21;
  LODWORD(STACK[0xF3C]) = v22;
  v1[418] = v23;
  v1[419] = v24;
  v1[420] = v25;
  v1[421] = v26;
  return sub_1A274383C();
}

uint64_t sub_1A274383C@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  char v4;
  uint64_t *v5;
  uint64_t v6;

  v3[115] = v1[421];
  v3[116] = v1[420];
  v3[117] = v1[419];
  v3[118] = v1[418];
  LODWORD(STACK[0x1A8C]) = STACK[0xF3C];
  v3[120] = v1[416];
  LODWORD(STACK[0x1A9C]) = STACK[0xF2C];
  v3[122] = v1[414];
  v3[123] = v1[413];
  LODWORD(STACK[0x1AB0]) = STACK[0xF14];
  LODWORD(STACK[0x1AB4]) = STACK[0xF10];
  LODWORD(STACK[0x1AB8]) = STACK[0xF0C];
  LODWORD(STACK[0x1ABC]) = STACK[0xF08];
  v3[126] = v1[410];
  v3[127] = v1[409];
  v3[128] = v1[408];
  LODWORD(STACK[0x1ADC]) = STACK[0xEEC];
  v3[130] = v1[406];
  v5 = (uint64_t *)v1[405];
  v3[131] = v5;
  v3[132] = v1[404];
  v6 = *v5;
  v3[133] = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((3314 * (((v4 + a1 + 1) ^ (v6 == 0)) & 1)) ^ a1))
                            - 4))();
}

uint64_t sub_1A2743914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void (*a36)(void))
{
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t (*v57)(void);

  ((void (*)(_QWORD))a36)(v37[133]);
  v38 = (_QWORD *)v37[131];
  *v38 = 0;
  v38[1] = 0;
  a36();
  v36[422] = v37[132];
  v36[423] = v37[130];
  LODWORD(STACK[0xF74]) = STACK[0x1ADC];
  v36[425] = v37[128];
  v36[426] = v37[127];
  v36[427] = v37[126];
  LODWORD(STACK[0xF90]) = STACK[0x1ABC];
  LODWORD(STACK[0xF94]) = STACK[0x1AB8];
  LODWORD(STACK[0xF98]) = STACK[0x1AB4];
  LODWORD(STACK[0xF9C]) = STACK[0x1AB0];
  v36[430] = v37[123];
  v36[431] = v37[122];
  LODWORD(STACK[0xFB4]) = STACK[0x1A9C];
  v36[433] = v37[120];
  LODWORD(STACK[0xFC4]) = STACK[0x1A8C];
  v36[435] = v37[118];
  v36[436] = v37[117];
  v36[437] = v37[116];
  v36[438] = v37[115];
  v39 = v36[438];
  v40 = v36[437];
  v41 = v36[436];
  v42 = v36[435];
  v43 = STACK[0xFC4];
  v44 = v36[433];
  v45 = STACK[0xFB4];
  v46 = v36[431];
  v47 = v36[430];
  v48 = STACK[0xF9C];
  v49 = STACK[0xF98];
  v50 = STACK[0xF94];
  v51 = STACK[0xF90];
  v52 = v36[427];
  v53 = v36[426];
  v54 = v36[425];
  v55 = STACK[0xF74];
  v56 = v36[423];
  v57 = (uint64_t (*)(void))v36[422];
  v36[121] = v39;
  v36[122] = v40;
  v36[123] = v41;
  v36[124] = v42;
  LODWORD(STACK[0x61C]) = v43;
  v36[126] = v44;
  LODWORD(STACK[0x62C]) = v45;
  v36[128] = v46;
  v36[129] = v47;
  LODWORD(STACK[0x644]) = v48;
  v36[131] = 0;
  LODWORD(STACK[0x654]) = v49;
  LODWORD(STACK[0x658]) = v50;
  LODWORD(STACK[0x65C]) = v51;
  v36[134] = v52;
  v36[135] = v53;
  v36[136] = v54;
  LODWORD(STACK[0x67C]) = v55;
  v36[138] = v56;
  LODWORD(STACK[0x68C]) = v45;
  v36[235] = v39;
  v36[236] = v40;
  v36[237] = v41;
  v36[238] = v42;
  LODWORD(STACK[0x9AC]) = v43;
  v36[240] = v44;
  LODWORD(STACK[0x9BC]) = v45;
  v36[242] = v46;
  v36[243] = v47;
  LODWORD(STACK[0x9D0]) = v48;
  LODWORD(STACK[0x9D4]) = v49;
  LODWORD(STACK[0x9D8]) = v50;
  LODWORD(STACK[0x9DC]) = v51;
  v36[246] = v52;
  v36[247] = v53;
  v36[248] = v54;
  LODWORD(STACK[0x9FC]) = v55;
  v36[250] = v56;
  LODWORD(STACK[0xA0C]) = v48;
  return v57();
}

void sub_1A2743AC0()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_1A2743AC8()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = STACK[0xBD4];
  v4[73] = v1[307];
  LODWORD(STACK[0x1924]) = STACK[0xBC4];
  v4[75] = v1[305];
  v4[76] = v1[304];
  v4[77] = v1[303];
  LODWORD(STACK[0x1944]) = STACK[0xBA4];
  LODWORD(STACK[0x1948]) = STACK[0xBA0];
  LODWORD(STACK[0x194C]) = STACK[0xB9C];
  v4[80] = v1[300];
  LODWORD(STACK[0x195C]) = STACK[0xB8C];
  v4[82] = v1[298];
  v4[83] = v1[297];
  v7 = STACK[0xB74];
  LODWORD(STACK[0x1974]) = STACK[0xB74];
  v8 = v1[295];
  v4[85] = v8;
  v9 = STACK[0xB64];
  LODWORD(STACK[0x1984]) = STACK[0xB64];
  v10 = v1[293];
  v4[87] = v10;
  v11 = v1[292];
  v4[88] = v11;
  v12 = v1[291];
  v4[89] = v12;
  v13 = v1[290];
  v4[90] = v13;
  v1[309] = v13;
  v1[310] = v12;
  v1[311] = v11;
  v1[312] = v10;
  LODWORD(STACK[0xBFC]) = v9;
  v1[314] = v8;
  LODWORD(STACK[0xC0C]) = v7;
  v1[316] = v4[83];
  v1[317] = v4[82];
  LODWORD(STACK[0xC24]) = STACK[0x195C];
  v1[319] = v4[80];
  LODWORD(STACK[0xC34]) = STACK[0x194C];
  LODWORD(STACK[0xC38]) = STACK[0x1948];
  LODWORD(STACK[0xC3C]) = STACK[0x1944];
  v1[322] = v4[77];
  v1[323] = v4[76];
  v1[324] = v4[75];
  LODWORD(STACK[0xC5C]) = STACK[0x1924];
  v1[326] = v4[73];
  LODWORD(STACK[0xC6C]) = v6;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v6 == v2) * (37 * (v0 ^ (v5 + 254)) - 603)) ^ (v0 + 71466645))))();
}

#error "1A2743F24: call analysis failed (funcsize=189)"

uint64_t sub_1A2743F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t (*a36)(_QWORD))
{
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  int v40;

  v38 = *(_QWORD **)(v37 + 1136);
  v39 = a36(*v38);
  *v38 = *(_QWORD *)(v37 + 1104);
  **(_DWORD **)(v37 + 1128) = *(_QWORD *)(v37 + 1120);
  v36[345] = *(_QWORD *)(v37 + 1240);
  v36[346] = *(_QWORD *)(v37 + 1232);
  v36[347] = *(_QWORD *)(v37 + 1224);
  v36[348] = *(_QWORD *)(v37 + 1216);
  LODWORD(STACK[0xD1C]) = STACK[0x1B8C];
  v36[350] = *(_QWORD *)(v37 + 1200);
  LODWORD(STACK[0xD2C]) = STACK[0x1B7C];
  v36[352] = *(_QWORD *)(v37 + 1184);
  v36[353] = *(_QWORD *)(v37 + 1176);
  LODWORD(STACK[0xD44]) = STACK[0x1B64];
  v36[355] = *(_QWORD *)(v37 + 1160);
  LODWORD(STACK[0xD54]) = STACK[0x1B54];
  LODWORD(STACK[0xD58]) = STACK[0x1B50];
  LODWORD(STACK[0xD5C]) = STACK[0x1B4C];
  v36[358] = *(_QWORD *)(v37 + 1136);
  v36[359] = *(_QWORD *)(v37 + 1128);
  v36[360] = *(_QWORD *)(v37 + 1120);
  v40 = STACK[0x1B2C];
  LODWORD(STACK[0xD7C]) = STACK[0x1B2C];
  v36[362] = *(_QWORD *)(v37 + 1104);
  LODWORD(STACK[0xD8C]) = v40;
  return sub_1A2743FE8(v39);
}

void sub_1A2743FE8()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = STACK[0xD8C];
  v2 = v0[362];
  v3 = STACK[0xD7C];
  v4 = v0[360];
  v5 = v0[359];
  v6 = v0[358];
  v7 = STACK[0xD5C];
  v8 = STACK[0xD58];
  v9 = STACK[0xD54];
  v10 = v0[355];
  v11 = STACK[0xD44];
  v12 = v0[353];
  v13 = v0[352];
  v14 = STACK[0xD2C];
  v15 = v0[350];
  v16 = STACK[0xD1C];
  v17 = v0[348];
  v18 = v0[347];
  v19 = v0[346];
  v0[364] = v0[345];
  v0[365] = v19;
  v0[366] = v18;
  v0[367] = v17;
  LODWORD(STACK[0xDB4]) = v16;
  v0[369] = v15;
  LODWORD(STACK[0xDC4]) = v14;
  v0[371] = v13;
  v0[372] = v12;
  LODWORD(STACK[0xDDC]) = v11;
  v0[374] = v10;
  LODWORD(STACK[0xDEC]) = v9;
  LODWORD(STACK[0xDF0]) = v8;
  LODWORD(STACK[0xDF4]) = v7;
  v0[377] = v6;
  v0[378] = v5;
  v0[379] = v4;
  LODWORD(STACK[0xE14]) = v3;
  v0[381] = v2;
  LODWORD(STACK[0xE24]) = v1;
  JUMPOUT(0x1A2744090);
}

uint64_t sub_1A27441D8@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((((v1 - 12972) & 0xFBBDB75E) + 71465137) * (a1 == 0)) ^ v1)))();
}

uint64_t sub_1A2744218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v5 + 3704) = v3;
  v8 = a3 + 71466510;
  v9 = v3 - 1;
  v10 = (v3 - 1);
  *(_BYTE *)(v7[137] + (v4 & (2 * v9)) + (v10 ^ a2) + v7[161]) = *(_BYTE *)(v7[135] + (v4 & (2 * v9)) + (v10 ^ a2) + a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((3445 * (v10 == 0)) ^ v8)) - 4))();
}

uint64_t sub_1A2744278@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = a3 - 1;
  v11 = (v8 & (2 * v10)) + (v10 ^ a2);
  *(_BYTE *)(v6 + v11 + v5) = *(_BYTE *)(v4 + v11 + a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((v10 == 0) * v3) ^ v7)) - 4))();
}

uint64_t sub_1A27443F8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  LODWORD(STACK[0xB74]) = STACK[0x1628];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((*(unsigned __int8 *)(v2 + 435) * (((v0 + 71465137) | 0x10) ^ 0x564)) ^ (v0 + 71465259)))
                            - 12))();
}

uint64_t sub_1A2744444@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t (*v15)(void);

  v5 = *(_QWORD *)(v2 + 8 * a1);
  v6 = 307 * (a1 ^ 0x1C);
  v1[86] = v1[554];
  LODWORD(STACK[0xC24]) = STACK[0x1624];
  LODWORD(STACK[0xC34]) = STACK[0x1604];
  v1[87] = v1[551];
  v1[89] = v1[550];
  v1[335] = (v6 ^ 0xFFFFFFFFFFFFFA07) + v5;
  LODWORD(STACK[0xC38]) = STACK[0x15E4];
  v1[344] = STACK[0x1648];
  v1[92] = v1[547];
  v1[94] = v1[545];
  LODWORD(STACK[0xC3C]) = STACK[0x1594];
  v1[97] = v1[540];
  v1[98] = v1[538];
  v1[101] = v1[537];
  v1[103] = v1[534];
  v1[104] = v1[532];
  v1[105] = v1[531];
  v1[352] = STACK[0x1608];
  LODWORD(STACK[0xC5C]) = STACK[0x157C];
  v1[106] = v1[530];
  LODWORD(STACK[0xC6C]) = STACK[0x156C];
  LODWORD(STACK[0xC94]) = 1;
  LODWORD(STACK[0x162C]) = STACK[0xC94];
  LODWORD(STACK[0x163C]) = STACK[0xC6C];
  v1[563] = v1[106];
  LODWORD(STACK[0x1654]) = STACK[0xC5C];
  STACK[0x1698] = v1[352];
  v1[565] = v1[105];
  v1[566] = v1[104];
  v1[567] = v1[103];
  v1[568] = v1[101];
  v1[569] = v1[98];
  v1[570] = v1[97];
  LODWORD(STACK[0x1664]) = STACK[0xC3C];
  v1[572] = v1[94];
  v1[574] = v1[92];
  STACK[0x16A0] = v1[344];
  LODWORD(STACK[0x168C]) = STACK[0xC38];
  v7 = v1[335];
  v8 = v1[89];
  v1[577] = v8;
  v9 = v1[87];
  v1[578] = v9;
  v10 = STACK[0xC34];
  LODWORD(STACK[0x1690]) = STACK[0xC34];
  v11 = STACK[0xC24];
  LODWORD(STACK[0x1694]) = STACK[0xC24];
  v12 = v1[86];
  v1[581] = v12;
  v13 = *(_QWORD *)(v3 + 1296);
  v1[583] = v13;
  v1[585] = v7;
  v1[143] = v13;
  v14 = *(_DWORD *)(v13 + 12);
  v1[587] = v13 + 12;
  LODWORD(STACK[0x16B4]) = v14;
  v1[138] = v12;
  LODWORD(STACK[0xD44]) = v11;
  LODWORD(STACK[0xD54]) = v10;
  v1[140] = v9;
  v1[141] = v8;
  v1[142] = v7;
  LODWORD(STACK[0xD58]) = STACK[0x168C];
  v1[379] = STACK[0x16A0];
  v1[145] = v1[574];
  v1[148] = v1[572];
  LODWORD(STACK[0xD5C]) = STACK[0x162C];
  v1[150] = v1[587];
  LODWORD(STACK[0xD7C]) = STACK[0x1664];
  v1[153] = v1[570];
  v1[154] = v1[569];
  v1[157] = v1[568];
  v1[159] = v1[567];
  v1[161] = v1[566];
  v1[162] = v1[565];
  v1[383] = STACK[0x1698];
  LODWORD(STACK[0xD8C]) = STACK[0x1654];
  v1[163] = v1[563];
  LODWORD(STACK[0xDB4]) = STACK[0x163C];
  v15 = (uint64_t (*)(void))(*(_QWORD *)(v2
                                      + 8 * (int)(((v14 < 0xFFFFFFFB) * (((v6 - 71466663) ^ (v4 - 95)) + 506)) ^ v6))
                          - 4);
  LODWORD(STACK[0xDC4]) = 1718210905;
  return v15();
}

uint64_t sub_1A2744A34@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  _BOOL4 v11;
  _BOOL4 v12;

  v5 = LODWORD(STACK[0x16B4]);
  v6 = v2[583];
  v7 = *(unsigned int *)(v6 + 8);
  v2[108] = v2[581];
  LODWORD(STACK[0xCA4]) = STACK[0x1694];
  LODWORD(STACK[0xCBC]) = STACK[0x1690];
  v8 = (v5 ^ 0x7E53742B5B7FFFBELL) - 0x7E53742AB0C567B0 + ((2 * (_DWORD)v5) & 0xB6FFFF7C);
  v9 = (v7 ^ 0xE7FE7CCEFE7DDE3BLL)
     + 0x18018331AC3CB9CFLL
     + ((((a2 - 374046980) | 0x12090710u) ^ 0x107463B2ELL) & (2 * v7));
  v2[110] = v2[578];
  v2[112] = v2[577];
  v10 = (v8 < 0xAABA980A) ^ (v9 < 0xAABA980A);
  v11 = v8 > v9;
  v2[115] = v2[585];
  if (v10)
    v12 = v8 < 0xAABA980A;
  else
    v12 = v11;
  LODWORD(STACK[0xCCC]) = STACK[0x168C];
  v2[116] = v6;
  v2[360] = *(_QWORD *)(a1 + 209);
  v2[119] = v2[574];
  v2[121] = v2[572];
  LODWORD(STACK[0xCD0]) = STACK[0x162C];
  v2[122] = v2[587];
  LODWORD(STACK[0xCD4]) = STACK[0x1664];
  v2[123] = v2[570];
  v2[124] = v2[569];
  v2[126] = v2[568];
  v2[129] = v2[567];
  v2[131] = v2[566];
  v2[134] = v2[565];
  v2[371] = *(_QWORD *)(a1 + 201);
  LODWORD(STACK[0xCE4]) = STACK[0x1654];
  v2[135] = v2[563];
  LODWORD(STACK[0xD1C]) = STACK[0x163C];
  LODWORD(STACK[0xD2C]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1453 * v12) ^ a2)) - 8))();
}

uint64_t sub_1A2744BD8@<X0>(uint64_t a1@<X3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,int a56)
{
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;

  v56[165] = v56[581];
  v59 = (8 * a2) ^ 0xE50;
  v60 = ((8 * a2) ^ 0xFFFFFFFFFFFFF598) + *(_QWORD *)(v57 + 8 * a2);
  LODWORD(STACK[0xDDC]) = STACK[0x1694];
  LODWORD(STACK[0xDEC]) = STACK[0x1690];
  v56[168] = v56[578];
  v56[170] = v56[577];
  v56[173] = v56[585];
  LODWORD(STACK[0xDF0]) = STACK[0x168C];
  v56[174] = v56[583];
  v56[387] = *(_QWORD *)(a1 + 209);
  v56[177] = v56[574];
  v56[178] = v56[572];
  LODWORD(STACK[0xDF4]) = STACK[0x162C];
  v56[180] = v56[587];
  LODWORD(STACK[0xE14]) = STACK[0x1664];
  v56[181] = v56[570];
  v56[394] = v60;
  v56[182] = v56[568];
  v56[183] = v56[567];
  v56[184] = v56[563];
  LODWORD(STACK[0xE24]) = STACK[0x163C];
  LODWORD(STACK[0xE3C]) = 4;
  v56[186] = v56[583];
  *(_QWORD *)(a1 + 113) = v56[186];
  v61 = (v59 - 487215578) & 0x1D0A4DAB;
  v62 = LODWORD(STACK[0xE3C]);
  LODWORD(STACK[0x1800]) = STACK[0xE24];
  *(_QWORD *)(a1 + 137) = v56[184];
  *(_QWORD *)(a1 + 153) = v56[183];
  *(_QWORD *)(a1 + 161) = v56[182];
  v63 = v56[394];
  *(_QWORD *)(a1 + 169) = v56[181];
  LODWORD(STACK[0x1804]) = STACK[0xE14];
  *(_QWORD *)(a1 + 177) = v56[180];
  LODWORD(STACK[0x1814]) = STACK[0xDF4];
  *(_QWORD *)(a1 + 233) = v56[178];
  v64 = v56[177];
  *(_QWORD *)(v58 + 176) = v56[387];
  v65 = v56[174];
  *(_QWORD *)v58 = v64;
  *(_QWORD *)(v58 + 8) = v65;
  LODWORD(STACK[0x182C]) = STACK[0xDF0];
  v66 = v56[170];
  *(_QWORD *)(v58 + 32) = v56[173];
  *(_QWORD *)(v58 + 40) = v66;
  *(_QWORD *)(v58 + 64) = v56[168];
  LODWORD(STACK[0x183C]) = STACK[0xDEC];
  LODWORD(STACK[0x187C]) = STACK[0xDDC];
  v67 = *(_QWORD *)(a1 + 113);
  v68 = *(unsigned int *)(v67 + 8);
  *(_QWORD *)(v58 + 80) = v56[165];
  *(_QWORD *)(v58 + 88) = v63;
  v69 = (v62 ^ 0x76DC98D83BB6CFFDLL)
      + v68
      - 0x76DC98D83BB6CFFDLL
      + ((2 * v62) & (unint64_t)(v61 + 2003673080));
  *(_QWORD *)(v58 + 96) = v67 + 8;
  *(_QWORD *)(v58 + 272) = v69;
  *(_BYTE *)(v58 + 871) = v69 < 0xFFFFFFFF;
  v56[400] = v68;
  return (*(uint64_t (**)(void))(v57
                              + 8
                              * (int)((((((v61 - 1573649338) | 0x59898310) + 71466285) ^ 0x46B) * (a56 == 2)) ^ (((v61 - 1573649338) | 0x59898310) + 71467554))))();
}

uint64_t sub_1A2744C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);

  v10 = STACK[0x1768];
  v11 = LODWORD(STACK[0x1768]) == v6;
  LODWORD(STACK[0xA64]) = STACK[0x17FC];
  LODWORD(STACK[0xA74]) = STACK[0x17DC];
  v12 = *(_QWORD *)(a4 + 65);
  v5[3] = *(_QWORD *)(a4 + 73);
  v5[4] = v12;
  v5[7] = *(_QWORD *)(a4 + 41);
  v13 = *(_QWORD *)(a4 + 33);
  v5[278] = *(_QWORD *)(v8 + 128);
  v14 = *(_QWORD *)(a4 + 9);
  v5[9] = v13;
  v5[10] = v14;
  v15 = *(_QWORD *)(a4 + 1);
  LODWORD(STACK[0xA78]) = STACK[0x178C];
  v16 = v5[626];
  v5[11] = v15;
  v5[12] = v16;
  LODWORD(STACK[0xA7C]) = STACK[0x1774];
  v5[14] = v5[625];
  v5[17] = v5[624];
  v5[19] = v5[623];
  v17 = v5[618];
  v5[22] = v5[621];
  v5[23] = v17;
  v5[26] = v5[616];
  v5[286] = *(_QWORD *)(v8 + 48);
  LODWORD(STACK[0xA9C]) = STACK[0x1770];
  v5[28] = v5[613];
  LODWORD(STACK[0xABC]) = STACK[0x176C];
  v18 = (uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((v11 * (2 * (v4 ^ (v9 + 164)) + 851)) ^ (v4 + 71465260))) - 8);
  LODWORD(STACK[0xADC]) = v10;
  return v18();
}

uint64_t sub_1A2744D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  int v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v24 = v19 + 1515;
  v20[243] = STACK[0x1630];
  LODWORD(STACK[0xF94]) = STACK[0x17FC];
  v20[246] = STACK[0x1618];
  v20[247] = STACK[0x15F8];
  LODWORD(STACK[0xF98]) = STACK[0x179C];
  v20[250] = STACK[0x15F0];
  v20[252] = STACK[0x15D0];
  LODWORD(STACK[0xF9C]) = STACK[0x178C];
  v20[253] = v20[626];
  LODWORD(STACK[0xFB4]) = STACK[0x1774];
  v20[254] = v20[625];
  v20[255] = v20[624];
  LODWORD(STACK[0xFC4]) = v19;
  v20[257] = v20[618];
  v20[261] = v20[616];
  v20[446] = v22[6];
  LODWORD(STACK[0x100C]) = STACK[0x1770];
  v20[263] = v20[613];
  v25 = STACK[0x176C];
  LODWORD(STACK[0x101C]) = STACK[0x176C];
  v20[266] = a18;
  LODWORD(STACK[0x103C]) = a19;
  LODWORD(STACK[0x1884]) = a19;
  v22[14] = a18;
  LODWORD(STACK[0x1894]) = v25;
  v26 = v20[263];
  LODWORD(STACK[0x18B4]) = STACK[0x100C];
  v22[57] = v20[446];
  v27 = v20[261];
  v22[17] = v26;
  v22[18] = v27;
  v22[21] = v20[257];
  v28 = SLODWORD(STACK[0xFC4]);
  v22[24] = v20[255];
  v29 = v20[254];
  LODWORD(STACK[0x18B8]) = STACK[0xFB4];
  v30 = v20[253];
  v22[26] = v29;
  v22[27] = v30;
  LODWORD(STACK[0x18BC]) = STACK[0xF9C];
  v31 = v20[250];
  v22[28] = v20[252];
  v22[29] = v31;
  LODWORD(STACK[0x18CC]) = STACK[0xF98];
  v32 = v20[246];
  v22[30] = v20[247];
  v22[31] = v32;
  LODWORD(v29) = STACK[0xF94];
  LODWORD(STACK[0x18E4]) = STACK[0xF94];
  v33 = v20[243];
  v22[32] = v33;
  v34 = v22[162];
  v35 = *(_QWORD *)(v21 + 8 * v28);
  v22[35] = v34;
  v22[36] = v35;
  v20[330] = v34;
  v36 = *(_DWORD *)(v34 + 12);
  v22[39] = v34 + 12;
  v37 = LODWORD(STACK[0x1884]);
  v38 = (v37 | ((unint64_t)(v37 < 0x2A286E51) << 32)) + 0x12B31841F5DEE79FLL;
  v22[65] = v38;
  v39 = (v36 ^ 0xFDFEE7EEF3FABDF7) + v38 + ((2 * v36) & 0x1E7F57BEELL) + 0x53DFBFBFEF2F7AABLL;
  v22[75] = v39;
  v20[326] = v33;
  LODWORD(STACK[0x1184]) = v29;
  LODWORD(STACK[0x11A4]) = v37;
  v20[328] = v32;
  v20[331] = v22[30];
  LODWORD(STACK[0x11A8]) = STACK[0x18CC];
  v40 = v22[28];
  v20[333] = v22[29];
  v20[462] = v38;
  v20[336] = v22[14];
  v20[338] = v40;
  LODWORD(STACK[0x11AC]) = STACK[0x18BC];
  v41 = v22[26];
  v20[341] = v22[27];
  LODWORD(STACK[0x11BC]) = STACK[0x18B8];
  v20[343] = v41;
  v20[345] = v22[24];
  v20[346] = v22[39];
  v20[347] = v22[36];
  v20[348] = v22[21];
  v42 = v22[17];
  v20[350] = v22[18];
  v20[463] = v22[57];
  LODWORD(STACK[0x11D4]) = STACK[0x18B4];
  v20[353] = v42;
  LODWORD(STACK[0x11F4]) = STACK[0x1894];
  LODWORD(STACK[0x1214]) = 1718210905;
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * ((28
                                * (((v24 - 71321391) & 0xFFFDC7FD) - v23 + 91 - 0x6491BFF103318FD2 + v39 < 0xFFFFFFFB)) ^ v24)))();
}

uint64_t sub_1A27451F4@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t (*v13)(void);

  v5 = v4[35];
  v6 = v4[36];
  v7 = v4[75] - 0x6491BFF103318E8ELL > (unint64_t)*(unsigned int *)(v5 + 8);
  v1[267] = v4[32];
  LODWORD(STACK[0x104C]) = STACK[0x18E4];
  LODWORD(STACK[0x1050]) = STACK[0x1884];
  v8 = v4[30];
  v1[270] = v4[31];
  v1[271] = v5;
  v1[272] = v8;
  LODWORD(STACK[0x1054]) = STACK[0x18CC];
  v9 = v4[28];
  v1[274] = v4[29];
  v1[448] = v4[65];
  v1[275] = v4[14];
  v1[279] = v9;
  LODWORD(STACK[0x1074]) = STACK[0x18BC];
  v10 = v4[26];
  v1[281] = v4[27];
  LODWORD(STACK[0x10C4]) = STACK[0x18B8];
  v11 = v7;
  v1[284] = v10;
  v1[285] = v4[24];
  v1[288] = v4[39];
  v1[290] = v6;
  v1[291] = v4[21];
  v12 = v4[17];
  v1[292] = v4[18];
  v1[455] = v4[57];
  LODWORD(STACK[0x10E0]) = STACK[0x18B4];
  v1[293] = v12;
  v13 = (uint64_t (*)(void))(4223502164 - (a1 - 71465448) + *(_QWORD *)(v3 + 8 * ((934 * v11) ^ a1)) - 8);
  LODWORD(STACK[0x1100]) = v2;
  return v13();
}

void sub_1A27452FC(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = STACK[0x1884];
  v5 = (a1 ^ 0xD5D790F3) + LODWORD(STACK[0x1884]);
  v6 = *(_QWORD *)(v2 + 8 * a1) - 12;
  v1[165] = v3[32];
  LODWORD(STACK[0xDDC]) = STACK[0x18E4];
  LODWORD(STACK[0xDEC]) = v4;
  v7 = v3[30];
  v1[168] = v3[31];
  v1[170] = v3[35];
  v1[173] = v7;
  LODWORD(STACK[0xDF0]) = STACK[0x18CC];
  v8 = v3[28];
  v1[174] = v3[29];
  v1[387] = v3[65];
  v1[177] = v3[14];
  v1[178] = v8;
  LODWORD(STACK[0xDF4]) = STACK[0x18BC];
  v9 = v3[26];
  v1[180] = v3[27];
  LODWORD(STACK[0xE14]) = STACK[0x18B8];
  v1[181] = v9;
  v1[394] = v6;
  v1[182] = v3[39];
  v10 = v3[35];
  v1[183] = v3[36];
  v1[184] = v3[17];
  LODWORD(STACK[0xE24]) = STACK[0x1894];
  LODWORD(STACK[0xE3C]) = v5;
  v1[186] = v10;
  JUMPOUT(0x1A2746618);
}

uint64_t sub_1A27453BC()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  int v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  v6 = STACK[0x1974];
  v7 = LODWORD(STACK[0x1974]) == v2;
  LODWORD(STACK[0xA64]) = STACK[0x19FC];
  LODWORD(STACK[0xA74]) = STACK[0x19EC];
  v8 = v4[89];
  v1[3] = v4[90];
  v1[4] = v8;
  v1[7] = v4[88];
  v9 = v4[87];
  v1[278] = v4[109];
  v10 = v4[85];
  v1[9] = v9;
  v1[10] = v10;
  v11 = v4[82];
  LODWORD(STACK[0xA78]) = STACK[0x19C4];
  v12 = v4[80];
  v1[11] = v11;
  v1[12] = v12;
  LODWORD(STACK[0xA7C]) = STACK[0x19C0];
  v1[14] = v4[77];
  v1[17] = v4[76];
  v1[19] = v4[73];
  v13 = v4[70];
  v1[22] = v4[71];
  v1[23] = v13;
  v1[26] = v4[69];
  v1[286] = v4[107];
  LODWORD(STACK[0xA9C]) = STACK[0x19BC];
  v1[28] = v4[68];
  LODWORD(STACK[0xABC]) = STACK[0x1984];
  v14 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2451 * v7) ^ (v0 + 71465260)))
                          - (v0 ^ (v5 + 361))
                          + 124);
  LODWORD(STACK[0xADC]) = v6;
  return v14();
}

uint64_t sub_1A27454A4()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  char v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  v5 = v3[162];
  v1[421] = v5;
  v6 = *(_DWORD *)(v5 + 12);
  v5 += 12;
  v1[422] = v5;
  v7 = (v6 ^ 0xAB371FF05DDFFDFELL) + v1[543] + (((unint64_t)v6 << (v4 + v0 + 10)) & 0xBBBFFBFC);
  v1[553] = v7;
  LODWORD(STACK[0xA64]) = STACK[0x19FC];
  LODWORD(STACK[0xA74]) = STACK[0x19EC];
  v8 = v3[89];
  v1[3] = v5;
  v1[4] = v8;
  v1[7] = v3[88];
  v9 = v3[87];
  v1[278] = v3[109];
  v10 = v3[85];
  v1[9] = v9;
  v1[10] = v10;
  v11 = v1[421];
  LODWORD(STACK[0xA78]) = STACK[0x19C4];
  v12 = v3[80];
  v1[11] = v11;
  v1[12] = v12;
  LODWORD(STACK[0xA7C]) = STACK[0x19C0];
  v1[14] = v3[77];
  v1[17] = v3[76];
  v1[19] = v3[73];
  v13 = v3[70];
  v1[22] = v3[71];
  v1[23] = v13;
  v1[26] = v3[69];
  v1[286] = v3[107];
  LODWORD(STACK[0xA9C]) = STACK[0x19BC];
  v1[28] = v3[68];
  LODWORD(STACK[0xABC]) = STACK[0x1984];
  v14 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1288 * (v7 < 0xFFFFFFFB)) ^ v0)) - ((3 * (v0 ^ 0xF4u)) ^ 0x158));
  LODWORD(STACK[0xADC]) = 1718210905;
  return v14();
}

uint64_t sub_1A27455DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  _QWORD *v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _BOOL4 v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, unint64_t *);

  v9 = *(unsigned int *)(v4[421] + 8);
  v10 = v4[553] + 1201549068;
  v7[165] = v7[91];
  v11 = v10 + 5;
  v12 = (v9 ^ 0xC7FFFFFF7FFFBFB7) + 0x38000000C79E6F56 + ((2 * (_DWORD)v9) & 0xFFFF7F6E);
  LODWORD(STACK[0x67C]) = STACK[0x19FC];
  v14 = v12 > 0x479E2F0C && v11 > v12;
  LODWORD(STACK[0x68C]) = STACK[0x19EC];
  v7[166] = v4[422];
  v7[167] = v7[89];
  v7[168] = v7[88];
  LODWORD(STACK[0x6B4]) = STACK[0x19D4];
  v7[169] = v7[87];
  v4[179] = v7[109];
  v7[170] = v7[85];
  v7[171] = v4[421];
  LODWORD(STACK[0x6C4]) = STACK[0x19C4];
  v7[172] = v7[80];
  LODWORD(STACK[0x6DC]) = STACK[0x19C0];
  v7[173] = v7[77];
  v7[174] = v7[76];
  v7[175] = v7[73];
  v7[176] = v7[71];
  v7[177] = v7[70];
  v7[178] = v7[69];
  v4[188] = v7[107];
  LODWORD(STACK[0x6EC]) = STACK[0x19BC];
  v7[179] = v7[68];
  LODWORD(STACK[0x6F0]) = STACK[0x1984];
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t *))(*(_QWORD *)(v6
                                                                                          + 8 * ((2374 * v14) ^ v3))
                                                                              - ((v8 + v3 - 107) ^ 0xFBBD875CLL));
  LODWORD(STACK[0x6F4]) = v5;
  return v15(a1, a2, a3, &STACK[0x15CF]);
}

void sub_1A2745730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = *(_QWORD *)(v6 + 8 * (int)v4);
  v5[165] = v7[91];
  LODWORD(STACK[0xDDC]) = STACK[0x19FC];
  LODWORD(STACK[0xDEC]) = STACK[0x19EC];
  v5[168] = v5[422];
  v5[170] = v7[89];
  v5[173] = v7[88];
  LODWORD(STACK[0xDF0]) = STACK[0x19D4];
  v5[174] = v7[87];
  v5[387] = v7[109];
  v5[177] = v7[85];
  v5[178] = v5[421];
  LODWORD(STACK[0xDF4]) = STACK[0x19C4];
  v5[180] = v7[80];
  LODWORD(STACK[0xE14]) = STACK[0x19C0];
  v5[181] = v7[77];
  v5[394] = (v4 ^ 0xFFFFFFFFFFFFFEACLL) + v8;
  v5[182] = v7[73];
  v5[183] = v7[71];
  v5[184] = v7[68];
  LODWORD(STACK[0xE24]) = STACK[0x1984];
  LODWORD(STACK[0xE3C]) = STACK[0x1344];
  v5[186] = v5[421];
  *(_QWORD *)(a4 + 113) = v5[186];
  LODWORD(STACK[0x1800]) = STACK[0xE24];
  *(_QWORD *)(a4 + 137) = v5[184];
  *(_QWORD *)(a4 + 153) = v5[183];
  *(_QWORD *)(a4 + 161) = v5[182];
  v9 = v5[394];
  *(_QWORD *)(a4 + 169) = v5[181];
  LODWORD(STACK[0x1804]) = STACK[0xE14];
  *(_QWORD *)(a4 + 177) = v5[180];
  LODWORD(STACK[0x1814]) = STACK[0xDF4];
  *(_QWORD *)(a4 + 233) = v5[178];
  v10 = v5[177];
  v7[22] = v5[387];
  v11 = v5[174];
  *v7 = v10;
  v7[1] = v11;
  LODWORD(STACK[0x182C]) = STACK[0xDF0];
  v12 = v5[170];
  v7[4] = v5[173];
  v7[5] = v12;
  v7[8] = v5[168];
  LODWORD(STACK[0x183C]) = STACK[0xDEC];
  LODWORD(STACK[0x187C]) = STACK[0xDDC];
  v7[10] = v5[165];
  v7[11] = v9;
  JUMPOUT(0x1A274CAC4);
}

uint64_t sub_1A27457F4@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);

  v6 = STACK[0x6F4];
  LODWORD(STACK[0x1374]) = STACK[0x6F0];
  v1[423] = v4[179];
  LODWORD(STACK[0x1394]) = STACK[0x6EC];
  v1[561] = v1[188];
  v1[426] = v4[178];
  v1[427] = v4[177];
  v1[430] = v4[176];
  v1[433] = v4[175];
  v1[435] = v4[174];
  v1[436] = v4[173];
  LODWORD(STACK[0x1398]) = STACK[0x6DC];
  v1[437] = v4[172];
  LODWORD(STACK[0x139C]) = STACK[0x6C4];
  v1[438] = v4[171];
  v1[439] = v4[170];
  v1[576] = v1[179];
  v1[440] = v4[169];
  LODWORD(STACK[0x13AC]) = STACK[0x6B4];
  v7 = v4[168];
  v1[441] = v7;
  v8 = v4[167];
  v1[442] = v8;
  v9 = v4[166];
  v1[444] = v9;
  v10 = STACK[0x68C];
  LODWORD(STACK[0x13C4]) = STACK[0x68C];
  v11 = STACK[0x67C];
  LODWORD(STACK[0x13D4]) = STACK[0x67C];
  v1[447] = v4[165];
  LODWORD(STACK[0xA64]) = v11;
  LODWORD(STACK[0xA74]) = v10;
  v1[3] = v9;
  v1[4] = v8;
  v1[7] = v7;
  v12 = v1[440];
  v1[278] = v1[576];
  v13 = v1[439];
  v1[9] = v12;
  v1[10] = v13;
  v14 = v1[438];
  LODWORD(STACK[0xA78]) = STACK[0x139C];
  v15 = v1[437];
  v1[11] = v14;
  v1[12] = v15;
  LODWORD(STACK[0xA7C]) = STACK[0x1398];
  v1[14] = v1[436];
  v1[17] = v1[435];
  v1[19] = v1[433];
  v16 = v1[427];
  v1[22] = v1[430];
  v1[23] = v16;
  v1[26] = v1[426];
  v1[286] = v1[561];
  LODWORD(STACK[0xA9C]) = STACK[0x1394];
  v1[28] = v1[423];
  LODWORD(STACK[0xABC]) = STACK[0x1374];
  v17 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1530 * (v6 == v2)) ^ (a1 + 71465260)))
                          - (a1 - v5 + 1700)
                          + 1921);
  LODWORD(STACK[0xADC]) = v6;
  return v17();
}

uint64_t sub_1A2745980()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _DWORD *v5;
  unsigned int v6;

  v4 = **(_QWORD **)(v1 + 3504);
  v5 = *(_DWORD **)(v1 + 3552);
  v6 = ((*v5 << ((v0 + 116) & 0x5A ^ (v3 - 26))) & 0xFC773BE6) + (*v5 ^ 0x7E3B9DF3) - 2117837394;
  *(_BYTE *)(v4 + v6 + 1119) = STACK[0x10DC];
  *(_BYTE *)(v4 + v6 + ((v0 - 905) | 0x60)) = STACK[0x10DD];
  *(_BYTE *)(v4 + v6 + 1121) = STACK[0x10DE];
  *(_BYTE *)(v4 + v6 + 1122) = STACK[0x10DF];
  LODWORD(v4) = *v5 + 4;
  LODWORD(STACK[0x140C]) = v4;
  *v5 = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((3628 * ((STACK[0x10FF] & 1) == 0)) ^ v0)) - 4))();
}

uint64_t sub_1A2745A60@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_DWORD *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  uint64_t v53;
  int v54;
  uint64_t *v55;
  _DWORD *v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  unsigned int v60;
  unsigned int v61;
  _BOOL4 v62;

  v54 = STACK[0x140C];
  LODWORD(STACK[0x714]) = STACK[0x140C];
  LODWORD(STACK[0x724]) = 1606619916;
  v55 = *(uint64_t **)(v53 + 3504);
  v56 = *(_DWORD **)(v53 + 3552);
  v57 = LOBYTE(STACK[0x10E7]);
  v58 = STACK[0x1334];
  v59 = *v55;
  v60 = *a24 - 537762601 - (((a1 - 4207713) & 0xFBFDB758 ^ 0x44594EF6) & (2 * *a24));
  v61 = ((2 * v54) & 0xFC6FAAF2) + (v54 ^ 0xFE37D579) + 29895303;
  *(_BYTE *)(*v55 + v61) = HIBYTE(v60) ^ 0xDF;
  *(_BYTE *)(v59 + v61 + 1) = BYTE2(v60) ^ 0xF2;
  *(_BYTE *)(v59 + v61 + 2) = ((BYTE1(v60) ^ 0x64) - ((2 * (BYTE1(v60) ^ 0x64)) & 0x96) + 75) ^ 0x4B;
  *(_BYTE *)(v59 + v61 + 3) = v60 ^ 0xD7;
  *v56 += 4;
  v62 = v58 > 0xE94364BC;
  if (v57)
    v62 = v57;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a53 + 8 * ((424 * !v62) ^ a1)) - 4))(1146703606, 242, 100, 150);
}

uint64_t sub_1A2745BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void (*a25)(uint64_t),int *a26,void (*a27)(uint64_t),uint64_t (*a28)(uint64_t),uint64_t a29)
{
  int v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;

  v34 = (uint64_t *)v32[162];
  v30[450] = v34;
  v32[163] = 0;
  LODWORD(STACK[0x644]) = 0;
  a27(a29);
  v35 = *a26;
  v36 = *v34;
  v37 = *((_DWORD *)v34 + 3);
  v30[453] = (char *)v34 + 12;
  v38 = v30[419];
  v39 = v30[420];
  v40 = 932829133 * (((v33 - 136) & 0x62D6F792 | ~((v33 - 136) | 0x62D6F792)) ^ 0x3D6255E0);
  *(_DWORD *)(v33 - 116) = 1017140188 - v40 + 1793297355 * v35;
  v32[275] = v36;
  v32[278] = v39;
  *(_DWORD *)(v33 - 120) = (v29 + 71466577) ^ v40;
  *(_DWORD *)(v33 - 128) = -532470131 - v40 + v37 - ((2 * v37) & 0xC0864D1A);
  v32[279] = v38;
  a25(v33 - 136);
  LODWORD(v34) = *(_DWORD *)(v33 - 124);
  v41 = a28(a29);
  LODWORD(STACK[0x734]) = (_DWORD)v34;
  return (*(uint64_t (**)(uint64_t))(v31 + 8 * ((27 * ((_DWORD)v34 != 1934675644)) ^ (v29 + 71465935))))(v41);
}

uint64_t sub_1A2745CF4()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((LODWORD(STACK[0x734]) == 10 * (v0 ^ 0xFBBD87CD) + 1666238695)
                                     * ((10 * (v0 ^ 0xFBBD87CD) - 252385267) & 0xF0B12EF ^ 0xD9C)) ^ (10 * (v0 ^ 0xFBBD87CD)))))();
}

void sub_1A2746010(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 + 1312) = 0;
  v4 = *(_QWORD *)(v2 + 8 * a1);
  v1[55] = v1[447];
  LODWORD(STACK[0xB8C]) = STACK[0x13D4];
  LODWORD(STACK[0xB9C]) = STACK[0x13C4];
  v1[57] = v1[444];
  v5 = v1[441];
  v1[60] = v1[442];
  v1[61] = v5;
  LODWORD(STACK[0xBA0]) = STACK[0x13AC];
  v1[64] = v1[440];
  v1[316] = v1[576];
  v1[66] = v1[439];
  v1[67] = v1[438];
  LODWORD(STACK[0xBA4]) = STACK[0x139C];
  v1[68] = v1[437];
  LODWORD(STACK[0xBC4]) = STACK[0x1398];
  v1[324] = v4;
  v1[69] = v1[436];
  v1[71] = v1[435];
  v1[74] = v1[433];
  v1[76] = v1[430];
  v1[78] = v1[427];
  v1[79] = v1[426];
  v1[329] = v1[561];
  LODWORD(STACK[0xBD4]) = STACK[0x1394];
  v1[82] = v1[423];
  LODWORD(STACK[0xBFC]) = STACK[0x1374];
  JUMPOUT(0x1A27460F0);
}

uint64_t sub_1A274624C()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);

  v4[225] = v1[447];
  LODWORD(STACK[0x94C]) = STACK[0x13D4];
  LODWORD(STACK[0x950]) = STACK[0x13C4];
  v4[226] = v1[444];
  v4[227] = v1[442];
  v4[228] = v1[441];
  LODWORD(STACK[0x954]) = STACK[0x13AC];
  v4[229] = v1[440];
  v1[248] = v1[576];
  v4[230] = v1[439];
  v4[231] = v1[438];
  LODWORD(STACK[0x974]) = STACK[0x139C];
  v4[232] = v1[437];
  LODWORD(STACK[0x984]) = STACK[0x1398];
  v4[233] = v1[436];
  v4[234] = v1[435];
  v4[235] = v1[433];
  v4[236] = v1[430];
  v4[237] = v1[427];
  v4[238] = v1[426];
  v1[259] = v1[561];
  LODWORD(STACK[0x9AC]) = STACK[0x1394];
  v4[239] = v1[423];
  v6 = STACK[0x1374];
  LODWORD(STACK[0x9BC]) = STACK[0x1374];
  LODWORD(STACK[0x9D0]) = 1718210891;
  LODWORD(STACK[0x14D4]) = v6;
  v1[492] = v4[239];
  LODWORD(STACK[0x14D8]) = STACK[0x9AC];
  v1[601] = v1[259];
  v1[493] = v4[238];
  v1[496] = v4[237];
  v1[498] = v4[236];
  v1[501] = v4[235];
  v1[502] = v4[234];
  v1[503] = v4[233];
  LODWORD(STACK[0x14DC]) = STACK[0x984];
  v1[506] = v4[232];
  LODWORD(STACK[0x14EC]) = STACK[0x974];
  v1[507] = v4[231];
  v1[510] = v4[230];
  v1[611] = v1[248];
  v1[512] = v4[229];
  LODWORD(STACK[0x1504]) = STACK[0x954];
  v7 = v4[228];
  v1[515] = v7;
  v8 = v4[227];
  v1[516] = v8;
  v9 = v4[226];
  v1[517] = v9;
  v10 = STACK[0x950];
  LODWORD(STACK[0x1514]) = STACK[0x950];
  v11 = STACK[0x94C];
  LODWORD(STACK[0x1544]) = STACK[0x94C];
  v1[520] = v4[225];
  LODWORD(STACK[0xA64]) = v11;
  LODWORD(STACK[0xA74]) = v10;
  v1[3] = v9;
  v1[4] = v8;
  v1[7] = v7;
  v12 = v1[512];
  v1[278] = v1[611];
  v13 = v1[510];
  v1[9] = v12;
  v1[10] = v13;
  v14 = v1[507];
  LODWORD(STACK[0xA78]) = STACK[0x14EC];
  v15 = v1[506];
  v1[11] = v14;
  v1[12] = v15;
  LODWORD(STACK[0xA7C]) = STACK[0x14DC];
  v1[14] = v1[503];
  v1[17] = v1[502];
  v1[19] = v1[501];
  v16 = v1[496];
  v1[22] = v1[498];
  v1[23] = v16;
  v1[26] = v1[493];
  v1[286] = v1[601];
  LODWORD(STACK[0xA9C]) = STACK[0x14D8];
  v1[28] = v1[492];
  LODWORD(STACK[0xABC]) = STACK[0x14D4];
  v17 = (uint64_t (*)(void))(*(_QWORD *)(v3
                                      + 8
                                      * (((v2 == 1718210891) * (((v5 + ((v0 - 1502) | 0x84) + 97) ^ (v5 - 9)) + 466)) ^ ((v0 - 1502) | 0x84)))
                          - 8);
  LODWORD(STACK[0xADC]) = 1718210891;
  return v17();
}

uint64_t sub_1A2746324()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t (*v5)(void);

  v4 = STACK[0x644];
  LODWORD(STACK[0x141C]) = STACK[0x644];
  LODWORD(STACK[0x86C]) = v4;
  *(_QWORD *)(v3 + 1680) = v1[554];
  LODWORD(STACK[0x894]) = STACK[0x1624];
  LODWORD(STACK[0x8A4]) = STACK[0x1604];
  *(_QWORD *)(v3 + 1688) = v1[551];
  *(_QWORD *)(v3 + 1696) = v1[550];
  *(_QWORD *)(v3 + 1704) = v1[549];
  LODWORD(STACK[0x8C4]) = STACK[0x15E4];
  *(_QWORD *)(v3 + 1712) = v1[548];
  v1[231] = STACK[0x1648];
  *(_QWORD *)(v3 + 1720) = v1[547];
  *(_QWORD *)(v3 + 1728) = v1[545];
  LODWORD(STACK[0x8C8]) = STACK[0x15A4];
  *(_QWORD *)(v3 + 1736) = v1[542];
  LODWORD(STACK[0x8CC]) = STACK[0x1594];
  *(_QWORD *)(v3 + 1744) = v1[540];
  *(_QWORD *)(v3 + 1752) = v1[538];
  *(_QWORD *)(v3 + 1760) = v1[537];
  *(_QWORD *)(v3 + 1768) = v1[534];
  *(_QWORD *)(v3 + 1776) = v1[532];
  *(_QWORD *)(v3 + 1784) = v1[531];
  v1[242] = STACK[0x1608];
  LODWORD(STACK[0x8EC]) = STACK[0x157C];
  *(_QWORD *)(v3 + 1792) = v1[530];
  LODWORD(STACK[0x91C]) = STACK[0x156C];
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((57 * *(unsigned __int8 *)(v3 + 435)) ^ (v0 + 71467335)))
                         - (((v0 + 71466296) | 0x14Eu) ^ 0x5DALL));
  LODWORD(STACK[0x92C]) = STACK[0x1628];
  return v5();
}

uint64_t sub_1A274644C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t (*v12)(void);

  v10 = v8[164];
  v5[454] = v10;
  v11 = LODWORD(STACK[0x141C]) <= *(_DWORD *)(v10 + 8);
  v8[180] = v5[554];
  LODWORD(STACK[0x754]) = STACK[0x1604];
  v8[181] = v5[551];
  v8[182] = v5[550];
  v8[183] = v5[549];
  LODWORD(STACK[0x764]) = STACK[0x15E4];
  v8[184] = v5[548];
  v5[196] = *(_QWORD *)(a4 + 121);
  v8[185] = v5[547];
  v8[186] = v5[545];
  LODWORD(STACK[0x77C]) = STACK[0x15A4];
  v8[187] = v5[542];
  LODWORD(STACK[0x78C]) = STACK[0x1594];
  v8[188] = v5[540];
  v8[189] = v5[538];
  v8[190] = v5[537];
  v8[191] = v5[534];
  v8[192] = v5[532];
  v8[193] = v5[531];
  v5[207] = *(_QWORD *)(a4 + 57);
  LODWORD(STACK[0x790]) = STACK[0x157C];
  v8[194] = v5[530];
  LODWORD(STACK[0x794]) = STACK[0x156C];
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((v11 * ((v4 - 202) ^ (v9 + 208) ^ (v9 + 203))) ^ (v4 + 1753)))
                          - (((v4 - 202) | 0x100u) ^ 0x113));
  LODWORD(STACK[0x7B4]) = v6;
  return v12();
}

void sub_1A2746560(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 + 8 * a2);
  v2[165] = v2[554];
  LODWORD(STACK[0xDDC]) = STACK[0x1624];
  LODWORD(STACK[0xDEC]) = STACK[0x1604];
  v2[168] = v2[551];
  v2[170] = v2[550];
  v2[173] = v2[549];
  LODWORD(STACK[0xDF0]) = STACK[0x15E4];
  v2[174] = v2[548];
  v2[387] = *(_QWORD *)(a1 + 121);
  v2[177] = v2[547];
  v2[178] = v2[545];
  LODWORD(STACK[0xDF4]) = STACK[0x15A4];
  v2[180] = v2[542];
  LODWORD(STACK[0xE14]) = STACK[0x1594];
  v2[181] = v2[540];
  v2[394] = v4;
  v2[182] = v2[537];
  v2[183] = v2[534];
  v2[184] = v2[530];
  LODWORD(STACK[0xE24]) = STACK[0x156C];
  LODWORD(STACK[0xE3C]) = STACK[0x141C];
  JUMPOUT(0x1A2746614);
}

void sub_1A2746724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unsigned int *a33,void (*a34)(_QWORD, unint64_t, _QWORD))
{
  _QWORD *v34;
  _QWORD *v35;
  unint64_t v36;
  int v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  int v47;
  unint64_t v48;
  int v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  int v57;
  unint64_t v58;

  v58 = v35[224];
  v57 = STACK[0x8EC];
  v55 = v35[223];
  v56 = v34[242];
  v53 = v35[221];
  v54 = v35[222];
  v51 = v35[219];
  v52 = v35[220];
  v50 = v35[218];
  v49 = STACK[0x8CC];
  v48 = v35[217];
  v47 = STACK[0x8C8];
  v45 = v35[215];
  v46 = v35[216];
  v44 = v34[231];
  v36 = v35[214];
  v37 = STACK[0x8C4];
  v38 = v35[213];
  v39 = v35[212];
  v40 = v35[211];
  v41 = STACK[0x8A4];
  v42 = STACK[0x894];
  v43 = STACK[0x1D60];
  a34(*a33, STACK[0x1BE8], LODWORD(STACK[0x86C]));
  STACK[0x1DD8] = v43;
  LODWORD(STACK[0x94C]) = v42;
  LODWORD(STACK[0x950]) = v41;
  STACK[0x1DE0] = v40;
  STACK[0x1DE8] = v39;
  STACK[0x1DF0] = v38;
  LODWORD(STACK[0x954]) = v37;
  STACK[0x1DF8] = v36;
  v34[248] = v44;
  STACK[0x1E00] = v45;
  STACK[0x1E08] = v46;
  LODWORD(STACK[0x974]) = v47;
  STACK[0x1E10] = v48;
  LODWORD(STACK[0x984]) = v49;
  STACK[0x1E18] = v50;
  STACK[0x1E20] = v51;
  STACK[0x1E28] = v52;
  STACK[0x1E30] = v53;
  STACK[0x1E38] = v54;
  STACK[0x1E40] = v55;
  v34[259] = v56;
  LODWORD(STACK[0x9AC]) = v57;
  STACK[0x1E48] = v58;
  JUMPOUT(0x1A2746F00);
}

uint64_t sub_1A2747084(uint64_t a1, uint64_t a2)
{
  int v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = 3 * (v2 ^ 0x35B);
  v7 = *(_QWORD *)(v4 + 8 * v2);
  v8 = v3[520];
  LOBYTE(STACK[0x15CF]) = v8 == 0;
  v3[521] = v8 + 12;
  v3[524] = v8 + 8;
  v3[260] = v7;
  v9 = v3[503];
  *(_QWORD *)(v5 + 1920) = v9;
  *(_QWORD *)(v5 + 1928) = &STACK[0x65C];
  v3[526] = v9;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                        + 8
                                                                        * ((((v6 - 1338245619) | 0x4B818210) + 71466047) ^ (13 * (LOBYTE(STACK[0x15CF]) ^ 1))))
                                                            - ((((v6 - 1338245619) | 0x4B818210) + 1830352039) & 0x97298797)
                                                            + 907))(a1, a2, 1718210905);
}

uint64_t sub_1A27471EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,_DWORD *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unsigned int *a36)
{
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _BOOL4 v39;
  BOOL v40;
  int v41;
  int v42;
  int v43;

  v37 = (*a36 ^ 0x766FBD8BCBFDFBFFLL)
      - 0x766FBD8B6DE5B8CCLL
      + (((unint64_t)*a36 << (a9 + 106)) & 0x197FBF7FELL);
  v38 = (*a31 ^ 0x7DF7F77B1EFBF73FLL) - 0x7DF7F77AC0E3B410 + ((2 * *a31) & 0x3DF7EE7E);
  v39 = v37 < 0x5E18432F;
  v40 = v37 > v38;
  v41 = v39 ^ (v38 < 0x5E18432F);
  v42 = v40;
  if (v41)
    v43 = v39;
  else
    v43 = v42;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 + 8 * ((3016 * (v43 ^ 1)) ^ a9)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_1A27472E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,_DWORD *a30,uint64_t a31,int a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,_QWORD *a54)
{
  _DWORD *v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  int v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  int v62;
  unsigned int v63;

  v57 = (a32 ^ 0x29DA6AA5 ^ (v56 + a3 - 690)) + ((2 * a32) & 0xA4CFDBFA) + 764940803;
  v58 = *(unsigned __int8 *)(*a54 + v57);
  v59 = *(unsigned __int8 *)(*a54 + v57 + 1);
  v60 = *(unsigned __int8 *)(*a54 + v57 + 2);
  v61 = (((v59 - ((2 * v59) & 0x13A)) << 16) - 1902313472) ^ 0x8E9D0000 | (((v58 - ((2 * v58) & 0x16)) << 24)
                                                                         - 1962934272) ^ 0x8B000000 | (((v60 + 3338208 - ((2 * v60) & 0xBBBBBBBB)) << 8) - 768) ^ 0x32EFDD00;
  v62 = *(unsigned __int8 *)(*a54 + v57 + 3);
  v63 = ((v62 - 285719737 - ((2 * v62) & 0x8E)) ^ 0xE7A74194) & ~v61 | v61 & 0xF6A0FD00;
  *v54 = (((v63 ^ 0x7F619929) - 1972886616) ^ ((v63 ^ 0x5B2A7D6C) - 1373386781) ^ ((v63 ^ 0x2D14E696) - 669164519))
       + 1779679125;
  *a30 += 4;
  return v55(a1, a2, 1718253555);
}

uint64_t sub_1A274747C()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v3 + 8 * ((v1 + 71465878) ^ (1234 * v0)))
                                         - ((v1 - v4 + 617) ^ ((v1 + 71465360) | 0x206u) ^ 0x1ACLL)))(*(_QWORD *)(v2 + 3936));
}

uint64_t sub_1A2747538(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2
                                                     + 8
                                                     * (((LODWORD(STACK[0x65C]) == (a2 ^ (v3 - 189)) + 1789718683)
                                                       * (a2 - 724)) ^ a2))
                                         - 12))(*(_QWORD *)(v4 + 3936));
}

void sub_1A27475DC()
{
  JUMPOUT(0x1A2747194);
}

#error "1A274773C: call analysis failed (funcsize=74)"

#error "1A2747830: call analysis failed (funcsize=60)"

#error "1A2747A08: call analysis failed (funcsize=100)"

void sub_1A2747A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  **(_DWORD **)(v1 + 4168) = LODWORD(STACK[0x1564]) - 1718253555 + LODWORD(STACK[0x1568]);
  *(_QWORD *)(v1 + 2080) = (((_DWORD)v0 + 57) | 0x609u) + *(_QWORD *)(v2 + 8 * v0) - 1855;
  JUMPOUT(0x1A27470E8);
}

void sub_1A2747A84(uint64_t a1@<X0>, unint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, unint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38,int a39,int a40,int a41,char a42,unint64_t a43,unint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;
  uint64_t a66;
  uint64_t a67;
  int v67;
  int v68;
  unint64_t v69;
  uint64_t v70;
  int v71;
  int v72;
  int v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t *v77;
  int v78;
  uint64_t v79;
  int v80;
  unint64_t v81;
  int v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  int v88;
  uint64_t v89;
  unint64_t v90;
  int v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  int v95;
  int v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v77[467] = a43;
  v77[355] = a44;
  STACK[0x19B0] = a44;
  STACK[0x19C8] = a43;
  LOBYTE(STACK[0x10C3]) = a42;
  LODWORD(STACK[0x1218]) = a39;
  LODWORD(STACK[0x1A5C]) = a37;
  LODWORD(STACK[0x1A60]) = a39;
  LOBYTE(STACK[0x1A67]) = a42;
  STACK[0x1E60] = a2;
  LODWORD(STACK[0x9D4]) = v71;
  LODWORD(STACK[0x9D8]) = v68;
  LODWORD(STACK[0x9DC]) = a6;
  STACK[0x1E68] = v76;
  STACK[0x1E70] = v74;
  STACK[0x1E78] = a7;
  LODWORD(STACK[0x9FC]) = v67;
  STACK[0x1E80] = v69;
  v77[268] = v70;
  LODWORD(STACK[0xA0C]) = v73;
  v99 = v75;
  v100 = v79;
  STACK[0x208] = v81;
  STACK[0x220] = a3;
  v77[276] = a5;
  LODWORD(STACK[0xA34]) = v72;
  *v77 = a1;
  LODWORD(STACK[0xA44]) = v78;
  v82 = STACK[0xA44];
  v83 = *v77;
  v84 = STACK[0xA34];
  v85 = v77[276];
  v86 = STACK[0x220];
  v87 = STACK[0x208];
  v88 = STACK[0xA0C];
  v89 = v77[268];
  v90 = STACK[0x1E80];
  v91 = STACK[0x9FC];
  v92 = STACK[0x1E78];
  v93 = STACK[0x1E70];
  v94 = STACK[0x1E68];
  v95 = STACK[0x9DC];
  v96 = STACK[0x9D8];
  v97 = STACK[0x1E60];
  v98 = ((v80 + 422967213) & 0xE6CA07D7) + *(_QWORD *)(a63 + 8 * (v80 - 714)) - 731;
  LODWORD(STACK[0x121C]) = STACK[0x9D4];
  LODWORD(STACK[0x122C]) = v95;
  v77[358] = v94;
  v77[359] = v93;
  v77[362] = v92;
  LODWORD(STACK[0x1244]) = v91;
  v77[364] = v90;
  v77[468] = v89;
  v77[365] = a65;
  v77[366] = a66;
  LODWORD(STACK[0x1264]) = v88;
  v77[367] = a67;
  LODWORD(STACK[0x1284]) = v96;
  v77[369] = a4;
  v77[477] = v98;
  v77[372] = a8;
  v77[374] = v99;
  v77[377] = v100;
  v77[378] = v87;
  v77[381] = v86;
  v77[485] = v85;
  LODWORD(STACK[0x1288]) = v84;
  v77[384] = v83;
  LODWORD(STACK[0x128C]) = v82;
  v77[386] = v97;
  JUMPOUT(0x1A274825CLL);
}

void sub_1A27480D8()
{
  _QWORD *v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;

  v1 = STACK[0xADC];
  v2 = STACK[0xABC];
  v3 = v0[28];
  v4 = STACK[0xA9C];
  v5 = v0[286];
  v6 = v0[26];
  v8 = v0[22];
  v7 = v0[23];
  v9 = v0[19];
  v10 = v0[17];
  v11 = v0[14];
  v12 = STACK[0xA7C];
  v13 = STACK[0xA78];
  v15 = v0[11];
  v14 = v0[12];
  v16 = v0[278];
  v18 = v0[9];
  v17 = v0[10];
  v19 = v0[7];
  v21 = v0[3];
  v20 = v0[4];
  v22 = STACK[0xA74];
  LODWORD(STACK[0xAF4]) = STACK[0xA64];
  LODWORD(STACK[0xB04]) = v22;
  v0[29] = v21;
  v0[30] = v20;
  v0[31] = v19;
  v0[33] = v18;
  v0[297] = v16;
  v0[36] = v17;
  LODWORD(STACK[0xB08]) = v1;
  v0[38] = v15;
  LODWORD(STACK[0xB0C]) = v13;
  LODWORD(STACK[0xB2C]) = v12;
  v0[41] = v14;
  v0[42] = v11;
  v0[45] = v10;
  v0[47] = v9;
  v0[48] = v8;
  v0[49] = v7;
  v0[50] = v6;
  v0[305] = v5;
  LODWORD(STACK[0xB3C]) = v4;
  v0[52] = v3;
  LODWORD(STACK[0xB64]) = v2;
  JUMPOUT(0x1A2748180);
}

void sub_1A2748374()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_1A274837C(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 - 71467341) ^ (v2 + 213)) * (a1 != 0)) ^ v1)))();
}

uint64_t sub_1A27483AC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  **(_DWORD **)(v0 + 4480) = 4096;
  *(_QWORD *)(v0 + 680) = *(_QWORD *)(v0 + 4464);
  LOBYTE(STACK[0xE3B]) = 1;
  LODWORD(STACK[0xC0C]) = v1;
  LODWORD(STACK[0x1628]) = STACK[0xC0C];
  *(_BYTE *)(v2 + 435) = STACK[0xE3B];
  **(_QWORD **)(v0 + 4232) = *(_QWORD *)(v0 + 680);
  return (*(uint64_t (**)(void))(v0 + 4440))();
}

uint64_t sub_1A2748418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  _QWORD *v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t (*v15)(void);

  v7 = STACK[0xD2C];
  LODWORD(STACK[0x16C4]) = STACK[0xD1C];
  v5[588] = v5[135];
  LODWORD(STACK[0x16E4]) = STACK[0xCE4];
  *(_QWORD *)(a4 + 217) = v5[371];
  v5[589] = v5[134];
  v5[590] = v5[131];
  v5[591] = v5[129];
  v5[594] = v5[126];
  v5[595] = v5[124];
  v5[598] = v5[123];
  LODWORD(STACK[0x16E8]) = STACK[0xCD4];
  v5[600] = v5[122];
  LODWORD(STACK[0x16EC]) = STACK[0xCD0];
  v5[603] = v5[121];
  v5[605] = v5[119];
  *(_QWORD *)(a4 + 249) = v5[360];
  v5[606] = v5[116];
  v8 = STACK[0xCCC];
  LODWORD(STACK[0x170C]) = STACK[0xCCC];
  v9 = v5[115];
  v5[607] = v9;
  v10 = v5[112];
  v5[608] = v10;
  v11 = v5[110];
  v5[609] = v11;
  v12 = STACK[0xCBC];
  LODWORD(STACK[0x171C]) = STACK[0xCBC];
  v13 = STACK[0xCA4];
  LODWORD(STACK[0x174C]) = STACK[0xCA4];
  v14 = v5[108];
  v5[612] = v14;
  v5[138] = v14;
  LODWORD(STACK[0xD44]) = v13;
  LODWORD(STACK[0xD54]) = v12;
  v5[140] = v11;
  v5[141] = v10;
  v5[142] = v9;
  LODWORD(STACK[0xD58]) = v8;
  v5[143] = v5[606];
  v5[379] = *(_QWORD *)(a4 + 249);
  v5[145] = v5[605];
  v5[148] = v5[603];
  LODWORD(STACK[0xD5C]) = STACK[0x16EC];
  v5[150] = v5[600];
  LODWORD(STACK[0xD7C]) = STACK[0x16E8];
  v5[153] = v5[598];
  v5[154] = v5[595];
  v5[157] = v5[594];
  v5[159] = v5[591];
  v5[161] = v5[590];
  v5[162] = v5[589];
  v5[383] = *(_QWORD *)(a4 + 217);
  LODWORD(STACK[0xD8C]) = STACK[0x16E4];
  v5[163] = v5[588];
  LODWORD(STACK[0xDB4]) = STACK[0x16C4];
  v15 = (uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((3358 * (v7 == (v4 ^ 0xD59E86E5) + 944207414)) ^ (v4 + 71466663)))
                          - 4);
  LODWORD(STACK[0xDC4]) = v7;
  return v15();
}

uint64_t sub_1A27485CC@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t (*v10)(void);

  v5 = **(_QWORD **)(v2 + 4848);
  v6 = *(_DWORD **)(v2 + 4800);
  v7 = STACK[0x16EC];
  v8 = LODWORD(STACK[0x16EC]) - 537762601 - ((2 * LODWORD(STACK[0x16EC])) & 0xBFE4C9AE);
  v9 = ((a2 - 817579803) & (2 * *v6)) + (*v6 ^ 0x7EB3DD51) - 2125716817;
  *(_BYTE *)(v5 + v9) = HIBYTE(v8) ^ 0xDF;
  *(_BYTE *)(v5 + v9 + 1) = BYTE2(v8) ^ 0xF2;
  *(_BYTE *)(v5 + v9 + 2) = ((BYTE1(v8) ^ 0x64) - ((2 * (BYTE1(v8) ^ 0x64)) & 0x96) + 75) ^ 0x4B;
  *(_BYTE *)(v5 + v9 + 3) = v8 ^ 0xD7;
  *v6 += 4;
  *(_QWORD *)(v2 + 1104) = *(_QWORD *)(v2 + 4896);
  LODWORD(STACK[0xD44]) = STACK[0x174C];
  LODWORD(STACK[0xD54]) = STACK[0x171C];
  *(_QWORD *)(v2 + 1120) = *(_QWORD *)(v2 + 4872);
  *(_QWORD *)(v2 + 1128) = *(_QWORD *)(v2 + 4864);
  *(_QWORD *)(v2 + 1136) = *(_QWORD *)(v2 + 4856);
  LODWORD(STACK[0xD58]) = STACK[0x170C];
  *(_QWORD *)(v2 + 1144) = *(_QWORD *)(v2 + 4848);
  *(_QWORD *)(v2 + 3032) = *(_QWORD *)(a1 + 249);
  *(_QWORD *)(v2 + 1160) = *(_QWORD *)(v2 + 4840);
  *(_QWORD *)(v2 + 1184) = *(_QWORD *)(v2 + 4824);
  LODWORD(STACK[0xD5C]) = v7;
  *(_QWORD *)(v2 + 1200) = *(_QWORD *)(v2 + 4800);
  LODWORD(STACK[0xD7C]) = STACK[0x16E8];
  *(_QWORD *)(v2 + 1224) = *(_QWORD *)(v2 + 4784);
  *(_QWORD *)(v2 + 1232) = *(_QWORD *)(v2 + 4760);
  *(_QWORD *)(v2 + 1256) = *(_QWORD *)(v2 + 4752);
  *(_QWORD *)(v2 + 1272) = *(_QWORD *)(v2 + 4728);
  *(_QWORD *)(v2 + 1288) = *(_QWORD *)(v2 + 4720);
  *(_QWORD *)(v2 + 1296) = *(_QWORD *)(v2 + 4712);
  *(_QWORD *)(v2 + 3064) = *(_QWORD *)(a1 + 217);
  LODWORD(STACK[0xD8C]) = STACK[0x16E4];
  *(_QWORD *)(v2 + 1304) = *(_QWORD *)(v2 + 4704);
  LODWORD(STACK[0xDB4]) = STACK[0x16C4];
  LODWORD(STACK[0xDC4]) = v3;
  LODWORD(STACK[0x1768]) = STACK[0xDC4];
  LODWORD(STACK[0x176C]) = STACK[0xDB4];
  *(_QWORD *)(v2 + 4904) = *(_QWORD *)(v2 + 1304);
  LODWORD(STACK[0x1770]) = STACK[0xD8C];
  *(_QWORD *)(v4 + 48) = *(_QWORD *)(v2 + 3064);
  *(_QWORD *)(v2 + 4928) = *(_QWORD *)(v2 + 1296);
  *(_QWORD *)(v2 + 4944) = *(_QWORD *)(v2 + 1288);
  *(_QWORD *)(v2 + 4968) = *(_QWORD *)(v2 + 1272);
  *(_QWORD *)(v2 + 4984) = *(_QWORD *)(v2 + 1256);
  *(_QWORD *)(v2 + 4992) = *(_QWORD *)(v2 + 1232);
  *(_QWORD *)(v2 + 5000) = *(_QWORD *)(v2 + 1224);
  LODWORD(STACK[0x1774]) = STACK[0xD7C];
  *(_QWORD *)(v2 + 5008) = *(_QWORD *)(v2 + 1200);
  LODWORD(STACK[0x178C]) = STACK[0xD5C];
  *(_QWORD *)(a1 + 1) = *(_QWORD *)(v2 + 1184);
  *(_QWORD *)(a1 + 9) = *(_QWORD *)(v2 + 1160);
  *(_QWORD *)(v4 + 128) = *(_QWORD *)(v2 + 3032);
  *(_QWORD *)(a1 + 33) = *(_QWORD *)(v2 + 1144);
  LODWORD(STACK[0x179C]) = STACK[0xD58];
  v10 = *(uint64_t (**)(void))(v2 + 1136);
  *(_QWORD *)(a1 + 41) = v10;
  *(_QWORD *)(a1 + 65) = *(_QWORD *)(v2 + 1128);
  *(_QWORD *)(a1 + 73) = *(_QWORD *)(v2 + 1120);
  LODWORD(STACK[0x17DC]) = STACK[0xD54];
  LODWORD(STACK[0x17FC]) = STACK[0xD44];
  *(_QWORD *)(a1 + 97) = *(_QWORD *)(v2 + 1104);
  return v10();
}

uint64_t sub_1A2748818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, int a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (v7 ^ ((v8 & ~v9) * a7))) - (((v7 + a5) & a6) - v11 + 753) + 978))();
}

uint64_t sub_1A274887C()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((v3 ^ (2 * (v4 ^ v0))) + 547) ^ v4 ^ v0 ^ v2) * ((v1 & 0xFFFFFFFF80000000) != 0)) ^ v4 ^ v0)))();
}

uint64_t sub_1A27488A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;

  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((((((v8 & 0xFFFFFFFF80000000) != 0) ^ (v9 - 56)) & 1) * (v9 ^ a8)) ^ v9)))();
}

uint64_t sub_1A27488D0(int a1)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 - 1866) * a1) ^ v1)))();
}

uint64_t sub_1A2748904(uint64_t a1, unsigned int a2, int a3, int a4)
{
  int v4;
  char v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((((v4 - 31 + a3) & a4) + 3089) * (v5 & 1)) ^ (v4 - 31)))
                            - ((v4 - 31) ^ a2 ^ 0xFBBD875CLL)))();
}

uint64_t sub_1A2748944()
{
  uint64_t v0;
  int v1;
  unint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  v3[400] = v0;
  v5[42] = v0;
  v6 = v5[11];
  v3[217] = v5[10];
  LODWORD(STACK[0xF08]) = STACK[0x187C];
  LODWORD(STACK[0xF0C]) = STACK[0x183C];
  v3[218] = v5[8];
  v7 = v5[4];
  v3[219] = v5[5];
  v3[220] = v7;
  LODWORD(STACK[0xF10]) = STACK[0x182C];
  v8 = *v5;
  v3[222] = v5[1];
  v3[425] = v5[22];
  v3[225] = v8;
  v3[226] = STACK[0x16B8];
  LODWORD(STACK[0xF14]) = STACK[0x1814];
  v3[229] = STACK[0x1680];
  LODWORD(STACK[0xF2C]) = STACK[0x1804];
  v3[230] = STACK[0x1678];
  v3[233] = v6;
  v3[235] = STACK[0x1670];
  v3[236] = STACK[0x1668];
  v3[237] = STACK[0x1640];
  v3[238] = v5[12];
  v3[431] = v5[42];
  LODWORD(STACK[0xF3C]) = 1718210905;
  v3[240] = STACK[0x1658];
  LODWORD(STACK[0xF74]) = STACK[0x1800];
  v9 = (uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((*((unsigned __int8 *)v5 + 871) * (v1 - 1002)) ^ v1))
                         - (((v1 - 233569965) | 0x9A98218u) ^ v2));
  LODWORD(STACK[0xF90]) = 1718210905;
  return v9();
}

uint64_t sub_1A2748A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t (*a32)(uint64_t, uint64_t))
{
  int v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(void);

  v36 = a32(v35[42], 2241923698);
  v35[13] = v36;
  v37 = v35[11];
  v33[189] = v35[10];
  LODWORD(STACK[0xE6C]) = STACK[0x187C];
  LODWORD(STACK[0xE7C]) = STACK[0x183C];
  v33[191] = v35[8];
  v38 = v35[4];
  v33[194] = v35[5];
  v33[195] = v38;
  LODWORD(STACK[0xE90]) = STACK[0x182C];
  v39 = *v35;
  v33[198] = v35[1];
  v33[408] = v35[22];
  v33[200] = v39;
  v33[201] = STACK[0x16B8];
  LODWORD(STACK[0xE94]) = STACK[0x1814];
  v33[202] = STACK[0x1680];
  LODWORD(STACK[0xE98]) = STACK[0x1804];
  v33[203] = STACK[0x1678];
  v33[205] = v37;
  v33[208] = STACK[0x1670];
  v33[209] = STACK[0x1668];
  v33[212] = STACK[0x1640];
  v33[213] = v35[12];
  v33[414] = v35[42];
  LODWORD(STACK[0xE9C]) = 1718253555;
  v33[216] = 0;
  LODWORD(STACK[0xEBC]) = STACK[0x1800];
  v40 = (uint64_t (*)(void))(*(_QWORD *)(v34 + 8 * (((v36 != 0) * ((v32 - 341) ^ 0x67D)) ^ (v32 - 341)))
                          - ((v32 + 1702324224) & 0x9A8897FF ^ 0x3E5));
  LODWORD(STACK[0xEEC]) = 1718210903;
  return v40();
}

void sub_1A2748B80()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = (*(unsigned int *)v5[12] ^ 0x936B7FF7FDFFF2F7)
     + 0x7DFFDBEBEFFE4F80
     + ((2 * *(unsigned int *)v5[12]) & 0x1FBFFE5EELL);
  v7 = (v6 ^ ((((_DWORD)v1 + 248) | 0xCu) + 0x681060FAC885BB58)) & (2 * (v6 & 0x41201BD89)) ^ v6 & 0x41201BD89;
  v8 = v5[11];
  v2[388] = v5[10];
  LODWORD(STACK[0x1298]) = STACK[0x187C];
  LODWORD(STACK[0x129C]) = STACK[0x183C];
  v9 = ((2 * (v6 ^ 0x681060F2CC848634)) ^ 0x9090915BD0A777ALL) & (v6 ^ 0x681060F2CC848634) ^ (2
                                                                                                * (v6 ^ 0x681060F2CC848634)) & 0x8684C4EEDE853BBCLL;
  v2[389] = v5[8];
  v10 = v5[4];
  v11 = (v9 ^ 0x98003228) & (4 * v7) ^ v7;
  v2[390] = v5[5];
  v2[392] = v10;
  LODWORD(STACK[0x12AC]) = STACK[0x182C];
  v12 = *v5;
  v13 = ((4 * (v9 ^ 0x8284442242850885)) ^ 0x1A1313BB7A14EEF4) & (v9 ^ 0x8284442242850885) ^ (4
                                                                                                  * (v9 ^ 0x8284442242850885)) & 0x8684C4EEDE853BBCLL;
  v2[395] = v5[1];
  v2[491] = v5[22];
  v2[398] = v12;
  v14 = (v13 ^ 0x20000AA5A042AB0) & (16 * v11) ^ v11;
  v2[399] = *(_QWORD *)(v0 + 233);
  LODWORD(STACK[0x12EC]) = STACK[0x1814];
  v15 = ((16 * (v13 ^ 0x8484C44484811109)) ^ 0x684C4EEDE853BBD0) & (v13 ^ 0x8484C44484811109) ^ (16 * (v13 ^ 0x8484C44484811109)) & 0x8684C4EEDE853BB0;
  v2[402] = *(_QWORD *)(v0 + 177);
  v16 = (v15 ^ 0x444ECC8013B00) & (v14 << 8) ^ v14;
  LODWORD(STACK[0x1308]) = STACK[0x1804];
  v17 = **(_QWORD **)(v0 + 113);
  v18 = *(_QWORD *)(v4 + 8 * v1);
  v19 = (((v15 ^ 0x868080021684002DLL) << 8) ^ 0x84C4EEDE853BBD00) & (v15 ^ 0x868080021684002DLL) ^ ((v15 ^ 0x868080021684002DLL) << 8) & 0x8684C4EEDE853B00;
  v2[403] = *(_QWORD *)(v0 + 169);
  v2[404] = v8;
  v2[499] = v18;
  v2[405] = *(_QWORD *)(v0 + 161);
  v20 = v6 ^ (2 * ((v19 & 0x44841A8500000000 | 0x200002800000000) ^ v16 ^ (v19 ^ 0x484C4CE84010000) & (v16 << 16))) ^ 0x41F338FC3838B9A1;
  v2[406] = *(_QWORD *)(v0 + 153);
  v2[409] = *(_QWORD *)(v0 + 113);
  v21 = v5[13];
  v2[410] = v5[12];
  v2[505] = v5[42];
  LODWORD(STACK[0x130C]) = v3;
  v2[413] = v21;
  LODWORD(STACK[0x131C]) = STACK[0x1800];
  v2[416] = v21;
  v2[513] = 0x10067F75D0A830F1;
  v2[418] = v17;
  v2[519] = v20;
  JUMPOUT(0x1A2746A6CLL);
}

uint64_t sub_1A2748E90()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2[400] = v0;
  v3[42] = v1;
  v4 = v3[11];
  v2[222] = v3[10];
  v2[225] = v3[8];
  v5 = v3[4];
  v2[226] = v3[5];
  v2[229] = v4;
  v2[230] = v5;
  v2[425] = v3[22];
  v6 = *v3;
  v2[233] = v3[1];
  v2[235] = v6;
  v2[236] = STACK[0x16B8];
  LODWORD(STACK[0xF10]) = STACK[0x187C];
  LODWORD(STACK[0xF14]) = STACK[0x183C];
  v2[237] = STACK[0x1680];
  LODWORD(STACK[0xF2C]) = STACK[0x182C];
  v2[238] = STACK[0x1678];
  LODWORD(STACK[0xF3C]) = STACK[0x1814];
  v2[240] = STACK[0x1670];
  v2[243] = STACK[0x1668];
  LODWORD(STACK[0xF74]) = STACK[0x1804];
  v2[246] = STACK[0x1640];
  v2[247] = v3[12];
  v2[431] = v3[42];
  LODWORD(STACK[0xF90]) = 1718210905;
  v2[250] = STACK[0x1658];
  LODWORD(STACK[0xF94]) = STACK[0x1800];
  LODWORD(STACK[0xF98]) = 1718210905;
  LODWORD(v6) = STACK[0xF98];
  v7 = STACK[0xF94];
  v8 = v2[250];
  v9 = STACK[0xF90];
  v10 = v2[431];
  v11 = v2[247];
  v12 = v2[246];
  v13 = STACK[0xF74];
  v14 = v2[243];
  v15 = v2[240];
  v16 = STACK[0xF3C];
  v17 = v2[238];
  v18 = STACK[0xF2C];
  v19 = v2[237];
  v20 = STACK[0xF14];
  v21 = STACK[0xF10];
  v22 = v2[236];
  v23 = v2[235];
  v24 = v2[233];
  v25 = v2[425];
  v26 = v2[230];
  v27 = (uint64_t (*)(void))v2[229];
  v28 = v2[226];
  v29 = v2[225];
  v30 = v2[222];
  v3[169] = v30;
  v3[170] = v29;
  v3[171] = v28;
  v3[172] = (uint64_t)v27;
  v3[173] = v26;
  v2[179] = v25;
  v3[174] = v24;
  v3[175] = v23;
  v3[176] = v22;
  LODWORD(STACK[0x6B4]) = v21;
  LODWORD(STACK[0x6C4]) = v20;
  v3[177] = v19;
  LODWORD(STACK[0x6DC]) = v18;
  v3[178] = v17;
  LODWORD(STACK[0x6EC]) = v16;
  v3[179] = v15;
  v3[180] = v14;
  LODWORD(STACK[0x6F0]) = v13;
  v3[181] = v12;
  v3[182] = v11;
  v2[188] = v10;
  LODWORD(STACK[0x6F4]) = v9;
  v3[183] = v8;
  LODWORD(STACK[0x714]) = v7;
  LODWORD(STACK[0x724]) = v6;
  v3[184] = v30;
  v3[185] = v29;
  v3[186] = v28;
  v3[187] = (uint64_t)v27;
  v3[188] = v26;
  v2[196] = v25;
  v3[189] = v24;
  v3[190] = v23;
  v3[191] = v22;
  LODWORD(STACK[0x77C]) = v21;
  v3[192] = v19;
  LODWORD(STACK[0x78C]) = v18;
  v3[193] = v17;
  LODWORD(STACK[0x790]) = v16;
  v3[194] = v15;
  v3[195] = v14;
  LODWORD(STACK[0x794]) = v13;
  v3[196] = v12;
  v3[197] = v11;
  v2[207] = v10;
  LODWORD(STACK[0x7B4]) = v9;
  v3[198] = v8;
  LODWORD(STACK[0x7FC]) = v7;
  LODWORD(STACK[0x80C]) = v6;
  v2[116] = v30;
  v2[119] = v29;
  v2[121] = v28;
  v2[122] = v27;
  v2[123] = v26;
  v2[360] = v25;
  v2[124] = v24;
  v2[126] = v23;
  v2[129] = v22;
  LODWORD(STACK[0xCCC]) = v21;
  LODWORD(STACK[0xCD0]) = v20;
  v2[131] = v19;
  LODWORD(STACK[0xCD4]) = v18;
  v2[134] = v17;
  LODWORD(STACK[0xCE4]) = v16;
  v2[135] = v15;
  v2[138] = v14;
  LODWORD(STACK[0xD1C]) = v13;
  v2[140] = v12;
  v2[141] = v11;
  v2[371] = v10;
  LODWORD(STACK[0xD2C]) = v9;
  v2[142] = v8;
  LODWORD(STACK[0xD44]) = v7;
  LODWORD(STACK[0xD54]) = v6;
  v2[274] = v30;
  v2[275] = v29;
  v2[279] = v28;
  v2[281] = v27;
  v2[284] = v26;
  v2[455] = v25;
  v2[285] = v24;
  v2[288] = v23;
  v2[290] = v22;
  LODWORD(STACK[0x1050]) = v21;
  LODWORD(STACK[0x1054]) = v20;
  v2[291] = v19;
  LODWORD(STACK[0x1074]) = v18;
  v2[292] = v17;
  LODWORD(STACK[0x10C4]) = v16;
  v2[293] = v15;
  v2[295] = v14;
  LODWORD(STACK[0x10E0]) = v13;
  v2[298] = v12;
  v2[300] = v11;
  v2[459] = v10;
  LODWORD(STACK[0x1100]) = v9;
  v2[303] = v8;
  LODWORD(STACK[0x1104]) = v6;
  return v27();
}

uint64_t sub_1A2748F60()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;

  v2[400] = v0;
  v3[42] = v1;
  v4 = v3[11];
  v2[217] = v3[10];
  LODWORD(STACK[0xF08]) = STACK[0x187C];
  LODWORD(STACK[0xF0C]) = STACK[0x183C];
  v2[218] = v3[8];
  v5 = v3[4];
  v2[219] = v3[5];
  v2[220] = v5;
  LODWORD(STACK[0xF10]) = STACK[0x182C];
  v6 = *v3;
  v2[222] = v3[1];
  v2[425] = v3[22];
  v2[225] = v6;
  v2[226] = STACK[0x16B8];
  LODWORD(STACK[0xF14]) = STACK[0x1814];
  v2[229] = STACK[0x1680];
  LODWORD(STACK[0xF2C]) = STACK[0x1804];
  v2[230] = STACK[0x1678];
  v2[233] = v4;
  v2[235] = STACK[0x1670];
  v2[236] = STACK[0x1668];
  v2[237] = STACK[0x1640];
  v2[238] = v3[12];
  v2[431] = v3[42];
  LODWORD(STACK[0xF3C]) = 1718210905;
  v2[240] = STACK[0x1658];
  LODWORD(STACK[0xF74]) = STACK[0x1800];
  LODWORD(STACK[0xF90]) = 1718210905;
  LODWORD(v4) = STACK[0xF90];
  v7 = STACK[0xF74];
  v8 = v2[240];
  v9 = STACK[0xF3C];
  v10 = v2[431];
  v11 = v2[238];
  v12 = v2[237];
  v13 = v2[236];
  v14 = v2[235];
  v15 = (uint64_t (*)(void))v2[233];
  v16 = v2[230];
  v17 = STACK[0xF2C];
  v18 = v2[229];
  v19 = STACK[0xF14];
  v20 = v2[226];
  v21 = v2[225];
  v22 = v2[425];
  v23 = v2[222];
  v24 = STACK[0xF10];
  v25 = v2[220];
  v26 = v2[219];
  v27 = v2[218];
  v28 = STACK[0xF0C];
  v29 = STACK[0xF08];
  v30 = v2[217];
  v3[165] = v30;
  LODWORD(STACK[0x67C]) = v29;
  LODWORD(STACK[0x68C]) = v28;
  v3[166] = v27;
  v3[167] = v26;
  v3[168] = v25;
  LODWORD(STACK[0x6B4]) = v24;
  v3[169] = v23;
  v2[179] = v22;
  v3[170] = v21;
  v3[171] = v20;
  LODWORD(STACK[0x6C4]) = v19;
  v3[172] = v18;
  LODWORD(STACK[0x6DC]) = v17;
  v3[173] = v16;
  v3[174] = (uint64_t)v15;
  v3[175] = v14;
  v3[176] = v13;
  v3[177] = v12;
  v3[178] = v11;
  v2[188] = v10;
  LODWORD(STACK[0x6EC]) = v9;
  v3[179] = v8;
  LODWORD(STACK[0x6F0]) = v7;
  LODWORD(STACK[0x6F4]) = v4;
  v3[180] = v30;
  LODWORD(STACK[0x754]) = v28;
  v3[181] = v27;
  v3[182] = v26;
  v3[183] = v25;
  LODWORD(STACK[0x764]) = v24;
  v3[184] = v23;
  v2[196] = v22;
  v3[185] = v21;
  v3[186] = v20;
  LODWORD(STACK[0x77C]) = v19;
  v3[187] = v18;
  LODWORD(STACK[0x78C]) = v17;
  v3[188] = v16;
  v3[189] = (uint64_t)v15;
  v3[190] = v14;
  v3[191] = v13;
  v3[192] = v12;
  v3[193] = v11;
  v2[207] = v10;
  LODWORD(STACK[0x790]) = v9;
  v3[194] = v8;
  LODWORD(STACK[0x794]) = v7;
  LODWORD(STACK[0x7B4]) = v4;
  v2[108] = v30;
  LODWORD(STACK[0xCA4]) = v29;
  LODWORD(STACK[0xCBC]) = v28;
  v2[110] = v27;
  v2[112] = v26;
  v2[115] = v25;
  LODWORD(STACK[0xCCC]) = v24;
  v2[116] = v23;
  v2[360] = v22;
  v2[119] = v21;
  v2[121] = v20;
  LODWORD(STACK[0xCD0]) = v19;
  v2[122] = v18;
  LODWORD(STACK[0xCD4]) = v17;
  v2[123] = v16;
  v2[124] = v15;
  v2[126] = v14;
  v2[129] = v13;
  v2[131] = v12;
  v2[134] = v11;
  v2[371] = v10;
  LODWORD(STACK[0xCE4]) = v9;
  v2[135] = v8;
  LODWORD(STACK[0xD1C]) = v7;
  LODWORD(STACK[0xD2C]) = v4;
  v2[267] = v30;
  LODWORD(STACK[0x104C]) = v29;
  LODWORD(STACK[0x1050]) = v28;
  v2[270] = v27;
  v2[271] = v26;
  v2[272] = v25;
  LODWORD(STACK[0x1054]) = v24;
  v2[274] = v23;
  v2[448] = v22;
  v2[275] = v21;
  v2[279] = v20;
  LODWORD(STACK[0x1074]) = v19;
  v2[281] = v18;
  LODWORD(STACK[0x10C4]) = v17;
  v2[284] = v16;
  v2[285] = v15;
  v2[288] = v14;
  v2[290] = v13;
  v2[291] = v12;
  v2[292] = v11;
  v2[455] = v10;
  LODWORD(STACK[0x10E0]) = v9;
  v2[293] = v8;
  LODWORD(STACK[0x1100]) = v4;
  return v15();
}

uint64_t sub_1A274999C()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);

  v5 = STACK[0x1100];
  v6 = (v0 + 71465329) ^ 0x640u;
  v4[41] = v1[293];
  v7 = (v0 + 71465329) | 4;
  v8 = v0 + 71466975;
  LODWORD(STACK[0x1914]) = STACK[0x10E0];
  v4[83] = v1[455];
  v4[44] = v1[292];
  v9 = v1[290];
  v4[46] = v1[291];
  v4[47] = v9;
  v10 = v1[285];
  v4[48] = v1[288];
  v4[49] = v10;
  v11 = v1[284];
  LODWORD(STACK[0x1924]) = STACK[0x10C4];
  v12 = v1[281];
  v4[50] = v11;
  v4[51] = v12;
  LODWORD(STACK[0x1944]) = STACK[0x1074];
  v4[52] = v1[279];
  v4[55] = v1[275];
  v4[98] = v1[448];
  v13 = v1[274];
  LODWORD(v12) = STACK[0x1054];
  LODWORD(STACK[0x1948]) = STACK[0x1054];
  v14 = v1[272];
  v4[58] = v13;
  v4[59] = v14;
  v15 = v1[271];
  v4[62] = v15;
  v16 = v1[270];
  v4[64] = v16;
  v17 = STACK[0x1050];
  LODWORD(STACK[0x194C]) = STACK[0x1050];
  v18 = STACK[0x104C];
  LODWORD(STACK[0x195C]) = STACK[0x104C];
  v19 = v1[267];
  v4[67] = v19;
  v1[295] = v19;
  LODWORD(STACK[0x1104]) = v18;
  LODWORD(STACK[0x1114]) = v17;
  v1[298] = v16;
  v1[300] = v15;
  v1[303] = v14;
  LODWORD(STACK[0x1134]) = v12;
  v1[304] = v4[58];
  v1[459] = v4[98];
  v1[307] = v4[55];
  v1[309] = v4[52];
  LODWORD(STACK[0x1138]) = STACK[0x1944];
  v20 = v4[50];
  v1[310] = v4[51];
  LODWORD(STACK[0x113C]) = STACK[0x1924];
  v1[311] = v20;
  v21 = v4[48];
  v1[312] = v4[49];
  v1[314] = v21;
  v22 = v4[46];
  v1[317] = v4[47];
  v1[319] = v22;
  v1[322] = v4[44];
  v1[461] = v4[83];
  LODWORD(STACK[0x114C]) = STACK[0x1914];
  v1[323] = v4[41];
  v23 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((3675 * (v5 == (v7 ^ (v2 - 181)))) ^ v8)) - v6 + 1665);
  LODWORD(STACK[0x1164]) = v5;
  return v23();
}

void sub_1A2749B2C()
{
  uint64_t v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  _DWORD *v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v5 = (uint64_t *)v4[62];
  v6 = (_DWORD *)v4[48];
  v7 = STACK[0x194C];
  v8 = STACK[0x194C];
  v9 = ((v7 & 0xD5D791AF) << ((v0 - 1) ^ 0xCD)) & (v7 ^ 0x95D7852F) ^ v7 & 0xD5D791AF;
  v10 = ((2 * (v7 ^ 0x36F48433)) ^ 0xC6462B38) & (v7 ^ 0x36F48433) ^ (2 * (v7 ^ 0x36F48433)) & 0xE323159C;
  v11 = v10 ^ 0x21211484;
  v12 = (v10 ^ 0xC2031118) & (4 * v9) ^ v9;
  v13 = ((4 * v11) ^ 0x8C8C5670) & v11 ^ (4 * v11) & 0xE323159C;
  v14 = (v13 ^ 0x8000141C) & (16 * v12) ^ v12;
  v15 = ((16 * (v13 ^ 0x6323018C)) ^ 0x323159C0) & (v13 ^ 0x6323018C) ^ (16 * (v13 ^ 0x6323018C)) & 0xE3231590;
  v16 = v14 ^ 0xE323159C ^ (v15 ^ 0x22211100) & (v14 << 8);
  v17 = *v5;
  v18 = LODWORD(STACK[0x194C]) ^ (2
                                * ((v16 << 16) & 0x63230000 ^ v16 ^ ((v16 << 16) ^ 0x159C0000) & (((v15 ^ 0xC102041C) << 8) & 0x63230000 ^ 0x40220000 ^ (((v15 ^ 0xC102041C) << 8) ^ 0x23150000) & (v15 ^ 0xC102041C))));
  v19 = ((2 * *v6) & 0xDEF7FEF6) + (*v6 ^ 0xEF7BFF7B) + 277086341;
  *(_BYTE *)(*v5 + v19) = HIBYTE(v18) ^ 0x11;
  *(_BYTE *)(v17 + v19 + 1) = BYTE2(v18) ^ 0x91;
  *(_BYTE *)(v17 + v19 + 2) = ((BYTE1(v18) ^ 0xBA) - ((2 * (BYTE1(v18) ^ 0xBA)) & 0x96) + 75) ^ 0x4B;
  *(_BYTE *)(v17 + v19 + 3) = v18 ^ 0x97;
  v20 = (*v6 + 4);
  *v6 = v20;
  v21 = *v5;
  v22 = (v20 ^ 0xFE3F7D50BEF26CFFLL) + 0x11C7022511B5C3F2 + ((2 * v20) & 0x17DE4D9FELL);
  v23 = v4[98];
  v24 = (v23 ^ 0xE96AC73DDFF88B96) & (2 * (v23 & 0xED4CE7BDDFF8AA10)) ^ v23 & 0xED4CE7BDDFF8AA10;
  v25 = *(_QWORD *)(v3 + 8 * v0);
  v1[388] = v4[67];
  LODWORD(STACK[0x1298]) = STACK[0x195C];
  v26 = ((2 * (v23 ^ 0x2B62856CF3E99FB6)) ^ 0x8C5CC5A258226B4CLL) & (v23 ^ 0x2B62856CF3E99FB6) ^ (2 * (v23 ^ 0x2B62856CF3E99FB6)) & 0x462E62D12C1135A6;
  LODWORD(STACK[0x129C]) = v8;
  v1[389] = v4[64];
  v27 = v26 ^ 0x42222251241114A2;
  v28 = (v26 ^ 0x8404008008002000) & (4 * v24) ^ v24;
  v1[390] = v4[62];
  v29 = v4[58];
  v1[392] = v4[59];
  LODWORD(STACK[0x12AC]) = STACK[0x1948];
  v30 = ((4 * v27) ^ 0x18B98B44B044D698) & v27 ^ (4 * v27) & 0xC62E62D12C1135A4;
  v1[395] = v29;
  v1[491] = v4[98];
  v31 = (v30 ^ 0x28024020001480) & (16 * v28) ^ v28;
  v1[398] = v4[55];
  v1[399] = v4[52];
  LODWORD(STACK[0x12EC]) = STACK[0x1944];
  v32 = ((16 * (v30 ^ 0xC60660910C112126)) ^ 0x62E62D12C1135A60) & (v30 ^ 0xC60660910C112126) ^ (16 * (v30 ^ 0xC60660910C112126)) & 0xC62E62D12C1135A0;
  v33 = v4[50];
  v1[402] = v4[51];
  LODWORD(STACK[0x1308]) = STACK[0x1924];
  v1[403] = v33;
  v34 = v4[48];
  v1[404] = v4[49];
  v1[499] = v25 - 8;
  v1[405] = v34;
  v35 = v4[46];
  v1[406] = v4[47];
  v1[409] = v35;
  v1[410] = v4[44];
  v1[505] = v4[83];
  LODWORD(STACK[0x130C]) = STACK[0x1914];
  v1[413] = v4[41];
  LODWORD(STACK[0x131C]) = v2;
  v1[416] = v21;
  v1[513] = v22;
  v1[418] = v4[55];
  v1[519] = v23 ^ (2
                 * (((((v32 ^ 0x840842C12C002586) << 8) ^ 0x2E62D12C1135A600) & (v32 ^ 0x840842C12C002586) ^ ((v32 ^ 0x840842C12C002586) << 8) & 0xC62E62D12C113500) & 0x2011240000000000 ^ (v32 ^ 0x4226201000111000) & (v31 << 8) ^ v31 ^ ((((v32 ^ 0x840842C12C002586) << 8) ^ 0x2E62D12C1135A600) & (v32 ^ 0x840842C12C002586) ^ ((v32 ^ 0x840842C12C002586) << 8) & 0xC62E62D12C113500 ^ 0x622400000110000) & (((v32 ^ 0x4226201000111000) & (v31 << 8) ^ v31) << 16))) ^ 0x4F237A05F5C1AE38;
  JUMPOUT(0x1A2746A5CLL);
}

uint64_t sub_1A2749FFC()
{
  _QWORD *v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;

  v2 = STACK[0x1164];
  v3 = v0[323];
  v4 = STACK[0x114C];
  v5 = v0[461];
  v6 = v0[322];
  v7 = v0[319];
  v8 = v0[317];
  v9 = v0[314];
  v10 = v0[312];
  v11 = v0[311];
  v12 = STACK[0x113C];
  v13 = v0[310];
  v14 = STACK[0x1138];
  v15 = v0[309];
  v16 = v0[307];
  v17 = v0[459];
  v18 = v0[304];
  v19 = STACK[0x1134];
  v20 = v0[303];
  v21 = v0[300];
  v22 = v0[298];
  v23 = STACK[0x1114];
  v24 = STACK[0x1104];
  v0[326] = v0[295];
  LODWORD(STACK[0x1184]) = v24;
  LODWORD(STACK[0x11A4]) = v23;
  v0[328] = v22;
  v0[330] = v21;
  v0[331] = v20;
  LODWORD(STACK[0x11A8]) = v19;
  v0[333] = v18;
  v0[462] = v17;
  v0[336] = v16;
  v0[338] = v15;
  LODWORD(STACK[0x11AC]) = v14;
  v0[341] = v13;
  LODWORD(STACK[0x11BC]) = v12;
  v0[343] = v11;
  v0[345] = v10;
  v0[346] = v9;
  v0[347] = v8;
  v0[348] = v7;
  v0[350] = v6;
  v0[463] = v5;
  LODWORD(STACK[0x11D4]) = v4;
  v0[353] = v3;
  LODWORD(STACK[0x11F4]) = v2;
  LODWORD(STACK[0x1214]) = v2;
  LODWORD(STACK[0x1974]) = STACK[0x1214];
  LODWORD(STACK[0x1984]) = STACK[0x11F4];
  v1[68] = v0[353];
  LODWORD(STACK[0x19BC]) = STACK[0x11D4];
  v1[107] = v0[463];
  v1[69] = v0[350];
  v1[70] = v0[348];
  v1[71] = v0[347];
  v1[73] = v0[346];
  v1[76] = v0[345];
  v1[77] = v0[343];
  LODWORD(STACK[0x19C0]) = STACK[0x11BC];
  v1[80] = v0[341];
  LODWORD(STACK[0x19C4]) = STACK[0x11AC];
  v1[82] = v0[338];
  v1[85] = v0[336];
  v1[109] = v0[462];
  v1[87] = v0[333];
  LODWORD(STACK[0x19D4]) = STACK[0x11A8];
  v1[88] = v0[331];
  v1[89] = v0[330];
  v1[90] = v0[328];
  LODWORD(STACK[0x19EC]) = STACK[0x11A4];
  LODWORD(STACK[0x19FC]) = STACK[0x1184];
  v1[91] = v0[326];
  return ((uint64_t (*)(void))v1[71])();
}

uint64_t sub_1A274A29C()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = STACK[0x1ADC];
  LODWORD(STACK[0x7FC]) = STACK[0x1ADC];
  v3 = STACK[0x1ABC];
  LODWORD(STACK[0x80C]) = STACK[0x1ABC];
  *(_QWORD *)(v1 + 1560) = *(_QWORD *)(v1 + 960);
  *(_QWORD *)(v1 + 1568) = *(_QWORD *)(v1 + 944);
  *(_QWORD *)(v1 + 1576) = *(_QWORD *)(v1 + 936);
  v4 = STACK[0x1AB8];
  LODWORD(STACK[0x824]) = STACK[0x1AB8];
  *(_QWORD *)(v1 + 1584) = *(_QWORD *)(v1 + 928);
  v0[214] = *(_QWORD *)(v1 + 1024);
  *(_QWORD *)(v1 + 1592) = *(_QWORD *)(v1 + 920);
  *(_QWORD *)(v1 + 1600) = *(_QWORD *)(v1 + 896);
  v5 = STACK[0x1AB4];
  LODWORD(STACK[0x834]) = STACK[0x1AB4];
  *(_QWORD *)(v1 + 1608) = *(_QWORD *)(v1 + 888);
  v6 = STACK[0x1AB0];
  LODWORD(STACK[0x838]) = STACK[0x1AB0];
  *(_QWORD *)(v1 + 1616) = *(_QWORD *)(v1 + 880);
  *(_QWORD *)(v1 + 1624) = *(_QWORD *)(v1 + 848);
  *(_QWORD *)(v1 + 1632) = *(_QWORD *)(v1 + 840);
  *(_QWORD *)(v1 + 1640) = *(_QWORD *)(v1 + 832);
  *(_QWORD *)(v1 + 1648) = *(_QWORD *)(v1 + 824);
  *(_QWORD *)(v1 + 1656) = *(_QWORD *)(v1 + 816);
  v0[224] = *(_QWORD *)(v1 + 976);
  v7 = STACK[0x1A9C];
  LODWORD(STACK[0x83C]) = STACK[0x1A9C];
  *(_QWORD *)(v1 + 1664) = *(_QWORD *)(v1 + 800);
  v8 = STACK[0x1A8C];
  LODWORD(STACK[0x85C]) = STACK[0x1A8C];
  LODWORD(STACK[0xA64]) = v2;
  LODWORD(STACK[0xA74]) = v3;
  v9 = *(_QWORD *)(v1 + 944);
  v0[3] = *(_QWORD *)(v1 + 960);
  v0[4] = v9;
  v0[7] = *(_QWORD *)(v1 + 936);
  v10 = *(_QWORD *)(v1 + 928);
  v0[278] = *(_QWORD *)(v1 + 1024);
  v11 = *(_QWORD *)(v1 + 920);
  v0[9] = v10;
  v0[10] = v11;
  v12 = *(_QWORD *)(v1 + 896);
  LODWORD(STACK[0xA78]) = v5;
  v13 = *(_QWORD *)(v1 + 888);
  v0[11] = v12;
  v0[12] = v13;
  LODWORD(STACK[0xA7C]) = v6;
  v0[14] = *(_QWORD *)(v1 + 880);
  v0[17] = *(_QWORD *)(v1 + 848);
  v0[19] = *(_QWORD *)(v1 + 840);
  v14 = *(_QWORD *)(v1 + 824);
  v0[22] = *(_QWORD *)(v1 + 832);
  v0[23] = v14;
  v0[26] = *(_QWORD *)(v1 + 816);
  v0[286] = *(_QWORD *)(v1 + 976);
  LODWORD(STACK[0xA9C]) = v7;
  v0[28] = *(_QWORD *)(v1 + 800);
  *(_QWORD *)(v1 + 1672) = 0;
  LODWORD(STACK[0xABC]) = v8;
  LODWORD(STACK[0xADC]) = STACK[0x1AB0];
  LODWORD(STACK[0xB74]) = v4;
  return (*(uint64_t (**)(void))(v1 + 984))();
}

uint64_t sub_1A274A414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  uint64_t v63;

  return ((uint64_t (*)(void))(*(_QWORD *)(v63 + 8 * (((a62 == 1) | (8 * (a62 == 1))) ^ v62))
                            - ((v62 + 751781501) & 0xD330B6A7)
                            - ((v62 - 1582379667) & 0x5E512FB7)
                            + 1346))();
}

uint64_t sub_1A274A46C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((((v1 + 187171499) | 0xF0958208) + 71467361) ^ (8 * v1) ^ 0x1C20) * (a1 == 0)) ^ v1)))();
}

uint64_t sub_1A274A4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  uint64_t v63;
  int v64;
  _BOOL4 v65;

  v65 = a62 == (((v62 - 2003797141) | 0x732D0500) ^ (v64 + 230));
  return ((uint64_t (*)(void))(*(_QWORD *)(v63 + 8 * ((v65 | (2 * v65)) ^ v62)) - 12))();
}

uint64_t sub_1A274A504@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v5 + 4288) = v3;
  v8 = v3 - 1;
  v9 = (v4 & (2 * v8)) + (v8 ^ a2);
  *(_BYTE *)(v7[130] + v9 + v7[161]) = *(_BYTE *)(v7[127] + v9 + a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((37 * (v8 != 0)) ^ (a3 + 71466811))) - 12))();
}

uint64_t sub_1A274A564(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = v2 - 1;
  v11 = (v8 & (2 * v10)) + (v10 ^ a2);
  *(_BYTE *)(v5 + v11 + v4) = *(_BYTE *)(v3 + v11 + a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((v10 != 0) * v7) ^ v6)) - 12))();
}

uint64_t sub_1A274A5A0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55)
{
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;

  *(_QWORD *)(v56 + 4288) = v55;
  return ((uint64_t (*)(void))(*(_QWORD *)(v57 + 8 * ((218 * (a55 == 3)) ^ (a1 + 71467033)))
                            - (a1 - v58 - 227)
                            - 2))();
}

uint64_t sub_1A274A5AC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  LODWORD(STACK[0xB9C]) = STACK[0x1628];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((*(unsigned __int8 *)(v2 + 435) * ((v0 + 71465221) ^ 0x9C8)) ^ (v0 + 71465177)))
                            - 12))();
}

uint64_t sub_1A274A5F4@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t (*v12)(void);

  v4 = (a1 + 164) | 0x490u;
  v1[335] = (v4 ^ 0xFFFFFFFFFFFFFA6DLL) + *(_QWORD *)(v2 + 8 * a1);
  v1[94] = v1[550];
  v1[97] = v1[549];
  v1[98] = v1[548];
  v1[344] = STACK[0x1648];
  v1[101] = v1[547];
  v1[103] = v1[545];
  v1[104] = v1[542];
  LODWORD(STACK[0xC38]) = STACK[0x1604];
  v1[105] = v1[540];
  LODWORD(STACK[0xC3C]) = STACK[0x15E4];
  v1[106] = v1[538];
  LODWORD(STACK[0xC5C]) = STACK[0x15A4];
  v1[108] = v1[537];
  LODWORD(STACK[0xC6C]) = STACK[0x1594];
  v1[110] = v1[532];
  v1[112] = v1[531];
  v1[352] = STACK[0x1608];
  LODWORD(STACK[0xC94]) = STACK[0x157C];
  v1[115] = v1[530];
  LODWORD(STACK[0xCA4]) = STACK[0x156C];
  LODWORD(STACK[0xCBC]) = 1;
  LODWORD(STACK[0x162C]) = STACK[0xCBC];
  LODWORD(STACK[0x163C]) = STACK[0xCA4];
  v1[563] = v1[115];
  LODWORD(STACK[0x1654]) = STACK[0xC94];
  STACK[0x1698] = v1[352];
  v1[565] = v1[112];
  v1[566] = v1[110];
  LODWORD(STACK[0x1664]) = STACK[0xC6C];
  v1[567] = v1[108];
  LODWORD(STACK[0x168C]) = STACK[0xC5C];
  v1[568] = v1[106];
  LODWORD(STACK[0x1690]) = STACK[0xC3C];
  v1[569] = v1[105];
  LODWORD(STACK[0x1694]) = STACK[0xC38];
  v1[570] = v1[104];
  v1[572] = v1[103];
  v1[574] = v1[101];
  v5 = v1[344];
  STACK[0x16A0] = v5;
  v6 = v1[98];
  v1[577] = v6;
  v7 = v1[97];
  v1[578] = v7;
  v8 = v1[94];
  v1[581] = v8;
  v9 = v1[335];
  v10 = *(_QWORD *)(v3 + 1336);
  v1[583] = v10;
  v1[585] = v9;
  v11 = *(_DWORD *)(v10 + 12);
  v10 += 12;
  v1[587] = v10;
  LODWORD(STACK[0x16B4]) = v11;
  v1[143] = v9;
  v1[145] = v10;
  v1[148] = v8;
  v1[150] = v7;
  v1[153] = v6;
  v1[379] = v5;
  v1[154] = v1[574];
  v1[157] = v1[572];
  v1[159] = v1[570];
  LODWORD(STACK[0xD58]) = STACK[0x162C];
  LODWORD(STACK[0xD5C]) = STACK[0x1694];
  v1[161] = v1[569];
  LODWORD(STACK[0xD7C]) = STACK[0x1690];
  v1[162] = v1[568];
  LODWORD(STACK[0xD8C]) = STACK[0x168C];
  v1[163] = v1[567];
  v1[165] = v1[583];
  LODWORD(STACK[0xDB4]) = STACK[0x1664];
  v1[168] = v1[566];
  v1[170] = v1[565];
  v1[383] = STACK[0x1698];
  LODWORD(STACK[0xDC4]) = STACK[0x1654];
  v1[173] = v1[563];
  LODWORD(STACK[0xDDC]) = STACK[0x163C];
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((44 * (v11 < 22 * (v4 ^ 0x592) - 71)) | v4))
                          - 12);
  LODWORD(STACK[0xDEC]) = 1718210905;
  return v12();
}

uint64_t sub_1A274ABD8@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  _QWORD *v2;
  int v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _BOOL4 v10;
  _BOOL4 v11;

  v6 = STACK[0x16B4];
  v7 = *(unsigned int *)(v2[583] + 8);
  v2[116] = v2[585];
  v2[119] = v2[587];
  v8 = (a2 ^ (v5 + 167) ^ v6 ^ 0xFBDC49EDD447D8A7) + ((2 * v6) & 0x5FF4BFFE) + 0x423B612DA899F41;
  v2[121] = v2[581];
  v9 = (v7 ^ 0xFDBDF5BD7FB99D7DLL) + 0x2420A428ACA61BFLL + ((2 * (_DWORD)v7) & 0xFF733AFA);
  v10 = v8 < 0xA83FF3C;
  v2[122] = v2[578];
  v2[123] = v2[577];
  v11 = v8 > v9;
  if (v10 != v9 < 0xA83FF3C)
    v11 = v10;
  v2[360] = *(_QWORD *)(a1 + 209);
  v2[124] = v2[574];
  v2[126] = v2[572];
  v2[129] = v2[570];
  LODWORD(STACK[0xCCC]) = STACK[0x162C];
  LODWORD(STACK[0xCD0]) = STACK[0x1694];
  v2[131] = v2[569];
  LODWORD(STACK[0xCD4]) = STACK[0x1690];
  v2[134] = v2[568];
  LODWORD(STACK[0xCE4]) = STACK[0x168C];
  v2[135] = v2[567];
  v2[138] = v2[583];
  LODWORD(STACK[0xD1C]) = STACK[0x1664];
  v2[140] = v2[566];
  v2[141] = v2[565];
  v2[371] = *(_QWORD *)(a1 + 201);
  LODWORD(STACK[0xD2C]) = STACK[0x1654];
  v2[142] = v2[563];
  LODWORD(STACK[0xD44]) = STACK[0x163C];
  LODWORD(STACK[0xD54]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1361 * v11) ^ a2)) - 12))();
}

void sub_1A274AD70(uint64_t a1@<X3>, int a2@<W8>)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v3 + 8 * a2);
  v2[174] = v2[585];
  v2[177] = v2[587];
  v2[178] = v2[581];
  v2[387] = v5 + ((a2 + 1434844283) & 0xAA7A0772) - 1084;
  v2[180] = v2[577];
  v2[394] = *(_QWORD *)(a1 + 209);
  v2[181] = v2[574];
  v2[182] = v2[572];
  v2[183] = v2[570];
  LODWORD(STACK[0xDF0]) = STACK[0x162C];
  LODWORD(STACK[0xDF4]) = STACK[0x1694];
  v2[184] = v2[569];
  LODWORD(STACK[0xE14]) = STACK[0x1690];
  v2[186] = v2[568];
  LODWORD(STACK[0xE24]) = STACK[0x168C];
  v2[189] = v2[567];
  v2[191] = v2[583];
  LODWORD(STACK[0xE3C]) = STACK[0x1664];
  v2[194] = v2[563];
  LODWORD(STACK[0xE6C]) = STACK[0x163C];
  v2[195] = v2[583];
  LODWORD(STACK[0xE7C]) = 4;
  *(_QWORD *)(a1 + 113) = v2[195];
  LODWORD(STACK[0x1800]) = STACK[0xE6C];
  *(_QWORD *)(a1 + 137) = v2[194];
  LODWORD(STACK[0x1804]) = STACK[0xE3C];
  *(_QWORD *)(a1 + 153) = v2[191];
  *(_QWORD *)(a1 + 161) = v2[189];
  LODWORD(STACK[0x1814]) = STACK[0xE24];
  *(_QWORD *)(a1 + 169) = v2[186];
  LODWORD(STACK[0x182C]) = STACK[0xE14];
  *(_QWORD *)(a1 + 177) = v2[184];
  LODWORD(STACK[0x183C]) = STACK[0xDF4];
  LODWORD(STACK[0x187C]) = STACK[0xDF0];
  *(_QWORD *)(a1 + 233) = v2[183];
  v6 = v2[181];
  *v4 = v2[182];
  v4[1] = v6;
  v4[22] = v2[394];
  v7 = v2[387];
  v8 = v2[178];
  v4[4] = v2[180];
  v4[5] = v8;
  v4[8] = v2[177];
  v4[10] = v2[174];
  v4[11] = v7;
  JUMPOUT(0x1A274CAC4);
}

uint64_t sub_1A274AE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);

  v10 = STACK[0x1768];
  v11 = LODWORD(STACK[0x1768]) == v6;
  v12 = *(_QWORD *)(a4 + 73);
  v5[10] = *(_QWORD *)(a4 + 97);
  v5[11] = v12;
  v5[12] = *(_QWORD *)(a4 + 65);
  v5[14] = *(_QWORD *)(a4 + 41);
  v5[17] = *(_QWORD *)(a4 + 33);
  v5[278] = *(_QWORD *)(v8 + 128);
  v5[19] = *(_QWORD *)(a4 + 9);
  v13 = v5[626];
  v5[22] = *(_QWORD *)(a4 + 1);
  v5[23] = v13;
  LODWORD(STACK[0xA78]) = STACK[0x17FC];
  LODWORD(STACK[0xA7C]) = STACK[0x17DC];
  LODWORD(STACK[0xA9C]) = STACK[0x179C];
  v5[26] = v5[624];
  LODWORD(STACK[0xABC]) = STACK[0x178C];
  v14 = v5[621];
  v5[28] = v5[623];
  v5[29] = v14;
  v15 = v5[616];
  v5[30] = v5[618];
  v5[31] = v15;
  v5[286] = *(_QWORD *)(v8 + 48);
  LODWORD(STACK[0xADC]) = STACK[0x1770];
  v5[33] = v5[613];
  LODWORD(STACK[0xAF4]) = STACK[0x176C];
  v16 = (uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((v11 * ((v4 ^ (v9 - 101)) + 1707)) ^ (v4 + 71465193))) - 4);
  LODWORD(STACK[0xB04]) = v10;
  return v16();
}

uint64_t sub_1A274AF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  int v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  unint64_t v36;
  int v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v23 = (v19 - 347);
  v24 = (v23 ^ 0xFFFFFFFF00000003) + *(_QWORD *)(v21 + 8 * v19);
  v20[252] = STACK[0x1630];
  v20[253] = STACK[0x1618];
  v20[254] = STACK[0x1610];
  v20[255] = STACK[0x15F8];
  v20[257] = STACK[0x15F0];
  v20[261] = STACK[0x15D8];
  v20[446] = v24;
  LODWORD(STACK[0xF9C]) = STACK[0x17FC];
  LODWORD(STACK[0xFB4]) = STACK[0x17DC];
  v20[263] = v20[625];
  LODWORD(STACK[0xFC4]) = STACK[0x178C];
  v20[266] = v20[621];
  LODWORD(STACK[0x100C]) = STACK[0x1774];
  v20[267] = v20[618];
  v20[270] = v20[616];
  v20[448] = v22[6];
  LODWORD(STACK[0x101C]) = STACK[0x1770];
  v20[271] = v20[613];
  LODWORD(STACK[0x103C]) = STACK[0x176C];
  v20[272] = a18;
  LODWORD(STACK[0x104C]) = a19;
  LODWORD(STACK[0x1884]) = STACK[0x104C];
  v22[14] = v20[272];
  LODWORD(STACK[0x1894]) = STACK[0x103C];
  v25 = v20[271];
  LODWORD(STACK[0x18B4]) = STACK[0x101C];
  v22[57] = v20[448];
  v26 = v20[270];
  v22[17] = v25;
  v22[18] = v26;
  v22[21] = v20[267];
  LODWORD(STACK[0x18B8]) = STACK[0x100C];
  v22[24] = v20[266];
  LODWORD(STACK[0x18BC]) = STACK[0xFC4];
  v27 = v20[263];
  LODWORD(STACK[0x18CC]) = STACK[0xFB4];
  LODWORD(STACK[0x18E4]) = STACK[0xF9C];
  v28 = v20[446];
  v29 = v20[261];
  v22[26] = v27;
  v22[27] = v29;
  v30 = v20[255];
  v22[28] = v20[257];
  v22[29] = v30;
  v31 = v20[254];
  v32 = v20[253];
  v22[30] = v31;
  v22[31] = v32;
  v33 = v20[252];
  v22[32] = v33;
  v34 = v22[167];
  v22[35] = v34;
  v22[36] = v28;
  v20[346] = v34;
  v35 = *(_DWORD *)(v34 + 12);
  v22[39] = v34 + 12;
  v36 = LODWORD(STACK[0x1884]);
  v37 = STACK[0x1884];
  v38 = (v36 | ((unint64_t)(v36 < 0x5D291692) << 32)) + 0x578BAE4E18E8C1D5;
  v22[65] = v38;
  v39 = (v35 ^ ((((_DWORD)v23 - 1045692411) | 0x3A118758u) - 0x42220001250DE77BLL))
      + ((2 * v35) & 0x1AD5F3FBALL)
      + (v36 | ((unint64_t)(v36 < 0x5D291692) << 32))
      - 0x30FC5553E740462CLL;
  v22[75] = v39;
  v20[333] = v33;
  v20[336] = v32;
  v20[338] = v31;
  v20[341] = v30;
  v20[343] = v22[28];
  v20[463] = v38;
  v40 = v22[26];
  v20[345] = v22[27];
  v20[347] = v28;
  LODWORD(STACK[0x11A4]) = STACK[0x18E4];
  LODWORD(STACK[0x11A8]) = STACK[0x18CC];
  v20[348] = v40;
  LODWORD(STACK[0x11AC]) = v37;
  v20[350] = v22[14];
  LODWORD(STACK[0x11BC]) = STACK[0x18BC];
  v20[353] = v22[39];
  v20[355] = v22[24];
  LODWORD(STACK[0x11D4]) = STACK[0x18B8];
  v20[358] = v22[21];
  v41 = v22[17];
  v20[359] = v22[18];
  v20[467] = v22[57];
  LODWORD(STACK[0x11F4]) = STACK[0x18B4];
  v20[362] = v41;
  LODWORD(STACK[0x1214]) = STACK[0x1894];
  LODWORD(STACK[0x1218]) = 1718210905;
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * ((3355
                                * (((((v39 + 0x731E5553B3678FBDLL) ^ v23) & v23) >> (__clz((v39 + 0x731E5553B3678FBDLL) ^ v23 | 1) ^ 0x3Fu)) & 1)) ^ v23 & 0x431)))();
}

uint64_t sub_1A274BC90@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  uint64_t (*v17)(void);

  v6 = a1 ^ 0xFFFFFCED;
  v7 = v4[35];
  v8 = v4[36];
  v9 = ((a1 ^ 0xFFFFFCED) - 2111831574) | 0x799D8258;
  v10 = v4[75] + 0x731E5553B3678FC1 > (unint64_t)*(unsigned int *)(v7 + 8);
  v1[274] = v4[32];
  v11 = v4[30];
  v1[275] = v4[31];
  v1[279] = v11;
  v12 = v4[28];
  v1[281] = v4[29];
  v1[284] = v12;
  v1[455] = v4[65];
  v13 = v4[26];
  v1[285] = v4[27];
  v14 = ((a1 ^ 0xFFFFFCED) - 790) | 8;
  v1[288] = v7;
  v15 = v10;
  v1[290] = v8;
  LODWORD(STACK[0x1050]) = STACK[0x18E4];
  LODWORD(STACK[0x1054]) = STACK[0x18CC];
  v1[291] = v13;
  LODWORD(STACK[0x1074]) = STACK[0x1884];
  v1[292] = v4[14];
  LODWORD(STACK[0x10C4]) = STACK[0x18BC];
  v1[293] = v4[39];
  v1[295] = v4[24];
  LODWORD(STACK[0x10E0]) = STACK[0x18B8];
  v1[298] = v4[21];
  v16 = v4[17];
  v1[300] = v4[18];
  v1[459] = v4[57];
  LODWORD(STACK[0x1100]) = STACK[0x18B4];
  v1[303] = v16;
  v17 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((v15 * ((v5 + v14 + 257) ^ v9)) ^ v6)) - 4);
  LODWORD(STACK[0x1104]) = v2;
  return v17();
}

void sub_1A274BDAC(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(v2 + 8 * a1);
  v5 = STACK[0x1884];
  v6 = ((a1 + 1064) ^ 0xA2D6ED42) + LODWORD(STACK[0x1884]);
  v1[174] = v3[32];
  v7 = v3[30];
  v1[177] = v3[31];
  v1[178] = v7;
  v1[387] = v4;
  v1[180] = v3[28];
  v1[394] = v3[65];
  v8 = v3[26];
  v1[181] = v3[27];
  v1[182] = v3[35];
  v9 = v3[35];
  v1[183] = v3[36];
  LODWORD(STACK[0xDF0]) = STACK[0x18E4];
  LODWORD(STACK[0xDF4]) = STACK[0x18CC];
  v1[184] = v8;
  LODWORD(STACK[0xE14]) = v5;
  v1[186] = v3[14];
  LODWORD(STACK[0xE24]) = STACK[0x18BC];
  v1[189] = v3[39];
  v1[191] = v3[24];
  LODWORD(STACK[0xE3C]) = STACK[0x18B8];
  v1[194] = v3[17];
  LODWORD(STACK[0xE6C]) = STACK[0x1894];
  v1[195] = v9;
  LODWORD(STACK[0xE7C]) = v6;
  JUMPOUT(0x1A274C9D0);
}

uint64_t sub_1A274BE6C()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  int v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  v6 = STACK[0x1974];
  v7 = LODWORD(STACK[0x1974]) == v2;
  v8 = v4[90];
  v1[10] = v4[91];
  v1[11] = v8;
  v1[12] = v4[89];
  v1[14] = v4[88];
  v1[17] = v4[87];
  v1[278] = v4[109];
  v1[19] = v4[85];
  v9 = v4[80];
  v1[22] = v4[82];
  v1[23] = v9;
  LODWORD(STACK[0xA78]) = STACK[0x19FC];
  LODWORD(STACK[0xA7C]) = STACK[0x19EC];
  LODWORD(STACK[0xA9C]) = STACK[0x19D4];
  v1[26] = v4[76];
  LODWORD(STACK[0xABC]) = STACK[0x19C4];
  v10 = v4[71];
  v1[28] = v4[73];
  v1[29] = v10;
  v11 = v4[69];
  v1[30] = v4[70];
  v1[31] = v11;
  v1[286] = v4[107];
  LODWORD(STACK[0xADC]) = STACK[0x19BC];
  v1[33] = v4[68];
  LODWORD(STACK[0xAF4]) = STACK[0x1984];
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2198 * v7) ^ (v0 + 71465193)))
                          - ((v0 - v5 + 1659) ^ 0x764));
  LODWORD(STACK[0xB04]) = v6;
  return v12();
}

uint64_t sub_1A274BF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void (*a25)(uint64_t),int *a26,void (*a27)(uint64_t),uint64_t (*a28)(uint64_t),uint64_t a29)
{
  int v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;

  v34 = (uint64_t *)v32[167];
  v30[450] = v34;
  v32[166] = 0;
  LODWORD(STACK[0x658]) = 0;
  a27(a29);
  v35 = *a26;
  v36 = *v34;
  v37 = *((_DWORD *)v34 + 3);
  v30[453] = (char *)v34 + 12;
  v38 = v30[423];
  v39 = v30[426];
  v40 = 932829133 * (((v33 - 136) & 0xCBAB961F | ~((v33 - 136) | 0xCBAB961F)) ^ 0x941F346D);
  v32[275] = v36;
  v32[279] = v38;
  v32[278] = v39;
  *(_DWORD *)(v33 - 120) = (v29 - 439) ^ v40;
  *(_DWORD *)(v33 - 116) = 1017140188 - v40 + 1793297355 * v35;
  *(_DWORD *)(v33 - 128) = -532470131 - v40 + (v29 ^ 0x3C9) + v37 + ~((2 * v37) & 0xC0864D1A) - 1192;
  a25(v33 - 136);
  LODWORD(v34) = *(_DWORD *)(v33 - 124);
  v41 = a28(a29);
  LODWORD(STACK[0x764]) = (_DWORD)v34;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v31 + 8 * ((((_DWORD)v34 == 1934675644) * (v29 + 1972)) ^ v29))
                                          - 12))(v41);
}

uint64_t sub_1A274C080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void (*a21)(uint64_t),unsigned int *a22,uint64_t (*a23)(_QWORD, uint64_t, uint64_t))
{
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v30 = *(_QWORD *)(v27 + 8 * (v23 - 1422));
  v31 = 2106769199 * (((v24 | 0xB49BE55596D43D03) - (v24 & 0xB49BE55596D43D03)) ^ 0xF48A5D3BF9281636);
  *(_QWORD *)(v28 + 2216) = v25;
  *(_QWORD *)(v28 + 2200) = v31 + v30 - 8;
  *(_DWORD *)(v29 - 128) = v23 - 822708365 - v31;
  a21(v29 - 136);
  v32 = a23(*a22, a20, v26);
  v33 = ((v32 << ((((v23 + 114) ^ 0xD6) + 93) ^ (-40 * ((v23 + 114) ^ 0xD6)))) & 0xEDD5FFEE) + (v32 ^ 0x76EAFFF7);
  v34 = *(_QWORD *)(v27 + 8 * (v23 - 1487));
  v35 = 2106769199 * ((((2 * v24) | 0x8B37FF4E4B821E42) - v24 - 0x459BFFA725C10F21) ^ 0x58A47C94A3D2414);
  *(_QWORD *)(v28 + 2216) = v25;
  *(_DWORD *)(v29 - 128) = v23 - 822708365 - v35;
  *(_QWORD *)(v28 + 2200) = v35 + v34 - 8;
  v36 = ((uint64_t (*)(uint64_t))a21)(v29 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27
                                                      + 8
                                                      * ((v23 - 1422) ^ 0x57B ^ (19
                                                                               * ((((v33 - ((v23 - 1422) ^ 0x76EAFE25)) | (((v23 - 1422) ^ 0x76EAFE25) - v33)) & 0x80000000) == 0))))
                                          - 8))(v36);
}

uint64_t sub_1A274C224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void (*a25)(uint64_t),int *a26,void (*a27)(uint64_t),uint64_t (*a28)(uint64_t),uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57)
{
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  int v66;
  int v67;
  uint64_t v68;

  v61 = (a57 - 1856) | 0x489;
  a27(a29);
  v62 = *a26;
  v63 = **(_QWORD **)(v57 + 3600);
  v64 = **(_DWORD **)(v57 + 3624);
  v65 = *(_QWORD *)(v57 + 3408);
  v66 = 932829133 * ((((v60 - 136) | 0xA668708E) - (v60 - 136) + ((v60 - 136) & 0x59978F70)) ^ 0x6232D03);
  v59[279] = *(_QWORD *)(v57 + 3384);
  v59[278] = v65;
  *(_DWORD *)(v60 - 128) = -532470131 - v66 + v64 - ((v61 - 1064941455) & (2 * v64));
  *(_DWORD *)(v60 - 120) = (a57 - 439) ^ v66;
  *(_DWORD *)(v60 - 116) = 1017140188 - v66 + 1793297355 * v62;
  v59[275] = v63;
  a25(v60 - 136);
  v67 = *(_DWORD *)(v60 - 124);
  v68 = a28(a29);
  LODWORD(STACK[0x764]) = v67;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v58
                                                      + 8
                                                      * ((814
                                                        * (LODWORD(STACK[0x764]) == ((37 * (v61 ^ 0x4AD) - 12267737) & 0xBB32D7)
                                                                                  + 1666239526)) ^ v61))
                                          - 8))(v68);
}

void sub_1A274C390(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[168] = 0;
  v4 = *(_QWORD *)(v2 + 8 * a1);
  v1[64] = v3[91];
  v1[66] = v3[90];
  v1[67] = v3[89];
  v1[68] = v3[88];
  v1[69] = v3[87];
  v1[316] = v3[109];
  v1[71] = v3[85];
  v1[74] = v3[82];
  v1[76] = v3[80];
  LODWORD(STACK[0xBA0]) = STACK[0x19FC];
  LODWORD(STACK[0xBA4]) = STACK[0x19EC];
  v1[78] = v3[77];
  LODWORD(STACK[0xBC4]) = STACK[0x19D4];
  v1[79] = v3[76];
  LODWORD(STACK[0xBD4]) = STACK[0x19C4];
  v1[82] = v3[73];
  v1[324] = v4;
  v1[84] = v3[71];
  LODWORD(STACK[0xBFC]) = STACK[0x19C0];
  v1[85] = v3[70];
  v1[86] = v3[69];
  v1[329] = v3[107];
  LODWORD(STACK[0xC0C]) = STACK[0x19BC];
  v1[87] = v3[68];
  LODWORD(STACK[0xC24]) = STACK[0x1984];
  JUMPOUT(0x1A274C468);
}

uint64_t sub_1A274C5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t (*a32)(uint64_t, uint64_t),uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;

  v65 = *(_QWORD **)(v63 + 4464);
  *v65 = 0;
  v65[1] = 0;
  *(_QWORD *)(v63 + 4480) = v65 + 1;
  **(_QWORD **)(v63 + 4464) = a32(4096, 2241923698);
  return ((uint64_t (*)(void))(*(_QWORD *)(v64 + 8 * ((115 * (((v62 - 118) ^ (a62 == 2)) & 1)) ^ v62))
                            - ((v62 - 1549) | 0x885u)
                            + 2201))();
}

uint64_t sub_1A274C620(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((((v1 - 1441529783) | 0x51A98258) ^ (v2 + 169)) * (a1 == 0)) ^ v1)))();
}

uint64_t sub_1A274C664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t (*a36)(_QWORD))
{
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = a36(*(_QWORD *)(v36 + 4464));
  *(_QWORD *)(v36 + 736) = 0;
  LOBYTE(STACK[0xE3B]) = 0;
  LODWORD(STACK[0xC34]) = 1718210903;
  LODWORD(STACK[0x1628]) = STACK[0xC34];
  *(_BYTE *)(v37 + 435) = STACK[0xE3B];
  **(_QWORD **)(v36 + 4232) = *(_QWORD *)(v36 + 736);
  return (*(uint64_t (**)(uint64_t))(v36 + 4440))(v38);
}

uint64_t sub_1A274C6D0()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t (*v5)(void);

  v4 = STACK[0x658];
  LODWORD(STACK[0x141C]) = STACK[0x658];
  LODWORD(STACK[0x8A4]) = v4;
  *(_QWORD *)(v3 + 1712) = v1[554];
  *(_QWORD *)(v3 + 1720) = v1[551];
  *(_QWORD *)(v3 + 1728) = v1[550];
  *(_QWORD *)(v3 + 1736) = v1[549];
  *(_QWORD *)(v3 + 1744) = v1[548];
  v1[231] = STACK[0x1648];
  *(_QWORD *)(v3 + 1752) = v1[547];
  *(_QWORD *)(v3 + 1760) = v1[545];
  *(_QWORD *)(v3 + 1768) = v1[542];
  LODWORD(STACK[0x8C4]) = STACK[0x1624];
  LODWORD(STACK[0x8C8]) = STACK[0x1604];
  *(_QWORD *)(v3 + 1776) = v1[540];
  LODWORD(STACK[0x8CC]) = STACK[0x15E4];
  *(_QWORD *)(v3 + 1784) = v1[538];
  LODWORD(STACK[0x8EC]) = STACK[0x15A4];
  *(_QWORD *)(v3 + 1792) = v1[537];
  *(_QWORD *)(v3 + 1800) = v1[534];
  LODWORD(STACK[0x91C]) = STACK[0x1594];
  *(_QWORD *)(v3 + 1808) = v1[532];
  *(_QWORD *)(v3 + 1816) = v1[531];
  v1[242] = STACK[0x1608];
  LODWORD(STACK[0x92C]) = STACK[0x157C];
  *(_QWORD *)(v3 + 1824) = v1[530];
  LODWORD(STACK[0x94C]) = STACK[0x156C];
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((47 * *(unsigned __int8 *)(v3 + 435)) ^ (v0 + 71467316)))
                         - ((v0 ^ 0xFBBD876F)
                          + 1676566401)
                         + 1676566448);
  LODWORD(STACK[0x950]) = STACK[0x1628];
  return v5();
}

uint64_t sub_1A274C800@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  _QWORD *v2;
  int v3;
  uint64_t v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t (*v9)(void);

  v7 = v5[168];
  v2[454] = v7;
  v8 = LODWORD(STACK[0x141C]) > *(_DWORD *)(v7 + 8);
  v5[184] = v2[554];
  v5[185] = v2[551];
  v5[186] = v2[550];
  v5[187] = v2[549];
  v5[188] = v2[548];
  v2[196] = *(_QWORD *)(a1 + 121);
  v5[189] = v2[547];
  v5[190] = v2[545];
  v5[191] = v2[542];
  LODWORD(STACK[0x77C]) = STACK[0x1624];
  v5[192] = v2[540];
  LODWORD(STACK[0x78C]) = STACK[0x15E4];
  v5[193] = v2[538];
  LODWORD(STACK[0x790]) = STACK[0x15A4];
  v5[194] = v2[537];
  v5[195] = v2[534];
  LODWORD(STACK[0x794]) = STACK[0x1594];
  v5[196] = v2[532];
  v5[197] = v2[531];
  v2[207] = *(_QWORD *)(a1 + 57);
  LODWORD(STACK[0x7B4]) = STACK[0x157C];
  v5[198] = v2[530];
  LODWORD(STACK[0x7FC]) = STACK[0x156C];
  v9 = (uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v8 * (v6 + a2 + 71467210)) ^ a2)) - 8);
  LODWORD(STACK[0x80C]) = v3;
  return v9();
}

void sub_1A274C900(uint64_t a1@<X3>, int a2@<W8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 + 8 * a2);
  v2[174] = v2[554];
  v2[177] = v2[551];
  v2[178] = v2[550];
  v2[387] = v4 + ((a2 + 1796607110) & 0x94E9F772) - 1080;
  v2[180] = v2[548];
  v2[394] = *(_QWORD *)(a1 + 121);
  v2[181] = v2[547];
  v2[182] = v2[545];
  v2[183] = v2[542];
  LODWORD(STACK[0xDF0]) = STACK[0x1624];
  LODWORD(STACK[0xDF4]) = STACK[0x1604];
  v2[184] = v2[540];
  LODWORD(STACK[0xE14]) = STACK[0x15E4];
  v2[186] = v2[538];
  LODWORD(STACK[0xE24]) = STACK[0x15A4];
  v2[189] = v2[537];
  v2[191] = v2[534];
  LODWORD(STACK[0xE3C]) = STACK[0x1594];
  v2[194] = v2[530];
  LODWORD(STACK[0xE6C]) = STACK[0x156C];
  v2[195] = v2[454];
  JUMPOUT(0x1A274C9CCLL);
}

void sub_1A274CB68()
{
  uint64_t v0;
  _QWORD *v1;

  v1[229] = v1[91];
  v1[230] = v1[90];
  v1[231] = v1[89];
  v1[232] = v1[88];
  v1[233] = v1[87];
  *(_QWORD *)(v0 + 1984) = v1[109];
  v1[234] = v1[85];
  v1[235] = v1[82];
  v1[236] = v1[80];
  LODWORD(STACK[0x954]) = STACK[0x19FC];
  LODWORD(STACK[0x974]) = STACK[0x19EC];
  v1[237] = v1[77];
  LODWORD(STACK[0x984]) = STACK[0x19D4];
  v1[238] = v1[76];
  LODWORD(STACK[0x9AC]) = STACK[0x19C4];
  v1[239] = v1[73];
  v1[240] = v1[71];
  LODWORD(STACK[0x9BC]) = STACK[0x19C0];
  v1[241] = v1[70];
  v1[242] = v1[69];
  *(_QWORD *)(v0 + 2072) = v1[107];
  LODWORD(STACK[0x9D0]) = STACK[0x19BC];
  v1[243] = v1[68];
  JUMPOUT(0x1A274D408);
}

uint64_t sub_1A274CC40()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  uint64_t (*v6)(void);

  LODWORD(STACK[0x142C]) = STACK[0x80C];
  LODWORD(STACK[0x144C]) = STACK[0x7FC];
  v1[457] = v4[198];
  LODWORD(STACK[0x1450]) = STACK[0x7B4];
  v1[584] = v1[207];
  v1[458] = v4[197];
  v1[460] = v4[196];
  LODWORD(STACK[0x1454]) = STACK[0x794];
  v1[464] = v4[195];
  v1[465] = v4[194];
  LODWORD(STACK[0x1464]) = STACK[0x790];
  v1[471] = v4[193];
  LODWORD(STACK[0x1484]) = STACK[0x78C];
  v1[472] = v4[192];
  LODWORD(STACK[0x14B4]) = STACK[0x77C];
  v1[475] = v4[191];
  v1[478] = v4[190];
  v1[479] = v4[189];
  v1[593] = v1[196];
  v1[482] = v4[188];
  v1[484] = v4[187];
  v1[487] = v4[186];
  v1[488] = v4[185];
  v6 = (uint64_t (*)(void))(*(_QWORD *)(v3
                                     + 8
                                     * (((LODWORD(STACK[0x142C]) != (((v0 + 71465144) | 0x25) ^ (v2 - 45)))
                                       * (v0 - v5 - 227)) | (v0 + 71467604)))
                         - 4);
  v1[489] = v4[184];
  return v6();
}

void sub_1A274CD50()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(v3 + 1344);
  v5 = *(_QWORD *)(v2 + 8 * v0);
  v1[365] = v1[489];
  v1[366] = v1[488];
  v1[367] = v1[487];
  v1[369] = v1[484];
  v1[372] = v1[482];
  v1[477] = v1[593];
  v1[374] = v1[479];
  v1[377] = v1[478];
  v1[378] = v1[475];
  LODWORD(STACK[0x122C]) = STACK[0x14B4];
  LODWORD(STACK[0x1244]) = STACK[0x142C];
  LODWORD(STACK[0x1264]) = STACK[0x1484];
  v1[381] = v1[471];
  LODWORD(STACK[0x1284]) = STACK[0x1464];
  v1[485] = v5;
  v1[384] = v1[465];
  v1[386] = v1[464];
  LODWORD(STACK[0x1288]) = STACK[0x1454];
  v1[388] = v1[460];
  v1[389] = v1[458];
  v1[491] = v1[584];
  LODWORD(STACK[0x128C]) = STACK[0x1450];
  v1[390] = v1[457];
  LODWORD(STACK[0x1298]) = STACK[0x144C];
  v1[392] = v4;
  JUMPOUT(0x1A274E728);
}

void sub_1A274CE20(int a1@<W8>)
{
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v5 = **(_QWORD **)(v4 + 1344);
  v6 = *(_QWORD *)(v4 + 1328);
  v7 = LODWORD(STACK[0x658])
     + ((5 * ((a1 + 86) ^ 0x167u)) ^ 0xA26F9DB82A3905E4)
     - ((2 * LODWORD(STACK[0x658])) & 0x54720850);
  v8 = *(_QWORD *)(v3 + 8 * (a1 + 86)) - 8;
  v1[395] = v1[489];
  v1[398] = v1[488];
  v1[399] = v1[487];
  v1[402] = v1[484];
  v1[403] = v1[482];
  v1[499] = v1[593];
  v1[404] = v1[479];
  v1[405] = v1[478];
  v1[406] = v1[475];
  LODWORD(STACK[0x129C]) = STACK[0x14B4];
  LODWORD(STACK[0x12AC]) = v2;
  v1[409] = v1[472];
  LODWORD(STACK[0x12EC]) = STACK[0x1484];
  v1[410] = v1[471];
  LODWORD(STACK[0x1308]) = STACK[0x1464];
  v1[413] = v1[465];
  v1[416] = v1[464];
  v1[505] = v8;
  LODWORD(STACK[0x130C]) = STACK[0x1454];
  v1[418] = v1[460];
  v1[419] = v1[458];
  v1[513] = v1[584];
  LODWORD(STACK[0x131C]) = STACK[0x1450];
  v1[420] = v1[457];
  LODWORD(STACK[0x1334]) = STACK[0x144C];
  v1[421] = v5;
  v1[519] = 0x10067F75D0A830F1;
  v1[422] = v6;
  v1[533] = v7;
  JUMPOUT(0x1A274CF68);
}

uint64_t sub_1A274D0CC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = v1[168];
  *(_DWORD *)(v2 + 8) = STACK[0x658];
  *(_DWORD *)(v2 + 12) = 0;
  v1[199] = v1[155];
  v1[200] = v1[154];
  v1[201] = v1[153];
  v1[202] = v1[152];
  v1[203] = v1[150];
  v0[214] = v1[148];
  v1[204] = v1[147];
  v1[205] = v1[145];
  v1[206] = v1[142];
  LODWORD(STACK[0x824]) = STACK[0x1B8C];
  LODWORD(STACK[0x834]) = STACK[0x1B7C];
  LODWORD(STACK[0x838]) = STACK[0x1B64];
  v1[207] = v1[138];
  LODWORD(STACK[0x83C]) = STACK[0x1B54];
  v1[208] = v1[137];
  v1[209] = v1[135];
  LODWORD(STACK[0x85C]) = STACK[0x1B50];
  v1[210] = v1[133];
  v1[211] = v1[132];
  v0[224] = v1[140];
  LODWORD(STACK[0x86C]) = STACK[0x1B4C];
  v1[212] = v1[131];
  LODWORD(STACK[0x894]) = STACK[0x1B2C];
  v1[213] = v2;
  v3 = v1[213];
  v4 = STACK[0x894];
  v5 = v1[212];
  v6 = STACK[0x86C];
  v7 = v0[224];
  v8 = v1[211];
  v9 = v1[210];
  v10 = STACK[0x85C];
  v11 = v1[209];
  v12 = v1[208];
  v13 = STACK[0x83C];
  v14 = v1[207];
  v15 = STACK[0x838];
  v16 = STACK[0x834];
  v17 = STACK[0x824];
  v18 = v1[206];
  v19 = v1[205];
  v20 = v1[204];
  v21 = v0[214];
  v22 = v1[203];
  v23 = v1[202];
  v24 = v1[201];
  v25 = v1[200];
  v26 = v1[199];
  LODWORD(STACK[0x8A4]) = STACK[0x658];
  v1[214] = v26;
  v1[215] = v25;
  v1[216] = v24;
  v1[217] = v23;
  v1[218] = v22;
  v0[231] = v21;
  v1[219] = v20;
  v1[220] = v19;
  v1[221] = v18;
  LODWORD(STACK[0x8C4]) = v17;
  LODWORD(STACK[0x8C8]) = v16;
  v1[222] = v3;
  LODWORD(STACK[0x8CC]) = v15;
  v1[223] = v14;
  LODWORD(STACK[0x8EC]) = v13;
  v1[224] = v12;
  v1[225] = v11;
  LODWORD(STACK[0x91C]) = v10;
  v1[226] = v9;
  v1[227] = v8;
  v0[242] = v7;
  LODWORD(STACK[0x92C]) = v6;
  v1[228] = v5;
  LODWORD(STACK[0x94C]) = v4;
  LODWORD(STACK[0x950]) = v16;
  return sub_1A274D270();
}

uint64_t sub_1A274D270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unsigned int *a33,void (*a34)(_QWORD, unint64_t, _QWORD),uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v60;
  _QWORD *v61;
  _QWORD *v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned int *, void (*)(_QWORD, unint64_t, _QWORD), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  int v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  int v99;
  unint64_t v100;

  LODWORD(a49) = STACK[0x950];
  LODWORD(a47) = STACK[0x94C];
  v90 = (v60 - 61917381) & 0x9FC2694D;
  v100 = v62[228];
  v99 = STACK[0x92C];
  v97 = v62[227];
  v98 = v61[242];
  v96 = v62[226];
  v95 = STACK[0x91C];
  v93 = v62[224];
  v94 = v62[225];
  LODWORD(a51) = STACK[0x8EC];
  v92 = v62[223];
  LODWORD(a48) = STACK[0x8CC];
  v91 = v62[222];
  LODWORD(a44) = STACK[0x8C8];
  LODWORD(a43) = STACK[0x8C4];
  v89 = v62[221];
  v63 = v62[220];
  v64 = v62[219];
  v65 = v61[231];
  v66 = v62[218];
  v67 = v62[217];
  v68 = v62[216];
  v69 = v62[215];
  v70 = STACK[0x1D80];
  a34(*a33, STACK[0x1C00], LODWORD(STACK[0x8A4]));
  STACK[0x1DF8] = v70;
  STACK[0x1E00] = v69;
  STACK[0x1E08] = v68;
  STACK[0x1E10] = v67;
  STACK[0x1E18] = v66;
  v61[248] = v65;
  STACK[0x1E20] = v64;
  STACK[0x1E28] = v63;
  STACK[0x1E30] = v89;
  LODWORD(STACK[0x954]) = a43;
  LODWORD(STACK[0x974]) = a44;
  STACK[0x1E38] = v91;
  LODWORD(STACK[0x984]) = a48;
  STACK[0x1E40] = v92;
  LODWORD(STACK[0x9AC]) = a51;
  STACK[0x1E48] = v93;
  STACK[0x1E50] = v94;
  LODWORD(STACK[0x9BC]) = v95;
  STACK[0x1E58] = v96;
  STACK[0x1E60] = v97;
  v61[259] = v98;
  LODWORD(STACK[0x9D0]) = v99;
  STACK[0x1E68] = v100;
  LODWORD(STACK[0x9D4]) = a47;
  LODWORD(STACK[0x9D8]) = a49;
  LODWORD(STACK[0x14D4]) = a47;
  v61[492] = STACK[0x1E68];
  LODWORD(STACK[0x14D8]) = STACK[0x9D0];
  v61[601] = v61[259];
  v61[493] = STACK[0x1E60];
  v61[496] = STACK[0x1E58];
  LODWORD(STACK[0x14DC]) = STACK[0x9BC];
  v61[498] = STACK[0x1E50];
  v61[501] = STACK[0x1E48];
  LODWORD(STACK[0x14EC]) = STACK[0x9AC];
  v61[502] = STACK[0x1E40];
  LODWORD(STACK[0x1504]) = STACK[0x984];
  v61[503] = STACK[0x1E38];
  LODWORD(STACK[0x1514]) = STACK[0x974];
  LODWORD(STACK[0x1544]) = STACK[0x954];
  v61[506] = STACK[0x1E30];
  v61[507] = STACK[0x1E28];
  v71 = STACK[0x1E20];
  v61[510] = STACK[0x1E20];
  v72 = v61[248];
  v61[611] = v72;
  v73 = STACK[0x1E18];
  v61[512] = STACK[0x1E18];
  v74 = STACK[0x1E10];
  v61[515] = STACK[0x1E10];
  v75 = STACK[0x1E08];
  v61[516] = STACK[0x1E08];
  v76 = STACK[0x1E00];
  v61[517] = STACK[0x1E00];
  v77 = STACK[0x1DF8];
  v61[520] = STACK[0x1DF8];
  v61[10] = v77;
  v61[11] = v76;
  v61[12] = v75;
  v61[14] = v74;
  v61[17] = v73;
  v61[278] = v72;
  v61[19] = v71;
  v78 = v61[506];
  v61[22] = v61[507];
  v61[23] = v78;
  LODWORD(STACK[0xA78]) = STACK[0x1544];
  LODWORD(STACK[0xA7C]) = STACK[0x1514];
  LODWORD(STACK[0xA9C]) = STACK[0x1504];
  v61[26] = v61[502];
  LODWORD(STACK[0xABC]) = STACK[0x14EC];
  v79 = v61[498];
  v61[28] = v61[501];
  v61[29] = v79;
  v80 = v61[493];
  v61[30] = v61[496];
  v61[31] = v80;
  v61[286] = v61[601];
  LODWORD(STACK[0xADC]) = STACK[0x14D8];
  v61[33] = v61[492];
  LODWORD(STACK[0xAF4]) = STACK[0x14D4];
  v81 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned int *, void (*)(_QWORD, unint64_t, _QWORD), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(4223502164 - ((v90 ^ 0x80) - 71465321) + *(_QWORD *)(a60 + 8 * (int)((1905 * ((_DWORD)a49 == 1718253555)) ^ v90)));
  LODWORD(STACK[0xB04]) = a49;
  return v81(v90, a49, v82, v83, v84, v85, v86, v87, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           v89,
           a43,
           a44,
           v90,
           v91,
           a47,
           a48,
           a49,
           v92,
           a51);
}

uint64_t sub_1A274D590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v53 = v49 ^ 0x8ED;
  v54 = *(_QWORD *)(v51 + 8 * v49) + v53 - 2100;
  v55 = v50[503];
  LOBYTE(STACK[0x15CF]) = v55 == 0;
  v50[521] = v55 + 12;
  v50[524] = v55 + 8;
  v56 = v50[516];
  *(_QWORD *)(v52 + 1952) = v56;
  v50[260] = v54;
  STACK[0x1E78] = (unint64_t)&STACK[0x65C];
  v50[526] = v56;
  LODWORD(a49) = STACK[0x1544];
  LODWORD(a48) = STACK[0x1514];
  LODWORD(a47) = STACK[0x1504];
  LODWORD(a43) = STACK[0x14DC];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v51 + 8 * (int)((((v53 - 1021741028) | 0x38A40710) + 71465664) ^ ((8 * (LOBYTE(STACK[0x15CF]) ^ 1)) | (32 * (LOBYTE(STACK[0x15CF]) ^ 1))))) - (((((_DWORD)v53 - 1021741028) | 0x38A40710) + 71465152) | 0x200u) + 532))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           v50[524],
           a36,
           v50[521],
           LODWORD(STACK[0x1A5C]),
           a39,
           a40,
           a41,
           v50[496],
           a43,
           v50[498],
           v50[501],
           v50[502],
           a47,
           a48,
           a49,
           v50[506],
           v50[507]);
}

uint64_t sub_1A274D6E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unsigned int *a36,uint64_t a37,unsigned int *a38)
{
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _BOOL4 v41;
  BOOL v42;
  int v43;
  int v44;
  int v45;

  v39 = (*a38 ^ 0xCE9FDAEFBEFFDF57) + 0x3160251139822EEBLL + ((2 * *a38) & 0x17DFFBEAELL);
  v40 = ((((a9 - 4356635) & 0xFBFFFF5A) - 0x4840400C6C4F4FC9) ^ *a36)
      + ((2 * *a36) & 0x11EDC6F1ELL)
      + 0x4840400C6913D6AFLL;
  v41 = v39 < 0xF8820E3E;
  v42 = v39 > v40;
  v43 = v41 ^ (v40 < 0xF8820E3E);
  v44 = v42;
  if (v43)
    v45 = v41;
  else
    v45 = v44;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 + 8 * ((2912 * (v45 ^ 1)) ^ a9)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_1A274D7D4@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,_DWORD *a30,int a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,_QWORD *a52)
{
  uint64_t (*v52)(void);
  _DWORD *v53;
  unsigned int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;

  v54 = ((2 * a31) & 0xA5FF7FF6) + (a31 ^ 0x52FFBFFB) - 1392492539;
  v55 = *(unsigned __int8 *)(*a52 + v54);
  v56 = (v55 - ((2 * v55) & 0x16) + 150) << a1;
  v57 = *(unsigned __int8 *)(*a52 + v54 + 1);
  v58 = *(unsigned __int8 *)(*a52 + v54 + 2);
  v59 = (((v57 - ((2 * v57) & 0x13A)) << 16) - 1902313472) ^ 0x8E9D0000 | (v56 - 184549376) ^ 0x8B000000 | (((v58 + 3338208 - ((2 * v58) & 0xBBBBBBBB)) << 8) - 768) ^ 0x32EFDD00;
  v60 = *(unsigned __int8 *)(*a52 + v54 + 3);
  v61 = ((v60 - 285719737 - ((2 * v60) & 0x8E)) ^ 0xE7A74194) & ~v59 | v59 & 0xF6A0FD00;
  *v53 = (((v61 ^ 0x7F619929) - 1972886616) ^ ((v61 ^ 0x5B2A7D6C) - 1373386781) ^ ((v61 ^ 0x2D14E696) - 669164519))
       + 1779679125;
  *a30 += 4;
  return v52();
}

#error "1A274DA04: call analysis failed (funcsize=41)"

uint64_t sub_1A274DA08()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v1
                                                                                   + 8
                                                                                   * (int)((589
                                                                                          * (LODWORD(STACK[0x65C]) == (((v2 & 0xA72A843D) - 4209732) & 0xFBFDBF7E ^ 0x9DD7F0AB))) ^ v2 & 0xA72A843D)))(v0[601], v0[493], v0[520], LODWORD(STACK[0x14D8]), v0[512], v0[611]);
}

void sub_1A274DAC4()
{
  JUMPOUT(0x1A274D698);
}

#error "1A274DC10: call analysis failed (funcsize=72)"

#error "1A274DD10: call analysis failed (funcsize=61)"

#error "1A274DEDC: call analysis failed (funcsize=95)"

void sub_1A274DEE0(int a1@<W8>)
{
  uint64_t v1;

  **(_DWORD **)(v1 + 4168) = LODWORD(STACK[0x1564]) + LODWORD(STACK[0x1568]) + ((a1 + 1816) ^ 0x99958021);
  JUMPOUT(0x1A274D5DCLL);
}

void sub_1A274DF44(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, int a4@<W3>, unint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, int a8@<W7>, unint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40,int a41,char a42,unint64_t a43,unint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t a65;
  unint64_t a66;
  unint64_t a67;
  unint64_t v67;
  unint64_t v68;
  int v69;
  int v70;
  int v71;
  int v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  int v80;
  unint64_t v81;
  int v82;
  unint64_t v83;
  int v84;
  unint64_t v85;
  unint64_t v86;
  int v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  int v91;
  unint64_t v92;
  int v93;
  unint64_t v94;
  int v95;
  int v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v100;

  v78[468] = a43;
  v78[364] = a44;
  STACK[0x19B0] = a44;
  STACK[0x19C8] = a43;
  LOBYTE(STACK[0x10C3]) = a42;
  LODWORD(STACK[0x121C]) = v80;
  LODWORD(STACK[0x1A5C]) = a39;
  LODWORD(STACK[0x1A60]) = v80;
  LOBYTE(STACK[0x1A67]) = a42;
  STACK[0x1E80] = a3;
  v78[268] = a6;
  v100 = v68;
  LODWORD(STACK[0x9DC]) = v69;
  LODWORD(STACK[0x9FC]) = v70;
  STACK[0x208] = v67;
  LODWORD(STACK[0xA0C]) = v72;
  STACK[0x220] = v73;
  LODWORD(STACK[0xA34]) = v76;
  *v78 = v74;
  LODWORD(STACK[0xA44]) = a8;
  v78[3] = v75;
  v78[4] = v77;
  v78[7] = a2;
  v78[276] = a1;
  LODWORD(STACK[0xA64]) = a4;
  v78[9] = v79;
  LODWORD(STACK[0xA74]) = v71;
  v82 = STACK[0xA74];
  v83 = STACK[0x278];
  v84 = STACK[0xA64];
  v85 = STACK[0xAD0];
  v86 = STACK[0x268];
  v87 = STACK[0xA44];
  v89 = STACK[0x248];
  v88 = STACK[0x250];
  v90 = STACK[0x230];
  v91 = STACK[0xA34];
  v92 = STACK[0x220];
  v93 = STACK[0xA0C];
  v94 = STACK[0x208];
  v95 = STACK[0x9FC];
  v96 = STACK[0x9DC];
  v97 = STACK[0xA90];
  v98 = *(_QWORD *)(a63 + 8 * (int)((a7 + 1233075653) & 0xB680B9F9))
      + ((((a7 + 1233075653) & 0xB680B9F9) << 6) ^ 0xFFFFFFFFFFFFEFBCLL);
  STACK[0xD98] = STACK[0x1E80];
  STACK[0xDA0] = a65;
  STACK[0xDA8] = a66;
  STACK[0xDB8] = a67;
  STACK[0xDD0] = a5;
  STACK[0x1118] = v97;
  STACK[0xDE0] = a9;
  STACK[0xDF8] = v81;
  STACK[0xE00] = v100;
  LODWORD(STACK[0x122C]) = v96;
  LODWORD(STACK[0x1244]) = v95;
  LODWORD(STACK[0x1264]) = v93;
  STACK[0xE18] = v92;
  LODWORD(STACK[0x1284]) = v91;
  STACK[0x1158] = v98;
  STACK[0xE30] = v90;
  STACK[0xE40] = v89;
  LODWORD(STACK[0x1288]) = v87;
  STACK[0xE50] = v88;
  STACK[0xE58] = v86;
  STACK[0x1188] = v85;
  LODWORD(STACK[0x128C]) = v84;
  STACK[0xE60] = v83;
  LODWORD(STACK[0x1298]) = v82;
  STACK[0xE70] = v94;
  JUMPOUT(0x1A274E724);
}

void sub_1A274E5AC()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = STACK[0xAF4];
  v2 = v0[33];
  v3 = STACK[0xADC];
  v4 = v0[286];
  v6 = v0[30];
  v5 = v0[31];
  v8 = v0[28];
  v7 = v0[29];
  v9 = STACK[0xABC];
  v10 = v0[26];
  v11 = STACK[0xA9C];
  v12 = STACK[0xA7C];
  v13 = STACK[0xA78];
  v15 = v0[22];
  v14 = v0[23];
  v16 = v0[19];
  v17 = v0[278];
  v18 = v0[17];
  v19 = v0[14];
  v21 = v0[11];
  v20 = v0[12];
  v22 = v0[10];
  LODWORD(STACK[0xB08]) = STACK[0xB04];
  v0[36] = v22;
  v0[38] = v21;
  v0[41] = v20;
  v0[42] = v19;
  v0[45] = v18;
  v0[297] = v17;
  v0[47] = v16;
  v0[48] = v15;
  LODWORD(STACK[0xB0C]) = v13;
  LODWORD(STACK[0xB2C]) = v12;
  LODWORD(STACK[0xB3C]) = v11;
  v0[49] = v14;
  v0[50] = v10;
  LODWORD(STACK[0xB64]) = v9;
  v0[52] = v8;
  v0[55] = v7;
  v0[57] = v6;
  v0[305] = v4;
  LODWORD(STACK[0xB74]) = v3;
  v0[60] = v5;
  v0[61] = v2;
  LODWORD(STACK[0xB8C]) = v1;
  JUMPOUT(0x1A274E64CLL);
}

uint64_t sub_1A274E840()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v4 = **(_QWORD **)(v2 + 776);
  *(_QWORD *)(v2 + 1008) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8
                                             * (((v4 != 0) * (((v0 - 1581941086) | 0x5A080510) ^ (v3 - 691))) ^ v0))
                            - ((v0 - 4351020) & 0xFBFFE7DD ^ 0xFBBD8750)))();
}

uint64_t sub_1A274E8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t (*a36)(void),uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;

  ((void (*)(_QWORD))a36)(*(_QWORD *)(v64 + 1008));
  v65 = *(_QWORD **)(v64 + 776);
  *v65 = 0;
  v65[1] = 0;
  v66 = a36();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v63 + 8 * ((492 * (a62 == 2)) ^ (v62 + 71465851))) - 4))(v66);
}

uint64_t sub_1A274E910()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v1 + 1592) = *(_QWORD *)(v1 + 960);
  *(_QWORD *)(v1 + 1600) = *(_QWORD *)(v1 + 944);
  *(_QWORD *)(v1 + 1608) = *(_QWORD *)(v1 + 936);
  *(_QWORD *)(v1 + 1616) = *(_QWORD *)(v1 + 928);
  *(_QWORD *)(v1 + 1624) = *(_QWORD *)(v1 + 920);
  v0[214] = *(_QWORD *)(v1 + 1024);
  *(_QWORD *)(v1 + 1632) = *(_QWORD *)(v1 + 896);
  *(_QWORD *)(v1 + 1640) = *(_QWORD *)(v1 + 888);
  *(_QWORD *)(v1 + 1648) = *(_QWORD *)(v1 + 880);
  v2 = STACK[0x1ADC];
  LODWORD(STACK[0x824]) = STACK[0x1ADC];
  v3 = STACK[0x1ABC];
  LODWORD(STACK[0x834]) = STACK[0x1ABC];
  v4 = STACK[0x1AB8];
  LODWORD(STACK[0x838]) = STACK[0x1AB8];
  *(_QWORD *)(v1 + 1656) = *(_QWORD *)(v1 + 848);
  v5 = STACK[0x1AB4];
  LODWORD(STACK[0x83C]) = STACK[0x1AB4];
  *(_QWORD *)(v1 + 1664) = *(_QWORD *)(v1 + 840);
  *(_QWORD *)(v1 + 1672) = *(_QWORD *)(v1 + 832);
  v6 = STACK[0x1AB0];
  LODWORD(STACK[0x85C]) = STACK[0x1AB0];
  *(_QWORD *)(v1 + 1680) = *(_QWORD *)(v1 + 824);
  *(_QWORD *)(v1 + 1688) = *(_QWORD *)(v1 + 816);
  v0[224] = *(_QWORD *)(v1 + 976);
  v7 = STACK[0x1A9C];
  LODWORD(STACK[0x86C]) = STACK[0x1A9C];
  *(_QWORD *)(v1 + 1696) = *(_QWORD *)(v1 + 800);
  v8 = STACK[0x1A8C];
  LODWORD(STACK[0x894]) = STACK[0x1A8C];
  v9 = *(_QWORD *)(v1 + 944);
  v0[10] = *(_QWORD *)(v1 + 960);
  v0[11] = v9;
  v0[12] = *(_QWORD *)(v1 + 936);
  v0[14] = *(_QWORD *)(v1 + 928);
  v0[17] = *(_QWORD *)(v1 + 920);
  v0[278] = *(_QWORD *)(v1 + 1024);
  v0[19] = *(_QWORD *)(v1 + 896);
  v10 = *(_QWORD *)(v1 + 880);
  v0[22] = *(_QWORD *)(v1 + 888);
  v0[23] = v10;
  LODWORD(STACK[0xA78]) = v2;
  LODWORD(STACK[0xA7C]) = v3;
  LODWORD(STACK[0xA9C]) = v4;
  v0[26] = *(_QWORD *)(v1 + 848);
  LODWORD(STACK[0xABC]) = v5;
  v11 = *(_QWORD *)(v1 + 832);
  v0[28] = *(_QWORD *)(v1 + 840);
  v0[29] = v11;
  v12 = *(_QWORD *)(v1 + 816);
  v0[30] = *(_QWORD *)(v1 + 824);
  v0[31] = v12;
  v0[286] = *(_QWORD *)(v1 + 976);
  LODWORD(STACK[0xADC]) = v7;
  v0[33] = *(_QWORD *)(v1 + 800);
  *(_QWORD *)(v1 + 1704) = 0;
  LODWORD(STACK[0xAF4]) = v8;
  LODWORD(STACK[0xB04]) = STACK[0x1AB4];
  LODWORD(STACK[0xB9C]) = v6;
  return (*(uint64_t (**)(void))(v1 + 984))();
}

void sub_1A274EA88()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_1A274EA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);

  v8 = STACK[0xD54];
  LODWORD(STACK[0x16C4]) = STACK[0xD44];
  v5[588] = v5[142];
  LODWORD(STACK[0x16E4]) = STACK[0xD2C];
  *(_QWORD *)(a4 + 217) = v5[371];
  v5[589] = v5[141];
  v5[590] = v5[140];
  LODWORD(STACK[0x16E8]) = STACK[0xD1C];
  v5[591] = v5[138];
  v5[594] = v5[135];
  LODWORD(STACK[0x16EC]) = STACK[0xCE4];
  v5[595] = v5[134];
  LODWORD(STACK[0x170C]) = STACK[0xCD4];
  v5[598] = v5[131];
  LODWORD(STACK[0x171C]) = STACK[0xCD0];
  LODWORD(STACK[0x174C]) = STACK[0xCCC];
  v5[600] = v5[129];
  v5[603] = v5[126];
  v9 = v5[124];
  v5[605] = v9;
  v10 = v5[360];
  *(_QWORD *)(a4 + 249) = v10;
  v11 = v5[123];
  v5[606] = v11;
  v12 = v5[122];
  v5[607] = v12;
  v13 = v5[121];
  v5[608] = v13;
  v14 = v5[119];
  v5[609] = v14;
  v15 = v5[116];
  v5[612] = v15;
  v5[143] = v15;
  v5[145] = v14;
  v5[148] = v13;
  v5[150] = v12;
  v5[153] = v11;
  v5[379] = v10;
  v5[154] = v9;
  v5[157] = v5[603];
  v5[159] = v5[600];
  LODWORD(STACK[0xD58]) = STACK[0x174C];
  LODWORD(STACK[0xD5C]) = STACK[0x171C];
  v5[161] = v5[598];
  LODWORD(STACK[0xD7C]) = STACK[0x170C];
  v5[162] = v5[595];
  LODWORD(STACK[0xD8C]) = STACK[0x16EC];
  v5[163] = v5[594];
  v5[165] = v5[591];
  LODWORD(STACK[0xDB4]) = STACK[0x16E8];
  v5[168] = v5[590];
  v5[170] = v5[589];
  v5[383] = *(_QWORD *)(a4 + 217);
  LODWORD(STACK[0xDC4]) = STACK[0x16E4];
  v5[173] = v5[588];
  LODWORD(STACK[0xDDC]) = STACK[0x16C4];
  v16 = (uint64_t (*)(void))(*(_QWORD *)(v7
                                      + 8
                                      * ((3158 * (v8 == ((v4 + 207894649) & 0xF7DE45BF ^ (v6 - 1425)))) ^ (v4 + 71466553)))
                          - 12);
  LODWORD(STACK[0xDEC]) = v8;
  return v16();
}

uint64_t sub_1A274EC4C@<X0>(uint64_t a1@<X3>, char a2@<W8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  _DWORD *v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t (*v10)(void);

  v5 = *(_DWORD **)(v2 + 4872);
  v6 = STACK[0x174C];
  v7 = LODWORD(STACK[0x174C]) - 537762601 - ((2 * LODWORD(STACK[0x174C])) & 0xBFE4C9AE);
  v8 = **(_QWORD **)(v2 + 4728);
  v9 = ((2 * *v5) & 0xFDF67FB2) + (*v5 ^ 0x7EFB3FD9) - 2130395097;
  *(_BYTE *)(v8 + v9) = (v7 >> (a2 ^ 0x89)) ^ 0xDF;
  *(_BYTE *)(v8 + v9 + 1) = BYTE2(v7) ^ 0xF2;
  *(_BYTE *)(v8 + v9 + 2) = ((BYTE1(v7) ^ 0x64) - ((2 * (BYTE1(v7) ^ 0x64)) & 0x96) + 75) ^ 0x4B;
  *(_BYTE *)(v8 + v9 + 3) = v7 ^ 0xD7;
  *v5 += 4;
  *(_QWORD *)(v2 + 1144) = *(_QWORD *)(v2 + 4896);
  *(_QWORD *)(v2 + 1160) = v5;
  *(_QWORD *)(v2 + 1184) = *(_QWORD *)(v2 + 4864);
  *(_QWORD *)(v2 + 1200) = *(_QWORD *)(v2 + 4856);
  *(_QWORD *)(v2 + 1224) = *(_QWORD *)(v2 + 4848);
  *(_QWORD *)(v2 + 3032) = *(_QWORD *)(a1 + 249);
  *(_QWORD *)(v2 + 1232) = *(_QWORD *)(v2 + 4840);
  *(_QWORD *)(v2 + 1256) = *(_QWORD *)(v2 + 4824);
  *(_QWORD *)(v2 + 1272) = *(_QWORD *)(v2 + 4800);
  LODWORD(STACK[0xD58]) = v6;
  LODWORD(STACK[0xD5C]) = STACK[0x171C];
  *(_QWORD *)(v2 + 1288) = *(_QWORD *)(v2 + 4784);
  LODWORD(STACK[0xD7C]) = STACK[0x170C];
  *(_QWORD *)(v2 + 1296) = *(_QWORD *)(v2 + 4760);
  LODWORD(STACK[0xD8C]) = STACK[0x16EC];
  *(_QWORD *)(v2 + 1304) = *(_QWORD *)(v2 + 4752);
  *(_QWORD *)(v2 + 1320) = *(_QWORD *)(v2 + 4728);
  LODWORD(STACK[0xDB4]) = STACK[0x16E8];
  *(_QWORD *)(v2 + 1344) = *(_QWORD *)(v2 + 4720);
  *(_QWORD *)(v2 + 1360) = *(_QWORD *)(v2 + 4712);
  *(_QWORD *)(v2 + 3064) = *(_QWORD *)(a1 + 217);
  LODWORD(STACK[0xDC4]) = STACK[0x16E4];
  *(_QWORD *)(v2 + 1384) = *(_QWORD *)(v2 + 4704);
  LODWORD(STACK[0xDDC]) = STACK[0x16C4];
  LODWORD(STACK[0xDEC]) = v3;
  LODWORD(STACK[0x1768]) = STACK[0xDEC];
  LODWORD(STACK[0x176C]) = STACK[0xDDC];
  *(_QWORD *)(v2 + 4904) = *(_QWORD *)(v2 + 1384);
  LODWORD(STACK[0x1770]) = STACK[0xDC4];
  *(_QWORD *)(v4 + 48) = *(_QWORD *)(v2 + 3064);
  *(_QWORD *)(v2 + 4928) = *(_QWORD *)(v2 + 1360);
  *(_QWORD *)(v2 + 4944) = *(_QWORD *)(v2 + 1344);
  LODWORD(STACK[0x1774]) = STACK[0xDB4];
  *(_QWORD *)(v2 + 4968) = *(_QWORD *)(v2 + 1320);
  *(_QWORD *)(v2 + 4984) = *(_QWORD *)(v2 + 1304);
  LODWORD(STACK[0x178C]) = STACK[0xD8C];
  *(_QWORD *)(v2 + 4992) = *(_QWORD *)(v2 + 1296);
  LODWORD(STACK[0x179C]) = STACK[0xD7C];
  *(_QWORD *)(v2 + 5000) = *(_QWORD *)(v2 + 1288);
  LODWORD(STACK[0x17DC]) = STACK[0xD5C];
  LODWORD(STACK[0x17FC]) = STACK[0xD58];
  *(_QWORD *)(v2 + 5008) = *(_QWORD *)(v2 + 1272);
  *(_QWORD *)(a1 + 1) = *(_QWORD *)(v2 + 1256);
  *(_QWORD *)(a1 + 9) = *(_QWORD *)(v2 + 1232);
  *(_QWORD *)(v4 + 128) = *(_QWORD *)(v2 + 3032);
  *(_QWORD *)(a1 + 33) = *(_QWORD *)(v2 + 1224);
  *(_QWORD *)(a1 + 41) = *(_QWORD *)(v2 + 1200);
  *(_QWORD *)(a1 + 65) = *(_QWORD *)(v2 + 1184);
  *(_QWORD *)(a1 + 73) = *(_QWORD *)(v2 + 1160);
  v10 = *(uint64_t (**)(void))(v2 + 1144);
  *(_QWORD *)(a1 + 97) = v10;
  return v10();
}

void sub_1A274EE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void (*a36)(_QWORD))
{
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  int v39;

  v38 = *(_QWORD **)(v37 + 1064);
  a36(*v38);
  *v38 = *(_QWORD *)(v37 + 1048);
  **(_DWORD **)(v37 + 1056) = *(_QWORD *)(v37 + 1120);
  v36[198] = *(_QWORD *)(v37 + 1240);
  v36[200] = *(_QWORD *)(v37 + 1232);
  v36[201] = *(_QWORD *)(v37 + 1224);
  v36[202] = *(_QWORD *)(v37 + 1216);
  v36[203] = *(_QWORD *)(v37 + 1200);
  v36[408] = *(_QWORD *)(v37 + 1184);
  v36[205] = *(_QWORD *)(v37 + 1176);
  v36[208] = *(_QWORD *)(v37 + 1160);
  v36[209] = *(_QWORD *)(v37 + 1136);
  LODWORD(STACK[0xE90]) = STACK[0x1B8C];
  LODWORD(STACK[0xE94]) = STACK[0x1B7C];
  v36[212] = *(_QWORD *)(v37 + 1128);
  LODWORD(STACK[0xE98]) = STACK[0x1B64];
  v36[213] = *(_QWORD *)(v37 + 1104);
  LODWORD(STACK[0xE9C]) = STACK[0x1B54];
  v36[216] = *(_QWORD *)(v37 + 1096);
  v36[217] = *(_QWORD *)(v37 + 1080);
  LODWORD(STACK[0xEBC]) = STACK[0x1B50];
  v36[218] = *(_QWORD *)(v37 + 1064);
  v36[219] = *(_QWORD *)(v37 + 1056);
  v36[414] = *(_QWORD *)(v37 + 1120);
  v39 = STACK[0x1B4C];
  LODWORD(STACK[0xEEC]) = STACK[0x1B4C];
  v36[220] = *(_QWORD *)(v37 + 1048);
  LODWORD(STACK[0xF08]) = STACK[0x1B2C];
  LODWORD(STACK[0xF0C]) = v39;
  JUMPOUT(0x1A274EF80);
}

uint64_t sub_1A274F268()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);

  v6 = STACK[0x1104];
  v7 = v0 ^ (v5 - 778);
  v8 = v0 + 71465395;
  v9 = v0 + 71466471;
  v4[41] = v1[303];
  LODWORD(STACK[0x1914]) = STACK[0x1100];
  v4[83] = v1[459];
  v4[44] = v1[300];
  v10 = v1[298];
  LODWORD(STACK[0x1924]) = STACK[0x10E0];
  v11 = v1[295];
  v4[46] = v10;
  v4[47] = v11;
  v12 = v1[293];
  LODWORD(STACK[0x1944]) = STACK[0x10C4];
  v13 = v1[292];
  v4[48] = v12;
  v4[49] = v13;
  LODWORD(STACK[0x1948]) = STACK[0x1074];
  v14 = v1[291];
  LODWORD(STACK[0x194C]) = STACK[0x1054];
  LODWORD(STACK[0x195C]) = STACK[0x1050];
  v15 = v1[290];
  v4[50] = v14;
  v4[51] = v15;
  v4[52] = v1[288];
  v16 = v1[285];
  v4[55] = v16;
  v17 = v1[455];
  v4[98] = v17;
  v18 = v1[284];
  v19 = v1[281];
  v4[58] = v18;
  v4[59] = v19;
  v20 = v1[279];
  v4[62] = v20;
  v21 = v1[275];
  v4[64] = v21;
  v22 = v1[274];
  v4[67] = v22;
  v1[304] = v22;
  v1[307] = v21;
  v1[309] = v20;
  v1[310] = v19;
  v1[311] = v18;
  v1[461] = v17;
  v1[312] = v16;
  v1[314] = v4[52];
  v23 = v4[50];
  v1[317] = v4[51];
  LODWORD(STACK[0x1114]) = STACK[0x195C];
  LODWORD(STACK[0x1134]) = STACK[0x194C];
  v1[319] = v23;
  LODWORD(STACK[0x1138]) = STACK[0x1948];
  v24 = v4[48];
  v1[322] = v4[49];
  LODWORD(STACK[0x113C]) = STACK[0x1944];
  v1[323] = v24;
  v25 = v4[46];
  v1[326] = v4[47];
  LODWORD(STACK[0x114C]) = STACK[0x1924];
  v1[328] = v25;
  v1[330] = v4[44];
  v1[462] = v4[83];
  LODWORD(STACK[0x1164]) = STACK[0x1914];
  v1[331] = v4[41];
  v26 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v6 == v2 + v7 - 1073) * (v8 ^ 0x237)) ^ v9)) - 12);
  LODWORD(STACK[0x1184]) = v6;
  return v26();
}

void sub_1A274F3F0()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  _DWORD *v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  int v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;

  v5 = (_DWORD *)v4[48];
  v6 = STACK[0x1948];
  v7 = STACK[0x1948];
  v8 = (v6 ^ 0x8884CD4F) & (2 * (v6 & 0xA2D6E96E)) ^ v6 & 0xA2D6E96E;
  v9 = ((2 * (v6 ^ 0xC9201DC3)) ^ 0xD7EDE95A) & (v6 ^ 0xC9201DC3) ^ (2 * (v6 ^ 0xC9201DC3)) & 0x6BF6F4AC;
  v10 = v9 ^ 0x281214A5;
  v11 = (v9 ^ 0x23E4F00C) & (4 * v8) ^ v8;
  v12 = ((4 * v10) ^ 0xAFDBD2B4) & v10 ^ (4 * v10) & 0x6BF6F4AC;
  v13 = (v12 ^ 0x2BD2D0A0) & (16 * v11) ^ v11;
  v14 = ((16 * (v12 ^ 0x40242409)) ^ 0xBF6F4AD0) & (v12 ^ 0x40242409) ^ (16 * (v12 ^ 0x40242409)) & 0x6BF6F4A0;
  v15 = v13 ^ 0x6BF6F4AD ^ (v14 ^ 0x2B664000) & (v13 << 8);
  v17 = v4[51];
  v16 = (uint64_t *)v4[52];
  v18 = *v16;
  v19 = LODWORD(STACK[0x1948]) ^ (2
                                * ((v15 << 16) & 0x6BF60000 ^ v15 ^ ((v15 << 16) ^ 0x74AD0000) & (((v14 ^ 0x4090B42D) << 8) & 0x6BF60000 ^ 0x9020000 ^ (((v14 ^ 0x4090B42D) << 8) ^ 0x76F40000) & (v14 ^ 0x4090B42D))));
  v20 = ((2 * *v5) & 0xFC6E6AFE) + (*v5 ^ (((4 * v0) ^ 0x5E0) - 29936717)) + 29936257;
  *(_BYTE *)(*v16 + v20) = HIBYTE(v19) ^ 0xB4;
  *(_BYTE *)(v18 + v20 + 1) = BYTE2(v19) ^ 0x73;
  *(_BYTE *)(v18 + v20 + 2) = (BYTE1(v19) - ((v19 >> 7) & 0x96) + 75) ^ 0x4B;
  *(_BYTE *)(v18 + v20 + 3) = v19 ^ 0x34;
  v21 = (*v5 + 4);
  *v5 = v21;
  v22 = *v16;
  v23 = v4[98];
  v24 = (v23 ^ 0x27710DA9CDED3754) & (2 * (v23 & 0xA87451B189EE2799)) ^ v23 & 0xA87451B189EE2799;
  v25 = *(_QWORD *)(v3 + 8 * v0);
  v1[395] = v4[67];
  v26 = ((2 * (v23 ^ 0x77512EE9CF257E64)) ^ 0xBE4AFEB08D96B3FALL) & (v23 ^ 0x77512EE9CF257E64) ^ (2 * (v23 ^ 0x77512EE9CF257E64)) & 0x5F257F5846CB59FCLL;
  v1[398] = v4[64];
  v1[399] = v4[62];
  v27 = v26 ^ 0x4125014842494805;
  v28 = (v26 ^ 0x82004E00048010E8) & (4 * v24) ^ v24;
  v29 = v4[58];
  v1[402] = v4[59];
  v1[403] = v29;
  v1[499] = v4[98];
  v30 = ((4 * v27) ^ 0x7C95FD611B2D67F4) & v27 ^ (4 * v27) & 0xDF257F5846CB59FCLL;
  v1[404] = v4[55];
  v1[405] = v4[52];
  v1[406] = v17;
  v31 = (v30 ^ 0x5C057D40020941F0) & (16 * v28) ^ v28;
  LODWORD(STACK[0x129C]) = STACK[0x195C];
  LODWORD(STACK[0x12AC]) = STACK[0x194C];
  v32 = v4[49];
  v33 = ((16 * (v30 ^ 0x8320021844C21809)) ^ 0xF257F5846CB59FD0) & (v30 ^ 0x8320021844C21809) ^ (16 * (v30 ^ 0x8320021844C21809)) & 0xDF257F5846CB59F0;
  v1[409] = v4[50];
  LODWORD(STACK[0x12EC]) = v7;
  v34 = v4[48];
  v35 = (v33 ^ 0xD205750044811900) & (v31 << 8) ^ v31;
  v1[410] = v4[49];
  LODWORD(STACK[0x1308]) = STACK[0x1944];
  v1[413] = v34;
  v36 = v4[46];
  v37 = (((v33 ^ 0xD200A58024A402DLL) << 8) ^ 0x257F5846CB59FD00) & (v33 ^ 0xD200A58024A402DLL) ^ ((v33 ^ 0xD200A58024A402DLL) << 8) & 0xDF257F5846CB5900;
  v1[416] = v4[47];
  v1[505] = v25;
  LODWORD(STACK[0x130C]) = STACK[0x1924];
  v1[418] = v36;
  v1[419] = v4[44];
  v1[513] = v4[83];
  LODWORD(STACK[0x131C]) = STACK[0x1914];
  v1[420] = v4[41];
  LODWORD(STACK[0x1334]) = v2;
  v1[421] = v22;
  v1[519] = (v21 ^ 0x1F9FFFBFF9FFF4DELL) - 0xF99804A2957C3EDLL + ((2 * v21) & 0x1F3FFE9BCLL);
  v1[422] = v32;
  v1[533] = v23 ^ (2 * (v37 & 0x464840C900000000 ^ v35 ^ (v37 ^ 0x525584042490000) & (v35 << 16))) ^ 0x21B4C89A3D723B1;
  JUMPOUT(0x1A274CF58);
}

uint64_t sub_1A274F8A8()
{
  _QWORD *v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);

  v2 = STACK[0x1184];
  v3 = v0[331];
  v4 = STACK[0x1164];
  v5 = v0[462];
  v6 = v0[330];
  v7 = v0[328];
  v8 = STACK[0x114C];
  v9 = v0[326];
  v10 = v0[323];
  v11 = STACK[0x113C];
  v12 = v0[322];
  v13 = STACK[0x1138];
  v14 = v0[319];
  v15 = STACK[0x1134];
  v16 = STACK[0x1114];
  v17 = v0[317];
  v18 = v0[314];
  v19 = v0[312];
  v20 = v0[461];
  v21 = v0[311];
  v22 = v0[310];
  v23 = v0[309];
  v24 = v0[307];
  v0[333] = v0[304];
  v0[336] = v24;
  v0[338] = v23;
  v0[341] = v22;
  v0[343] = v21;
  v0[463] = v20;
  v0[345] = v19;
  v0[346] = v18;
  v0[347] = v17;
  LODWORD(STACK[0x11A4]) = v16;
  LODWORD(STACK[0x11A8]) = v15;
  v0[348] = v14;
  LODWORD(STACK[0x11AC]) = v13;
  v0[350] = v12;
  LODWORD(STACK[0x11BC]) = v11;
  v0[353] = v10;
  v0[355] = v9;
  LODWORD(STACK[0x11D4]) = v8;
  v0[358] = v7;
  v0[359] = v6;
  v0[467] = v5;
  LODWORD(STACK[0x11F4]) = v4;
  v0[362] = v3;
  LODWORD(STACK[0x1214]) = v2;
  LODWORD(STACK[0x1218]) = v2;
  LODWORD(STACK[0x1974]) = STACK[0x1218];
  LODWORD(STACK[0x1984]) = STACK[0x1214];
  v1[68] = v0[362];
  LODWORD(STACK[0x19BC]) = STACK[0x11F4];
  v1[107] = v0[467];
  v1[69] = v0[359];
  v1[70] = v0[358];
  LODWORD(STACK[0x19C0]) = STACK[0x11D4];
  v1[71] = v0[355];
  v1[73] = v0[353];
  LODWORD(STACK[0x19C4]) = STACK[0x11BC];
  v1[76] = v0[350];
  LODWORD(STACK[0x19D4]) = STACK[0x11AC];
  v1[77] = v0[348];
  LODWORD(STACK[0x19EC]) = STACK[0x11A8];
  LODWORD(STACK[0x19FC]) = STACK[0x11A4];
  v25 = (uint64_t (*)(void))v0[347];
  v1[80] = v25;
  v1[82] = v0[346];
  v1[85] = v0[345];
  v1[109] = v0[463];
  v1[87] = v0[343];
  v1[88] = v0[341];
  v1[89] = v0[338];
  v1[90] = v0[336];
  v1[91] = v0[333];
  return v25();
}

uint64_t sub_1A274FB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  uint64_t v63;

  return ((uint64_t (*)(void))(*(_QWORD *)(v63
                                        + 8
                                        * (((((8 * v62) ^ 0x590) - 1044) ^ ((v62 + 131) | 0x220) | v62) ^ (4 * (((a62 - v62) | (v62 - a62)) >= 0))))
                            - 4))();
}

uint64_t sub_1A274FB8C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((1156 * (v1 ^ 0x2A7) - 1204193216) | 0x43840610) + 71465561) * (a1 == 0)) ^ v1)))();
}

uint64_t sub_1A274FBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  uint64_t v63;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v63
                                                               + 8
                                                               * (((a62 == 2)
                                                                 * (((v62 + 163644402) | 0x220040E0) ^ 0x2BC148C0)) ^ v62))
                                                   - ((v62 + 724) ^ 0x6E9)))(a1, 0x7B177EDEFFDFAFB0);
}

uint64_t sub_1A274FC3C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;

  v8 = (a3 - 236160774) & 0xE2523FDF;
  *(_QWORD *)(v4 + 4344) = v3;
  v9 = v3 - 1;
  v10 = ((v7 + v8 - 224 + 0x10401D808) & (2 * v9)) + (v9 ^ a2);
  *(_BYTE *)(v6[130] + v10 + v6[161]) = *(_BYTE *)(v6[127] + v10 + a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (int)((960 * (v9 != 0)) ^ v8)) - 8))();
}

uint64_t sub_1A274FCC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int v66;

  *(_QWORD *)(v64 + 4344) = v62;
  return ((uint64_t (*)(void))(*(_QWORD *)(v65 + 8 * ((218 * (a62 == 3)) ^ (v63 + 71467033)))
                            - (v63 - v66 - 227)
                            - 2))();
}

uint64_t sub_1A274FCCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  uint64_t v63;

  return ((uint64_t (*)(void))(*(_QWORD *)(v63
                                        + 8
                                        * (int)((((v62 - 67133479) & 0xFFBDE77C) + 71466224) | v62 | (((a62 - v62) | (v62 - a62)) >= 0)))
                            - 12))();
}

uint64_t sub_1A274FD20()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v1 + 8 * ((3628 * *(unsigned __int8 *)(v2 + 435)) ^ (v0 + 71466992)));
  *(_DWORD *)(v3 - 176) = STACK[0x114C];
  return ((uint64_t (*)(void))(v4 - ((v0 + 387757919) & 0xED25C15F ^ 0x1BLL)))();
}

uint64_t sub_1A274FD78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v7 = a4 & 0xFFFFFFFFED25C15FLL;
  v8 = *(_QWORD *)(v5 + 8 * v7);
  v9 = (v7 + 523);
  LODWORD(STACK[0x244]) = STACK[0x113C];
  v6[241] = v4[484];
  v6[242] = v4[482];
  v6[243] = v4[479];
  LODWORD(STACK[0x264]) = STACK[0x1138];
  LODWORD(STACK[0x274]) = STACK[0x1134];
  v6[244] = v4[475];
  v6[245] = &STACK[0x1BF8];
  v4[214] = v8 + v9 - 550;
  v4[224] = v4[561];
  LODWORD(STACK[0x29C]) = STACK[0x1114];
  LODWORD(STACK[0x2AC]) = STACK[0x1104];
  v6[246] = v4[465];
  LODWORD(STACK[0x2C4]) = STACK[0x10E0];
  v22 = v4[464];
  v23 = v4[460];
  LODWORD(STACK[0x2D4]) = STACK[0x10C4];
  v24 = v4[458];
  v10 = v4[457];
  v4[231] = v4[553];
  LODWORD(STACK[0x2D8]) = STACK[0x1074];
  v25 = v4[454];
  LODWORD(STACK[0x2DC]) = STACK[0x1054];
  LODWORD(STACK[0x2FC]) = 1742982805;
  LODWORD(STACK[0x1164]) = STACK[0x2FC];
  LODWORD(STACK[0x1184]) = STACK[0x2DC];
  v4[492] = v25;
  LODWORD(STACK[0x11A4]) = STACK[0x2D8];
  v4[576] = v4[231];
  v4[493] = v10;
  v4[496] = v24;
  LODWORD(STACK[0x11A8]) = STACK[0x2D4];
  v4[498] = v23;
  v4[501] = v22;
  LODWORD(STACK[0x11AC]) = STACK[0x2C4];
  v4[502] = v6[246];
  LODWORD(STACK[0x11BC]) = STACK[0x2AC];
  LODWORD(STACK[0x11D4]) = STACK[0x29C];
  v4[584] = v4[224];
  v11 = v4[214];
  v4[503] = v6[245];
  v4[506] = v6[244];
  LODWORD(STACK[0x11F4]) = STACK[0x274];
  v12 = STACK[0x264];
  LODWORD(STACK[0x1214]) = STACK[0x264];
  v13 = v6[243];
  v4[507] = v13;
  v14 = v6[242];
  v4[510] = v14;
  v15 = v6[241];
  v4[512] = v15;
  v16 = STACK[0x244];
  LODWORD(STACK[0x1218]) = STACK[0x244];
  v17 = v6[164];
  v4[515] = v17;
  v4[516] = v11;
  v4[30] = v11;
  v4[31] = v17;
  v18 = *(_DWORD *)(v17 + 12);
  v17 += 12;
  v4[517] = v17;
  LODWORD(STACK[0x121C]) = v18;
  LODWORD(STACK[0x3F4]) = v16;
  v4[19] = v15;
  v4[22] = v14;
  v4[23] = v13;
  LODWORD(STACK[0x404]) = v12;
  LODWORD(STACK[0x408]) = STACK[0x11F4];
  v4[26] = v17;
  v19 = v4[503];
  v4[28] = v4[506];
  v4[29] = v19;
  v4[259] = v4[584];
  LODWORD(STACK[0x40C]) = STACK[0x11D4];
  LODWORD(STACK[0x42C]) = STACK[0x11BC];
  v4[33] = v4[502];
  LODWORD(STACK[0x43C]) = STACK[0x1164];
  LODWORD(STACK[0x464]) = STACK[0x11AC];
  v4[36] = v4[501];
  v4[38] = v4[498];
  LODWORD(STACK[0x474]) = STACK[0x11A8];
  v20 = v4[493];
  v4[41] = v4[496];
  v4[42] = v20;
  v4[260] = v4[576];
  LODWORD(STACK[0x48C]) = STACK[0x11A4];
  v4[45] = v4[492];
  LODWORD(STACK[0x498]) = STACK[0x1184];
  LODWORD(STACK[0x49C]) = 1718210905;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t *))(v5
                                                                                  + 8
                                                                                  * (int)(((v18 < 0xFFFFFFFB)
                                                                                         * (((v9 - 520) | 0xC0) + 1706)) ^ v9)))(a1, a2, a3, &STACK[0x15CF]);
}

#error "1A27501A4: call analysis failed (funcsize=88)"

uint64_t sub_1A27501A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unint64_t v23;

  v8 = *(_QWORD *)(v6 + 8 * v4);
  v9 = ((_DWORD)v4 - 166) | 0x2C2u;
  LODWORD(STACK[0x4BC]) = STACK[0x1218];
  v10 = (v9 ^ 0xFFFFFFFFFFFFFD02) + v8;
  v11 = v5[510];
  v5[47] = v5[512];
  v5[48] = v11;
  v12 = v5[507];
  LODWORD(STACK[0x4CC]) = STACK[0x1214];
  LODWORD(STACK[0x4F4]) = STACK[0x11F4];
  v13 = v5[517];
  v5[49] = v12;
  v5[50] = v13;
  v5[52] = v5[506];
  v5[55] = v5[503];
  v5[57] = v5[516];
  v14 = v5[515];
  v5[268] = v5[584];
  LODWORD(STACK[0x504]) = STACK[0x11D4];
  LODWORD(STACK[0x51C]) = STACK[0x11BC];
  v15 = v5[502];
  v5[60] = v14;
  v5[61] = v15;
  LODWORD(STACK[0x52C]) = STACK[0x1164];
  LODWORD(STACK[0x530]) = STACK[0x11AC];
  v5[276] = v10;
  v5[64] = v5[498];
  LODWORD(STACK[0x534]) = STACK[0x11A8];
  v5[66] = v5[492];
  LODWORD(STACK[0x554]) = STACK[0x1184];
  v5[67] = v5[515];
  LODWORD(STACK[0x560]) = 4;
  v16 = (v9 + 1748);
  v17 = LODWORD(STACK[0x560]);
  v5[568] = v5[67];
  LODWORD(STACK[0x13D4]) = STACK[0x554];
  v5[569] = v5[66];
  LODWORD(STACK[0x140C]) = STACK[0x534];
  v5[570] = v5[64];
  LODWORD(STACK[0x141C]) = STACK[0x530];
  LODWORD(STACK[0x142C]) = STACK[0x52C];
  v18 = v5[60];
  v5[572] = v5[61];
  LODWORD(STACK[0x144C]) = STACK[0x51C];
  LODWORD(STACK[0x1450]) = STACK[0x504];
  *(_QWORD *)(a4 + 25) = v5[268];
  v5[574] = v18;
  v5[577] = v5[57];
  v5[578] = v5[55];
  v5[581] = v5[52];
  v19 = v5[49];
  v5[583] = v5[50];
  LODWORD(STACK[0x1454]) = STACK[0x4F4];
  LODWORD(STACK[0x1464]) = STACK[0x4CC];
  v5[585] = v19;
  v20 = v5[47];
  v5[587] = v5[48];
  v21 = v5[568];
  v22 = *(_DWORD *)(v21 + 8);
  v5[588] = v20;
  v23 = (v17 ^ 0xDFB97FBF7BBED8F7) + v22 + 0x2046804084412709 + ((v16 + 4152207396) & (2 * v17));
  LODWORD(STACK[0x1484]) = STACK[0x4BC];
  v5[589] = v5[276];
  v5[590] = v21 + 8;
  *(_QWORD *)(a4 + 57) = v23;
  *(_BYTE *)(v7 + 871) = v23 < 0xFFFFFFFF;
  v5[278] = v22;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)((25
                                     * (v22 <= (unint64_t)((((_DWORD)v16 - 2376) | 0x209u) + 107) + 2147482889)) ^ v16)))();
}

uint64_t sub_1A2750278()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  uint64_t (*v9)(void);

  v6 = STACK[0x1308];
  v7 = STACK[0x13C4];
  v4[212] = v1[567];
  v4[213] = v1[566];
  v4[214] = v1[565];
  v8 = STACK[0x13AC];
  *(_DWORD *)(v5 - 216) = v7;
  *(_DWORD *)(v5 - 212) = v8;
  *(_DWORD *)(v5 - 208) = v6;
  v4[215] = v1[563];
  v4[216] = v1[560];
  v4[217] = v1[558];
  v4[218] = v1[555];
  v4[219] = v1[554];
  v1[179] = v1[619];
  *(_DWORD *)(v5 - 204) = STACK[0x1398];
  *(_DWORD *)(v5 - 200) = STACK[0x1394];
  v4[220] = v1[551];
  *(_DWORD *)(v5 - 196) = STACK[0x1374];
  *(_DWORD *)(v5 - 192) = STACK[0x1344];
  v4[221] = v1[550];
  v4[222] = v1[549];
  *(_DWORD *)(v5 - 188) = STACK[0x1334];
  v4[223] = v1[548];
  v4[224] = v1[547];
  v1[188] = v1[611];
  *(_DWORD *)(v5 - 184) = STACK[0x131C];
  v4[225] = v1[545];
  v9 = (uint64_t (*)(void))(*(_QWORD *)(v3
                                     + 8
                                     * (int)(((v6 == v2 + v0 + 71465156 - 28) * ((v0 + 1696726130) & 0x9F207CFF ^ 0x3E7)) ^ (v0 + 71466394)))
                         - 8);
  *(_DWORD *)(v5 - 180) = STACK[0x130C];
  return v9();
}

void sub_1A275039C()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 + 8 * v0);
  LODWORD(STACK[0x244]) = STACK[0x13C4];
  v3[241] = v1[567];
  v3[242] = v1[566];
  v3[243] = v1[565];
  LODWORD(STACK[0x264]) = STACK[0x13AC];
  LODWORD(STACK[0x274]) = STACK[0x139C];
  v3[244] = v1[560];
  v3[245] = v1[558];
  v1[214] = v4 - 8;
  v1[224] = v1[619];
  LODWORD(STACK[0x29C]) = STACK[0x1398];
  LODWORD(STACK[0x2AC]) = STACK[0x1394];
  v3[246] = v1[551];
  LODWORD(STACK[0x2C4]) = STACK[0x1344];
  LODWORD(STACK[0x2D4]) = STACK[0x1334];
  v1[231] = v1[611];
  LODWORD(STACK[0x2D8]) = STACK[0x131C];
  LODWORD(STACK[0x2DC]) = STACK[0x130C];
  LODWORD(STACK[0x2FC]) = -979122358;
  JUMPOUT(0x1A274FE5CLL);
}

uint64_t sub_1A275047C@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  v5 = 37 * (a1 ^ 0xDEu);
  v6 = *(_QWORD *)(v2 + 8 * a1);
  LODWORD(STACK[0xE90]) = *(_DWORD *)(v4 - 216);
  v1[353] = v3[212];
  v1[355] = v3[213];
  v1[358] = v3[214];
  LODWORD(STACK[0xE94]) = *(_DWORD *)(v4 - 212);
  LODWORD(STACK[0xE98]) = *(_DWORD *)(v4 - 208);
  v1[359] = v3[215];
  v1[362] = v3[216];
  v1[364] = v3[217];
  v1[365] = v3[218];
  v1[366] = v3[219];
  v1[462] = v1[179];
  LODWORD(STACK[0xE9C]) = *(_DWORD *)(v4 - 204);
  LODWORD(STACK[0xEBC]) = *(_DWORD *)(v4 - 200);
  v1[367] = v3[220];
  LODWORD(STACK[0xEEC]) = *(_DWORD *)(v4 - 196);
  LODWORD(STACK[0xF08]) = *(_DWORD *)(v4 - 192);
  v1[463] = v6 + (v5 ^ 0xFFFFFFFFFFFFFD18);
  v1[369] = v3[221];
  v1[372] = v3[222];
  LODWORD(STACK[0xF0C]) = *(_DWORD *)(v4 - 188);
  v1[374] = v3[223];
  v1[377] = v3[224];
  v1[467] = v1[188];
  LODWORD(STACK[0xF10]) = *(_DWORD *)(v4 - 184);
  v1[378] = v3[225];
  LODWORD(STACK[0xF14]) = *(_DWORD *)(v4 - 180);
  v1[381] = &STACK[0x1BF0];
  v7 = (uint64_t *)v1[381];
  LODWORD(STACK[0x19C4]) = STACK[0xF14];
  v3[100] = v1[378];
  LODWORD(STACK[0x19D4]) = STACK[0xF10];
  v3[122] = v1[467];
  v3[102] = v1[377];
  v3[103] = v1[374];
  LODWORD(STACK[0x19EC]) = STACK[0xF0C];
  v3[104] = v1[372];
  v3[105] = v1[369];
  v8 = v1[463];
  LODWORD(STACK[0x19FC]) = STACK[0xF08];
  LODWORD(STACK[0x1A5C]) = STACK[0xEEC];
  v3[106] = v1[367];
  LODWORD(STACK[0x1A60]) = STACK[0xEBC];
  LODWORD(STACK[0x1A8C]) = STACK[0xE9C];
  v3[128] = v1[462];
  v3[110] = v1[366];
  v3[111] = v1[365];
  v3[112] = v1[364];
  v3[115] = v1[362];
  v3[116] = v1[359];
  LODWORD(STACK[0x1A9C]) = STACK[0xE98];
  LODWORD(STACK[0x1AB0]) = STACK[0xE94];
  v3[117] = v1[358];
  v3[118] = v1[355];
  v3[120] = v1[353];
  LODWORD(STACK[0x1AB4]) = STACK[0xE90];
  v9 = *v7;
  v3[123] = v9;
  v3[126] = v8;
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((v9 != 0) * (((v5 - 226) | 0x1B1) + 707)) ^ v5)))();
}

uint64_t sub_1A2753858()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = **(_QWORD **)(v2 + 984);
  *(_QWORD *)(v2 + 1016) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * (int)(((v3 == 0) * (((v0 + 949223845) | 0xC3298200) + 71467098)) ^ v0))
                            - 8))();
}

uint64_t sub_1A27538AC()
{
  uint64_t (*v0)(void);
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;

  ((void (*)(_QWORD))v0)(*(_QWORD *)(v2 + 1016));
  v4 = *(_QWORD **)(v2 + 984);
  *v4 = 0;
  v4[1] = 0;
  v5 = v0();
  v6 = STACK[0x1AB4];
  v7 = STACK[0x1AB4];
  *(_QWORD *)(v2 + 1584) = *(_QWORD *)(v2 + 960);
  *(_QWORD *)(v2 + 1592) = *(_QWORD *)(v2 + 944);
  *(_QWORD *)(v2 + 1600) = *(_QWORD *)(v2 + 936);
  v8 = STACK[0x1AB0];
  v9 = STACK[0x1AB0];
  *(_DWORD *)(v3 - 256) = v6;
  *(_DWORD *)(v3 - 252) = v8;
  *(_QWORD *)(v2 + 1608) = *(_QWORD *)(v2 + 928);
  *(_QWORD *)(v2 + 1616) = *(_QWORD *)(v2 + 920);
  *(_QWORD *)(v2 + 1624) = *(_QWORD *)(v2 + 896);
  *(_QWORD *)(v2 + 1632) = *(_QWORD *)(v2 + 888);
  *(_QWORD *)(v2 + 1640) = *(_QWORD *)(v2 + 880);
  v1[167] = *(_QWORD *)(v2 + 1024);
  v10 = STACK[0x1A8C];
  *(_DWORD *)(v3 - 248) = STACK[0x1A8C];
  v11 = STACK[0x1A60];
  *(_DWORD *)(v3 - 244) = STACK[0x1A60];
  *(_QWORD *)(v2 + 1648) = *(_QWORD *)(v2 + 848);
  v12 = STACK[0x1A5C];
  *(_DWORD *)(v3 - 240) = STACK[0x1A5C];
  v13 = STACK[0x19FC];
  *(_DWORD *)(v3 - 236) = STACK[0x19FC];
  *(_QWORD *)(v2 + 1656) = *(_QWORD *)(v2 + 840);
  *(_QWORD *)(v2 + 1664) = *(_QWORD *)(v2 + 832);
  v14 = STACK[0x19EC];
  *(_DWORD *)(v3 - 232) = STACK[0x19EC];
  *(_QWORD *)(v2 + 1672) = *(_QWORD *)(v2 + 824);
  *(_QWORD *)(v2 + 1680) = *(_QWORD *)(v2 + 816);
  v1[175] = *(_QWORD *)(v2 + 976);
  v15 = STACK[0x19D4];
  *(_DWORD *)(v3 - 228) = STACK[0x19D4];
  *(_QWORD *)(v2 + 1688) = *(_QWORD *)(v2 + 800);
  v16 = STACK[0x19C4];
  *(_DWORD *)(v3 - 224) = STACK[0x19C4];
  *(_DWORD *)(v3 - 220) = v9;
  v17 = STACK[0x1A9C];
  *(_DWORD *)(v3 - 176) = STACK[0x1A9C];
  LODWORD(STACK[0xBFC]) = v7;
  v1[267] = *(_QWORD *)(v2 + 960);
  v1[270] = *(_QWORD *)(v2 + 944);
  v1[271] = *(_QWORD *)(v2 + 936);
  LODWORD(STACK[0xC0C]) = STACK[0x1AB0];
  LODWORD(STACK[0xC24]) = v17;
  v1[272] = *(_QWORD *)(v2 + 928);
  v1[274] = *(_QWORD *)(v2 + 920);
  v1[275] = *(_QWORD *)(v2 + 896);
  v1[279] = *(_QWORD *)(v2 + 888);
  v1[281] = *(_QWORD *)(v2 + 880);
  v1[425] = *(_QWORD *)(v2 + 1024);
  LODWORD(STACK[0xC34]) = v10;
  LODWORD(STACK[0xC38]) = v11;
  v1[284] = *(_QWORD *)(v2 + 848);
  LODWORD(STACK[0xC3C]) = v12;
  LODWORD(STACK[0xC5C]) = v13;
  v1[285] = *(_QWORD *)(v2 + 840);
  v1[288] = *(_QWORD *)(v2 + 832);
  LODWORD(STACK[0xC6C]) = v14;
  v1[290] = *(_QWORD *)(v2 + 824);
  v1[291] = *(_QWORD *)(v2 + 816);
  v1[431] = *(_QWORD *)(v2 + 976);
  LODWORD(STACK[0xC94]) = v15;
  v1[292] = *(_QWORD *)(v2 + 800);
  LODWORD(STACK[0xCA4]) = v16;
  v1[293] = 0;
  return (*(uint64_t (**)(uint64_t))(v2 + 1008))(v5);
}

uint64_t sub_1A2753C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t (*a32)(uint64_t, uint64_t))
{
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  _QWORD *v36;
  uint64_t v37;

  v36 = *(_QWORD **)(v33 + 3904);
  *v36 = 0;
  v36[1] = 0;
  *(_QWORD *)(v33 + 3912) = v36 + 1;
  v37 = a32(4096, 2241923698);
  **(_QWORD **)(v33 + 3904) = v37;
  return (*(uint64_t (**)(void))(v34
                              + 8
                              * (((((89 * (v32 ^ 0xD7)) ^ (v37 == 0)) & 1)
                                * (v35 + 71465260 + (v32 ^ 0x8D7) + 127)) ^ v32)))();
}

uint64_t sub_1A2753C90()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  **(_DWORD **)(v1 + 3912) = v0;
  *(_QWORD *)(v3 + 1920) = *(_QWORD *)(v1 + 3904);
  LOBYTE(STACK[0x10E7]) = 1;
  LODWORD(STACK[0x240]) = v2;
  LODWORD(STACK[0x114C]) = STACK[0x240];
  *(_BYTE *)(v3 + 435) = STACK[0x10E7];
  **(_QWORD **)(v1 + 3624) = *(_QWORD *)(v3 + 1920);
  return (*(uint64_t (**)(void))(v1 + 3896))();
}

uint64_t sub_1A2753D00()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t (*v6)(void);

  v5 = STACK[0x1E98];
  LODWORD(STACK[0x17FC]) = STACK[0x1E98];
  LODWORD(STACK[0xCBC]) = v5;
  LODWORD(STACK[0xCCC]) = STACK[0x113C];
  v1[295] = v1[484];
  v1[298] = v1[482];
  v1[300] = v1[479];
  LODWORD(STACK[0xCD0]) = STACK[0x1138];
  LODWORD(STACK[0xCD4]) = STACK[0x1134];
  v1[303] = v1[478];
  v1[304] = v1[475];
  v1[307] = &STACK[0x1BF8];
  v1[309] = v1[472];
  v1[310] = v1[471];
  v1[446] = v1[561];
  LODWORD(STACK[0xCE4]) = STACK[0x1114];
  LODWORD(STACK[0xD1C]) = STACK[0x1104];
  v1[311] = v1[465];
  LODWORD(STACK[0xD2C]) = STACK[0x1100];
  LODWORD(STACK[0xD44]) = STACK[0x10E0];
  v1[312] = v1[464];
  v1[314] = v1[460];
  LODWORD(STACK[0xD54]) = STACK[0x10C4];
  v1[317] = v1[458];
  v1[319] = v1[457];
  v1[448] = v1[553];
  LODWORD(STACK[0xD58]) = STACK[0x1074];
  v1[322] = v1[454];
  LODWORD(STACK[0xD5C]) = STACK[0x1054];
  v6 = (uint64_t (*)(void))(*(_QWORD *)(v2
                                     + 8
                                     * ((*(unsigned __int8 *)(v3 + 435) * ((v0 + 71465341) ^ v0 ^ (v4 - 1553) ^ 0x71E)) ^ (v0 + 71466523)))
                         - 8);
  LODWORD(STACK[0xD7C]) = STACK[0x114C];
  return v6();
}

uint64_t sub_1A2753E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, unint64_t *);

  v9 = *(_QWORD *)(v8 + 1328);
  *(_QWORD *)(v8 + 328) = v9;
  LODWORD(v9) = LODWORD(STACK[0x17FC]) > *(_DWORD *)(v9 + 8);
  LODWORD(STACK[0xB2C]) = STACK[0x113C];
  v5[238] = v5[484];
  v5[240] = v5[482];
  v5[243] = v5[479];
  LODWORD(STACK[0xB3C]) = STACK[0x1138];
  LODWORD(STACK[0xB64]) = STACK[0x1134];
  v5[246] = v5[478];
  v5[247] = v5[475];
  v5[250] = v4;
  v5[252] = v5[472];
  v5[253] = v5[471];
  v5[408] = v5[561];
  LODWORD(STACK[0xB74]) = STACK[0x1114];
  LODWORD(STACK[0xB8C]) = STACK[0x1104];
  v5[254] = v5[465];
  LODWORD(STACK[0xB9C]) = STACK[0x1100];
  LODWORD(STACK[0xBA0]) = STACK[0x10E0];
  v5[255] = v5[464];
  v5[257] = v5[460];
  v5[261] = v5[458];
  v5[263] = v5[457];
  v5[414] = v5[553];
  LODWORD(STACK[0xBA4]) = STACK[0x1074];
  v5[266] = v5[454];
  LODWORD(STACK[0xBC4]) = STACK[0x1054];
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t *))(*(_QWORD *)(v7
                                                                                          + 8
                                                                                          * (int)((v9 * (v3 + 2024)) ^ v3))
                                                                              - 4);
  LODWORD(STACK[0xBD4]) = v6;
  return v10(a1, a2, a3, &STACK[0x15CF]);
}

void sub_1A2753F38()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(v2 + 8 * v0);
  LODWORD(STACK[0x4BC]) = STACK[0x113C];
  v5 = v1[482];
  v1[47] = v1[484];
  v1[48] = v5;
  v6 = v1[479];
  LODWORD(STACK[0x4CC]) = STACK[0x1138];
  LODWORD(STACK[0x4F4]) = STACK[0x1134];
  v7 = v1[478];
  v1[49] = v6;
  v1[50] = v7;
  v1[52] = v1[475];
  v1[55] = &STACK[0x1BF8];
  v1[57] = v1[472];
  v8 = v1[471];
  v1[268] = v1[561];
  LODWORD(STACK[0x504]) = STACK[0x1114];
  LODWORD(STACK[0x51C]) = STACK[0x1104];
  v9 = v1[465];
  v1[60] = v8;
  v1[61] = v9;
  LODWORD(STACK[0x52C]) = STACK[0x1100];
  LODWORD(STACK[0x530]) = STACK[0x10E0];
  v1[276] = ((v0 + 545) ^ 0xFFFFFFFFFFFFFD0ALL) + v4;
  v1[64] = v1[460];
  LODWORD(STACK[0x534]) = STACK[0x10C4];
  v1[66] = v1[454];
  LODWORD(STACK[0x554]) = STACK[0x1054];
  v1[67] = *(_QWORD *)(v3 + 328);
  JUMPOUT(0x1A2754000);
}

uint64_t sub_1A275415C@<X0>(int a1@<W8>)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((((a1 ^ 0xB3C) - 2017) * (v2 > v1)) ^ a1)))();
}

uint64_t sub_1A2754180()
{
  unint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((25 * (v0 <= (unint64_t)(((v1 - 2376) | 0x209u) + 107) + 2147482889)) ^ v1)))();
}

#error "1A27550F0: call analysis failed (funcsize=169)"

uint64_t sub_1A27550F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t (*v17)(void);

  v9 = STACK[0x8A4];
  v5[621] = v5[165];
  LODWORD(STACK[0x156C]) = STACK[0x894];
  *(_QWORD *)(v8 + 176) = v5[352];
  v5[623] = v5[163];
  v5[624] = v5[162];
  LODWORD(STACK[0x157C]) = STACK[0x86C];
  v5[625] = v5[161];
  v5[626] = v5[159];
  LODWORD(STACK[0x1594]) = STACK[0x85C];
  LODWORD(STACK[0x15A4]) = STACK[0x83C];
  *(_QWORD *)(a4 + 1) = v5[157];
  LODWORD(STACK[0x15E4]) = STACK[0x838];
  LODWORD(STACK[0x1604]) = STACK[0x834];
  *(_QWORD *)(v8 + 272) = v5[344];
  *(_QWORD *)(a4 + 9) = v5[154];
  *(_QWORD *)(a4 + 33) = v5[153];
  *(_QWORD *)(a4 + 41) = v5[150];
  *(_QWORD *)(a4 + 65) = v5[148];
  v10 = v5[145];
  *(_QWORD *)(a4 + 73) = v10;
  v11 = STACK[0x824];
  LODWORD(STACK[0x1624]) = STACK[0x824];
  v12 = STACK[0x80C];
  LODWORD(STACK[0x1628]) = STACK[0x80C];
  v13 = v5[143];
  *(_QWORD *)(a4 + 97) = v13;
  v14 = v5[142];
  *(_QWORD *)(a4 + 113) = v14;
  v15 = v5[141];
  *(_QWORD *)(a4 + 137) = v15;
  v16 = STACK[0x7FC];
  LODWORD(STACK[0x162C]) = STACK[0x7FC];
  LODWORD(STACK[0x8C4]) = v16;
  v5[168] = v15;
  v5[170] = v14;
  v5[173] = v13;
  LODWORD(STACK[0x8C8]) = v12;
  LODWORD(STACK[0x8CC]) = v11;
  v5[174] = v10;
  v5[177] = *(_QWORD *)(a4 + 65);
  v5[178] = *(_QWORD *)(a4 + 41);
  v5[180] = *(_QWORD *)(a4 + 33);
  v5[181] = *(_QWORD *)(a4 + 9);
  v5[360] = *(_QWORD *)(v8 + 272);
  LODWORD(STACK[0x8EC]) = STACK[0x1604];
  LODWORD(STACK[0x91C]) = STACK[0x15E4];
  v5[182] = *(_QWORD *)(a4 + 1);
  LODWORD(STACK[0x92C]) = STACK[0x15A4];
  LODWORD(STACK[0x94C]) = STACK[0x1594];
  v5[183] = v5[626];
  v5[184] = v5[625];
  LODWORD(STACK[0x950]) = STACK[0x157C];
  v5[186] = v5[624];
  v5[189] = v5[623];
  v5[371] = *(_QWORD *)(v8 + 176);
  LODWORD(STACK[0x954]) = STACK[0x156C];
  v5[191] = v5[621];
  v17 = (uint64_t (*)(void))(*(_QWORD *)(v7
                                      + 8
                                      * ((v4 + 71466991) ^ (8 * (v9 != ((v4 - 878690203) & 0x38A23B4B ^ (v6 - 761))))))
                          - 4);
  LODWORD(STACK[0x974]) = v9;
  return v17();
}

uint64_t sub_1A27552BC@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  LODWORD(STACK[0x1800]) = STACK[0xBD4];
  LODWORD(STACK[0x1804]) = STACK[0xBC4];
  v4[44] = v1[266];
  LODWORD(STACK[0x1814]) = STACK[0xBA4];
  v4[83] = v1[414];
  v5 = v1[261];
  v4[46] = v1[263];
  v4[47] = v5;
  v6 = v1[255];
  v4[48] = v1[257];
  v4[49] = v6;
  LODWORD(STACK[0x182C]) = STACK[0xBA0];
  LODWORD(STACK[0x183C]) = STACK[0xB9C];
  v7 = v1[254];
  LODWORD(STACK[0x187C]) = STACK[0xB8C];
  LODWORD(STACK[0x1884]) = STACK[0xB74];
  v4[98] = v1[408];
  v8 = v1[253];
  v4[50] = v7;
  v4[51] = v8;
  v4[52] = v1[252];
  v4[55] = v1[250];
  v9 = v1[246];
  v4[58] = v1[247];
  v4[59] = v9;
  LODWORD(STACK[0x1894]) = STACK[0xB64];
  LODWORD(STACK[0x18B4]) = STACK[0xB3C];
  v4[62] = v1[243];
  v4[64] = v1[240];
  LOBYTE(v7) = LODWORD(STACK[0x1800]) == v2;
  v4[67] = v1[238];
  v10 = (uint64_t (*)(void))(*(_QWORD *)(v3
                                      + 8
                                      * (((((a1 - 1) ^ v7) & 1) * (a1 + 71465368)) ^ (a1 + 71466786)))
                          - 12);
  LODWORD(STACK[0x18B8]) = STACK[0xB2C];
  return v10();
}

void sub_1A27553BC()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = v0 + 95;
  v5 = *(_QWORD *)(v2 + 8 * (v0 + 95));
  LODWORD(STACK[0xE90]) = STACK[0x18B8];
  v1[353] = v3[67];
  v1[355] = v3[64];
  v1[358] = v3[62];
  LODWORD(STACK[0xE94]) = STACK[0x18B4];
  LODWORD(STACK[0xE98]) = STACK[0x1894];
  v6 = v3[58];
  v1[359] = v3[59];
  v1[362] = v6;
  v1[364] = v3[55];
  v1[365] = v3[52];
  v7 = v3[50];
  v1[366] = v3[51];
  v1[462] = v3[98];
  LODWORD(STACK[0xE9C]) = STACK[0x1884];
  LODWORD(STACK[0xEBC]) = STACK[0x187C];
  v1[367] = v7;
  LODWORD(STACK[0xEEC]) = STACK[0x183C];
  LODWORD(STACK[0xF08]) = STACK[0x182C];
  v1[463] = (((v4 - 31) | 0x220u) ^ 0xFFFFFFFFFFFFFD10) + v5;
  v8 = v3[48];
  v1[369] = v3[49];
  v1[372] = v8;
  LODWORD(STACK[0xF0C]) = STACK[0x1800];
  v9 = v3[46];
  v1[374] = v3[47];
  v1[377] = v9;
  v1[467] = v3[83];
  LODWORD(STACK[0xF10]) = STACK[0x1814];
  v1[378] = v3[44];
  LODWORD(STACK[0xF14]) = STACK[0x1804];
  v1[381] = &STACK[0x1C00];
  JUMPOUT(0x1A275374CLL);
}

void sub_1A27554B0(uint64_t a1@<X3>, int a2@<W8>)
{
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  _DWORD *v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v6 = *(uint64_t **)(a1 + 65);
  v7 = *(_DWORD **)(a1 + 1);
  v8 = STACK[0x15E4];
  v9 = STACK[0x15E4];
  v10 = (v8 ^ 0x17FD34FA) & (2 * (v8 & 0x97FE46E3)) ^ v8 & 0x97FE46E3;
  v11 = ((2 * (v8 ^ 0x17FD39FA)) ^ 0x6FE32) & (v8 ^ 0x17FD39FA) ^ (2 * (v8 ^ 0x17FD39FA)) & 0x80037F18;
  v12 = (v11 ^ 0x23E10) & (4 * v10) ^ v10;
  v13 = ((4 * (v11 ^ 0x80010109)) ^ 0xDFC64) & (v11 ^ 0x80010109) ^ (4 * (v11 ^ 0x80010109)) & 0x80037F18;
  v14 = (v13 ^ 0x17C00) & (16 * v12) ^ v12;
  v15 = *v6;
  v16 = ((16 * (v13 ^ 0x80020319)) ^ 0x37F190) & (v13 ^ 0x80020319) ^ (16 * (v13 ^ 0x80020319)) & 0x80037F10;
  v17 = LODWORD(STACK[0x15E4]) ^ (2
                                * (((v14 ^ 0x80037F19 ^ (v16 ^ 0x37100) & (v14 << 8)) << 16) & 0x30000 ^ v14 ^ 0x80037F19 ^ (v16 ^ 0x37100) & (v14 << 8) ^ (((v14 ^ 0x80037F19 ^ (v16 ^ 0x37100) & (v14 << 8)) << 16) ^ 0x7F190000) & ((((v16 ^ 0x80000E09) << 8) ^ 0x37F0000) & (v16 ^ 0x80000E09) ^ ((v16 ^ 0x80000E09) << 8) & 0x30000)));
  v18 = ((2 * *v7) & 0xFF6EFFAA) + ((a2 + 328) ^ 0x7FB77E19 ^ *v7) - 2142732245;
  *(_BYTE *)(*v6 + v18) = HIBYTE(v17) ^ 0x97;
  *(_BYTE *)(v15 + v18 + 1) = BYTE2(v17) ^ 0xFA;
  *(_BYTE *)(v15 + v18 + 2) = ((BYTE1(v17) ^ 0xB8) - ((2 * (BYTE1(v17) ^ 0xB8)) & 0x96) + 75) ^ 0x4B;
  *(_BYTE *)(v15 + v18 + 3) = v17 ^ 0xD1;
  v19 = (*v7 + 4);
  *v7 = v19;
  v20 = *v6;
  v21 = (v19 ^ 0x6B3FCEFF7F77595ELL) + ((2 * (_DWORD)v19) & 0xFEEEB2BC) - 0x5B394F89AECF286DLL;
  v22 = *(_QWORD *)(v5 + 272);
  v23 = *(_QWORD *)(v4 + 8 * (a2 + 190));
  LODWORD(STACK[0xF2C]) = STACK[0x162C];
  v24 = (v22 ^ 0x828CFA0E85283764) & (2 * (v22 & 0xD0CEF22EC1B08445)) ^ v22 & 0xD0CEF22EC1B08445;
  v2[384] = *(_QWORD *)(a1 + 137);
  v2[386] = *(_QWORD *)(a1 + 113);
  v2[388] = *(_QWORD *)(a1 + 97);
  v25 = ((2 * (v22 ^ 0x83187A1A054937EELL)) ^ 0xA7AD106989F36756) & (v22 ^ 0x83187A1A054937EELL) ^ (2 * (v22 ^ 0x83187A1A054937EELL)) & 0x53D68834C4F9B3AALL;
  LODWORD(STACK[0xF3C]) = STACK[0x1628];
  LODWORD(STACK[0xF74]) = STACK[0x1624];
  v26 = v25 ^ 0x50528814440890A9;
  v27 = (v25 ^ 0x304002000C02300) & (4 * v24) ^ v24;
  v2[389] = *(_QWORD *)(a1 + 73);
  v2[390] = *(_QWORD *)(a1 + 65);
  v2[392] = *(_QWORD *)(a1 + 41);
  v28 = ((4 * v26) ^ 0x4F5A20D313E6CEACLL) & v26 ^ (4 * v26) & 0x53D68834C4F9B3A8;
  v2[395] = *(_QWORD *)(a1 + 33);
  v2[398] = *(_QWORD *)(a1 + 9);
  v29 = (v28 ^ 0x4352001000E082A0) & (16 * v27) ^ v27;
  v2[468] = *(_QWORD *)(v5 + 272);
  LODWORD(STACK[0xF90]) = STACK[0x1604];
  LODWORD(STACK[0xF94]) = v9;
  v30 = ((16 * (v28 ^ 0x10848824C4193103)) ^ 0x3D68834C4F9B3AB0) & (v28 ^ 0x10848824C4193103) ^ (16 * (v28 ^ 0x10848824C4193103)) & 0x53D68834C4F9B3A0;
  v2[399] = *(_QWORD *)(a1 + 1);
  LODWORD(STACK[0xF98]) = STACK[0x15A4];
  LODWORD(STACK[0xF9C]) = STACK[0x1594];
  v2[402] = v2[626];
  v2[477] = v23;
  v2[403] = v2[625];
  v31 = (((v30 ^ 0x429608308060810BLL) << 8) ^ 0xD68834C4F9B3AB00) & (v30 ^ 0x429608308060810BLL) ^ ((v30 ^ 0x429608308060810BLL) << 8) & 0x53D68834C4F9B300;
  LODWORD(STACK[0xFB4]) = STACK[0x157C];
  v2[404] = v2[624];
  v2[405] = v2[623];
  v2[485] = *(_QWORD *)(v5 + 176);
  LODWORD(STACK[0xFC4]) = STACK[0x156C];
  v2[406] = v2[621];
  LODWORD(STACK[0x100C]) = v3;
  v2[409] = v20;
  v2[491] = v21;
  v2[410] = *(_QWORD *)(a1 + 113);
  v2[499] = v22 ^ (2
                 * (v31 & 0x3080A900000000 ^ (v30 ^ 0x1140800444993200) & (v29 << 8) ^ v29 ^ (v31 ^ 0x52800004C0B10000) & (((v30 ^ 0x1140800444993200) & (v29 << 8) ^ v29) << 16))) ^ 0x72A16F96EB89806DLL;
  JUMPOUT(0x1A2755AE0);
}

uint64_t sub_1A2755C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  uint64_t v63;

  LODWORD(STACK[0x1BD4]) = LODWORD(STACK[0x1B00]) ^ (v62 - 1340) ^ (((v62 - 798) | 0x85) + 708379013);
  return ((uint64_t (*)(void))(*(_QWORD *)(v63 + 8 * ((106 * (a62 == 3)) ^ v62)) - 12))();
}

uint64_t sub_1A2755CB0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((v1 + 1635) ^ 0xFBBD8FE1 ^ ((v1 + 1220018547) | 0xB3058340)) * (a1 == 0)) ^ v1)))();
}

uint64_t sub_1A2755CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62)
{
  int v62;
  uint64_t v63;
  uint64_t v64;
  int v65;

  *(_QWORD *)(v64 + 1288) = *(_QWORD *)(v64 + 1088) + 0x74E201AB2F781F5FLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v63 + 8 * (((a62 == 3) | (2 * (a62 == 3))) ^ v62))
                            - ((v65 + ((v62 - 1280) | 0x11u) - 820) ^ 0xFBBD8750)))();
}

uint64_t sub_1A2755D5C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 4104) = v2;
  v6 = v2 - 1;
  v7 = ((2 * v6) & 0x1FFBF5F60) + (v6 ^ 0x7B177EDEFFDFAFB0);
  *(_BYTE *)(v5[131] + v7 + v5[161]) = *(_BYTE *)(v5[130] + v7 + a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((114 * (v6 != 0)) ^ (a2 + 71466572))) - 4))();
}

uint64_t sub_1A2755DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = v2 - 1;
  v11 = (a2 & (2 * v10)) + (v10 ^ v8);
  *(_BYTE *)(v5 + v11 + v4) = *(_BYTE *)(v3 + v11 + a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((v10 != 0) * v7) ^ v6)) - 4))();
}

uint64_t sub_1A2755E60()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[166];
  *(_DWORD *)(v2 + 8) = STACK[0x1E98];
  *(_DWORD *)(v2 + 12) = 0;
  LODWORD(STACK[0xBFC]) = STACK[0x1B8C];
  v0[267] = v1[155];
  v0[270] = v1[154];
  v0[271] = v1[153];
  LODWORD(STACK[0xC0C]) = STACK[0x1B7C];
  LODWORD(STACK[0xC24]) = STACK[0x1B64];
  v0[272] = v1[152];
  v0[274] = v1[150];
  v0[275] = v1[147];
  v0[279] = v1[145];
  v0[281] = v1[142];
  v0[425] = v1[148];
  LODWORD(STACK[0xC34]) = STACK[0x1B54];
  LODWORD(STACK[0xC38]) = STACK[0x1B50];
  v0[284] = v1[141];
  LODWORD(STACK[0xC3C]) = STACK[0x1B4C];
  LODWORD(STACK[0xC5C]) = STACK[0x1B2C];
  v0[285] = v1[138];
  v0[288] = v1[137];
  LODWORD(STACK[0xC6C]) = STACK[0x1ADC];
  v0[290] = v1[135];
  v0[291] = v1[133];
  v0[431] = v1[140];
  LODWORD(STACK[0xC94]) = STACK[0x1ABC];
  v0[292] = v1[132];
  LODWORD(STACK[0xCA4]) = STACK[0x1AB8];
  v0[293] = v2;
  return sub_1A2755F40();
}

uint64_t sub_1A2755F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unsigned int *a33,uint64_t (*a34)(_QWORD, unint64_t, _QWORD))
{
  _QWORD *v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  int v75;
  uint64_t v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;

  v35 = STACK[0xCA4];
  v36 = v34[292];
  v37 = STACK[0xC94];
  v38 = v34[431];
  v39 = v34[291];
  v40 = v34[290];
  v41 = STACK[0xC6C];
  v42 = v34[288];
  v43 = v34[285];
  v44 = STACK[0xC5C];
  v45 = STACK[0xC3C];
  v46 = v34[284];
  v47 = STACK[0xC38];
  v48 = STACK[0xC34];
  v49 = v34[425];
  v50 = v34[281];
  v51 = v34[279];
  v52 = (_QWORD *)v34[275];
  v53 = v34[274];
  v54 = v34[272];
  v55 = STACK[0xC24];
  v56 = STACK[0xC0C];
  v57 = v34[271];
  v58 = v34[270];
  v59 = v34[267];
  v60 = STACK[0xBFC];
  *v52 = v34[293];
  LODWORD(STACK[0xCBC]) = STACK[0x1E98];
  LODWORD(STACK[0xCCC]) = v60;
  v34[295] = v59;
  v34[298] = v58;
  v34[300] = v57;
  LODWORD(STACK[0xCD0]) = v56;
  LODWORD(STACK[0xCD4]) = v55;
  v34[303] = v54;
  v34[304] = v53;
  v34[307] = v52;
  v34[309] = v51;
  v34[310] = v50;
  v34[446] = v49;
  LODWORD(STACK[0xCE4]) = v48;
  LODWORD(STACK[0xD1C]) = v47;
  v34[311] = v46;
  LODWORD(STACK[0xD2C]) = v45;
  LODWORD(STACK[0xD44]) = v44;
  v34[312] = v43;
  v34[314] = v42;
  LODWORD(STACK[0xD54]) = v41;
  v34[317] = v40;
  v34[319] = v39;
  v34[448] = v38;
  LODWORD(STACK[0xD58]) = v37;
  v34[322] = v36;
  LODWORD(STACK[0xD5C]) = v35;
  LODWORD(STACK[0xD7C]) = v41;
  LODWORD(v52) = STACK[0xD7C];
  LODWORD(v53) = STACK[0xD5C];
  v86 = v34[322];
  v85 = STACK[0xD58];
  v83 = v34[319];
  v84 = v34[448];
  v82 = v34[317];
  v81 = STACK[0xD54];
  v79 = v34[312];
  v80 = v34[314];
  v78 = STACK[0xD44];
  v77 = STACK[0xD2C];
  v76 = v34[311];
  v75 = STACK[0xD1C];
  v74 = STACK[0xCE4];
  v72 = v34[310];
  v73 = v34[446];
  v70 = v34[307];
  v71 = v34[309];
  v69 = v34[304];
  v61 = v34[303];
  LODWORD(v59) = STACK[0xCD4];
  v62 = STACK[0xCD0];
  v63 = v34[300];
  v64 = v34[298];
  v65 = v34[295];
  LODWORD(v57) = STACK[0xCCC];
  v66 = a34(*a33, STACK[0x1BE8], LODWORD(STACK[0xCBC]));
  LODWORD(STACK[0xD8C]) = v57;
  v34[323] = v65;
  v34[326] = v64;
  v34[328] = v63;
  LODWORD(STACK[0xDB4]) = v62;
  LODWORD(STACK[0xDC4]) = v59;
  v34[330] = v61;
  v34[331] = v69;
  v34[333] = v70;
  v34[336] = v71;
  v34[338] = v72;
  v34[455] = v73;
  LODWORD(STACK[0xDDC]) = v74;
  LODWORD(STACK[0xDEC]) = v75;
  v34[341] = v76;
  LODWORD(STACK[0xDF0]) = v77;
  LODWORD(STACK[0xDF4]) = v78;
  v34[343] = v79;
  v34[345] = v80;
  LODWORD(STACK[0xE14]) = v81;
  v34[346] = v82;
  v34[347] = v83;
  v34[459] = v84;
  LODWORD(STACK[0xE24]) = v85;
  v34[348] = v86;
  LODWORD(STACK[0xE3C]) = v53;
  LODWORD(STACK[0xE6C]) = (_DWORD)v52;
  LODWORD(STACK[0x18BC]) = (_DWORD)v52;
  LODWORD(STACK[0x18CC]) = v53;
  STACK[0x18F0] = v34[348];
  LODWORD(STACK[0x18E4]) = STACK[0xE24];
  STACK[0x1A28] = v34[459];
  STACK[0x18F8] = v34[347];
  STACK[0x1900] = v34[346];
  LODWORD(STACK[0x1914]) = STACK[0xE14];
  STACK[0x1908] = v34[345];
  STACK[0x1918] = v34[343];
  LODWORD(STACK[0x1924]) = STACK[0xDF4];
  LODWORD(STACK[0x1944]) = STACK[0xDF0];
  STACK[0x1930] = v34[341];
  LODWORD(STACK[0x1948]) = STACK[0xDEC];
  LODWORD(STACK[0x194C]) = STACK[0xDDC];
  STACK[0x1A38] = v34[455];
  STACK[0x1938] = v34[338];
  STACK[0x1950] = v34[336];
  STACK[0x1960] = v34[333];
  STACK[0x1978] = v34[331];
  STACK[0x1988] = v34[330];
  LODWORD(STACK[0x195C]) = STACK[0xDC4];
  LODWORD(STACK[0x1974]) = STACK[0xDB4];
  v67 = (uint64_t (*)(uint64_t))v34[328];
  STACK[0x1990] = (unint64_t)v67;
  STACK[0x1998] = v34[326];
  STACK[0x19A0] = v34[323];
  LODWORD(STACK[0x1984]) = STACK[0xD8C];
  return v67(v66);
}

uint64_t sub_1A27561B4()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  int v4;

  v4 = STACK[0x1B50];
  **(_DWORD **)(v2 + 1128) += 259 * (v0 ^ (v3 + 232)) - 1744944166 + LODWORD(STACK[0x1B50]);
  LODWORD(STACK[0x8C4]) = STACK[0x1B8C];
  v1[168] = *(_QWORD *)(v2 + 1240);
  v1[170] = *(_QWORD *)(v2 + 1232);
  v1[173] = *(_QWORD *)(v2 + 1224);
  LODWORD(STACK[0x8C8]) = STACK[0x1B7C];
  LODWORD(STACK[0x8CC]) = STACK[0x1B64];
  v1[174] = *(_QWORD *)(v2 + 1216);
  v1[177] = *(_QWORD *)(v2 + 1200);
  v1[178] = *(_QWORD *)(v2 + 1176);
  v1[180] = *(_QWORD *)(v2 + 1160);
  v1[181] = *(_QWORD *)(v2 + 1136);
  v1[360] = *(_QWORD *)(v2 + 1184);
  LODWORD(STACK[0x8EC]) = STACK[0x1B54];
  LODWORD(STACK[0x91C]) = v4;
  v1[182] = *(_QWORD *)(v2 + 1128);
  LODWORD(STACK[0x92C]) = STACK[0x1B4C];
  LODWORD(STACK[0x94C]) = STACK[0x1B2C];
  v1[183] = *(_QWORD *)(v2 + 1104);
  v1[184] = *(_QWORD *)(v2 + 1096);
  LODWORD(STACK[0x950]) = STACK[0x1ADC];
  v1[186] = *(_QWORD *)(v2 + 1080);
  v1[189] = *(_QWORD *)(v2 + 1064);
  v1[371] = *(_QWORD *)(v2 + 1120);
  LODWORD(STACK[0x954]) = STACK[0x1ABC];
  v1[191] = *(_QWORD *)(v2 + 1056);
  LODWORD(STACK[0x974]) = STACK[0x1AB8];
  return sub_1A27562B4();
}

uint64_t sub_1A27562B4()
{
  _QWORD *v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void);

  v2 = STACK[0x974];
  v3 = v0[191];
  v4 = STACK[0x954];
  v5 = v0[371];
  v6 = v0[189];
  v7 = v0[186];
  v8 = STACK[0x950];
  v9 = v0[184];
  v10 = v0[183];
  v11 = STACK[0x94C];
  v12 = STACK[0x92C];
  v13 = v0[182];
  v14 = STACK[0x91C];
  v15 = STACK[0x8EC];
  v16 = v0[360];
  v17 = v0[181];
  v18 = v0[180];
  v19 = v0[178];
  v20 = v0[177];
  v21 = v0[174];
  v22 = STACK[0x8CC];
  v23 = STACK[0x8C8];
  v24 = v0[173];
  v25 = v0[170];
  v26 = v0[168];
  LODWORD(STACK[0x984]) = STACK[0x8C4];
  v0[194] = v26;
  v0[195] = v25;
  v0[198] = v24;
  LODWORD(STACK[0x9AC]) = v23;
  LODWORD(STACK[0x9BC]) = v22;
  v0[200] = v21;
  v0[201] = v20;
  v0[202] = v19;
  v0[203] = v18;
  v0[205] = v17;
  v0[379] = v16;
  LODWORD(STACK[0x9D0]) = v15;
  LODWORD(STACK[0x9D4]) = v14;
  v0[208] = v13;
  LODWORD(STACK[0x9D8]) = v12;
  LODWORD(STACK[0x9DC]) = v11;
  v0[209] = v10;
  v0[212] = v9;
  LODWORD(STACK[0x9FC]) = v8;
  v0[213] = v7;
  v0[216] = v6;
  v0[383] = v5;
  LODWORD(STACK[0xA0C]) = v4;
  v0[217] = v3;
  LODWORD(STACK[0xA34]) = v2;
  LODWORD(STACK[0xA44]) = v2;
  LODWORD(STACK[0x163C]) = STACK[0xA44];
  LODWORD(STACK[0x1654]) = STACK[0xA34];
  STACK[0x1668] = v0[217];
  LODWORD(STACK[0x1664]) = STACK[0xA0C];
  v1[42] = v0[383];
  STACK[0x1670] = v0[216];
  STACK[0x1678] = v0[213];
  LODWORD(STACK[0x168C]) = STACK[0x9FC];
  STACK[0x1680] = v0[212];
  STACK[0x16B8] = v0[209];
  LODWORD(STACK[0x1690]) = STACK[0x9DC];
  LODWORD(STACK[0x1694]) = STACK[0x9D8];
  v27 = v0[208];
  LODWORD(STACK[0x16B4]) = STACK[0x9D4];
  LODWORD(STACK[0x16C4]) = STACK[0x9D0];
  v1[57] = v0[379];
  v28 = v0[205];
  *v1 = v27;
  v1[1] = v28;
  v29 = v0[202];
  v1[4] = v0[203];
  v1[5] = v29;
  v1[8] = v0[201];
  v30 = v0[200];
  LODWORD(STACK[0x16E4]) = STACK[0x9BC];
  LODWORD(STACK[0x16E8]) = STACK[0x9AC];
  v31 = v0[198];
  v1[10] = v30;
  v1[11] = v31;
  v32 = (uint64_t (*)(void))v0[194];
  v1[12] = v0[195];
  v1[13] = v32;
  LODWORD(STACK[0x16EC]) = STACK[0x984];
  return v32();
}

void sub_1A275646C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = *(_QWORD *)(v6 + 8 * (v4 + 71465200));
  LODWORD(STACK[0xA64]) = STACK[0x16EC];
  v10 = v7[12];
  v5[218] = v7[13];
  v5[219] = v10;
  v5[387] = ((3 * (v4 ^ (v8 + 304))) ^ 0xFFFFFFFFFFFFFD09) + v9;
  LODWORD(STACK[0xA74]) = STACK[0x16E8];
  LODWORD(STACK[0xA78]) = STACK[0x16E4];
  v5[220] = v7[10];
  v5[222] = v7[8];
  v5[225] = v7[4];
  v11 = *v7;
  v5[226] = v7[1];
  v5[394] = v7[57];
  LODWORD(STACK[0xA7C]) = STACK[0x16C4];
  LODWORD(STACK[0xA9C]) = STACK[0x16B4];
  v5[229] = v11;
  LODWORD(STACK[0xABC]) = STACK[0x1694];
  LODWORD(STACK[0xADC]) = STACK[0x1690];
  v5[230] = *(_QWORD *)(a4 + 233);
  v5[233] = *(_QWORD *)(a4 + 177);
  LODWORD(STACK[0xAF4]) = STACK[0x168C];
  v5[235] = *(_QWORD *)(a4 + 169);
  v5[236] = *(_QWORD *)(a4 + 161);
  v5[400] = v7[42];
  LODWORD(STACK[0xB04]) = STACK[0x1664];
  v5[237] = *(_QWORD *)(a4 + 153);
  JUMPOUT(0x1A2756550);
}

uint64_t sub_1A2756738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void (*a21)(uint64_t),unsigned int *a22,uint64_t (*a23)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  unint64_t v34;
  uint64_t v35;

  v30 = *(_QWORD *)(v27 + 8 * v26);
  v31 = 2106769199 * ((~(v24 | 0xE5ABF9CA30799D17) + (v24 & 0xE5ABF9CA30799D17)) ^ 0x5A45BE5BA07A49DDLL);
  *(_QWORD *)(v28 + 2216) = v23;
  *(_DWORD *)(v29 - 128) = v26 - 822706943 - v31;
  *(_QWORD *)(v28 + 2200) = v31 + v30 - 8;
  a21(v29 - 136);
  v32 = a23(*a22, a20, v25);
  v33 = ((2 * v32) & 0xECFCEFF6) + (((v26 ^ 0x6E8) - 1097) ^ v32 ^ 0xF67E750A);
  v34 = 2106769199 * ((-2 - ((~v24 | 0xE6DB8F3B1B347AE9) + (v24 | 0x192470C4E4CB8516))) ^ 0xA6CA375574C851DCLL);
  *(_QWORD *)(v28 + 2200) = v34 + *(_QWORD *)(v27 + 8 * (v26 ^ 0x43)) - 8;
  *(_DWORD *)(v29 - 128) = v26 - 822706943 - v34;
  *(_QWORD *)(v28 + 2216) = v23;
  v35 = ((uint64_t (*)(uint64_t))a21)(v29 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27 + 8 * (v26 ^ 0x7D3 ^ (13 * (v33 == -159483909)))) - 4))(v35);
}

uint64_t sub_1A27568CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void (*a25)(uint64_t),int *a26,void (*a27)(uint64_t),uint64_t (*a28)(uint64_t),uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58)
{
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  int v66;
  int v67;
  uint64_t v68;

  a27(a29);
  v62 = *a26;
  v63 = **(_QWORD **)(v60 + 280);
  v64 = **(_DWORD **)(v60 + 312);
  v65 = *(_QWORD *)(v58 + 3304);
  v66 = 932829133 * ((((v61 - 136) | 0x260423DA) - (v61 - 136) + ((v61 - 136) & 0xD9FBDC20)) ^ 0x864F7E57);
  *(_QWORD *)(v60 + 2224) = *(_QWORD *)(v58 + 3328);
  *(_DWORD *)(v61 - 128) = -532470131 - v66 + v64 - ((v64 << ((a58 - 10) & 0x19)) & 0xC0864D1A);
  *(_QWORD *)(v60 + 2232) = v65;
  *(_DWORD *)(v61 - 120) = (a58 + 696) ^ v66;
  *(_DWORD *)(v61 - 116) = 1017140188 - v66 + 1793297355 * v62;
  *(_QWORD *)(v60 + 2200) = v63;
  a25(v61 - 136);
  v67 = *(_DWORD *)(v61 - 124);
  v68 = a28(a29);
  LODWORD(STACK[0xB0C]) = v67;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v59
                                                      + 8
                                                      * (int)(((LODWORD(STACK[0xB0C]) == 1666240185)
                                                             * (((((a58 + 190608630) & 0xF4A38E19) - 1533) | 0x23) ^ 0x65)) ^ (a58 + 190608630) & 0xF4A38E19))
                                          - ((((a58 + 190608630) & 0xF4A38E19) - 662892102) & 0x2782EF7E ^ 0x73ELL)))(v68);
}

uint64_t sub_1A2756A44@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t (*a25)(uint64_t, uint64_t),uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  int v66;
  int v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  int v75;
  int v76;
  int v77;

  v67 = STACK[0x17DC];
  v64[226] = v64[32];
  v68 = v64[30];
  v64[227] = v64[31];
  v64[228] = v64[36];
  v69 = STACK[0x179C];
  *(_DWORD *)(v65 - 172) = v67;
  *(_DWORD *)(v65 - 168) = v69;
  v74 = STACK[0x178C];
  v64[229] = v68;
  v70 = v64[28];
  v64[230] = v64[29];
  v64[231] = v70;
  v71 = v64[26];
  v64[232] = v64[27];
  v62[196] = v64[75];
  v75 = STACK[0x1774];
  v76 = STACK[0x1770];
  v72 = a1 + 762;
  v64[166] = 0;
  v64[233] = v71;
  v77 = STACK[0x176C];
  LODWORD(STACK[0x204]) = STACK[0x1768];
  v64[234] = v64[24];
  v64[235] = v64[21];
  LODWORD(STACK[0x214]) = STACK[0x174C];
  v73 = v64[17];
  v64[236] = v64[18];
  v64[237] = v73;
  v62[207] = v64[65];
  LODWORD(STACK[0x22C]) = STACK[0x171C];
  v64[238] = v64[14];
  LODWORD(STACK[0x23C]) = STACK[0x170C];
  v64[239] = &STACK[0x1C00];
  v62[453] = &STACK[0x1C00];
  LODWORD(STACK[0x1054]) = STACK[0x23C];
  v62[454] = v64[238];
  LODWORD(STACK[0x1074]) = STACK[0x22C];
  v62[553] = v62[207];
  v62[457] = v64[237];
  v62[458] = v64[236];
  LODWORD(STACK[0x10C4]) = STACK[0x214];
  v62[460] = v64[235];
  v62[464] = v64[234];
  LODWORD(STACK[0x10E0]) = STACK[0x204];
  LODWORD(STACK[0x1100]) = v77;
  v62[465] = v64[233];
  LODWORD(STACK[0x1104]) = v76;
  LODWORD(STACK[0x1114]) = v75;
  v62[561] = v62[196];
  v62[471] = v64[232];
  v62[472] = v64[231];
  v62[475] = v64[230];
  v62[478] = v64[229];
  LODWORD(STACK[0x1134]) = v74;
  LODWORD(STACK[0x1138]) = *(_DWORD *)(v65 - 168);
  v62[479] = v64[228];
  v62[482] = v64[227];
  v62[484] = v64[226];
  LODWORD(STACK[0x113C]) = *(_DWORD *)(v65 - 172);
  v62[487] = *(_QWORD *)(v63 + 8 * a1) + ((v66 + a1 + 762 - 572) ^ 0xFFFFFFFF044278A4);
  v53 = a25(16, 2241923698);
  v62[488] = v53;
  v64[240] = 0;
  LOBYTE(STACK[0x10E7]) = 0;
  LODWORD(STACK[0x240]) = 1718210903;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 + 8 * ((1678 * (v53 != 0)) ^ v72)) - 8))(v53, v54, v55, v56, v57, v58, v59, v60, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

void sub_1A2756B10()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0xD8C]) = STACK[0x17DC];
  v0[323] = v1[32];
  v2 = v1[30];
  v0[326] = v1[31];
  v0[328] = v1[36];
  LODWORD(STACK[0xDB4]) = STACK[0x179C];
  LODWORD(STACK[0xDC4]) = STACK[0x178C];
  v0[330] = v2;
  v3 = v1[28];
  v0[331] = v1[29];
  v0[333] = &STACK[0x1BF8];
  v0[336] = v3;
  v4 = v1[26];
  v0[338] = v1[27];
  v0[455] = v1[75];
  LODWORD(STACK[0xDDC]) = STACK[0x1774];
  LODWORD(STACK[0xDEC]) = STACK[0x1770];
  v0[341] = v4;
  LODWORD(STACK[0xDF0]) = STACK[0x176C];
  LODWORD(STACK[0xDF4]) = STACK[0x1768];
  v0[343] = v1[24];
  v0[345] = v1[21];
  LODWORD(STACK[0xE14]) = STACK[0x174C];
  v5 = v1[17];
  v0[346] = v1[18];
  v0[347] = v5;
  v0[459] = v1[65];
  LODWORD(STACK[0xE24]) = STACK[0x171C];
  v0[348] = v1[14];
  JUMPOUT(0x1A2756BDCLL);
}

void sub_1A2756CB8(uint64_t a1)
{
  __asm { BR              X8 }
}

void sub_1A2756D48()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 16) = -42793;
}

void MpP1bcydEGt61uk5lIIoLR(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  int v3;

  if (a1)
    v2 = a2 == 0;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X10 }
}

uint64_t sub_1A2758A58@<X0>(_DWORD *a1@<X0>, unsigned int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1875 * (*a1 == 1)) ^ a2)) - 12))();
}

uint64_t sub_1A2758A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                                 + 8
                                                                                 * ((1308 * (*(_QWORD *)(v5 + 8) != 0)) ^ 0x2EDu))
                                                                     - v4
                                                                     + 2807012441))(a1, a2, a3, a4);
}

uint64_t sub_1A2758ADC()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2564 * (*(_DWORD *)(v2 + 16) == 1)) ^ v1))
                            - ((v0 + 16) ^ 0xA74F9C65)))();
}

uint64_t sub_1A2758B18@<X0>(int *a1@<X8>, uint64_t a2, int a3, char a4, __int16 a5, char a6, int a7, char a8, uint64_t a9, unint64_t a10, uint64_t a11, unsigned int a12, unsigned int a13, uint64_t a14, unsigned int a15, uint64_t a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,char *a22,char *a23,char *a24,char a25,uint64_t a26,uint64_t *a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v30 = *((_QWORD *)a1 + 2);
  v31 = a1[6];
  v32 = *a1;
  v33 = *((_QWORD *)a1 + 4);
  v34 = a1[10];
  v35 = *((_QWORD *)a1 + 1) - ((2 * *((_QWORD *)a1 + 1)) & 0xB458574F6496B6F2) + 0x5A2C2BA7B24B5B79;
  v36 = *((_QWORD *)a1 + 6);
  a9 = *(_QWORD *)(v27 + 3424);
  a10 = v35;
  a11 = v30;
  a12 = (v31 ^ 0x7E4CDF5E) - 940084240 + ((2 * v31) & 0xFC99BEBC);
  a13 = (v32 ^ 0xFFFFD3F8) + 1526431168 + ((2 * v32) & 0xFFFFA7F0);
  a14 = v33;
  a15 = (v34 ^ 0x6EF4DFEE) - 682658976 + ((2 * v34) & 0xDDE9BFDC);
  a16 = 0;
  a17 = 2083507214;
  a19 = 0;
  a20 = 0;
  a18 = v36;
  a21 = 1178882894;
  a22 = &a8;
  a23 = &a4;
  a24 = &a6;
  a25 = 54;
  *(_DWORD *)(v29 - 96) = 253222187 * (((v29 - 112) & 0xE911C9A | ~((v29 - 112) | 0xE911C9A)) ^ 0x3B3B24B9) - 2093234960;
  a27 = &a9;
  v37 = (*(uint64_t (**)(uint64_t))(v28 + 136))(v29 - 112);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27
                                                      + 8 * ((1927 * (*(_DWORD *)(v29 - 112) == 1718253555)) ^ 0x2EDu))
                                          - 12))(v37);
}

uint64_t sub_1A2758CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  _BOOL4 v5;

  v4 = v3 + 262;
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v4 - 653)))(24 * *(unsigned int *)(v0 + 16), 2241923698) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((v5 * (((v4 + 38701455) | 0xA5011024) + 1487954938)) ^ v4))
                            - ((v4 - 114) | 0xADu)
                            + 737))();
}

uint64_t sub_1A2758D54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = v6;
  *(_DWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)v1 = 1;
  *(_QWORD *)(v1 + 8) = a1;
  *(_DWORD *)(v1 + 16) = *(_DWORD *)(v2 + 16);
  return 0;
}

void sub_1A2758DD4(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A2758F04@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, const __CFString *);
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;

  v26 = 19 * (a1 ^ (v21 + 1481));
  v35 = v25(v23, CFSTR("WEfR"));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, const __CFString *), uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t))(v24 + 8 * ((929 * (((v26 ^ (v35 == 0)) & 1) == 0)) ^ v22)))(v35, v27, v28, v29, v30, v31, v32, v33, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, v25,
           a13,
           a14,
           a15,
           a16,
           a17,
           0,
           a19,
           0,
           a21);
}

uint64_t sub_1A2758FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  int v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, int *);

  v43(a38, 3, &a25);
  a40 = a25;
  a31 = 0;
  a32 = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v42
                                                      + 8
                                                      * (((((v40 - 1924) | 0x68A) - 1286) * (a25 < 7)) ^ ((v40 - 1924) | 0x68A)))
                                          - ((((v40 - 1924) | 0x68A) - 1598) | 0x211u)
                                          + 649))(v41);
}

uint64_t sub_1A275904C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((91 * (a1 - 1 > ((v1 + 110) ^ v1 ^ 0x6Cu))) ^ v1)))();
}

uint64_t sub_1A2759090@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  int v53;
  unsigned __int8 v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v52 = a1 ^ (v48 + 1810);
  v53 = 197 * (v52 ^ 0x1D0);
  v54 = 4 * v52;
  v55 = v50 + a1 + 491;
  v56 = (*(uint64_t (**)(uint64_t, const __CFString *))(v47 + 8 * (a1 ^ (v48 + 1362))))(v49, CFSTR("gaX8gT7e"));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 8 * ((((_DWORD)v56 == (v54 ^ 0x4D)) * (v53 + 3284)) ^ v55)))(v56, v57, v58, v59, v60, v61, v62, v63, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1A275911C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t (*a22)(uint64_t, uint64_t, int *),uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60,uint64_t a61,uint64_t a62,int a63)
{
  unsigned int a64;
  uint64_t (*v64)(uint64_t, const __CFString *);
  int v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v69 = v64(v66, CFSTR("gaX8gT7e"));
  v70 = a22(v69, 3, &a60);
  a64 = (a60 ^ 0x7FFFFDB7) - 1109401874 + ((a60 << (((v65 - 71) | 0x4A) - 78)) & 0xFFFFFB6E);
  return (*(uint64_t (**)(uint64_t))(v68 + 8 * ((213 * (a64 == v67 + 2391)) ^ v65)))(v70);
}

uint64_t sub_1A275919C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  char v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;

  v65 = v61 - 134;
  v66 = (v61 - 134) ^ 0x312;
  v67 = *(_QWORD *)(v63 + 8 * v65);
  *(_QWORD *)(v64 - 136) = v62;
  *(_QWORD *)(v64 - 128) = a18;
  *(_DWORD *)(v64 - 152) = v65
                         - 1013388011 * ((v64 - 152 - 2 * ((v64 - 152) & 0x7EDA4688) + 2128234120) ^ 0xAF187490)
                         - 1108061960;
  *(_QWORD *)(v64 - 144) = 1013388011
                         * ((v64 - 152 - 2 * ((v64 - 152) & 0x9EEB78647EDA4688) - 0x6114879B8125B978) ^ 0xDA8BB682AF187490)
                         + v67
                         - 8;
  v68 = ((uint64_t (*)(uint64_t))((char *)off_1E47CDD30[v65 - 424] - 12))(v64 - 152);
  LODWORD(STACK[0x20C]) = (*(_DWORD *)(v64 - 120) ^ 0xE6FFF7FB)
                        + 2137686008
                        + ((*(_DWORD *)(v64 - 120) << (v66 + 38)) & 0xCDFFEFF6);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v63
                                                      + 8
                                                      * ((1943 * (((v66 ^ (v60 + 26)) ^ (a60 == 0)) & 1)) ^ v66))
                                          - 4))(v68);
}

uint64_t sub_1A275A5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  uint64_t v56;
  uint64_t v57;

  *(_DWORD *)(v57 - 148) = 1758526123 * ((v57 - 152) ^ 0x8CA2DDD0) + 610109776 + v55 + 153;
  *(_QWORD *)(v57 - 144) = a55;
  sub_1A275B114(v57 - 152);
  return ((uint64_t (*)(void))(*(_QWORD *)(v56 + 8 * ((1989 * (a54 == 0)) ^ (v55 + 610109390))) - 8))();
}

uint64_t sub_1A275A668()
{
  _DWORD *v0;
  int v1;
  int v2;
  uint64_t result;
  int v4;

  result = off_1E47CDD30[v1 ^ (v2 + 1395)]();
  *v0 = v4;
  return result;
}

uint64_t sub_1A275A68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int v54;
  uint64_t v55;

  return ((uint64_t (*)(void))(*(_QWORD *)(v55 + 8 * ((1989 * (a54 == 0)) ^ (v54 + 610109390))) - 8))();
}

void sub_1A275A6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(uint64_t, uint64_t, char *),uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  a22(a48, 4, &a26);
  JUMPOUT(0x1A275A6D4);
}

uint64_t sub_1A275A854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t (*a16)(_QWORD, uint64_t, uint64_t *), uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  int v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  a49 = a16(0, 4, &a26);
  HIDWORD(a31) = 1718210903;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD, uint64_t, uint64_t *), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 8 * (((((a49 == 0) ^ (v49 - v50)) & 1) * ((v49 - 250268962) & 0xEEAC7C7 ^ 0x381)) ^ v49)))(a49, v52, v53, v54, v55, v56, v57, v58, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_1A275A8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38)
{
  int v38;
  uint64_t v39;
  _BOOL4 v40;

  v40 = ((a38 - v38) | (v38 - a38)) >= 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v39 + 8 * ((v40 | (8 * v40)) ^ (((v38 + 646) ^ 0xBD7u) + v38)))
                            - ((v38 - 211349610) ^ 0xF3670F95)))();
}

uint64_t sub_1A275A918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void (*a14)(uint64_t, const __CFString *, uint64_t), uint64_t (*a15)(uint64_t), uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  a14(a18, CFSTR("DD04WvpO"), v29);
  v31 = a15(v29);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v30 + 8 * ((2908 * (a28 != 0)) ^ v28))
                                          - ((v28 - 604865778) & 0xFFAFFE75 ^ 0xDBA27C1DLL)))(v31);
}

uint64_t sub_1A275A990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  unsigned int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v45 - ((v43 - 820316) & 0xDBAEFDDF) + *(_QWORD *)(v46 + 8 * ((25 * ((_DWORD)a24 != v44 + 2 * (v43 ^ 0x2C) - 1346)) ^ v43))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_1A275A9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11, uint64_t a12, uint64_t (*a13)(_QWORD, uint64_t, _QWORD), uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52)
{
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;

  v63 = a13(*a11, a50, (a52 - 1718253555));
  HIDWORD(a31) = v53;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t (*)(_QWORD, uint64_t, _QWORD), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 8 * (int)(((v63 == 0) * ((v52 - 581) ^ 0xDBA27ECF ^ v52 ^ 0xDBA27953)) ^ v52)))(v63, v55, v56, v57, v58, v59, v60, v61, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

void sub_1A275AA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void (*a14)(uint64_t, const __CFString *, uint64_t), void (*a15)(uint64_t), uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  uint64_t v53;

  a14(a18, CFSTR("RulIk"), a52);
  *(_DWORD *)(v53 - 148) = v52
                         + 1758526123 * ((2 * ((v53 - 152) & 0x545C5B8) - (v53 - 152) + 2059024961) ^ 0xF618E791)
                         + 765;
  *(_QWORD *)(v53 - 144) = a28;
  sub_1A275B114(v53 - 152);
  a15(a52);
  JUMPOUT(0x1A275AE48);
}

uint64_t sub_1A275AABC@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((((v1 - v4 + 813) ^ (v2 + 1909) ^ (v1 + 2010034315) & 0x88314FCD)
                                               * (a1 != 3)) ^ v1))
                            - 12))();
}

uint64_t sub_1A275AB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45)
{
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;

  v48 = 2106769199 * ((~(v47 - 152) & 0x2B6B0F45 | (v47 - 152) & 0xD494F0BA) ^ 0x44972470);
  *(_QWORD *)(v47 - 128) = v47 - 168;
  *(_BYTE *)(v47 - 136) = 47 * ((~(v47 + 104) & 0x45 | (v47 + 104) & 0xBA) ^ 0x70)
                        + (((v45 - 101) | 0xD5) + 62) * a18
                        - 33;
  *(_DWORD *)(v47 - 100) = (a45 ^ 0xDC87F9FD)
                         - v48
                         + 1006466779
                         + ((((v45 - 538444432) & 0xFBBA7C13) - 580028439) & (2 * a45));
  *(_QWORD *)(v47 - 112) = a26;
  *(_DWORD *)(v47 - 120) = v45 - v48 + 1735;
  *(_QWORD *)(v47 - 152) = a43;
  *(_QWORD *)(v47 - 144) = v47 - 184;
  v49 = ((uint64_t (*)(uint64_t))((char *)off_1E47CDD30[v45 - 607] - 4))(v47 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v46
                                                      + 8 * ((2882 * (*(_DWORD *)(v47 - 104) == 1718253555)) ^ v45))
                                          - 12))(v49);
}

uint64_t sub_1A275AC2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(void), uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;

  v56 = a13();
  HIDWORD(a31) = 1718210903;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(void), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 + 8 * ((1299 * (((v56 == 0) ^ (21 * (((v46 + 3) | 0x11) ^ 0x32))) & 1)) ^ v46)) - 8))(v56, v48, v49, v50, v51, v52, v53, v54, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1A275ACB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(uint64_t, uint64_t, uint64_t), void (*a14)(uint64_t, const __CFString *, uint64_t), void (*a15)(uint64_t), uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;

  a14(a18, CFSTR("sPJ8AGu5PT"), a54);
  a15(a54);
  v67 = a13(a53, v58 - 184, 16);
  HIDWORD(a31) = v55;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), void (*)(uint64_t, const __CFString *, uint64_t), void (*)(uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 + 8 * (((2 * (v67 == 0)) | (32 * (v67 == 0))) ^ v54)) - ((v54 - v56 + 642) ^ 0xDBA27970) + 1369))(v67, v59, v60, v61, v62, v63, v64, v65, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

void sub_1A275AD34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void (*a14)(uint64_t, const __CFString *, uint64_t), void (*a15)(uint64_t), uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  a14(a18, CFSTR("o9YYYJ64ntzC"), a55);
  a15(a55);
  JUMPOUT(0x1A275AE44);
}

void sub_1A275ADE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void (*a20)(uint64_t),void (*a21)(uint64_t),uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  a20(a47);
  a21(a47);
  JUMPOUT(0x1A275AE44);
}

void sub_1A275AE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void (*a14)(uint64_t, const __CFString *, uint64_t), uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;

  a14(a18, CFSTR("AAYLwXkf"), v18);
  JUMPOUT(0x1A275AE34);
}

void sub_1A275AE88(uint64_t a1)
{
  __asm { BR              X13 }
}

uint64_t sub_1A275AF00@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[3];
  unsigned int v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;

  v7 = *(_OWORD *)(v5 + 80);
  v9 = *(_QWORD *)(v5 + 32);
  v8 = *(_QWORD *)(v5 + 40);
  v11 = *(_QWORD *)(v5 + 16);
  v10 = *(_QWORD *)(v5 + 24);
  v12 = *(_QWORD *)(v5 + 56);
  v14[0] = *((_QWORD *)off_1E47CDD30[a1 + 55166927] + a1 + 55167342) - 8;
  v14[1] = v12;
  v15 = (v3 ^ 0xDDB937F2) + 2138037920 + ((2 * v3) & 0xBB726FE4);
  v14[2] = v11;
  v16 = v9;
  v21 = (v4 ^ 0x5DABBF97) - 8562949 + ((2 * v4) & 0xBB577F2E);
  v22 = (v2 ^ 0x6FFBEBD4) - 29371152 + ((2 * v2) & 0xDFF7D7A8);
  v18 = v7;
  v23 = (v1 ^ 0xDFA9BE9A) + 2105497592 + ((2 * v1) & 0xBF537D34);
  v19 = v10;
  v20 = v8;
  v17 = 92;
  *(_QWORD *)(v6 - 48) = v14;
  *(_DWORD *)(v6 - 52) = a1
                       - 1013388011 * ((-557268310 - ((v6 - 56) | 0xDEC8C2AA) + ((v6 - 56) | 0x21373D55)) ^ 0xF0F50F4D)
                       - 16298236;
  result = ((uint64_t (*)(uint64_t))((char *)off_1E47CDD30[a1 + 55166932] - 12))(v6 - 56);
  *(_DWORD *)(v5 + 68) = *(_DWORD *)(v6 - 56) - 1718253555;
  return result;
}

void sub_1A275B114(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) - 1758526123 * ((-2 - ((a1 | 0x6F482D5B) + (~(_DWORD)a1 | 0x90B7D2A4))) ^ 0x1C150F74);
  __asm { BR              X10 }
}

uint64_t sub_1A275B194@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * (a1 - 1504)))();
}

uint64_t sub_1A275B1A8(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 - 1756268191 * (((_DWORD)a1 - 1989330837 - 2 * (a1 & 0x896D386B)) ^ 0x4FFB6AA);
  return (*((uint64_t (**)(void))off_1E47CDD30[v1 ^ 0x922]
          + (int)((196 * ((*(_BYTE *)off_1E47CDD30[v1 ^ 0x903] & 1) == 0)) | v1)))();
}

uint64_t sub_1A275B220@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  char v2;

  *a2 = v2;
  *(_DWORD *)(result + 4) = 665312140;
  return result;
}

void sub_1A275B234(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1A275B2F8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = *(_QWORD *)(v4 + 8 * (v2 + 1108061968)) - 8;
  v9 = v3;
  v10 = v0;
  *(_QWORD *)(v6 - 128) = &v8;
  *(_DWORD *)(v6 - 132) = (v2 + 1110800356) ^ (2106769199
                                             * ((2 * ((v6 - 136) & 0x3777D620) - (v6 - 136) - 930600487) ^ 0xA77402EC));
  result = v5(v6 - 136);
  *(_DWORD *)(v1 + 32) = *(_DWORD *)(v6 - 136);
  return result;
}

void sub_1A275BFB8()
{
  uint64_t v0;

  v0 = **(_QWORD **)(MEMORY[0x1E0C80A78]() + 8);
  __asm { BR              X8 }
}

uint64_t sub_1A275C190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  unint64_t v55;
  char v56;
  int v57;
  int v58;
  uint64_t v59;
  _BYTE *v60;
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  _BOOL4 v65;

  *(_QWORD *)(v59 + 552) = &STACK[0x278F89334A28183C];
  *(_QWORD *)(v59 + 560) = &STACK[0x1EFC1F4B90643032];
  v60[624] = (v55 >> (v58 - v56 + 55)) ^ 0x5A;
  v60[625] = BYTE6(v55) ^ 0x2C;
  v60[626] = BYTE5(v55) ^ 0x2B;
  v60[627] = BYTE4(v55) ^ 0xA7;
  v60[628] = ((BYTE3(v55) ^ 0xB2) + (~(2 * (BYTE3(v55) ^ 0xB2)) | 0xCF) + 25) ^ 0x18;
  v60[629] = ((BYTE2(v55) ^ 0x4B) - 2 * ((BYTE2(v55) ^ 0x4B) & 1) - 127) ^ 0x81;
  v60[630] = BYTE1(v55) ^ 0x5B;
  v60[631] = v55 ^ 0x79;
  *(_DWORD *)(v62 - 136) = v57
                         + v58
                         + 1756268191 * ((2 * ((v62 - 136) & 0x53561148) - (v62 - 136) + 749334199) ^ 0xA13B6076)
                         + 1930;
  v63 = v57 + v58 + 306;
  v64 = sub_1A275B1A8((_DWORD *)(v62 - 136));
  v65 = *(_DWORD *)(v62 - 132) != 665312139;
  LODWORD(STACK[0xF44]) = v61;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a55 + 8 * ((1239 * v65) ^ v63)) - 12))(v64);
}

uint64_t sub_1A275C300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t (*a31)(uint64_t, uint64_t),uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61)
{
  uint64_t v61;
  int v62;
  int v63;
  char v64;
  uint64_t v65;
  _QWORD *v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  BOOL v85;
  char v86;
  int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  BOOL v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  a59 = 0;
  a61 = 1718253555;
  LODWORD(STACK[0x19A4]) = (v63 ^ 0xDEFBF9BA) + 2080331774 + ((2 * v63) & 0xBDF7F374);
  v68 = v67 & 0x83D033F2;
  v69 = 2 * (v67 & 0x83D033F2);
  v70 = ((2 * (v67 ^ 0x48E632D8)) ^ 0x966C0254) & (v67 ^ 0x48E632D8) ^ (2 * (v67 ^ 0x48E632D8)) & 0xCB36012A;
  v71 = v70 ^ 0x4912012A;
  v72 = (v70 ^ 0x2000000) & (4 * (v69 & (v67 ^ 0x4BC633F8) ^ v68)) ^ v69 & (v67 ^ 0x4BC633F8) ^ v68;
  v73 = ((4 * v71) ^ 0x2CD804A8) & v71 ^ (4 * v71) & 0xCB360128;
  v74 = v72 ^ 0xCB36012A ^ (v73 ^ 0x8100020) & (16 * v72);
  v75 = (16 * (v73 ^ 0xC3260102)) & 0xCB360120 ^ 0x4816010A ^ ((16 * (v73 ^ 0xC3260102)) ^ 0xB36012A0) & (v73 ^ 0xC3260102);
  v76 = (v74 << 8) & 0xCB360100 ^ v74 ^ ((v74 << 8) ^ 0x36012A00) & v75;
  *(_QWORD *)(v61 + 576) = 4
                         * (v67 ^ (2
                                 * ((v76 << 16) & 0x4B360000 ^ v76 ^ ((v76 << 16) ^ 0x12A0000) & ((v75 << 8) & 0xCB360000 ^ 0x49360000 ^ ((v75 << 8) ^ 0x36010000) & v75))) ^ 0x13F831A6)
                         - 0x3FBF5CDFDFFBCD7DLL;
  *(_BYTE *)(v61 + 591) = (_DWORD)a24 == 1526419911;
  v77 = ((2 * (v67 ^ 0x280B5A32)) ^ 0x57B6D380) & (v67 ^ 0x280B5A32) ^ (2 * (v67 ^ 0x280B5A32)) & 0xABDB69C0;
  v78 = v77 ^ 0xA8492840;
  v79 = (v77 ^ 0x3804180) & (4 * (v69 & (v67 ^ 0x2B8B3BF2) ^ v68)) ^ v69 & (v67 ^ 0x2B8B3BF2) ^ v68;
  v80 = ((4 * v78) ^ 0xAF6DA700) & v78 ^ (4 * v78) & 0xABDB69C0;
  v81 = (v80 ^ 0xAB492100) & (16 * v79) ^ v79;
  v82 = ((16 * (v80 ^ 0x9248C0)) ^ 0xBDB69C00) & (v80 ^ 0x9248C0) ^ (16 * (v80 ^ 0x9248C0)) & 0xABDB69C0;
  v83 = v81 ^ 0xABDB69C0 ^ (v82 ^ 0xA9920800) & (v81 << 8);
  v84 = v67 ^ (2
             * ((v83 << 16) & 0x2BDB0000 ^ v83 ^ ((v83 << 16) ^ 0x69C00000) & (((v82 ^ 0x24961C0) << 8) & 0x2BDB0000 ^ 0x20920000 ^ (((v82 ^ 0x24961C0) << 8) ^ 0x5B690000) & (v82 ^ 0x24961C0))));
  *(_BYTE *)(v61 + 592) = HIBYTE(v84) ^ 0x87;
  *(_BYTE *)(v61 + 593) = BYTE2(v84) ^ 0xE6;
  *(_BYTE *)(v61 + 594) = ((BYTE1(v84) ^ 0xE0) - ((2 * (BYTE1(v84) ^ 0xE0)) & 0x96) + 75) ^ v64;
  *(_BYTE *)(v61 + 595) = v84 ^ 0x72;
  LODWORD(STACK[0x19BC]) = v67 - 610428472;
  *(_BYTE *)(v61 + 601) = (v67 - 610428472) < 0x57CD65D6;
  *(_BYTE *)(v61 + 602) = v67 == 2083507214;
  if (a15)
    v85 = HIDWORD(a23) == 1178882894;
  else
    v85 = 1;
  v86 = v85;
  *(_BYTE *)(v61 + 603) = v86;
  v87 = v69 & (v67 ^ 0x2B9CB3F8) ^ v68;
  v88 = ((2 * (v67 ^ 0x299CB478)) ^ 0x54990F14) & (v67 ^ 0x299CB478) ^ (2 * (v67 ^ 0x299CB478)) & 0xAA4C878A;
  v89 = (v88 ^ 0x700) & (4 * v87) ^ v87;
  v90 = ((4 * (v88 ^ 0xAA44808A)) ^ 0xA9321E28) & (v88 ^ 0xAA44808A) ^ (4 * (v88 ^ 0xAA44808A)) & 0xAA4C8788;
  v91 = (v90 ^ 0xA8000600) & (16 * v89) ^ v89;
  v92 = ((16 * (v90 ^ 0x24C8182)) ^ 0xA4C878A0) & (v90 ^ 0x24C8182) ^ (16 * (v90 ^ 0x24C8182)) & 0xAA4C8780;
  v93 = v91 ^ 0xAA4C878A ^ (v92 ^ 0xA0480000) & (v91 << 8);
  LODWORD(STACK[0x19C4]) = (4 * v67) ^ (8
                                      * ((v93 << 16) & 0xA4C0000 ^ v93 ^ ((v93 << 16) ^ 0x78A0000) & (((v92 ^ 0xA04870A) << 8) & 0xA4C0000 ^ 0x2480000 ^ (((v92 ^ 0xA04870A) << 8) ^ 0xC870000) & (v92 ^ 0xA04870A)))) ^ 0x4D64F398;
  if (a21)
    v94 = HIDWORD(a24) == 1178882894;
  else
    v94 = 1;
  v95 = v94;
  *(_BYTE *)(v61 + 611) = v95;
  v66[430] = *(_QWORD *)(v65 + 8 * v62) + ((v62 + 1452) ^ 0xFFFFFFFFFFFFF98FLL);
  v66[433] = 0;
  v66[439] = 0;
  v66[448] = &a59;
  *(_QWORD *)(v61 + 3352) = &a59;
  LODWORD(STACK[0x248C]) = STACK[0x1004];
  *(_QWORD *)(v61 + 3368) = v66[446];
  LODWORD(STACK[0x249C]) = STACK[0xFF4];
  *(_QWORD *)(v61 + 3384) = v66[444];
  *(_QWORD *)(v61 + 3392) = v66[443];
  *(_QWORD *)(v61 + 3400) = v66[442];
  *(_QWORD *)(v61 + 3408) = v66[441];
  LODWORD(STACK[0x24C4]) = STACK[0xFCC];
  *(_QWORD *)(v61 + 3424) = v66[439];
  *(_QWORD *)(v61 + 3432) = v66[438];
  *(_QWORD *)(v61 + 3440) = v66[437];
  *(_QWORD *)(v61 + 3448) = v66[436];
  LODWORD(STACK[0x24EC]) = STACK[0xFA4];
  *(_QWORD *)(v61 + 3464) = v66[434];
  *(_QWORD *)(v61 + 3472) = v66[433];
  *(_QWORD *)(v61 + 3480) = v66[432];
  LODWORD(STACK[0x250C]) = STACK[0xF84];
  v96 = v66[430];
  *(_QWORD *)(v61 + 3496) = v66[429];
  LODWORD(STACK[0x251C]) = STACK[0xF6C];
  *(_QWORD *)(v61 + 3512) = v66[427];
  *(_QWORD *)(v61 + 3520) = v66[426];
  *(_QWORD *)(v61 + 3528) = v66[425];
  *(_QWORD *)(v61 + 3536) = v66[424];
  *(_QWORD *)(v61 + 3544) = v96;
  v97 = a31(16, 2241923698);
  *(_QWORD *)(v61 + 3552) = v97;
  v66[449] = 0;
  LOBYTE(STACK[0x101B]) = 0;
  LODWORD(STACK[0x101C]) = 1718210903;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 + 8 * (int)(((v97 == 0) * (((v62 + 1452) ^ 0x833BC287) + 2093235190)) ^ (v62 + 1452))) - ((v62 + 1519) ^ 0x6BELL)))(v97, v98, v99, v100, v101, v102, v103, v104, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_1A2760034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t (*a31)(uint64_t, uint64_t),uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57)
{
  uint64_t v57;
  int v58;
  uint64_t v59;
  _QWORD *v60;

  v60 = *(_QWORD **)(v57 + 3552);
  *v60 = 0;
  v60[1] = 0;
  *(_QWORD *)(v57 + 3560) = v60 + 1;
  **(_QWORD **)(v57 + 3552) = a31(4096, 2241923698);
  return ((uint64_t (*)(void))(*(_QWORD *)(v59
                                        + 8 * (int)(((a57 != 1) * ((v58 - 4032) & 0x833BCDF5 ^ 0x833BC49B)) ^ v58))
                            - 8))();
}

uint64_t sub_1A27600A4(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v2 + v1 + 550) ^ (60 * (a1 == 0)))) - 8))();
}

uint64_t sub_1A27600CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t (*a53)(_QWORD))
{
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v55 = a53(*(_QWORD *)(v53 + 3552));
  *(_QWORD *)(v54 + 3592) = 0;
  LOBYTE(STACK[0x101B]) = 0;
  LODWORD(STACK[0x101C]) = 1718210903;
  LODWORD(STACK[0x2558]) = STACK[0x101C];
  *(_BYTE *)(v53 + 3575) = STACK[0x101B];
  **(_QWORD **)(v53 + 3352) = *(_QWORD *)(v54 + 3592);
  return (*(uint64_t (**)(uint64_t))(v53 + 3544))(v55);
}

uint64_t sub_1A27601A0()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v5)(void);

  v4[266] = *(_QWORD *)(v1 + 3536);
  v4[267] = *(_QWORD *)(v1 + 3528);
  v4[268] = *(_QWORD *)(v1 + 3520);
  v4[269] = *(_QWORD *)(v1 + 3512);
  LODWORD(STACK[0xA7C]) = STACK[0x251C];
  v4[271] = *(_QWORD *)(v1 + 3496);
  LODWORD(STACK[0xA8C]) = STACK[0x250C];
  v4[273] = *(_QWORD *)(v1 + 3480);
  v4[274] = *(_QWORD *)(v1 + 3472);
  v4[275] = *(_QWORD *)(v1 + 3464);
  LODWORD(STACK[0xAAC]) = STACK[0x24EC];
  v4[277] = *(_QWORD *)(v1 + 3448);
  v4[278] = *(_QWORD *)(v1 + 3440);
  v4[279] = *(_QWORD *)(v1 + 3432);
  v4[280] = *(_QWORD *)(v1 + 3424);
  LODWORD(STACK[0xAD4]) = STACK[0x24C4];
  v4[282] = *(_QWORD *)(v1 + 3408);
  v4[283] = *(_QWORD *)(v1 + 3400);
  v4[284] = *(_QWORD *)(v1 + 3392);
  v4[285] = *(_QWORD *)(v1 + 3384);
  LODWORD(STACK[0xAFC]) = STACK[0x249C];
  v4[287] = *(_QWORD *)(v1 + 3368);
  LODWORD(STACK[0xB08]) = STACK[0x248C];
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v3
                                     + 8
                                     * ((*(unsigned __int8 *)(v1 + 3575) * (((v2 + v0 - 343) | 0x688) ^ 0x121)) ^ (v2 + v0 - 144)))
                         - 12);
  LODWORD(STACK[0xB0C]) = STACK[0x2558];
  return v5();
}

uint64_t sub_1A276029C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,unsigned int a59,uint64_t a60)
{
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  _BOOL4 v63;
  uint64_t (*v64)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  LODWORD(STACK[0x20BC]) = a59;
  v60[299] = a60;
  v63 = a59 > *(_DWORD *)(a60 + 8);
  v62[244] = v60[442];
  v62[245] = v60[441];
  v62[246] = v60[440];
  v62[247] = v60[439];
  LODWORD(STACK[0x9CC]) = STACK[0x251C];
  v62[249] = v60[437];
  LODWORD(STACK[0x9DC]) = STACK[0x250C];
  v62[251] = v60[435];
  v62[252] = v60[434];
  v62[253] = v60[433];
  LODWORD(STACK[0x9FC]) = STACK[0x24EC];
  v62[255] = v60[431];
  v62[256] = v60[430];
  v62[257] = v60[429];
  v62[258] = v60[428];
  v62[259] = v60[426];
  v62[260] = v60[425];
  v62[261] = v60[424];
  v62[262] = v60[423];
  LODWORD(STACK[0xA44]) = STACK[0x249C];
  v62[264] = v60[421];
  LODWORD(STACK[0xA50]) = STACK[0x248C];
  v64 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 + 8 * ((v63 * ((a7 - 1429) ^ 0x179)) ^ a7))
                                                                                              - ((a7 - 2093236664) ^ 0x833BC4FCLL));
  LODWORD(STACK[0xA54]) = 1718253555;
  return v64(a1, a2, a3, a4, a5, a6, 2201732335);
}

void sub_1A27603C4()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 + 8 * v0);
  v3[517] = v1[442];
  v3[518] = v1[441];
  v3[519] = v1[440];
  v3[520] = v1[439];
  LODWORD(STACK[0x1254]) = STACK[0x251C];
  v3[522] = v1[437];
  LODWORD(STACK[0x1264]) = STACK[0x250C];
  v3[524] = v4;
  v3[525] = v1[434];
  v3[526] = v1[433];
  LODWORD(STACK[0x1284]) = STACK[0x24EC];
  v3[528] = v1[431];
  v3[529] = v1[430];
  v3[530] = v1[429];
  v3[531] = v1[428];
  LODWORD(STACK[0x12AC]) = STACK[0x24C4];
  v3[533] = v1[426];
  v3[534] = v1[421];
  LODWORD(STACK[0x12C0]) = STACK[0x248C];
  LODWORD(STACK[0x12C4]) = STACK[0x20BC];
  JUMPOUT(0x1A2760480);
}

uint64_t sub_1A27605F8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void);
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1[561] = v0[510];
  v1[562] = v0[509];
  v1[563] = v0[508];
  v1[564] = v0[507];
  LODWORD(STACK[0x13B4]) = STACK[0x273C];
  v1[566] = v0[505];
  LODWORD(STACK[0x13C4]) = STACK[0x272C];
  v1[568] = v0[511];
  v1[569] = v0[503];
  v1[570] = v0[502];
  LODWORD(STACK[0x13E4]) = STACK[0x2714];
  v1[572] = v0[500];
  v1[573] = v0[499];
  v1[574] = v0[498];
  v1[575] = v0[497];
  LODWORD(STACK[0x140C]) = STACK[0x26EC];
  v1[577] = v0[495];
  v1[578] = v0[492];
  v1[579] = v0[512];
  v1[580] = *(_QWORD *)(v2 + 1);
  LODWORD(STACK[0x1434]) = 1718210905;
  v1[582] = v0[494];
  LODWORD(STACK[0x1440]) = STACK[0x26D4];
  LODWORD(STACK[0x1444]) = 1718210905;
  v3 = STACK[0x1444];
  v4 = STACK[0x1440];
  v5 = v1[582];
  v6 = STACK[0x1434];
  v7 = v1[580];
  v8 = v1[579];
  v9 = v1[578];
  v10 = v1[577];
  v11 = STACK[0x140C];
  v12 = v1[575];
  v13 = v1[574];
  v14 = v1[573];
  v15 = v1[572];
  v16 = STACK[0x13E4];
  v17 = v1[570];
  v18 = v1[569];
  v19 = (uint64_t (*)(void))v1[568];
  v20 = STACK[0x13C4];
  v21 = v1[566];
  v22 = STACK[0x13B4];
  v23 = v1[564];
  v24 = v1[563];
  v25 = v1[562];
  v26 = v1[561];
  v1[173] = v26;
  v1[174] = v25;
  v1[175] = v24;
  v1[176] = v23;
  LODWORD(STACK[0x794]) = v22;
  v1[178] = v21;
  LODWORD(STACK[0x7A4]) = v20;
  v1[180] = v19;
  v1[181] = v18;
  v1[182] = v17;
  LODWORD(STACK[0x7C4]) = v16;
  v1[184] = v15;
  v1[185] = v14;
  v1[186] = v13;
  v1[187] = v12;
  LODWORD(STACK[0x7EC]) = v11;
  v1[189] = v10;
  v1[190] = v9;
  v1[191] = v8;
  v1[192] = v7;
  LODWORD(STACK[0x814]) = v6;
  v1[194] = v5;
  LODWORD(STACK[0x820]) = v4;
  LODWORD(STACK[0x824]) = v3;
  v1[244] = v26;
  v1[245] = v25;
  v1[246] = v24;
  v1[247] = v23;
  LODWORD(STACK[0x9CC]) = v22;
  v1[249] = v21;
  LODWORD(STACK[0x9DC]) = v20;
  v1[251] = v19;
  v1[252] = v18;
  v1[253] = v17;
  LODWORD(STACK[0x9FC]) = v16;
  v1[255] = v15;
  v1[256] = v14;
  v1[257] = v13;
  v1[258] = v12;
  v1[259] = v10;
  v1[260] = v9;
  v1[261] = v8;
  v1[262] = v7;
  LODWORD(STACK[0xA44]) = v6;
  v1[264] = v5;
  LODWORD(STACK[0xA50]) = v4;
  LODWORD(STACK[0xA54]) = v3;
  v1[471] = v26;
  v1[472] = v25;
  v1[473] = v24;
  v1[474] = v23;
  LODWORD(STACK[0x10E4]) = v22;
  v1[476] = v21;
  LODWORD(STACK[0x10F4]) = v20;
  v1[478] = v19;
  v1[479] = v18;
  v1[480] = v17;
  LODWORD(STACK[0x1114]) = v16;
  v1[482] = v15;
  v1[483] = v14;
  v1[484] = v13;
  v1[485] = v12;
  LODWORD(STACK[0x113C]) = v11;
  v1[487] = v10;
  v1[488] = v9;
  v1[489] = v8;
  v1[490] = v7;
  LODWORD(STACK[0x1164]) = v6;
  v1[492] = v5;
  LODWORD(STACK[0x1170]) = v4;
  LODWORD(STACK[0x1174]) = v3;
  v1[603] = v26;
  v1[604] = v25;
  v1[605] = v24;
  v1[606] = v23;
  LODWORD(STACK[0x1504]) = v22;
  v1[608] = v21;
  LODWORD(STACK[0x1514]) = v20;
  v1[610] = v19;
  v1[611] = v18;
  v1[612] = v17;
  LODWORD(STACK[0x1534]) = v16;
  v1[614] = v15;
  v1[615] = v14;
  v1[616] = v13;
  v1[617] = v12;
  LODWORD(STACK[0x155C]) = v11;
  v1[619] = v10;
  v1[620] = v9;
  v1[621] = v8;
  v1[622] = v7;
  LODWORD(STACK[0x1584]) = v6;
  v1[624] = v5;
  LODWORD(STACK[0x1594]) = v3;
  return v19();
}

void sub_1A27606BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,void (*a53)(_QWORD))
{
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;

  a53(*(_QWORD *)(v53 + 3552));
  *(_QWORD *)(v54 + 3616) = 0;
  *v55 = 0;
  LODWORD(STACK[0x1004]) = 1718210903;
  JUMPOUT(0x1A27606E8);
}

uint64_t sub_1A276070C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v11 = *(_QWORD *)(v7 + 3536);
  v12 = (v8 + v6 - 110);
  v13 = *(_QWORD *)(v7 + 3448);
  *v10 = *(_QWORD *)(v7 + 3464);
  v10[1] = v13;
  v14 = *(_QWORD *)(v7 + 3432);
  v10[2] = *(_QWORD *)(v7 + 3440);
  v10[3] = v14;
  v15 = *(_QWORD *)(v7 + 3408);
  v10[5] = *(_QWORD *)(v7 + 3424);
  v10[6] = v15;
  LODWORD(STACK[0x204]) = STACK[0x24EC];
  LODWORD(STACK[0x22C]) = STACK[0x24C4];
  v10[7] = *(_QWORD *)(v7 + 3400);
  v10[8] = v11;
  v10[10] = *(_QWORD *)(v7 + 3392);
  v16 = *(_QWORD *)(v7 + 3384);
  LODWORD(STACK[0x254]) = STACK[0x249C];
  v17 = *(_QWORD *)(v7 + 3368);
  v10[12] = v16;
  v10[13] = v17;
  v18 = *(_QWORD *)(v9 + 8 * (int)((930 * *(unsigned __int8 *)(v7 + 3575)) ^ v12));
  LODWORD(STACK[0x260]) = STACK[0x248C];
  LODWORD(STACK[0x264]) = STACK[0x2558];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 - (v12 ^ 0x10D)))(a1, a2, a3, a4, a5, a6, 2201732335);
}

uint64_t sub_1A27607E4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  _QWORD *v57;
  int v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int v68;
  uint64_t (*v69)(void);

  v61 = (a1 + 750);
  v62 = *(_QWORD *)(v59 + 8 * a1) + v61 - 1019;
  v60[458] = v57[442];
  v60[453] = v57[441];
  v60[454] = v57[439];
  v60[456] = v57[437];
  LODWORD(STACK[0x101C]) = STACK[0x251C];
  v60[457] = v57[434];
  v60[460] = v57[433];
  v60[467] = v62;
  v60[461] = v57[430];
  v60[462] = v57[429];
  v60[464] = v57[428];
  LODWORD(STACK[0x1044]) = STACK[0x250C];
  v60[465] = v57[426];
  LODWORD(STACK[0x1064]) = STACK[0x24EC];
  v60[466] = v57[425];
  v60[469] = v57[424];
  v60[471] = v57[423];
  LODWORD(STACK[0x1084]) = STACK[0x249C];
  v60[472] = v57[421];
  LODWORD(STACK[0x10AC]) = STACK[0x248C];
  LODWORD(STACK[0x10B8]) = 1468440557;
  LODWORD(STACK[0x2560]) = STACK[0x10B8];
  LODWORD(STACK[0x2564]) = STACK[0x10AC];
  v57[448] = v60[472];
  LODWORD(STACK[0x2574]) = STACK[0x1084];
  v57[450] = v60[471];
  v57[451] = v60[469];
  v57[452] = v60[466];
  LODWORD(STACK[0x259C]) = STACK[0x1064];
  v57[453] = v60[465];
  LODWORD(STACK[0x25BC]) = STACK[0x1044];
  v57[455] = v60[464];
  v57[456] = v60[462];
  v57[457] = v60[461];
  v63 = v60[467];
  v57[459] = v60[460];
  v57[460] = v60[457];
  LODWORD(STACK[0x25D4]) = STACK[0x101C];
  v64 = v60[456];
  v57[462] = v64;
  v65 = v60[454];
  v57[463] = v65;
  v66 = v60[453];
  v57[464] = v66;
  v67 = v60[458];
  v57[465] = v67;
  v57[466] = a57;
  v57[467] = v63;
  v60[502] = a57;
  v68 = *(_DWORD *)(a57 + 12);
  v57[468] = a57 + 12;
  LODWORD(STACK[0x2610]) = v68;
  v60[513] = v67;
  v60[496] = v66;
  v60[497] = a57 + 12;
  v60[499] = v65;
  v60[501] = v64;
  LODWORD(STACK[0x1174]) = STACK[0x25D4];
  v60[503] = v57[460];
  v60[505] = v57[459];
  v60[506] = v63;
  v60[507] = v57[457];
  v60[508] = v57[456];
  v60[510] = v57[455];
  LODWORD(STACK[0x119C]) = STACK[0x25BC];
  v60[511] = v57[453];
  LODWORD(STACK[0x11AC]) = STACK[0x259C];
  LODWORD(STACK[0x11CC]) = STACK[0x2560];
  v60[512] = v57[452];
  v60[515] = v57[451];
  v60[517] = v57[450];
  LODWORD(STACK[0x11F4]) = STACK[0x2574];
  v60[518] = v57[448];
  LODWORD(STACK[0x121C]) = STACK[0x2564];
  v69 = (uint64_t (*)(void))(*(_QWORD *)(v59 + 8
                                            * (int)((((v68 < 0xFFFFFFFB) << 8) | ((v68 < 0xFFFFFFFB) << 10)) ^ v61))
                          - ((v61 - v58 - 640)
                           + ((v61 - 923) ^ 0xFFFFFFFF7CC43B40)));
  LODWORD(STACK[0x1228]) = 1718210905;
  return v69();
}

uint64_t sub_1A276089C()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v5)(void);

  v4[285] = *(_QWORD *)(v1 + 3536);
  v4[268] = *(_QWORD *)(v1 + 3528);
  v4[269] = *(_QWORD *)(v1 + 3520);
  v4[271] = *(_QWORD *)(v1 + 3512);
  v4[273] = *(_QWORD *)(v1 + 3496);
  v4[274] = *(_QWORD *)(v1 + 3480);
  LODWORD(STACK[0xA54]) = STACK[0x251C];
  v4[275] = *(_QWORD *)(v1 + 3472);
  v4[277] = *(_QWORD *)(v1 + 3464);
  v4[278] = *(_QWORD *)(v1 + 3448);
  v4[279] = *(_QWORD *)(v1 + 3440);
  v4[280] = *(_QWORD *)(v1 + 3432);
  v4[282] = *(_QWORD *)(v1 + 3424);
  LODWORD(STACK[0xA7C]) = STACK[0x250C];
  v4[283] = *(_QWORD *)(v1 + 3408);
  LODWORD(STACK[0xA8C]) = STACK[0x24EC];
  LODWORD(STACK[0xAAC]) = STACK[0x24C4];
  v4[284] = *(_QWORD *)(v1 + 3400);
  v4[287] = *(_QWORD *)(v1 + 3392);
  v4[289] = *(_QWORD *)(v1 + 3384);
  LODWORD(STACK[0xAD4]) = STACK[0x249C];
  v4[290] = *(_QWORD *)(v1 + 3368);
  LODWORD(STACK[0xAFC]) = STACK[0x248C];
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1996 * *(unsigned __int8 *)(v1 + 3575)) ^ (v2 + v0 - 58)))
                         - 2 * (v0 ^ 0x833BC796)
                         + 1728);
  LODWORD(STACK[0xB08]) = STACK[0x2558];
  return v5();
}

uint64_t sub_1A2760998@<X0>(int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,unsigned int a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  _QWORD *v56;
  int v57;
  uint64_t v58;
  _QWORD *v59;
  int v60;
  _BOOL4 v61;
  uint64_t (*v62)(void);

  LODWORD(STACK[0x20BC]) = a53;
  v56[299] = a56;
  v61 = a53 > *(_DWORD *)(a56 + 8);
  v59[262] = v56[442];
  v59[246] = v56[441];
  v59[247] = v56[440];
  v59[249] = v56[439];
  v59[251] = v56[437];
  v59[252] = v56[435];
  LODWORD(STACK[0x9A4]) = STACK[0x251C];
  v59[253] = v56[434];
  v59[255] = v56[433];
  v59[256] = v56[431];
  v59[257] = v56[430];
  v59[258] = v56[429];
  v59[259] = v56[428];
  LODWORD(STACK[0x9CC]) = STACK[0x250C];
  v59[260] = v56[426];
  LODWORD(STACK[0x9DC]) = STACK[0x24C4];
  v59[261] = v56[425];
  v59[264] = v56[424];
  v59[266] = v56[423];
  LODWORD(STACK[0x9FC]) = STACK[0x249C];
  v59[267] = v56[421];
  LODWORD(STACK[0xA44]) = STACK[0x248C];
  v62 = (uint64_t (*)(void))(*(_QWORD *)(v58 + 8 * ((v61 * (v57 + a1 + a2 - 1739 + 130)) ^ a2))
                          - ((a2 - 1705568069) & 0x65A8E07B ^ 7));
  LODWORD(STACK[0xA50]) = v60;
  return v62();
}

uint64_t sub_1A2760AAC()
{
  uint64_t v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;

  v5 = *(_QWORD *)(v3 + 8 * v0);
  v4[524] = v1[442];
  v4[519] = v1[441];
  v4[520] = v1[440];
  v4[522] = v1[439];
  v4[525] = v1[437];
  v4[526] = v1[435];
  LODWORD(STACK[0x122C]) = STACK[0x251C];
  v4[528] = v1[434];
  v4[529] = v1[433];
  v4[530] = v1[431];
  v4[531] = v1[430];
  v4[537] = v5;
  v4[533] = v1[428];
  LODWORD(STACK[0x1254]) = STACK[0x250C];
  v4[534] = v1[426];
  LODWORD(STACK[0x1264]) = STACK[0x24EC];
  LODWORD(STACK[0x1284]) = STACK[0x24C4];
  v4[536] = v1[421];
  LODWORD(STACK[0x12AC]) = STACK[0x248C];
  LODWORD(STACK[0x12C0]) = STACK[0x20BC];
  v4[539] = v1[299];
  v6 = (v0 - 486555733) & 0x5FFDCDDF ^ 0xC1C6497E;
  v1[492] = v4[539];
  v7 = LODWORD(STACK[0x12C0]);
  LODWORD(STACK[0x26D4]) = STACK[0x12AC];
  v1[494] = v4[536];
  LODWORD(STACK[0x26EC]) = STACK[0x1284];
  LODWORD(STACK[0x2714]) = STACK[0x1264];
  v1[495] = v4[534];
  LODWORD(STACK[0x272C]) = STACK[0x1254];
  v1[497] = v4[533];
  v8 = v4[537];
  v1[498] = v4[531];
  v1[499] = v4[530];
  v1[500] = v4[529];
  v1[502] = v4[528];
  LODWORD(STACK[0x273C]) = STACK[0x122C];
  v1[503] = v4[526];
  v1[505] = v4[525];
  v1[507] = v4[522];
  v1[508] = v4[520];
  v1[509] = v4[519];
  v1[510] = v4[524];
  v1[511] = v8;
  v9 = v1[492];
  v10 = *(unsigned int *)(v9 + 8);
  v1[512] = v9 + 8;
  v11 = (v7 ^ 0x7379DFE7FFD7FF3DLL) + v10 - 0x7379DFE7FFD7FF3DLL + ((v7 << (v6 ^ 0xF1u)) & 0x1FFAFFE7ALL);
  v1[513] = v11;
  LOBYTE(STACK[0x277F]) = v11 < 0xFFFFFFFF;
  v4[538] = v10;
  v12 = v2 + v6;
  v13 = v4[538];
  STACK[0x2780] = v13 << (((v12 - 85) | 0x91u) + 78);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8
                                             * ((822 * (v13 > (((v12 + 713) | 1u) ^ 0x7FFFFBBEuLL))) ^ (v12 + 925)))
                            - 4))();
}

uint64_t sub_1A2760B6C()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((2 * (LODWORD(STACK[0x9A4]) != 1666240185)) | (4
                                                                               * (LODWORD(STACK[0x9A4]) != 1666240185))) ^ (v0 + 2093235827))))();
}

uint64_t sub_1A2760BB0()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;
  _QWORD *v3;
  int v4;
  uint64_t (*v5)(void);

  v3[289] = v0[295];
  v3[290] = v0[294];
  v3[291] = v0[293];
  v3[292] = v0[292];
  LODWORD(STACK[0xB34]) = STACK[0x2084];
  v3[294] = v0[290];
  LODWORD(STACK[0xB44]) = STACK[0x2074];
  v3[296] = v0[288];
  v3[297] = v0[287];
  v3[298] = v0[286];
  LODWORD(STACK[0xB64]) = STACK[0x2054];
  v3[300] = v0[284];
  v3[301] = v0[283];
  v3[302] = v0[282];
  v3[303] = v0[281];
  LODWORD(STACK[0xB8C]) = STACK[0x202C];
  v3[305] = v0[279];
  v3[306] = v0[278];
  v3[307] = v0[277];
  v3[308] = v0[276];
  LODWORD(STACK[0xBB4]) = STACK[0x2004];
  v3[310] = v0[274];
  v4 = STACK[0x1FF4];
  LODWORD(STACK[0xBC0]) = 1718210891;
  LODWORD(STACK[0x217C]) = v4;
  v0[323] = v3[310];
  LODWORD(STACK[0x218C]) = STACK[0xBB4];
  v0[325] = v3[308];
  v0[326] = v3[307];
  v0[327] = v3[306];
  v0[328] = v3[305];
  LODWORD(STACK[0x21B4]) = STACK[0xB8C];
  v0[330] = v3[303];
  v0[331] = v3[302];
  v0[332] = v3[301];
  v0[333] = v3[300];
  LODWORD(STACK[0x21DC]) = STACK[0xB64];
  v0[335] = v3[298];
  v0[336] = v3[297];
  v0[337] = v3[296];
  LODWORD(STACK[0x21FC]) = STACK[0xB44];
  v0[339] = v3[294];
  LODWORD(STACK[0x220C]) = STACK[0xB34];
  v0[341] = v3[292];
  v0[342] = v3[291];
  v0[343] = v3[290];
  v0[344] = v3[289];
  LODWORD(STACK[0xBC4]) = STACK[0x217C];
  v3[312] = v0[323];
  LODWORD(STACK[0xBD4]) = STACK[0x218C];
  v3[314] = v0[325];
  v3[315] = v0[326];
  v3[316] = v0[327];
  v3[317] = v0[328];
  LODWORD(STACK[0xBFC]) = STACK[0x21B4];
  v3[319] = v0[331];
  v3[320] = v0[332];
  v3[321] = v0[333];
  LODWORD(STACK[0xC1C]) = STACK[0x21DC];
  v3[323] = v0[335];
  v3[324] = v0[336];
  v3[325] = v0[337];
  LODWORD(STACK[0xC3C]) = STACK[0x21FC];
  v3[327] = v0[339];
  LODWORD(STACK[0xC4C]) = STACK[0x220C];
  v3[329] = v0[341];
  v3[330] = v0[342];
  v3[331] = v0[343];
  v3[332] = v0[344];
  v3[333] = v0[330];
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 + 631810251) & 0x571B92FC))
                         - ((((v1 + 631810251) & 0x571B92FCu) - 2093235144) ^ 0x833BC4F8));
  LODWORD(STACK[0xC78]) = 1718210891;
  return v5();
}

uint64_t sub_1A2761440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58)
{
  int v58;
  _BYTE *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v64 = *(_QWORD *)(v62 + 8 * v58);
  v65 = v58 ^ 0xCC19BA4u;
  LODWORD(STACK[0xC7C]) = STACK[0x217C];
  v66 = v64 + v65 - 214014756;
  v63[335] = *(_QWORD *)(v60 + 2584);
  LODWORD(STACK[0xC8C]) = STACK[0x218C];
  v63[337] = *(_QWORD *)(v60 + 2600);
  v63[338] = *(_QWORD *)(v60 + 2608);
  v63[339] = *(_QWORD *)(v60 + 2616);
  v63[340] = *(_QWORD *)(v60 + 2624);
  LODWORD(STACK[0xCB4]) = STACK[0x21B4];
  v63[342] = *(_QWORD *)(v60 + 2648);
  v63[343] = *(_QWORD *)(v60 + 2656);
  v63[344] = *(_QWORD *)(v60 + 2664);
  LODWORD(STACK[0xCD4]) = STACK[0x21DC];
  v63[346] = *(_QWORD *)(v60 + 2680);
  v63[347] = *(_QWORD *)(v60 + 2688);
  v63[348] = *(_QWORD *)(v60 + 2696);
  LODWORD(STACK[0xCF4]) = STACK[0x21FC];
  v63[350] = *(_QWORD *)(v60 + 2712);
  LODWORD(STACK[0xD04]) = STACK[0x220C];
  v63[352] = *(_QWORD *)(v60 + 2728);
  v63[353] = *(_QWORD *)(v60 + 2736);
  v63[354] = *(_QWORD *)(v60 + 2744);
  v63[355] = *(_QWORD *)(v60 + 2752);
  v67 = *(_QWORD *)(v60 + 2640);
  *(_QWORD *)(v60 + 2944) = v63[355];
  *(_QWORD *)(v60 + 2952) = v63[354];
  *(_QWORD *)(v60 + 2960) = v63[353];
  *(_QWORD *)(v60 + 2968) = v63[352];
  LODWORD(STACK[0x230C]) = STACK[0xD04];
  *(_QWORD *)(v60 + 2984) = v63[350];
  LODWORD(STACK[0x231C]) = STACK[0xCF4];
  *(_QWORD *)(v60 + 3000) = v63[348];
  *(_QWORD *)(v60 + 3008) = v63[347];
  *(_QWORD *)(v60 + 3016) = v63[346];
  LODWORD(STACK[0x233C]) = STACK[0xCD4];
  *(_QWORD *)(v60 + 3032) = v63[344];
  *(_QWORD *)(v60 + 3040) = v63[343];
  v68 = *(_QWORD *)(v60 + 3008);
  *(_QWORD *)(v60 + 3048) = v63[342];
  LODWORD(STACK[0x235C]) = STACK[0xCB4];
  *(_QWORD *)(v60 + 3064) = v63[340];
  *(_QWORD *)(v60 + 3072) = v63[339];
  *(_QWORD *)(v60 + 3080) = v63[338];
  *(_QWORD *)(v60 + 3088) = v63[337];
  LODWORD(STACK[0x2384]) = STACK[0xC8C];
  *(_QWORD *)(v60 + 3104) = v63[335];
  LODWORD(STACK[0x2390]) = STACK[0xC7C];
  *(_BYTE *)(v60 + 3119) = v68 == 0;
  *(_QWORD *)(v60 + 3120) = v68 + 12;
  *(_QWORD *)(v60 + 3128) = v68 + 8;
  v63[356] = v67;
  v63[357] = v66;
  v63[649] = v67;
  v63[650] = v66;
  v61[15] = &a58;
  v61[16] = v67;
  v61[17] = v66;
  *v59 = 0;
  LODWORD(STACK[0x1664]) = 1718210905;
  return ((uint64_t (*)(void))(*(_QWORD *)(v62
                                        + 8 * ((2662 * ((*(_BYTE *)(v60 + 3119) & 1) == 0)) ^ ((int)v65 - 214014224)))
                            - ((v65 - 214014224) ^ 0x204)))();
}

uint64_t sub_1A2761AA4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v3 = **(unsigned int **)(v1 + 3120);
  LODWORD(STACK[0x2914]) = v3;
  v4 = (v3 ^ 0xFD8FBA8E7F5F36FELL)
     + 0x270457229228964
     + ((2 * v3) & ((v0 - 1619001870) & 0xE3BBC4F1 ^ 0x7D85A90CLL));
  v5 = (**(unsigned int **)(v1 + 3128) ^ 0x6DF7FEF70FAFFFFFLL)
     - 0x6DF7FEF6672E3FA1
     + ((2 * **(_DWORD **)(v1 + 3128)) & 0x1F5FFFFE);
  v6 = v4 < 0xA881C05E;
  v7 = v4 > v5;
  if (v6 != v5 < 0xA881C05E)
    v7 = v6;
  LODWORD(STACK[0x1664]) = 1718210905;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v7 ^ v0 ^ 1)) - 8))();
}

uint64_t sub_1A2761B94()
{
  char v0;
  int v1;
  _BYTE *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  uint64_t (*v14)(void);

  v7 = (v1 + 37257748) | 0x810340D0;
  v8 = **(_QWORD **)(v4 + 3008);
  v9 = ((2 * LODWORD(STACK[0x2914])) & 0xE08D7FFE) + (LODWORD(STACK[0x2914]) ^ 0xF046BFFF);
  v10 = *(unsigned __int8 *)(v8 + v9 + (v7 ^ 0x8C8284F1));
  v9 += 263798786;
  v11 = *(unsigned __int8 *)(v8 + v9 + 1);
  v12 = (((*(unsigned __int8 *)(v8 + v9) - ((2 * *(unsigned __int8 *)(v8 + v9)) & 0x13A)) << 16) - 1902313472) ^ 0x8E9D0000 | (((v10 - ((2 * v10) & 0x16)) << 24) - 1962934272) ^ 0x8B000000 | (((v11 + 3338208 - ((2 * v11) & 0xBBBBBBBB)) << 8) - 768) ^ 0x32EFDD00;
  LODWORD(v8) = *(unsigned __int8 *)(v8 + v9 + 2);
  v13 = ((v8 - 285719737 - ((2 * v8) & 0x8E)) ^ 0xE7A74194) & ~v12 | v12 & 0xF6A0FD00;
  **(_DWORD **)(v5 + 120) = (((v13 ^ 0x7F619929) - 1972886616) ^ ((v13 ^ 0x5B2A7D6C) - 1373386781) ^ ((v13 ^ 0x2D14E696) - 669164519))
                          + 1779679125;
  **(_DWORD **)(v4 + 3120) += 4;
  *v2 = v0;
  LODWORD(STACK[0x1664]) = v3;
  LODWORD(STACK[0x2918]) = STACK[0x1664];
  *(_BYTE *)(v5 + 159) = *v2;
  LODWORD(STACK[0xBC4]) = STACK[0x2390];
  v6[312] = *(_QWORD *)(v4 + 3104);
  LODWORD(STACK[0xBD4]) = STACK[0x2384];
  v6[314] = *(_QWORD *)(v4 + 3088);
  v6[315] = *(_QWORD *)(v4 + 3080);
  v6[316] = *(_QWORD *)(v4 + 3072);
  v6[317] = *(_QWORD *)(v4 + 3064);
  LODWORD(STACK[0xBFC]) = STACK[0x235C];
  v6[319] = *(_QWORD *)(v4 + 3048);
  v6[320] = *(_QWORD *)(v4 + 3040);
  v6[321] = *(_QWORD *)(v4 + 3032);
  LODWORD(STACK[0xC1C]) = STACK[0x233C];
  v6[323] = *(_QWORD *)(v4 + 3016);
  v6[324] = *(_QWORD *)(v4 + 3008);
  v6[325] = *(_QWORD *)(v4 + 3000);
  LODWORD(STACK[0xC3C]) = STACK[0x231C];
  v6[327] = *(_QWORD *)(v4 + 2984);
  LODWORD(STACK[0xC4C]) = STACK[0x230C];
  v6[329] = *(_QWORD *)(v4 + 2968);
  v6[330] = *(_QWORD *)(v4 + 2960);
  v6[331] = *(_QWORD *)(v4 + 2952);
  v6[332] = *(_QWORD *)(v4 + 2944);
  v14 = *(uint64_t (**)(void))(v5 + 136);
  v6[333] = *(_QWORD *)(v5 + 128);
  LODWORD(STACK[0xC78]) = STACK[0x2918];
  return v14();
}

uint64_t sub_1A2761E10(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  int v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(void);

  v9[358] = v6[368];
  v9[359] = v6[369];
  v9[360] = v6[370];
  v9[361] = v6[371];
  LODWORD(STACK[0xD5C]) = STACK[0x230C];
  v9[363] = v6[373];
  v9[364] = v6[375];
  v9[365] = v6[376];
  v9[366] = v6[377];
  LODWORD(STACK[0xD84]) = STACK[0x233C];
  v9[368] = v6[379];
  v9[369] = v6[380];
  v9[370] = v6[381];
  v9[371] = *(_QWORD *)(v7 + 128);
  LODWORD(STACK[0xDAC]) = STACK[0x235C];
  v9[373] = v6[383];
  v9[374] = v6[384];
  v9[375] = v6[385];
  v9[376] = v6[386];
  LODWORD(STACK[0xDD4]) = STACK[0x2384];
  v9[378] = v6[388];
  LODWORD(STACK[0xDE0]) = STACK[0x2390];
  v10 = (uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v3 & ~*(unsigned __int8 *)(v7 + 159)) * a3) ^ (v4 + v5 + 463)))
                          - 12);
  LODWORD(STACK[0xDE4]) = STACK[0x2918];
  return v10();
}

uint64_t sub_1A2761EF0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59)
{
  int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  _QWORD *v64;
  int v65;

  LODWORD(STACK[0x23A8]) = a59;
  v64[358] = *(_QWORD *)(v60 + 2944);
  v64[359] = *(_QWORD *)(v60 + 2952);
  v64[360] = *(_QWORD *)(v60 + 2960);
  v64[361] = *(_QWORD *)(v60 + 2968);
  LODWORD(STACK[0xD5C]) = STACK[0x230C];
  v64[363] = *(_QWORD *)(v60 + 2984);
  v64[364] = *(_QWORD *)(v60 + 3000);
  v64[365] = 0;
  v64[366] = *(_QWORD *)(v60 + 3016);
  LODWORD(STACK[0xD84]) = STACK[0x233C];
  v64[368] = *(_QWORD *)(v60 + 3032);
  v64[369] = *(_QWORD *)(v60 + 3040);
  v64[370] = *(_QWORD *)(v60 + 3048);
  v64[371] = *(_QWORD *)(v61 + 128);
  LODWORD(STACK[0xDAC]) = STACK[0x235C];
  v64[373] = *(_QWORD *)(v60 + 3064);
  v64[374] = *(_QWORD *)(v60 + 3072);
  v64[375] = *(_QWORD *)(v60 + 3080);
  v64[376] = *(_QWORD *)(v60 + 3088);
  LODWORD(STACK[0xDD4]) = STACK[0x2384];
  v64[378] = *(_QWORD *)(v60 + 3104);
  LODWORD(STACK[0xDE0]) = STACK[0x2390];
  v65 = ((v59 & ~*(unsigned __int8 *)(v60 + 3119)) * (((v62 ^ a4) + 69) ^ a5)) ^ v62;
  LODWORD(STACK[0xDE4]) = 1718210905;
  return (*(uint64_t (**)(void))(v63 + 8 * v65))();
}

uint64_t sub_1A2761FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  _BOOL4 v67;
  _BOOL4 v68;

  v62 = **(unsigned int **)(v57 + 3120);
  LODWORD(STACK[0x23AC]) = v62;
  *(_QWORD *)(v57 + 3144) = v62;
  v63 = LODWORD(STACK[0x23A8]);
  v64 = **(unsigned int **)(v57 + 3128);
  LODWORD(STACK[0xDE8]) = 1718210905;
  v65 = ((v55 - 1325) ^ (7 * (v55 ^ a5)) ^ v61)
      + (v62 ^ a6)
      + ((2 * (_DWORD)v62) & a7)
      + v63
      + ((unint64_t)(v63 < v56) << 32);
  LODWORD(STACK[0xDEC]) = STACK[0x2390];
  v66 = (v64 ^ a8) + v58 + (v60 & (2 * v64));
  v67 = v65 < 0x6CF80689;
  v59[381] = *(_QWORD *)(v57 + 3104);
  LODWORD(STACK[0xDFC]) = STACK[0x2384];
  v68 = v65 > v66;
  if (v67 != v66 < 0x6CF80689)
    v68 = v67;
  v59[383] = *(_QWORD *)(v57 + 3088);
  v59[384] = *(_QWORD *)(v57 + 3080);
  v59[385] = *(_QWORD *)(v57 + 3072);
  v59[386] = *(_QWORD *)(v57 + 3064);
  LODWORD(STACK[0xE24]) = STACK[0x235C];
  v59[388] = STACK[0x2900];
  v59[389] = *(_QWORD *)(v57 + 3048);
  v59[390] = *(_QWORD *)(v57 + 3040);
  v59[391] = *(_QWORD *)(v57 + 3032);
  LODWORD(STACK[0xE4C]) = STACK[0x233C];
  v59[393] = *(_QWORD *)(v57 + 3016);
  v59[394] = *(_QWORD *)(v57 + 3008);
  v59[395] = *(_QWORD *)(v57 + 3000);
  v59[396] = *(_QWORD *)(v57 + 2984);
  LODWORD(STACK[0xE74]) = STACK[0x230C];
  v59[398] = *(_QWORD *)(v57 + 2968);
  v59[399] = *(_QWORD *)(v57 + 2960);
  v59[400] = *(_QWORD *)(v57 + 2952);
  v59[401] = *(_QWORD *)(v57 + 2944);
  return ((uint64_t (*)(void))(*(_QWORD *)(a55 + 8 * ((127 * v68) ^ v55)) - 4))();
}

void sub_1A2762154()
{
  int v0;
  uint64_t v1;
  int v2;

  **(_DWORD **)(v1 + 3120) = LODWORD(STACK[0x23A8]) - 1718253555 + LODWORD(STACK[0x23AC]) + (v2 ^ (4 * v0)) - 524;
  JUMPOUT(0x1A2761A48);
}

uint64_t sub_1A27621B0()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  uint64_t (*v6)(void);

  v4[358] = v1[368];
  v4[359] = v1[369];
  v4[360] = v1[370];
  v4[361] = v1[371];
  LODWORD(STACK[0xD5C]) = STACK[0x230C];
  v4[363] = v1[373];
  v4[364] = v1[375];
  v4[365] = v1[376];
  v4[366] = v1[377];
  LODWORD(STACK[0xD84]) = STACK[0x233C];
  v4[368] = v1[379];
  v4[369] = v1[380];
  v4[370] = v1[381];
  v4[371] = *(_QWORD *)(v2 + 128);
  LODWORD(STACK[0xDAC]) = STACK[0x235C];
  v4[373] = v1[383];
  v4[374] = v1[384];
  v4[375] = v1[385];
  v4[376] = v1[386];
  LODWORD(STACK[0xDD4]) = STACK[0x2384];
  v4[378] = v1[388];
  LODWORD(STACK[0xDE0]) = STACK[0x2390];
  v6 = (uint64_t (*)(void))(*(_QWORD *)(v3
                                     + 8
                                     * ((*(unsigned __int8 *)(v2 + 159)
                                       * (v0 - v5 + 887 + ((v0 + 2093235056) | 0x602) - 1109)) ^ (v0 + 2093235848)))
                         - 12);
  LODWORD(STACK[0xDE4]) = STACK[0x2918];
  return v6();
}

uint64_t sub_1A27622AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t (*a31)(void),uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59)
{
  _QWORD *v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t (*v65)(void);

  v59[394] = (a59 - 1718253555);
  v64 = a31();
  v59[395] = v64;
  *a22 = v64;
  v63[358] = v59[368];
  v63[359] = v59[369];
  v63[360] = v59[370];
  v63[361] = v59[371];
  LODWORD(STACK[0xD5C]) = STACK[0x230C];
  v63[363] = v59[373];
  v63[364] = v59[375];
  v63[365] = v59[376];
  v63[366] = v59[377];
  LODWORD(STACK[0xD84]) = STACK[0x233C];
  v63[368] = v59[379];
  v63[369] = v59[380];
  v63[370] = v59[381];
  v63[371] = *(_QWORD *)(v60 + 128);
  LODWORD(STACK[0xDAC]) = STACK[0x235C];
  v63[373] = v59[383];
  v63[374] = v59[384];
  v63[375] = v59[385];
  v63[376] = v59[386];
  LODWORD(STACK[0xDD4]) = STACK[0x2384];
  v63[378] = v59[388];
  LODWORD(STACK[0xDE0]) = STACK[0x2390];
  v65 = (uint64_t (*)(void))(*(_QWORD *)(v62 + 8 * (((v64 != 0) * (((v61 - 760) | 0x10) + 1714)) ^ v61))
                          - (((v61 - 790) | 0x600u) ^ 0x66ELL));
  LODWORD(STACK[0xDE4]) = 1718210903;
  return v65();
}

uint64_t sub_1A27623E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (v8 + 2182);
  v12 = v6[369];
  v13 = v6[394] - 0x5D906247D5C6FBD8 + v11 - ((2 * v6[394]) & 0x54720850) - 2326;
  v14 = *(_QWORD *)(v9 + 8 * v8) - 8;
  v6[39] = v6[368];
  v6[40] = v12;
  v15 = v6[371];
  v6[41] = v6[370];
  v6[42] = v15;
  LODWORD(STACK[0x18C4]) = STACK[0x230C];
  v6[44] = v6[373];
  LODWORD(STACK[0x18D4]) = STACK[0x231C];
  v16 = v6[376];
  v6[46] = v6[375];
  v6[47] = v16;
  v6[48] = v6[377];
  LODWORD(STACK[0x18F4]) = STACK[0x233C];
  v17 = v6[380];
  v6[50] = v6[379];
  v6[51] = v17;
  v18 = v7[16];
  v6[52] = v6[381];
  v6[53] = v18;
  LODWORD(STACK[0x191C]) = STACK[0x235C];
  v19 = v6[383];
  v6[55] = v14;
  v6[56] = v19;
  v20 = v6[385];
  v6[57] = v6[384];
  v6[58] = v20;
  v6[59] = v6[386];
  LODWORD(STACK[0x194C]) = STACK[0x2384];
  v6[61] = v6[388];
  LODWORD(STACK[0x195C]) = STACK[0x2390];
  v6[63] = v6[395];
  v6[64] = 0x10067F75D0A830F1;
  v6[65] = v7[16];
  v6[66] = v13;
  v21 = v6[65];
  v7[45] = v6[66];
  v7[46] = v21;
  v22 = v6[63];
  v7[47] = v6[64];
  v7[48] = v22;
  LODWORD(STACK[0x2A0C]) = STACK[0x195C];
  v7[50] = v6[61];
  LODWORD(STACK[0x2A1C]) = STACK[0x194C];
  v23 = v6[58];
  v7[52] = v6[59];
  v7[53] = v23;
  v24 = v6[56];
  v25 = v6[55];
  v7[54] = v6[57];
  v7[55] = v24;
  LODWORD(STACK[0x2A44]) = STACK[0x191C];
  v26 = v6[52];
  v7[57] = v6[53];
  v7[58] = v26;
  v27 = v6[50];
  v7[59] = v6[51];
  v7[60] = v27;
  LODWORD(STACK[0x2A6C]) = STACK[0x18F4];
  v28 = v6[47];
  v29 = v6[46];
  v7[62] = v6[48];
  v7[63] = v28;
  v7[64] = v29;
  *(_DWORD *)(v10 - 244) = STACK[0x18D4];
  v7[66] = v6[44];
  *(_DWORD *)(v10 - 228) = STACK[0x18C4];
  v30 = v6[41];
  v7[68] = v6[42];
  v7[69] = v30;
  LODWORD(v24) = v7[46] <= (unint64_t)(v7[48] + v7[47] - 0x10067F75D0A830F1);
  v31 = v6[39];
  v7[70] = v6[40];
  v7[71] = v31;
  v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * (int)((v24 * (3 * (v11 ^ 0x8B1) - 1234)) ^ v11))
                                                                                              - (v11 ^ 0xDE3)
                                                                                              + 1261);
  v7[72] = v25;
  return v32(a1, a2, a3, a4, a5, a6, 2201732335);
}

uint64_t sub_1A2762508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _QWORD *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _DWORD *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59,uint64_t a60,int a61,int a62)
{
  int v62;
  _QWORD *v63;
  int v64;
  _QWORD *v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  int v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(void);

  *a20 = a59 - 1718253555;
  v68 = (v64 + v62 + 747) | 0x200;
  *a13 = a62 + (v68 ^ 0x99958E6F);
  v65[358] = v63[71];
  v65[359] = v63[70];
  v65[360] = v63[69];
  v65[361] = v63[68];
  LODWORD(STACK[0xD5C]) = *(_DWORD *)(v66 - 228);
  v65[363] = v63[66];
  v65[364] = v63[64];
  v69 = v63[62];
  v65[365] = v63[63];
  v65[366] = v69;
  LODWORD(STACK[0xD84]) = STACK[0x2A6C];
  v70 = v63[59];
  v65[368] = v63[60];
  v65[369] = v70;
  v71 = v63[57];
  v65[370] = v63[58];
  v65[371] = v71;
  LODWORD(STACK[0xDAC]) = STACK[0x2A44];
  v72 = v63[54];
  v65[373] = v63[55];
  v65[374] = v72;
  v73 = v63[52];
  v65[375] = v63[53];
  v65[376] = v73;
  LODWORD(STACK[0xDD4]) = STACK[0x2A1C];
  v65[378] = v63[50];
  LODWORD(STACK[0xDE0]) = STACK[0x2A0C];
  LODWORD(STACK[0xDE4]) = v67;
  v74 = STACK[0xDE4];
  v75 = STACK[0xDE0];
  v76 = v65[378];
  v77 = STACK[0xDD4];
  v78 = v65[376];
  v79 = v65[375];
  v80 = v65[374];
  v81 = v65[373];
  v82 = STACK[0xDAC];
  v83 = v65[371];
  v84 = v65[370];
  v85 = v65[369];
  v86 = v65[368];
  v87 = STACK[0xD84];
  v88 = v65[366];
  v89 = v65[365];
  v90 = v65[364];
  v91 = v65[363];
  v92 = STACK[0xD5C];
  v93 = v65[361];
  v94 = v65[360];
  v95 = v65[359];
  v96 = v65[358];
  LODWORD(STACK[0xDE8]) = STACK[0xDE4];
  LODWORD(STACK[0xDEC]) = v75;
  v65[381] = v76;
  LODWORD(STACK[0xDFC]) = v77;
  v65[383] = v78;
  v65[384] = v79;
  v65[385] = v80;
  v65[386] = v81;
  LODWORD(STACK[0xE24]) = v82;
  v65[388] = v83;
  v65[389] = v84;
  v65[390] = v85;
  v65[391] = v86;
  LODWORD(STACK[0xE4C]) = v87;
  v65[393] = v88;
  v65[394] = v89;
  v65[395] = v90;
  v65[396] = v91;
  LODWORD(STACK[0xE74]) = v92;
  v65[398] = v93;
  v65[399] = v94;
  v65[400] = v95;
  v65[401] = v96;
  v65[402] = v96;
  v65[403] = v95;
  v65[404] = v94;
  v65[405] = v93;
  LODWORD(STACK[0xEBC]) = v92;
  v65[407] = v91;
  LODWORD(STACK[0xECC]) = v74;
  v65[409] = v90;
  v65[410] = v88;
  LODWORD(STACK[0xEE4]) = v87;
  v65[412] = v86;
  v65[413] = v85;
  v65[414] = v84;
  v65[415] = v83;
  LODWORD(STACK[0xF0C]) = v82;
  v65[417] = v81;
  v65[418] = v80;
  v65[419] = v79;
  v65[420] = v78;
  LODWORD(STACK[0xF34]) = v77;
  v65[422] = v76;
  v97 = (uint64_t (*)(void))(*(_QWORD *)(a55 + 8 * ((4022 * (v89 == 0)) ^ v68))
                          - ((v68 - 2093236594) ^ 0x833BC429)
                          + 213);
  LODWORD(STACK[0xF40]) = v75;
  return v97();
}

void sub_1A276273C(int a1@<W8>)
{
  unint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;

  v4 = v3[400];
  v5 = v3[399];
  v6 = v3[398];
  v7 = STACK[0xE74];
  v8 = v3[396];
  v9 = v3[395];
  v10 = v3[394];
  v11 = v3[393];
  v12 = STACK[0xE4C];
  v13 = v3[391];
  v14 = v3[390];
  v15 = v3[389];
  v16 = v3[388];
  v17 = STACK[0xE24];
  v18 = v3[386];
  v19 = v3[385];
  v20 = v3[384];
  v21 = v3[383];
  v22 = STACK[0xDFC];
  v23 = v3[381];
  v24 = v2;
  v25 = STACK[0xDEC];
  v26 = *(_QWORD *)(v24 + 8 * a1);
  LODWORD(v24) = STACK[0xDE8];
  STACK[0x1668] = v3[401];
  STACK[0x1670] = v4;
  STACK[0x1678] = v5;
  STACK[0x1680] = v6;
  LODWORD(STACK[0x168C]) = v7;
  STACK[0x1690] = v26;
  STACK[0x1698] = v8;
  LODWORD(STACK[0x16A4]) = v24;
  STACK[0x16A8] = v9;
  STACK[0x16B0] = v11;
  LODWORD(STACK[0x16BC]) = v12;
  STACK[0x16C0] = v13;
  STACK[0x16C8] = v14;
  STACK[0x16D0] = v15;
  STACK[0x16D8] = v16;
  LODWORD(STACK[0x16E4]) = v17;
  STACK[0x16E8] = v18;
  STACK[0x16F0] = v19;
  STACK[0x16F8] = v20;
  STACK[0x1700] = v21;
  LODWORD(STACK[0x170C]) = v22;
  STACK[0x1710] = v23;
  LODWORD(STACK[0x171C]) = v25;
  STACK[0x1720] = v10;
  LODWORD(v26) = STACK[0x171C];
  v27 = STACK[0x1710];
  v28 = STACK[0x170C];
  v29 = STACK[0x1700];
  v30 = STACK[0x16F8];
  v31 = STACK[0x16F0];
  v32 = STACK[0x16E8];
  LODWORD(v8) = STACK[0x16E4];
  v33 = STACK[0x16D8];
  v34 = STACK[0x16D0];
  v35 = STACK[0x16C8];
  v36 = STACK[0x16C0];
  LODWORD(v14) = STACK[0x16BC];
  v37 = STACK[0x16B0];
  v38 = STACK[0x16A8];
  v39 = STACK[0x16A4];
  v40 = STACK[0x1698];
  LODWORD(v20) = STACK[0x168C];
  v41 = STACK[0x1680];
  v42 = STACK[0x1678];
  v43 = STACK[0x1670];
  v44 = STACK[0x1668];
  STACK[0x1728] = STACK[0x1690];
  STACK[0x1730] = v10;
  LODWORD(STACK[0x173C]) = v26;
  STACK[0x1740] = v27;
  LODWORD(STACK[0x174C]) = v28;
  STACK[0x1750] = v29;
  STACK[0x1758] = v30;
  STACK[0x1760] = v31;
  *v1 = v32;
  LODWORD(STACK[0x1774]) = v8;
  v1[2] = v33;
  v1[3] = v34;
  v1[4] = v35;
  v1[5] = v36;
  LODWORD(STACK[0x179C]) = v14;
  v1[7] = v37;
  v1[8] = v38;
  LODWORD(STACK[0x17B4]) = v39;
  v1[10] = v40;
  LODWORD(STACK[0x17C4]) = v20;
  v1[12] = v41;
  v1[13] = v42;
  v1[14] = v43;
  v1[15] = v44;
  JUMPOUT(0x1A2762AB0);
}

uint64_t sub_1A2762B74()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  v6 = STACK[0x1174];
  LODWORD(STACK[0x2614]) = STACK[0x1170];
  v1[470] = v4[492];
  LODWORD(STACK[0x2624]) = STACK[0x1164];
  v1[472] = v4[490];
  v1[473] = v4[489];
  v1[474] = v4[488];
  v1[475] = v4[487];
  LODWORD(STACK[0x264C]) = STACK[0x113C];
  v1[477] = v4[485];
  v1[478] = v4[484];
  v1[479] = v4[483];
  v1[480] = v4[482];
  LODWORD(STACK[0x2674]) = STACK[0x1114];
  v1[482] = v4[480];
  v1[483] = v4[479];
  v1[484] = v4[478];
  v7 = STACK[0x10F4];
  LODWORD(STACK[0x2694]) = STACK[0x10F4];
  v8 = v4[476];
  v1[486] = v8;
  v9 = STACK[0x10E4];
  LODWORD(STACK[0x26A4]) = STACK[0x10E4];
  v10 = v4[474];
  v1[488] = v10;
  v11 = v4[473];
  v1[489] = v11;
  v12 = v4[472];
  v1[490] = v12;
  v13 = v4[471];
  v1[491] = v13;
  v4[494] = v13;
  v4[495] = v12;
  v4[496] = v11;
  v4[497] = v10;
  LODWORD(STACK[0x119C]) = v9;
  v4[499] = v8;
  LODWORD(STACK[0x11AC]) = v7;
  v4[501] = v1[484];
  v4[502] = v1[483];
  v4[503] = v1[482];
  LODWORD(STACK[0x11CC]) = STACK[0x2674];
  v4[505] = v1[480];
  v4[506] = v1[479];
  v4[507] = v1[478];
  v4[508] = v1[477];
  LODWORD(STACK[0x11F4]) = STACK[0x264C];
  v4[510] = v1[475];
  v4[511] = v1[474];
  v4[512] = v1[473];
  v4[513] = v1[472];
  LODWORD(STACK[0x121C]) = STACK[0x2624];
  v4[515] = v1[470];
  LODWORD(STACK[0x1228]) = STACK[0x2614];
  v14 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((56 * (v6 == v5)) ^ (v2 + v0 + 103)))
                          - ((v0 + 1943774991) & 0x8E895DE)
                          + 474);
  LODWORD(STACK[0x122C]) = v6;
  return v14();
}

#error "1A2763294: call analysis failed (funcsize=332)"

uint64_t sub_1A276329C@<X0>(int a1@<W8>)
{
  unint64_t v1;
  unint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 4296) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v3 + a1 + 1562) | (104 * (v1 > v2)))) - 4))();
}

uint64_t sub_1A27632C8@<X0>(int a1@<W6>, int a2@<W8>)
{
  int v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  unsigned __int8 *v6;
  int v7;
  int v8;
  int v9;

  v7 = a2 ^ (a1 - 807);
  v8 = v2 + 769;
  v5[561] = v3[510];
  v5[562] = v3[509];
  v5[563] = v3[508];
  v5[564] = v3[507];
  LODWORD(STACK[0x13B4]) = STACK[0x273C];
  v5[566] = v3[505];
  LODWORD(STACK[0x13C4]) = STACK[0x272C];
  v5[568] = v3[511];
  v5[569] = v3[503];
  v5[570] = v3[502];
  LODWORD(STACK[0x13E4]) = STACK[0x2714];
  v5[572] = v3[500];
  v5[573] = v3[499];
  v5[574] = v3[498];
  v5[575] = v3[497];
  LODWORD(STACK[0x140C]) = STACK[0x26EC];
  v5[577] = v3[495];
  v5[578] = v3[492];
  v5[579] = v3[512];
  v5[580] = *(_QWORD *)(v6 + 1);
  LODWORD(STACK[0x1434]) = 1718210905;
  v5[582] = v3[494];
  LODWORD(STACK[0x1440]) = STACK[0x26D4];
  v9 = *v6 * (v7 ^ 0x5FE);
  LODWORD(STACK[0x1444]) = 1718210905;
  return (*(uint64_t (**)(void))(v4 + 8 * (v9 ^ v8)))();
}

uint64_t sub_1A27633B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t (*a31)(_QWORD, uint64_t),uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  _QWORD *v55;
  int v56;
  int v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(void);

  v60 = a31(*(_QWORD *)(v59 + 1), 2241923698);
  *(_QWORD *)(v59 + 9) = v60;
  v58[538] = v55[510];
  v58[539] = v55[509];
  v58[540] = v55[508];
  v58[541] = v55[507];
  LODWORD(STACK[0x12FC]) = STACK[0x273C];
  v58[543] = v55[505];
  LODWORD(STACK[0x130C]) = STACK[0x272C];
  v58[545] = v55[511];
  v58[546] = v55[503];
  v58[547] = v55[502];
  LODWORD(STACK[0x132C]) = STACK[0x2714];
  v58[549] = v55[500];
  v58[550] = v55[499];
  v58[551] = v55[498];
  v58[552] = v55[497];
  LODWORD(STACK[0x1354]) = STACK[0x26EC];
  v58[554] = v55[495];
  v58[555] = v55[492];
  v58[556] = v55[512];
  v58[557] = *(_QWORD *)(v59 + 1);
  LODWORD(STACK[0x137C]) = v57;
  v58[559] = 0;
  LODWORD(STACK[0x1388]) = STACK[0x26D4];
  v61 = (uint64_t (*)(void))(*(_QWORD *)(a55 + 8 * ((v60 == 0) ^ v56)) - (((v56 - 1216) | 0x400u) - 1021) + 119);
  LODWORD(STACK[0x138C]) = 1718210903;
  return v61();
}

uint64_t sub_1A27634BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = **(_QWORD **)(v6 + 3936);
  v13 = (**(unsigned int **)(v6 + 4096) ^ 0xFC21779CBED7FFEALL)
      + 0x3BFEFF7FE37DF840
      + (((unint64_t)**(unsigned int **)(v6 + 4096) << ((2 * v8) ^ 0xF7u)) & 0x17DAFFFD4);
  v14 = (v13 ^ 0x99055D3A198BA795) & (2 * (v13 & 0x35DAA07D6)) ^ v13 & 0x35DAA07D6;
  v15 = *(_QWORD *)(v6 + 4072);
  v16 = ((2 * (v13 ^ 0x99055D3820CFAC9DLL)) ^ 0xA1252A26FACB5696) & (v13 ^ 0x99055D3820CFAC9DLL) ^ (2 * (v13 ^ 0x99055D3820CFAC9DLL)) & 0x5EDAD5DB7D65AB4ALL;
  *(_QWORD *)(v6 + 312) = *(_QWORD *)(v6 + 4080);
  *(_QWORD *)(v6 + 320) = v15;
  v17 = (v16 ^ 0x1278400200) & (4 * v14) ^ v14;
  v18 = *(_QWORD *)(v6 + 4056);
  *(_QWORD *)(v6 + 328) = *(_QWORD *)(v6 + 4064);
  *(_QWORD *)(v6 + 336) = v18;
  LODWORD(STACK[0x18C4]) = STACK[0x273C];
  *(_QWORD *)(v6 + 352) = *(_QWORD *)(v6 + 4040);
  v19 = ((4 * (v16 ^ 0x424A54490524A949)) ^ 0x7B6B576DF596AD2CLL) & (v16 ^ 0x424A54490524A949) ^ (4 * (v16 ^ 0x424A54490524A949)) & 0x5EDAD5DB7D65AB48;
  LODWORD(STACK[0x18D4]) = STACK[0x272C];
  v20 = *(_QWORD *)(v6 + 4024);
  v21 = (v19 ^ 0x5A4A55497504A900) & (16 * v17) ^ v17;
  *(_QWORD *)(v6 + 368) = *(_QWORD *)(v6 + 4088);
  *(_QWORD *)(v6 + 376) = v20;
  *(_QWORD *)(v6 + 384) = *(_QWORD *)(v6 + 4016);
  LODWORD(STACK[0x18F4]) = STACK[0x2714];
  v22 = ((16 * (v19 ^ 0x490809208610243)) ^ 0xEDAD5DB7D65AB4B0) & (v19 ^ 0x490809208610243) ^ (16 * (v19 ^ 0x490809208610243)) & 0x5EDAD5DB7D65AB40;
  v23 = *(_QWORD *)(v6 + 3992);
  *(_QWORD *)(v6 + 400) = *(_QWORD *)(v6 + 4000);
  *(_QWORD *)(v6 + 408) = v23;
  v24 = *(_QWORD *)(v6 + 3976);
  *(_QWORD *)(v6 + 416) = *(_QWORD *)(v6 + 3984);
  *(_QWORD *)(v6 + 424) = v24;
  v25 = *(_QWORD *)(v9 + 8 * v8);
  LODWORD(STACK[0x191C]) = STACK[0x26EC];
  v26 = (((v22 ^ 0x1252804829250B4BLL) << 8) ^ 0xDAD5DB7D65AB4B00) & (v22 ^ 0x1252804829250B4BLL) ^ ((v22 ^ 0x1252804829250B4BLL) << 8) & 0x5EDAD5DB7D65AB00;
  v27 = *(_QWORD *)(v6 + 3960);
  *(_QWORD *)(v6 + 440) = v25 - 12;
  *(_QWORD *)(v6 + 448) = v27;
  v28 = v26 & 0x5541294100000000 ^ (v22 ^ 0x4C8855935440A000) & (v21 << 8) ^ v21 ^ (v26 ^ 0x5AD0D15965210000) & (((v22 ^ 0x4C8855935440A000) & (v21 << 8) ^ v21) << 16);
  v29 = *(_QWORD *)(v6 + 4096);
  v30 = v13 ^ (2 * v28) ^ 0xC53017D9779303FELL;
  *(_QWORD *)(v6 + 456) = *(_QWORD *)(v6 + 3936);
  *(_QWORD *)(v6 + 464) = v29;
  *(_QWORD *)(v6 + 472) = *(_QWORD *)(v10 + 1);
  LODWORD(STACK[0x194C]) = 1718253555;
  v31 = *(_QWORD *)(v10 + 9);
  *(_QWORD *)(v6 + 488) = v31;
  LODWORD(STACK[0x195C]) = STACK[0x26D4];
  *(_QWORD *)(v6 + 504) = v31;
  *(_QWORD *)(v6 + 512) = 0x10067F75D0A830F1;
  *(_QWORD *)(v6 + 520) = v12;
  *(_QWORD *)(v6 + 528) = v30;
  v32 = *(_QWORD *)(v6 + 520);
  v7[45] = *(_QWORD *)(v6 + 528);
  v7[46] = v32;
  v33 = *(_QWORD *)(v6 + 504);
  v7[47] = *(_QWORD *)(v6 + 512);
  v7[48] = v33;
  LODWORD(STACK[0x2A0C]) = STACK[0x195C];
  v7[50] = *(_QWORD *)(v6 + 488);
  LODWORD(STACK[0x2A1C]) = STACK[0x194C];
  v34 = *(_QWORD *)(v6 + 464);
  v7[52] = *(_QWORD *)(v6 + 472);
  v7[53] = v34;
  v35 = *(_QWORD *)(v6 + 448);
  v36 = *(_QWORD *)(v6 + 440);
  v7[54] = *(_QWORD *)(v6 + 456);
  v7[55] = v35;
  LODWORD(STACK[0x2A44]) = STACK[0x191C];
  v37 = *(_QWORD *)(v6 + 416);
  v7[57] = *(_QWORD *)(v6 + 424);
  v7[58] = v37;
  v38 = *(_QWORD *)(v6 + 400);
  v7[59] = *(_QWORD *)(v6 + 408);
  v7[60] = v38;
  LODWORD(STACK[0x2A6C]) = STACK[0x18F4];
  v39 = *(_QWORD *)(v6 + 376);
  v40 = *(_QWORD *)(v6 + 368);
  v7[62] = *(_QWORD *)(v6 + 384);
  v7[63] = v39;
  v7[64] = v40;
  *(_DWORD *)(v11 - 244) = STACK[0x18D4];
  v7[66] = *(_QWORD *)(v6 + 352);
  *(_DWORD *)(v11 - 228) = STACK[0x18C4];
  v41 = *(_QWORD *)(v6 + 328);
  v7[68] = *(_QWORD *)(v6 + 336);
  v7[69] = v41;
  LODWORD(v35) = v7[46] <= (unint64_t)(v7[48] + v7[47] - 0x10067F75D0A830F1);
  v42 = *(_QWORD *)(v6 + 312);
  v7[70] = *(_QWORD *)(v6 + 320);
  v7[71] = v42;
  v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * (int)((v35 * (3 * ((2 * v8) ^ 0x151) - 1234)) ^ (2 * v8) ^ 0x9E0))
                                                                                              - ((2 * v8) ^ 0x403u)
                                                                                              + 1261);
  v7[72] = v36;
  return v43(a1, a2, a3, a4, a5, a6, 2201732335);
}

void sub_1A27637C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,void (*a53)(_QWORD))
{
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  int v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v56 = *(_QWORD **)(v53 + 432);
  a53(*v56);
  *v56 = *(_QWORD *)(v53 + 400);
  v57 = *(_QWORD *)(v53 + 416);
  **(_DWORD **)(v53 + 424) = v57;
  v54[538] = *(_QWORD *)(v53 + 568);
  v54[539] = *(_QWORD *)(v53 + 560);
  v54[540] = *(_QWORD *)(v53 + 552);
  v54[541] = *(_QWORD *)(v53 + 544);
  LODWORD(STACK[0x12FC]) = *(_DWORD *)(v55 - 228);
  v54[543] = *(_QWORD *)(v53 + 528);
  LODWORD(STACK[0x130C]) = *(_DWORD *)(v55 - 244);
  v54[545] = *(_QWORD *)(v53 + 512);
  v58 = *(_QWORD *)(v53 + 496);
  v54[546] = *(_QWORD *)(v53 + 504);
  v54[547] = v58;
  LODWORD(STACK[0x132C]) = STACK[0x2A6C];
  v59 = *(_QWORD *)(v53 + 472);
  v54[549] = *(_QWORD *)(v53 + 480);
  v54[550] = v59;
  v60 = *(_QWORD *)(v53 + 456);
  v54[551] = *(_QWORD *)(v53 + 464);
  v54[552] = v60;
  LODWORD(STACK[0x1354]) = STACK[0x2A44];
  v54[554] = *(_QWORD *)(v53 + 440);
  v61 = *(_QWORD *)(v53 + 424);
  v54[555] = *(_QWORD *)(v53 + 432);
  v54[556] = v61;
  v54[557] = v57;
  v62 = STACK[0x2A1C];
  LODWORD(STACK[0x137C]) = STACK[0x2A1C];
  v54[559] = *(_QWORD *)(v53 + 400);
  LODWORD(STACK[0x1388]) = STACK[0x2A0C];
  LODWORD(STACK[0x138C]) = v62;
  v63 = STACK[0x138C];
  LODWORD(v61) = STACK[0x1388];
  v64 = v54[559];
  v65 = STACK[0x137C];
  v66 = v54[557];
  v67 = v54[556];
  v68 = v54[555];
  v69 = v54[554];
  v70 = STACK[0x1354];
  v71 = v54[552];
  v72 = v54[551];
  v73 = v54[550];
  v74 = v54[549];
  v75 = STACK[0x132C];
  v76 = v54[547];
  v77 = v54[546];
  v78 = v54[545];
  v79 = STACK[0x130C];
  v80 = v54[543];
  v81 = STACK[0x12FC];
  v82 = v54[541];
  v83 = v54[540];
  v84 = v54[539];
  v54[561] = v54[538];
  v54[562] = v84;
  v54[563] = v83;
  v54[564] = v82;
  LODWORD(STACK[0x13B4]) = v81;
  v54[566] = v80;
  LODWORD(STACK[0x13C4]) = v79;
  v54[568] = v78;
  v54[569] = v77;
  v54[570] = v76;
  LODWORD(STACK[0x13E4]) = v75;
  v54[572] = v74;
  v54[573] = v73;
  v54[574] = v72;
  v54[575] = v71;
  LODWORD(STACK[0x140C]) = v70;
  v54[577] = v69;
  v54[578] = v68;
  v54[579] = v67;
  v54[580] = v66;
  LODWORD(STACK[0x1434]) = v65;
  v54[582] = v64;
  LODWORD(STACK[0x1440]) = v61;
  LODWORD(STACK[0x1444]) = v63;
  JUMPOUT(0x1A2763958);
}

uint64_t sub_1A2763B68()
{
  int v0;
  uint64_t *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);

  v7 = STACK[0x1594];
  v8 = (v2 + v0 - 223);
  v9 = v2 + v0 + 1141;
  *(_QWORD *)(v5 + 201) = v4[624];
  LODWORD(STACK[0x2854]) = STACK[0x1584];
  *(_QWORD *)(v5 + 217) = v4[622];
  *(_QWORD *)(v5 + 225) = v4[621];
  *(_QWORD *)(v5 + 233) = v4[620];
  *(_QWORD *)(v5 + 241) = v4[619];
  LODWORD(STACK[0x287C]) = STACK[0x155C];
  v10 = v4[616];
  *v1 = v4[617];
  v1[1] = v10;
  v11 = v4[614];
  v1[2] = v4[615];
  v1[3] = v11;
  LODWORD(STACK[0x28A4]) = STACK[0x1534];
  v12 = v4[611];
  v1[5] = v4[612];
  v1[6] = v12;
  v1[7] = v4[610];
  v13 = STACK[0x1514];
  LODWORD(STACK[0x28C4]) = STACK[0x1514];
  v14 = v4[608];
  v1[9] = v14;
  v15 = STACK[0x1504];
  LODWORD(STACK[0x28D4]) = STACK[0x1504];
  v16 = v4[606];
  v17 = v4[605];
  v1[11] = v16;
  v1[12] = v17;
  v18 = v4[604];
  v19 = v4[603];
  v1[13] = v18;
  v1[14] = v19;
  v4[626] = v19;
  v4[627] = v18;
  v4[628] = v17;
  v4[629] = v16;
  LODWORD(STACK[0x15BC]) = v15;
  v4[631] = v14;
  LODWORD(STACK[0x15CC]) = v13;
  v4[633] = v1[7];
  v20 = v1[5];
  v4[634] = v1[6];
  v4[635] = v20;
  LODWORD(STACK[0x15EC]) = STACK[0x28A4];
  v21 = v1[2];
  v4[637] = v1[3];
  v4[638] = v21;
  v22 = *v1;
  v4[639] = v1[1];
  v4[640] = v22;
  LODWORD(STACK[0x1614]) = STACK[0x287C];
  v4[642] = *(_QWORD *)(v5 + 241);
  v4[643] = *(_QWORD *)(v5 + 233);
  v4[644] = *(_QWORD *)(v5 + 225);
  v4[645] = *(_QWORD *)(v5 + 217);
  LODWORD(STACK[0x163C]) = STACK[0x2854];
  v4[647] = *(_QWORD *)(v5 + 201);
  LODWORD(STACK[0x1648]) = v7;
  v23 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v9 | (2 * (v7 != v6)))) - v8 + 140);
  LODWORD(STACK[0x164C]) = v7;
  return v23();
}

void sub_1A2763CC0()
{
  int v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _DWORD *v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = *(_DWORD **)(v4 + 241);
  v7 = STACK[0x28A4];
  v8 = STACK[0x28A4];
  v9 = (v7 ^ 0x31BB8E28) & (2 * (v7 & 0xB9BBACB2)) ^ v7 & 0xB9BBACB2;
  v10 = (((v7 ^ 0x71BADE0C) << ((2 * v0) ^ 0x31)) ^ 0x9002E57C) & (v7 ^ 0x71BADE0C) ^ ((v7 ^ 0x71BADE0C) << ((2 * v0) ^ 0x31)) & 0xC80172BE;
  v11 = ((4 * (v10 ^ 0x48011282)) ^ 0x2005CAF8) & (v10 ^ 0x48011282) ^ (4 * (v10 ^ 0x48011282)) & 0xC80172BC;
  v12 = (v11 ^ 0x142A0) & (16 * ((v10 ^ 0x80006018) & (4 * v9) ^ v9)) ^ (v10 ^ 0x80006018) & (4 * v9) ^ v9;
  v13 = ((16 * (v11 ^ 0xC8003006)) ^ 0x80172BE0) & (v11 ^ 0xC8003006) ^ (16 * (v11 ^ 0xC8003006)) & 0xC80172B0;
  v14 = v13 ^ 0x4800501E;
  v15 = v12 ^ 0xC80172BE ^ (v13 ^ 0x80012200) & (v12 << 8);
  v16 = (uint64_t *)v2[13];
  v17 = v2[14];
  v18 = *v16;
  v19 = LODWORD(STACK[0x28A4]) ^ (2
                                * ((v15 << 16) & 0x48010000 ^ v15 ^ ((v15 << 16) ^ 0x72BE0000) & ((v14 << 8) & 0x48010000 ^ 0x48010000 ^ ((v14 << 8) ^ 0x1720000) & v14)));
  v20 = ((2 * *v6) & 0xDD7FEAA2) + (*v6 ^ 0x6EBFF551) - 1858073937;
  *(_BYTE *)(*v16 + v20) = HIBYTE(v19) ^ 0xA9;
  *(_BYTE *)(v18 + v20 + 1) = BYTE2(v19) ^ 0xB9;
  *(_BYTE *)(v18 + v20 + 2) = ((BYTE1(v19) ^ 0x49) - ((2 * (BYTE1(v19) ^ 0x49)) & 0x96) + 75) ^ 0x4B;
  *(_BYTE *)(v18 + v20 + 3) = v19 ^ 0xCE;
  v21 = (*v6 + 4);
  *v6 = v21;
  v22 = *v16;
  v23 = (v17 ^ 0x8451B6773B87229ELL) & (2 * (v17 & 0xC865867703A7431ELL)) ^ v17 & 0xC865867703A7431ELL;
  v24 = *(_QWORD *)(v3 + 8 * v0);
  v25 = ((2 * (v17 ^ 0x419BAF13DCD22BELL)) ^ 0x98F8790C7CD4C340) & (v17 ^ 0x419BAF13DCD22BELL) ^ (2
                                                                                                  * (v17 ^ 0x419BAF13DCD22BELL)) & 0x4C7C3C863E6A61A0;
  v1[39] = v17;
  v1[40] = v16;
  v26 = v25 ^ 0x44040482022A20A0;
  v27 = (v25 ^ 0x3838041C000000) & (4 * v23) ^ v23;
  v28 = v2[11];
  v29 = v28;
  v1[41] = v2[12];
  v1[42] = v28;
  LODWORD(STACK[0x18C4]) = STACK[0x28D4];
  v30 = ((4 * v26) ^ 0x31F0F218F9A98680) & v26 ^ (4 * v26) & 0xCC7C3C863E6A61A0;
  v1[44] = v2[9];
  LODWORD(STACK[0x18D4]) = STACK[0x28C4];
  v31 = (v30 ^ 0x70300038280080) & (16 * v27) ^ v27;
  v32 = v2[6];
  v33 = v2[5];
  v1[46] = v2[7];
  v1[47] = v32;
  v1[48] = v33;
  LODWORD(STACK[0x18F4]) = v8;
  v34 = ((16 * (v30 ^ 0xCC0C0C8606426120)) ^ 0xC7C3C863E6A61A00) & (v30 ^ 0xCC0C0C8606426120) ^ (16 * (v30 ^ 0xCC0C0C8606426120)) & 0xCC7C3C863E6A61A0;
  v35 = v2[2];
  v1[50] = v2[3];
  v1[51] = v35;
  v36 = (v34 ^ 0xC440080226220000) & (v31 << 8) ^ v31;
  v37 = *v2;
  v1[52] = v2[1];
  v1[53] = v37;
  LODWORD(STACK[0x191C]) = STACK[0x287C];
  v38 = (((v34 ^ 0x83C3484184861A0) << 8) ^ 0x7C3C863E6A61A000) & (v34 ^ 0x83C3484184861A0) ^ ((v34 ^ 0x83C3484184861A0) << 8) & 0xCC7C3C863E6A6100;
  v39 = *(_QWORD *)(v4 + 241);
  v1[55] = v24 - 12;
  v1[56] = v39;
  v40 = *(_QWORD *)(v4 + 225);
  v1[57] = *(_QWORD *)(v4 + 233);
  v1[58] = v40;
  v1[59] = *(_QWORD *)(v4 + 217);
  LODWORD(STACK[0x194C]) = STACK[0x2854];
  v1[61] = *(_QWORD *)(v4 + 201);
  LODWORD(STACK[0x195C]) = v5;
  v1[63] = v22;
  v1[64] = (v21 ^ 0x6DCCAFEDEF66FBFELL) - 0x5DC630781EBECB0DLL + ((2 * v21) & 0x1DECDF7FCLL);
  v1[65] = v29;
  v1[66] = v17 ^ (2 * (v38 & 0x3C02202000000000 ^ v36 ^ (v38 ^ 0x4C3C04062A600000) & (v36 << 16))) ^ 0x720A1BCF299E4736;
  JUMPOUT(0x1A2764140);
}

uint64_t sub_1A276423C()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  v4 = LODWORD(STACK[0x29E8]) ^ 0x2A390428;
  *(_DWORD *)(v3 - 156) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((474 * (v4 != (((v0 - v1 - 976909774) | 0x24C20140) ^ 0x6DC353E0))) ^ v0))
                            - 12))();
}

uint64_t sub_1A276429C()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = (v0 - 1841516800);
  v6 = v2[46];
  v7 = v2[47] + 0x74E201AB2F781C7FLL + v5;
  v2[77] = v7;
  v8 = *(unsigned int *)(v4 - 156);
  *(_QWORD *)(v1 + 544) = v8;
  v9 = (v0 + 360214800) - 2201732337 + v8;
  v10 = ((2 * v9) & 0x1FFBF5F60) + (v9 ^ 0x7B177EDEFFDFAFB0);
  *(_BYTE *)(v2[48] + v10 + v7) = *(_BYTE *)(v10 + v6 - 0x7B177EDEFFDFAFB0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)(v5 | (16 * (v9 != 0)))) - 4))();
}

uint64_t sub_1A276435C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,int a50)
{
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;

  *(_QWORD *)(v51 + 544) = v50;
  return (*(uint64_t (**)(void))(v53 + 8 * (((2 * (a50 == 1)) | (4 * (a50 == 1))) ^ (v52 + a1 + 1034))))();
}

uint64_t sub_1A2764364()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t (*v19)(void);
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = *(_QWORD *)(v0 + 432);
  v4 = STACK[0x2A6C];
  **(_DWORD **)(v0 + 440) += LODWORD(STACK[0x2A6C]) - 1178882894;
  v1[626] = *(_QWORD *)(v0 + 568);
  v1[627] = *(_QWORD *)(v0 + 560);
  v1[628] = *(_QWORD *)(v0 + 552);
  v1[629] = *(_QWORD *)(v0 + 544);
  LODWORD(STACK[0x15BC]) = *(_DWORD *)(v2 - 228);
  v1[631] = *(_QWORD *)(v0 + 528);
  LODWORD(STACK[0x15CC]) = *(_DWORD *)(v2 - 244);
  v1[633] = *(_QWORD *)(v0 + 512);
  v5 = *(_QWORD *)(v0 + 496);
  v1[634] = *(_QWORD *)(v0 + 504);
  v1[635] = v5;
  LODWORD(STACK[0x15EC]) = v4;
  v6 = *(_QWORD *)(v0 + 472);
  v1[637] = *(_QWORD *)(v0 + 480);
  v1[638] = v6;
  v7 = *(_QWORD *)(v0 + 456);
  v1[639] = *(_QWORD *)(v0 + 464);
  v1[640] = v7;
  LODWORD(STACK[0x1614]) = STACK[0x2A44];
  v1[642] = *(_QWORD *)(v0 + 440);
  v1[643] = v3;
  v8 = *(_QWORD *)(v0 + 416);
  v1[644] = *(_QWORD *)(v0 + 424);
  v1[645] = v8;
  LODWORD(STACK[0x163C]) = STACK[0x2A1C];
  v1[647] = *(_QWORD *)(v0 + 400);
  v9 = STACK[0x2A0C];
  LODWORD(STACK[0x1648]) = STACK[0x2A0C];
  LODWORD(STACK[0x164C]) = v9;
  LODWORD(v8) = STACK[0x164C];
  v10 = STACK[0x1648];
  v11 = v1[647];
  v12 = STACK[0x163C];
  v13 = v1[645];
  v14 = v1[644];
  v15 = v1[643];
  v16 = v1[642];
  v17 = STACK[0x1614];
  v18 = v1[640];
  v19 = (uint64_t (*)(void))v1[639];
  v20 = v1[638];
  v21 = v1[637];
  v22 = STACK[0x15EC];
  v23 = v1[635];
  v24 = v1[634];
  v25 = v1[633];
  v26 = STACK[0x15CC];
  v27 = v1[631];
  v28 = STACK[0x15BC];
  v29 = v1[629];
  v30 = v1[628];
  v31 = v1[627];
  v32 = v1[626];
  v1[58] = v32;
  v1[59] = v31;
  v1[60] = v30;
  v1[61] = v29;
  LODWORD(STACK[0x3FC]) = v28;
  v1[63] = v27;
  LODWORD(STACK[0x40C]) = v26;
  v1[65] = v25;
  v1[66] = v24;
  v1[67] = v23;
  LODWORD(STACK[0x42C]) = v22;
  v1[69] = v21;
  v1[70] = v20;
  v1[71] = v19;
  v1[72] = v18;
  LODWORD(STACK[0x454]) = v17;
  v1[74] = v16;
  v1[75] = v15;
  v1[76] = v14;
  v1[77] = v13;
  LODWORD(STACK[0x47C]) = v12;
  v1[79] = v11;
  LODWORD(STACK[0x488]) = v10;
  LODWORD(STACK[0x48C]) = v8;
  v1[81] = v32;
  v1[82] = v31;
  v1[83] = v30;
  v1[84] = v29;
  LODWORD(STACK[0x4B4]) = v28;
  v1[86] = v27;
  LODWORD(STACK[0x4C4]) = v26;
  v1[88] = v25;
  v1[89] = v24;
  v1[90] = v23;
  LODWORD(STACK[0x4E4]) = v22;
  v1[92] = v21;
  v1[93] = v20;
  v1[94] = v19;
  v1[95] = v18;
  LODWORD(STACK[0x50C]) = v17;
  v1[97] = v16;
  v1[98] = v15;
  v1[99] = v14;
  v1[100] = v13;
  LODWORD(STACK[0x534]) = v12;
  v1[102] = v11;
  LODWORD(STACK[0x540]) = v10;
  LODWORD(STACK[0x544]) = v8;
  v1[127] = v32;
  v1[128] = v31;
  v1[129] = v30;
  v1[130] = v29;
  LODWORD(STACK[0x624]) = v28;
  v1[132] = v27;
  LODWORD(STACK[0x634]) = v26;
  v1[134] = v25;
  v1[135] = v24;
  v1[136] = v23;
  LODWORD(STACK[0x654]) = v22;
  v1[138] = v21;
  v1[139] = v20;
  v1[140] = v19;
  v1[141] = v18;
  LODWORD(STACK[0x67C]) = v17;
  v1[143] = v16;
  v1[144] = v15;
  v1[145] = v14;
  v1[146] = v13;
  LODWORD(STACK[0x6A4]) = v12;
  v1[148] = v11;
  LODWORD(STACK[0x6B0]) = v10;
  LODWORD(STACK[0x6B4]) = v8;
  v1[197] = v32;
  v1[198] = v31;
  v1[199] = v30;
  v1[200] = v29;
  LODWORD(STACK[0x854]) = v28;
  v1[202] = v27;
  LODWORD(STACK[0x864]) = v26;
  v1[204] = v25;
  v1[205] = v24;
  v1[206] = v23;
  LODWORD(STACK[0x884]) = v22;
  v1[208] = v21;
  v1[209] = v20;
  v1[210] = v19;
  v1[211] = v18;
  LODWORD(STACK[0x8AC]) = v17;
  v1[213] = v16;
  v1[214] = v15;
  v1[215] = v14;
  v1[216] = v13;
  LODWORD(STACK[0x8D4]) = v12;
  v1[218] = v11;
  LODWORD(STACK[0x8E0]) = v10;
  LODWORD(STACK[0x8E4]) = v8;
  v1[220] = v32;
  v1[221] = v31;
  v1[222] = v30;
  v1[223] = v29;
  LODWORD(STACK[0x90C]) = v28;
  v1[225] = v27;
  LODWORD(STACK[0x91C]) = v26;
  v1[227] = v25;
  v1[228] = v24;
  v1[229] = v23;
  LODWORD(STACK[0x93C]) = v22;
  v1[231] = v21;
  v1[232] = v20;
  v1[233] = v19;
  v1[234] = v18;
  LODWORD(STACK[0x964]) = v17;
  v1[236] = v16;
  v1[237] = v15;
  v1[238] = v14;
  v1[239] = v13;
  LODWORD(STACK[0x98C]) = v12;
  v1[241] = v11;
  LODWORD(STACK[0x99C]) = v10;
  LODWORD(STACK[0x9A0]) = v8;
  return v19();
}

uint64_t sub_1A276468C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,void (*a53)(void))
{
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  int v85;
  uint64_t (*v86)(void);

  v56 = (_QWORD *)v54[42];
  *v56 = 0;
  v56[1] = 0;
  a53();
  v53[16] = v54[43];
  LODWORD(STACK[0x17F4]) = STACK[0x29CC];
  v53[18] = v54[40];
  LODWORD(STACK[0x1804]) = STACK[0x29BC];
  v57 = v54[37];
  v53[20] = v54[38];
  v53[21] = v57;
  v58 = v54[35];
  v53[22] = v54[36];
  v53[23] = v58;
  LODWORD(STACK[0x182C]) = STACK[0x2994];
  v59 = v54[32];
  v53[25] = v54[33];
  v53[26] = v59;
  v60 = v54[30];
  v53[27] = v54[31];
  v53[28] = v60;
  LODWORD(STACK[0x1854]) = STACK[0x296C];
  v61 = v54[27];
  v53[30] = v54[28];
  v53[31] = v61;
  LODWORD(STACK[0x186C]) = STACK[0x2954];
  v53[33] = v54[25];
  LODWORD(STACK[0x187C]) = STACK[0x2944];
  v62 = v54[22];
  v53[35] = v54[23];
  v53[36] = v62;
  v63 = v54[20];
  v53[37] = v54[21];
  v53[38] = v63;
  v65 = v53[37];
  v64 = v53[38];
  v67 = v53[35];
  v66 = v53[36];
  v68 = STACK[0x187C];
  v69 = v53[33];
  v70 = STACK[0x186C];
  v72 = v53[30];
  v71 = v53[31];
  v73 = STACK[0x1854];
  v75 = v53[27];
  v74 = v53[28];
  v77 = v53[25];
  v76 = v53[26];
  v78 = STACK[0x182C];
  v80 = v53[22];
  v79 = v53[23];
  v82 = v53[20];
  v81 = v53[21];
  v83 = STACK[0x1804];
  v84 = v53[18];
  v85 = STACK[0x17F4];
  v86 = (uint64_t (*)(void))v53[16];
  v55[266] = v64;
  v55[267] = v65;
  v55[268] = v66;
  v55[269] = v67;
  LODWORD(STACK[0xA7C]) = v68;
  v55[271] = v69;
  LODWORD(STACK[0xA8C]) = v70;
  v55[273] = v71;
  v55[274] = 0;
  v55[275] = v72;
  LODWORD(STACK[0xAAC]) = v73;
  v55[277] = v74;
  v55[278] = v75;
  v55[279] = v76;
  v55[280] = v77;
  LODWORD(STACK[0xAD4]) = v78;
  v55[282] = v79;
  v55[283] = v80;
  v55[284] = v81;
  v55[285] = v82;
  LODWORD(STACK[0xAFC]) = v83;
  v55[287] = v84;
  LODWORD(STACK[0xB08]) = v85;
  LODWORD(STACK[0xB0C]) = v78;
  v55[402] = v64;
  v55[403] = v65;
  v55[404] = v66;
  v55[405] = v67;
  LODWORD(STACK[0xEBC]) = v68;
  v55[407] = v69;
  LODWORD(STACK[0xECC]) = v70;
  v55[409] = v71;
  v55[410] = v72;
  LODWORD(STACK[0xEE4]) = v73;
  v55[412] = v74;
  v55[413] = v75;
  v55[414] = v76;
  v55[415] = v77;
  LODWORD(STACK[0xF0C]) = v78;
  v55[417] = v79;
  v55[418] = v80;
  v55[419] = v81;
  v55[420] = v82;
  LODWORD(STACK[0xF34]) = v83;
  v55[422] = v84;
  LODWORD(STACK[0xF40]) = v85;
  LODWORD(STACK[0xF44]) = v70;
  return v86();
}

void sub_1A276482C()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_1A2764838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;
  uint64_t a66;
  int a68;
  uint64_t a69;
  int a71;
  uint64_t a72;
  uint64_t a73;
  uint64_t a74;
  int v74;
  _QWORD *v75;
  int v76;
  uint64_t v77;
  _QWORD *v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(void);

  v80 = STACK[0x264];
  LODWORD(STACK[0x19DC]) = STACK[0x260];
  v81 = v78[12];
  v75[80] = v78[13];
  LODWORD(STACK[0x1A04]) = STACK[0x254];
  v75[79] = v81;
  v75[81] = v78[10];
  v82 = v78[8];
  v75[82] = v78[7];
  v83 = STACK[0x22C];
  LODWORD(STACK[0x1A24]) = STACK[0x204];
  v84 = v78[5];
  v75[84] = v78[6];
  LODWORD(STACK[0x1A3C]) = a71;
  v75[85] = v84;
  v85 = v78[2];
  v75[86] = v78[3];
  v75[88] = v85;
  v86 = v78[1];
  v75[89] = *v78;
  v75[91] = a74;
  LODWORD(STACK[0x1A64]) = a68;
  v75[92] = a72;
  v75[93] = a69;
  v75[96] = a65;
  v75[94] = v82;
  v78[14] = a65;
  v78[15] = a66;
  v78[17] = a69;
  v78[19] = a72;
  v78[20] = a73;
  LODWORD(STACK[0x28C]) = a68;
  v78[21] = v75[91];
  v78[23] = v75[89];
  v78[24] = v86;
  v87 = v75[86];
  v78[25] = v75[88];
  v78[26] = v87;
  v88 = v75[85];
  LODWORD(STACK[0x29C]) = STACK[0x1A3C];
  v89 = v75[84];
  v78[28] = v88;
  v78[29] = v89;
  LODWORD(STACK[0x2BC]) = STACK[0x1A24];
  LODWORD(STACK[0x2E4]) = v83;
  v78[30] = v75[82];
  v78[31] = v82;
  v78[33] = v75[81];
  v90 = v75[79];
  LODWORD(STACK[0x30C]) = STACK[0x1A04];
  v91 = v75[80];
  v78[35] = v90;
  v78[36] = v91;
  LODWORD(STACK[0x318]) = STACK[0x19DC];
  v92 = (uint64_t (*)(void))(*(_QWORD *)(v77 + 8 * ((2240 * (v80 == v79)) ^ (v76 + v74 - 50)))
                          - ((v76 + v74 - 114) | 0x40u)
                          + 317);
  LODWORD(STACK[0x31C]) = v80;
  return v92();
}

void sub_1A276497C(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 + 8 * a1);
  v3[458] = v1[94];
  v3[453] = v1[96];
  v3[454] = v1[93];
  v3[456] = v1[92];
  LODWORD(STACK[0x101C]) = STACK[0x1A64];
  v3[457] = v1[91];
  v3[460] = v1[89];
  v3[467] = (a1 ^ 0xFFFFFFFFFFFFFEBDLL) + v4;
  v3[461] = v1[88];
  v3[462] = v1[86];
  v3[464] = v1[85];
  LODWORD(STACK[0x1044]) = STACK[0x1A3C];
  v3[465] = v1[84];
  LODWORD(STACK[0x1064]) = STACK[0x1A24];
  v3[466] = v1[82];
  v3[469] = v1[81];
  v3[471] = v1[79];
  LODWORD(STACK[0x1084]) = STACK[0x1A04];
  v3[472] = v1[80];
  LODWORD(STACK[0x10AC]) = STACK[0x19DC];
  LODWORD(STACK[0x10B8]) = -83365621;
  JUMPOUT(0x1A27652CCLL);
}

uint64_t sub_1A2764A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void);

  v13 = STACK[0x31C];
  LODWORD(STACK[0x1A74]) = STACK[0x318];
  v14 = v11[35];
  v8[99] = v11[36];
  LODWORD(STACK[0x1A9C]) = STACK[0x30C];
  v8[98] = v14;
  v8[100] = v11[33];
  v15 = v11[31];
  v8[101] = v11[30];
  v16 = STACK[0x2E4];
  LODWORD(STACK[0x1ABC]) = STACK[0x2BC];
  v17 = v11[28];
  v8[103] = v11[29];
  LODWORD(STACK[0x1AD4]) = STACK[0x29C];
  v8[104] = v17;
  v18 = v11[25];
  v8[105] = v11[26];
  v8[107] = v18;
  v19 = v11[24];
  v8[108] = v11[23];
  v20 = v11[20];
  v8[110] = v11[21];
  LODWORD(v18) = STACK[0x28C];
  LODWORD(STACK[0x1AFC]) = STACK[0x28C];
  v21 = v11[19];
  v8[111] = v21;
  v22 = v11[17];
  v8[112] = v22;
  v24 = v11[14];
  v23 = v11[15];
  v8[115] = v24;
  v8[113] = v15;
  v11[37] = v24;
  v11[38] = v23;
  v11[40] = v22;
  v11[42] = v21;
  v11[43] = v20;
  LODWORD(STACK[0x344]) = v18;
  v11[44] = v8[110];
  v11[46] = v8[108];
  v11[47] = v19;
  v25 = v8[105];
  v11[48] = v8[107];
  v11[49] = v25;
  v26 = v8[104];
  LODWORD(STACK[0x354]) = STACK[0x1AD4];
  v27 = v8[103];
  v11[51] = v26;
  v11[52] = v27;
  LODWORD(STACK[0x374]) = STACK[0x1ABC];
  LODWORD(STACK[0x39C]) = v16;
  v11[53] = v8[101];
  v11[54] = v15;
  v11[56] = v8[100];
  v28 = v8[98];
  LODWORD(STACK[0x3C4]) = STACK[0x1A9C];
  v29 = v8[99];
  v11[58] = v28;
  v11[59] = v29;
  LODWORD(STACK[0x3D0]) = STACK[0x1A74];
  v30 = (uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((v13 == v12) * (v7 ^ (a7 + 235) ^ 0x387)) ^ (v9 + v7 - 77))) - 4);
  LODWORD(STACK[0x3D4]) = v13;
  return v30();
}

void sub_1A2764B80(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 + 8 * a1);
  v3[458] = v1[113];
  v3[453] = v1[115];
  v3[454] = v1[112];
  v3[456] = v1[111];
  LODWORD(STACK[0x101C]) = STACK[0x1AFC];
  v3[457] = v1[110];
  v3[460] = v1[108];
  v3[467] = v4 + ((a1 + 552) | 0xA5u) - 1019;
  v3[461] = v1[107];
  v3[462] = v1[105];
  v3[464] = v1[104];
  LODWORD(STACK[0x1044]) = STACK[0x1AD4];
  v3[465] = v1[103];
  LODWORD(STACK[0x1064]) = STACK[0x1ABC];
  v3[466] = v1[101];
  v3[469] = v1[100];
  v3[471] = v1[98];
  LODWORD(STACK[0x1084]) = STACK[0x1A9C];
  v3[472] = v1[99];
  LODWORD(STACK[0x10AC]) = STACK[0x1A74];
  JUMPOUT(0x1A2764A34);
}

uint64_t sub_1A2764C3C()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);

  v6 = STACK[0x3D4];
  LODWORD(STACK[0x1B0C]) = STACK[0x3D0];
  v7 = v4[58];
  v1[118] = v4[59];
  LODWORD(STACK[0x1B2C]) = STACK[0x3C4];
  v1[117] = v7;
  v1[119] = v4[56];
  v8 = v4[54];
  v1[121] = v4[53];
  LODWORD(STACK[0x1B64]) = STACK[0x39C];
  LODWORD(STACK[0x1B74]) = STACK[0x374];
  LODWORD(STACK[0x1B84]) = STACK[0x354];
  v9 = v4[52];
  v1[122] = v4[51];
  v10 = v4[48];
  v1[123] = v4[49];
  v11 = v4[46];
  v1[124] = v4[47];
  v1[125] = v11;
  v13 = v4[43];
  v12 = v4[44];
  LODWORD(v11) = STACK[0x344];
  v14 = v4[42];
  v1[126] = v13;
  v1[128] = v14;
  v15 = v4[40];
  v1[130] = v15;
  v17 = v4[37];
  v16 = v4[38];
  v1[132] = v16;
  v4[77] = v8;
  v4[60] = v17;
  v4[61] = v16;
  v4[63] = v15;
  v4[65] = v14;
  v4[66] = v13;
  LODWORD(STACK[0x3FC]) = v11;
  v4[67] = v12;
  v4[69] = v1[125];
  v4[70] = v1[124];
  v4[71] = v10;
  v4[72] = v1[123];
  v4[74] = v1[122];
  LODWORD(STACK[0x40C]) = STACK[0x1B84];
  v4[75] = v9;
  LODWORD(STACK[0x42C]) = STACK[0x1B74];
  LODWORD(STACK[0x454]) = STACK[0x1B64];
  v4[76] = v1[121];
  v4[79] = v1[119];
  v4[81] = v1[117];
  LODWORD(STACK[0x47C]) = STACK[0x1B2C];
  v4[82] = v1[118];
  LODWORD(STACK[0x488]) = STACK[0x1B0C];
  v18 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2202 * (v6 == ((v2 + v0 - 289) ^ (v5 - 78)))) ^ (v2 + v0 - 289)))
                          - 12);
  LODWORD(STACK[0x48C]) = v6;
  return v18();
}

uint64_t sub_1A2764D84@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,unint64_t a57)
{
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t (*v71)(void);

  v61 = *(_QWORD *)(v58 + 8 * a1);
  v62 = (a1 - 2016418272) & 0x78301D9F;
  v59[586] = v57[132];
  v59[588] = v57[130];
  v59[589] = v57[128];
  v59[590] = v57[126];
  v59[598] = (v62 ^ 0xFFFFFFFFFFFFFBE2) + v61;
  v59[591] = v57[125];
  v59[592] = v57[124];
  v59[594] = v57[123];
  v59[596] = v57[122];
  LODWORD(STACK[0x1444]) = STACK[0x1B84];
  LODWORD(STACK[0x1454]) = STACK[0x1B74];
  LODWORD(STACK[0x1464]) = STACK[0x1B64];
  v59[597] = v57[121];
  v59[600] = v57[119];
  v59[603] = v57[117];
  LODWORD(STACK[0x14A4]) = STACK[0x1B2C];
  v59[602] = v57[118];
  LODWORD(STACK[0x14C4]) = STACK[0x1B0C];
  v59[604] = v60 - 144;
  LODWORD(STACK[0x14D0]) = 180195396;
  LODWORD(STACK[0x2798]) = STACK[0x14D0];
  STACK[0x2790] = v59[604];
  LODWORD(STACK[0x279C]) = STACK[0x14C4];
  STACK[0x27A0] = v59[602];
  LODWORD(STACK[0x27AC]) = STACK[0x14A4];
  STACK[0x27B0] = v59[603];
  STACK[0x27B8] = v59[600];
  STACK[0x27C0] = v59[597];
  LODWORD(STACK[0x27CC]) = STACK[0x1464];
  LODWORD(STACK[0x2804]) = STACK[0x1454];
  LODWORD(STACK[0x2814]) = STACK[0x1444];
  STACK[0x27D0] = v59[596];
  STACK[0x27D8] = v59[594];
  STACK[0x27E0] = v59[592];
  STACK[0x27E8] = v59[591];
  v63 = v59[598];
  STACK[0x27F0] = v59[590];
  v64 = v59[589];
  STACK[0x27F8] = v64;
  v65 = v59[588];
  STACK[0x2808] = v65;
  v66 = v59[586];
  STACK[0x2818] = v66;
  STACK[0x2820] = a57;
  STACK[0x2828] = v63;
  v67 = *(_DWORD *)(a57 + 12);
  STACK[0x2830] = a57 + 12;
  v68 = LODWORD(STACK[0x2798]);
  v69 = (v62 ^ 0x833BC0E6)
      + 2093237077
      + v68
      + ((unint64_t)(v68 < 0xABD903C) << 32)
      + 0x666CBB72BDE73202;
  STACK[0x2838] = v69;
  v70 = (v67 ^ 0xE29DFFFFB4FEFD95) + ((2 * v67) & 0x169FDFB2ALL) + 0x5FFBE6FF5FA73F6CLL + v69;
  STACK[0x2840] = v70;
  v59[645] = v69;
  v59[628] = STACK[0x2790];
  v59[629] = v66;
  v59[631] = v65;
  v59[633] = v64;
  v59[634] = STACK[0x27F0];
  LODWORD(STACK[0x1594]) = v68;
  v59[635] = v63;
  v59[637] = STACK[0x27E8];
  v59[638] = STACK[0x27E0];
  v59[639] = STACK[0x2820];
  v59[640] = STACK[0x27D8];
  v59[642] = STACK[0x27D0];
  LODWORD(STACK[0x15BC]) = STACK[0x2814];
  v59[643] = STACK[0x2830];
  LODWORD(STACK[0x15CC]) = STACK[0x2804];
  LODWORD(STACK[0x15EC]) = STACK[0x27CC];
  v59[644] = STACK[0x27C0];
  v59[647] = STACK[0x27B8];
  v59[650] = STACK[0x27B0];
  LODWORD(STACK[0x1614]) = STACK[0x27AC];
  v59[649] = STACK[0x27A0];
  LODWORD(STACK[0x163C]) = STACK[0x279C];
  v71 = (uint64_t (*)(void))(*(_QWORD *)(v58 + 8 * (int)((43 * (v70 + 0x56F95D8E22B4F87CLL >= 0xFFFFFFFB)) ^ v62)) - 4);
  LODWORD(STACK[0x1648]) = 1718210905;
  return v71();
}

uint64_t sub_1A2764E50()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);

  v6 = STACK[0x48C];
  LODWORD(STACK[0x1B94]) = STACK[0x488];
  v1[135] = v4[82];
  LODWORD(STACK[0x1BB4]) = STACK[0x47C];
  v1[134] = v4[81];
  v1[136] = v4[79];
  v1[138] = v4[76];
  v7 = STACK[0x454];
  LODWORD(STACK[0x1BEC]) = STACK[0x42C];
  v1[139] = v4[75];
  LODWORD(STACK[0x1BFC]) = STACK[0x40C];
  v1[140] = v4[74];
  v1[141] = v4[72];
  v1[142] = v4[71];
  v8 = v4[70];
  v1[143] = v4[69];
  v1[145] = v4[67];
  v9 = STACK[0x3FC];
  LODWORD(STACK[0x1C0C]) = STACK[0x3FC];
  v10 = v4[66];
  v11 = v4[65];
  v1[147] = v11;
  v12 = v4[63];
  v1[149] = v12;
  v13 = v4[60];
  v14 = v4[61];
  v1[152] = v13;
  v15 = v4[77];
  v1[151] = v15;
  v4[100] = v15;
  v4[83] = v13;
  v4[84] = v14;
  v4[86] = v12;
  v4[88] = v11;
  v4[89] = v10;
  LODWORD(STACK[0x4B4]) = v9;
  v4[90] = v1[145];
  v4[92] = v1[143];
  v4[93] = v8;
  v4[94] = v1[142];
  v4[95] = v1[141];
  v4[97] = v1[140];
  LODWORD(STACK[0x4C4]) = STACK[0x1BFC];
  v4[98] = v1[139];
  LODWORD(STACK[0x4E4]) = STACK[0x1BEC];
  LODWORD(STACK[0x50C]) = v7;
  v4[99] = v1[138];
  v4[102] = v1[136];
  v4[104] = v1[134];
  LODWORD(STACK[0x534]) = STACK[0x1BB4];
  v4[105] = v1[135];
  LODWORD(STACK[0x540]) = STACK[0x1B94];
  v16 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2309 * (v6 == v5)) ^ (v2 + v0 - 54)))
                          - ((v0 + 1661942357) & 0x19B501FB)
                          + 309);
  LODWORD(STACK[0x544]) = v6;
  return v16();
}

uint64_t sub_1A2764FDC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  _QWORD *v58;
  int v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t (*v70)(void);

  v62 = *(_QWORD *)(v60 + 8 * a1);
  v63 = a1 ^ 0x2B6;
  v61[458] = v58[151];
  v61[453] = v58[152];
  v61[454] = v58[149];
  v61[456] = v58[147];
  LODWORD(STACK[0x101C]) = STACK[0x1C0C];
  v61[457] = v58[145];
  v61[460] = v58[143];
  v61[467] = (v63 ^ 0xFFFFFFFFFFFFFC03) + v62;
  v61[461] = v58[142];
  v61[462] = v58[141];
  v61[464] = v58[140];
  LODWORD(STACK[0x1044]) = STACK[0x1BFC];
  v61[465] = v58[139];
  LODWORD(STACK[0x1064]) = STACK[0x1BEC];
  v61[466] = v58[138];
  v61[469] = v58[136];
  v61[471] = v58[134];
  LODWORD(STACK[0x1084]) = STACK[0x1BB4];
  v61[472] = v58[135];
  LODWORD(STACK[0x10AC]) = STACK[0x1B94];
  LODWORD(STACK[0x10B8]) = a18;
  LODWORD(STACK[0x2560]) = STACK[0x10B8];
  LODWORD(STACK[0x2564]) = STACK[0x10AC];
  v58[448] = v61[472];
  LODWORD(STACK[0x2574]) = STACK[0x1084];
  v58[450] = v61[471];
  v58[451] = v61[469];
  v58[452] = v61[466];
  LODWORD(STACK[0x259C]) = STACK[0x1064];
  v58[453] = v61[465];
  LODWORD(STACK[0x25BC]) = STACK[0x1044];
  v58[455] = v61[464];
  v58[456] = v61[462];
  v58[457] = v61[461];
  v64 = v61[467];
  v58[459] = v61[460];
  v58[460] = v61[457];
  LODWORD(STACK[0x25D4]) = STACK[0x101C];
  v65 = v61[456];
  v58[462] = v65;
  v66 = v61[454];
  v58[463] = v66;
  v67 = v61[453];
  v58[464] = v67;
  v68 = v61[458];
  v58[465] = v68;
  v58[466] = a58;
  v58[467] = v64;
  v61[502] = a58;
  v69 = *(_DWORD *)(a58 + 12);
  v58[468] = a58 + 12;
  LODWORD(STACK[0x2610]) = v69;
  v61[513] = v68;
  v61[496] = v67;
  v61[497] = a58 + 12;
  v61[499] = v66;
  v61[501] = v65;
  LODWORD(STACK[0x1174]) = STACK[0x25D4];
  v61[503] = v58[460];
  v61[505] = v58[459];
  v61[506] = v64;
  v61[507] = v58[457];
  v61[508] = v58[456];
  v61[510] = v58[455];
  LODWORD(STACK[0x119C]) = STACK[0x25BC];
  v61[511] = v58[453];
  LODWORD(STACK[0x11AC]) = STACK[0x259C];
  LODWORD(STACK[0x11CC]) = STACK[0x2560];
  v61[512] = v58[452];
  v61[515] = v58[451];
  v61[517] = v58[450];
  LODWORD(STACK[0x11F4]) = STACK[0x2574];
  v61[518] = v58[448];
  LODWORD(STACK[0x121C]) = STACK[0x2564];
  v70 = (uint64_t (*)(void))(*(_QWORD *)(v60 + 8
                                            * (int)((((v69 < 0xFFFFFFFB) << 8) | ((v69 < 0xFFFFFFFB) << 10)) ^ v63))
                          - ((v63 - v59 - 640)
                           + ((v63 - 923) ^ 0xFFFFFFFF7CC43B40)));
  LODWORD(STACK[0x1228]) = 1718210905;
  return v70();
}

uint64_t sub_1A2765098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);

  v13 = STACK[0x544];
  LODWORD(STACK[0x1C1C]) = STACK[0x540];
  v8[153] = v11[105];
  LODWORD(STACK[0x1C44]) = STACK[0x534];
  v8[166] = v11[104];
  v8[154] = v11[102];
  v8[156] = v11[99];
  v14 = STACK[0x50C];
  LODWORD(STACK[0x1C64]) = STACK[0x4E4];
  v8[157] = v11[98];
  LODWORD(STACK[0x1C7C]) = STACK[0x4C4];
  v8[158] = v11[97];
  v8[160] = v11[95];
  v8[161] = v11[94];
  v15 = v11[93];
  v8[163] = v11[92];
  v8[164] = v11[90];
  v16 = STACK[0x4B4];
  LODWORD(STACK[0x1CA4]) = STACK[0x4B4];
  v17 = v11[89];
  v18 = v11[88];
  v8[165] = v18;
  v19 = v11[86];
  v8[168] = v19;
  v20 = v11[84];
  v21 = v11[83];
  v8[171] = v21;
  v22 = v11[100];
  v8[170] = v22;
  v11[123] = v22;
  v11[106] = v21;
  v11[107] = v20;
  v11[109] = v19;
  v11[111] = v18;
  v11[112] = v17;
  LODWORD(STACK[0x56C]) = v16;
  v11[113] = v8[164];
  v11[115] = v8[163];
  v11[116] = v15;
  v11[117] = v8[161];
  v11[118] = v8[160];
  v11[120] = v8[158];
  LODWORD(STACK[0x57C]) = STACK[0x1C7C];
  v11[121] = v8[157];
  LODWORD(STACK[0x59C]) = STACK[0x1C64];
  LODWORD(STACK[0x5C4]) = v14;
  v11[122] = v8[156];
  v11[125] = v8[154];
  v11[127] = v8[166];
  LODWORD(STACK[0x5EC]) = STACK[0x1C44];
  v11[128] = v8[153];
  LODWORD(STACK[0x5F8]) = STACK[0x1C1C];
  v23 = (uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((1881 * (v13 == v12)) ^ (v9 + v7 - 49)))
                          - (v7 ^ (a7 + 199))
                          + 318);
  LODWORD(STACK[0x5FC]) = v13;
  return v23();
}

void sub_1A2765210(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 + 8 * a1);
  v3[458] = v1[170];
  v3[453] = v1[171];
  v3[454] = v1[168];
  v3[456] = v1[165];
  LODWORD(STACK[0x101C]) = STACK[0x1CA4];
  v3[457] = v1[164];
  v3[460] = v1[163];
  v3[467] = v4 + (a1 ^ 0x2B1u) - 1023;
  v3[461] = v1[161];
  v3[462] = v1[160];
  v3[464] = v1[158];
  LODWORD(STACK[0x1044]) = STACK[0x1C7C];
  v3[465] = v1[157];
  LODWORD(STACK[0x1064]) = STACK[0x1C64];
  v3[466] = v1[156];
  v3[469] = v1[154];
  v3[471] = v1[166];
  LODWORD(STACK[0x1084]) = STACK[0x1C44];
  v3[472] = v1[153];
  LODWORD(STACK[0x10AC]) = STACK[0x1C1C];
  JUMPOUT(0x1A27652C8);
}

uint64_t sub_1A2765470@<X0>(int a1@<W6>, int a2@<W8>)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _BOOL4 v11;
  _BOOL4 v12;

  v6 = LODWORD(STACK[0x2610]);
  v7 = v2[466];
  v8 = *(unsigned int *)(v7 + 8);
  v4[490] = v2[465];
  v4[473] = v2[464];
  v9 = (v6 ^ 0xFE6BFFADEE7FFF26) + 0x194005306B5356BLL + (((a2 ^ (a1 - 67)) + 0x159C4395CLL) & (2 * v6));
  v4[474] = v2[468];
  v10 = (v8 ^ 0x2F97E7FB3EFAFEADLL) - 0x2F97E7FA49C5CA20 + ((2 * (_DWORD)v8) & 0x7DF5FD5A);
  v11 = v9 < 0xF535348D;
  v4[476] = v2[463];
  v4[478] = v2[462];
  v12 = v9 > v10;
  v4[479] = v7;
  if (v11 != v10 < 0xF535348D)
    v12 = v11;
  LODWORD(STACK[0x10BC]) = STACK[0x25D4];
  v4[480] = v2[460];
  v4[482] = v2[459];
  v4[483] = v2[467];
  v4[484] = v2[457];
  v4[485] = v2[456];
  v4[487] = v2[455];
  LODWORD(STACK[0x10E4]) = STACK[0x25BC];
  v4[488] = v2[453];
  LODWORD(STACK[0x10F4]) = STACK[0x259C];
  LODWORD(STACK[0x1114]) = STACK[0x2560];
  v4[489] = v2[452];
  v4[492] = v2[451];
  v4[494] = v2[450];
  LODWORD(STACK[0x113C]) = STACK[0x2574];
  v4[495] = v2[448];
  LODWORD(STACK[0x1164]) = STACK[0x2564];
  LODWORD(STACK[0x1170]) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1821 * v12) ^ a2)) - 4))();
}

void sub_1A27655FC(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 + 8 * a1);
  v3[524] = v1[465];
  v3[519] = v1[464];
  v3[520] = v1[468];
  v3[522] = v1[463];
  v3[525] = v1[462];
  v3[526] = v1[466];
  LODWORD(STACK[0x122C]) = STACK[0x25D4];
  v3[528] = v1[460];
  v3[529] = v1[459];
  v3[530] = v1[467];
  v3[531] = v1[457];
  v3[537] = ((a1 - 1023541342) & 0x7FFF8D8F ^ 0xFFFFFFFFBD027272) + v4;
  v3[533] = v1[455];
  LODWORD(STACK[0x1254]) = STACK[0x25BC];
  v3[534] = v1[453];
  LODWORD(STACK[0x1264]) = STACK[0x259C];
  LODWORD(STACK[0x1284]) = STACK[0x2560];
  v3[536] = v1[448];
  LODWORD(STACK[0x12AC]) = STACK[0x2564];
  LODWORD(STACK[0x12C0]) = 4;
  JUMPOUT(0x1A27656CCLL);
}

uint64_t sub_1A27656DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);

  v13 = STACK[0x5FC];
  LODWORD(STACK[0x1CB4]) = STACK[0x5F8];
  v8[172] = v11[128];
  LODWORD(STACK[0x1CD4]) = STACK[0x5EC];
  v8[187] = v11[127];
  v8[174] = v11[125];
  v8[175] = v11[122];
  LODWORD(STACK[0x1D0C]) = STACK[0x5C4];
  LODWORD(STACK[0x1D1C]) = STACK[0x59C];
  v14 = v11[121];
  LODWORD(STACK[0x1D2C]) = STACK[0x57C];
  v8[176] = v11[120];
  v8[177] = v11[118];
  v15 = v11[117];
  v8[178] = v11[116];
  v8[179] = v11[115];
  v16 = v11[113];
  v17 = STACK[0x56C];
  v18 = v11[112];
  v8[181] = v18;
  v19 = v11[111];
  v8[183] = v19;
  v20 = v11[109];
  v8[185] = v20;
  v21 = v11[107];
  v8[188] = v21;
  v22 = v11[106];
  v11[146] = v11[123];
  v11[129] = v22;
  v11[130] = v21;
  v11[132] = v20;
  v11[134] = v19;
  v11[135] = v18;
  LODWORD(STACK[0x624]) = v17;
  v11[136] = v16;
  v11[138] = v8[179];
  v11[139] = v8[178];
  v11[140] = v15;
  v11[141] = v8[177];
  v11[143] = v8[176];
  LODWORD(STACK[0x634]) = STACK[0x1D2C];
  v11[144] = v14;
  LODWORD(STACK[0x654]) = STACK[0x1D1C];
  LODWORD(STACK[0x67C]) = STACK[0x1D0C];
  v11[145] = v8[175];
  v11[148] = v8[174];
  v11[150] = v8[187];
  LODWORD(STACK[0x6A4]) = STACK[0x1CD4];
  v11[151] = v8[172];
  LODWORD(STACK[0x6B0]) = STACK[0x1CB4];
  v23 = (uint64_t (*)(void))(*(_QWORD *)(v10
                                      + 8 * ((106 * ((((v7 - a7 + 115) ^ (v13 == v12)) & 1) == 0)) ^ (v9 + v7 + 1587)))
                          - 12);
  LODWORD(STACK[0x6B4]) = v13;
  return v23();
}

uint64_t sub_1A2765850@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,unint64_t a57)
{
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  int v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t (*v70)(void);

  v60 = *(_QWORD *)(v58 + 8 * a1);
  v61 = (a1 + 926) | 4;
  v59[586] = v57[188];
  v59[588] = v57[185];
  v59[589] = v57[183];
  v59[590] = v57[181];
  v59[598] = v60;
  v59[591] = v57[179];
  v59[592] = v57[178];
  v59[594] = v57[177];
  v59[596] = v57[176];
  LODWORD(STACK[0x1444]) = STACK[0x1D2C];
  LODWORD(STACK[0x1454]) = STACK[0x1D1C];
  LODWORD(STACK[0x1464]) = STACK[0x1D0C];
  v59[597] = v57[175];
  v59[600] = v57[174];
  v59[603] = v57[187];
  LODWORD(STACK[0x14A4]) = STACK[0x1CD4];
  v59[602] = v57[172];
  LODWORD(STACK[0x14C4]) = STACK[0x1CB4];
  v59[604] = a14;
  LODWORD(STACK[0x14D0]) = a16;
  LODWORD(STACK[0x2798]) = STACK[0x14D0];
  STACK[0x2790] = v59[604];
  LODWORD(STACK[0x279C]) = STACK[0x14C4];
  STACK[0x27A0] = v59[602];
  LODWORD(STACK[0x27AC]) = STACK[0x14A4];
  STACK[0x27B0] = v59[603];
  STACK[0x27B8] = v59[600];
  STACK[0x27C0] = v59[597];
  LODWORD(STACK[0x27CC]) = STACK[0x1464];
  LODWORD(STACK[0x2804]) = STACK[0x1454];
  LODWORD(STACK[0x2814]) = STACK[0x1444];
  STACK[0x27D0] = v59[596];
  STACK[0x27D8] = v59[594];
  STACK[0x27E0] = v59[592];
  STACK[0x27E8] = v59[591];
  v62 = v59[598];
  STACK[0x27F0] = v59[590];
  v63 = v59[589];
  STACK[0x27F8] = v63;
  v64 = v59[588];
  STACK[0x2808] = v64;
  v65 = v59[586];
  STACK[0x2818] = v65;
  STACK[0x2820] = a57;
  STACK[0x2828] = v62;
  v66 = *(_DWORD *)(a57 + 12);
  STACK[0x2830] = a57 + 12;
  v67 = LODWORD(STACK[0x2798]);
  v68 = (v61 ^ 0x833BC0E6)
      + 2093237077
      + v67
      + ((unint64_t)(v67 < 0xABD903C) << 32)
      + 0x666CBB72BDE73202;
  STACK[0x2838] = v68;
  v69 = (v66 ^ 0xE29DFFFFB4FEFD95) + ((2 * v66) & 0x169FDFB2ALL) + 0x5FFBE6FF5FA73F6CLL + v68;
  STACK[0x2840] = v69;
  v59[645] = v68;
  v59[628] = STACK[0x2790];
  v59[629] = v65;
  v59[631] = v64;
  v59[633] = v63;
  v59[634] = STACK[0x27F0];
  LODWORD(STACK[0x1594]) = v67;
  v59[635] = v62;
  v59[637] = STACK[0x27E8];
  v59[638] = STACK[0x27E0];
  v59[639] = STACK[0x2820];
  v59[640] = STACK[0x27D8];
  v59[642] = STACK[0x27D0];
  LODWORD(STACK[0x15BC]) = STACK[0x2814];
  v59[643] = STACK[0x2830];
  LODWORD(STACK[0x15CC]) = STACK[0x2804];
  LODWORD(STACK[0x15EC]) = STACK[0x27CC];
  v59[644] = STACK[0x27C0];
  v59[647] = STACK[0x27B8];
  v59[650] = STACK[0x27B0];
  LODWORD(STACK[0x1614]) = STACK[0x27AC];
  v59[649] = STACK[0x27A0];
  LODWORD(STACK[0x163C]) = STACK[0x279C];
  v70 = (uint64_t (*)(void))(*(_QWORD *)(v58 + 8 * ((43 * (v69 + 0x56F95D8E22B4F87CLL >= 0xFFFFFFFB)) ^ v61)) - 4);
  LODWORD(STACK[0x1648]) = 1718210905;
  return v70();
}

uint64_t sub_1A27658F8()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);

  v6 = STACK[0x6B4];
  LODWORD(STACK[0x1D3C]) = STACK[0x6B0];
  v1[189] = v4[151];
  LODWORD(STACK[0x1D64]) = STACK[0x6A4];
  v1[202] = v4[150];
  v1[190] = v4[148];
  v1[192] = v4[145];
  LODWORD(STACK[0x1D84]) = STACK[0x67C];
  LODWORD(STACK[0x1D9C]) = STACK[0x654];
  v7 = v4[144];
  LODWORD(STACK[0x1DC4]) = STACK[0x634];
  v1[193] = v4[143];
  v1[194] = v4[141];
  v8 = v4[140];
  v1[196] = v4[139];
  v1[197] = v4[138];
  v9 = v4[136];
  v10 = STACK[0x624];
  v11 = v4[135];
  v1[199] = v11;
  v12 = v4[134];
  v1[200] = v12;
  v13 = v4[132];
  v1[201] = v13;
  v14 = v4[130];
  v1[204] = v14;
  v15 = v4[129];
  v4[169] = v4[146];
  v4[152] = v15;
  v4[153] = v14;
  v4[155] = v13;
  v4[157] = v12;
  v4[158] = v11;
  LODWORD(STACK[0x6DC]) = v10;
  v4[159] = v9;
  v4[161] = v1[197];
  v4[162] = v1[196];
  v4[163] = v8;
  v4[164] = v1[194];
  v4[166] = v1[193];
  LODWORD(STACK[0x6EC]) = STACK[0x1DC4];
  v4[167] = v7;
  LODWORD(STACK[0x70C]) = STACK[0x1D9C];
  LODWORD(STACK[0x734]) = STACK[0x1D84];
  v4[168] = v1[192];
  v4[171] = v1[190];
  v4[173] = v1[202];
  LODWORD(STACK[0x75C]) = STACK[0x1D64];
  v4[174] = v1[189];
  LODWORD(STACK[0x768]) = STACK[0x1D3C];
  v16 = (uint64_t (*)(void))(*(_QWORD *)(v3
                                      + 8 * ((2406 * (v6 == (((v2 + v0 - 263) | 5) ^ (v5 - 109)))) ^ (v2 + v0 - 258)))
                          - 12);
  LODWORD(STACK[0x76C]) = v6;
  return v16();
}

void sub_1A2765A70(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;

  v46 = *(_QWORD *)(v44 + 8 * a1);
  v45[586] = v43[204];
  v45[588] = v43[201];
  v45[589] = v43[200];
  v45[590] = v43[199];
  v45[598] = v46 + (a1 + 929) - 1058;
  v45[591] = v43[197];
  v45[592] = v43[196];
  v45[594] = v43[194];
  v45[596] = v43[193];
  LODWORD(STACK[0x1444]) = STACK[0x1DC4];
  LODWORD(STACK[0x1454]) = STACK[0x1D9C];
  LODWORD(STACK[0x1464]) = STACK[0x1D84];
  v45[597] = v43[192];
  v45[600] = v43[190];
  v45[603] = v43[202];
  LODWORD(STACK[0x14A4]) = STACK[0x1D64];
  v45[602] = v43[189];
  LODWORD(STACK[0x14C4]) = STACK[0x1D3C];
  v45[604] = a43;
  JUMPOUT(0x1A2765B18);
}

uint64_t sub_1A2765D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  _BOOL4 v12;
  uint64_t (*v13)(void);

  v12 = *(_QWORD *)(a2 + 193) + 0x56F95D8E22B4F880 > (unint64_t)*(unsigned int *)(*(_QWORD *)(a2 + 161) + 8);
  v10[622] = *(_QWORD *)(a2 + 185);
  v10[605] = *(_QWORD *)(a2 + 17);
  v10[606] = *(_QWORD *)(a2 + 153);
  v10[608] = *(_QWORD *)(a2 + 137);
  v10[610] = *(_QWORD *)(a2 + 121);
  v10[611] = *(_QWORD *)(a2 + 113);
  LODWORD(STACK[0x14D4]) = STACK[0x2798];
  v10[612] = *(_QWORD *)(a2 + 169);
  v10[614] = *(_QWORD *)(a2 + 105);
  v10[615] = *(_QWORD *)(a2 + 97);
  v10[616] = *(_QWORD *)(a2 + 161);
  v10[617] = *(_QWORD *)(a2 + 89);
  v10[619] = *(_QWORD *)(a2 + 81);
  LODWORD(STACK[0x1504]) = STACK[0x2814];
  v10[620] = *(_QWORD *)(a2 + 177);
  LODWORD(STACK[0x1514]) = STACK[0x2804];
  LODWORD(STACK[0x1534]) = STACK[0x27CC];
  v10[621] = *(_QWORD *)(a2 + 65);
  v10[624] = *(_QWORD *)(a2 + 57);
  v10[626] = *(_QWORD *)(a2 + 49);
  LODWORD(STACK[0x155C]) = STACK[0x27AC];
  v10[627] = *(_QWORD *)(a2 + 33);
  v13 = (uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((v12 * ((v7 - v8 - 1742) ^ (a7 - 53) ^ 0x42)) | v7)) - 4);
  LODWORD(STACK[0x1584]) = v11;
  return v13();
}

void sub_1A2765E50()
{
  int v0;
  uint64_t v1;
  _QWORD *v2;
  int v3;
  int v4;
  uint64_t v5;
  unsigned int v6;

  v3 = STACK[0x2798];
  v4 = v0 + 1123913028;
  v5 = *(_QWORD *)(v1 + 8 * v0);
  v6 = (v4 ^ 0xB7BFE246) + LODWORD(STACK[0x2798]);
  v2[524] = STACK[0x2838];
  v2[519] = STACK[0x2790];
  v2[520] = STACK[0x2818];
  v2[522] = STACK[0x2808];
  v2[525] = STACK[0x27F8];
  v2[526] = STACK[0x27F0];
  LODWORD(STACK[0x122C]) = v3;
  v2[528] = STACK[0x2828];
  v2[529] = STACK[0x27E8];
  v2[530] = STACK[0x27E0];
  v2[531] = STACK[0x2820];
  v2[537] = v5;
  v2[533] = STACK[0x27D0];
  LODWORD(STACK[0x1254]) = STACK[0x2814];
  v2[534] = STACK[0x2830];
  LODWORD(STACK[0x1264]) = STACK[0x2804];
  LODWORD(STACK[0x1284]) = STACK[0x27CC];
  v2[536] = STACK[0x27A0];
  LODWORD(STACK[0x12AC]) = STACK[0x279C];
  LODWORD(STACK[0x12C0]) = v6;
  v2[539] = STACK[0x2820];
  JUMPOUT(0x1A2765F18);
}

uint64_t sub_1A2766094()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1[580] = v0[510];
  v1[563] = v0[509];
  v1[564] = v0[508];
  v1[566] = v0[507];
  v1[568] = v0[505];
  v1[569] = v0[503];
  LODWORD(STACK[0x138C]) = STACK[0x273C];
  v1[570] = v0[502];
  v1[572] = v0[500];
  v1[573] = v0[499];
  v1[574] = v0[498];
  v1[575] = v0[511];
  v1[577] = v0[497];
  LODWORD(STACK[0x13B4]) = STACK[0x272C];
  v1[578] = v0[495];
  LODWORD(STACK[0x13C4]) = STACK[0x2714];
  LODWORD(STACK[0x13E4]) = STACK[0x26EC];
  v1[579] = v0[492];
  v1[582] = v0[512];
  v1[593] = *(_QWORD *)(v2 + 1);
  LODWORD(STACK[0x140C]) = 1718210905;
  v1[584] = v0[494];
  LODWORD(STACK[0x1434]) = STACK[0x26D4];
  LODWORD(STACK[0x1440]) = 1718210905;
  v3 = STACK[0x1440];
  v4 = STACK[0x1434];
  v5 = v1[584];
  v6 = STACK[0x140C];
  v7 = v1[593];
  v8 = v1[582];
  v9 = v1[579];
  v10 = STACK[0x13E4];
  v11 = STACK[0x13C4];
  v12 = v1[578];
  v13 = STACK[0x13B4];
  v14 = v1[577];
  v15 = (uint64_t (*)(void))v1[575];
  v16 = v1[574];
  v17 = v1[573];
  v18 = v1[572];
  v19 = v1[570];
  v20 = STACK[0x138C];
  v21 = v1[569];
  v22 = v1[568];
  v23 = v1[566];
  v24 = v1[564];
  v25 = v1[563];
  v26 = v1[580];
  v1[216] = v26;
  v1[199] = v25;
  v1[200] = v24;
  v1[202] = v23;
  v1[204] = v22;
  v1[205] = v21;
  LODWORD(STACK[0x828]) = v20;
  v1[206] = v19;
  v1[208] = v18;
  v1[209] = v17;
  v1[210] = v16;
  v1[211] = v15;
  v1[213] = v14;
  LODWORD(STACK[0x82C]) = v13;
  v1[214] = v12;
  LODWORD(STACK[0x854]) = v11;
  LODWORD(STACK[0x864]) = v10;
  v1[215] = v9;
  v1[218] = v8;
  v1[220] = v7;
  LODWORD(STACK[0x884]) = v6;
  v1[221] = v5;
  LODWORD(STACK[0x8AC]) = v4;
  LODWORD(STACK[0x8D4]) = v3;
  v1[262] = v26;
  v1[246] = v25;
  v1[247] = v24;
  v1[249] = v23;
  v1[251] = v22;
  v1[252] = v21;
  LODWORD(STACK[0x9A4]) = v20;
  v1[253] = v19;
  v1[255] = v18;
  v1[256] = v17;
  v1[257] = v16;
  v1[258] = v15;
  v1[259] = v14;
  LODWORD(STACK[0x9CC]) = v13;
  v1[260] = v12;
  LODWORD(STACK[0x9DC]) = v10;
  v1[261] = v9;
  v1[264] = v8;
  v1[266] = v7;
  LODWORD(STACK[0x9FC]) = v6;
  v1[267] = v5;
  LODWORD(STACK[0xA44]) = v4;
  LODWORD(STACK[0xA50]) = v3;
  v1[490] = v26;
  v1[473] = v25;
  v1[474] = v24;
  v1[476] = v23;
  v1[478] = v22;
  v1[479] = v21;
  LODWORD(STACK[0x10BC]) = v20;
  v1[480] = v19;
  v1[482] = v18;
  v1[483] = v17;
  v1[484] = v16;
  v1[485] = v15;
  v1[487] = v14;
  LODWORD(STACK[0x10E4]) = v13;
  v1[488] = v12;
  LODWORD(STACK[0x10F4]) = v11;
  LODWORD(STACK[0x1114]) = v10;
  v1[489] = v9;
  v1[492] = v8;
  v1[494] = v7;
  LODWORD(STACK[0x113C]) = v6;
  v1[495] = v5;
  LODWORD(STACK[0x1164]) = v4;
  LODWORD(STACK[0x1170]) = v3;
  v1[622] = v26;
  v1[605] = v25;
  v1[606] = v24;
  v1[608] = v23;
  v1[610] = v22;
  v1[611] = v21;
  LODWORD(STACK[0x14D4]) = v20;
  v1[612] = v19;
  v1[614] = v18;
  v1[615] = v17;
  v1[616] = v16;
  v1[617] = v15;
  v1[619] = v14;
  LODWORD(STACK[0x1504]) = v13;
  v1[620] = v12;
  LODWORD(STACK[0x1514]) = v11;
  LODWORD(STACK[0x1534]) = v10;
  v1[621] = v9;
  v1[624] = v8;
  v1[626] = v7;
  LODWORD(STACK[0x155C]) = v6;
  v1[627] = v5;
  LODWORD(STACK[0x1584]) = v3;
  return v15();
}

uint64_t sub_1A2766158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57)
{
  int v57;
  uint64_t v58;

  return ((uint64_t (*)(void))(*(_QWORD *)(v58
                                        + 8 * (int)(((a57 == 1) * ((v57 - 683947196) & 0xABFFF6F8 ^ (a7 + 7))) ^ v57))
                            - 4))();
}

uint64_t sub_1A27661A0@<X0>(int a1@<W8>)
{
  unint64_t v1;
  unint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 4304) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v3 + a1 + 385) ^ (2625 * (v1 > v2)))) - 4))();
}

uint64_t sub_1A27661CC()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  unsigned __int8 *v4;
  uint64_t (*v5)(void);

  v3[580] = v1[510];
  v3[563] = v1[509];
  v3[564] = v1[508];
  v3[566] = v1[507];
  v3[568] = v1[505];
  v3[569] = v1[503];
  LODWORD(STACK[0x138C]) = STACK[0x273C];
  v3[570] = v1[502];
  v3[572] = v1[500];
  v3[573] = v1[499];
  v3[574] = v1[498];
  v3[575] = v1[511];
  v3[577] = v1[497];
  LODWORD(STACK[0x13B4]) = STACK[0x272C];
  v3[578] = v1[495];
  LODWORD(STACK[0x13C4]) = STACK[0x2714];
  LODWORD(STACK[0x13E4]) = STACK[0x26EC];
  v3[579] = v1[492];
  v3[582] = v1[512];
  v3[593] = *(_QWORD *)(v4 + 1);
  LODWORD(STACK[0x140C]) = 1718210905;
  v3[584] = v1[494];
  LODWORD(STACK[0x1434]) = STACK[0x26D4];
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((*v4 * (((v0 + 1034) | 0x68) - 1510)) ^ (v0 + 714))) - 4);
  LODWORD(STACK[0x1440]) = 1718210905;
  return v5();
}

uint64_t sub_1A27662B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t (*a31)(_QWORD, uint64_t),uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  _QWORD *v55;
  int v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(void);

  v59 = a31(*(_QWORD *)(v58 + 1), 2241923698);
  *(_QWORD *)(v58 + 9) = v59;
  v57[557] = v55[510];
  v57[540] = v55[509];
  v57[541] = v55[508];
  v57[543] = v55[507];
  v57[545] = v55[505];
  v57[546] = v55[503];
  LODWORD(STACK[0x12C4]) = STACK[0x273C];
  v57[547] = v55[502];
  v57[549] = v55[500];
  v57[550] = v55[499];
  v57[551] = v55[498];
  v57[552] = v55[511];
  v57[554] = v55[497];
  LODWORD(STACK[0x12FC]) = STACK[0x272C];
  v57[555] = v55[495];
  LODWORD(STACK[0x130C]) = STACK[0x2714];
  LODWORD(STACK[0x132C]) = STACK[0x26EC];
  v57[556] = v55[492];
  v57[559] = v55[512];
  v57[561] = *(_QWORD *)(v58 + 1);
  LODWORD(STACK[0x1354]) = 1718253555;
  v57[562] = 0;
  LODWORD(STACK[0x137C]) = STACK[0x26D4];
  v60 = (uint64_t (*)(void))(*(_QWORD *)(a55 + 8 * (((2 * (v59 == 0)) | (4 * (v59 == 0))) ^ v56))
                          - ((v56 - 1257) | 8u)
                          + 260);
  LODWORD(STACK[0x1388]) = 1718210903;
  return v60();
}

uint64_t sub_1A27663D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  int v44;
  uint64_t (*v45)(void);

  v7 = ((_DWORD)v2 - 1046131634) & 0x3E5ABBBF;
  v8 = **(_QWORD **)(v0 + 3936);
  v9 = (**(unsigned int **)(v0 + 4096) ^ 0xB9F8D9F6EF64FBFDLL)
     + 0x5F7FB7FF7CDB7FF0
     + ((2 * **(unsigned int **)(v0 + 4096)) & 0x1DEC9F7FALL);
  v10 = (v9 ^ (v7 + 0x28AC7EE5C3BFBBB4)) & (2 * (v9 & 0x993BF8413)) ^ v9 & 0x993BF8413;
  v11 = *(_QWORD *)(v3 + 8 * v2);
  *(_QWORD *)(v0 + 312) = *(_QWORD *)(v0 + 4080);
  v12 = ((2 * (v9 ^ 0x28AC7EE4E2FCC4EELL)) ^ 0x1054211AE28681FALL) & (v9 ^ 0x28AC7EE4E2FCC4EELL) ^ (2
                                                                                                  * (v9 ^ 0x28AC7EE4E2FCC4EELL)) & 0x4229102D714340FCLL;
  v13 = *(_QWORD *)(v0 + 4064);
  *(_QWORD *)(v0 + 328) = *(_QWORD *)(v0 + 4072);
  *(_QWORD *)(v0 + 336) = v13;
  v14 = (v12 ^ 0x48400200D8) & (4 * v10) ^ v10;
  *(_QWORD *)(v0 + 352) = *(_QWORD *)(v0 + 4056);
  v15 = *(_QWORD *)(v0 + 4024);
  *(_QWORD *)(v0 + 368) = *(_QWORD *)(v0 + 4040);
  *(_QWORD *)(v0 + 376) = v15;
  v16 = ((4 * (v12 ^ 0x4229102511414005)) ^ 0x38AC43B5C50D03F4) & (v12 ^ 0x4229102511414005) ^ (4 * (v12 ^ 0x4229102511414005)) & 0xCE2B10ED714340FCLL;
  LODWORD(STACK[0x18C4]) = STACK[0x273C];
  *(_QWORD *)(v0 + 384) = *(_QWORD *)(v0 + 4016);
  v17 = (v16 ^ 0x82800A5410100F0) & (16 * v14) ^ v14;
  v18 = *(_QWORD *)(v0 + 3992);
  *(_QWORD *)(v0 + 400) = *(_QWORD *)(v0 + 4000);
  *(_QWORD *)(v0 + 408) = v18;
  v19 = *(_QWORD *)(v0 + 4088);
  v20 = ((16 * (v16 ^ 0xC603104830424009)) ^ 0xE2B10ED714340FD0) & (v16 ^ 0xC603104830424009) ^ (16 * (v16 ^ 0xC603104830424009)) & 0xCE2B10ED714340F0;
  *(_QWORD *)(v0 + 416) = *(_QWORD *)(v0 + 3984);
  *(_QWORD *)(v0 + 424) = v19;
  v21 = *(_QWORD *)(v0 + 3976);
  v22 = (v20 ^ 0xC22100C510000000) & (v17 << 8) ^ v17;
  LODWORD(STACK[0x18D4]) = STACK[0x272C];
  *(_QWORD *)(v0 + 440) = v11;
  *(_QWORD *)(v0 + 448) = v21;
  v23 = *(_QWORD *)(v0 + 3960);
  v24 = (((v20 ^ 0xC0A10286143402DLL) << 8) ^ 0x2B10ED714340FD00) & (v20 ^ 0xC0A10286143402DLL) ^ ((v20 ^ 0xC0A10286143402DLL) << 8) & 0xCE2B10ED71434000;
  LODWORD(STACK[0x18F4]) = STACK[0x2714];
  v25 = (v24 ^ 0xA00006141400000) & (v22 << 16);
  LODWORD(STACK[0x191C]) = STACK[0x26EC];
  v26 = v24 & 0x1041404100000000 ^ v22;
  v27 = *(_QWORD *)(v0 + 3936);
  *(_QWORD *)(v0 + 456) = v23;
  *(_QWORD *)(v0 + 464) = v27;
  v28 = v9 ^ (2 * (v26 ^ v25)) ^ 0x44E8F333B986803BLL;
  *(_QWORD *)(v0 + 488) = *(_QWORD *)(v0 + 4096);
  *(_QWORD *)(v0 + 472) = *(_QWORD *)(v4 + 1);
  LODWORD(STACK[0x194C]) = v6;
  v29 = *(_QWORD *)(v4 + 9);
  LODWORD(STACK[0x195C]) = STACK[0x26D4];
  *(_QWORD *)(v0 + 520) = v29;
  *(_QWORD *)(v0 + 504) = v29;
  *(_QWORD *)(v0 + 512) = 0x10067F75D0A830F1;
  *(_QWORD *)(v0 + 552) = v8;
  *(_QWORD *)(v0 + 528) = v28;
  v30 = *(_QWORD *)(v0 + 552);
  v1[45] = *(_QWORD *)(v0 + 528);
  v1[46] = v30;
  v31 = *(_QWORD *)(v0 + 520);
  v32 = *(_QWORD *)(v0 + 504);
  v1[47] = *(_QWORD *)(v0 + 512);
  v1[48] = v31;
  LODWORD(STACK[0x2A0C]) = STACK[0x195C];
  v1[50] = v32;
  LODWORD(STACK[0x2A1C]) = STACK[0x194C];
  v33 = *(_QWORD *)(v0 + 488);
  v1[52] = *(_QWORD *)(v0 + 472);
  v1[53] = v33;
  LODWORD(STACK[0x2A44]) = STACK[0x191C];
  LODWORD(STACK[0x2A6C]) = STACK[0x18F4];
  v34 = *(_QWORD *)(v0 + 456);
  v1[54] = *(_QWORD *)(v0 + 464);
  v1[55] = v34;
  *(_DWORD *)(v5 - 244) = STACK[0x18D4];
  v35 = *(_QWORD *)(v0 + 440);
  v37 = *(_QWORD *)(v0 + 416);
  v36 = *(_QWORD *)(v0 + 424);
  v1[57] = *(_QWORD *)(v0 + 448);
  v1[58] = v36;
  v39 = *(_QWORD *)(v0 + 400);
  v38 = *(_QWORD *)(v0 + 408);
  v1[59] = v37;
  v1[60] = v38;
  v40 = *(_QWORD *)(v0 + 384);
  v1[62] = v39;
  v1[63] = v40;
  *(_DWORD *)(v5 - 228) = STACK[0x18C4];
  v41 = *(_QWORD *)(v0 + 368);
  v1[64] = *(_QWORD *)(v0 + 376);
  v1[66] = v41;
  v1[68] = *(_QWORD *)(v0 + 352);
  v42 = v1[46] > (unint64_t)(v1[48] + v1[47] - 0x10067F75D0A830F1);
  v43 = *(_QWORD *)(v0 + 328);
  v1[69] = *(_QWORD *)(v0 + 336);
  v44 = !v42;
  v1[70] = v43;
  v1[71] = *(_QWORD *)(v0 + 312);
  v45 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((v44 * (((v7 - 2134) | 0x435) - 1234)) ^ v7))
                          - (v7 ^ 0x91ELL));
  v1[72] = v35;
  return v45();
}

uint64_t sub_1A27666CC()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);

  v6 = STACK[0x76C];
  LODWORD(STACK[0x1DD4]) = STACK[0x768];
  v1[207] = v4[174];
  LODWORD(STACK[0x1DFC]) = STACK[0x75C];
  v1[206] = v4[173];
  v1[208] = v4[171];
  v1[209] = v4[168];
  v7 = STACK[0x734];
  LODWORD(STACK[0x1E1C]) = STACK[0x70C];
  v1[211] = v4[167];
  LODWORD(STACK[0x1E3C]) = STACK[0x6EC];
  v1[212] = v4[166];
  v1[213] = v4[164];
  v1[215] = v4[163];
  v8 = v4[162];
  v1[216] = v4[161];
  v1[217] = v4[159];
  v9 = STACK[0x6DC];
  LODWORD(STACK[0x1E4C]) = STACK[0x6DC];
  v10 = v4[158];
  v11 = v4[157];
  v1[219] = v11;
  v12 = v4[155];
  v1[221] = v12;
  v13 = v4[153];
  v14 = v4[152];
  v1[222] = v14;
  v15 = v4[169];
  v1[223] = v15;
  v4[192] = v15;
  v4[175] = v14;
  v4[176] = v13;
  v4[178] = v12;
  v4[180] = v11;
  v4[181] = v10;
  LODWORD(STACK[0x794]) = v9;
  v4[182] = v1[217];
  v4[184] = v1[216];
  v4[185] = v8;
  v4[186] = v1[215];
  v4[187] = v1[213];
  v4[189] = v1[212];
  LODWORD(STACK[0x7A4]) = STACK[0x1E3C];
  v4[190] = v1[211];
  LODWORD(STACK[0x7C4]) = STACK[0x1E1C];
  LODWORD(STACK[0x7EC]) = v7;
  v4[191] = v1[209];
  v4[194] = v1[208];
  v4[197] = v1[206];
  LODWORD(STACK[0x814]) = STACK[0x1DFC];
  v4[198] = v1[207];
  LODWORD(STACK[0x820]) = STACK[0x1DD4];
  v16 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1543 * (v6 == ((v2 + v0 - 84) ^ (v5 - 291)))) ^ (v2 + v0 - 84)))
                          - 4);
  LODWORD(STACK[0x824]) = v6;
  return v16();
}

void sub_1A2766848(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 + 8 * a1);
  v3[458] = v1[223];
  v3[453] = v1[222];
  v3[454] = v1[221];
  v3[456] = v1[219];
  LODWORD(STACK[0x101C]) = STACK[0x1E4C];
  v3[457] = v1[217];
  v3[460] = v1[216];
  v3[467] = v4 + (a1 + 724) - 1019;
  v3[461] = v1[215];
  v3[462] = v1[213];
  v3[464] = v1[212];
  LODWORD(STACK[0x1044]) = STACK[0x1E3C];
  v3[465] = v1[211];
  LODWORD(STACK[0x1064]) = STACK[0x1E1C];
  v3[466] = v1[209];
  v3[469] = v1[208];
  v3[471] = v1[206];
  LODWORD(STACK[0x1084]) = STACK[0x1DFC];
  v3[472] = v1[207];
  LODWORD(STACK[0x10AC]) = STACK[0x1DD4];
  JUMPOUT(0x1A2764A34);
}

uint64_t sub_1A27668FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  int v13;

  LODWORD(STACK[0x1E84]) = STACK[0x824];
  LODWORD(STACK[0x1E94]) = STACK[0x820];
  *(_QWORD *)(v8 + 1792) = v11[198];
  LODWORD(STACK[0x1EBC]) = STACK[0x814];
  *(_QWORD *)(v8 + 1808) = v11[197];
  *(_QWORD *)(v8 + 1800) = v11[194];
  *(_QWORD *)(v8 + 1824) = v11[191];
  LODWORD(STACK[0x1EE4]) = STACK[0x7EC];
  LODWORD(STACK[0x1F04]) = STACK[0x7C4];
  *(_QWORD *)(v8 + 1848) = v11[190];
  LODWORD(STACK[0x1F14]) = STACK[0x7A4];
  *(_QWORD *)(v8 + 1856) = v11[189];
  *(_QWORD *)(v8 + 1864) = v11[187];
  *(_QWORD *)(v8 + 1880) = v11[186];
  *(_QWORD *)(v8 + 1888) = v11[185];
  *(_QWORD *)(v8 + 1896) = v11[184];
  *(_QWORD *)(v8 + 1904) = v11[182];
  LODWORD(STACK[0x1F38]) = STACK[0x794];
  *(_QWORD *)(v8 + 1920) = v11[181];
  *(_QWORD *)(v8 + 1928) = v11[180];
  *(_QWORD *)(v8 + 1936) = v11[178];
  *(_QWORD *)(v8 + 1952) = v11[176];
  *(_QWORD *)(v8 + 1968) = v11[175];
  v13 = (*(unsigned __int8 *)(v8 + 601) | *(_BYTE *)(v8 + 602) & 1 | (LODWORD(STACK[0x1E84]) != ((v9 + v7 - 344) ^ (v12 - 7))))
      * (v7 ^ a7 ^ 0x2F);
  *(_QWORD *)(v8 + 1840) = v11[192];
  return (*(uint64_t (**)(void))(v10 + 8 * (v13 ^ (v9 + v7 + 347))))();
}

uint64_t sub_1A2766A0C@<X0>(unsigned int a1@<W6>, int a2@<W8>)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  BOOL v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t (*v14)(void);

  v5 = STACK[0x1E84];
  v6 = LODWORD(STACK[0x1E84]) == 1718253555;
  v7 = STACK[0x1E94];
  LODWORD(STACK[0x90C]) = STACK[0x1E94];
  v4[222] = v2[224];
  v8 = STACK[0x1EBC];
  LODWORD(STACK[0x91C]) = STACK[0x1EBC];
  v4[239] = v2[226];
  v4[223] = v2[225];
  v4[225] = v2[228];
  v9 = STACK[0x1EE4];
  LODWORD(STACK[0x93C]) = STACK[0x1EE4];
  v10 = STACK[0x1F04];
  LODWORD(STACK[0x964]) = STACK[0x1F04];
  v4[227] = v2[231];
  v11 = STACK[0x1F14];
  LODWORD(STACK[0x98C]) = STACK[0x1F14];
  v4[228] = v2[232];
  v4[229] = v2[233];
  v4[231] = v2[235];
  v4[232] = v2[236];
  v4[233] = v2[237];
  v4[234] = v2[238];
  v12 = STACK[0x1F38];
  LODWORD(STACK[0x99C]) = STACK[0x1F38];
  v4[236] = v2[240];
  v4[237] = v2[241];
  v4[238] = v2[242];
  v4[241] = v2[244];
  v4[245] = v2[246];
  v4[244] = v2[230];
  LODWORD(STACK[0xBC0]) = v7;
  v4[315] = v2[224];
  LODWORD(STACK[0xBC4]) = v8;
  v4[332] = v2[226];
  v4[316] = v2[225];
  v4[317] = v2[228];
  LODWORD(STACK[0xBD4]) = v9;
  LODWORD(STACK[0xBFC]) = v10;
  v4[319] = v2[231];
  LODWORD(STACK[0xC1C]) = v11;
  v4[320] = v2[233];
  v4[321] = v2[235];
  v4[323] = v2[236];
  v4[324] = v2[237];
  v4[325] = v2[238];
  v13 = v6;
  LODWORD(STACK[0xC3C]) = v12;
  v4[327] = v2[240];
  v4[329] = v2[241];
  v4[330] = v2[242];
  v4[331] = v2[244];
  v4[333] = v2[246];
  v4[337] = v2[230];
  v4[335] = v2[232];
  v14 = (uint64_t (*)(void))(2201732337
                          - (a2 ^ a1)
                          + *(_QWORD *)(v3 + 8 * ((v13 * (((a2 + 596) | 0x188) ^ 0x6E5)) ^ a2))
                          - 9);
  LODWORD(STACK[0xC4C]) = v5;
  return v14();
}

uint64_t sub_1A2766BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  int v64;
  _QWORD *v65;
  int v66;
  uint64_t v67;
  _QWORD *v68;
  unsigned int v69;
  unint64_t v70;
  uint64_t (*v71)(void);

  v65[247] = a64;
  v69 = *(_DWORD *)(a64 + 12);
  v65[248] = a64 + 12;
  v70 = (v69 ^ 0x797FF5DFF1AE5EEBLL) + v65[72] + ((2 * v69) & 0x1E35CBDD6);
  v65[249] = v70;
  LODWORD(STACK[0xBC0]) = STACK[0x1E94];
  v68[315] = v65[224];
  LODWORD(STACK[0xBC4]) = STACK[0x1EBC];
  v68[332] = v65[226];
  v68[316] = v65[225];
  v68[317] = v65[228];
  LODWORD(STACK[0xBD4]) = STACK[0x1EE4];
  LODWORD(STACK[0xBFC]) = STACK[0x1F04];
  v68[319] = v65[231];
  LODWORD(STACK[0xC1C]) = STACK[0x1F14];
  v68[320] = v65[233];
  v68[321] = v65[235];
  v68[323] = v65[236];
  v68[324] = v65[248];
  v68[325] = v65[238];
  LODWORD(STACK[0xC3C]) = STACK[0x1F38];
  v68[327] = v65[240];
  v68[329] = v65[241];
  v68[330] = v65[247];
  v68[331] = v65[244];
  v68[333] = v65[246];
  v68[337] = v65[230];
  v68[335] = v65[232];
  v71 = (uint64_t (*)(void))(*(_QWORD *)(v67 + 8 * ((2425 * (v70 < 0xFFFFFFFB)) ^ v64))
                          - (v66
                           + ((v64 - 1954818852) & 0xF7BFEFF4)
                           - 294)
                          + 73);
  LODWORD(STACK[0xC4C]) = 1718210905;
  return v71();
}

uint64_t sub_1A2766D4C@<X0>(int a1@<W6>, int a2@<W8>)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _BOOL4 v10;

  v5 = v2[247];
  v6 = *(unsigned int *)(v5 + 8);
  v7 = v2[249];
  v4[216] = v2[230];
  v8 = (v6 ^ 0xFDFFFB8FDBF76FEFLL) + 0x2000470B3EDE18DLL + ((2 * v6) & 0x1B7EEDFDELL);
  v4[199] = v2[246];
  v10 = v8 > 0x8FE5517B && v7 + ((a1 + a2 - 80) ^ 0xCDE9570uLL) > v8;
  v4[200] = v2[244];
  v4[202] = v5;
  v4[204] = v2[241];
  v4[205] = v2[240];
  LODWORD(STACK[0x828]) = STACK[0x1F38];
  v4[206] = v2[238];
  v4[208] = v2[248];
  v4[209] = v2[236];
  v4[210] = v2[235];
  v4[211] = v2[233];
  v4[213] = v2[232];
  LODWORD(STACK[0x82C]) = STACK[0x1F14];
  v4[214] = v2[231];
  LODWORD(STACK[0x854]) = STACK[0x1F04];
  LODWORD(STACK[0x864]) = STACK[0x1EE4];
  v4[215] = v2[228];
  v4[218] = v2[225];
  v4[220] = v2[226];
  LODWORD(STACK[0x884]) = STACK[0x1EBC];
  v4[221] = v2[224];
  LODWORD(STACK[0x8AC]) = STACK[0x1E94];
  LODWORD(STACK[0x8D4]) = 1718253555;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2219 * v10) ^ a2)) - 8))();
}

void sub_1A2766EA8(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 + 8 * a1);
  v3[524] = v1[230];
  v3[519] = v1[246];
  v3[520] = v1[244];
  v3[522] = v1[247];
  v3[525] = v1[241];
  v3[526] = v1[240];
  LODWORD(STACK[0x122C]) = STACK[0x1F38];
  v3[528] = v1[238];
  v3[529] = v1[248];
  v3[530] = v1[236];
  v3[531] = v1[235];
  v3[537] = v4 + ((a1 + 1089504187) | 0x20D0982u) - 1123913110;
  v3[533] = v1[232];
  LODWORD(STACK[0x1254]) = STACK[0x1F14];
  v3[534] = v1[231];
  LODWORD(STACK[0x1264]) = STACK[0x1F04];
  LODWORD(STACK[0x1284]) = STACK[0x1EE4];
  v3[536] = v1[224];
  LODWORD(STACK[0x12AC]) = STACK[0x1E94];
  LODWORD(STACK[0x12C0]) = STACK[0x19CC];
  v3[539] = v1[247];
  JUMPOUT(0x1A2765F18);
}

uint64_t sub_1A2766F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  _QWORD *v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  int v12;
  uint64_t (*v13)(void);

  v12 = STACK[0x8D4];
  LODWORD(STACK[0x1F3C]) = STACK[0x8AC];
  v7[251] = v10[221];
  LODWORD(STACK[0x1F4C]) = STACK[0x884];
  v7[253] = v10[220];
  v7[254] = v10[218];
  v7[255] = v10[215];
  LODWORD(STACK[0x1F74]) = STACK[0x864];
  LODWORD(STACK[0x1F9C]) = STACK[0x854];
  v7[256] = v10[214];
  LODWORD(STACK[0x1FBC]) = STACK[0x82C];
  v7[258] = v10[213];
  v7[259] = v10[211];
  v7[260] = v10[210];
  v7[261] = v10[209];
  v7[263] = v10[208];
  v7[264] = v10[206];
  LODWORD(STACK[0x1FCC]) = STACK[0x828];
  v7[265] = v10[205];
  v7[267] = v10[204];
  v7[269] = v10[202];
  v7[270] = v10[200];
  v7[271] = v10[199];
  v7[272] = v10[216];
  LODWORD(STACK[0xBC0]) = STACK[0x1F3C];
  v10[315] = v7[251];
  LODWORD(STACK[0xBC4]) = STACK[0x1F4C];
  v10[332] = v7[253];
  v10[316] = v7[254];
  v10[317] = v7[255];
  LODWORD(STACK[0xBD4]) = STACK[0x1F74];
  LODWORD(STACK[0xBFC]) = STACK[0x1F9C];
  v10[319] = v7[256];
  LODWORD(STACK[0xC1C]) = STACK[0x1FBC];
  v10[320] = v7[259];
  v10[321] = v7[260];
  v10[323] = v7[261];
  v10[324] = v7[263];
  v10[325] = v7[264];
  LODWORD(STACK[0xC3C]) = STACK[0x1FCC];
  v10[327] = v7[265];
  v10[329] = v7[267];
  v10[330] = v7[269];
  v10[331] = v7[270];
  v10[333] = v7[271];
  v10[337] = v7[272];
  v10[335] = v7[258];
  v13 = (uint64_t (*)(void))(*(_QWORD *)(v9
                                      + 8 * ((2368 * (v12 == 3 * (v11 ^ (a7 + 108)) + 1718252274)) | (v8 + v11 - 344)))
                          - 8);
  LODWORD(STACK[0xC4C]) = v12;
  return v13();
}

uint64_t sub_1A276714C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _DWORD *v5;
  unsigned int v6;
  uint64_t (*v7)(void);

  v4 = **(_QWORD **)(v1 + 2152);
  v5 = *(_DWORD **)(v1 + 2104);
  v6 = ((2 * *v5) & 0xDDFF6AFA) + (*v5 ^ 0xEEFFB57D);
  *(_BYTE *)(v4 + a1 + 285230466 + v6) = *(_BYTE *)(v1 + 592);
  *(_BYTE *)(v4 + v6 + 285231748) = *(_BYTE *)(v1 + 593);
  *(_BYTE *)(v4 + v6 + 285231749) = *(_BYTE *)(v1 + 594);
  *(_BYTE *)(v4 + v6 + (a1 ^ 0x11004F87)) = *(_BYTE *)(v1 + 595);
  LODWORD(v4) = *v5 + 4;
  LODWORD(STACK[0x1FF0]) = v4;
  *v5 = v4;
  LODWORD(STACK[0x90C]) = STACK[0x1F3C];
  v3[222] = *(_QWORD *)(v1 + 2008);
  LODWORD(STACK[0x91C]) = STACK[0x1F4C];
  v3[239] = *(_QWORD *)(v1 + 2024);
  v3[223] = *(_QWORD *)(v1 + 2032);
  v3[225] = *(_QWORD *)(v1 + 2040);
  LODWORD(STACK[0x93C]) = STACK[0x1F74];
  LODWORD(STACK[0x964]) = STACK[0x1F9C];
  v3[227] = *(_QWORD *)(v1 + 2048);
  LODWORD(STACK[0x98C]) = STACK[0x1FBC];
  v3[228] = *(_QWORD *)(v1 + 2064);
  v3[229] = *(_QWORD *)(v1 + 2072);
  v3[231] = *(_QWORD *)(v1 + 2080);
  v3[232] = *(_QWORD *)(v1 + 2088);
  v3[233] = *(_QWORD *)(v1 + 2104);
  v3[234] = *(_QWORD *)(v1 + 2112);
  LODWORD(STACK[0x99C]) = STACK[0x1FCC];
  v3[236] = *(_QWORD *)(v1 + 2120);
  v3[237] = *(_QWORD *)(v1 + 2136);
  v3[238] = *(_QWORD *)(v1 + 2152);
  v3[241] = *(_QWORD *)(v1 + 2160);
  v3[245] = *(_QWORD *)(v1 + 2168);
  v7 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((81 * ((*(_BYTE *)(v1 + 611) & 1) == 0)) ^ a1)) - 8);
  v3[244] = *(_QWORD *)(v1 + 2176);
  return v7();
}

uint64_t sub_1A27672C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,_DWORD *a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  uint64_t v56;
  int v57;
  uint64_t *v58;
  int v59;
  _DWORD *v60;
  int v61;
  unsigned int v62;
  uint64_t v63;
  unsigned int v64;
  unsigned int v65;
  _BOOL4 v66;

  v57 = STACK[0x1FF0];
  LODWORD(STACK[0x8E0]) = STACK[0x1FF0];
  LODWORD(STACK[0x8E4]) = 1577564603;
  v58 = *(uint64_t **)(v56 + 2152);
  v59 = (v55 - 634747929) | 0x404;
  v60 = *(_DWORD **)(v56 + 2104);
  v61 = *(unsigned __int8 *)(v56 + 603);
  v62 = STACK[0x19C4];
  v63 = *v58;
  v64 = *a49 - 537762601 - ((2 * *a49) & 0xBFE4C9AE);
  v65 = ((2 * v57) & 0xDEF63BB2) + (v57 ^ 0xEF7B1DD9) + 277144103;
  *(_BYTE *)(*v58 + v65) = (v64 >> ((v59 + 18) ^ 0xEE)) ^ 0xDF;
  *(_BYTE *)(v63 + v65 + 1) = BYTE2(v64) ^ 0xF2;
  *(_BYTE *)(v63 + v65 + 2) = ((BYTE1(v64) ^ 0x64) - ((2 * (BYTE1(v64) ^ 0x64)) & 0x96) + 75) ^ 0x4B;
  *(_BYTE *)(v63 + v65 + 3) = v64 ^ 0xD7;
  *v60 += 4;
  v66 = v62 > 0x9DE26ADE;
  if (v61)
    v66 = v61;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a55 + 8 * ((3281 * !v66) ^ v59)) - 8))(150);
}

uint64_t sub_1A27674CC@<X0>(int a1@<W6>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void (*a19)(uint64_t), void (*a20)(uint64_t),uint64_t (*a21)(uint64_t),int *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,uint64_t a34,int a35,int a36,int a37,int a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  uint64_t v60;
  int v61;
  _QWORD *v62;
  int v63;
  _QWORD *v64;
  uint64_t v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unint64_t v69;
  int v70;
  unint64_t v71;
  unint64_t v72;
  int v73;
  int v74;
  uint64_t v75;

  LODWORD(STACK[0x8E4]) = v61;
  LODWORD(STACK[0x8E0]) = v63;
  LODWORD(STACK[0x90C]) = a48;
  v64[222] = a47;
  LODWORD(STACK[0x91C]) = a42;
  v64[239] = a41;
  v64[223] = a40;
  v64[225] = a39;
  LODWORD(STACK[0x93C]) = a38;
  LODWORD(STACK[0x964]) = a35;
  v64[227] = a34;
  LODWORD(STACK[0x98C]) = a33;
  v64[228] = a32;
  v64[229] = a31;
  v64[231] = a30;
  v64[232] = a29;
  v64[233] = v60;
  v64[234] = a28;
  LODWORD(STACK[0x99C]) = a27;
  v64[236] = a26;
  v64[237] = a24;
  v64[238] = a2;
  v64[241] = a5;
  v64[245] = a4;
  v64[244] = a3;
  v62[276] = v64[244];
  v66 = (((a1 - 1546403067) & 0x88CC57FF) - 12588036) & 0x83FBD4F8;
  v62[274] = v64[245];
  v62[277] = v64[241];
  v62[278] = v64[238];
  v62[279] = v64[237];
  v62[281] = v64[236];
  LODWORD(STACK[0x1FF4]) = STACK[0x99C];
  v62[282] = v64[234];
  v62[283] = v64[233];
  v62[284] = v64[232];
  v62[286] = v64[231];
  v62[287] = v64[229];
  v62[288] = v64[228];
  LODWORD(STACK[0x2004]) = STACK[0x98C];
  v62[290] = v64[227];
  LODWORD(STACK[0x202C]) = STACK[0x964];
  LODWORD(STACK[0x2054]) = STACK[0x93C];
  v62[292] = v64[225];
  v62[293] = v64[223];
  v62[295] = v64[239];
  LODWORD(STACK[0x2074]) = STACK[0x91C];
  v62[294] = v64[222];
  LODWORD(STACK[0x2084]) = STACK[0x90C];
  v62[296] = a60;
  v67 = (a1 - 1546403067) & 0x88CC57FF;
  a20(a23);
  v68 = *a22;
  v69 = *(_QWORD *)a60;
  v70 = *(_DWORD *)(a60 + 12);
  v62[297] = a60 + 12;
  v71 = v62[70];
  v72 = v62[77];
  v73 = 932829133 * ((((2 * (v65 - 136)) | 0xA50EA1B4) - (v65 - 136) + 762883878) ^ 0x72CC0D57);
  STACK[0x2AF8] = v69;
  STACK[0x2B10] = v72;
  *(_DWORD *)(v65 - 128) = -532470131 - v73 + v70 - ((2 * v70) & 0xC0864D1A);
  *(_DWORD *)(v65 - 120) = (v67 + 430) ^ v73;
  STACK[0x2B18] = v71;
  *(_DWORD *)(v65 - 116) = 1017140188 - v73 + 1793297355 * v68;
  a19(v65 - 136);
  v74 = *(_DWORD *)(v65 - 124);
  v75 = a21(a23);
  LODWORD(STACK[0x9A0]) = v74;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a51 + 8 * (int)((2043 * (v74 == (v66 ^ 0xF06B0A4C))) ^ v67))
                                          - 4))(v75);
}

uint64_t sub_1A2767790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int *a16, uint64_t a17, void (*a18)(uint64_t), uint64_t (*a19)(_QWORD, uint64_t, uint64_t), uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  int v63;
  unint64_t v64;
  int v65;
  unsigned int v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v70;

  v61 = v58 - 553;
  v70 = v58 - 553;
  v62 = *(_QWORD *)(a55 + 8 * v70);
  v63 = v58 - 822707496;
  v64 = 2106769199 * (((~v57 | 0xF2030A2DBB24B3DCLL) + (v57 | 0xDFCF5D244DB4C23)) ^ 0x4DED4DBC2B276717);
  *(_QWORD *)(v55 + 648) = v59;
  *(_QWORD *)(v55 + 632) = v64 + v62 - 8;
  *(_DWORD *)(v60 - 128) = v58 - 822707496 - v64;
  a18(v60 - 136);
  v65 = a19(*a16, a17, v56);
  v66 = ((2 * v65) & 0xFEDCFFF6) + ((((v58 - 553) ^ 0x229) - 2093235979) ^ v65 ^ 0xFC55BB0B);
  v67 = 2106769199 * (((~v57 | 0xA8C80291AB73A44) + (v57 | 0xF5737FD6E548C5BBLL)) ^ 0xB562C7B88AB4EE8FLL);
  *(_QWORD *)(v55 + 632) = v67 + *(_QWORD *)(a55 + 8 * (v70 ^ 0x43)) - 8;
  *(_QWORD *)(v55 + 648) = a29;
  *(_DWORD *)(v60 - 128) = v63 - v67;
  v68 = ((uint64_t (*)(uint64_t))a18)(v60 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a55 + 8 * (v61 ^ 0x237 ^ (1086 * (v66 == 2137948155)))) - 4))(v68);
}

uint64_t sub_1A276793C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void (*a25)(uint64_t),void (*a26)(uint64_t),uint64_t (*a27)(uint64_t),int *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  unint64_t v58;
  unint64_t v59;
  int v60;
  unsigned int v61;
  int v62;
  uint64_t v63;

  v56 = a51 ^ (a7 + 540);
  a26(v53);
  v57 = *a28;
  v58 = *(_QWORD *)(v51 + 560);
  v59 = *(_QWORD *)(v51 + 616);
  v60 = 932829133 * ((((2 * (v55 - 136)) | 0xB0EEFF3C) - (v55 - 136) - 1484226462) ^ 0xF83C2213);
  v61 = -532470131 - v60 + **(_DWORD **)(v51 + 2376) - ((**(_DWORD **)(v51 + 2376) << (v56 ^ 0xF1)) & 0xC0864D1A);
  STACK[0x2AF8] = **(_QWORD **)(v51 + 2368);
  STACK[0x2B18] = v58;
  STACK[0x2B10] = v59;
  *(_DWORD *)(v55 - 116) = 1017140188 - v60 + 1793297355 * v57;
  *(_DWORD *)(v55 - 128) = v61;
  *(_DWORD *)(v55 - 120) = (a51 + 430) ^ v60;
  a25(v55 - 136);
  v62 = *(_DWORD *)(v55 - 124);
  v63 = a27(v53);
  LODWORD(STACK[0x9A0]) = v62;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v54 + 8 * ((2018 * (v62 == 1666240185)) ^ (v52 + v56 + 622)))
                                          - 4))(v63);
}

uint64_t sub_1A2767A7C()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;
  _QWORD *v3;
  int v4;
  uint64_t (*v5)(void);

  v3[308] = v0[276];
  v3[291] = v0[274];
  v3[292] = v0[277];
  v3[294] = v0[278];
  v3[296] = v0[279];
  v3[297] = v0[281];
  LODWORD(STACK[0xB0C]) = STACK[0x1FF4];
  v3[298] = v0[282];
  v3[300] = v0[283];
  v3[301] = v0[284];
  v3[302] = v0[286];
  v3[303] = v0[287];
  v3[305] = v0[288];
  LODWORD(STACK[0xB34]) = STACK[0x2004];
  v3[306] = v0[290];
  LODWORD(STACK[0xB44]) = STACK[0x202C];
  LODWORD(STACK[0xB64]) = STACK[0x2054];
  v3[307] = v0[292];
  v3[310] = v0[293];
  v3[314] = v0[295];
  LODWORD(STACK[0xB8C]) = STACK[0x2074];
  v3[312] = v0[294];
  v4 = STACK[0x2084];
  LODWORD(STACK[0xBB4]) = STACK[0x2084];
  LODWORD(STACK[0x217C]) = v4;
  v0[323] = v3[312];
  LODWORD(STACK[0x218C]) = STACK[0xB8C];
  v0[325] = v3[314];
  v0[326] = v3[310];
  v0[327] = v3[307];
  LODWORD(STACK[0x21B4]) = STACK[0xB64];
  LODWORD(STACK[0x21DC]) = STACK[0xB44];
  v0[328] = v3[306];
  LODWORD(STACK[0x21FC]) = STACK[0xB34];
  v0[330] = v3[305];
  v0[331] = v3[303];
  v0[332] = v3[302];
  v0[333] = v3[301];
  v0[335] = v3[300];
  v0[336] = v3[298];
  LODWORD(STACK[0x220C]) = STACK[0xB0C];
  v0[337] = v3[297];
  v0[339] = v3[296];
  v0[341] = v3[294];
  v0[342] = v3[292];
  v0[343] = v3[291];
  v0[344] = v3[308];
  LODWORD(STACK[0xBC0]) = STACK[0x217C];
  v3[315] = v0[323];
  LODWORD(STACK[0xBC4]) = STACK[0x218C];
  v3[332] = v0[325];
  v3[316] = v0[326];
  v3[317] = v0[327];
  LODWORD(STACK[0xBD4]) = STACK[0x21B4];
  LODWORD(STACK[0xBFC]) = STACK[0x21DC];
  v3[319] = v0[328];
  LODWORD(STACK[0xC1C]) = STACK[0x21FC];
  v3[320] = v0[331];
  v3[321] = v0[332];
  v3[323] = v0[333];
  v3[324] = v0[335];
  v3[325] = v0[336];
  LODWORD(STACK[0xC3C]) = STACK[0x220C];
  v3[327] = v0[337];
  v3[329] = v0[339];
  v3[330] = v0[341];
  v3[331] = v0[342];
  v3[333] = v0[343];
  v3[337] = v0[344];
  v3[335] = v0[330];
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((v1 - 310823569) & 0x8F4B05BF)) - 8);
  LODWORD(STACK[0xC4C]) = 1718210891;
  return v5();
}

uint64_t sub_1A2767B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * ((2018 * (LODWORD(STACK[0x9A0]) == 1666240185)) ^ (v6 + 2093235957)))
                                                                                                - 4))(a1, a2, a3, a4, a5, a6, 2201732335);
}

void sub_1A2767BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  _QWORD *v7;
  int v8;
  int v9;
  uint64_t v10;
  _QWORD *v11;

  v11[430] = ((5 * (v9 ^ (a7 + 204))) ^ 0xFFFFFFFFFFFFF98BLL) + *(_QWORD *)(v10 + 8 * (v8 + v9 - 184));
  v11[444] = v7[276];
  v11[426] = v7[274];
  v11[427] = v7[277];
  v11[429] = v7[278];
  v11[432] = v7[279];
  v11[433] = v7[281];
  LODWORD(STACK[0xF44]) = STACK[0x1FF4];
  v11[434] = v7[282];
  v11[436] = v7[283];
  v11[437] = v7[284];
  v11[438] = v7[286];
  v11[439] = v7[287];
  v11[441] = v7[288];
  LODWORD(STACK[0xF6C]) = STACK[0x2004];
  v11[442] = v7[290];
  LODWORD(STACK[0xF84]) = STACK[0x202C];
  LODWORD(STACK[0xFA4]) = STACK[0x2054];
  v11[443] = v7[292];
  v11[446] = v7[293];
  v11[451] = v7[295];
  LODWORD(STACK[0xFCC]) = STACK[0x2074];
  v11[448] = v7[294];
  LODWORD(STACK[0xFF4]) = STACK[0x2084];
  JUMPOUT(0x1A2767CA8);
}

uint64_t sub_1A2767DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  _BOOL4 v13;
  uint64_t (*v14)(void);

  LODWORD(STACK[0x20C8]) = STACK[0xA50];
  LODWORD(STACK[0x20CC]) = STACK[0xA44];
  v8[301] = v11[267];
  LODWORD(STACK[0x20DC]) = STACK[0x9FC];
  v8[303] = v11[266];
  v8[304] = v11[264];
  v8[305] = v11[261];
  LODWORD(STACK[0x2124]) = STACK[0x9DC];
  v8[306] = v11[260];
  LODWORD(STACK[0x2144]) = STACK[0x9CC];
  v8[307] = v11[259];
  v8[308] = v11[258];
  v8[309] = v11[257];
  v8[310] = v11[256];
  v8[312] = v11[255];
  v8[313] = v11[253];
  LODWORD(STACK[0x2154]) = STACK[0x9A4];
  v8[314] = v11[252];
  v8[316] = v11[251];
  v8[318] = v11[249];
  v8[319] = v11[247];
  v13 = LODWORD(STACK[0x20C8]) != v12 + 79 * (v7 ^ (a7 + 222) ^ 0x13E) - 237;
  v8[320] = v11[246];
  v14 = (uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((4 * v13) | (8 * v13)) ^ (v9 + v7 + 1199))) - 8);
  v8[321] = v11[262];
  return v14();
}

uint64_t sub_1A2767EF4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,unint64_t a54)
{
  int v54;
  _QWORD *v55;
  int v56;
  uint64_t v57;
  int v58;
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  STACK[0x1740] = a54;
  v58 = STACK[0x20CC];
  LODWORD(STACK[0x173C]) = STACK[0x20CC];
  STACK[0x1758] = v55[301];
  v59 = STACK[0x20DC];
  LODWORD(STACK[0x174C]) = STACK[0x20DC];
  STACK[0x1750] = v55[303];
  STACK[0x1760] = v55[304];
  *v55 = v55[305];
  v60 = STACK[0x2124];
  LODWORD(STACK[0x1774]) = STACK[0x2124];
  v61 = STACK[0x20C8];
  LODWORD(STACK[0x179C]) = STACK[0x20C8];
  v62 = v55[306];
  v63 = STACK[0x2144];
  LODWORD(STACK[0x17B4]) = STACK[0x2144];
  v64 = v55[307];
  v55[2] = v62;
  v55[3] = v64;
  v65 = v55[309];
  v55[4] = v55[308];
  v55[5] = v65;
  v66 = v55[312];
  v55[7] = v55[310];
  v55[8] = v66;
  v55[10] = v55[313];
  LODWORD(v66) = STACK[0x2154];
  LODWORD(STACK[0x17C4]) = STACK[0x2154];
  v67 = v55[318];
  v55[12] = v55[314];
  v55[13] = v67;
  v68 = v55[320];
  v69 = v55[321];
  v55[14] = v55[319];
  v55[15] = v69;
  v55[16] = v68;
  v70 = (a1 + 921) + *(_QWORD *)(v57 + 8 * a1) - 1250;
  STACK[0x1730] = v70;
  v55[18] = v70;
  LODWORD(STACK[0x17F4]) = v58;
  v71 = v55[301];
  LODWORD(STACK[0x1804]) = v59;
  v55[20] = v55[303];
  v55[21] = v71;
  v72 = v55[305];
  v55[22] = v55[304];
  v55[23] = v72;
  LODWORD(STACK[0x182C]) = v60;
  LODWORD(STACK[0x1854]) = v61;
  v73 = v55[306];
  LODWORD(STACK[0x186C]) = v63;
  v74 = v55[307];
  v55[25] = v73;
  v55[26] = v74;
  v75 = v55[309];
  v55[27] = v55[308];
  v55[28] = v75;
  v76 = v55[312];
  v55[30] = v55[310];
  v55[31] = v76;
  v55[33] = v55[313];
  LODWORD(STACK[0x187C]) = v66;
  v77 = v55[318];
  v55[35] = v55[314];
  v55[36] = v77;
  v78 = v55[319];
  v55[40] = v55[320];
  v79 = v55[321];
  v55[37] = v78;
  v55[38] = v79;
  return (*(uint64_t (**)(void))(v57 + 8 * (((a54 == 0) * (v56 + (a1 ^ v54) - 369)) | a1 ^ 0x70D)))();
}

uint64_t sub_1A276807C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,unsigned int a59,uint64_t a60,uint64_t a61,uint64_t *a62)
{
  int v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  unsigned int v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  int v94;
  uint64_t (*v95)(void);

  v68 = v62 + 2089;
  v69 = *a62;
  v70 = a59 - 0x5D906247D5C6FBD8 - (((unint64_t)a59 << (v62 + 20)) & 0x54720850);
  v71 = *(_QWORD *)(v65 + 8 * v62) - 12;
  v63[39] = v63[321];
  v72 = v63[319];
  v63[41] = v63[320];
  v63[42] = v72;
  v63[44] = v63[318];
  v73 = v63[314];
  v63[46] = v63[316];
  v63[47] = v73;
  LODWORD(STACK[0x18C4]) = STACK[0x2154];
  v63[48] = v63[313];
  v74 = v63[310];
  v63[50] = v63[312];
  v63[51] = v74;
  v75 = v63[308];
  v63[52] = v63[309];
  v63[53] = v75;
  v76 = v63[307];
  LODWORD(STACK[0x18D4]) = STACK[0x2144];
  v77 = v63[306];
  v63[55] = v71;
  v63[56] = v76;
  LODWORD(STACK[0x18F4]) = v67;
  LODWORD(STACK[0x191C]) = STACK[0x2124];
  v78 = v63[305];
  v63[57] = v77;
  v63[58] = v78;
  v63[61] = v63[304];
  v63[59] = v63[303];
  LODWORD(STACK[0x194C]) = STACK[0x20DC];
  v79 = v63[301];
  LODWORD(STACK[0x195C]) = STACK[0x20CC];
  v63[65] = v69;
  v63[63] = v79;
  v63[64] = 0x10067F75D0A830F1;
  v63[69] = a60;
  v63[66] = v70;
  v80 = v63[69];
  v64[45] = v63[66];
  v64[46] = v80;
  v81 = v63[65];
  v82 = v63[63];
  v64[47] = v63[64];
  v64[48] = v81;
  LODWORD(STACK[0x2A0C]) = STACK[0x195C];
  v64[50] = v82;
  LODWORD(STACK[0x2A1C]) = STACK[0x194C];
  v83 = v63[61];
  v64[52] = v63[59];
  v64[53] = v83;
  LODWORD(STACK[0x2A44]) = STACK[0x191C];
  LODWORD(STACK[0x2A6C]) = STACK[0x18F4];
  v84 = v63[57];
  v64[54] = v63[58];
  v64[55] = v84;
  *(_DWORD *)(v66 - 244) = STACK[0x18D4];
  v85 = v63[55];
  v87 = v63[52];
  v86 = v63[53];
  v64[57] = v63[56];
  v64[58] = v86;
  v89 = v63[50];
  v88 = v63[51];
  v64[59] = v87;
  v64[60] = v88;
  v90 = v63[48];
  v64[62] = v89;
  v64[63] = v90;
  *(_DWORD *)(v66 - 228) = STACK[0x18C4];
  v91 = v63[46];
  v64[64] = v63[47];
  v64[66] = v91;
  v64[68] = v63[44];
  v92 = v64[46] > (unint64_t)(v64[48] + v64[47] - 0x10067F75D0A830F1);
  v93 = v63[41];
  v64[69] = v63[42];
  v94 = !v92;
  v64[70] = v93;
  v64[71] = v63[39];
  v95 = (uint64_t (*)(void))(*(_QWORD *)(v65 + 8 * (int)((v94 * (((v68 - 2134) | 0x435) - 1234)) ^ v68))
                          - (v68 ^ 0x91ELL));
  v64[72] = v85;
  return v95();
}

void sub_1A276818C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,unsigned int *a47,void (*a48)(_QWORD, uint64_t, _QWORD),uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,unsigned int a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;

  *(_DWORD *)(a62 + 8) = a59;
  *(_DWORD *)(a62 + 12) = 0;
  v63[285] = v62[71];
  v63[268] = v62[70];
  v63[269] = v62[69];
  v63[271] = v62[68];
  v63[273] = a62;
  v63[274] = v62[64];
  LODWORD(STACK[0xA54]) = *(_DWORD *)(v64 - 228);
  v65 = v62[62];
  v63[275] = v62[63];
  v63[277] = v65;
  v66 = v62[59];
  v63[278] = v62[60];
  v63[279] = v66;
  v67 = v62[57];
  v63[280] = v62[58];
  v63[282] = v67;
  LODWORD(STACK[0xA7C]) = *(_DWORD *)(v64 - 244);
  v68 = v62[54];
  v63[283] = v62[55];
  v69 = STACK[0x2A6C];
  LODWORD(STACK[0xA8C]) = STACK[0x2A6C];
  LODWORD(STACK[0xAAC]) = STACK[0x2A44];
  v63[284] = v68;
  v70 = v62[52];
  v63[287] = v62[53];
  v63[289] = v70;
  LODWORD(STACK[0xAD4]) = STACK[0x2A1C];
  v63[290] = v62[50];
  LODWORD(STACK[0xAFC]) = STACK[0x2A0C];
  LODWORD(STACK[0xB08]) = v69;
  v92 = v63[290];
  v91 = STACK[0xAD4];
  v89 = v63[287];
  v90 = v63[289];
  v88 = v63[284];
  v87 = STACK[0xAAC];
  v86 = STACK[0xA8C];
  v85 = v63[283];
  v84 = STACK[0xA7C];
  v82 = v63[280];
  v83 = v63[282];
  v81 = v63[279];
  v79 = v63[277];
  v80 = v63[278];
  v78 = v63[275];
  v71 = STACK[0xA54];
  v72 = v63[274];
  v73 = v63[273];
  v74 = v63[271];
  v75 = v63[269];
  v76 = v63[268];
  v77 = v63[285];
  a48(*a47, a60, a59);
  v63[308] = v77;
  v63[291] = v76;
  v63[292] = v75;
  v63[294] = v74;
  v63[296] = v73;
  v63[297] = v72;
  LODWORD(STACK[0xB0C]) = v71;
  v63[298] = v78;
  v63[300] = v79;
  v63[301] = v80;
  v63[302] = v81;
  v63[303] = v82;
  v63[305] = v83;
  LODWORD(STACK[0xB34]) = v84;
  v63[306] = v85;
  LODWORD(STACK[0xB44]) = v86;
  LODWORD(STACK[0xB64]) = v87;
  v63[307] = v88;
  v63[310] = v89;
  v63[314] = v90;
  LODWORD(STACK[0xB8C]) = v91;
  v63[312] = v92;
  JUMPOUT(0x1A27683C0);
}

uint64_t sub_1A2768580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60)
{
  int v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  int v68;
  uint64_t v69;
  unint64_t v70;

  v65 = *(_QWORD *)(v62 + 8 * v60);
  v66 = (v60 - 1612159072) & 0x60179C7C;
  LODWORD(STACK[0xC78]) = STACK[0x217C];
  v63[338] = *(_QWORD *)(v61 + 2584);
  LODWORD(STACK[0xC7C]) = STACK[0x218C];
  v63[355] = *(_QWORD *)(v61 + 2600);
  v63[339] = *(_QWORD *)(v61 + 2608);
  v63[340] = *(_QWORD *)(v61 + 2616);
  LODWORD(STACK[0xC8C]) = STACK[0x21B4];
  LODWORD(STACK[0xCB4]) = STACK[0x21DC];
  v63[342] = *(_QWORD *)(v61 + 2624);
  LODWORD(STACK[0xCD4]) = STACK[0x21FC];
  v63[343] = *(_QWORD *)(v61 + 2648);
  v63[344] = *(_QWORD *)(v61 + 2656);
  v63[346] = *(_QWORD *)(v61 + 2664);
  v63[347] = *(_QWORD *)(v61 + 2680);
  v63[348] = *(_QWORD *)(v61 + 2688);
  LODWORD(STACK[0xCF4]) = STACK[0x220C];
  v63[350] = *(_QWORD *)(v61 + 2696);
  v63[352] = *(_QWORD *)(v61 + 2712);
  v63[353] = *(_QWORD *)(v61 + 2728);
  v63[354] = *(_QWORD *)(v61 + 2736);
  v63[356] = *(_QWORD *)(v61 + 2744);
  v63[357] = *(_QWORD *)(v61 + 2752);
  v63[358] = v65 + v66 - 1092;
  v67 = *(_QWORD *)(v61 + 2640);
  v68 = v66 + 471;
  v63[359] = &a60;
  *(_QWORD *)(v61 + 2944) = v63[357];
  *(_QWORD *)(v61 + 2952) = v63[356];
  *(_QWORD *)(v61 + 2960) = v63[354];
  *(_QWORD *)(v61 + 2968) = v63[353];
  *(_QWORD *)(v61 + 2984) = v63[352];
  *(_QWORD *)(v61 + 3000) = v63[350];
  LODWORD(STACK[0x230C]) = STACK[0xCF4];
  *(_QWORD *)(v61 + 3008) = v63[348];
  *(_QWORD *)(v61 + 3016) = v63[347];
  *(_QWORD *)(v61 + 3032) = v63[346];
  *(_QWORD *)(v61 + 3040) = v63[344];
  *(_QWORD *)(v61 + 3048) = v63[343];
  LODWORD(STACK[0x231C]) = STACK[0xCD4];
  *(_QWORD *)(v61 + 3064) = v63[342];
  LODWORD(STACK[0x233C]) = STACK[0xCB4];
  LODWORD(STACK[0x235C]) = STACK[0xC8C];
  v69 = *(_QWORD *)(v61 + 2984);
  *(_QWORD *)(v61 + 3072) = v63[340];
  *(_QWORD *)(v61 + 3080) = v63[339];
  *(_QWORD *)(v61 + 3088) = v63[355];
  LODWORD(STACK[0x2384]) = STACK[0xC7C];
  *(_QWORD *)(v61 + 3104) = v63[338];
  LODWORD(STACK[0x2390]) = STACK[0xC78];
  *(_BYTE *)(v61 + 3119) = v69 == 0;
  *(_QWORD *)(v61 + 3120) = v69 + 12;
  *(_QWORD *)(v61 + 3128) = v69 + 8;
  v70 = v63[358];
  *(_QWORD *)(v64 + 5) = v70;
  *(_QWORD *)(v64 + 13) = &a60;
  STACK[0x28F8] = (unint64_t)&a60;
  STACK[0x2900] = v67;
  STACK[0x2908] = v70;
  *(_BYTE *)(v61 + 591) = 0;
  LODWORD(STACK[0x164C]) = 1718210905;
  return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))(*(_QWORD *)(a55 + 8 * ((90 * (((a7 + v68 + 1) ^ *(_BYTE *)(v61 + 3119)) & 1)) ^ v68))
                                                                                       - 8))(0x1F9FEF3A5, 0x902401C8AC6F7C57, 0x8AE001D4D3E231A5, 25);
}

uint64_t sub_1A2768BB0()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _BOOL4 v8;
  _BOOL4 v9;

  v5 = **(unsigned int **)(v1 + 3120);
  LODWORD(STACK[0x2914]) = v5;
  v6 = (v5 ^ 0x7BDFFFEA4673FFBFLL)
     + ((v4 - v2 - 1180) ^ 0x84200016EE25C14CLL)
     + ((2 * (_DWORD)v5) & 0x8CE7FF7E);
  v7 = (**(unsigned int **)(v1 + 3128) ^ 0xFFF4EFC9E7EEFF2FLL)
     + 0xB1036CBA30648
     + ((2 * **(unsigned int **)(v1 + 3128)) & 0x1CFDDFE5ELL);
  v8 = v6 < 0xB3920577;
  v9 = v6 > v7;
  if (v8 != v7 < 0xB3920577)
    v9 = v8;
  LODWORD(STACK[0x164C]) = 1718210905;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((!v9 * v0) ^ v4)) - 8))();
}

uint64_t sub_1A2768CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;
  char v12;
  int v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  uint64_t (*v21)(void);

  v14 = **(_QWORD **)(v8 + 2984);
  v15 = ((2 * LODWORD(STACK[0x2914])) & 0xADEF5DF6) + (LODWORD(STACK[0x2914]) ^ 0xD6F7AEFB) + 688410885;
  v16 = *(unsigned __int8 *)(v14 + v15 + 1);
  v17 = v16 - ((2 * v16) & 0x13A);
  v18 = *(unsigned __int8 *)(v14 + v15 + 2);
  v19 = (((*(unsigned __int8 *)(v14 + v15)
         - ((*(unsigned __int8 *)(v14 + v15) << (v10 + ((v12 - 33) & 0xFD) - 118)) & 0x16)) << 24)
       - 1962934272) ^ 0x8B000000 | (((v18 + 3338208 - ((2 * v18) & 0xBBBBBBBB)) << 8) - 768) ^ 0x32EFDD00;
  LODWORD(v14) = *(unsigned __int8 *)(v14 + v15 + 3);
  v20 = ((v14 - 285719737 - ((2 * v14) & 0x8E)) ^ 0xE7A74194) & ~(((v17 << 16) - 1902313472) ^ 0x8E9D0000 | v19) | (((v17 << 16) - 1902313472) ^ 0x8E9D0000 | v19) & 0xF6A0FD00;
  **(_DWORD **)(v9 + 120) = (((v20 ^ 0x7F619929) - 1972886616) ^ ((v20 ^ 0x5B2A7D6C) - 1373386781) ^ ((v20 ^ 0x2D14E696) - 669164519))
                          + 1779679125;
  **(_DWORD **)(v8 + 3120) += 4;
  *(_BYTE *)(v8 + 591) = a8;
  LODWORD(STACK[0x164C]) = v13;
  LODWORD(STACK[0x2918]) = STACK[0x164C];
  *(_BYTE *)(v9 + 159) = *(_BYTE *)(v8 + 591);
  LODWORD(STACK[0xBC0]) = STACK[0x2390];
  v11[315] = *(_QWORD *)(v8 + 3104);
  LODWORD(STACK[0xBC4]) = STACK[0x2384];
  v11[332] = *(_QWORD *)(v8 + 3088);
  v11[316] = *(_QWORD *)(v8 + 3080);
  v11[317] = *(_QWORD *)(v8 + 3072);
  LODWORD(STACK[0xBD4]) = STACK[0x235C];
  LODWORD(STACK[0xBFC]) = STACK[0x233C];
  v11[319] = *(_QWORD *)(v8 + 3064);
  LODWORD(STACK[0xC1C]) = STACK[0x231C];
  v11[320] = *(_QWORD *)(v8 + 3048);
  v11[321] = *(_QWORD *)(v8 + 3040);
  v11[323] = *(_QWORD *)(v8 + 3032);
  v11[324] = *(_QWORD *)(v8 + 3016);
  v11[325] = *(_QWORD *)(v8 + 3008);
  LODWORD(STACK[0xC3C]) = STACK[0x230C];
  v11[327] = *(_QWORD *)(v8 + 3000);
  v11[329] = *(_QWORD *)(v8 + 2984);
  v11[330] = *(_QWORD *)(v8 + 2968);
  v11[331] = *(_QWORD *)(v8 + 2960);
  v11[333] = *(_QWORD *)(v8 + 2952);
  v11[337] = *(_QWORD *)(v8 + 2944);
  v21 = *(uint64_t (**)(void))(v9 + 136);
  v11[335] = *(_QWORD *)(v9 + 128);
  LODWORD(STACK[0xC4C]) = STACK[0x2918];
  return v21();
}

uint64_t sub_1A2768F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v13)(void);

  v12[376] = v9[368];
  v12[360] = v9[369];
  v12[361] = v9[370];
  v12[363] = v9[371];
  v12[364] = v9[373];
  v12[365] = v9[375];
  LODWORD(STACK[0xD04]) = STACK[0x230C];
  v12[366] = v9[376];
  v12[368] = v9[377];
  v12[369] = v9[379];
  v12[370] = v9[380];
  v12[371] = v9[381];
  v12[373] = *(_QWORD *)(v10 + 128);
  v12[374] = v9[383];
  LODWORD(STACK[0xD5C]) = STACK[0x233C];
  LODWORD(STACK[0xD84]) = STACK[0x235C];
  v12[375] = v9[384];
  v12[378] = v9[385];
  v12[383] = v9[386];
  LODWORD(STACK[0xDAC]) = STACK[0x2384];
  v12[381] = v9[388];
  LODWORD(STACK[0xDD4]) = STACK[0x2390];
  v13 = (uint64_t (*)(void))(*(_QWORD *)(v11
                                      + 8
                                      * ((*(unsigned __int8 *)(v10 + 159) * ((v8 ^ (a7 + 646)) + 2148)) ^ (v7 + v8 + 526)))
                          - 4);
  LODWORD(STACK[0xDE0]) = STACK[0x2918];
  return v13();
}

uint64_t sub_1A2769018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61)
{
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  int v66;
  uint64_t (*v67)(void);

  LODWORD(STACK[0x23A8]) = a61;
  v65[376] = *(_QWORD *)(v61 + 2944);
  v65[360] = *(_QWORD *)(v61 + 2952);
  v65[361] = *(_QWORD *)(v61 + 2960);
  v65[363] = *(_QWORD *)(v61 + 2968);
  v65[364] = 0;
  v65[365] = *(_QWORD *)(v61 + 3000);
  LODWORD(STACK[0xD04]) = STACK[0x230C];
  v65[366] = *(_QWORD *)(v61 + 3008);
  v65[368] = *(_QWORD *)(v61 + 3016);
  v65[369] = *(_QWORD *)(v61 + 3032);
  v65[370] = *(_QWORD *)(v61 + 3040);
  v65[371] = *(_QWORD *)(v61 + 3048);
  v65[373] = *(_QWORD *)(v63 + 128);
  v65[374] = *(_QWORD *)(v61 + 3064);
  LODWORD(STACK[0xD5C]) = STACK[0x233C];
  LODWORD(STACK[0xD84]) = STACK[0x235C];
  v65[375] = *(_QWORD *)(v61 + 3072);
  v65[378] = *(_QWORD *)(v61 + 3080);
  v65[383] = *(_QWORD *)(v61 + 3088);
  LODWORD(STACK[0xDAC]) = STACK[0x2384];
  v65[381] = *(_QWORD *)(v61 + 3104);
  v66 = (a5 - 893) ^ *(unsigned __int8 *)(v61 + 3119);
  LODWORD(STACK[0xDD4]) = STACK[0x2390];
  v67 = (uint64_t (*)(void))(*(_QWORD *)(v64 + 8 * (((a8 & ~v66) * v62) ^ a5)) - 4);
  LODWORD(STACK[0xDE0]) = 1718210905;
  return v67();
}

uint64_t sub_1A2769100(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  _BOOL4 v20;

  v14 = **(unsigned int **)(v8 + 3120);
  LODWORD(STACK[0x23AC]) = v14;
  *(_QWORD *)(v8 + 3144) = v14;
  v15 = LODWORD(STACK[0x23A8]);
  v16 = **(unsigned int **)(v8 + 3128);
  LODWORD(STACK[0xDE4]) = 1718210905;
  v17 = (v14 ^ v5) + v15 + (v7 & (2 * v14)) + ((unint64_t)(v15 < v13) << 32) + a2;
  LODWORD(STACK[0xDE8]) = STACK[0x2390];
  v18 = (v16 ^ ((v12 - 1268) + v6)) + a3 + ((((v12 - 1321) | v4) + a1) & (2 * v16));
  v11[384] = *(_QWORD *)(v8 + 3104);
  v19 = (v17 < 0xD0E1AC29) ^ (v18 < 0xD0E1AC29);
  v20 = v17 > v18;
  LODWORD(STACK[0xDEC]) = STACK[0x2384];
  if (v19)
    v20 = v17 < 0xD0E1AC29;
  v11[401] = *(_QWORD *)(v8 + 3088);
  v11[385] = *(_QWORD *)(v8 + 3080);
  v11[386] = *(_QWORD *)(v8 + 3072);
  LODWORD(STACK[0xDFC]) = STACK[0x235C];
  LODWORD(STACK[0xE24]) = STACK[0x233C];
  v11[388] = *(_QWORD *)(v8 + 3064);
  v11[389] = *(_QWORD *)(v9 + 128);
  v11[390] = *(_QWORD *)(v8 + 3048);
  v11[391] = *(_QWORD *)(v8 + 3040);
  v11[393] = *(_QWORD *)(v8 + 3032);
  v11[394] = *(_QWORD *)(v8 + 3016);
  v11[395] = *(_QWORD *)(v8 + 3008);
  LODWORD(STACK[0xE4C]) = STACK[0x230C];
  v11[396] = *(_QWORD *)(v8 + 3000);
  v11[398] = *(_QWORD *)(v8 + 2984);
  v11[399] = *(_QWORD *)(v8 + 2968);
  v11[400] = *(_QWORD *)(v8 + 2960);
  v11[403] = *(_QWORD *)(v8 + 2952);
  v11[402] = *(_QWORD *)(v8 + 2944);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((!v20 * a4) ^ v12)) - 12))();
}

void sub_1A2769270()
{
  int v0;
  uint64_t v1;

  **(_DWORD **)(v1 + 3120) = LODWORD(STACK[0x23A8]) + LODWORD(STACK[0x23AC]) + ((v0 + 1499) ^ 0x99958E1E);
  JUMPOUT(0x1A2768B68);
}

uint64_t sub_1A27692CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int v13;
  uint64_t (*v14)(void);

  v12[376] = v9[368];
  v12[360] = v9[369];
  v12[361] = v9[370];
  v12[363] = v9[371];
  v12[364] = v9[373];
  v12[365] = v9[375];
  LODWORD(STACK[0xD04]) = STACK[0x230C];
  v12[366] = v9[376];
  v12[368] = v9[377];
  v12[369] = v9[379];
  v12[370] = v9[380];
  v12[371] = v9[381];
  v12[373] = *(_QWORD *)(v10 + 128);
  v12[374] = v9[383];
  LODWORD(STACK[0xD5C]) = STACK[0x233C];
  LODWORD(STACK[0xD84]) = STACK[0x235C];
  v12[375] = v9[384];
  v12[378] = v9[385];
  v12[383] = v9[386];
  LODWORD(STACK[0xDAC]) = STACK[0x2384];
  v12[381] = v9[388];
  v13 = 2748 * *(unsigned __int8 *)(v10 + 159);
  LODWORD(STACK[0xDD4]) = STACK[0x2390];
  v14 = (uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (v13 ^ (v7 + v8 + 526)))
                          - ((v8 ^ (a7 - 787))
                           + ((v7 + v8 + 523) ^ 0xFFFFFFFFFFFFF95ALL)));
  LODWORD(STACK[0xDE0]) = STACK[0x2918];
  return v14();
}

uint64_t sub_1A27693C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t (*a31)(void),uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61)
{
  _QWORD *v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t (*v67)(void);

  v61[394] = (v62 ^ 0x6AEu) - 1718253555 + a61 - 1324;
  v66 = a31();
  v61[395] = v66;
  *a12 = v66;
  v65[376] = v61[368];
  v65[360] = v61[369];
  v65[361] = v61[370];
  v65[363] = v61[371];
  v65[364] = v61[373];
  v65[365] = v61[375];
  LODWORD(STACK[0xD04]) = STACK[0x230C];
  v65[366] = v61[376];
  v65[368] = v61[377];
  v65[369] = v61[379];
  v65[370] = v61[380];
  v65[371] = v61[381];
  v65[373] = *(_QWORD *)(v63 + 128);
  v65[374] = v61[383];
  LODWORD(STACK[0xD5C]) = STACK[0x233C];
  LODWORD(STACK[0xD84]) = STACK[0x235C];
  v65[375] = v61[384];
  v65[378] = v61[385];
  v65[383] = v61[386];
  LODWORD(STACK[0xDAC]) = STACK[0x2384];
  v65[381] = v61[388];
  LODWORD(STACK[0xDD4]) = STACK[0x2390];
  v67 = (uint64_t (*)(void))(*(_QWORD *)(v64 + 8 * ((7 * (v66 == 0)) ^ v62)) - ((2 * v62) ^ 0x602u) + 258);
  LODWORD(STACK[0xDE0]) = 1718210903;
  return v67();
}

uint64_t sub_1A27694F4()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  BOOL v29;
  unint64_t v30;
  int v31;
  uint64_t (*v32)(void);

  v5 = (v1 + 2064);
  v6 = v0[394];
  v7 = *(_QWORD *)(v3 + 8 * v1);
  v0[39] = v0[368];
  v8 = v7 - 4;
  v9 = v0[370];
  v0[41] = v0[369];
  v0[42] = v9;
  v0[44] = v0[371];
  v10 = v0[375];
  v0[46] = v0[373];
  v0[47] = v10;
  LODWORD(STACK[0x18C4]) = STACK[0x230C];
  v0[48] = v0[376];
  v11 = v0[379];
  v0[50] = v0[377];
  v0[51] = v11;
  v12 = v0[381];
  v0[52] = v0[380];
  v0[53] = v12;
  v13 = *(_QWORD *)(v2 + 128);
  LODWORD(STACK[0x18D4]) = STACK[0x231C];
  v14 = v0[383];
  v0[55] = v8;
  v0[56] = v13;
  LODWORD(STACK[0x18F4]) = STACK[0x233C];
  LODWORD(STACK[0x191C]) = STACK[0x235C];
  v15 = v0[384];
  v0[57] = v14;
  v0[58] = v15;
  v0[61] = v0[385];
  v0[59] = v0[386];
  LODWORD(STACK[0x194C]) = STACK[0x2384];
  v16 = v0[388];
  LODWORD(STACK[0x195C]) = STACK[0x2390];
  v0[65] = v0[395];
  v0[63] = v16;
  v0[64] = 0x10067F75D0A830F1;
  v0[69] = *(_QWORD *)(v2 + 128);
  v0[66] = (v5 ^ 0xA26F9DB82A390D3ELL) + v6 - ((2 * (_DWORD)v6) & 0x54720850);
  v17 = v0[69];
  STACK[0x29E8] = v0[66];
  STACK[0x29F0] = v17;
  v18 = v0[65];
  v19 = v0[63];
  STACK[0x29F8] = v0[64];
  STACK[0x2A00] = v18;
  LODWORD(STACK[0x2A0C]) = STACK[0x195C];
  STACK[0x2A10] = v19;
  LODWORD(STACK[0x2A1C]) = STACK[0x194C];
  v20 = v0[61];
  STACK[0x2A20] = v0[59];
  STACK[0x2A28] = v20;
  LODWORD(STACK[0x2A44]) = STACK[0x191C];
  LODWORD(STACK[0x2A6C]) = STACK[0x18F4];
  v21 = v0[57];
  STACK[0x2A30] = v0[58];
  STACK[0x2A38] = v21;
  *(_DWORD *)(v4 - 244) = STACK[0x18D4];
  v22 = v0[55];
  v24 = v0[52];
  v23 = v0[53];
  STACK[0x2A48] = v0[56];
  STACK[0x2A50] = v23;
  v26 = v0[50];
  v25 = v0[51];
  STACK[0x2A58] = v24;
  STACK[0x2A60] = v25;
  v27 = v0[48];
  STACK[0x2A70] = v26;
  STACK[0x2A78] = v27;
  *(_DWORD *)(v4 - 228) = STACK[0x18C4];
  v28 = v0[46];
  STACK[0x2A80] = v0[47];
  STACK[0x2A90] = v28;
  STACK[0x2AA0] = v0[44];
  v29 = STACK[0x29F0] > STACK[0x2A00] + STACK[0x29F8] - 0x10067F75D0A830F1;
  v30 = v0[41];
  STACK[0x2AA8] = v0[42];
  v31 = !v29;
  STACK[0x2AB0] = v30;
  STACK[0x2AB8] = v0[39];
  v32 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((v31 * (((v1 - 70) | 0x435) - 1234)) ^ v5))
                          - (v5 ^ 0x91ELL));
  STACK[0x2AC0] = v22;
  return v32();
}

uint64_t sub_1A2769624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, _DWORD *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_QWORD *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,uint64_t a59,int a60,int a61)
{
  int v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  int v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v100;

  v67 = 662 * (v61 ^ (a7 + 3));
  *a15 = (v67 ^ 0x99958D21) + a61;
  *a22 = (a58 - 1718253555);
  v64[376] = v62[71];
  v64[360] = v62[70];
  v64[361] = v62[69];
  v64[363] = v62[68];
  v64[364] = v62[66];
  v64[365] = v62[64];
  LODWORD(STACK[0xD04]) = *(_DWORD *)(v65 - 228);
  v68 = v62[62];
  v64[366] = v62[63];
  v64[368] = v68;
  v69 = v62[59];
  v64[369] = v62[60];
  v64[370] = v69;
  v70 = v62[57];
  v64[371] = v62[58];
  v64[373] = v70;
  v71 = v62[54];
  v64[374] = v62[55];
  LODWORD(STACK[0xD5C]) = STACK[0x2A6C];
  LODWORD(STACK[0xD84]) = STACK[0x2A44];
  v64[375] = v71;
  v72 = v62[52];
  v64[378] = v62[53];
  v64[383] = v72;
  LODWORD(STACK[0xDAC]) = STACK[0x2A1C];
  v64[381] = v62[50];
  LODWORD(STACK[0xDD4]) = STACK[0x2A0C];
  LODWORD(STACK[0xDE0]) = v66;
  v73 = STACK[0xDE0];
  v74 = a7 + v67 - 1323;
  v100 = (v67 - 969);
  v75 = STACK[0xDD4];
  v76 = v64[381];
  v77 = STACK[0xDAC];
  v78 = v64[383];
  v79 = v64[378];
  v80 = v64[375];
  v81 = STACK[0xD84];
  v82 = STACK[0xD5C];
  v83 = v64[374];
  v84 = v64[373];
  v85 = v64[371];
  v86 = v64[370];
  v87 = v64[369];
  v88 = v64[368];
  v89 = v64[366];
  v90 = STACK[0xD04];
  v91 = v64[365];
  v92 = v64[364];
  v93 = v64[363];
  v94 = v64[361];
  v95 = v63;
  v96 = v64[360];
  v97 = v64[376];
  LODWORD(STACK[0xDE4]) = STACK[0xDE0];
  LODWORD(STACK[0xDE8]) = v75;
  v64[384] = v76;
  LODWORD(STACK[0xDEC]) = v77;
  v64[401] = v78;
  v64[385] = v79;
  v64[386] = v80;
  LODWORD(STACK[0xDFC]) = v81;
  LODWORD(STACK[0xE24]) = v82;
  v64[388] = v83;
  v64[389] = v84;
  v64[390] = v85;
  v64[391] = v86;
  v64[393] = v87;
  v64[394] = v88;
  v64[395] = v89;
  LODWORD(STACK[0xE4C]) = v90;
  v64[396] = v91;
  v64[398] = v92;
  v64[399] = v93;
  v64[400] = v94;
  v64[403] = v96;
  v64[402] = v97;
  v64[420] = v97;
  v64[404] = v96;
  v64[405] = v94;
  v64[407] = v93;
  v64[409] = v91;
  LODWORD(STACK[0xE74]) = v90;
  v64[410] = v89;
  v64[412] = v88;
  v64[413] = v87;
  v64[414] = v86;
  v64[415] = v85;
  v64[417] = v84;
  LODWORD(STACK[0xEBC]) = v73;
  v64[418] = v83;
  LODWORD(STACK[0xECC]) = v82;
  LODWORD(STACK[0xEE4]) = v81;
  v64[419] = v80;
  v64[422] = v79;
  v64[424] = v78;
  LODWORD(STACK[0xF0C]) = v77;
  v64[425] = v76;
  v98 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 + 8 * (((v92 == 0) * (v74 + 2093235833)) ^ v67)) - (v100 ^ 0x16F));
  LODWORD(STACK[0xF34]) = v75;
  return v98(v83, v84, v85, v86, v100, v87, 2201732335, v89, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_1A2769874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  unint64_t *v55;
  _QWORD *v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  int v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  int v70;
  int v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  int v75;
  unint64_t v76;
  int v77;
  int v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;

  v57 = v56[403];
  v58 = v56[400];
  v59 = v56[399];
  v60 = v56[398];
  v61 = v56[396];
  v62 = STACK[0xE4C];
  v63 = v56[395];
  v64 = v56[394];
  v65 = v56[393];
  v66 = v56[391];
  v67 = v56[390];
  v68 = v56[389];
  v69 = v56[388];
  v70 = STACK[0xE24];
  v71 = STACK[0xDFC];
  v72 = v56[386];
  v73 = v56[385];
  v74 = v56[401];
  v75 = STACK[0xDEC];
  v76 = v56[384];
  v77 = STACK[0xDE8];
  v78 = STACK[0xDE4];
  STACK[0x1690] = v56[402];
  STACK[0x1678] = v57;
  STACK[0x1680] = v58;
  STACK[0x1698] = v59;
  STACK[0x16A8] = v61;
  LODWORD(STACK[0x1664]) = v62;
  STACK[0x16B0] = v63;
  STACK[0x16C0] = v64;
  STACK[0x16C8] = v65;
  STACK[0x16D0] = v66;
  STACK[0x16D8] = v67;
  LODWORD(STACK[0x168C]) = a5;
  STACK[0x16E8] = v68;
  LODWORD(STACK[0x16A4]) = v78;
  STACK[0x16F0] = v69;
  LODWORD(STACK[0x16BC]) = v70;
  LODWORD(STACK[0x16E4]) = v71;
  STACK[0x16F8] = v72;
  STACK[0x1710] = v73;
  STACK[0x1700] = v74;
  LODWORD(STACK[0x170C]) = v75;
  STACK[0x1720] = v76;
  LODWORD(STACK[0x171C]) = v77;
  STACK[0x1728] = v60;
  LODWORD(v57) = STACK[0x171C];
  v79 = (((a5 + 1213) | 0x10) - 1171360050) & 0x45D187D7;
  v80 = STACK[0x1720];
  LODWORD(v58) = STACK[0x170C];
  v81 = STACK[0x1700];
  v82 = STACK[0x1710];
  v83 = STACK[0x16F8];
  LODWORD(v63) = STACK[0x16E4];
  LODWORD(v64) = STACK[0x16BC];
  v84 = STACK[0x16F0];
  LODWORD(v66) = STACK[0x16A4];
  v85 = STACK[0x16E8];
  v86 = STACK[0x16D8];
  v87 = STACK[0x16D0];
  v88 = STACK[0x16C8];
  v89 = STACK[0x16C0];
  v90 = STACK[0x16B0];
  LODWORD(v73) = STACK[0x1664];
  v91 = STACK[0x16A8];
  v92 = STACK[0x1698];
  v93 = STACK[0x1680];
  v94 = STACK[0x1678];
  v95 = STACK[0x1690];
  STACK[0x1730] = v79 + *(_QWORD *)(a55 + 8 * SLODWORD(STACK[0x168C])) - 1246;
  STACK[0x1740] = v60;
  LODWORD(STACK[0x173C]) = v57;
  STACK[0x1758] = v80;
  LODWORD(STACK[0x174C]) = v58;
  STACK[0x1750] = v81;
  STACK[0x1760] = v82;
  *v55 = v83;
  LODWORD(STACK[0x1774]) = v63;
  LODWORD(STACK[0x179C]) = v64;
  LODWORD(STACK[0x17B4]) = v66;
  v55[2] = v84;
  v55[3] = v85;
  v55[4] = v86;
  v55[5] = v87;
  v55[7] = v88;
  v55[8] = v89;
  v55[10] = v90;
  LODWORD(STACK[0x17C4]) = v73;
  v55[12] = v91;
  v55[13] = v92;
  v55[15] = v95;
  v55[16] = v94;
  v55[14] = v93;
  return sub_1A2769C08();
}

uint64_t sub_1A2769C08(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t (*v22)(void);

  v6 = 13 * (v2 ^ 0x488u);
  v7 = v3[16];
  v4[20] = v3[15];
  v4[21] = v7;
  v8 = v3[13];
  v9 = v3[12];
  v4[22] = v3[14];
  v4[23] = v8;
  v4[25] = v9;
  LODWORD(STACK[0x2944]) = STACK[0x17C4];
  v11 = v3[7];
  v10 = v3[8];
  v4[27] = v3[10];
  v4[28] = v10;
  v13 = v3[4];
  v12 = v3[5];
  v4[30] = v11;
  v4[31] = v12;
  v15 = v3[2];
  v14 = v3[3];
  v4[32] = v13;
  v4[33] = v14;
  LODWORD(STACK[0x2954]) = STACK[0x17B4];
  LODWORD(STACK[0x296C]) = STACK[0x179C];
  LODWORD(STACK[0x2994]) = STACK[0x1774];
  v16 = *v3;
  v4[35] = v15;
  v4[36] = v16;
  v17 = *(_QWORD *)(a2 + 237);
  v4[37] = *(_QWORD *)(a2 + 253);
  v4[38] = v17;
  LODWORD(STACK[0x29BC]) = STACK[0x174C];
  v4[40] = *(_QWORD *)(a2 + 245);
  LODWORD(STACK[0x29CC]) = STACK[0x173C];
  v18 = *(uint64_t **)(a2 + 221);
  v19 = *v18;
  v20 = ((*v18 == 0) * (v2 - 761)) ^ v2;
  v21 = *(_QWORD *)(a2 + 205);
  v4[42] = v18;
  v4[43] = v21;
  v22 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * v20) - (v6 ^ 0x4CE));
  v4[44] = v19;
  return v22();
}

uint64_t sub_1A2769CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t (*a53)(unint64_t),uint64_t a54,uint64_t a55,int a56,int a57)
{
  int v57;
  uint64_t v58;
  uint64_t v59;

  v59 = a53(STACK[0x29E0]);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v58
                                                      + 8
                                                      * ((461 * (a57 == (v57 ^ 0x70A ^ (v57 - 2018774249) & 0x78540BEF))) ^ v57))
                                          - 8))(v59);
}

uint64_t sub_1A2769D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,void (*a53)(void))
{
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t (*v91)(void);

  v56 = (_QWORD *)v54[42];
  *v56 = 0;
  v56[1] = 0;
  a53();
  v53[18] = v54[43];
  LODWORD(STACK[0x17F4]) = STACK[0x29CC];
  v57 = v54[40];
  LODWORD(STACK[0x1804]) = STACK[0x29BC];
  v58 = v54[37];
  v53[20] = v54[38];
  v53[21] = v57;
  v60 = v54[35];
  v59 = v54[36];
  v53[22] = v58;
  v53[23] = v59;
  LODWORD(STACK[0x182C]) = STACK[0x2994];
  LODWORD(STACK[0x1854]) = STACK[0x296C];
  LODWORD(STACK[0x186C]) = STACK[0x2954];
  v62 = v54[32];
  v61 = v54[33];
  v53[25] = v60;
  v53[26] = v61;
  v64 = v54[30];
  v63 = v54[31];
  v53[27] = v62;
  v53[28] = v63;
  v66 = v54[27];
  v65 = v54[28];
  v53[30] = v64;
  v53[31] = v65;
  v53[33] = v66;
  LODWORD(STACK[0x187C]) = STACK[0x2944];
  v68 = v54[22];
  v67 = v54[23];
  v53[35] = v54[25];
  v53[36] = v67;
  v69 = v54[20];
  v53[40] = v54[21];
  v53[37] = v68;
  v53[38] = v69;
  v70 = v53[40];
  v72 = v53[37];
  v71 = v53[38];
  v74 = v53[35];
  v73 = v53[36];
  v75 = STACK[0x187C];
  v76 = v53[33];
  v78 = v53[30];
  v77 = v53[31];
  v80 = v53[27];
  v79 = v53[28];
  LODWORD(v69) = STACK[0x186C];
  v82 = v53[25];
  v81 = v53[26];
  v83 = STACK[0x1854];
  v84 = STACK[0x182C];
  v86 = v53[22];
  v85 = v53[23];
  v87 = STACK[0x1804];
  v88 = v53[20];
  v89 = v53[21];
  v90 = STACK[0x17F4];
  v91 = (uint64_t (*)(void))v53[18];
  v55[285] = v71;
  v55[268] = v70;
  v55[269] = v72;
  v55[271] = v73;
  v55[273] = 0;
  v55[274] = v74;
  LODWORD(STACK[0xA54]) = v75;
  v55[275] = v76;
  v55[277] = v77;
  v55[278] = v78;
  v55[279] = v79;
  v55[280] = v80;
  v55[282] = v81;
  LODWORD(STACK[0xA7C]) = v69;
  v55[283] = v82;
  LODWORD(STACK[0xA8C]) = v83;
  LODWORD(STACK[0xAAC]) = v84;
  v55[284] = v85;
  v55[287] = v86;
  v55[289] = v88;
  LODWORD(STACK[0xAD4]) = v87;
  v55[290] = v89;
  LODWORD(STACK[0xAFC]) = v90;
  LODWORD(STACK[0xB08]) = v83;
  v55[420] = v71;
  v55[404] = v70;
  v55[405] = v72;
  v55[407] = v73;
  v55[409] = v74;
  LODWORD(STACK[0xE74]) = v75;
  v55[410] = v76;
  v55[412] = v77;
  v55[413] = v78;
  v55[414] = v79;
  v55[415] = v80;
  v55[417] = v81;
  LODWORD(STACK[0xEBC]) = v69;
  v55[418] = v82;
  LODWORD(STACK[0xECC]) = v83;
  LODWORD(STACK[0xEE4]) = v84;
  v55[419] = v85;
  v55[422] = v86;
  v55[424] = v88;
  LODWORD(STACK[0xF0C]) = v87;
  v55[425] = v89;
  LODWORD(STACK[0xF34]) = v90;
  LODWORD(STACK[0xF40]) = v69;
  return v91();
}

uint64_t sub_1A2769F30()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  v6 = STACK[0x1170];
  LODWORD(STACK[0x2614]) = STACK[0x1164];
  v1[470] = v4[495];
  LODWORD(STACK[0x2624]) = STACK[0x113C];
  v1[472] = v4[494];
  v1[473] = v4[492];
  v1[474] = v4[489];
  LODWORD(STACK[0x264C]) = STACK[0x1114];
  LODWORD(STACK[0x2674]) = STACK[0x10F4];
  v1[475] = v4[488];
  LODWORD(STACK[0x2694]) = STACK[0x10E4];
  v1[477] = v4[487];
  v1[478] = v4[485];
  v1[479] = v4[484];
  v1[480] = v4[483];
  v1[482] = v4[482];
  v1[483] = v4[480];
  v7 = STACK[0x10BC];
  LODWORD(STACK[0x26A4]) = STACK[0x10BC];
  v8 = v4[479];
  v1[484] = v8;
  v9 = v4[478];
  v1[486] = v9;
  v10 = v4[476];
  v1[488] = v10;
  v11 = v4[474];
  v1[489] = v11;
  v12 = v4[473];
  v1[490] = v12;
  v13 = v4[490];
  v1[491] = v13;
  v4[513] = v13;
  v4[496] = v12;
  v4[497] = v11;
  v4[499] = v10;
  v4[501] = v9;
  v4[502] = v8;
  LODWORD(STACK[0x1174]) = v7;
  v4[503] = v1[483];
  v4[505] = v1[482];
  v4[506] = v1[480];
  v4[507] = v1[479];
  v4[508] = v1[478];
  v4[510] = v1[477];
  LODWORD(STACK[0x119C]) = STACK[0x2694];
  v4[511] = v1[475];
  LODWORD(STACK[0x11AC]) = STACK[0x2674];
  LODWORD(STACK[0x11CC]) = STACK[0x264C];
  v4[512] = v1[474];
  v4[515] = v1[473];
  v4[517] = v1[472];
  LODWORD(STACK[0x11F4]) = STACK[0x2624];
  v4[518] = v1[470];
  LODWORD(STACK[0x121C]) = STACK[0x2614];
  v14 = (uint64_t (*)(void))(*(_QWORD *)(v3
                                      + 8
                                      * (int)(((v6 != v5) * (((v0 - 1436305657) & 0xD26087FF) - 1008)) | (v2 + v0 + 633)))
                          - 12);
  LODWORD(STACK[0x1228]) = v6;
  return v14();
}

#error "1A276A5DC: call analysis failed (funcsize=305)"

uint64_t sub_1A276A5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t (*a53)(_QWORD))
{
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;

  v56 = *(_QWORD **)(v53 + 432);
  v57 = a53(*v56);
  *v56 = *(_QWORD *)(v53 + 400);
  v58 = *(_QWORD *)(v53 + 416);
  **(_DWORD **)(v53 + 424) = v58;
  v54[557] = *(_QWORD *)(v53 + 568);
  v54[540] = *(_QWORD *)(v53 + 560);
  v54[541] = *(_QWORD *)(v53 + 552);
  v54[543] = *(_QWORD *)(v53 + 544);
  v54[545] = *(_QWORD *)(v53 + 528);
  v54[546] = *(_QWORD *)(v53 + 512);
  LODWORD(STACK[0x12C4]) = *(_DWORD *)(v55 - 228);
  v59 = *(_QWORD *)(v53 + 496);
  v54[547] = *(_QWORD *)(v53 + 504);
  v54[549] = v59;
  v60 = *(_QWORD *)(v53 + 472);
  v54[550] = *(_QWORD *)(v53 + 480);
  v54[551] = v60;
  v61 = *(_QWORD *)(v53 + 456);
  v54[552] = *(_QWORD *)(v53 + 464);
  v54[554] = v61;
  LODWORD(STACK[0x12FC]) = *(_DWORD *)(v55 - 244);
  v54[555] = *(_QWORD *)(v53 + 440);
  LODWORD(STACK[0x130C]) = STACK[0x2A6C];
  LODWORD(STACK[0x132C]) = STACK[0x2A44];
  v62 = *(_QWORD *)(v53 + 424);
  v54[556] = *(_QWORD *)(v53 + 432);
  v54[559] = v62;
  v54[561] = v58;
  v63 = STACK[0x2A1C];
  LODWORD(STACK[0x1354]) = STACK[0x2A1C];
  v54[562] = *(_QWORD *)(v53 + 400);
  LODWORD(STACK[0x137C]) = STACK[0x2A0C];
  LODWORD(STACK[0x1388]) = v63;
  return sub_1A276A6AC(v57);
}

void sub_1A276A6AC()
{
  _QWORD *v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = STACK[0x1388];
  v2 = STACK[0x137C];
  v3 = v0[562];
  v4 = STACK[0x1354];
  v5 = v0[561];
  v6 = v0[559];
  v7 = v0[556];
  v8 = STACK[0x132C];
  v9 = STACK[0x130C];
  v10 = v0[555];
  v11 = STACK[0x12FC];
  v12 = v0[554];
  v13 = v0[552];
  v14 = v0[551];
  v15 = v0[550];
  v16 = v0[549];
  v17 = v0[547];
  v18 = STACK[0x12C4];
  v19 = v0[546];
  v20 = v0[545];
  v21 = v0[543];
  v22 = v0[541];
  v23 = v0[540];
  v0[580] = v0[557];
  v0[563] = v23;
  v0[564] = v22;
  v0[566] = v21;
  v0[568] = v20;
  v0[569] = v19;
  LODWORD(STACK[0x138C]) = v18;
  v0[570] = v17;
  v0[572] = v16;
  v0[573] = v15;
  v0[574] = v14;
  v0[575] = v13;
  v0[577] = v12;
  LODWORD(STACK[0x13B4]) = v11;
  v0[578] = v10;
  LODWORD(STACK[0x13C4]) = v9;
  LODWORD(STACK[0x13E4]) = v8;
  v0[579] = v7;
  v0[582] = v6;
  v0[593] = v5;
  LODWORD(STACK[0x140C]) = v4;
  v0[584] = v3;
  LODWORD(STACK[0x1434]) = v2;
  LODWORD(STACK[0x1440]) = v1;
  JUMPOUT(0x1A276A778);
}

uint64_t sub_1A276A980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t *v8;
  int v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void);

  v13 = STACK[0x1584];
  v14 = 2 * (v7 ^ (a7 - 88));
  v15 = v9 + v7 + 710;
  STACK[0x2848] = v11[627];
  LODWORD(STACK[0x2854]) = STACK[0x155C];
  STACK[0x2858] = v11[626];
  STACK[0x2860] = v11[624];
  STACK[0x2868] = v11[621];
  LODWORD(STACK[0x287C]) = STACK[0x1534];
  LODWORD(STACK[0x28A4]) = STACK[0x1514];
  STACK[0x2870] = v11[620];
  LODWORD(STACK[0x28C4]) = STACK[0x1504];
  v16 = v11[617];
  *v8 = v11[619];
  v8[1] = v16;
  v17 = v11[615];
  v8[2] = v11[616];
  v8[3] = v17;
  v18 = v11[612];
  v8[5] = v11[614];
  v8[6] = v18;
  v19 = STACK[0x14D4];
  LODWORD(STACK[0x28D4]) = STACK[0x14D4];
  v20 = v11[611];
  v8[7] = v20;
  v21 = v11[610];
  v8[9] = v21;
  v22 = v11[608];
  v23 = v11[606];
  v8[11] = v22;
  v8[12] = v23;
  v24 = v11[605];
  v25 = v11[622];
  v8[13] = v24;
  v8[14] = v25;
  v11[645] = v25;
  v11[628] = v24;
  v11[629] = v23;
  v11[631] = v22;
  v11[633] = v21;
  v11[634] = v20;
  LODWORD(STACK[0x1594]) = v19;
  v26 = v8[5];
  v11[635] = v8[6];
  v11[637] = v26;
  v27 = v8[2];
  v11[638] = v8[3];
  v11[639] = v27;
  v28 = *v8;
  v11[640] = v8[1];
  v11[642] = v28;
  LODWORD(STACK[0x15BC]) = STACK[0x28C4];
  v11[643] = STACK[0x2870];
  LODWORD(STACK[0x15CC]) = STACK[0x28A4];
  LODWORD(STACK[0x15EC]) = STACK[0x287C];
  v11[644] = STACK[0x2868];
  v11[647] = STACK[0x2860];
  v11[650] = STACK[0x2858];
  LODWORD(STACK[0x1614]) = STACK[0x2854];
  v11[649] = STACK[0x2848];
  LODWORD(STACK[0x163C]) = v13;
  v29 = (uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((v13 == v12) * (v14 ^ 0xCAA)) ^ v15)) - 4);
  LODWORD(STACK[0x1648]) = v13;
  return v29();
}

void sub_1A276AAF0()
{
  int v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t *v6;
  uint64_t v7;
  _DWORD *v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v6 = (uint64_t *)v2[2];
  v7 = *v6;
  v8 = *(_DWORD **)(v4 + 241);
  v9 = STACK[0x28D4];
  v10 = STACK[0x28D4];
  v11 = (v9 ^ 0xE5394FA4) & (2 * (v9 & 0xF5426FC4)) ^ v9 & 0xF5426FC4;
  v12 = ((2 * (v9 ^ 0xDB99FA4)) ^ 0xF1F7E0C0) & (v9 ^ 0xDB99FA4) ^ (2 * (v9 ^ 0xDB99FA4)) & 0xF8FBF060;
  v13 = v12 ^ 0x8081020;
  v14 = (v12 ^ 0xF013E000) & (4 * v11) ^ v11;
  v15 = ((4 * v13) ^ 0xE3EFC180) & v13 ^ (4 * v13) & 0xF8FBF060;
  v16 = (v15 ^ 0xE0EBC000) & (16 * v14) ^ v14;
  v17 = ((16 * (v15 ^ 0x18103060)) ^ 0x8FBF0600) & (v15 ^ 0x18103060) ^ (16 * (v15 ^ 0x18103060)) & 0xF8FBF060;
  v18 = v16 ^ 0xF8FBF060 ^ (v17 ^ 0x88BB0000) & (v16 << 8);
  v19 = LODWORD(STACK[0x28D4]) ^ (2
                                * ((v18 << 16) & 0x78FB0000 ^ v18 ^ ((v18 << 16) ^ 0x70600000) & (((v17 ^ 0x7040F060) << 8) & 0x78FB0000 ^ 0xB0000 ^ (((v17 ^ 0x7040F060) << 8) ^ 0x7BF00000) & (v17 ^ 0x7040F060))));
  v20 = ((2 * *v8) & 0xDFFF7AAE) + ((v0 + 2120) ^ 0xEFFFB441 ^ *v8) + 268452521;
  *(_BYTE *)(*v6 + v20) = HIBYTE(v19) ^ 0xE4;
  *(_BYTE *)(v7 + v20 + 1) = BYTE2(v19) ^ 0x75;
  *(_BYTE *)(v7 + v20 + 2) = ((BYTE1(v19) ^ 0x8F) - ((2 * (BYTE1(v19) ^ 0x8F)) & 0x96) + 75) ^ 0x4B;
  *(_BYTE *)(v7 + v20 + 3) = v19 ^ 4;
  v21 = (*v8 + 4);
  *v8 = v21;
  v22 = *v6;
  v23 = (v21 ^ 0x7FFEBFE77BFEE8BFLL) + ((2 * (_DWORD)v21) & 0xF7FDD17E) - 0x6FF84071AB56B7CELL;
  v25 = v2[13];
  v24 = v2[14];
  v26 = (v24 ^ 0x9DCB428CB753A579) & (2 * (v24 & 0x9993448D375B357DLL)) ^ v24 & 0x9993448D375B357DLL;
  v27 = *(_QWORD *)(v3 + 8 * v0);
  v28 = ((2 * (v24 ^ 0x8CCDCB9EF5D3E5E9)) ^ 0x2ABD1E278511A128) & (v24 ^ 0x8CCDCB9EF5D3E5E9) ^ (2 * (v24 ^ 0x8CCDCB9EF5D3E5E9)) & 0x155E8F13C288D094;
  v1[39] = v24;
  v29 = v28 ^ 0x1542811042885094;
  v30 = v2[12];
  v31 = v2[11];
  v32 = (v28 ^ 0x1C060180008000) & (4 * v26) ^ v26;
  v33 = 4 * v29;
  v1[41] = v2[13];
  v1[42] = v30;
  v1[44] = v31;
  v34 = ((4 * v29) ^ 0x557A3C4F0A234250) & v29;
  v35 = v2[7];
  v36 = v34 ^ v33 & 0x155E8F13C288D094;
  v1[46] = v2[9];
  v1[47] = v35;
  LODWORD(STACK[0x18C4]) = v10;
  v37 = v2[5];
  v38 = (v36 ^ 0x155A0C0302004010) & (16 * v32) ^ v32;
  v1[48] = v2[6];
  v39 = v2[2];
  v40 = v2[3];
  v1[50] = v37;
  v1[51] = v40;
  v41 = ((16 * (v36 ^ 0x48310C0889084)) ^ 0x55E8F13C288D0940) & (v36 ^ 0x48310C0889084) ^ (16
                                                                                               * (v36 ^ 0x48310C0889084)) & 0x155E8F13C288D090;
  v43 = *v2;
  v42 = v2[1];
  v1[52] = v39;
  v1[53] = v42;
  LODWORD(STACK[0x18D4]) = STACK[0x28C4];
  v44 = *(_QWORD *)(v4 + 241);
  v1[55] = v27 - 8;
  v1[56] = v43;
  LODWORD(STACK[0x18F4]) = STACK[0x28A4];
  LODWORD(STACK[0x191C]) = STACK[0x287C];
  v45 = *(_QWORD *)(v4 + 233);
  v1[57] = v44;
  v1[58] = v45;
  v1[61] = *(_QWORD *)(v4 + 225);
  v46 = ((((v41 ^ 0x160E03C200D094) << 8) ^ 0x5E8F13C288D09400) & (v41 ^ 0x160E03C200D094) ^ ((v41 ^ 0x160E03C200D094) << 8) & 0x155E8F13C288D000) & 0x200C08000000000 ^ (v41 ^ 0x1548811000880000) & (v38 << 8) ^ v38 ^ ((((v41 ^ 0x160E03C200D094) << 8) ^ 0x5E8F13C288D09400) & (v41 ^ 0x160E03C200D094) ^ ((v41 ^ 0x160E03C200D094) << 8) & 0x155E8F13C288D000 ^ 0x140E030280800000) & (((v41 ^ 0x1548811000880000) & (v38 << 8) ^ v38) << 16);
  v1[59] = *(_QWORD *)(v4 + 217);
  LODWORD(STACK[0x194C]) = STACK[0x2854];
  v47 = *(_QWORD *)(v4 + 201);
  LODWORD(STACK[0x195C]) = v5;
  v1[65] = v22;
  v1[63] = v47;
  v1[64] = v23;
  v1[69] = v25;
  v1[66] = v24 ^ (2 * v46) ^ 0x3BFCD9351D623155;
  JUMPOUT(0x1A276AF54);
}

uint64_t sub_1A276B058()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  v4 = LODWORD(STACK[0x29E8]) ^ (v0 - v1 - 1493353542);
  *(_DWORD *)(v3 - 180) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((783 * (v4 != 0)) ^ v0)) - 11 * (v0 ^ 0x4BCu) + 791))();
}

uint64_t sub_1A276B0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;

  v12 = (v7 - 41);
  v13 = (_BYTE *)v9[46];
  v14 = v9[47] + 0x70FD8A2CC383D016 + v12;
  v9[74] = v14;
  v15 = *(unsigned int *)(v11 - 180);
  v9[75] = v15;
  *(_QWORD *)(v8 + 536) = 0;
  *(_BYTE *)(v9[48] + v14 + 0x7EFBF65D6BD3FBFFLL) = *v13;
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(v10
                                                               + 8
                                                               * (int)(((v15 != 1) * (v12 ^ (a7 + 283) ^ (a7 + 58))) ^ v12))
                                                   - 8))(0x810409A2942C0401);
}

void sub_1A276B160()
{
  JUMPOUT(0x1A276B114);
}

uint64_t sub_1A276B19C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = *(_QWORD *)(v0 + 432);
  v4 = *(_DWORD *)(v2 - 228);
  **(_DWORD **)(v0 + 440) += v4 - 180195388;
  v1[645] = *(_QWORD *)(v0 + 568);
  v1[628] = *(_QWORD *)(v0 + 560);
  v1[629] = *(_QWORD *)(v0 + 552);
  v1[631] = *(_QWORD *)(v0 + 544);
  v1[633] = *(_QWORD *)(v0 + 528);
  v1[634] = *(_QWORD *)(v0 + 512);
  LODWORD(STACK[0x1594]) = v4;
  v5 = *(_QWORD *)(v0 + 496);
  v1[635] = *(_QWORD *)(v0 + 504);
  v1[637] = v5;
  v6 = *(_QWORD *)(v0 + 472);
  v1[638] = *(_QWORD *)(v0 + 480);
  v1[639] = v6;
  v7 = *(_QWORD *)(v0 + 456);
  v1[640] = *(_QWORD *)(v0 + 464);
  v1[642] = v7;
  LODWORD(STACK[0x15BC]) = *(_DWORD *)(v2 - 244);
  v1[643] = *(_QWORD *)(v0 + 440);
  LODWORD(STACK[0x15CC]) = STACK[0x2A6C];
  LODWORD(STACK[0x15EC]) = STACK[0x2A44];
  v1[644] = v3;
  v8 = *(_QWORD *)(v0 + 416);
  v1[647] = *(_QWORD *)(v0 + 424);
  v1[650] = v8;
  LODWORD(STACK[0x1614]) = STACK[0x2A1C];
  v1[649] = *(_QWORD *)(v0 + 400);
  v9 = STACK[0x2A0C];
  LODWORD(STACK[0x163C]) = STACK[0x2A0C];
  LODWORD(STACK[0x1648]) = v9;
  v10 = STACK[0x1648];
  LODWORD(v8) = STACK[0x163C];
  v11 = v1[649];
  v12 = STACK[0x1614];
  v13 = v1[650];
  v14 = v1[647];
  v15 = v1[644];
  v16 = STACK[0x15EC];
  v17 = STACK[0x15CC];
  v18 = v1[643];
  v19 = STACK[0x15BC];
  v20 = v1[642];
  v21 = v1[640];
  v22 = v1[639];
  v23 = v1[638];
  v24 = v1[637];
  v25 = (uint64_t (*)(void))v1[635];
  v26 = STACK[0x1594];
  v27 = v1[634];
  v28 = v1[633];
  v29 = v1[631];
  v30 = v1[629];
  v31 = v1[628];
  v32 = v1[645];
  v1[77] = v32;
  v1[60] = v31;
  v1[61] = v30;
  v1[63] = v29;
  v1[65] = v28;
  v1[66] = v27;
  LODWORD(STACK[0x3FC]) = v26;
  v1[67] = v25;
  v1[69] = v24;
  v1[70] = v23;
  v1[71] = v22;
  v1[72] = v21;
  v1[74] = v20;
  LODWORD(STACK[0x40C]) = v19;
  v1[75] = v18;
  LODWORD(STACK[0x42C]) = v17;
  LODWORD(STACK[0x454]) = v16;
  v1[76] = v15;
  v1[79] = v14;
  v1[81] = v13;
  LODWORD(STACK[0x47C]) = v12;
  v1[82] = v11;
  LODWORD(STACK[0x488]) = v8;
  LODWORD(STACK[0x48C]) = v10;
  v1[146] = v32;
  v1[129] = v31;
  v1[130] = v30;
  v1[132] = v29;
  v1[134] = v28;
  v1[135] = v27;
  LODWORD(STACK[0x624]) = v26;
  v1[136] = v25;
  v1[138] = v24;
  v1[139] = v23;
  v1[140] = v22;
  v1[141] = v21;
  v1[143] = v20;
  LODWORD(STACK[0x634]) = v19;
  v1[144] = v18;
  LODWORD(STACK[0x654]) = v17;
  LODWORD(STACK[0x67C]) = v16;
  v1[145] = v15;
  v1[148] = v14;
  v1[150] = v13;
  LODWORD(STACK[0x6A4]) = v12;
  v1[151] = v11;
  LODWORD(STACK[0x6B0]) = v8;
  LODWORD(STACK[0x6B4]) = v10;
  v1[169] = v32;
  v1[152] = v31;
  v1[153] = v30;
  v1[155] = v29;
  v1[157] = v28;
  v1[158] = v27;
  LODWORD(STACK[0x6DC]) = v26;
  v1[159] = v25;
  v1[161] = v24;
  v1[162] = v23;
  v1[163] = v22;
  v1[164] = v21;
  v1[166] = v20;
  LODWORD(STACK[0x6EC]) = v19;
  v1[167] = v18;
  LODWORD(STACK[0x70C]) = v17;
  LODWORD(STACK[0x734]) = v16;
  v1[168] = v15;
  v1[171] = v14;
  v1[173] = v13;
  LODWORD(STACK[0x75C]) = v12;
  v1[174] = v11;
  LODWORD(STACK[0x768]) = v8;
  LODWORD(STACK[0x76C]) = v10;
  return v25();
}

void J8WWtDMwk(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  int v3;

  if (a1)
    v2 = a2 == 0;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_1A276B470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _DWORD *a11, uint64_t a12, uint64_t a13, _QWORD *a14)
{
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a11 = 0;
  *a14 = 0;
  *(_DWORD *)(v16 - 136) = 1756268191
                         * ((2011911771 - ((v16 - 136) | 0x77EB565B) + ((v16 - 136) | 0x8814A9A4)) ^ 0x5862765)
                         + 2305;
  v17 = sub_1A275B1A8((_DWORD *)(v16 - 136));
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((3976 * (*(_DWORD *)(v16 - 132) != 665312139)) ^ v14)))(v17);
}

uint64_t sub_1A276B51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_DWORD *)(v24 - 140) = 1718253555;
  v25 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8 * ((v20 ^ 0x345) - 902));
  v26 = v25(16, 2241923698);
  HIDWORD(a18) = 1718210903;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))(v21 + 8 * ((2658 * ((((v22 + (v20 ^ 0x45) + 1) ^ ((v20 ^ 0xEA) + 1)) ^ (v26 == 0)) & 1)) ^ v20 ^ 0x345)))(v26, v27, v28, v29, v30, v31, v32, v33, 2106769199 * ((v24 - 136) ^ 0x4011B86E6FFC2B35), (v24 - 136) | 0x7685EE044AE5191ALL, a11, a12, a13, a14, a15, &STACK[0x1EFC1F4B90642F2E], v24 + 0x278F89334A281624, a18, v25,
           a20);
}

uint64_t sub_1A276B638(uint64_t *a1)
{
  int v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v5;

  *a1 = 0;
  a1[1] = 0;
  v5 = v3(4096, 2241923698);
  *a1 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v5 != 0) * ((v1 + 167) ^ 0x22 ^ (313 * (v1 ^ 0x307)))) ^ v1))
                            - 12))();
}

uint64_t sub_1A276B690()
{
  _QWORD *v0;
  uint64_t (*v1)(void);
  uint64_t v2;

  *(_DWORD *)(v2 + 8) = 4096;
  *v0 = v2;
  return v1();
}

uint64_t sub_1A276B6C0()
{
  _QWORD *v0;
  uint64_t (*v1)(void);

  *v0 = 0;
  return v1();
}

uint64_t sub_1A276B6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v24;
  int v25;
  uint64_t v26;
  int v27;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26
                                                                                 + 8
                                                                                 * ((v25 + v27 + 52) ^ (2199 * v24)))
                                                                     - 4))(a1, a2, a24, a23);
}

uint64_t sub_1A276B708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  _BOOL4 v27;

  v26 = *(_QWORD *)(v24 + 8 * a3) - 4;
  v27 = *(unsigned int *)(a23 + 12) > 0xFFFFFFFAuLL;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24
                                                                        + 8
                                                                        * (((4 * v27) | (8 * v27)) ^ (v23 + v25 + 721)))
                                                            - (((v23 + v25 - 128) | 0x322u) ^ 0x326)))(a1, a2, v26);
}

uint64_t sub_1A276B8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  _BOOL4 v10;
  _BOOL4 v11;

  v8 = (v5 ^ 0x6DFFF2C2B1AFE97DLL) - 0x6DFFF2C272A753A5 + ((2 * v5) & 0x1635FD2FALL);
  v9 = (*(unsigned int *)(a4 + 8) ^ 0xB7FEFFC7B6D7EFAELL)
     + 0x480100388830A626
     + (((unint64_t)*(unsigned int *)(a4 + 8) << (v4 ^ (v7 - 30) ^ 0x6Du)) & 0x16DAFDF5CLL);
  v10 = v8 < 0x3F0895D4;
  v11 = v8 > v9;
  if (v10 != v9 < 0x3F0895D4)
    v11 = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((23 * v11) ^ v4)) - 4))();
}

void sub_1A276B9A4()
{
  JUMPOUT(0x1A276B9B4);
}

uint64_t sub_1A276BA4C@<X0>(unint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((((v1 ^ v2) + 390) ^ v3 ^ (3 * (v1 ^ v2))) * (2 * v4 > a1)) ^ v1))
                            - 12))();
}

uint64_t sub_1A276BA80()
{
  int v0;
  int v1;
  unint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v0 - 193) | v1) - 961) * (v2 >> 31 == 0)) ^ v0)) - 12))();
}

uint64_t sub_1A276BAB4@<X0>(unint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v2 - 585) | 0x83C) ^ 0x2A8) * (a1 < v1)) ^ v2)) - 12))();
}

uint64_t sub_1A276BAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v21 = v20(v18, 2241923698);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 + 8 * (((((v21 == 0) ^ (v17 - 1)) & 1) * (v17 - 1929)) ^ v17)) - 4))(v21, v22, a3, a4, a5, v23, v24, v25, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_1A276BB48(unint64_t a1)
{
  unint64_t *v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((30 * (*v1 > a1)) ^ (v2 - 86))))();
}

uint64_t sub_1A276BD14()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * ((v1 ^ 1 | (4 * (v1 ^ 1))) ^ v0)) - 8))(3618109438, 109);
}

uint64_t sub_1A276BD5C@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v8 = (v3 - 1723349844) & 0x66B837B6;
  v9 = v4 + v5 + (v8 - 747) - 585;
  *(_BYTE *)(v6 + v9) = *(_BYTE *)(a2 + v9);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((((1 - v2) | (v2 - 1)) >= 0) * a1) ^ v8)) - 4))();
}

uint64_t sub_1A276BDD0()
{
  unsigned int v0;
  unsigned __int8 v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v2
                                                               + 8
                                                               * ((3404
                                                                 * ((v1 ^ ((v0 ^ 0xFD) - 91)) & 1)) ^ v0))
                                                   - 4))(0x1FFBF5F60, 585);
}

uint64_t sub_1A276BE30@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = (v4 - 1814105016) & 0x6C210513;
  v11 = v3 - 1;
  v12 = (v11 ^ (v7 + (v10 ^ a2) - 585)) + v6 + (a1 & (2 * v11));
  *(_BYTE *)(v8 + v12) = *(_BYTE *)(a3 + v12);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * (int)(((((v11 - v10) | (v10 - (unint64_t)v11)) >> 63)
                                               * v5) ^ (v10 + 1369)))
                            - 4))();
}

uint64_t sub_1A276BEA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t (*a25)(uint64_t))
{
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;

  v29 = v25(*(_QWORD *)v26);
  *(_QWORD *)v26 = v28;
  *(_DWORD *)(v26 + 8) = v27;
  return a25(v29);
}

uint64_t sub_1A276BEE0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((v1 == 1718253555) * ((a1 + 895334854) ^ 0x637B4096)) ^ (v2 + a1 + 733)))
                            - 4))();
}

uint64_t sub_1A276BF24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,uint64_t a22,_DWORD *a23)
{
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;

  v25 = v23 + 58;
  v26 = *a4;
  v27 = a21 - ((a21 << (v25 ^ (v24 + 1))) & 0xBFE4C9AE) - 537762601;
  v28 = ((2 * *a23) & 0xFE67EEBE) + (*a23 ^ 0x7F33F75F) - 2134112095;
  *(_BYTE *)(*a4 + v28) = HIBYTE(v27) ^ 0xDF;
  *(_BYTE *)(v26 + v28 + 1) = BYTE2(v27) ^ 0xF2;
  *(_BYTE *)(v26 + v28 + 2) = ((BYTE1(v27) ^ 0x64) - ((2 * (BYTE1(v27) ^ 0x64)) & 0x96) + 75) ^ 0x4B;
  *(_BYTE *)(v26 + v28 + 3) = v27 ^ 0xD7;
  *a23 += 4;
  return a3();
}

uint64_t sub_1A276BFFC()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((2273 * (v0 == ((v3 + v1 - 111) | 0x504) + 1718252254)) ^ (v3 + v1)))
                            - 8))();
}

uint64_t sub_1A276C04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t *a28)
{
  uint64_t v28;
  int v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  int v33;
  unsigned int v34;
  int v35;
  uint64_t v36;

  *(_QWORD *)(v30 - 152) = 0;
  v31 = (char *)off_1E47CDD30[v29 ^ 0x51B] - 4;
  ((void (*)(char *))off_1E47CDD30[v29 ^ 0x525])(v31);
  v32 = *a28;
  v33 = 932829133 * ((((2 * (v30 - 136)) | 0x51810404) - (v30 - 136) - 683704834) ^ 0x888BDF8F);
  v34 = (v29 ^ 0xE0432398) - v33 + *((_DWORD *)a28 + 3) - ((2 * *((_DWORD *)a28 + 3)) & 0xC0864D1A);
  *(_DWORD *)(v30 - 116) = 1017140188 - v33 + 1793297355 * *(_DWORD *)off_1E47CDD30[v29 - 1243];
  *(_QWORD *)(v30 - 112) = a16;
  *(_QWORD *)(v30 - 104) = a17;
  *(_DWORD *)(v30 - 128) = v34;
  *(_DWORD *)(v30 - 120) = (v29 + 148) ^ v33;
  *(_QWORD *)(v30 - 136) = v32;
  ((void (*)(uint64_t))((char *)off_1E47CDD30[v29 - 1290] - 8))(v30 - 136);
  v35 = *(_DWORD *)(v30 - 124);
  v36 = ((uint64_t (*)(char *))off_1E47CDD30[v29 ^ 0x512])(v31);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v28 + 8 * (((v35 == 1934675644) * (v29 ^ 0x729)) ^ v29)) - 8))(v36);
}

uint64_t sub_1A276C1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(uint64_t);
  int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;

  v26 = 2106769199 * ((0x897A11FBB51AE6E5 - ((v25 - 136) | 0x897A11FBB51AE6E5) + a10) ^ 0x3694566A2519322FLL);
  *(_QWORD *)(v25 - 136) = v26 + *(_QWORD *)(v23 + 8 * v24) + (((_DWORD)v24 + 68519798) | 0x2A080224u) - 773688180;
  *(_DWORD *)(v25 - 128) = v24 - 822706943 - v26;
  *(_QWORD *)(v25 - 120) = v21;
  v27 = (void (*)(uint64_t))(*(_QWORD *)(v22 + 8 * ((int)v24 - 450)) - 4);
  v27(v25 - 136);
  v28 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v22 + 8 * ((int)v24 - 410)))(**(unsigned int **)(v22 + 8 * (int)(v24 ^ 0x1F6)), *(_QWORD *)(v22 + 8 * (int)(v24 ^ 0x1DD)) - 12, a21);
  v29 = ((2 * v28) & 0xDFF5FFE6) + (v28 ^ 0x6FFAFFF3);
  v30 = *(_QWORD *)(v23 + 8 * ((int)v24 - 65));
  *(_QWORD *)(v25 - 120) = v21;
  *(_DWORD *)(v25 - 128) = v24 - 822706943 - a9;
  *(_QWORD *)(v25 - 136) = a9 + v30 - 8;
  v31 = ((uint64_t (*)(uint64_t))v27)(v25 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23 + 8 * ((181 * (v29 != 1878720499)) ^ ((int)v24 + 863)))
                                          - 8))(v31);
}

uint64_t sub_1A276C300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void (*a12)(uint64_t), void (*a13)(uint64_t), uint64_t a14, uint64_t (*a15)(uint64_t), uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int *a21)
{
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;

  a13(v21);
  v26 = *a21;
  v27 = *v22;
  v28 = *((_DWORD *)v22 + 3);
  v29 = 932829133 * ((((v25 - 136) | 0x765265E5) - ((v25 - 136) & 0x765265E5)) ^ 0xD6193868);
  *(_QWORD *)(v25 - 112) = a16;
  *(_QWORD *)(v25 - 104) = a17;
  *(_QWORD *)(v25 - 136) = v27;
  *(_DWORD *)(v25 - 116) = 1017140188 - v29 + 1793297355 * v26;
  *(_DWORD *)(v25 - 128) = -532471031 - v29 + v28 - ((v28 << ((v24 - 78) ^ 0x85)) & 0xC0864D1A) + 900;
  *(_DWORD *)(v25 - 120) = (v24 + 983) ^ v29;
  a12(v25 - 136);
  v30 = *(_DWORD *)(v25 - 124);
  v31 = a15(v21);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23
                                                      + 8
                                                      * ((v30 == 1666240185) | ((v30 == 1666240185) << 9) | (v24 + 946)))
                                          - ((((v24 + 1073732138) & 0xEE1DAF6F) - 773687918) ^ 0xF6)))(v31);
}

void sub_1A276C458()
{
  JUMPOUT(0x1A276B5B8);
}

uint64_t sub_1A276C480()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  char v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((247 * (((v0 - v4 - 113) ^ (v1 == v2 + v0 + 1718253427)) & 1)) ^ (v2 + v0 + 765)))
                            - 12))();
}

uint64_t sub_1A276C4CC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  int v23;

  return ((uint64_t (*)(void))(*(_QWORD *)(v22
                                        + 8
                                        * (a1 ^ (v23 + 795) ^ a1 ^ (v23 + 119) ^ (3346
                                                                                * (((a22 == 0) ^ (15 * (a1 ^ 0xA6))) & 1))))
                            - 4))();
}

uint64_t sub_1A276C520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v16;
  _QWORD *v17;
  uint64_t v18;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8 * (int)(((*v17 == 0) * ((((v16 - 583) | 0x544) - 1379360507) ^ 0xADC8A684)) ^ v16)))(*v17, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_1A276C568()
{
  uint64_t (*v0)(uint64_t);
  _QWORD *v1;
  void (*v2)(void);
  uint64_t v3;

  v2();
  *v1 = 0;
  v1[1] = 0;
  v3 = ((uint64_t (*)(_QWORD *))v2)(v1);
  return v0(v3);
}

uint64_t sub_1A276D0E8()
{
  int v0;

  return (v0 - 1718253555);
}

void sub_1A276D130(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1A276D2EC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v6 = 7 * (v3 ^ (v0 - 34));
  *(_QWORD *)(v1 + 1056) = &STACK[0x278F89334A2823D4];
  *(_QWORD *)(v1 + 1072) = &STACK[0x1EFC1F4B90643D2E];
  *(_DWORD *)(v5 - 136) = v4
                        + v3
                        + 1756268191
                        * ((((v5 - 136) | 0xFE3B4E46) - (v5 - 136) + ((v5 - 136) & 0x1C4B1B8)) ^ 0x73A9C087);
  v7 = sub_1A275B1A8((_DWORD *)(v5 - 136));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * (((*(_DWORD *)(v5 - 132) != 665312139) * (v6 + 2813)) ^ (v4 + v3 - 851)))
                                          - 8))(v7);
}

uint64_t sub_1A276D3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(uint64_t, uint64_t),uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52)
{
  int v52;
  int v53;
  _QWORD *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  unsigned int v58;
  int v59;
  uint64_t v60;
  unint64_t v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  int v92;
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v58 = (v53 + 28905058) & 0xFE46F4ED;
  v59 = a11;
  v54[370] = 0;
  LODWORD(STACK[0xE84]) = v56;
  LODWORD(STACK[0xEC4]) = v56;
  v60 = *(_QWORD *)(v55 + 8 * v53);
  v61 = a11 | ((unint64_t)(a11 < v58 + 1396217937) << 32);
  v54[450] = v61 + 0x583233C9B0A82ACCLL;
  v54[451] = v61 - 0x2910DC5A577FD5FALL;
  v62 = (v59 ^ 0xA8B65B2D) & (2 * (v59 & 0xACC7634E)) ^ v59 & 0xACC7634E;
  v63 = ((2 * (v59 ^ 0xB9329BAD)) ^ 0x2BEBF1C6) & (v59 ^ 0xB9329BAD) ^ (2 * (v59 ^ 0xB9329BAD)) & 0x15F5F8E2;
  v64 = v63 ^ 0x14140821;
  v65 = (v63 ^ 0x1219040) & (4 * v62) ^ v62;
  v66 = ((4 * v64) ^ 0x57D7E38C) & v64 ^ (4 * v64) & 0x15F5F8E0;
  v67 = (v66 ^ 0x15D5E080) & (16 * v65) ^ v65;
  v68 = ((16 * (v66 ^ 0x201863)) ^ 0x5F5F8E30) & (v66 ^ 0x201863) ^ (16 * (v66 ^ 0x201863)) & 0x15F5F8E0;
  v69 = v67 ^ 0x15F5F8E3 ^ (v68 ^ 0x15558800) & (v67 << 8);
  v70 = a11 ^ (2
             * ((v69 << 16) & 0x15F50000 ^ v69 ^ ((v69 << 16) ^ 0x78E30000) & (((v68 ^ 0xA070C3) << 8) & 0x15F50000 ^ 0x50000 ^ (((v68 ^ 0xA070C3) << 8) ^ 0xF5F80000) & (v68 ^ 0xA070C3))));
  *(_BYTE *)(v57 - 148) = HIBYTE(v70) ^ 0xA6;
  *(_BYTE *)(v57 - 147) = BYTE2(v70) ^ 0xEE;
  *(_BYTE *)(v57 - 146) = ((BYTE1(v70) ^ 0x92) - ((2 * (BYTE1(v70) ^ 0x92)) & 0x96) + 75) ^ 0x4B;
  *(_BYTE *)(v57 - 145) = v70 ^ 0x88;
  LODWORD(STACK[0x258]) = a11 - 1396219058;
  v71 = v52 & 0x9B272D63;
  v72 = 2 * (v52 & 0x9B272D63);
  v73 = ((2 * (v52 ^ 0xA1983DA0)) ^ 0x757E2186) & (v52 ^ 0xA1983DA0) ^ (2 * (v52 ^ 0xA1983DA0)) & 0x3ABF10C2;
  v74 = v73 ^ 0xA811041;
  v75 = (v73 ^ 0x303C0080) & (4 * (v72 & (v52 ^ 0x93962D62) ^ v71)) ^ v72 & (v52 ^ 0x93962D62) ^ v71;
  v76 = ((4 * v74) ^ 0xEAFC430C) & v74 ^ (4 * v74) & 0x3ABF10C0;
  v77 = v75 ^ 0x3ABF10C3 ^ (v76 ^ 0x2ABC0000) & (16 * v75);
  v78 = (16 * (v76 ^ 0x100310C3)) & 0x3ABF10C0 ^ 0x100E10C3 ^ ((16 * (v76 ^ 0x100310C3)) ^ 0xABF10C30) & (v76 ^ 0x100310C3);
  v79 = (v77 << 8) & 0x3ABF1000 ^ v77 ^ ((v77 << 8) ^ 0xBF10C300) & v78;
  v54[452] = 4
           * (v52 ^ (2
                   * ((v79 << 16) & 0x3ABF0000 ^ v79 ^ ((v79 << 16) ^ 0x10C30000) & ((v78 << 8) & 0x3ABF0000 ^ 0xAF0000 ^ ((v78 << 8) ^ 0x3F100000) & v78))) ^ 0xBB7F0CE5)
           - 0xF2E4EEDFFFFE9FFLL;
  v80 = ((2 * (v52 ^ 0xDDFD586B)) ^ 0x8DB4EA10) & (v52 ^ 0xDDFD586B) ^ (2 * (v52 ^ 0xDDFD586B)) & 0x46DA7508;
  v81 = v80 ^ 0x424A1508;
  v82 = (v80 ^ 0x4906000) & (4 * (v72 & (v52 ^ 0xDBB7086B) ^ v71)) ^ v72 & (v52 ^ 0xDBB7086B) ^ v71;
  v83 = ((4 * v81) ^ 0x1B69D420) & v81 ^ (4 * v81) & 0x46DA7508;
  v84 = v82 ^ 0x46DA7508 ^ (v83 ^ 0x2485400) & (16 * v82);
  v85 = (16 * (v83 ^ 0x44922108)) & 0x46DA7500 ^ 0x2582508 ^ ((16 * (v83 ^ 0x44922108)) ^ 0x6DA75080) & (v83 ^ 0x44922108);
  v86 = (v84 << 8) & 0x46DA7500 ^ v84 ^ ((v84 << 8) ^ 0xDA750800) & v85;
  v87 = v52 ^ (2
             * ((v86 << 16) & 0x46DA0000 ^ v86 ^ ((v86 << 16) ^ 0x75080000) & ((v85 << 8) & 0x46DA0000 ^ 0x48A0000 ^ ((v85 << 8) ^ 0xDA750000) & v85)));
  *(_BYTE *)(v57 - 204) = HIBYTE(v87) ^ 0x1A;
  *(_BYTE *)(v57 - 203) = BYTE2(v87) ^ 0x23;
  *(_BYTE *)(v57 - 202) = ((BYTE1(v87) ^ 0xC7) - ((2 * (BYTE1(v87) ^ 0xC7)) & 0x96) + 75) ^ 0x4B;
  *(_BYTE *)(v57 - 201) = v87 ^ 0x73;
  LODWORD(STACK[0x25C]) = v52 - 993408686;
  LOBYTE(STACK[0x617]) = (v52 - 993408686) < 0x29A29BEF;
  LOBYTE(STACK[0x586]) = v52 == 1691931293;
  v88 = v72 & (v52 ^ 0x9B078D72) ^ v52 & 0x9B272D63;
  v89 = ((2 * (v52 ^ 0xAB079F32)) ^ 0x604164A2) & (v52 ^ 0xAB079F32) ^ (2 * (v52 ^ 0xAB079F32)) & 0x3020B250;
  v90 = (v89 ^ 0x20002000) & (4 * v88) ^ v88;
  v91 = ((4 * (v89 ^ 0x10209251)) ^ 0xC082C944) & (v89 ^ 0x10209251) ^ (4 * (v89 ^ 0x10209251)) & 0x3020B250;
  v92 = (v91 ^ 0x8040) & (16 * v90) ^ v90;
  v93 = ((16 * (v91 ^ 0x30203211)) ^ 0x20B2510) & (v91 ^ 0x30203211) ^ (16 * (v91 ^ 0x30203211)) & 0x3020B250;
  v94 = v92 ^ 0x3020B251 ^ (v93 ^ 0x2000) & (v92 << 8);
  LODWORD(STACK[0x284]) = (4 * v52) ^ (8
                                     * (((v94 << 16) ^ 0x12510000) & (((v93 ^ 0x30209241) << 8) & 0x30200000 ^ (((v93 ^ 0x30209241) << 8) ^ 0x20B20000) & (v93 ^ 0x30209241) ^ 0x10000000) ^ v94 ^ ((v94 << 16) & 0x10200000 | 0x9240))) ^ 0x6D9DB504;
  v60 -= 8;
  LODWORD(STACK[0x288]) = a11 - 1396219054;
  v54[439] = v60;
  v54[157] = &STACK[0xD10];
  v95 = v54[156];
  v54[20] = &STACK[0xD10];
  v54[21] = v95;
  v96 = v54[155];
  v54[25] = v54[437];
  LODWORD(STACK[0x384]) = a52;
  v97 = v54[154];
  v54[29] = v96;
  v54[30] = v97;
  v54[31] = v54[153];
  v54[34] = v54[152];
  v98 = v54[150];
  v54[37] = v54[151];
  v54[38] = v98;
  v54[39] = v60;
  v99 = a33(16, 2241923698);
  v54[40] = v99;
  v54[158] = 0;
  *(_BYTE *)(v57 - 150) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 + 8 * (int)((3199 * (v99 != 0)) ^ v58)) - ((v58 - 70) | 0xA4) + 1211))(v99, v100, v101, v102, v103, v104, v105, v106, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_1A276DA08()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v7;

  *(_QWORD *)(v0 + 1288) = &STACK[0x278F89334A281E4C];
  *(_QWORD *)(v0 + 1296) = &STACK[0x1EFC1F4B90643636];
  *(_DWORD *)(v5 - 136) = v4 + v2 + 1756268191 * ((((v5 - 136) | 0xE3980133) - ((v5 - 136) & 0xE3980133)) ^ 0x6E0A8FF2);
  v6 = sub_1A275B1A8((_DWORD *)(v5 - 136));
  v7 = *(_DWORD *)(v5 - 132) == (((v4 + v2 - 2017) | 7) ^ 0x27A7DAAC);
  LODWORD(STACK[0xB5C]) = v3;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * ((77 * v7) | (v4 + v2 - 1121))) - 8))(v6);
}

uint64_t sub_1A276DAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(uint64_t, uint64_t),uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  unint64_t v64;
  int v65;
  int v66;
  int v67;
  int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v83;

  v62 = (v58 - 7) | 0x2C4;
  v63 = *(_QWORD *)(v60 + 8 * v58) - 12;
  v64 = v57 | ((unint64_t)(v57 < v62 + 1251019489) << 32);
  v59[444] = v64 + 0x3F80BA4D282E0CCBLL;
  v59[445] = v64 - 0x509145B4DE121535;
  v65 = (v57 ^ 0xA46CF033) & (2 * (v57 & 0xB56EF13B)) ^ v57 & 0xB56EF13B;
  v66 = ((2 * (v57 ^ 0x8EEC7243)) ^ 0x770506F0) & (v57 ^ 0x8EEC7243) ^ (2 * (v57 ^ 0x8EEC7243)) & 0x3B828378;
  v67 = v66 ^ 0x8828108;
  v68 = (v66 ^ 0x33000070) & (4 * v65) ^ v65;
  v69 = ((4 * v67) ^ 0xEE0A0DE0) & v67 ^ (4 * v67) & 0x3B828378;
  v70 = v68 ^ 0x3B828378 ^ (v69 ^ 0x2A020160) & (16 * v68);
  v71 = (16 * (v69 ^ 0x11808218)) & 0x3B828370 ^ 0x3828078 ^ ((16 * (v69 ^ 0x11808218)) ^ 0xB8283780) & (v69 ^ 0x11808218);
  v72 = (v70 << 8) & 0x3B828300 ^ v70 ^ ((v70 << 8) ^ 0x82837800) & v71;
  v73 = v57 ^ (2
             * ((v72 << 16) & 0x3B820000 ^ v72 ^ ((v72 << 16) ^ 0x3780000) & ((v71 << 8) & 0x3B820000 ^ 0x39000000 ^ ((v71 << 8) ^ 0x2830000) & v71)));
  *(_BYTE *)(v61 - 204) = HIBYTE(v73) ^ 0xC1;
  *(_BYTE *)(v61 - 203) = BYTE2(v73) ^ 0x6F;
  *(_BYTE *)(v61 - 202) = ((BYTE1(v73) ^ 0xF7) - ((2 * (BYTE1(v73) ^ 0xF7)) & 0x96) + 75) ^ 0x4B;
  *(_BYTE *)(v61 - 201) = v73 ^ 0xCB;
  LODWORD(STACK[0x5AC]) = v57 - 1251020481;
  LODWORD(STACK[0x5CC]) = v57 - 1251020485;
  v59[116] = &STACK[0x7A0];
  v59[118] = v59[331];
  LODWORD(v83) = STACK[0xBD4];
  v59[144] = v59[329];
  v59[120] = v59[328];
  v59[121] = v59[327];
  HIDWORD(v83) = STACK[0xBB4];
  v59[122] = v59[325];
  v59[145] = v59[324];
  v59[124] = v59[322];
  v59[103] = v59[321];
  v59[104] = v59[320];
  v59[105] = v59[319];
  v59[106] = v59[318];
  v59[107] = v59[316];
  v59[108] = v63;
  v74 = a33(16, 2241923698);
  v59[109] = v74;
  v59[332] = 0;
  LOBYTE(STACK[0x617]) = 0;
  LODWORD(STACK[0xBEC]) = 1718210903;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(2738849 - ((v62 + 2148001) | 0x90020u) + *(_QWORD *)(v60 + 8 * ((1565 * (v74 != 0)) ^ v62)) - 4))(v74, v75, v76, v77, v78, v79, v80, v81, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           v83,
           a57);
}

uint64_t sub_1A276DCE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;

  *(_QWORD *)(v1 + 864) = &STACK[0x278F89334A281CE4];
  *(_QWORD *)(v1 + 872) = &STACK[0x1EFC1F4B90642FB6];
  v7 = 0x37EC9829235B0AB9 * v0 - 0x41B926048DC99FEBLL;
  v8 = (v7 ^ 0x9408C4790FC1B96BLL) & (2 * (v7 & 0xA09286018FEA3C6CLL)) ^ v7 & 0xA09286018FEA3C6CLL;
  v9 = ((((v5 + v3 - 2233) | 0xB4u) + 0x693E9CF108FF9A92) ^ (2 * (v7 ^ 0x940DC8790B95F1ABLL))) & (v7 ^ 0x940DC8790B95F1ABLL) ^ (2 * (v7 ^ 0x940DC8790B95F1ABLL)) & 0x349F4E78847FCDC6;
  v10 = v9 ^ 0x1481420884004441;
  v11 = (v9 ^ 0x1E080000798180) & (4 * v8) ^ v8;
  v12 = ((4 * v10) ^ 0xD27D39E211FF371CLL) & v10 ^ (4 * v10) & 0x349F4E78847FCDC4;
  v13 = (v12 ^ 0x101D0860007F0500) & (16 * v11) ^ v11;
  v14 = ((16 * (v12 ^ 0x248246188400C8C3)) ^ 0x49F4E78847FCDC70) & (v12 ^ 0x248246188400C8C3) ^ (16 * (v12 ^ 0x248246188400C8C3)) & 0x349F4E78847FCDC0;
  v15 = (v14 ^ 0x944608047CCC00) & (v13 << 8) ^ v13;
  v16 = (((v14 ^ 0x340B087080030187) << 8) ^ 0x9F4E78847FCDC700) & (v14 ^ 0x340B087080030187) ^ ((v14 ^ 0x340B087080030187) << 8) & 0x349F4E78847FCD00;
  v17 = v15 ^ 0x349F4E78847FCDC7 ^ (v16 ^ 0x140E4800044D0000) & (v15 << 16);
  v18 = v7 ^ (2
            * ((v17 << 32) & 0x349F4E7800000000 ^ v17 ^ ((v17 << 32) ^ 0x47FCDC700000000) & (((v16 ^ 0x20910678803208C7) << 16) & 0x349F4E7800000000 ^ 0x30874A0000000000 ^ (((v16 ^ 0x20910678803208C7) << 16) ^ 0x4E78847F00000000) & (v16 ^ 0x20910678803208C7))));
  *(_BYTE *)(v6 - 144) = HIBYTE(v18) ^ 0xC1;
  *(_BYTE *)(v6 - 143) = BYTE6(v18) ^ 0x92;
  *(_BYTE *)(v6 - 142) = BYTE5(v18) ^ 0x82;
  *(_BYTE *)(v6 - 141) = BYTE4(v18) ^ 0x70;
  *(_BYTE *)(v6 - 140) = BYTE3(v18) ^ 0x87;
  *(_BYTE *)(v6 - 139) = BYTE2(v18) ^ 0x15;
  *(_BYTE *)(v6 - 138) = BYTE1(v18) ^ 0xA7;
  *(_BYTE *)(v6 - 137) = v18 ^ 0xE2;
  *(_DWORD *)(v6 - 136) = v5 + v3 + 1756268191 * ((2 * ((v6 - 136) & 0x44E05618) - (v6 - 136) + 991930850) ^ 0xB68D2723);
  v19 = sub_1A275B1A8((_DWORD *)(v6 - 136));
  v20 = *(_DWORD *)(v6 - 132) != 665312139;
  LODWORD(STACK[0x204]) = v4;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * ((251 * v20) ^ (v5 + v3 - 1157))) - 12))(v19);
}

uint64_t sub_1A276E064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(uint64_t, uint64_t),uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v55[148] = 0;
  v59 = (v54 ^ 0xFFFFFFFFFFFFFF08) + *(_QWORD *)(v56 + 8 * v54);
  v55[110] = v57 + 0x6D2D49A80E8EE51ALL;
  v55[114] = v59;
  v55[182] = &STACK[0x620];
  v60 = v55[181];
  v55[39] = &STACK[0x620];
  v55[40] = v60;
  LODWORD(STACK[0x3CC]) = STACK[0x208];
  v55[42] = v55[180];
  v61 = v55[178];
  v55[44] = v55[179];
  v55[45] = v61;
  v55[46] = v55[177];
  v62 = v55[114];
  v55[51] = v55[176];
  v55[53] = v62;
  v63 = a33(16, 2241923698);
  v55[55] = v63;
  v55[183] = 0;
  LODWORD(STACK[0x20C]) = 1718210903;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8 * (int)((1176 * ((v54 ^ 0xB6 ^ (v58 - 1) ^ ((v54 ^ 0xB6) - 98) ^ (v63 == 0)) & 1)) ^ v54 ^ 0x3B6)))(v63, v64, v65, v66, v67, v68, v69, v70, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_1A276E0A8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v6;

  *(_QWORD *)(v0 + 120) = &STACK[0x278F89334A281C4C];
  *(_QWORD *)(v0 + 144) = &STACK[0x1EFC1F4B90643426];
  *(_DWORD *)(v4 - 136) = v3
                        + v2
                        + 1756268191
                        * ((-1102277427 - ((v4 - 136) | 0xBE4C94CD) + ((v4 - 136) | 0x41B36B32)) ^ 0xCC21E5F3);
  v5 = sub_1A275B1A8((_DWORD *)(v4 - 136));
  v6 = *(_DWORD *)(v4 - 132) != ((v3 + v2 - 1926) ^ 0x27A7DAF0);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * (((2 * v6) | (32 * v6)) ^ (v3 + v2 - 118))) - 8))(v5);
}

void sub_1A276E184()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  _BYTE v10[20];
  int v11;
  char v12;

  v5 = 37 * (v0 ^ 0x174u);
  v1[131] = 0;
  v11 = v3;
  v1[145] = v5 + *(_QWORD *)(v2 + 8 * v0) - 567;
  v1[110] = v10;
  v1[55] = v10;
  v6 = v1[108];
  v1[59] = v1[109];
  v1[60] = v6;
  v7 = v1[145];
  v1[61] = v1[107];
  v1[62] = v7;
  v8 = v9(16, 2241923698);
  v1[63] = v8;
  v1[111] = 0;
  v12 = 0;
  __asm { BR              X8 }
}

uint64_t sub_1A2776238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(uint64_t, uint64_t))
{
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v36 = *(_QWORD **)(v34 + 504);
  *v36 = 0;
  v36[1] = 0;
  *(_QWORD *)(v34 + 520) = v36 + 1;
  v37 = a33(4096, 2241923698);
  **(_QWORD **)(v34 + 504) = v37;
  return ((uint64_t (*)(void))(*(_QWORD *)(v35 + 8 * ((934 * (v37 == 0)) ^ v33))
                            - (((v33 ^ 0x39Au) - 8) ^ (v33 + 122))))();
}

uint64_t sub_1A27762A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t (*a37)(_QWORD))
{
  int v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a37(*(_QWORD *)(v38 + 504));
  *(_QWORD *)(v38 + 888) = 0;
  LOBYTE(STACK[0x617]) = 0;
  LODWORD(STACK[0x3A4]) = v37;
  LOBYTE(STACK[0x587]) = STACK[0x617];
  **(_QWORD **)(v38 + 440) = *(_QWORD *)(v38 + 888);
  return (*(uint64_t (**)(uint64_t))(v38 + 496))(v39);
}

uint64_t sub_1A2776314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;

  *(_QWORD *)(v39 + 992) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 + 8 * ((LOBYTE(STACK[0x587]) * (3 * (v41 ^ 0x29CAB4) + 469)) ^ (v42 + v41 - 2208))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_1A277635C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;
  uint64_t v38;
  int v39;
  unsigned int v40;
  uint64_t v41;

  v40 = STACK[0x58C];
  LODWORD(STACK[0x2A4]) = STACK[0x58C];
  v41 = *(_QWORD *)(v37 + 1056);
  *(_QWORD *)(v37 + 248) = v41;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(2738849 - (a9 - v39 + 2254) + *(_QWORD *)(v38 + 8 * ((2380 * (v40 > *(_DWORD *)(v41 + 8))) ^ a9)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

void sub_1A27763AC(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[126] = ((a1 + 699896064) ^ 0xFFFFFFFFD6486ECBLL) + *(_QWORD *)(v2 + 8 * a1);
  v3 = v1[59];
  LODWORD(STACK[0x204]) = STACK[0x384];
  v4 = v1[31];
  *v1 = v3;
  v1[1] = v4;
  JUMPOUT(0x1A27763F8);
}

uint64_t sub_1A2776500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  uint64_t v57;

  HIDWORD(a44) = STACK[0x20C];
  *(_QWORD *)(v57 + 896) = *(_QWORD *)(v57 + 632);
  *(_QWORD *)(v57 + 904) = *(_QWORD *)(v57 + 624);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 640))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           *(_QWORD *)(v57 + 608),
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_1A277653C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int a66;
  _QWORD *v66;
  uint64_t v67;
  int v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;

  LODWORD(STACK[0x3E8]) = a65;
  v66[71] = a41;
  v71 = v66[113];
  v66[72] = v71;
  v72 = v66[112];
  v66[74] = v72;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 + 8 * (((a66 == v68) * (a9 ^ (v70 - 548) ^ 0x9D5)) ^ (v69 + a9 - 1756))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           v72,
           v71,
           a45,
           a46,
           a47,
           a48,
           a41,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

uint64_t sub_1A27765A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  char v61;
  _QWORD *v62;
  int v63;
  char v64;
  char v65;
  uint64_t *v66;
  uint64_t v67;
  _DWORD *v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  uint64_t (*v73)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v65 = v64 + v61;
  v66 = (uint64_t *)v62[72];
  v67 = *v66;
  v68 = (_DWORD *)v62[74];
  v69 = STACK[0x3E8];
  v70 = v69 - ((2 * v69) & 0xBFE4C9AE) - 537762601;
  v71 = ((2 * *v68) & 0xDFE73AA2) + (*v68 ^ 0x6FF39D51) - 1878236497;
  *(_BYTE *)(*v66 + v71) = (v65 + 22) ^ ((LODWORD(STACK[0x3E8]) - ((2 * LODWORD(STACK[0x3E8])) & 0xBFE4C9AE) - 537762601) >> 24);
  *(_BYTE *)(v67 + v71 + 1) = BYTE2(v70) ^ 0xF2;
  *(_BYTE *)(v67 + v71 + 2) = ((BYTE1(v70) ^ 0x64) - ((2 * (BYTE1(v70) ^ 0x64)) & 0x96) + 75) ^ 0x4B;
  *(_BYTE *)(v67 + v71 + 3) = (v69 - ((2 * v69) & 0xAE) - 41) ^ 0xD7;
  *v68 += 4;
  v73 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v62[71];
  v62[134] = v68;
  v62[135] = v66;
  v62[136] = v73;
  LODWORD(STACK[0x5CC]) = v69;
  LODWORD(STACK[0x528]) = v63;
  v62[138] = v68;
  v62[139] = v66;
  v62[140] = v73;
  LODWORD(STACK[0x52C]) = v69;
  LODWORD(STACK[0x53C]) = v63;
  v62[115] = v68;
  v62[116] = v66;
  v62[118] = v73;
  LODWORD(STACK[0x558]) = v69;
  LODWORD(STACK[0x55C]) = v63;
  v62[120] = v68;
  v62[121] = v66;
  v62[122] = v73;
  LODWORD(STACK[0x56C]) = v69;
  HIDWORD(a41) = v63;
  return v73(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           v68,
           v66,
           a44,
           a45,
           a46,
           a47,
           v73,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

uint64_t sub_1A27766D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45)
{
  int v45;
  uint64_t v46;
  int v47;
  int v48;
  int v49;

  LODWORD(STACK[0x2CC]) = a45;
  return ((uint64_t (*)(void))(*(_QWORD *)(v46
                                        + 8
                                        * (((16
                                           * (((3 * (v45 ^ (v49 + 46))) ^ (a45 == v47
                                                                                                 + ((v48 + v45 - 2209) | 1)
                                                                                                 - 97)) & 1)) & 0xDF | (32 * (((3 * (v45 ^ (v49 - 466))) ^ (a45 == v47 + ((v48 + v45 - 2209) | 1) - 97)) & 1))) ^ (v48 + v45 - 109)))
                            - 8))();
}

uint64_t sub_1A2776730()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v4 = v1[132];
  v5 = *(_QWORD *)(v2 + 8 * v0) - 8;
  v6 = v4 == 0;
  v1[9] = v5;
  v1[10] = v4;
  LODWORD(v4) = STACK[0x2CC];
  LODWORD(STACK[0x25C]) = STACK[0x2CC];
  v1[11] = 0;
  LODWORD(STACK[0x288]) = v4;
  v1[13] = v5;
  v1[14] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(v0 ^ (173 * (v0 ^ 0x64)) ^ 0xB64 ^ (23
                                                                                  * ((v6 ^ (v0 - v3)) & 1))))
                            - 12))();
}

uint64_t sub_1A277679C()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  LODWORD(STACK[0x498]) = STACK[0x284];
  v1[94] = v1[11];
  LODWORD(STACK[0x49C]) = STACK[0x25C];
  v5 = v1[9];
  v4 = (uint64_t *)v1[10];
  v1[100] = v4;
  v1[101] = v5;
  v6 = *v4;
  v1[102] = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1563 * (v6 == 0)) ^ v0))
                            - (((v0 ^ (v3 - 224)) + 1909198104) ^ 0x71F5D7B5)))();
}

uint64_t sub_1A27777A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t (*a37)(void))
{
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);

  v38 = (_QWORD *)v37[100];
  *v38 = 0;
  v38[1] = 0;
  v39 = a37();
  v40 = v37[101];
  LODWORD(STACK[0x288]) = STACK[0x49C];
  v41 = v37[94];
  v37[13] = v40;
  v37[14] = v41;
  LODWORD(STACK[0x28C]) = STACK[0x498];
  v43 = (uint64_t (*)(uint64_t))v37[13];
  v42 = v37[14];
  v37[124] = 0;
  v37[106] = v42;
  return v43(v39);
}

_DWORD *sub_1A277780C()
{
  _DWORD *result;
  _DWORD *v1;
  int v2;

  result = v1;
  *v1 = v2;
  return result;
}

uint64_t sub_1A2777814@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33)
{
  uint64_t v33;
  uint64_t v34;

  *(_QWORD *)(v33 + 736) = 2 * *(_QWORD *)(v33 + 728);
  return (*(uint64_t (**)(void))(v34 + 8 * (((a33 == 15) * (((a1 - 223) | 0x1C3) - 1487)) ^ a1)))();
}

uint64_t sub_1A2777850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  int v40;
  uint64_t v41;

  return (*(uint64_t (**)(void))(v41
                              + 8
                              * ((51 * (a40 == ((v40 + 1634292256) ^ 0x9E96ACC1) + ((v40 + 1634292256) & 0x9E96ACD7))) ^ v40)))();
}

uint64_t sub_1A277789C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  int v40;
  uint64_t v41;

  return (*(uint64_t (**)(void))(v41 + 8 * (((((v40 - 897) | 0x264) + ((v40 - 907) | 4) - 1368) * (a40 == 12)) ^ v40)))();
}

uint64_t sub_1A27778D4()
{
  unint64_t v0;
  unint64_t v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 1016) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (int)(((((2 * v2) ^ 0x2EC) - 355) * (v0 <= v1)) ^ v2))
                            - (v2 ^ 0x198)))();
}

uint64_t sub_1A2777910()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v1 + 1016);
  *(_QWORD *)(v1 + 728) = v4;
  LODWORD(STACK[0x20C]) = 1718210905;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v3 + ((41 * (v0 ^ 0x1DB) + 523018) | 0x21CAA4) - 1367)
                                          * ((v4 & 0xFFFFFFFF80000000) != 0)) ^ v0))
                            - 4))();
}

uint64_t sub_1A2777974()
{
  unint64_t v0;
  unint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 3576) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8
                                             * ((((((v2 - 680) ^ 0x590) - 1247) ^ 0xB7C) * (v0 > v1)) ^ (v2 - 680)))
                            - 4))();
}

uint64_t sub_1A27779AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;
  uint64_t v65;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 + 8 * (((2 * ((a65 & 1) == 0)) & 0xF7 | (8 * ((a65 & 1) == 0))) ^ a9)) - ((a9 + 128705604) & 0xF87DDFBD) - (((a9 - 1503) | 0x203u) ^ 0xFFFFFFFFFFD637A4)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_1A2777A18()
{
  unint64_t v0;
  unint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 24) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((((v2 - 469137884) & 0x1BF677FA ^ 0x104) * (v0 > v1)) ^ v2)) - 4))();
}

uint64_t sub_1A2777A5C()
{
  unsigned int v0;
  uint64_t v1;
  int v2;

  LODWORD(STACK[0x28C]) = 1718210905;
  return (*(uint64_t (**)(void))(v1 + 8 * ((LOBYTE(STACK[0x457]) * (((v0 + 2115374) | 0x98085) ^ (v2 + 180))) ^ v0)))();
}

uint64_t sub_1A2777AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(_QWORD, uint64_t),uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;

  v40 = a33(*(_QWORD *)(v39 + 736), 2241923698);
  *(_QWORD *)(v39 + 704) = v40;
  LODWORD(STACK[0x28C]) = 1718210903;
  return (*(uint64_t (**)(void))(a38
                              + 8
                              * (((((v40 == 0) ^ (15 * (v38 ^ 0x8F))) & 1)
                                * ((v38 + 133953467) & 0x382DCFF7 ^ 0x29CCCB)) ^ v38)))();
}

uint64_t sub_1A2777B28()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = **(_QWORD **)(v1 + 608);
  *(_QWORD *)(v1 + 744) = v3;
  v4 = (**(unsigned int **)(v1 + 696) ^ 0x61EAF7C73FA63FEFLL)
     + ((2 * **(_DWORD **)(v1 + 696)) & 0x7F4C7FDE)
     + ((v0 + 1809057956) & 0x942BF86F ^ 0xFFBFDCBBC8FFE567);
  v5 = ((v4 & 0x4F759D311) << ((v0 + 68) & 0x79 ^ 0x10u)) & (v4 ^ 0xBB8AA7FAE651DB1DLL) ^ v4 & 0x4F759D311;
  v6 = ((2 * (v4 ^ 0xBB8AA7FA4CC1FF1FLL)) ^ 0x4A20110D7730581CLL) & (v4 ^ 0xBB8AA7FA4CC1FF1FLL) ^ (2
                                                                                                 * (v4 ^ 0xBB8AA7FA4CC1FF1FLL)) & 0x25DF8C86BB982C0ELL;
  v7 = v6 ^ 0x2440848288882402;
  v8 = (v6 ^ 0x244084843300280CLL) & (4 * v5) ^ v5;
  v9 = ((4 * v7) ^ 0x977E321AEE60B038) & v7 ^ (4 * v7) & 0x25DF8C86BB982C0CLL;
  v10 = (v9 ^ 0x55E0002AA002000) & (16 * v8) ^ v8;
  v11 = ((16 * (v9 ^ 0x20818C8411980C06)) ^ 0x5DF8C86BB982C0E0) & (v9 ^ 0x20818C8411980C06) ^ (16 * (v9 ^ 0x20818C8411980C06)) & 0x25DF8C86BB982C00;
  *(_QWORD *)(v1 + 760) = v4 ^ (2
                              * (((((v11 ^ 0x2007048402182C0ELL) << 8) ^ 0xDF8C86BB982C0E00) & (v11 ^ 0x2007048402182C0ELL) ^ ((v11 ^ 0x2007048402182C0ELL) << 8) & 0x25DF8C86BB982C00) & 0x880280800000000 ^ (v11 ^ 0x5D88802B9800000) & (v10 << 8) ^ v10 ^ ((((v11 ^ 0x2007048402182C0ELL) << 8) ^ 0xDF8C86BB982C0E00) & (v11 ^ 0x2007048402182C0ELL) ^ ((v11 ^ 0x2007048402182C0ELL) << 8) & 0x25DF8C86BB982C00 ^ 0x58C848298080000) & (((v11 ^ 0x5D88802B9800000) & (v10 << 8) ^ v10) << 16))) ^ 0x98F01017730581CLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (32 * (v3 > *(_QWORD *)(v1 + 704))))) - 8))();
}

uint64_t sub_1A2777D98@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;

  LODWORD(STACK[0x490]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v4 + a1 + v3 - 4237) * (v1 == 0)) ^ a1)) - (a1 ^ 0xD29u) + 1354))();
}

uint64_t sub_1A2777DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;

  *(_QWORD *)(v41 + 776) = LODWORD(STACK[0x490]);
  return (*(uint64_t (**)(void))(v42 + 8 * (((a40 == 13) * ((v43 + v40 - 780 - 731) ^ v40 ^ (v43 + 1351))) ^ v40)))();
}

uint64_t sub_1A2777E10()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v1[23] = 0;
  v4 = v1[97] - 1;
  *(_BYTE *)(v1[88] + (v0 - v3 + 1727) - 2738853) = *(_BYTE *)(v1[93]
                                                                             + (v0 - v3 + 1727)
                                                                             - 2738853);
  return (*(uint64_t (**)(void))(v2 + 8 * ((14 * (v4 == 0)) ^ v0)))();
}

void sub_1A2777E98()
{
  JUMPOUT(0x1A2777E60);
}

uint64_t sub_1A2777EA4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,__int16 a56,char a57,unsigned __int8 a58)
{
  uint64_t v58;
  int v59;
  int v60;

  LODWORD(STACK[0x20C]) = 1718210905;
  return ((uint64_t (*)(void))(*(_QWORD *)(v58 + 8 * ((a58 * (v59 + (a1 ^ (v60 - 473)) - 911)) ^ a1))
                            - ((a1 + 89) ^ 0x2C3)))();
}

uint64_t sub_1A2777EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(_QWORD, uint64_t),uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  int v40;
  uint64_t v41;
  uint64_t v42;

  *(_QWORD *)(v41 + 664) = a33(*(_QWORD *)(v41 + 736), 2241923698);
  return ((uint64_t (*)(void))(*(_QWORD *)(v42 + 8 * ((453 * (a40 == (((v40 ^ 0x2C3) + 2117) ^ 0x846))) ^ v40))
                            - 569 * (v40 ^ 0x2C3u)
                            + 2264))();
}

uint64_t sub_1A2777F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  uint64_t v56;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 + 8 * (((((a1 == 0) ^ (v55 + 1)) & 1) * (337 * (v55 ^ 0x8E3) - 2336)) ^ v55)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_1A2777F94()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v3 = **(_QWORD **)(v1 + 560);
  *(_QWORD *)(v1 + 672) = v3;
  v4 = (**(unsigned int **)(v1 + 656) ^ 0xDFDDB57BFDE9EFBDLL)
     + 0x7373FED5BFD77678
     + (((v0 - 1762) ^ 0x1FBD3DD2FLL) & (2 * **(unsigned int **)(v1 + 656)));
  v5 = (v4 ^ (((v0 + 1429581127) & 0xAACA4FED) - 0x67A0C128CFC3B0CALL)) & (2 * (v4 & 0x2423E99CBLL)) ^ v4 & 0x2423E99CBLL;
  v6 = ((2 * (v4 ^ 0x985F3ED3340C66A4)) ^ 0x49028A82EC65FEDELL) & (v4 ^ 0x985F3ED3340C66A4) ^ (2
                                                                                                 * (v4 ^ 0x985F3ED3340C66A4)) & 0x34F1757D7632FF6ELL;
  v7 = v6 ^ 0x1411150512120121;
  v8 = (v6 ^ 0x180020EE4CLL) & (4 * v5) ^ v5;
  v9 = ((4 * v7) ^ 0xD3C5D5F5D8CBFDBCLL) & v7 ^ (4 * v7) & 0x34F1757D7632FF6CLL;
  v10 = (v9 ^ 0x10C155755002FD20) & (16 * v8) ^ v8;
  v11 = ((16 * (v9 ^ 0x2430200826300243)) ^ 0x4F1757D7632FF6F0) & (v9 ^ 0x2430200826300243) ^ (16 * (v9 ^ 0x2430200826300243)) & 0x34F1757D7632FF60;
  v12 = (v11 ^ 0x41155556222F600) & (v10 << 8) ^ v10;
  v13 = (((v11 ^ 0x30E020281410090FLL) << 8) ^ 0xF1757D7632FF6F00) & (v11 ^ 0x30E020281410090FLL) ^ ((v11 ^ 0x30E020281410090FLL) << 8) & 0x34F1757D7632FF00;
  *(_QWORD *)(v1 + 760) = v4 ^ (2 * (v13 & 0x7430762200000000 ^ v12 ^ (v13 ^ 0x3071757432320000) & (v12 << 16))) ^ 0x61E2E860EC65FEDELL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((98 * (v3 > *(_QWORD *)(v1 + 664))) ^ v0)) - 4))();
}

uint64_t sub_1A27781FC()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;

  LODWORD(STACK[0x40C]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v0 - v3 + 1708) ^ (v4 - 1767) ^ 0x920) * (v1 == 0)) ^ v0)) - 8))();
}

uint64_t sub_1A2778234(uint64_t a1)
{
  unsigned int v1;
  uint64_t v2;

  LODWORD(STACK[0x20C]) = 1718210903;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((((v1 - 500) ^ 0x671) * (a1 == 0)) ^ v1)) - (v1 ^ 0x841)))();
}

uint64_t sub_1A277828C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = **(_QWORD **)(v1 + 600);
  *(_QWORD *)(v1 + 672) = v3;
  v4 = (**(unsigned int **)(v1 + 656) ^ (((a1 + 218914856) & 0xF2F39BD7) + 0x6B7F7EDF3F99CCEALL))
     + ((2 * **(_DWORD **)(v1 + 656)) & 0x7F339E7E)
     - 0x86F161000004B05;
  v5 = ((v4 & 0x10C0667BC6) << ((a1 - 86) & 0xEF ^ 0xEEu)) & (v4 ^ 0xDB4F6230BF4773F6) ^ v4 & 0x10C0667BC6;
  v6 = ((2 * (v4 ^ 0xDB4F62113F8B76FELL)) ^ 0x88410A43FFDA1A70) & (v4 ^ 0xDB4F62113F8B76FELL) ^ (2
                                                                                                 * (v4 ^ 0xDB4F62113F8B76FELL)) & 0x47A0F521FFED0D38;
  v7 = v6 ^ 0x40A0152000250508;
  v8 = (v6 ^ 0x40A01521038C0830) & (4 * v5) ^ v5;
  v9 = ((4 * v7) ^ 0x1E83D487FFB434E0) & v7 ^ (4 * v7) & 0x47A0F521FFED0D38;
  v10 = (v9 ^ 0x680D401FFA40430) & (16 * v8) ^ v8;
  v11 = ((16 * (v9 ^ 0x4120212000490918)) ^ 0x7A0F521FFED0D380) & (v9 ^ 0x4120212000490918) ^ (16 * (v9 ^ 0x4120212000490918)) & 0x47A0F521FFED0D30;
  *(_QWORD *)(v1 + 760) = v4 ^ (2
                              * (((((v11 ^ 0x5A0A520012D0C38) << 8) ^ 0xA0F521FFED0D3800) & (v11 ^ 0x5A0A520012D0C38) ^ ((v11 ^ 0x5A0A520012D0C38) << 8) & 0x47A0F521FFED0D00) & 0x75210D2800000000 ^ (v11 ^ 0x42005001FEC00100) & (v10 << 8) ^ v10 ^ ((((v11 ^ 0x5A0A520012D0C38) << 8) ^ 0xA0F521FFED0D3800) & (v11 ^ 0x5A0A520012D0C38) ^ ((v11 ^ 0x5A0A520012D0C38) << 8) & 0x47A0F521FFED0D00 ^ 0xA02121ED0D0000) & (((v11 ^ 0x42005001FEC00100) & (v10 << 8) ^ v10) << 16))) ^ 0x41E243FFDA1A70;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((4 * (v3 <= *(_QWORD *)(v1 + 664))) | (8 * (v3 <= *(_QWORD *)(v1 + 664)))) ^ a1))
                            - 4))();
}

uint64_t sub_1A2778504()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  LODWORD(STACK[0x434]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (19 * (v1 == 0))))
                            - ((v0 - v3 + 1298) ^ 0xFFFFFFFFFFD6330DLL)
                            - 3 * (v0 ^ 0x1CFu)))();
}

uint64_t sub_1A2778550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  uint64_t v39;
  int v40;
  unsigned int v41;
  uint64_t v42;

  v41 = LODWORD(STACK[0x434]) - 1;
  v42 = (v41 ^ 0x7B177EDEFFDFAFB0) - 0x7B177EDEFFDFAFB0 + ((2 * (LODWORD(STACK[0x434]) - 1)) & 0x1FFBF5F60);
  *(_BYTE *)(*(_QWORD *)(v38 + 664) + v42) = *(_BYTE *)(*(_QWORD *)(v38 + 672) + v42);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * (((v41 == 0) * (((a9 + 620964) | 0x204AA1) ^ (v40 + 9))) | a9)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1A27785F0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;

  LODWORD(STACK[0x434]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((a1 ^ 0x68C) * (v1 == 0)) ^ a1))
                            - ((v3 + a1 - 1643) ^ 0x29CAA1)))();
}

uint64_t sub_1A277862C@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a1 ^ 0x24E;
  v4 = LODWORD(STACK[0x434]);
  v1[449] = v4;
  LODWORD(v4) = v4 - 1;
  v5 = (v4 ^ 0x7B177EDEFFDFAFB0)
     - 0x7B177EDEFFDFAFB0
     + ((((v3 + 2180191) | 0x88224u) + 0x1FF9594BBLL) & (2 * v4));
  *(_BYTE *)(v1[83] + v5) = *(_BYTE *)(v1[84] + v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((3379 * (v4 == 0)) ^ v3)) - 8))();
}

uint64_t sub_1A27786D0()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x40C]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (425 * (v1 == 0))))
                            + 2738849
                            - ((v0 + 2164687) | 0x8C081u)
                            - 3 * (v0 ^ 0x15Du)
                            + 2324))();
}

uint64_t sub_1A2778730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  int v40;
  uint64_t v41;
  uint64_t v42;

  *(_QWORD *)(v41 + 776) = LODWORD(STACK[0x40C]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v42
                                        + 8
                                        * (int)(((a40 == 15) * ((((v40 - 160) | 4) ^ 0xFFFFF207) + 9 * (v40 ^ 0x9BB))) ^ v40))
                            - 12))();
}

uint64_t sub_1A2778778@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 3584) = 0;
  v3 = *(_QWORD *)(v1 + 776) - 1;
  **(_BYTE **)(v1 + 664) = **(_BYTE **)(v1 + 672);
  return ((uint64_t (*)(void))(2738849
                            - ((a1 - 2046957717) & 0x7A2BDABD)
                            + *(_QWORD *)(v2 + 8 * ((479 * (v3 == 0)) ^ a1))
                            - 8))();
}

void sub_1A2778820()
{
  JUMPOUT(0x1A27787E4);
}

uint64_t sub_1A2778828()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  LODWORD(STACK[0x494]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((((v0 ^ (v3 + 528)) - v3 + 1523) ^ 0x5F2) * (v1 == 0)) | v0))
                            - 12))();
}

uint64_t sub_1A2778860@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = LODWORD(STACK[0x494]);
  v3[24] = v5;
  LODWORD(v5) = v5 - 1;
  v6 = (v5 ^ 0x7B177EDEFFDFAFB0)
     - 0x7B177EDEFFDFAFB0
     + ((((v2 + a1 + 949) | (v1 + 2509)) + 0x1FF9594BBLL) & (2 * v5));
  *(_BYTE *)(v3[88] + v6) = *(_BYTE *)(v3[93] + v6);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1006 * (v5 == 0)) ^ a1)) - 4))();
}

uint64_t sub_1A27788F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  int v40;
  uint64_t v41;

  return ((uint64_t (*)(void))(*(_QWORD *)(v41 + 8 * ((7 * (a40 == 12)) ^ v40))
                            - ((v40 + 809754851) & 0xCFBC1FF7)
                            + 1682))();
}

uint64_t sub_1A2778930@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 912) = 0;
  v3 = *(_QWORD *)(v1 + 776) - 1;
  **(_BYTE **)(v1 + 664) = **(_BYTE **)(v1 + 672);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((3977 * (v3 == 0)) ^ a1)) - 12))();
}

void sub_1A27789BC()
{
  JUMPOUT(0x1A2778978);
}

uint64_t sub_1A27789C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t (*a37)(_QWORD))
{
  uint64_t v37;
  uint64_t v38;
  int v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;

  *(_QWORD *)(v38 + 3584) = v37;
  v40 = *(_QWORD **)(v38 + 560);
  v41 = a37(*v40);
  *v40 = *(_QWORD *)(v38 + 664);
  **(_DWORD **)(v38 + 656) = *(_QWORD *)(v38 + 736);
  v42 = *(_QWORD *)(v38 + 632);
  *(_QWORD *)(v38 + 3216) = v42;
  *(_QWORD *)(v38 + 3240) = *(_QWORD *)(v38 + 624);
  *(_QWORD *)(v38 + 3264) = *(_QWORD *)(v38 + 600);
  *(_QWORD *)(v38 + 3272) = *(_QWORD *)(v38 + 592);
  v43 = STACK[0x3EC];
  LODWORD(STACK[0xF24]) = STACK[0x3EC];
  *(_QWORD *)(v38 + 3280) = *(_QWORD *)(v38 + 392);
  *(_QWORD *)(v38 + 3296) = *(_QWORD *)(v38 + 576);
  LODWORD(STACK[0xF34]) = v39;
  *(_QWORD *)(v38 + 3320) = v42;
  *(_QWORD *)(v38 + 3336) = *(_QWORD *)(v38 + 624);
  *(_QWORD *)(v38 + 3352) = *(_QWORD *)(v38 + 608);
  *(_QWORD *)(v38 + 3360) = *(_QWORD *)(v38 + 600);
  *(_QWORD *)(v38 + 3368) = *(_QWORD *)(v38 + 592);
  LODWORD(STACK[0x588]) = v43;
  *(_QWORD *)(v38 + 3400) = *(_QWORD *)(v38 + 392);
  *(_QWORD *)(v38 + 3384) = *(_QWORD *)(v38 + 576);
  *(_QWORD *)(v38 + 3408) = *(_QWORD *)(v38 + 568);
  LODWORD(STACK[0x58C]) = v39;
  LODWORD(STACK[0x52C]) = v39;
  *(_QWORD *)(v38 + 1304) = *(_QWORD *)(v38 + 632);
  *(_QWORD *)(v38 + 1312) = *(_QWORD *)(v38 + 624);
  *(_QWORD *)(v38 + 1320) = *(_QWORD *)(v38 + 608);
  *(_QWORD *)(v38 + 1328) = *(_QWORD *)(v38 + 600);
  *(_QWORD *)(v38 + 1336) = *(_QWORD *)(v38 + 592);
  *(_QWORD *)(v38 + 3536) = *(_QWORD *)(v38 + 392);
  *(_QWORD *)(v38 + 1344) = *(_QWORD *)(v38 + 576);
  *(_QWORD *)(v38 + 1352) = *(_QWORD *)(v38 + 568);
  return (*(uint64_t (**)(uint64_t))(v38 + 640))(v41);
}

uint64_t sub_1A2778C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  int v40;
  uint64_t v41;
  _BOOL4 v42;

  v42 = a40 == ((v40 + 1073) ^ (v40 + 1069));
  return (*(uint64_t (**)(void))(v41 + 8 * ((2 * v42) | (8 * v42) | (v40 + 829))))();
}

uint64_t sub_1A2778C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  _QWORD *v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;

  v39[151] = v39[51];
  v39[152] = v39[46];
  v43 = v39[44];
  v39[153] = v39[45];
  v39[154] = v43;
  v39[155] = v39[42];
  v39[156] = v39[40];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 + 8 * ((LOBYTE(STACK[0x3AB]) * (v41 - 2738080)) ^ (v42 + v41 - 2234))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_1A2778C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  _QWORD *v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;

  v40 = a9 + 70;
  v41 = (v40 + 1146);
  v42 = (v41 ^ 0xFFFFFFFFFFFFFB39) + *(_QWORD *)(v39 + 8 * v40);
  v38[184] = v38[51];
  v38[185] = v38[45];
  v38[186] = v38[40];
  LODWORD(STACK[0x234]) = 1;
  LODWORD(STACK[0x3EC]) = STACK[0x234];
  v43 = v38[185];
  v38[60] = v38[186];
  v38[61] = v43;
  v44 = v38[184];
  v45 = v38[148];
  v38[62] = v44;
  v38[63] = v45;
  v38[65] = v42;
  v38[135] = v45;
  v46 = *(_DWORD *)(v45 + 12);
  v45 += 12;
  v38[66] = v45;
  LODWORD(STACK[0x40C]) = v46;
  v38[131] = v44;
  v38[132] = v45;
  v38[134] = v43;
  v38[136] = v42;
  LODWORD(STACK[0x258]) = STACK[0x3EC];
  v38[138] = v38[60];
  LODWORD(STACK[0x25C]) = 1718210905;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8 * (int)(((v46 < 0xFFFFFFFB) * ((v41 ^ 0x494) + 427)) ^ v41)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1A2778EC0@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _BOOL4 v8;
  _BOOL4 v9;
  uint64_t v10;

  v5 = v1[63];
  v6 = (LODWORD(STACK[0x40C]) ^ 0x73DFDF7CDFBD7FB9)
     - 0x73DFDF7C1D721221
     + (((unint64_t)LODWORD(STACK[0x40C]) << (a1 ^ (v4 + 76) ^ 0xA4u)) & 0x1BF7AFF72);
  v7 = (*(unsigned int *)(v5 + 8) ^ 0x73BE3EEFFBFF9FA6)
     - 0x73BE3EEF39B43212
     + ((2 * *(unsigned int *)(v5 + 8)) & 0x1F7FF3F4CLL);
  v8 = v6 < 0xC24B6D94;
  v9 = v6 > v7;
  if (v8 != v7 < 0xC24B6D94)
    v9 = v8;
  v1[187] = v1[62];
  v1[188] = v1[66];
  v10 = v1[60];
  v1[189] = v1[61];
  v1[190] = v5;
  v1[191] = v1[65];
  LODWORD(STACK[0x250]) = STACK[0x3EC];
  v1[130] = v10;
  LODWORD(STACK[0x254]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1626 * v9) ^ a1)) - 12))();
}

void sub_1A2778FD4(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(v2 + 8 * a1);
  v4 = ((_DWORD)a1 + 778507430) & 0xD198EFD7;
  v5 = v1[63];
  v1[139] = v1[62];
  v1[140] = v1[66];
  v11 = (v4 ^ 0xFFFFFFFFFFFFFB27) + v3;
  v6 = v1[60];
  v1[115] = v1[61];
  v1[118] = v1[65];
  LODWORD(STACK[0x284]) = STACK[0x3EC];
  v1[116] = v5;
  v1[120] = v6;
  LODWORD(STACK[0x288]) = 4;
  v1[121] = v5;
  v1[76] = v1[121];
  v7 = LODWORD(STACK[0x288]);
  v1[78] = v1[120];
  LODWORD(STACK[0x484]) = STACK[0x284];
  v1[79] = v1[118];
  v1[80] = v1[116];
  v1[82] = v1[115];
  v1[83] = v1[140];
  v1[84] = v1[139];
  v1[85] = v11;
  v8 = v1[76];
  v9 = *(unsigned int *)(v8 + 8);
  v1[87] = v8 + 8;
  v10 = (((_DWORD)v4 + 43271451) & 0xFD6BBF95 ^ v7 ^ 0x7FF7FF6F9F3FF077)
      + ((2 * v7) & 0x13E7FF3E6)
      + v9
      - 0x7FF7FF6F9F3FF9F3;
  v1[89] = v10;
  LOBYTE(STACK[0x457]) = v10 < 0xFFFFFFFF;
  JUMPOUT(0x1A277A010);
}

uint64_t sub_1A2779040()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = STACK[0x254];
  v1[67] = v1[130];
  v7 = STACK[0x250];
  LODWORD(STACK[0x434]) = STACK[0x250];
  v8 = v1[191];
  v1[70] = v8;
  v9 = v1[190];
  v1[71] = v9;
  v10 = v1[189];
  v1[72] = v10;
  v11 = v1[188];
  v1[74] = v11;
  v12 = v1[187];
  v1[75] = v12;
  v1[131] = v12;
  v1[132] = v11;
  v1[134] = v10;
  v1[135] = v9;
  v1[136] = v8;
  LODWORD(STACK[0x258]) = v7;
  v1[138] = v1[67];
  LODWORD(STACK[0x25C]) = v6;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2 * (v6 == v3 + (v0 ^ (v5 + 960)) - 1217)) | (8 * (v6 == v3 + (v0 ^ (v5 + 960)) - 1217)) | (v4 + v0 - 1088))))();
}

uint64_t sub_1A27790D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  _QWORD *v44;
  int v45;
  int v46;
  uint64_t *v47;
  uint64_t v48;
  _DWORD *v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v46 = (a9 - 2056394260) & 0x7ABBDBF7;
  v47 = (uint64_t *)v44[71];
  v48 = *v47;
  v49 = (_DWORD *)v44[74];
  v50 = STACK[0x434];
  v51 = LODWORD(STACK[0x434]) - ((2 * LODWORD(STACK[0x434])) & 0xBFE4C9AE) - 537762601;
  v52 = ((v46 - 600001219) & (2 * *v49)) + (*v49 ^ 0xEE333FF1) + 298631183;
  *(_BYTE *)(*v47 + v52) = HIBYTE(v51) ^ 0xDF;
  *(_BYTE *)(v48 + v52 + 1) = BYTE2(v51) ^ 0xF2;
  *(_BYTE *)(v48 + v52 + 2) = ((BYTE1(v51) ^ 0x64) - ((2 * (BYTE1(v51) ^ 0x64)) & 0x96) + 75) ^ 0x4B;
  *(_BYTE *)(v48 + v52 + 3) = v51 ^ 0xD7;
  *v49 += 4;
  v44[131] = v44[75];
  v44[132] = v49;
  v44[134] = v44[72];
  v44[135] = v47;
  v44[136] = v44[70];
  LODWORD(STACK[0x258]) = v50;
  v44[138] = v44[67];
  LODWORD(STACK[0x25C]) = v45;
  v53 = v44[138];
  v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v44[136];
  v55 = v44[135];
  v56 = v44[134];
  v57 = v44[132];
  v58 = v44[131];
  v44[151] = v58;
  v44[152] = v57;
  v44[153] = v56;
  v44[154] = v55;
  v44[155] = v54;
  v44[156] = v53;
  v44[157] = v58;
  v44[158] = v57;
  v44[159] = v56;
  v44[160] = v55;
  v44[161] = v54;
  v44[162] = v53;
  v44[163] = v57;
  v44[164] = v55;
  v44[165] = v54;
  return v54(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_1A2779254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  _QWORD *v57;
  uint64_t v58;
  int v59;
  int v60;
  int v61;
  int v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  LODWORD(STACK[0x320]) = HIDWORD(a51);
  v64 = v57[165];
  v65 = v57[164];
  v66 = v57[163];
  v57[174] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * ((121 * ((_DWORD)a52 == (((v59 - v62 + 11) | 0x20) ^ (v60 - 20)))) ^ (v61 + v59 - 1731))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           v64,
           a49,
           v65,
           a51,
           a52,
           v66,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_1A27792B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;

  v60 = v58[148];
  *v58 = v60;
  v61 = *(_DWORD *)(v60 + 12);
  v58[1] = v60 + 12;
  v62 = ((2 * v61) & 0x1B3FFAD7ALL) + (v61 ^ 0x5FDFA5BCD9FFD6BDLL);
  v58[25] = v62;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * ((127 * (v62 + ((2 * (v57 + 573)) ^ 0xA0205A4326002D37) < 0xFFFFFFFB)) ^ (v57 + 573))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_1A277934C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  unint64_t v59;

  v58 = v55[1];
  v59 = (*(unsigned int *)(*v55 + 8) ^ (unint64_t)~(v54 + v55[25] + 66)) & (*(unsigned int *)(*v55 + 8)
                                                                                   - (v54
                                                                                    + v55[25]
                                                                                    + 66)) | (v54 + v55[25] + 66) & ~(unint64_t)*(unsigned int *)(*v55 + 8);
  v55[166] = *v55;
  v55[167] = a53;
  v55[168] = v58;
  v55[169] = a50;
  v55[170] = a48;
  v55[171] = v55[110];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 + 8 * (int)((1133 * ((v59 >> ((v53 ^ (v57 + 63)) - 102)) & 1)) ^ v53)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

void sub_1A27793E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;

  v56 = *(_QWORD *)(v55 + 8 * v53);
  v57 = 95 * (v53 ^ 0x4Bu);
  v54[140] = a53;
  v58 = (v57 ^ 0xFFFFFFFFFFFFFB27) + v56;
  v59 = *v54;
  v60 = v54[1];
  v54[139] = *v54;
  v65 = v58;
  v54[115] = v60;
  v54[116] = a50;
  v54[118] = a48;
  LODWORD(STACK[0x284]) = STACK[0x320];
  v54[120] = v54[110];
  LODWORD(STACK[0x288]) = 12;
  v54[121] = v59;
  v54[76] = v54[121];
  v61 = LODWORD(STACK[0x288]);
  v54[78] = v54[120];
  LODWORD(STACK[0x484]) = STACK[0x284];
  v54[79] = v54[118];
  v54[80] = v54[116];
  v54[82] = v54[115];
  v54[83] = v54[140];
  v54[84] = v54[139];
  v54[85] = v65;
  v62 = v54[76];
  v63 = *(unsigned int *)(v62 + 8);
  v54[87] = v62 + 8;
  v64 = (((_DWORD)v57 + 43271451) & 0xFD6BBF95 ^ v61 ^ 0x7FF7FF6F9F3FF077)
      + ((2 * v61) & 0x13E7FF3E6)
      + v63
      - 0x7FF7FF6F9F3FF9F3;
  v54[89] = v64;
  LOBYTE(STACK[0x457]) = v64 < 0xFFFFFFFF;
  JUMPOUT(0x1A277A010);
}

uint64_t sub_1A2779448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v57;
  _QWORD *v58;
  uint64_t v59;
  int v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;

  v58[2] = v58[171];
  LODWORD(STACK[0x324]) = HIDWORD(a52);
  v63 = v58[169];
  v58[4] = v58[170];
  v58[5] = v63;
  v58[7] = v58[168];
  v64 = v58[166];
  v58[9] = v58[167];
  v58[10] = v64;
  v58[174] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * ((((_DWORD)a54 == (v57 ^ (v62 + 806) ^ (v60 - 1879))) * ((v57 ^ (v62 - 27)) + 65)) ^ (v61 + v57 - 1731))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_1A27794C0()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _DWORD *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v3 = (uint64_t *)v1[10];
  v4 = *v3;
  v5 = (_DWORD *)v1[7];
  v6 = ((*v5 << ((-21 * (v0 ^ 0x6C)) ^ 0xC0)) & 0xDC776EEE) + (*v5 ^ 0xEE3BB777);
  *(_BYTE *)(*v3 + v6 + 298076297) = 0;
  *(_BYTE *)(v4 + v6 + ((491 * (v0 ^ 0x76C)) ^ 0x11C44D4B)) = 0;
  *(_BYTE *)(v4 + v6 + 298076299) = 0;
  *(_BYTE *)(v4 + v6 + 298076300) = 8;
  v7 = (*v5 + 4);
  *v5 = v7;
  v8 = *v3;
  v1[11] = v8;
  v9 = ((2 * v7) & 0x1F7976F4CLL) + (v7 ^ 0x7DFCF78BFBCBB7A6);
  v1[28] = v9;
  v10 = v1[2] - 0x6D2D49A80E8EE5AALL;
  v11 = v9 + v8 - 0x7DFCF78BFBCBB7A5 - 1;
  v1[13] = v10;
  v1[14] = v11;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v10 > v11) | (16 * (v10 > v11))) ^ v0)))();
}

uint64_t sub_1A27795CC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void (*a19)(uint64_t), void (*a20)(uint64_t),uint64_t (*a21)(uint64_t),uint64_t a22,uint64_t a23,int *a24)
{
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t *v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  **(_BYTE **)(v25 + 112) = **(_BYTE **)(v25 + 104);
  v28 = (_BYTE *)(*(_QWORD *)(v25 + 224) + a1 + *(_QWORD *)(v25 + 88));
  *v28 = *(_BYTE *)(*(_QWORD *)(v25 + 16) - 0x6D2D49A80E8EE5A9);
  v28[1] = *(_BYTE *)(*(_QWORD *)(v25 + 16) - 0x6D2D49A80E8EE5A8);
  v28[2] = *(_BYTE *)(*(_QWORD *)(v25 + 16) - 0x6D2D49A80E8EE5A7);
  v29 = 83 * (v24 ^ 0x5CAu);
  *(_BYTE *)(*(_QWORD *)(v25 + 88) + *(_QWORD *)(v25 + 224) + (v29 ^ (a1 + 884))) = *(_BYTE *)(*(_QWORD *)(v25 + 16)
                                                                                             - 0x6D2D49A80E8EE5A6);
  *(_BYTE *)(a1 + *(_QWORD *)(v25 + 224) + *(_QWORD *)(v25 + 88) + 4) = *(_BYTE *)(*(_QWORD *)(v25 + 16)
                                                                                 - 0x6D2D49A80E8EE5A5);
  *(_BYTE *)(a1 + *(_QWORD *)(v25 + 224) + *(_QWORD *)(v25 + 88) + 5) = *(_BYTE *)(*(_QWORD *)(v25 + 16)
                                                                                 - 0x6D2D49A80E8EE5A4);
  *(_BYTE *)(a1 + *(_QWORD *)(v25 + 224) + *(_QWORD *)(v25 + 88) + 6) = *(_BYTE *)(*(_QWORD *)(v25 + 16)
                                                                                 - 0x6D2D49A80E8EE5A3);
  **(_DWORD **)(v25 + 56) += 8;
  v30 = *(uint64_t **)(v25 + 1184);
  *(_QWORD *)(v25 + 120) = v30;
  *(_QWORD *)(v25 + 1192) = 0;
  a20(a23);
  v31 = *a24;
  v32 = *v30;
  v33 = *((_DWORD *)v30 + 3);
  *(_QWORD *)(v25 + 144) = (char *)v30 + 12;
  v34 = *(_QWORD *)(v25 + 864);
  v35 = 932829133 * (((v27 - 136) & 0x8ABC33A6 | ~((v27 - 136) | 0x8ABC33A6)) ^ 0xD50891D4);
  *(_QWORD *)(v25 + 3664) = *(_QWORD *)(v25 + 872);
  *(_DWORD *)(v27 - 128) = -532470131 - v35 + v33 - ((v33 << (((v29 - 80) | 0x3C) - 124)) & 0xC0864D1A);
  *(_QWORD *)(v25 + 3640) = v32;
  *(_QWORD *)(v25 + 3672) = v34;
  *(_DWORD *)(v27 - 120) = (v29 + 536) ^ v35;
  *(_DWORD *)(v27 - 116) = 1017140188 - v35 + 1793297355 * v31;
  a19(v27 - 136);
  v36 = *(_DWORD *)(v27 - 124);
  v37 = a21(a23);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v26 + 8 * (int)((57 * (v36 == 1934675644)) ^ v29)) - 4))(v37);
}

uint64_t sub_1A2779958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int *a21,uint64_t a22,void (*a23)(uint64_t),uint64_t (*a24)(_QWORD, uint64_t, uint64_t),uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;

  v42 = *(_QWORD *)(a38 + 8 * (int)(v38 - 447));
  *(_DWORD *)(v41 - 128) = v38 - 822707390 - 2106769199 * ((v39 - 2 * (v39 & 0x47428CF5) + 1195543797) ^ 0x28BEA7C0);
  *(_QWORD *)(v40 + 3640) = 2106769199
                          * ((v39 - 2 * (v39 & 0xC8A7CEC447428CF5) - 0x3758313BB8BD730BLL) ^ 0x88B676AA28BEA7C0)
                          + v42
                          - 8;
  *(_QWORD *)(v40 + 3656) = a30;
  a23(v41 - 136);
  v43 = a24(*a21, a22, a31);
  v44 = ((2 * v43) & 0xDDFEFFEE) + ((v38 - 710019236) & 0x2A7BCFB7 ^ v43 ^ 0x6ED6B552);
  v45 = *(_QWORD *)(a38 + 8 * ((int)(v38 - 447) ^ 0x43));
  v46 = 2106769199 * ((~v39 & 0x100A11EBAC5DBFBFLL | v39 & 0xEFF5EE1453A24040) ^ 0x501BA985C3A1948ALL);
  *(_DWORD *)(v41 - 128) = v38 - 822707390 - v46;
  *(_QWORD *)(v40 + 3640) = (v38 ^ 0xFFFFFFFFFFFFFC69) + v46 + v45;
  *(_QWORD *)(v40 + 3656) = a30;
  v47 = ((uint64_t (*)(uint64_t))a23)(v41 - 136);
  return (*(uint64_t (**)(uint64_t))(a38
                                            + 8 * (int)(((v44 == 1862238199) | (4 * (v44 == 1862238199))) ^ (v38 + 2))))(v47);
}

void sub_1A2779AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void (*a26)(uint64_t),void (*a27)(uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,int *a31)
{
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;

  a27(a30);
  v34 = *a31;
  v35 = **(_QWORD **)(v32 + 120);
  v36 = **(_DWORD **)(v32 + 144);
  v37 = *(_QWORD *)(v32 + 864);
  v38 = 932829133 * (((v33 - 136) & 0x8BF7B6CD | ~((v33 - 136) | 0x8BF7B6CD)) ^ 0xD44314BF);
  *(_QWORD *)(v32 + 3664) = *(_QWORD *)(v32 + 872);
  *(_QWORD *)(v32 + 3640) = v35;
  *(_DWORD *)(v33 - 128) = ((v31 + 492) ^ 0xE04323F0) - v38 + v36 - ((2 * v36) & 0xC0864D1A);
  *(_DWORD *)(v33 - 120) = (v31 + 536) ^ v38;
  *(_DWORD *)(v33 - 116) = 1017140188 - v38 + 1793297355 * v34;
  *(_QWORD *)(v32 + 3672) = v37;
  a26(v33 - 136);
  JUMPOUT(0x1A2779BC0);
}

uint64_t sub_1A2779C14@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((((a1 - 883) ^ 0xB45 ^ ((a1 - 883) | 0x118)) * (v1 == 1666240185)) ^ a1)))();
}

void sub_1A2779C64()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[150] = 0;
  v3 = ((421 * (v0 ^ 0x13A)) ^ 0xFFFFFFFFFFFFFCB6) + *(_QWORD *)(v2 + 8 * v0);
  v4 = v1[9];
  v1[176] = v1[10];
  v1[114] = v3;
  v1[177] = v4;
  v1[178] = v1[7];
  v5 = v1[4];
  v1[179] = v1[5];
  v1[180] = v5;
  LODWORD(STACK[0x208]) = STACK[0x324];
  v1[181] = v1[2];
  JUMPOUT(0x1A2779CC4);
}

uint64_t sub_1A2779D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(uint64_t, uint64_t),uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;

  v40 = *(_QWORD **)(v39 + 440);
  *v40 = 0;
  v40[1] = 0;
  *(_QWORD *)(v39 + 472) = v40 + 1;
  v41 = a33(4096, 2241923698);
  **(_QWORD **)(v39 + 440) = v41;
  return (*(uint64_t (**)(void))(a38
                              + 8
                              * (int)(((v41 == 0)
                                     * ((((v38 | 0x202) - 2088227615) & 0x7C77D37E ^ 0xFFFFFF86)
                                      + (((v38 | 0x202) + 1001572500) & 0xC44D37CB))) ^ (v38 | 0x202))))();
}

uint64_t sub_1A2779DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t (*a37)(_QWORD))
{
  int v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a37(*(_QWORD *)(v38 + 440));
  *(_QWORD *)(v38 + 1464) = 0;
  LODWORD(STACK[0x20C]) = v37;
  LODWORD(STACK[0x3E8]) = STACK[0x20C];
  LOBYTE(STACK[0x3AB]) = 0;
  **(_QWORD **)(v38 + 312) = *(_QWORD *)(v38 + 1464);
  return (*(uint64_t (**)(uint64_t))(v38 + 424))(v39);
}

uint64_t sub_1A2779E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;

  *(_QWORD *)(v47 + 1376) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * ((22 * (((v49 - 88) ^ LOBYTE(STACK[0x3AB])) & 1)) ^ (v50 + v49 - 1595))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1A2779E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;

  LODWORD(STACK[0x330]) = HIDWORD(a45);
  v50 = *(_QWORD *)(v47 + 1200);
  *(_QWORD *)(v47 + 152) = v50;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 + 8 * ((1625 * (HIDWORD(a45) > *(_DWORD *)(v50 + 8))) ^ a9)) - ((v49 + a9 - 76) ^ 0x29CAADLL)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

void sub_1A2779EEC()
{
  _QWORD *v0;
  uint64_t v1;

  v0[139] = v0[51];
  v0[140] = v0[46];
  v1 = v0[44];
  v0[115] = v0[45];
  v0[116] = v1;
  v0[118] = v0[42];
  LODWORD(STACK[0x284]) = STACK[0x3CC];
  v0[120] = v0[40];
  LODWORD(STACK[0x288]) = STACK[0x330];
  v0[121] = v0[19];
  JUMPOUT(0x1A2779F48);
}

uint64_t sub_1A277A060()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  int v4;

  LODWORD(STACK[0x28C]) = 1718210905;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v4 + v0 - 451) ^ (v4 + 942) ^ 0xC8B) * (v1 > v2)) ^ v0)) - 4))();
}

void sub_1A277A0A0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 1384) = 0;
  JUMPOUT(0x1A277A39CLL);
}

uint64_t sub_1A277A0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55)
{
  int v55;
  uint64_t v56;
  int v57;
  int v58;

  LODWORD(STACK[0x334]) = a55;
  return ((uint64_t (*)(void))(*(_QWORD *)(v56
                                        + 8
                                        * (((a55 == v57) * (((v58 + v55 - 2258) ^ 0x6B5) - 1485)) ^ (v58 + v55 - 674)))
                            - 4))();
}

uint64_t sub_1A277A0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,unsigned int a45)
{
  int v45;
  _QWORD *v46;
  uint64_t v47;
  unint64_t *v48;
  unint64_t v49;
  unint64_t v50;

  v48 = (unint64_t *)v46[150];
  v49 = *v48;
  v46[20] = v48;
  v46[21] = v49;
  v50 = v46[149];
  v46[29] = v50;
  v46[47] = a45 - (((unint64_t)a45 << ((83 * (v45 ^ 0x9D)) ^ 0x44u)) & 0x54720850) - 0x5D906247D5C6FBD8;
  return (*(uint64_t (**)(void))(v47
                              + 8
                              * (((8 * (((v45 - 1) ^ (v50 > v49)) & 1)) & 0xDF | (32
                                                                                                 * (((v45 - 1) ^ (v50 > v49)) & 1))) ^ v45)))();
}

uint64_t sub_1A277A184@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33)
{
  uint64_t v33;

  LODWORD(STACK[0x344]) = LODWORD(STACK[0x2F8]) ^ (a1 + 708378526);
  return ((uint64_t (*)(void))(*(_QWORD *)(v33 + 8 * ((263 * (a33 != 13)) ^ a1)) - (a1 - 447) + 711))();
}

uint64_t sub_1A277A1CC()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (23 * (v1 == 0))))
                            + 2738849
                            - ((v0 + 1668) ^ (v3 - 1722))
                            - 8))();
}

uint64_t sub_1A277A208@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33)
{
  uint64_t v33;
  uint64_t v34;

  *(_QWORD *)(v33 + 392) = LODWORD(STACK[0x344]);
  return (*(uint64_t (**)(void))(v34 + 8 * ((163 * (((((a1 ^ 0x51BB875D) - 1371245240) ^ (a33 == 13)) & 1) == 0)) ^ a1)))();
}

uint64_t sub_1A277A254()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  v4 = 2 * (v0 ^ 0x2F6);
  v1[126] = 0;
  v5 = v1[49] - 1;
  *(_BYTE *)(v1[21] + (v3 + v4 - 855) - 2738853) = *(_BYTE *)(v1[29]
                                                                            + (v3 + v4 - 855)
                                                                            - 2738853);
  return (*(uint64_t (**)(void))(v2 + 8 * (v4 | (2 * (v5 != 0)))))();
}

void sub_1A277A2E0()
{
  JUMPOUT(0x1A277A2A4);
}

uint64_t sub_1A277A2E8@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v6;

  v4 = v1[150];
  v5 = *(_QWORD *)(v2 + 8 * a1);
  v6 = v4 == 0;
  v1[103] = v5;
  v1[104] = v4;
  LODWORD(v4) = STACK[0x334];
  LODWORD(STACK[0x2CC]) = STACK[0x334];
  v1[105] = 0;
  v1[106] = v5;
  LODWORD(STACK[0x304]) = v4;
  v1[107] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 ^ (v3 - 531) ^ (v3 + ((a1 + 281) | 0x200) - 839) ^ (60 * v6)))
                            - 12))();
}

uint64_t sub_1A277A3EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  int v58;
  uint64_t v59;
  uint64_t v60;
  _BOOL4 v61;

  v61 = *(_QWORD *)(v59 + 240) == 0;
  *(_QWORD *)(v59 + 1392) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * (((((a9 ^ v61) & 1) == 0) * (((v58 - 284) | 0x809) + 465)) ^ v58)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_1A277A43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  int v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  unint64_t v62;
  unint64_t v63;
  _BOOL4 v64;
  _BOOL4 v65;

  v59 = v57[30];
  v60 = *(unsigned int *)(v59 + 8);
  v57[174] = v59;
  v61 = *(_DWORD *)(v59 + 12);
  v57[31] = v59 + 12;
  LODWORD(STACK[0x350]) = v61;
  v62 = (v61 ^ 0xD7FDFF372ADBD77ELL) + 0x280200C94AABD992 + ((2 * v61) & 0x55B7AEFC);
  v63 = (v60 ^ 0xBFFFEFFEFF9BF7E9) + 0x4000100175EBB923 + ((v60 << (((v56 - 44) & 0x3Eu) - 61)) & 0x1FF37EFD2);
  v64 = v62 < 0x7587B10C;
  v65 = v62 > v63;
  if (v64 != v63 < 0x7587B10C)
    v65 = v64;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 + 8 * ((185 * v65) ^ v56)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_1A277A53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  int v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  unsigned int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  int v75;

  v64 = *(_QWORD **)(v62 + 240);
  v65 = ((2 * LODWORD(STACK[0x350])) & 0xBCEFDFFE) + (LODWORD(STACK[0x350]) ^ 0xDE77EFFF) + 562565077;
  v66 = *(unsigned __int8 *)(*v64 + v65 + v61 - 530);
  v67 = *(unsigned __int8 *)(*v64 + v65 + 45);
  v68 = *(unsigned __int8 *)(*v64 + v65 + 46);
  v69 = *(unsigned __int8 *)(*v64 + v65 + 47);
  v70 = (((v67 - ((2 * v67) & 0x13A)) << 16) - 1902313472) ^ 0x8E9D0000 | (((v68 + 3338208 - ((2 * v68) & 0xBBBBBBBB)) << 8)
                                                                         - 768) ^ 0x32EFDD00 | (((v66
                                                                                                - ((2 * v66) & 0x16)) << 24)
                                                                                              - 1962934272) ^ 0x8B000000;
  v71 = ((v69 - 285719737 - ((2 * v69) & 0x8E)) ^ 0xE7A74194) & ~v70 | v70 & 0xF6A0FD00;
  **(_DWORD **)(v62 + 248) = LODWORD(STACK[0x350]) + 4;
  *(_QWORD *)(v62 + 1392) = v64;
  v75 = STACK[0x34C];
  LODWORD(STACK[0x354]) = (((v71 ^ 0x7F619929) - 1972886616) ^ ((v71 ^ 0x5B2A7D6C) - 1373386781) ^ ((v71 ^ 0x2D14E696)
                                                                                                  - 669164519))
                        + 1779679125;
  LODWORD(STACK[0x384]) = v75;
  v72 = *(_QWORD *)(v62 + 1392);
  *(_QWORD *)(v62 + 272) = v72;
  v73 = *(_QWORD *)(v62 + 1184);
  *(_QWORD *)(v62 + 296) = v73;
  *(_QWORD *)(v62 + 1400) = v72;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 + 8 * ((2082 * ((((v61 + 102) | 1) ^ (v73 == 0)) & 1)) ^ (v61 - 530))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

uint64_t sub_1A277A730@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;

  v3 = 49 * (a1 ^ 0x27);
  LODWORD(STACK[0x29C]) = STACK[0x354];
  LODWORD(STACK[0x2A0]) = a1;
  v1[122] = v1[34];
  LODWORD(STACK[0x2A4]) = STACK[0x384];
  v4 = v1[37];
  v1[124] = v4;
  v5 = STACK[0x2A4];
  v6 = v1[122];
  v7 = STACK[0x29C];
  v1[103] = ((v3 + 687711711) & 0xD7025B4D) + *(_QWORD *)(v2 + 8 * SLODWORD(STACK[0x2A0])) - 844;
  v1[104] = v4;
  LODWORD(STACK[0x2CC]) = v5;
  v1[105] = v6;
  LODWORD(STACK[0x2DC]) = v7;
  return sub_1A277A818();
}

uint64_t sub_1A277A818()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t *v5;
  uint64_t v6;

  LODWORD(STACK[0x498]) = STACK[0x2DC];
  v1[94] = v1[105];
  LODWORD(STACK[0x49C]) = STACK[0x2CC];
  v5 = (uint64_t *)v1[104];
  v1[100] = v5;
  v1[101] = v1[103];
  v6 = *v5;
  v1[102] = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((v6 != 0)
                                               * ((v0 + 1611873319) & 0x9FECC2B7 ^ (v3 + (v0 ^ (v4 - 183)) - 1779))) ^ v0))
                            - 8))();
}

uint64_t sub_1A277A890@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33)
{
  uint64_t v33;
  uint64_t v34;
  int v35;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v34
                                                     + 8
                                                     * (((a33 == 14) * (((v35 + a1 - 2297) | 0x340) ^ 0x35A)) ^ (v35 + a1 - 1527)))
                                         - 12))(*(_QWORD *)(v33 + 816));
}

uint64_t sub_1A277A8D4()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  _DWORD *v3;
  int v4;
  int v5;

  v3 = (_DWORD *)v0[87];
  *v3 += LODWORD(STACK[0x5CC]);
  v4 = STACK[0x40C];
  v5 = (LODWORD(STACK[0x40C]) - (v2 + 1715514702)) | (v2 + 1715514702 - LODWORD(STACK[0x40C]));
  v0[284] = v0[101];
  LODWORD(STACK[0xA6C]) = STACK[0x494];
  v0[286] = v0[100];
  v0[287] = v0[94];
  v0[288] = v0[88];
  v0[289] = v3;
  LODWORD(STACK[0xA94]) = STACK[0x490];
  v0[291] = v0[91];
  v0[292] = v0[85];
  LODWORD(STACK[0xAA8]) = STACK[0x434];
  LODWORD(STACK[0xAAC]) = v4;
  v0[294] = v0[84];
  v0[295] = v0[83];
  v0[296] = v0[89];
  LODWORD(STACK[0xACC]) = STACK[0x3EC];
  v0[298] = v0[82];
  LODWORD(STACK[0xADC]) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((2054 * (v5 >= 0)) ^ (v2 - 1937414477 + ((v2 + 1646706031) | 0x110046A8))))
                            - 4))();
}

uint64_t sub_1A277A9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void (*a26)(uint64_t),void (*a27)(uint64_t),uint64_t (*a28)(uint64_t),uint64_t a29,uint64_t a30,int *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;

  v41 = (uint64_t *)v39[196];
  v39[175] = v41;
  v39[194] = 0;
  LODWORD(STACK[0x79C]) = 0;
  a27(a30);
  v42 = *v41;
  v43 = *((_DWORD *)v41 + 3);
  v44 = *a31;
  v39[176] = (char *)v41 + 12;
  v45 = v39[162];
  v46 = 932829133 * ((2 * ((v40 - 136) & 0x4AD408F8) - (v40 - 136) + 892073731) ^ 0x9560AA8E);
  v39[459] = v39[161];
  *(_DWORD *)(v40 - 128) = -532470131 - v46 + v43 - ((2 * v43) & 0xC0864D1A);
  *(_DWORD *)(v40 - 120) = (v38 - 1934674195) ^ v46;
  *(_DWORD *)(v40 - 116) = 1017140188 - v46 + ((v38 - 1934675258) | 0x50) + 1793297355 * v44 - 466;
  v39[455] = v42;
  v39[458] = v45;
  a26(v40 - 136);
  v47 = *(_DWORD *)(v40 - 124);
  v48 = a28(a30);
  LODWORD(STACK[0x82C]) = v47;
  return (*(uint64_t (**)(uint64_t))(a38
                                            + 8
                                            * (int)(((2 * (((v47 - v38) | (v38 - v47)) >> 31)) | (16 * (((v47 - v38) | (v38 - v47)) >> 31))) ^ (v38 - 1934673782))))(v48);
}

void sub_1A277AB0C()
{
  __asm { BR              X9 }
}

void sub_1A277B088()
{
  _QWORD *v0;

  v0[316] = v0[101];
  LODWORD(STACK[0xB6C]) = STACK[0x494];
  v0[318] = v0[100];
  v0[319] = v0[94];
  v0[320] = v0[93];
  v0[321] = v0[88];
  v0[322] = v0[87];
  LODWORD(STACK[0xB9C]) = STACK[0x490];
  v0[324] = v0[91];
  v0[325] = v0[85];
  LODWORD(STACK[0xBB0]) = STACK[0x484];
  LODWORD(STACK[0xBB4]) = STACK[0x434];
  v0[327] = v0[84];
  v0[328] = v0[83];
  v0[329] = v0[89];
  LODWORD(STACK[0xBD4]) = STACK[0x3EC];
  v0[331] = v0[82];
  v0[193] = 0;
  JUMPOUT(0x1A277B140);
}

uint64_t sub_1A277B258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(uint64_t, uint64_t))
{
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v36 = *(_QWORD **)(v34 + 872);
  *v36 = 0;
  v36[1] = 0;
  *(_QWORD *)(v34 + 880) = v36 + 1;
  v37 = a33(4096, 2241923698);
  **(_QWORD **)(v34 + 872) = v37;
  return ((uint64_t (*)(void))(*(_QWORD *)(v35 + 8 * ((97 * (v37 == 0)) ^ v33))
                            - (((v33 - 719) ^ 0xFFFFFFFFFFFFFFC4)
                             + ((v33 - 1139) | 0x1A4u))))();
}

uint64_t sub_1A277B2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t (*a37)(_QWORD))
{
  int v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a37(*(_QWORD *)(v38 + 872));
  *(_QWORD *)(v38 + 2656) = 0;
  LOBYTE(STACK[0x617]) = 0;
  LODWORD(STACK[0xBEC]) = v37;
  **(_QWORD **)(v38 + 928) = *(_QWORD *)(v38 + 2656);
  return (*(uint64_t (**)(uint64_t))(v38 + 864))(v39);
}

uint64_t sub_1A277B344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,__int16 a63)
{
  unsigned __int8 a65;
  int a71;
  uint64_t v71;
  int v72;
  int v73;

  LODWORD(STACK[0xB5C]) = a71;
  return ((uint64_t (*)(void))(*(_QWORD *)(v71 + 8 * ((267 * a65) ^ (v73 + v72 - 1044)))
                            - ((v72 + 661349338) & 0xD86AD1D9)
                            + 81))();
}

uint64_t sub_1A277B390@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57,uint64_t a58,int a59,int a60)
{
  _QWORD *v60;
  uint64_t v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;

  v63 = a1 & 0xD86AD1D9;
  v64 = *(_QWORD *)(v61 + 8 * (a1 & 0xFFFFFFFFD86AD1D9));
  v65 = v60[107];
  v66 = ((v63 + 1089) ^ 0xFFFFFFFFFFFFFB66) + v64;
  v67 = v60[105];
  v68 = v60[104];
  v69 = v60[124];
  v70 = v60[145];
  v71 = v60[121];
  v72 = v60[120];
  v73 = v60[144];
  v74 = v60[118];
  v60[111] = v74;
  LODWORD(STACK[0x204]) = a49;
  v60[147] = v73;
  v60[112] = v72;
  v60[113] = v71;
  LODWORD(STACK[0x208]) = 1718253555;
  LODWORD(STACK[0x20C]) = HIDWORD(a49);
  LODWORD(STACK[0x234]) = a57;
  v60[126] = v70;
  LODWORD(STACK[0x250]) = a60;
  v76 = v60[196];
  *v60 = v76 + 12;
  LODWORD(v70) = *(_DWORD *)(v76 + 12);
  LODWORD(STACK[0x254]) = v70;
  v60[352] = v65;
  LODWORD(STACK[0xC8C]) = a60;
  v60[354] = v76;
  v60[355] = v67;
  v60[356] = v68;
  v60[357] = v76 + 12;
  v60[358] = v69;
  LODWORD(STACK[0xCBC]) = 1626134030;
  v60[360] = v60[126];
  v60[361] = v66;
  LODWORD(STACK[0xCD4]) = STACK[0x234];
  LODWORD(STACK[0xCD8]) = STACK[0x20C];
  LODWORD(STACK[0xCDC]) = STACK[0x208];
  v60[364] = v60[113];
  v60[365] = v60[112];
  v60[366] = v60[147];
  LODWORD(STACK[0xCFC]) = STACK[0x204];
  v60[368] = v60[111];
  LODWORD(STACK[0xD0C]) = 1718210905;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 8 * ((122 * (v70 < ((v62 + ((v63 + 2092690006) & 0x836DDFF5) - 1542) ^ 0xFFFFFD00))) ^ (v63 + 1089))))(v71, v62 + ((v63 + 2092690006) & 0x836DDFF5) - 1542, v72, 1718253555, v73, v62 + ((v63 + 2092690006) & 0x836DDFF5), v74, 2205016053, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           v69,
           a34,
           v68,
           v67,
           a37,
           a38,
           a39,
           a40,
           v65,
           a42,
           v76,
           a44,
           a45,
           v66,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_1A277BB10(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a70;
  _QWORD *v70;
  uint64_t v71;
  int v72;
  int v73;
  unint64_t v74;
  unint64_t v75;
  _BOOL4 v76;
  _BOOL4 v77;

  v74 = (((a2 - 662) - 0x18C8018DAE80106) ^ LODWORD(STACK[0x254]))
      + 0x18C8019353084C4
      + ((2 * LODWORD(STACK[0x254])) & ((a2 - v73 + 1542) ^ 0x4A06341BLL));
  v75 = (*(unsigned int *)(a50 + 8) ^ 0xF77FFB4DDFDEFFFFLL)
      + 0x88004B27A698420
      + ((2 * *(unsigned int *)(a50 + 8)) & 0x1BFBDFFFELL);
  v70[334] = a48;
  v76 = v74 < 0x5A48841F;
  LODWORD(STACK[0xBFC]) = STACK[0x250];
  v70[336] = a50;
  v70[337] = a43;
  v70[338] = a42;
  v77 = v74 > v75;
  v70[339] = *v70;
  if (v76 != v75 < 0x5A48841F)
    v77 = v76;
  v70[340] = a40;
  LODWORD(STACK[0xC2C]) = a70;
  v70[342] = v70[126];
  v70[343] = a53;
  LODWORD(STACK[0xC44]) = STACK[0x234];
  LODWORD(STACK[0xC48]) = STACK[0x20C];
  LODWORD(STACK[0xC4C]) = STACK[0x208];
  v70[346] = v70[113];
  v70[347] = v70[112];
  v70[348] = v70[147];
  LODWORD(STACK[0xC6C]) = STACK[0x204];
  v70[350] = v70[111];
  LODWORD(STACK[0xC7C]) = v72;
  return ((uint64_t (*)(void))(*(_QWORD *)(v71 + 8 * ((488 * v77) ^ a2)) - 8))();
}

void sub_1A277BC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  _QWORD *v53;

  v53[370] = a50;
  v53[371] = a42;
  v53[372] = *v53;
  v53[373] = a40;
  v53[374] = a53;
  v53[375] = v53[111];
  v53[376] = a50;
  JUMPOUT(0x1A277BCD0);
}

uint64_t sub_1A277BDA8()
{
  unint64_t v0;
  unint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v2 - 1207) | 0x200) + 2965) * (v1 > v0)) ^ v2)) - 8))();
}

void sub_1A277BDD0()
{
  JUMPOUT(0x1A277BDD8);
}

void sub_1A277BE08(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[377] = a1;
  v2[24] = v1;
  v2[396] = v2[51];
  LODWORD(STACK[0xDEC]) = STACK[0x348];
  v2[398] = v2[46];
  v2[399] = v2[53];
  v3 = v2[44];
  v2[400] = v2[45];
  v2[401] = v3;
  v2[402] = v2[42];
  LODWORD(STACK[0xE1C]) = STACK[0x344];
  v2[404] = v2[3];
  v4 = v2[39];
  v2[405] = v2[40];
  LODWORD(STACK[0xE34]) = STACK[0x334];
  LODWORD(STACK[0xE38]) = STACK[0x330];
  LODWORD(STACK[0xE3C]) = STACK[0x324];
  v2[408] = v2[38];
  v2[409] = v2[55];
  v2[410] = v2[24];
  LODWORD(STACK[0xE5C]) = 1718210905;
  v2[412] = v4;
  LODWORD(STACK[0xE6C]) = 1718210905;
  JUMPOUT(0x1A277C0ECLL);
}

uint64_t sub_1A277BEA4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v2[377] = v1;
  v2[24] = v1;
  v2[396] = v2[51];
  LODWORD(STACK[0xDEC]) = STACK[0x348];
  v2[398] = v2[46];
  v2[399] = v2[53];
  v4 = v2[44];
  v2[400] = v2[45];
  v2[401] = v4;
  v2[402] = v2[42];
  LODWORD(STACK[0xE1C]) = STACK[0x344];
  v2[404] = v2[3];
  v5 = v2[39];
  v2[405] = v2[40];
  LODWORD(STACK[0xE34]) = STACK[0x334];
  LODWORD(STACK[0xE38]) = STACK[0x330];
  LODWORD(STACK[0xE3C]) = STACK[0x324];
  v2[408] = v2[38];
  v2[409] = v2[55];
  v2[410] = v2[24];
  LODWORD(STACK[0xE5C]) = 1718210905;
  v2[412] = v5;
  v6 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((LOBYTE(STACK[0x3AB]) * (a1 + 2097)) ^ a1))
                         - ((2 * a1) ^ 0x23Au)
                         + 1694);
  LODWORD(STACK[0xE6C]) = 1718210905;
  return v6();
}

uint64_t sub_1A277BF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(_QWORD, uint64_t))
{
  int v33;
  _QWORD *v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);

  v37 = a33(v34[24], 2241923698);
  v34[59] = v37;
  v34[378] = v34[51];
  LODWORD(STACK[0xD5C]) = STACK[0x348];
  v34[380] = v34[46];
  v34[381] = v34[53];
  v38 = v34[44];
  v34[382] = v34[45];
  v34[383] = v38;
  v34[384] = v34[42];
  LODWORD(STACK[0xD8C]) = STACK[0x344];
  v34[386] = v34[3];
  v34[387] = v34[40];
  LODWORD(STACK[0xDA4]) = STACK[0x334];
  LODWORD(STACK[0xDA8]) = STACK[0x330];
  LODWORD(STACK[0xDAC]) = STACK[0x324];
  v34[390] = v34[38];
  v34[391] = v34[55];
  v34[392] = v34[24];
  LODWORD(STACK[0xDCC]) = v36;
  v34[394] = 0;
  v39 = (uint64_t (*)(void))(*(_QWORD *)(v35 + 8 * ((v37 == 0) | v33)) - ((v33 ^ 0x7B7u) + 1280874088) + 1280874369);
  LODWORD(STACK[0xDDC]) = 1718210903;
  return v39();
}

uint64_t sub_1A277C224()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = STACK[0xC7C];
  v7 = v1[350];
  LODWORD(STACK[0x258]) = STACK[0xC6C];
  v1[127] = v1[348];
  v8 = v1[347];
  v1[1] = v7;
  v1[2] = v8;
  v9 = v1[346];
  LODWORD(STACK[0x25C]) = STACK[0xC4C];
  LODWORD(STACK[0x284]) = STACK[0xC48];
  LODWORD(STACK[0x288]) = STACK[0xC44];
  v10 = v1[343];
  v1[4] = v9;
  v1[5] = v10;
  v1[114] = v1[342];
  LODWORD(STACK[0x28C]) = STACK[0xC2C];
  v11 = v1[340];
  v1[7] = v11;
  v12 = v1[339];
  v13 = v1[338];
  v1[9] = v12;
  v1[10] = v13;
  v14 = v1[337];
  v1[11] = v14;
  v15 = v1[336];
  v16 = STACK[0xBFC];
  LODWORD(STACK[0x29C]) = STACK[0xBFC];
  v17 = v1[334];
  v1[13] = v15;
  v1[14] = v17;
  v1[352] = v17;
  LODWORD(STACK[0xC8C]) = v16;
  v1[354] = v15;
  v1[355] = v14;
  v1[356] = v13;
  v1[357] = v12;
  v1[358] = v11;
  LODWORD(STACK[0xCBC]) = STACK[0x28C];
  v1[360] = v1[114];
  v18 = v1[4];
  v1[361] = v1[5];
  LODWORD(STACK[0xCD4]) = STACK[0x288];
  LODWORD(STACK[0xCD8]) = STACK[0x284];
  LODWORD(STACK[0xCDC]) = STACK[0x25C];
  v1[364] = v18;
  v19 = v1[1];
  v1[365] = v1[2];
  v1[366] = v1[127];
  LODWORD(STACK[0xCFC]) = STACK[0x258];
  v1[368] = v19;
  LODWORD(STACK[0xD0C]) = v6;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v6 == v3) * ((v0 - v5 + 1177) ^ 0x71D)) ^ (v4 + v0 - 1127))))();
}

uint64_t sub_1A277C348@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  _QWORD *v38;
  int v39;
  _DWORD *v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;

  v40 = (_DWORD *)v38[9];
  v41 = STACK[0x28C];
  v42 = ((STACK[0x28C] & 0x9F1329F3) << (a8 + 103)) & (LODWORD(STACK[0x28C]) ^ 0x1F8B2DF2) ^ STACK[0x28C] & 0x9F1329F3;
  v43 = ((2 * (LODWORD(STACK[0x28C]) ^ 0x25AF7C72)) ^ 0x7578AB02) & (LODWORD(STACK[0x28C]) ^ 0x25AF7C72) ^ (2 * (LODWORD(STACK[0x28C]) ^ 0x25AF7C72)) & 0xBABC5580;
  v44 = (v43 ^ 0x32181100) & (4 * v42) ^ v42;
  v45 = ((4 * (v43 ^ 0x8A845481)) ^ 0xEAF15604) & (v43 ^ 0x8A845481) ^ (4 * (v43 ^ 0x8A845481)) & 0xBABC5580;
  v46 = (v45 ^ 0xAAB05400) & (16 * v44) ^ v44;
  v47 = ((16 * (v45 ^ 0x100C0181)) ^ 0xABC55810) & (v45 ^ 0x100C0181) ^ (16 * (v45 ^ 0x100C0181)) & 0xBABC5580;
  v48 = v46 ^ 0xBABC5581 ^ (v47 ^ 0xAA845000) & (v46 << 8);
  v49 = (uint64_t *)v38[13];
  v50 = v38[14];
  v51 = *v49;
  v52 = LODWORD(STACK[0x28C]) ^ (2
                               * ((v48 << 16) & 0x3ABC0000 ^ v48 ^ ((v48 << 16) ^ 0x55810000) & (((v47 ^ 0x10380581) << 8) & 0x3ABC0000 ^ 0x2A80000 ^ (((v47 ^ 0x10380581) << 8) ^ 0x3C550000) & (v47 ^ 0x10380581))));
  v53 = ((2 * *v40) & 0xFF67BAA6) + (*v40 ^ 0xFFB3DD53) + 4989613;
  *(_BYTE *)(*v49 + v53) = HIBYTE(v52) ^ 0xCB;
  *(_BYTE *)(v51 + v53 + 1) = BYTE2(v52) ^ 0x6B;
  *(_BYTE *)(v51 + v53 + 2) = ((BYTE1(v52) ^ 0x82) - ((2 * (BYTE1(v52) ^ 0x82)) & 0x96) + 75) ^ 0x4B;
  *(_BYTE *)(v51 + v53 + 3) = v52 ^ 0xF1;
  *v40 += 4;
  v38[352] = v50;
  LODWORD(STACK[0xC8C]) = STACK[0x29C];
  v38[354] = v49;
  v38[355] = v38[11];
  v54 = v38[9];
  v38[356] = v38[10];
  v38[357] = v54;
  v38[358] = v38[7];
  LODWORD(STACK[0xCBC]) = v41;
  v38[360] = v38[114];
  v55 = v38[4];
  v38[361] = v38[5];
  LODWORD(STACK[0xCD4]) = STACK[0x288];
  LODWORD(STACK[0xCD8]) = STACK[0x284];
  LODWORD(STACK[0xCDC]) = STACK[0x25C];
  v38[364] = v55;
  v56 = v38[1];
  v38[365] = v38[2];
  v38[366] = v38[127];
  LODWORD(STACK[0xCFC]) = STACK[0x258];
  v38[368] = v56;
  LODWORD(STACK[0xD0C]) = v39;
  LODWORD(STACK[0x2A0]) = STACK[0xD0C];
  v38[15] = v38[368];
  LODWORD(STACK[0x2A4]) = STACK[0xCFC];
  v57 = v38[364];
  v38[18] = v38[365];
  v38[19] = v57;
  LODWORD(STACK[0x2CC]) = STACK[0xCDC];
  LODWORD(STACK[0x2DC]) = STACK[0xCD8];
  LODWORD(STACK[0x304]) = STACK[0xCD4];
  v58 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v38[361];
  LODWORD(STACK[0x314]) = STACK[0xCBC];
  v59 = v38[358];
  v38[20] = v58;
  v38[21] = v59;
  v60 = v38[356];
  v38[29] = v38[357];
  v38[30] = v60;
  v38[31] = v38[355];
  v38[34] = v38[354];
  LODWORD(STACK[0x320]) = STACK[0xC8C];
  v38[37] = v38[352];
  return v58(v51, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1A277C624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  _QWORD *v46;
  uint64_t v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t (*v57)(void);

  v52 = STACK[0x2A0];
  v53 = LODWORD(STACK[0x2A0]) == v49;
  v46[284] = v46[37];
  LODWORD(STACK[0xA6C]) = STACK[0x320];
  v46[286] = v46[34];
  v46[287] = v46[31];
  v46[288] = v46[29];
  v54 = v46[20];
  v46[289] = v46[21];
  LODWORD(STACK[0xA94]) = STACK[0x314];
  v46[291] = a46;
  v46[292] = v54;
  LODWORD(STACK[0xAA8]) = STACK[0x2DC];
  LODWORD(STACK[0xAAC]) = STACK[0x2CC];
  v55 = v46[18];
  v46[294] = v46[19];
  v56 = v53;
  v46[295] = v55;
  v46[296] = a45;
  LODWORD(STACK[0xACC]) = STACK[0x2A4];
  v46[298] = v46[15];
  v57 = (uint64_t (*)(void))(*(_QWORD *)(v47 + 8 * ((v56 * ((v48 ^ (v51 + 13)) + 1383)) ^ (v50 + v48 - 2285))) - 4);
  LODWORD(STACK[0xADC]) = v52;
  return v57();
}

uint64_t sub_1A277C6DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v45;
  unsigned int v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  unint64_t v52;
  uint64_t v53;

  v49 = v45 ^ v46;
  v50 = v47[196];
  v47[163] = v50;
  v47[284] = v50;
  v51 = *(_DWORD *)(v50 + 12);
  v50 += 12;
  v47[164] = v50;
  v52 = (v51 ^ 0xDFF69DEE47F76BFALL) + v47[445] + ((2 * v51) & 0x8FEED7F4);
  v47[447] = v52;
  LODWORD(STACK[0xA6C]) = STACK[0x320];
  v47[286] = v47[34];
  v47[287] = v47[31];
  v47[288] = v47[29];
  v47[289] = v50;
  LODWORD(STACK[0xA94]) = STACK[0x314];
  v47[291] = v47[444];
  v47[292] = v47[20];
  LODWORD(STACK[0xAA8]) = STACK[0x2DC];
  LODWORD(STACK[0xAAC]) = STACK[0x2CC];
  v53 = v47[18];
  v47[294] = v47[19];
  v47[295] = v53;
  v47[296] = a45;
  LODWORD(STACK[0xACC]) = STACK[0x2A4];
  v47[298] = v47[15];
  LODWORD(STACK[0xADC]) = 1718210905;
  return ((uint64_t (*)(void))(*(_QWORD *)(v48
                                        + 8
                                        * (((v52 + 0x709AA7C64B899A76 < (v49 ^ 0xFFD6355EuLL)) * (v45 ^ 0x5A3)) ^ v45))
                            - 4))();
}

uint64_t sub_1A277C7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v45;
  _QWORD *v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _BOOL4 v54;
  uint64_t v55;
  uint64_t v56;

  v49 = v46[163];
  v50 = *(unsigned int *)(v49 + 8);
  v51 = v46[447] + 0x709AA7C6814D35E0;
  v46[197] = v49;
  LODWORD(STACK[0x7B4]) = STACK[0x320];
  v52 = (v50 ^ 0xF59FF7FBFBE7FB4DLL)
      + 0xA60080439DBA019
      + (((v45 - 29496349) & 0x1EBDEB5 ^ 0x1F7E63C3FLL) & (2 * v50));
  v46[199] = v46[34];
  v54 = v52 > 0x35C39B65 && v51 > v52;
  v46[200] = v46[31];
  v55 = v46[29];
  v46[201] = v46[30];
  v46[202] = v55;
  v46[203] = v46[164];
  LODWORD(STACK[0x7E4]) = STACK[0x314];
  v46[205] = v46[444];
  v46[206] = v46[20];
  LODWORD(STACK[0x7F8]) = STACK[0x304];
  LODWORD(STACK[0x7FC]) = STACK[0x2DC];
  v56 = v46[18];
  v46[208] = v46[19];
  v46[209] = v56;
  v46[210] = a45;
  LODWORD(STACK[0x81C]) = STACK[0x2A4];
  v46[212] = v46[15];
  LODWORD(STACK[0x828]) = v48;
  return ((uint64_t (*)(void))(*(_QWORD *)(v47 + 8 * ((1844 * v54) ^ v45)) - 8))();
}

void sub_1A277C918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;

  v8 = *(_QWORD *)(v7 + 8 * v5);
  v9 = v5 + 172;
  v10 = v6[163];
  v11 = v9 | 0x447u;
  v12 = STACK[0x320];
  v6[370] = v6[34];
  v13 = v6[29];
  v6[371] = v6[30];
  v6[372] = v13;
  v6[373] = v6[164];
  v14 = STACK[0x314];
  v15 = v6[444];
  v6[374] = v6[20];
  v16 = STACK[0x304];
  v17 = STACK[0x2DC];
  v18 = STACK[0x2CC];
  v6[375] = v6[15];
  v6[376] = v6[163];
  v19 = STACK[0x5AC];
  v0 = v6[376];
  v1 = v6[375];
  v6[38] = v0;
  v6[39] = v1;
  LODWORD(STACK[0x324]) = v18;
  LODWORD(STACK[0x330]) = v17;
  LODWORD(STACK[0x334]) = v16;
  v6[40] = v6[374];
  v6[3] = v15;
  LODWORD(STACK[0x344]) = v14;
  v6[42] = v6[373];
  v2 = v6[371];
  v6[44] = v6[372];
  v6[45] = v2;
  v6[46] = v6[370];
  LODWORD(STACK[0x348]) = v12;
  v6[51] = v10;
  v6[53] = v8 + v11 - 1287;
  v3 = *(unsigned int *)(v0 + 8);
  v6[55] = v0 + 8;
  v4 = (v19 ^ 0x9FBBF5FF77DFDFB7)
     + ((2 * v19) & 0xEFBFBF6E)
     + v3
     + ((v11 + 1149) ^ 0x60440A0088202935);
  v6[23] = v4;
  LOBYTE(STACK[0x3AB]) = v4 < 0xFFFFFFFF;
  v6[377] = v3;
  JUMPOUT(0x1A277BDD8);
}

uint64_t sub_1A277C988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;
  int v45;

  HIDWORD(a41) = STACK[0x8B4];
  v42[178] = v42[229];
  v42[450] = v42[227];
  v42[179] = v42[226];
  v42[180] = v42[225];
  v42[181] = v42[222];
  v42[451] = v42[221];
  v42[182] = v42[219];
  v42[183] = v42[218];
  v42[184] = v42[217];
  v42[185] = v42[216];
  v42[186] = v42[215];
  v42[187] = v42[214];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * ((51 * (HIDWORD(a41) != v44)) ^ (v45 + v41 - 295))) - ((((v45 + v41 - 2257) | 6u) + 225) ^ 0x11BLL)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_1A277CA5C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35,uint64_t a36,uint64_t a37,int a38,int a39,uint64_t a40,uint64_t a41,int a42,int a43,uint64_t a44,int a45,int a46)
{
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v48 = v46[193];
  v49 = *(_QWORD *)(v47 + 8 * a1);
  v50 = (4 * (_DWORD)a1) ^ 0x20Cu;
  v46[417] = v46[187];
  LODWORD(STACK[0xE94]) = a35;
  v46[419] = v46[186];
  v46[420] = v46[185];
  v46[421] = v46[183];
  v46[422] = v49 + v50 - 732;
  v46[423] = v46[182];
  LODWORD(STACK[0xEC4]) = a46;
  v46[425] = v46[451];
  v46[426] = v46[181];
  LODWORD(STACK[0xEDC]) = a43;
  LODWORD(STACK[0xEE0]) = a42;
  LODWORD(STACK[0xEE4]) = a39;
  v46[429] = v46[180];
  v46[430] = v46[179];
  v46[431] = v46[450];
  LODWORD(STACK[0xF04]) = a38;
  v46[433] = v46[178];
  v46[148] = v48;
  v51 = v46[433];
  v46[62] = v46[148];
  v46[63] = v51;
  LODWORD(STACK[0x354]) = STACK[0xF04];
  v46[25] = v46[431];
  v46[65] = v46[430];
  v46[66] = v46[429];
  LODWORD(STACK[0x384]) = STACK[0xEE4];
  LODWORD(STACK[0x3A4]) = STACK[0xEE0];
  LODWORD(STACK[0x3AC]) = STACK[0xEDC];
  v46[67] = v46[426];
  v46[28] = v46[425];
  LODWORD(STACK[0x3CC]) = STACK[0xEC4];
  v46[70] = v46[423];
  v52 = v46[422];
  v46[71] = v46[421];
  v46[72] = v46[420];
  v46[74] = v46[419];
  LODWORD(STACK[0x3E8]) = STACK[0xE94];
  v46[75] = v46[417];
  v46[76] = v52;
  return ((uint64_t (*)(void))(*(_QWORD *)(v47 + 8 * (int)(((v46[62] == 0) * (v50 ^ 0x2E1)) ^ v50))
                            - (v50 + 341)
                            + 1061))();
}

uint64_t sub_1A277CB08@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  v5 = STACK[0x828];
  v1[165] = v1[212];
  LODWORD(STACK[0x528]) = STACK[0x81C];
  v1[448] = v1[210];
  v1[166] = v1[209];
  v1[167] = v1[208];
  LODWORD(STACK[0x52C]) = STACK[0x7FC];
  LODWORD(STACK[0x53C]) = STACK[0x7F8];
  v1[168] = v1[206];
  v1[449] = v1[205];
  LODWORD(STACK[0x558]) = STACK[0x7E4];
  v6 = v1[203];
  v1[169] = v6;
  v7 = v1[202];
  v1[170] = v7;
  v1[171] = v1[201];
  v8 = v1[200];
  v1[172] = v8;
  v9 = v1[199];
  v1[173] = v9;
  v10 = STACK[0x7B4];
  LODWORD(STACK[0x55C]) = STACK[0x7B4];
  v11 = v1[197];
  v1[174] = v11;
  v1[284] = v11;
  LODWORD(STACK[0xA6C]) = v10;
  v1[286] = v9;
  v1[287] = v8;
  v1[288] = v7;
  v1[289] = v6;
  LODWORD(STACK[0xA94]) = STACK[0x558];
  v1[291] = v1[449];
  v1[292] = v1[168];
  LODWORD(STACK[0xAA8]) = STACK[0x52C];
  LODWORD(STACK[0xAAC]) = v5;
  v1[294] = v1[167];
  v1[295] = v1[166];
  v1[296] = v1[448];
  LODWORD(STACK[0xACC]) = STACK[0x528];
  v1[298] = v1[165];
  v12 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2477 * (v5 == ((v4 + a1 - 2031) ^ (v3 - 274)))) ^ (v4 + a1 - 2285)))
                          - 4);
  LODWORD(STACK[0xADC]) = v5;
  return v12();
}

uint64_t sub_1A277CC30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v35;
  _QWORD *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  _DWORD *v42;
  unsigned int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(void);

  v40 = (uint64_t *)v36[174];
  v41 = *v40;
  v42 = (_DWORD *)v36[169];
  v43 = ((2 * *v42) & 0xDD6EBAB6) + (*v42 ^ 0x6EB75D5B) - 1857510747;
  *(_BYTE *)(*v40 + v43) = *(_BYTE *)(v39 - 204);
  *(_BYTE *)(v41 + v43 + 1) = *(_BYTE *)(v39 - 203);
  *(_BYTE *)(v41 + v43 + 2) = *(_BYTE *)(v39 - 202);
  *(_BYTE *)(v41 + v43 + 3) = *(_BYTE *)(v39 - 201);
  v44 = v35 ^ 0x73A;
  v45 = *v42 + (v35 ^ 0x116u);
  *v42 = v45;
  v46 = *v40;
  v47 = (v45 ^ 0xFFCFEB5F9F539FEFLL) + 0x1036941631549102 + ((2 * v45) & 0x13EA73FDELL);
  v48 = v36[449];
  v49 = (v48 ^ 0x9E7E112A4836C462) & (2 * (v48 & 0xC07F45B28D40E470)) ^ v48 & 0xC07F45B28D40E470;
  v50 = ((2 * (v48 ^ 0x9E16920E4AB70C22)) ^ 0xBCD3AF798FEFD0A4) & (v48 ^ 0x9E16920E4AB70C22) ^ (2 * (v48 ^ 0x9E16920E4AB70C22)) & 0x5E69D7BCC7F7E852;
  v51 = (v50 ^ 0x41071807078000) & (4 * v49) ^ v49;
  v52 = *(_QWORD *)(v37 + 8 * v35);
  v36[149] = v40;
  v53 = ((4 * (v50 ^ 0x4228508440102852)) ^ 0x79A75EF31FDFA148) & (v50 ^ 0x4228508440102852) ^ (4 * (v50 ^ 0x4228508440102852)) & 0x5E69D7BCC7F7E850;
  LODWORD(STACK[0xF10]) = STACK[0x55C];
  v36[150] = v36[173];
  v54 = v53 ^ 0x648810CC0204812;
  v55 = (v53 ^ 0x582156B007D7A040) & (16 * v51) ^ v51;
  v36[151] = v36[172];
  v36[152] = v36[171];
  v36[153] = v36[170];
  v56 = ((16 * v54) ^ 0xE69D7BCC7F7E8520) & v54 ^ (16 * v54) & 0x5E69D7BCC7F7E850;
  v36[154] = v36[169];
  LODWORD(STACK[0xF14]) = STACK[0x558];
  v36[435] = v36[449];
  v36[155] = v36[168];
  LODWORD(STACK[0xF24]) = STACK[0x53C];
  v57 = (((v56 ^ 0x1860843080816852) << 8) ^ 0x69D7BCC7F7E85200) & (v56 ^ 0x1860843080816852) ^ ((v56 ^ 0x1860843080816852) << 8) & 0x5E69D7BCC7F7E800;
  v36[437] = v52 - 4;
  LODWORD(STACK[0xF34]) = STACK[0x52C];
  LODWORD(STACK[0x588]) = v38;
  v36[156] = v36[167];
  v36[157] = v36[166];
  v36[439] = v36[448];
  LODWORD(STACK[0x58C]) = STACK[0x528];
  v36[158] = v36[165];
  v36[159] = v46;
  v36[440] = v47;
  v36[160] = a35;
  v36[441] = v48 ^ (2
                  * (v57 & 0x47B4C05200000000 ^ (v56 ^ 0x4609538C47768000) & (v55 << 8) ^ v55 ^ (v57 ^ 0x48419484C7E00000) & (((v56 ^ 0x4609538C47768000) & (v55 << 8) ^ v55) << 16))) ^ 0xE211D80AA779E058;
  v36[47] = v36[441];
  v36[79] = v36[160];
  v36[49] = v36[440];
  v36[80] = v36[159];
  v36[82] = v36[158];
  LODWORD(STACK[0x3EC]) = STACK[0x58C];
  v36[89] = v36[439];
  v36[83] = v36[157];
  v36[84] = v36[156];
  LODWORD(STACK[0x40C]) = STACK[0x588];
  LODWORD(STACK[0x434]) = STACK[0xF34];
  LODWORD(STACK[0x484]) = STACK[0xF24];
  v36[85] = v36[155];
  v36[91] = v36[435];
  LODWORD(STACK[0x490]) = STACK[0xF14];
  v36[87] = v36[154];
  v36[88] = v36[153];
  v36[93] = v36[152];
  v36[94] = v36[151];
  v36[100] = v36[150];
  LODWORD(STACK[0x494]) = STACK[0xF10];
  v36[101] = v36[149];
  v58 = (uint64_t (*)(void))(*(_QWORD *)(v37
                                      + 8
                                      * ((7
                                        * (v36[79] <= v36[80]
                                                    + v36[49]
                                                    + ((((v44 - 286) | 0x20u) - 4) ^ 0xEFF9808A2F57CA29))) ^ v44))
                          - 4);
  v36[102] = v36[437];
  return v58();
}

uint64_t sub_1A277D454()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  LODWORD(STACK[0x49C]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v0 - 1306) * (v1 == 0)) ^ v0))
                            - ((v0 - v3 + 987) ^ 0x29CAA9)))();
}

uint64_t sub_1A277D494()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[49] + 0x74E201AB2F781F5FLL;
  v1[97] = v3;
  v4 = LODWORD(STACK[0x49C]);
  v1[443] = v4--;
  v5 = ((2 * v4) & 0x1FFBF5F60) + (((v0 + 113371) | 0x280AA4u) ^ v4 ^ 0x7B177EDEFFF66515);
  *(_BYTE *)(v1[80] + v5 + v3) = *(_BYTE *)(v1[79] + v5 - 0x7B177EDEFFDFAFB0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((3766 * (v4 == 0)) ^ (v0 + 615))) - 12))();
}

uint64_t sub_1A277D554()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x498]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((609 * (((v1 == 0) ^ (v0 + 49)) & 1)) ^ v0))
                            - ((v0 - 1632896619) & 0x617DCBE5 ^ 0x29CAA9)))();
}

uint64_t sub_1A277D5B0()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v4 = v1[49] + 0x70FD8A2CC383D310;
  v1[92] = v4;
  v5 = LODWORD(STACK[0x498]);
  v1[95] = v5;
  v1[442] = 0;
  *(_BYTE *)(v1[80] + v4 + 0x7EFBF65D6BD3FBFFLL) = *(_BYTE *)((v0 - v3 + 1702)
                                                            + v1[79]
                                                            + 0x7EFBF65D6BD3FBFFLL
                                                            - 0x7EFBF65D6BFDC6A4);
  return (*(uint64_t (**)(unint64_t))(v2 + 8 * ((45 * (v5 == 1)) ^ v0)))(0x810409A29402395CLL);
}

void sub_1A277D65C()
{
  JUMPOUT(0x1A277D620);
}

uint64_t sub_1A277D664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  uint64_t v40;
  int v41;
  uint64_t v42;

  *(_QWORD *)(v42 + 3544) = v40;
  return sub_1A277A890(v41, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1A277D670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  uint64_t v40;
  int v41;
  uint64_t v42;

  *(_QWORD *)(v42 + 3536) = v40;
  return sub_1A277A890(v41, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1A277D910(uint64_t a1, uint64_t a2)
{
  int v2;
  _QWORD *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v6 = v3[132];
  LOBYTE(STACK[0x587]) = v6 == 0;
  v3[138] = v6 + 12;
  v3[139] = v6 + 8;
  v7 = v3[190];
  LODWORD(STACK[0xE84]) = 1718210905;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                        + 8
                                                                        * (((v5 + ((v2 + 2721646) | 0x42A1) - 1639)
                                                                          * (v6 != 0)) ^ (v5
                                                                                        + ((v2 + 2721646) | 0x42A1)
                                                                                        - 853)))
                                                            - 8))(4292230748, a2, v7);
}

uint64_t sub_1A277DA04(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned int *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  char v39;
  unint64_t v40;
  unint64_t v41;
  _BOOL4 v42;
  BOOL v43;
  int v44;
  int v45;
  int v46;

  v40 = (*a4 ^ 0x783F6FC76FFDFFF7)
      - 0x783F6FC677AB969BLL
      + (((unint64_t)*a4 << (v38 ^ (v39 + 101) ^ 0xA4u)) & 0xDFFBFFEE);
  v41 = (*a25 ^ 0x3DFF52E3FEEA95BBLL) - 0x3DFF52E306982C63 + ((2 * *a25) & 0x1FDD52B76);
  v42 = v40 < 0xF8526958;
  v43 = v40 > v41;
  v44 = v42 ^ (v41 < 0xF8526958);
  v45 = v43;
  if (v44)
    v46 = v42;
  else
    v46 = v45;
  return ((uint64_t (*)(void))(*(_QWORD *)(a38 + 8 * ((939 * (v46 ^ 1)) ^ v38)) - 8))();
}

uint64_t sub_1A277DAF0(uint64_t a1, uint64_t a2, uint64_t a3, _DWORD *a4, uint64_t a5, _DWORD *a6, int a7)
{
  char v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  char v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;

  v11 = **(_QWORD **)(v9 + 1056);
  v12 = ((a7 << ((v7 + 83) & 0xA5 ^ v10)) & 0xBF9D5BFA) + (a7 ^ 0x5FCEADFD) - 1607380477;
  v13 = *(unsigned __int8 *)(v11 + v12 + 1);
  v14 = *(unsigned __int8 *)(v11 + v12 + 2);
  v15 = (((v13 - ((2 * v13) & 0x13A)) << 16) - 1902313472) ^ 0x8E9D0000 | (((*(unsigned __int8 *)(v11 + v12)
                                                                           - ((2 * *(unsigned __int8 *)(v11 + v12)) & 0x16)) << 24)
                                                                         - 1962934272) ^ 0x8B000000 | (((v14 + 3338208 - ((2 * v14) & 0xBBBBBBBB)) << 8) - 768) ^ 0x32EFDD00;
  v16 = *(unsigned __int8 *)(v11 + v12 + 3);
  v17 = ((v16 - 285719737 - ((2 * v16) & 0x8E)) ^ 0xE7A74194) & ~v15 | v15 & 0xF6A0FD00;
  *a6 = (((v17 ^ 0x7F619929) - 1972886616) ^ ((v17 ^ 0x5B2A7D6C) - 1373386781) ^ ((v17 ^ 0x2D14E696) - 669164519))
      + 1779679125;
  *a4 = a7 + 4;
  LODWORD(STACK[0xE84]) = 1718253555;
  return v8();
}

uint64_t sub_1A277DC90(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,int a37,uint64_t a38,uint64_t a39)
{
  int v39;
  int v40;

  return ((uint64_t (*)(void))(*(_QWORD *)(a39 + 8 * (((314 * (a37 ^ (v40 + 3)) - 532) * (v39 ^ 1)) | (a1 + a37 - 228)))
                            - 53 * (a37 ^ (v40 - 24))
                            + 2169))();
}

uint64_t sub_1A277DD0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (((LODWORD(STACK[0x784]) == v6 + 1718251382)
                                          * (((v6 + 2193316) | v5) ^ (a5 - 79))) ^ v6))
                            - 4))();
}

void sub_1A277DD78()
{
  JUMPOUT(0x1A277D9C4);
}

void sub_1A277DD94(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  int v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  unint64_t v54;

  v31[414] = v27;
  v36 = (v24 - 624) | 0x10;
  v31[415] = a6;
  v31[60] = a6;
  v31[61] = v27;
  LOBYTE(STACK[0x586]) = v28;
  LODWORD(STACK[0x34C]) = a7;
  LODWORD(STACK[0x350]) = v34;
  LOBYTE(STACK[0x457]) = v28;
  v31[267] = a18;
  LODWORD(STACK[0x9E4]) = a17;
  v31[269] = a16;
  v31[270] = a15;
  v31[271] = v26;
  v31[272] = v29;
  v31[273] = v35;
  LODWORD(STACK[0xA14]) = a22;
  v31[275] = a20;
  v31[276] = a19;
  LODWORD(STACK[0xA2C]) = a13;
  LODWORD(STACK[0xA30]) = v30;
  LODWORD(STACK[0xA34]) = a14;
  v31[279] = v33;
  v31[280] = v23;
  v31[281] = v25;
  LODWORD(STACK[0xA54]) = a2;
  v31[283] = v22;
  v37 = v31[283];
  v38 = STACK[0xA54];
  v39 = v31[281];
  v40 = v31[280];
  v41 = v31[279];
  v42 = STACK[0xA34];
  v43 = STACK[0xA30];
  v44 = STACK[0xA2C];
  v45 = v31[276];
  v46 = v31[275];
  v47 = STACK[0xA14];
  v48 = v31[273];
  v49 = v31[272];
  v50 = v31[271];
  v51 = v31[270];
  v52 = v31[269];
  v53 = STACK[0x9E4];
  v54 = *(_QWORD *)(v32 + 8 * v36) + ((v36 + 704) ^ 0xFFFFFFFFFFFFFD28);
  v31[417] = v31[267];
  LODWORD(STACK[0xE94]) = v53;
  v31[419] = v52;
  v31[420] = v51;
  v31[421] = v49;
  v31[422] = v54;
  v31[423] = v48;
  LODWORD(STACK[0xEC4]) = v47;
  v31[425] = v46;
  v31[426] = v45;
  LODWORD(STACK[0xEDC]) = v44;
  LODWORD(STACK[0xEE0]) = v43;
  LODWORD(STACK[0xEE4]) = v42;
  v31[429] = v41;
  v31[430] = v40;
  v31[431] = v39;
  LODWORD(STACK[0xF04]) = v38;
  v31[433] = v37;
  v31[148] = v50;
  JUMPOUT(0x1A277E588);
}

uint64_t sub_1A277DE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,int a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,int a53,int a54,int a55,uint64_t a56,int a57,int a58)
{
  uint64_t v58;
  char v59;
  _QWORD *v60;
  int v61;
  int v62;
  int v63;

  v60[414] = v58;
  v60[415] = a6;
  v60[60] = a6;
  v60[61] = v58;
  LOBYTE(STACK[0x586]) = v59;
  LODWORD(STACK[0x34C]) = a7;
  LODWORD(STACK[0x350]) = v61;
  LOBYTE(STACK[0x457]) = v59;
  v60[267] = v60[136];
  LODWORD(STACK[0x9E4]) = a58;
  v60[269] = v60[135];
  v60[270] = v60[134];
  v60[271] = v60[132];
  v60[272] = v60[131];
  v60[273] = v60[130];
  LODWORD(STACK[0xA14]) = a57;
  v60[275] = v60[141];
  v60[276] = v60[191];
  LODWORD(STACK[0xA2C]) = a55;
  LODWORD(STACK[0xA30]) = STACK[0x350];
  LODWORD(STACK[0xA34]) = a53;
  v60[279] = v60[190];
  v60[280] = v60[189];
  v60[281] = v60[452];
  LODWORD(STACK[0xA54]) = a52;
  v63 = (LOBYTE(STACK[0x457]) * (a37 - 2738225 + 5 * (a37 ^ (v62 - 3)) + 1994)) ^ (a37 - 2738225);
  v60[283] = v60[188];
  return (*(uint64_t (**)(void))(a39 + 8 * v63))();
}

uint64_t sub_1A277DF40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,int a53,int a54,uint64_t a55,int a56,int a57)
{
  int v57;
  _QWORD *v58;
  uint64_t v59;
  int v60;

  v58[267] = v58[136];
  LODWORD(STACK[0x9E4]) = a57;
  v58[269] = v58[135];
  v58[270] = v58[134];
  v58[271] = 0;
  v58[272] = v58[131];
  v58[273] = v58[130];
  LODWORD(STACK[0xA14]) = a56;
  v58[275] = v58[141];
  v58[276] = v58[191];
  LODWORD(STACK[0xA2C]) = a54;
  LODWORD(STACK[0xA30]) = 1718210905;
  LODWORD(STACK[0xA34]) = a52;
  v58[279] = v58[190];
  v58[280] = v58[189];
  v58[281] = v58[452];
  LODWORD(STACK[0xA54]) = a51;
  v60 = (1199 * (((v57 - 1) ^ LOBYTE(STACK[0x587])) & 1)) ^ v57;
  v58[283] = v58[188];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * v60))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1A277E000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,int a53,int a54,uint64_t a55,int a56,int a57,unsigned int a58)
{
  int v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  unint64_t v62;
  unint64_t v63;
  _BOOL4 v64;
  _BOOL4 v65;
  unsigned int v67;

  v67 = **(_DWORD **)(v59 + 1104);
  *(_QWORD *)(v59 + 1136) = v67;
  v62 = (v67 ^ 0xFBA25BF1FF5386FFLL)
      + a58
      + (((v58 ^ 0x260u) + 0x1FEA70DEALL) & (2 * v67))
      + ((unint64_t)(a58 < v61) << 32)
      + 0x45DA40DD3C885E0;
  v63 = (**(unsigned int **)(v59 + 1112) ^ 0xA35FE9BFA6E7F5D7)
      + 0x5CA01640929E8EFBLL
      + ((2 * **(unsigned int **)(v59 + 1112)) & 0x14DCFEBAELL);
  v64 = v62 < 0x398684D2;
  *(_QWORD *)(v59 + 2136) = *(_QWORD *)(v59 + 1088);
  LODWORD(STACK[0x9E4]) = a57;
  *(_QWORD *)(v59 + 2152) = *(_QWORD *)(v59 + 1080);
  v65 = v62 > v63;
  *(_QWORD *)(v59 + 2160) = *(_QWORD *)(v59 + 1072);
  *(_QWORD *)(v59 + 2168) = *(_QWORD *)(v59 + 1056);
  if (v64 != v63 < 0x398684D2)
    v65 = v64;
  *(_QWORD *)(v59 + 2176) = *(_QWORD *)(v59 + 1048);
  *(_QWORD *)(v59 + 2184) = *(_QWORD *)(v59 + 1040);
  LODWORD(STACK[0xA14]) = a56;
  *(_QWORD *)(v59 + 2200) = *(_QWORD *)(v59 + 1128);
  *(_QWORD *)(v59 + 2208) = *(_QWORD *)(v59 + 1528);
  LODWORD(STACK[0xA2C]) = a54;
  LODWORD(STACK[0xA34]) = a52;
  *(_QWORD *)(v59 + 2232) = *(_QWORD *)(v59 + 1520);
  *(_QWORD *)(v59 + 2240) = *(_QWORD *)(v59 + 1512);
  *(_QWORD *)(v59 + 2248) = *(_QWORD *)(v59 + 3616);
  LODWORD(STACK[0xA54]) = a51;
  *(_QWORD *)(v59 + 2264) = *(_QWORD *)(v59 + 1504);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * ((2909 * !v65) ^ v58)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1A277E17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t *a32,uint64_t (*a33)(void),uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,int a53,int a54,uint64_t a55,int a56,int a57,int a58,int a59)
{
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BOOL4 v64;

  *(_QWORD *)(v60 + 1120) = **(_QWORD **)(v60 + 1056);
  v62 = (a58 - 1718253555);
  **(_DWORD **)(v60 + 1104) = v62 + a59;
  *(_QWORD *)(v60 + 1144) = v62;
  v63 = a33();
  *(_QWORD *)(v60 + 920) = v63;
  *a32 = v63;
  v64 = *(_QWORD *)(v60 + 920) != 0;
  *(_QWORD *)(v60 + 2136) = *(_QWORD *)(v60 + 1088);
  LODWORD(STACK[0x9E4]) = a57;
  *(_QWORD *)(v60 + 2152) = *(_QWORD *)(v60 + 1080);
  *(_QWORD *)(v60 + 2160) = *(_QWORD *)(v60 + 1072);
  *(_QWORD *)(v60 + 2168) = *(_QWORD *)(v60 + 1056);
  *(_QWORD *)(v60 + 2176) = *(_QWORD *)(v60 + 1048);
  *(_QWORD *)(v60 + 2184) = *(_QWORD *)(v60 + 1040);
  LODWORD(STACK[0xA14]) = a56;
  *(_QWORD *)(v60 + 2200) = *(_QWORD *)(v60 + 1128);
  *(_QWORD *)(v60 + 2208) = *(_QWORD *)(v60 + 1528);
  LODWORD(STACK[0xA2C]) = a54;
  LODWORD(STACK[0xA30]) = 1718210903;
  LODWORD(STACK[0xA34]) = a52;
  *(_QWORD *)(v60 + 2232) = *(_QWORD *)(v60 + 1520);
  *(_QWORD *)(v60 + 2240) = *(_QWORD *)(v60 + 1512);
  *(_QWORD *)(v60 + 2248) = *(_QWORD *)(v60 + 3616);
  LODWORD(STACK[0xA54]) = a51;
  *(_QWORD *)(v60 + 2264) = *(_QWORD *)(v60 + 1504);
  return (*(uint64_t (**)(void))(v61 + 8 * ((v64 * ((4 * (v59 ^ 0x271)) ^ 0xE2)) ^ v59)))();
}

void sub_1A277E2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,int a53,int a54,uint64_t a55,int a56,int a57)
{
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v60 = v58[140] + v58[142];
  v61 = *(_QWORD *)(v59 + 8 * v57);
  v62 = (v57 + 1282)
      + v58[143]
      - 0x5D906247D5C6FBD8
      - ((2 * v58[143]) & 0x54720850)
      - 1576;
  v58[149] = v58[136];
  LODWORD(STACK[0xF10]) = a57;
  v58[150] = v58[135];
  v58[151] = v58[134];
  v58[152] = v58[132];
  v58[153] = v58[131];
  v58[154] = v58[130];
  LODWORD(STACK[0xF14]) = a56;
  v58[435] = v58[141];
  v58[155] = v58[191];
  LODWORD(STACK[0xF24]) = a54;
  v58[437] = v61 - 8;
  LODWORD(STACK[0xF34]) = a53;
  LODWORD(STACK[0x588]) = a52;
  v58[156] = v58[190];
  v58[157] = v58[189];
  v58[439] = v58[452];
  LODWORD(STACK[0x58C]) = a51;
  v58[158] = v58[188];
  v58[159] = v58[115];
  v58[440] = 0x10067F75D0A830F1;
  v58[160] = v60;
  v58[441] = v62;
  JUMPOUT(0x1A277D338);
}

void sub_1A277E458()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;

  v1 = STACK[0xADC];
  v2 = v0[298];
  v3 = STACK[0xACC];
  v4 = v0[296];
  v5 = v0[295];
  v6 = v0[294];
  v7 = STACK[0xAAC];
  v8 = STACK[0xAA8];
  v9 = v0[292];
  v10 = v0[291];
  v11 = STACK[0xA94];
  v12 = v0[289];
  v13 = v0[288];
  v14 = v0[287];
  v15 = v0[286];
  v16 = STACK[0xA6C];
  v0[300] = v0[284];
  LODWORD(STACK[0xAEC]) = v16;
  v0[302] = v15;
  v0[303] = v14;
  v0[304] = v13;
  v0[305] = v12;
  LODWORD(STACK[0xB10]) = v11;
  LODWORD(STACK[0xB14]) = v1;
  v0[307] = v10;
  v0[308] = v9;
  LODWORD(STACK[0xB28]) = v8;
  LODWORD(STACK[0xB2C]) = v7;
  v0[310] = v6;
  v0[311] = v5;
  v0[312] = v4;
  LODWORD(STACK[0xB4C]) = v3;
  v0[314] = v2;
  JUMPOUT(0x1A277E4E8);
}

uint64_t sub_1A277E64C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;

  v5 = **(_QWORD **)(v1 + 496);
  *(_QWORD *)(v1 + 624) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v4 + v0) ^ (v5 == 0)) & 1)
                                          * (v3 + ((v0 + 66520) | 0x28C2A4) - 1844)) ^ v0))
                            - 12))();
}

uint64_t sub_1A277E6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t (*a37)(void))
{
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;

  ((void (*)(_QWORD))a37)(*(_QWORD *)(v37 + 624));
  v38 = *(_QWORD **)(v37 + 496);
  *v38 = 0;
  v38[1] = 0;
  v39 = a37();
  *(_QWORD *)(v37 + 1848) = *(_QWORD *)(v37 + 600);
  v40 = STACK[0x3E8];
  LODWORD(STACK[0x8C4]) = STACK[0x3E8];
  *(_QWORD *)(v37 + 1864) = *(_QWORD *)(v37 + 592);
  *(_QWORD *)(v37 + 1872) = *(_QWORD *)(v37 + 576);
  *(_QWORD *)(v37 + 1880) = *(_QWORD *)(v37 + 568);
  *(_QWORD *)(v37 + 1888) = *(_QWORD *)(v37 + 560);
  v41 = STACK[0x3CC];
  LODWORD(STACK[0x8EC]) = STACK[0x3CC];
  *(_QWORD *)(v37 + 1904) = *(_QWORD *)(v37 + 224);
  *(_QWORD *)(v37 + 1912) = *(_QWORD *)(v37 + 536);
  v42 = STACK[0x3AC];
  LODWORD(STACK[0x904]) = STACK[0x3AC];
  v43 = STACK[0x3A4];
  LODWORD(STACK[0x908]) = STACK[0x3A4];
  v44 = STACK[0x384];
  LODWORD(STACK[0x90C]) = STACK[0x384];
  *(_QWORD *)(v37 + 1936) = *(_QWORD *)(v37 + 528);
  *(_QWORD *)(v37 + 1944) = *(_QWORD *)(v37 + 520);
  *(_QWORD *)(v37 + 1952) = *(_QWORD *)(v37 + 200);
  v45 = STACK[0x354];
  LODWORD(STACK[0x92C]) = STACK[0x354];
  *(_QWORD *)(v37 + 1968) = *(_QWORD *)(v37 + 504);
  *(_QWORD *)(v37 + 2272) = *(_QWORD *)(v37 + 600);
  LODWORD(STACK[0xA6C]) = v40;
  *(_QWORD *)(v37 + 2288) = *(_QWORD *)(v37 + 592);
  *(_QWORD *)(v37 + 2296) = *(_QWORD *)(v37 + 576);
  *(_QWORD *)(v37 + 2304) = *(_QWORD *)(v37 + 568);
  *(_QWORD *)(v37 + 2312) = *(_QWORD *)(v37 + 560);
  LODWORD(STACK[0xA94]) = v41;
  *(_QWORD *)(v37 + 2328) = *(_QWORD *)(v37 + 224);
  *(_QWORD *)(v37 + 2336) = *(_QWORD *)(v37 + 536);
  LODWORD(STACK[0xAA8]) = v43;
  LODWORD(STACK[0xAAC]) = v44;
  *(_QWORD *)(v37 + 2352) = *(_QWORD *)(v37 + 528);
  *(_QWORD *)(v37 + 2360) = *(_QWORD *)(v37 + 520);
  *(_QWORD *)(v37 + 2368) = *(_QWORD *)(v37 + 200);
  *(_QWORD *)(v37 + 1976) = 0;
  LODWORD(STACK[0xACC]) = v45;
  *(_QWORD *)(v37 + 2384) = *(_QWORD *)(v37 + 504);
  LODWORD(STACK[0xADC]) = STACK[0x3A4];
  LODWORD(STACK[0xB5C]) = v42;
  return (*(uint64_t (**)(uint64_t))(v37 + 608))(v39);
}

_DWORD *sub_1A277E7F4()
{
  _DWORD *result;
  _DWORD *v1;
  int v2;

  result = v1;
  *v1 = v2;
  return result;
}

uint64_t sub_1A277E7FC()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v4 = v0[37];
  v0[373] = v0[38];
  v0[374] = v4;
  v0[375] = v0[34];
  v0[376] = v0[31];
  v5 = v0[29];
  v0[378] = v0[30];
  LODWORD(STACK[0xEDC]) = STACK[0x384];
  v0[392] = v0[25];
  v0[380] = v5;
  v0[381] = v0[21];
  LODWORD(STACK[0xEE0]) = STACK[0x3A4];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((LOBYTE(STACK[0x587]) * (v2 ^ 0x29C9A3)) ^ (v3 + v2 - 2278))) - 8))();
}

uint64_t sub_1A277E87C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;

  v50 = (a9 + 411);
  v51 = (v50 ^ 0xFFFFFFFFFFFFFE4ELL) + *(_QWORD *)(v49 + 8 * a9);
  v48[159] = v48[37];
  v48[160] = v48[34];
  v48[440] = v51;
  v48[441] = v48[25];
  v48[161] = v48[29];
  v48[162] = v48[21];
  LODWORD(STACK[0x3AC]) = 1;
  v52 = v48[161];
  v48[44] = v48[162];
  v48[45] = v52;
  v48[28] = v48[441];
  v53 = v48[440];
  v54 = v48[160];
  v48[46] = v54;
  v55 = v48[159];
  v48[51] = v55;
  v56 = v48[370];
  v48[53] = v56;
  v48[55] = v53;
  v48[174] = v56;
  v57 = *(_DWORD *)(v56 + 12);
  v56 += 12;
  v48[59] = v56;
  LODWORD(STACK[0x3CC]) = v57;
  v48[170] = v56;
  v48[171] = v55;
  v48[172] = v54;
  v48[173] = v53;
  v48[443] = v48[28];
  v58 = v48[44];
  v48[175] = v48[45];
  v48[176] = v58;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * (int)(((v57 < (v50 ^ 0xFFFFFE4D)) * ((v50 - 889691971) & 0x35079DFE ^ 0x20)) ^ v50)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_1A277EA78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  _QWORD *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _BOOL4 v53;
  _BOOL4 v54;
  uint64_t v55;

  v50 = v47[53];
  v51 = (LODWORD(STACK[0x3CC]) ^ 0x52E7CFDEC5A3D7ECLL)
      - 0x52E7CFDE462B0EA5
      + ((2 * LODWORD(STACK[0x3CC])) & 0x18B47AFD8);
  v52 = ((v49 + a9 - 113) ^ *(_DWORD *)(v50 + 8) ^ 0xE3AEF7BEFFE6531ELL)
      + ((2 * *(unsigned int *)(v50 + 8)) & 0x1FF9F3376)
      + 0x1C5108417FA92F88;
  v53 = v51 < 0x7F78C943;
  v54 = v51 > v52;
  if (v53 != v52 < 0x7F78C943)
    v54 = v53;
  v47[163] = v47[59];
  v47[164] = v47[51];
  v47[165] = v47[46];
  v47[166] = v47[55];
  v47[167] = v50;
  v47[442] = v47[28];
  v55 = v47[44];
  v47[168] = v47[45];
  v47[169] = v55;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 + 8 * ((1358 * v54) ^ a9)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1A277EB90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v64;

  v57 = *(_QWORD *)(v56 + 8 * a9);
  v58 = a9 ^ 0x341;
  v55[177] = v55[59];
  v55[178] = v55[51];
  v55[179] = v55[46];
  v55[180] = v55[55];
  v55[181] = v55[53];
  v64 = STACK[0x3AC];
  v55[444] = v55[28];
  v59 = v55[44];
  v55[182] = v55[45];
  v55[183] = v59;
  v55[445] = (v58 ^ 0xFFFFFFFFFFFFFCCBLL) + v57;
  v55[184] = v55[53];
  v55[70] = v55[184];
  v60 = v55[445];
  v55[71] = v55[183];
  v55[72] = v55[182];
  v55[49] = v55[444];
  LODWORD(STACK[0x3EC]) = v64;
  v55[74] = v55[181];
  v55[75] = v55[180];
  v55[76] = v55[179];
  v55[78] = v55[178];
  v55[79] = v55[177];
  v55[80] = v60;
  v61 = v55[70];
  v62 = *(unsigned int *)(v61 + 8);
  v55[82] = v61 + 8;
  v55[89] = ((((_DWORD)v58 - 691) | 0x144u) ^ 0xCA00406042900436) + v62 + 0x35FFBF9FBD6FFA12;
  v55[447] = v62;
  return sub_1A2780350(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_1A277EC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55)
{
  int v55;
  _QWORD *v56;
  uint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v60 = v56[168];
  v56[60] = v56[169];
  v56[61] = v60;
  v56[47] = v56[442];
  LODWORD(STACK[0x3E8]) = a54;
  v61 = v56[167];
  v62 = v56[166];
  v56[62] = v61;
  v56[63] = v62;
  v63 = v56[165];
  v56[65] = v63;
  v64 = v56[164];
  v56[66] = v64;
  v65 = v56[163];
  v56[67] = v65;
  v56[170] = v65;
  v56[171] = v64;
  v56[172] = v63;
  v56[173] = v62;
  v56[174] = v61;
  v56[443] = v56[47];
  v66 = v56[60];
  v56[175] = v56[61];
  v56[176] = v66;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 8 * ((1321 * (a55 == v58 + ((v55 + 803929882) & 0xCFEB37F6) - 438)) ^ (v59 + v55 - 1867))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1A277ECB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t v48;
  int v49;
  char v50;
  char v51;
  _DWORD *v52;
  int v53;
  unsigned int v54;
  uint64_t v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v51 = a9 ^ (v50 + 111);
  v52 = *(_DWORD **)(v48 + 536);
  v53 = STACK[0x3E8];
  v54 = LODWORD(STACK[0x3E8]) - ((2 * LODWORD(STACK[0x3E8])) & 0xBFE4C9AE) - 537762601;
  v55 = **(_QWORD **)(v48 + 496);
  v56 = ((2 * *v52) & 0xFCE67FE6) + (*v52 ^ 0x7E733FF3) - 2121482227;
  *(_BYTE *)(v55 + v56) = (v51 + 58) ^ HIBYTE(v54);
  *(_BYTE *)(v55 + v56 + 1) = BYTE2(v54) ^ 0xF2;
  *(_BYTE *)(v55 + v56 + 2) = ((BYTE1(v54) ^ 0x64) - ((2 * (BYTE1(v54) ^ 0x64)) & 0x96) + 75) ^ 0x4B;
  *(_BYTE *)(v55 + v56 + 3) = v54 ^ 0xD7;
  *v52 += 4;
  *(_QWORD *)(v48 + 1360) = v52;
  *(_QWORD *)(v48 + 1368) = *(_QWORD *)(v48 + 528);
  *(_QWORD *)(v48 + 1376) = *(_QWORD *)(v48 + 520);
  v57 = *(_QWORD *)(v48 + 496);
  *(_QWORD *)(v48 + 1384) = *(_QWORD *)(v48 + 504);
  *(_QWORD *)(v48 + 1392) = v57;
  *(_QWORD *)(v48 + 3544) = *(_QWORD *)(v48 + 376);
  v58 = *(_QWORD *)(v48 + 480);
  *(_QWORD *)(v48 + 1400) = *(_QWORD *)(v48 + 488);
  *(_QWORD *)(v48 + 1408) = v58;
  v59 = *(_QWORD *)(v48 + 1408);
  v60 = *(_QWORD *)(v48 + 1400);
  v61 = *(_QWORD *)(v48 + 3544);
  v62 = v53;
  v63 = *(_QWORD *)(v48 + 1392);
  v64 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 1384);
  v65 = *(_QWORD *)(v48 + 1376);
  v66 = *(_QWORD *)(v48 + 1368);
  v67 = *(_QWORD *)(v48 + 1360);
  *(_QWORD *)(v48 + 2984) = v67;
  *(_QWORD *)(v48 + 2992) = v66;
  *(_QWORD *)(v48 + 3000) = v65;
  *(_QWORD *)(v48 + 3008) = v64;
  *(_QWORD *)(v48 + 3024) = v63;
  LODWORD(STACK[0xEDC]) = v62;
  *(_QWORD *)(v48 + 3136) = v61;
  *(_QWORD *)(v48 + 3040) = v60;
  *(_QWORD *)(v48 + 3048) = v59;
  LODWORD(STACK[0xEE0]) = v49;
  *(_QWORD *)(v48 + 3056) = v67;
  *(_QWORD *)(v48 + 3064) = v66;
  *(_QWORD *)(v48 + 3072) = v65;
  *(_QWORD *)(v48 + 3096) = v64;
  *(_QWORD *)(v48 + 3120) = v63;
  LODWORD(STACK[0xEE4]) = v62;
  *(_QWORD *)(v48 + 3232) = v61;
  *(_QWORD *)(v48 + 3128) = v60;
  *(_QWORD *)(v48 + 3152) = v59;
  LODWORD(STACK[0xF04]) = v49;
  *(_QWORD *)(v48 + 3168) = v67;
  *(_QWORD *)(v48 + 3184) = v65;
  *(_QWORD *)(v48 + 3192) = v64;
  *(_QWORD *)(v48 + 3200) = v63;
  LODWORD(STACK[0xF10]) = v62;
  *(_QWORD *)(v48 + 3208) = v59;
  LODWORD(STACK[0xF14]) = v49;
  return v64(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_1A277EE50()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = STACK[0xF04];
  v7 = v0[394];
  v0[140] = v7;
  v0[115] = v0[391];
  v0[142] = v0[404];
  v8 = STACK[0xEE4];
  v9 = v0[390];
  v10 = v0[387];
  v11 = v0[384];
  v0[116] = v11;
  v0[118] = v0[383];
  v0[396] = v0[382];
  v0[398] = v11;
  v0[399] = v10;
  v0[400] = v9;
  LODWORD(STACK[0xF10]) = v8;
  v0[401] = v7;
  LODWORD(STACK[0xF14]) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((103 * (v6 == v3)) ^ (v4 + v2 - 843)))
                            - ((v2 - v5 + 40) ^ 0x21)))();
}

void sub_1A277EEE0(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 8 * a1);
  v1[159] = v1[118];
  v1[160] = v1[116];
  v1[440] = v3;
  v1[441] = v1[142];
  v1[161] = v1[115];
  JUMPOUT(0x1A277E8B8);
}

uint64_t sub_1A277EF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  _QWORD *v35;
  uint64_t v36;
  int v37;
  int v38;
  int v39;
  int v40;

  v40 = STACK[0xF14];
  v35[120] = v35[401];
  LODWORD(STACK[0x28C]) = STACK[0xF10];
  v35[121] = v35[400];
  v35[122] = v35[399];
  v35[124] = v35[398];
  v35[103] = v35[396];
  v35[433] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 + 8 * ((906 * (v40 == v38)) ^ (v39 + v37 - 2037))) - ((v39 + v37 - 2037) ^ 0x100)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_1A277EF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v35;
  _QWORD *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  unsigned int v40;
  unint64_t v41;

  v39 = v36[370];
  v36[104] = v39;
  v40 = *(_DWORD *)(v39 + 12);
  v36[105] = v39 + 12;
  v41 = ((v38 + v35 - 267) ^ v40 ^ 0xDFDFF1EEDEC7F052) + v36[451] + ((2 * v40) & 0x1BDDC75EELL);
  v36[143] = v41;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 + 8 * ((2333 * (v41 + 0x4930EA6B2558FE51 < 0xFFFFFFFB)) ^ v35)) - (v35 ^ 0x1E4u) + 220))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_1A277F038@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  _BOOL4 v8;

  v5 = v1[104];
  v6 = ((a1 - v4 + 2073) ^ *(_DWORD *)(v5 + 8) ^ 0xFFCFB9F7FDF02452)
     + ((2 * *(unsigned int *)(v5 + 8)) & 0x1FBB3DDEELL)
     + 0x3046086F681ABELL;
  v8 = v6 > 0x6D4209B4 && v1[143] + 0x4930EA6B929B080ALL > v6;
  v1[402] = v1[103];
  v1[405] = v5;
  v1[408] = v1[122];
  v1[409] = v1[121];
  LODWORD(STACK[0xF24]) = STACK[0x28C];
  v1[410] = v1[450];
  v1[412] = v1[105];
  LODWORD(STACK[0xF34]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1526 * v8) ^ a1)) - 8))();
}

uint64_t sub_1A277F104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v65;

  v57 = *(_QWORD *)(v56 + 8 * a9);
  v58 = (a9 + 587);
  v55[177] = v55[103];
  v55[178] = v55[104];
  v55[179] = v55[124];
  v55[180] = v55[122];
  v55[181] = v55[121];
  v65 = STACK[0x28C];
  v55[444] = v55[450];
  v55[182] = v55[105];
  v55[183] = v55[120];
  v55[445] = v57 + v58 - 827;
  v55[184] = v55[104];
  v59 = ((_DWORD)v58 - 691) | 0x144u;
  v60 = LODWORD(STACK[0x288]);
  v55[70] = v55[184];
  v61 = v55[445];
  v55[71] = v55[183];
  v55[72] = v55[182];
  v55[49] = v55[444];
  LODWORD(STACK[0x3EC]) = v65;
  v55[74] = v55[181];
  v55[75] = v55[180];
  v55[76] = v55[179];
  v55[78] = v55[178];
  v55[79] = v55[177];
  v55[80] = v61;
  v62 = v55[70];
  v63 = *(unsigned int *)(v62 + 8);
  v55[82] = v62 + 8;
  v55[89] = (v59 ^ 0xCA00406042900436) + (v60 ^ 0x35FFBF9FBD6FFA0ELL) + ((2 * v60) & 0x17ADFF41CLL) + v63;
  v55[447] = v63;
  return sub_1A2780350(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_1A277F170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v35;
  _QWORD *v36;
  uint64_t v37;
  int v38;
  int v39;
  int v40;
  int v41;

  v41 = STACK[0xF34];
  v36[106] = v36[412];
  v36[144] = v36[410];
  LODWORD(STACK[0x29C]) = STACK[0xF24];
  v36[107] = v36[409];
  v36[108] = v36[408];
  v36[109] = v36[405];
  v36[110] = v36[402];
  v36[433] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 + 8 * ((2312 * (v41 == v38 + (v35 ^ (v40 - 471)) - 616)) ^ (v39 + v35 - 2037))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_1A277F1EC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t a28)
{
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  _DWORD *v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v31 = (uint64_t *)v28[109];
  v32 = *v31;
  v33 = (_DWORD *)v28[106];
  v34 = ((257 * (a1 ^ 0x26E) - 1067876) & (2 * *v33)) + (*v33 ^ 0x7FF7DD51) - 2146950481;
  *(_BYTE *)(*v31 + v34) = *(_BYTE *)(v30 - 148);
  *(_BYTE *)(v32 + v34 + 1) = *(_BYTE *)(v30 - 147);
  *(_BYTE *)(v32 + v34 + 2) = *(_BYTE *)(v30 - 146);
  *(_BYTE *)(v32 + v34 + 3) = *(_BYTE *)(v30 - 145);
  v35 = *v33 + ((23 * (a1 ^ 0x24E)) ^ 0x36Eu);
  *v33 = v35;
  v36 = *v31;
  v28[111] = *v31;
  v37 = ((2 * v35) & 0x1FE7FB996) + (v35 ^ 0x27EEAEDFFF3FDCCBLL);
  v28[145] = v37;
  v38 = v28[144];
  v39 = (v38 ^ 0x97EDEA35FF1FB63ALL) & (2 * (v38 & 0xA7CDCC35FC1F3882)) ^ v38 & 0xA7CDCC35FC1F3882;
  v40 = ((2 * (v38 ^ 0xDFEEF25EB70FC63ALL)) ^ 0xF0467CD69621FD70) & (v38 ^ 0xDFEEF25EB70FC63ALL) ^ (2 * (v38 ^ 0xDFEEF25EB70FC63ALL)) & 0x78233E6B4B10FEB8;
  v41 = v40 ^ 0x821022949100288;
  v42 = (v40 ^ 0x300230420000E410) & (4 * v39) ^ v39;
  v43 = ((4 * v41) ^ 0xE08CF9AD2C43FAE0) & v41 ^ (4 * v41) & 0x78233E6B4B10FEB8;
  v44 = (v43 ^ 0x600038290800FAA0) & (16 * v42) ^ v42;
  v45 = ((16 * (v43 ^ 0x1823064243100418)) ^ 0x8233E6B4B10FEB80) & (v43 ^ 0x1823064243100418) ^ (16 * (v43 ^ 0x1823064243100418)) & 0x78233E6B4B10FEB0;
  v28[147] = v38 ^ (2
                  * (((((v45 ^ 0x7800184B4A101438) << 8) ^ 0x233E6B4B10FEB800) & (v45 ^ 0x7800184B4A101438) ^ ((v45 ^ 0x7800184B4A101438) << 8) & 0x78233E6B4B10FE00) & 0xA004A1000000000 ^ (v45 ^ 0x2326200100EA00) & (v44 << 8) ^ v44 ^ ((((v45 ^ 0x7800184B4A101438) << 8) ^ 0x233E6B4B10FEB800) & (v45 ^ 0x7800184B4A101438) ^ ((v45 ^ 0x7800184B4A101438) << 8) & 0x78233E6B4B10FE00 ^ 0x20222A4B00100000) & (((v45 ^ 0x2326200100EA00) & (v44 << 8) ^ v44) << 16))) ^ 0x604614869621FD70;
  return ((uint64_t (*)(void))(*(_QWORD *)(v29 + 8 * ((31 * (v37 + v36 - 0x27EEAEDFFF3FDCCBLL < a28)) ^ a1)) - 8))();
}

uint64_t sub_1A277F4BC()
{
  int v0;
  int v1;
  uint64_t v2;
  char v3;

  LODWORD(STACK[0x2A0]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v1 == 0) ^ (v0 ^ (v3 + 43))) & 1)
                                          * (((v0 - 854) | 0x4E0) + 376)) ^ v0))
                            - 8))();
}

uint64_t sub_1A277F4FC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_BYTE *a28)
{
  _QWORD *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;

  v31 = v28[145] + 0x59155AC294EC2736;
  v28[126] = v31;
  v32 = LODWORD(STACK[0x2A0]);
  v28[127] = v32;
  v28[414] = 0;
  *(_BYTE *)(v28[111] + v31 + 0x7EFBF65D6BD3FBFFLL) = *a28;
  return ((uint64_t (*)(void))(*(_QWORD *)(v29 + 8 * (((v32 == 1) * (a1 ^ (v30 + 941) ^ (v30 + 181))) ^ a1)) - 4))();
}

void sub_1A277F5AC()
{
  JUMPOUT(0x1A277F560);
}

uint64_t sub_1A277F5B4()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  LODWORD(STACK[0x2A4]) = v1;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 != 0) * (((v0 + 2671135) | 0x10280) ^ (v3 + 78))) ^ v0)))();
}

uint64_t sub_1A277F5EC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = v28[145] + 0x5CF9D24100E07385;
  v28[114] = v30;
  v31 = LODWORD(STACK[0x2A4]);
  v28[422] = v31--;
  v32 = ((2 * v31) & 0x1FFBF5F60) + (v31 ^ 0x7B177EDEFFDFAFB0);
  *(_BYTE *)(v28[111] + v32 + v30) = *(_BYTE *)(a28 + v32 - 0x7B177EDEFFDFAFB0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v29
                                        + 8
                                        * (int)(((v31 == 0)
                                               * (((((a1 + 387157518) & 0xE8C3AFFE) - 1040587405) & 0x3E2FDEFF) - 2734836)) ^ (a1 + 387157518) & 0xE8C3AFFE))
                            - 8))();
}

uint64_t sub_1A277F6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  unsigned int v43;

  *(_QWORD *)(v39 + 3312) = v37;
  **(_DWORD **)(v39 + 848) += LODWORD(STACK[0x258]);
  v42 = *(_QWORD *)(v39 + 2960);
  *(_QWORD *)(v39 + 896) = v42;
  v43 = *(_DWORD *)(v42 + 12);
  *(_QWORD *)(v39 + 904) = v42 + 12;
  LODWORD(v42) = (v43 ^ 0xF2E4EEDFFFFE9FFLL) + *(_QWORD *)(v39 + 3616) + ((2 * v43) & 0x1FFFFD3FEuLL) < 0xFFFFFFFB;
  *(_QWORD *)(v39 + 3464) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 + 8 * (int)((1495 * v42) ^ (v41 + v38 - 2037))) - ((v41 + v38 - 2304) | 0xAAu) + 159))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1A277F770@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  _QWORD *v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  _BOOL4 v45;

  v42 = v38[112];
  v43 = ((a1 - v41 + 2134) ^ *(_DWORD *)(v42 + 8) ^ 0xF7ADFDFE9BD61598)
      + ((2 * *(unsigned int *)(v42 + 8)) & 0x137FFBE7ALL)
      + 0x85202023FA2FD5BLL;
  v45 = v43 > 0xDBA2DC97 && a38 + 3684883612 > v43;
  v38[415] = v38[110];
  v38[417] = v38[109];
  v38[419] = v42;
  v38[420] = v38[108];
  v38[421] = v38[107];
  LODWORD(STACK[0x588]) = STACK[0x29C];
  v38[425] = v38[144];
  v38[423] = v38[106];
  v38[426] = v38[113];
  LODWORD(STACK[0x58C]) = v40;
  return ((uint64_t (*)(void))(*(_QWORD *)(v39 + 8 * ((2547 * v45) ^ a1)) - 8))();
}

uint64_t sub_1A277F840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v65;

  v57 = *(_QWORD *)(v56 + 8 * a9);
  v58 = ((_DWORD)a9 + 647) | 1u;
  v55[177] = v55[110];
  v55[178] = v55[109];
  v55[179] = v55[112];
  v55[180] = v55[108];
  v55[181] = v55[107];
  v65 = STACK[0x29C];
  v55[444] = v55[144];
  v55[182] = v55[106];
  v55[183] = v55[113];
  v55[445] = (v58 ^ 0xFFFFFFFFFFFFFCCBLL) + v57;
  v55[184] = v55[112];
  v59 = ((_DWORD)v58 - 691) | 0x144u;
  v60 = LODWORD(STACK[0x284]);
  v55[70] = v55[184];
  v61 = v55[445];
  v55[71] = v55[183];
  v55[72] = v55[182];
  v55[49] = v55[444];
  LODWORD(STACK[0x3EC]) = v65;
  v55[74] = v55[181];
  v55[75] = v55[180];
  v55[76] = v55[179];
  v55[78] = v55[178];
  v55[79] = v55[177];
  v55[80] = v61;
  v62 = v55[70];
  v63 = *(unsigned int *)(v62 + 8);
  v55[82] = v62 + 8;
  v55[89] = (v59 ^ 0xCA00406042900436) + (v60 ^ 0x35FFBF9FBD6FFA0ELL) + ((2 * v60) & 0x17ADFF41CLL) + v63;
  v55[447] = v63;
  return sub_1A2780350(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_1A277F8B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v45;
  _QWORD *v46;
  uint64_t v47;
  int v48;
  int v49;
  int v50;
  int v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v51 = STACK[0x58C];
  v53 = v46[426];
  v54 = v46[423];
  LODWORD(STACK[0x2CC]) = STACK[0x588];
  v55 = v46[421];
  *v46 = v46[415];
  v46[433] = 0;
  LODWORD(a44) = v51;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 + 8 * (((v51 == v48) * ((v45 ^ (v50 + 1028)) + 1103)) ^ (v49 + v45 - 2037))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           v53,
           a41,
           v54,
           v55,
           a44,
           a45);
}

uint64_t sub_1A277F938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int *a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t *a50)
{
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  int v55;

  v53 = *a50;
  v54 = ((2 * *a40) & 0xFD67AFEE) + (*a40 ^ 0xFEB3D7F7);
  *(_BYTE *)(*a50 + v54 + 21768201) = *(_BYTE *)(v52 - 204);
  *(_BYTE *)(v53 + ((v50 + 2737816) ^ 0x165EE2A) + v50 - 146 + v54) = *(_BYTE *)(v52 - 203);
  *(_BYTE *)(v53 + v54 + 21768203) = *(_BYTE *)(v52 - 202);
  *(_BYTE *)(v53 + v54 + 21768204) = *(_BYTE *)(v52 - 201);
  v55 = *a40 + 4;
  LODWORD(STACK[0x2DC]) = v55;
  *a40 = v55;
  return ((uint64_t (*)(void))(*(_QWORD *)(v51 + 8 * ((21 * LOBYTE(STACK[0x586])) ^ v50)) - 8))();
}

uint64_t sub_1A277F9F4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void (*a19)(uint64_t), void (*a20)(uint64_t),uint64_t (*a21)(uint64_t),uint64_t a22,uint64_t a23,int *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  _QWORD *v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t *v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;

  v34 = (a1 ^ (v33 + 211)) + 658;
  v35 = (uint64_t *)v31[370];
  v31[1] = v35;
  v36 = a1 - 2736548;
  v37 = a1 - 2738351;
  v31[371] = 0;
  LODWORD(STACK[0xE94]) = 0;
  a20(a23);
  v38 = *a24;
  v39 = *v35;
  v40 = *((_DWORD *)v35 + 3);
  v31[2] = (char *)v35 + 12;
  v41 = v31[132];
  v42 = v31[134];
  v43 = 932829133 * (((v32 - 136) & 0x84E614CE | ~((v32 - 136) | 0x84E614CE)) ^ 0xDB52B6BC);
  *(_DWORD *)(v32 - 116) = 1017140188 - v43 + v38 * (v34 ^ 0x6AE38FAF);
  v31[458] = v42;
  v31[455] = v39;
  v31[459] = v41;
  *(_DWORD *)(v32 - 120) = (v36 - 856) ^ v43;
  *(_DWORD *)(v32 - 128) = -532470131 - v43 + v40 - ((2 * v40) & 0xC0864D1A);
  a19(v32 - 136);
  LODWORD(v35) = *(_DWORD *)(v32 - 124);
  v44 = a21(a23);
  LODWORD(STACK[0x528]) = (_DWORD)v35;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a31
                                                      + 8
                                                      * ((((_DWORD)v35 == 1934675644) | (8 * ((_DWORD)v35 == 1934675644))) ^ v37))
                                          - 12))(v44);
}

uint64_t sub_1A277FC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int *a21,uint64_t a22,void (*a23)(uint64_t),uint64_t (*a24)(_QWORD, uint64_t, uint64_t),uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  unsigned int v41;
  unint64_t v42;
  uint64_t v43;

  v38 = *(_QWORD *)(v34 + 8 * v31);
  v39 = 2106769199 * ((-2 - ((~v32 | 0x95E31ACB56F89A11) + (v32 | 0x6A1CE534A90765EELL))) ^ 0xD5F2A2A53904B124);
  *(_QWORD *)(v33 + 3656) = v35;
  *(_QWORD *)(v33 + 3640) = v39 + v38 - 8;
  *(_DWORD *)(v37 - 128) = v31 - 822706943 - v39;
  a23(v37 - 136);
  v40 = a24(*a21, a22, a31);
  v41 = ((2 * ((v31 + 1379519971) & 0xADEFFAEF ^ (v36 - 70)) - 572523024) & (2 * v40)) + (v40 ^ 0xEEEFFFF3);
  v42 = 2106769199 * ((2 * (v32 & 0x1E553AD9711A8E20) - v32 - 0x1E553AD9711A8E24) ^ 0xA1BB7D48E1195AE9);
  *(_QWORD *)(v33 + 3640) = v42 + *(_QWORD *)(v34 + 8 * (v31 ^ 0x43)) - 8;
  *(_DWORD *)(v37 - 128) = v31 - 822706943 - v42;
  *(_QWORD *)(v33 + 3656) = v35;
  v43 = ((uint64_t (*)(uint64_t))a23)(v37 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v34 + 8 * ((83 * (v41 != -286261261)) ^ (v31 + 613))) - 12))(v43);
}

uint64_t sub_1A277FE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void (*a26)(uint64_t),void (*a27)(uint64_t),uint64_t (*a28)(uint64_t),uint64_t a29,uint64_t a30,_DWORD *a31)
{
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;

  a27(a30);
  v36 = **(_QWORD **)(v31 + 8);
  v37 = **(_DWORD **)(v31 + 16);
  v38 = *(_QWORD *)(v31 + 1056);
  v39 = *(_QWORD *)(v31 + 1072);
  v40 = 932829133 * ((2 * ((v35 - 136) & 0x6F0BA138) - (v35 - 136) - 1863033152) ^ 0x30BF034D);
  *(_DWORD *)(v35 - 116) = (v33 ^ 0x3CA0522A) - v40 + 1793297355 * *a31;
  *(_QWORD *)(v31 + 3672) = v38;
  *(_QWORD *)(v31 + 3664) = v39;
  *(_QWORD *)(v31 + 3640) = v36;
  *(_DWORD *)(v35 - 128) = -532470131 - v40 + v37 - ((2 * v37) & 0xC0864D1A);
  *(_DWORD *)(v35 - 120) = (v33 + 947) ^ v40;
  a26(v35 - 136);
  v41 = *(_DWORD *)(v35 - 124);
  v42 = a28(a30);
  LODWORD(STACK[0x528]) = v41;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v32
                                                      + 8
                                                      * (int)((3404
                                                             * (LODWORD(STACK[0x528]) == (((v33 ^ 0x592) - v34 + 1181) ^ 0x6379041C))) ^ v33 ^ 0x592))
                                          - (v33 ^ 0x1FALL)))(v42);
}

void sub_1A277FF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  _QWORD *v53;

  v53[372] = 0;
  v53[150] = *v53;
  v53[151] = a53;
  v53[152] = a50;
  v53[153] = a48;
  v53[154] = a43;
  v53[437] = a46;
  v53[155] = a42;
  v53[156] = a40;
  JUMPOUT(0x1A277FFF8);
}

uint64_t sub_1A27800A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(uint64_t, uint64_t))
{
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v36 = *(_QWORD **)(v34 + 320);
  *v36 = 0;
  v36[1] = 0;
  *(_QWORD *)(v34 + 336) = v36 + 1;
  v37 = a33(4096, 2241923698);
  **(_QWORD **)(v34 + 320) = v37;
  return ((uint64_t (*)(void))(*(_QWORD *)(v35 + 8 * ((71 * (v37 != 0)) ^ v33)) - (v33 ^ 0xDEu) + 1113))();
}

uint64_t sub_1A2780100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;

  **(_DWORD **)(v44 + 336) = v43;
  *(_QWORD *)(v44 + 1264) = *(_QWORD *)(v44 + 320);
  *(_BYTE *)(v46 - 150) = 1;
  LODWORD(STACK[0x3A4]) = v45;
  LOBYTE(STACK[0x587]) = *(_BYTE *)(v46 - 150);
  **(_QWORD **)(v44 + 160) = *(_QWORD *)(v44 + 1264);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 312))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_1A278015C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;

  *(_QWORD *)(v0 + 3432) = 0;
  LODWORD(STACK[0x558]) = STACK[0x3A4];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * (LOBYTE(STACK[0x587]) | (LOBYTE(STACK[0x587]) << 10) | (v3 + v2 - 2291)))
                            - (v2 - 2737539)
                            + 1306))();
}

uint64_t sub_1A27801A0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  _BOOL4 v6;

  v4 = STACK[0xE94];
  LODWORD(STACK[0x304]) = STACK[0xE94];
  v5 = *(_QWORD *)(v1 + 2976);
  *(_QWORD *)(v1 + 32) = v5;
  v6 = v4 <= *(_DWORD *)(v5 + 8);
  LODWORD(STACK[0x52C]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v6 * (((a1 - 1116) | 0x11) - 88)) ^ a1))
                            - ((a1 - 1326463603) & 0x4F39FFF5 ^ 0x29CAADLL)))();
}

void sub_1A2780210()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[37];
  v1[177] = v1[38];
  v1[178] = v3;
  v1[179] = v1[34];
  v1[180] = v1[31];
  v4 = v1[29];
  v1[181] = v1[30];
  v1[444] = v1[25];
  v5 = *(_QWORD *)(v2 + 8 * v0);
  v1[182] = v4;
  v1[183] = v1[21];
  v1[445] = v5;
  v1[184] = v1[4];
  JUMPOUT(0x1A278027CLL);
}

uint64_t sub_1A2780350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;

  v59 = *(_QWORD *)(v56 + 3576);
  *(_QWORD *)(v56 + 728) = v59;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 + 8 * ((2068 * ((v59 & 0xFFFFFFFF80000000) != 0)) ^ v55)) - (v58 + ((v55 - 1926375109) & 0x72FBEFA5u) - 1034) + 1267))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_1A27803A8()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  char v4;
  char v5;
  int v6;
  int v7;

  v5 = v0 ^ (v4 + 46);
  v6 = v3 + v0 - 420;
  v7 = STACK[0x52C];
  LODWORD(STACK[0x314]) = STACK[0x52C];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((63 * (((v7 == v2) ^ (v5 - 104)) & 1)) ^ v6))
                            - 8))();
}

uint64_t sub_1A27803EC@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v6;

  v4 = v1[372];
  v5 = *(_QWORD *)(v2 + 8 * (a1 - 1129)) - 8;
  v6 = v4 == 0;
  v1[189] = v5;
  v1[190] = v4;
  LODWORD(v4) = STACK[0x314];
  LODWORD(STACK[0x20C]) = STACK[0x314];
  v1[191] = 0;
  v1[130] = v5;
  LODWORD(STACK[0x250]) = v4;
  v1[131] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((v3 + ((89 * ((a1 - 1129) ^ 9) + 1139398984) & 0xBC3FEEED) - 1830) * v6) ^ (a1 - 551)))
                            - 12))();
}

uint64_t sub_1A278046C@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t *v4;
  uint64_t v5;

  v1[94] = v1[191];
  LODWORD(STACK[0x498]) = STACK[0x234];
  LODWORD(STACK[0x49C]) = STACK[0x20C];
  v4 = (uint64_t *)v1[190];
  v1[100] = v4;
  v1[101] = v1[189];
  v5 = *v4;
  v1[102] = v5;
  return ((uint64_t (*)(void))(2738849
                            - (v3 + a1 - 622)
                            + *(_QWORD *)(v2 + 8 * (((v5 != 0) * (a1 - 379)) ^ a1))
                            - 8))();
}

uint64_t sub_1A2781164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t (*a37)(void))
{
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t (*v42)(uint64_t);

  ((void (*)(_QWORD))a37)(v37[102]);
  v38 = (_QWORD *)v37[100];
  *v38 = 0;
  v38[1] = 0;
  v39 = a37();
  v37[130] = v37[101];
  LODWORD(STACK[0x250]) = STACK[0x49C];
  LODWORD(STACK[0x254]) = STACK[0x498];
  v37[131] = v37[94];
  v40 = v37[131];
  v41 = STACK[0x250];
  v42 = (uint64_t (*)(uint64_t))v37[130];
  v37[429] = 0;
  LODWORD(STACK[0x53C]) = v41;
  LODWORD(STACK[0x558]) = v41;
  v37[149] = v40;
  return v42(v39);
}

uint64_t sub_1A2781228(uint64_t a1)
{
  unint64_t v1;
  int v2;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[14];
  _DWORD v7[2];
  _QWORD *v8;
  uint64_t v9;
  uint64_t vars0;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = 611055659 * ((a1 - 2 * (a1 & 0x45FC05F41595779ALL) + 0x45FC05F41595779ALL) ^ 0xA7763D1D131B1A25);
  v2 = *(_DWORD *)(a1 + 24) ^ v1;
  v4 = 0x1D6BB43DE973DB89 * (*(_QWORD *)(a1 + 16) + v1) + 0x6C3B8EF33FB6E3F7;
  v6[0] = *((_QWORD *)off_1E47CDD30[v2 & 0x21112B] + v2 + 964254563) - 8;
  v6[12] = v4;
  v8 = v6;
  v7[1] = (v2 + 966992962) ^ (2106769199
                            * ((((&vars0 - 40) | 0x2CAC5BFC)
                              - (&vars0
                               - 40)
                              + ((&vars0 - 40) & 0xD353A400)) ^ 0x435070C9));
  result = ((uint64_t (*)(_DWORD *))off_1E47CDD30[v2 ^ 0xC686A67C])(v7);
  *(_DWORD *)a1 = v7[0] - 1718253555;
  return result;
}

void sub_1A27813A0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A278141C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unsigned int v6;

  v5 = *((_QWORD *)off_1E47CDD30[a1 + 1030968048] + a1 + 1030968462) - 8;
  v6 = (v1 ^ 0xFBFFAEFF) + 1989931335 + ((2 * v1) & 0xF7FF5DFE);
  *(_DWORD *)(v3 - 36) = (a1 + 1033706866) ^ (2106769199
                                            * ((-1532970405 - ((v3 - 40) | 0xA4A0BA5B) + ((v3 - 40) | 0x5B5F45A4)) ^ 0x34A36E91));
  *(_QWORD *)(v3 - 32) = &v5;
  result = ((uint64_t (*)(uint64_t))off_1E47CDD30[a1 ^ 0xC28CAD2C])(v3 - 40);
  *(_DWORD *)(v2 + 20) = *(_DWORD *)(v3 - 40) - 1718253555;
  return result;
}

void sub_1A2781544(uint64_t a1)
{
  __asm { BR              X8 }
}

void sub_1A27815C8()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 32) = -42789;
}

void sub_1A2781738(uint64_t a1)
{
  __asm { BR              X13 }
}

uint64_t sub_1A27817D0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[3];
  unsigned int v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;

  v7 = *((_QWORD *)v5 + 5);
  v8 = *((_QWORD *)v5 + 6);
  v9 = *v5;
  v10 = *((_QWORD *)v5 + 8);
  v11 = *((_QWORD *)v5 + 4);
  v13[0] = *((_QWORD *)off_1E47CDD30[v1 ^ 0x54022AEE] + v1 - 1409427697) - 8;
  v13[1] = v7;
  v14 = (v4 ^ 0xBB7FEF51) + 1856536320 + ((2 * v4) & 0x76FFDEA2);
  v13[2] = v10;
  v15 = v11;
  v19 = (v3 ^ 0xFA6EEEFB) + 800685910 + ((2 * v3) & 0xF4DDDDF6);
  v20 = (v2 ^ 0x78DEFF59) - 135528704 + ((2 * v2) & 0xF1BDFEB2);
  v17 = v9;
  v18 = v8;
  v16 = 116;
  *(_QWORD *)(v6 - 32) = v13;
  *(_DWORD *)(v6 - 36) = v1 - ((((v6 - 40) | 0xB8DA722D) + (~(v6 - 40) | 0x47258DD2)) ^ 0x69184034) * a1 - 1480893301;
  result = ((uint64_t (*)(uint64_t))((char *)off_1E47CDD30[v1 ^ 0x54022AE5] - 12))(v6 - 40);
  *((_DWORD *)v5 + 14) = *(_DWORD *)(v6 - 40) - 1718253555;
  return result;
}

void sub_1A2781998(uint64_t a1)
{
  __asm { BR              X13 }
}

uint64_t sub_1A2781A5C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v11 = *v6;
  v12 = *(_QWORD *)(v7 + 8 * (v2 - 1192086947)) - 8;
  v13 = v3;
  v14 = a1;
  v15 = (v1 ^ 0xFCB7F346) + 1601896126 + ((2 * v1) & 0xF96FE68C);
  v16 = &v11;
  v17 = 4;
  v18 = 0;
  v19 = 0x5AD9B3EEF088B546;
  v20 = 0x532A2ADD6A6B882FLL;
  v21 = 0x1DCB1A4F51323291;
  v22 = 0xD2A736C40E76D58;
  *(_QWORD *)(v8 - 112) = &v12;
  *(_DWORD *)(v8 - 116) = v2
                        - 1013388011
                        * ((((v8 - 120) | 0x69344C7E) - (v8 - 120) + ((v8 - 120) & 0x96CBB380)) ^ 0xB8F67E66)
                        - 1263552549;
  result = v4(v8 - 120);
  v10 = *(_DWORD *)(v8 - 120);
  *v6 = v11;
  *(_DWORD *)(v5 + 24) = v10 - 1718253555;
  return result;
}

void sub_1A2782040(uint64_t a1)
{
  __asm { BR              X14 }
}

uint64_t sub_1A27820E8@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD v15[3];
  unsigned int v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v7 = *(_QWORD *)(v5 + 48);
  v8 = *(_QWORD *)(v5 + 104);
  v10 = *(_QWORD *)(v5 + 64);
  v9 = *(_QWORD *)(v5 + 72);
  v11 = *(_QWORD *)(v5 + 16);
  v12 = *(_QWORD *)(v5 + 32);
  v13 = *(_QWORD *)(v5 + 88);
  v15[0] = *((_QWORD *)off_1E47CDD30[a1 - 711386991] + a1 - 711386598);
  v15[1] = v4 - ((2 * v4) & 0xB458574F6496B6F2) + 0x5A2C2BA7B24B5B79;
  v15[2] = v13;
  v16 = (v2 ^ 0x7FDF734E) - 966467584 + ((2 * v2) & 0xFFBEE69C);
  v17 = 1526419896;
  v18 = v12;
  v19 = (v3 ^ 0x7E655F7E) - 941689904 + ((2 * v3) & 0xFCCABEFC);
  v20 = v11;
  v21 = (v1 ^ 0x7EEFEEAE) - 46146208 + ((2 * v1) & 0xFDDFDD5C);
  v23 = 0;
  v24 = 0;
  v22 = v9;
  v25 = 1178882894;
  v26 = v8;
  v27 = v7;
  v28 = v10;
  v29 = 55;
  *(_DWORD *)(v6 - 32) = a1
                       + 253222187 * ((((v6 - 48) | 0x6AA04500) - (v6 - 48) + ((v6 - 48) & 0x955FBAF8)) ^ 0xA0F582DC)
                       + 1490345310;
  *(_QWORD *)(v6 - 40) = v15;
  result = ((uint64_t (*)(uint64_t))off_1E47CDD30[a1 - 711387009])(v6 - 48);
  *(_DWORD *)(v5 + 8) = *(_DWORD *)(v6 - 48) - 1718253555;
  return result;
}

void sub_1A2782300(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_1A27823C8()
{
  _DWORD *v0;

  *v0 = -42789;
}

uint64_t sub_1A2782DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v27;
  int v28;
  uint64_t v29;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 + 8 * ((1647 * LOBYTE(STACK[0x3DB])) ^ (v27 - 980465338))) - (v27 - v28 - 1359)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1A2782E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;

  v64[21] = *(_QWORD *)(v65 + 8 * a9) - 4;
  HIDWORD(a64) = 1;
  LODWORD(STACK[0x3DC]) = 1;
  v66 = v64[21];
  v64[92] = a29;
  v64[93] = v66;
  v67 = *(_DWORD *)(a29 + 12);
  v64[94] = a29 + 12;
  LODWORD(STACK[0x3F8]) = v67;
  v64[27] = a29;
  v64[28] = v66;
  v64[29] = a29 + 12;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 8 * (((v67 < 0xFFFFFFFB) * ((a9 + 832) ^ (a9 + 257))) ^ (a9 + 1280))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

uint64_t sub_1A2782FAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  _QWORD *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  _BOOL4 v66;
  _BOOL4 v67;
  uint64_t v68;

  v63 = v60[92];
  v64 = (LODWORD(STACK[0x3F8]) ^ 0x5FEFAEF5ACFCF6D3)
      - 0x5FEFAEF4EBF0F776
      + ((a9 ^ (v61 + 1616) ^ 0x163895B18) & (2 * LODWORD(STACK[0x3F8])));
  v65 = (*(unsigned int *)(v63 + 8) ^ 0x6E5FB9FDEFEBEE9BLL)
      - 0x6E5FB9FD2EDFEF42
      + ((2 * *(unsigned int *)(v63 + 8)) & 0x1DFD7DD36);
  v66 = v64 < 0xC10BFF59;
  v67 = v64 > v65;
  if (v66 != v65 < 0xC10BFF59)
    v67 = v66;
  v68 = v60[93];
  v60[23] = v63;
  v60[24] = v68;
  v60[25] = v60[94];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 + 8 * ((1482 * v67) ^ a9)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

#error "1A2785694: call analysis failed (funcsize=70)"

uint64_t sub_1A27830D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  int v45;
  uint64_t *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;

  LODWORD(STACK[0x2A4]) = a43;
  v49 = *v46;
  v46[53] = v46[1];
  v46[54] = v49;
  v46[55] = a40;
  v46[10] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 + 8 * (((HIDWORD(a43) == ((v45 + 1627641665) & 0x648B7627 ^ (v44 - 1055))) * (v45 ^ (v47 + 249) ^ 0x4C0)) ^ (v45 - 980464530))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_1A2783158(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), void (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(uint64_t),uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t *a28)
{
  int *v28;
  int v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;

  v30[56] = a28;
  a4();
  v35 = *v28;
  v36 = *a28;
  v37 = *((_DWORD *)a28 + 3);
  v30[57] = (char *)a28 + 12;
  v38 = v30[50];
  v39 = v30[51];
  v40 = 932829133 * ((((v32 - 136) | 0xE62BB0A5) - ((v32 - 136) & 0xE62BB0A5)) ^ 0x4660ED28);
  v30[131] = v36;
  v30[135] = v38;
  *(_DWORD *)(v32 - 128) = v37 - v40 - 532470131 - ((2 * v37) & 0xC0864D1A);
  *(_DWORD *)(v32 - 120) = (v29 + 207) ^ v40;
  v30[134] = v39;
  *(_DWORD *)(v32 - 116) = -932829133 * ((((v32 - 136) | 0xE62BB0A5) - ((v32 - 136) & 0xE62BB0A5)) ^ 0x4660ED28)
                         + 1793297355 * v35
                         + 1017140188;
  a3(v32 - 136);
  v41 = *(_DWORD *)(v32 - 124);
  v42 = a20(a1);
  return (*(uint64_t (**)(uint64_t))(v31
                                            + 8
                                            * (((v41 == (((v29 + 806363472) | 0xA609094) ^ 0x49207802))
                                              * ((v29 - 377470688) & 0x167FBBD7 ^ 0xD32)) ^ v29)))(v42);
}

uint64_t sub_1A27832B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int *a11, uint64_t a12, uint64_t (*a13)(_QWORD, uint64_t, uint64_t), uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  int v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v23 = *(_QWORD *)(v21 + 8 * v20);
  *(_DWORD *)(v22 - 128) = v20
                         - 822706943
                         - 2106769199 * (((v17 | 0xFDF21067) - (v17 | 0x20DEF98) + 34467736) ^ 0x920E3B52);
  *(_QWORD *)(v19 + 1048) = 2106769199
                          * (((v17 | 0x7DED93EFFDF21067) - (v17 | 0x82126C10020DEF98) - 0x7DED93EFFDF21068) ^ 0x3DFC2B81920E3B52)
                          + v23
                          - 8;
  *(_QWORD *)(v19 + 1064) = v18;
  v24 = v16;
  v16(v22 - 136);
  v25 = a13(*a11, a12, a16);
  v26 = ((v25 << (((v20 + 76) | 0xA0) ^ 0xBF)) & 0xCFF5FFE6) + (v25 ^ 0xE7FAFFF3);
  v27 = *(_QWORD *)(v21 + 8 * ((int)v20 - 65));
  v28 = 2106769199 * (((v17 | 0x99A863232652C02ALL) - v17 + (v17 & 0x66579CDCD9AD3FD0)) ^ 0xD9B9DB4D49AEEB1FLL);
  *(_DWORD *)(v22 - 128) = v20 - 822706943 - v28;
  *(_QWORD *)(v19 + 1048) = v28 + v27 - 8;
  *(_QWORD *)(v19 + 1064) = v18;
  v29 = v24(v22 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21
                                                      + 8
                                                      * (int)((1627 * (v26 == -402980877)) ^ ((((v20 - 402) | 0x788) ^ 0x691)
                                                                                            + v20)))
                                          - 12))(v29);
}

uint64_t sub_1A2783450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44)
{
  int v44;
  uint64_t v45;

  return ((uint64_t (*)(void))(*(_QWORD *)(v45
                                        + 8 * ((387 * (a44 != ((v44 - 980465282) ^ 0x6350CE85))) ^ (v44 - 980464662)))
                            - 12))();
}

uint64_t sub_1A27834A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  int v50;
  _QWORD *v51;
  int v52;
  uint64_t v53;
  uint64_t v54;

  v51[8] = 0;
  LODWORD(STACK[0x31C]) = a50;
  v54 = v51[8];
  v51[68] = v54;
  v51[10] = v54;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 + 8 * ((1794 * (((v52 - 347621383) & 0xDA47956F ^ (v50 - 1055)) == 1718210891)) ^ (v52 - 980464530))) - (v52 - 980463254) + 2080))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_1A27834C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v35;
  int v36;
  uint64_t v37;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 + 8 * ((387 * (v35 != ((v36 - 980465282) ^ 0x6350CE85))) ^ (v36 - 980464662))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

void sub_1A278350C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[54];
  v2 = v0[53];
  v0[15] = v0[55];
  v0[16] = v1;
  v0[17] = v2;
  JUMPOUT(0x1A2783540);
}

uint64_t sub_1A27835E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;

  *(_QWORD *)(v41 + 48) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * ((2710 * LOBYTE(STACK[0x3DB])) ^ (v40 - 980464813))) - ((v40 - v42 - 1112) ^ 0xF7)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1A278362C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;
  int v38;
  uint64_t v39;

  LODWORD(STACK[0x2D4]) = HIDWORD(a30);
  *(_QWORD *)(v37 + 472) = a31;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * (((HIDWORD(a30) > *(_DWORD *)(a31 + 8)) * (v38 + a9 - 980462705)) ^ a9)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

void sub_1A2783678()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[85];
  v0[32] = v0[86];
  v0[33] = v1;
  v0[34] = v0[84];
  LODWORD(STACK[0x218]) = STACK[0x39C];
  LODWORD(STACK[0x21C]) = STACK[0x2D4];
  JUMPOUT(0x1A27836B0);
}

uint64_t sub_1A2783740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45)
{
  int v45;
  int v46;
  int v47;
  uint64_t v48;

  LODWORD(STACK[0x2E4]) = a45;
  return ((uint64_t (*)(void))(*(_QWORD *)(v48 + 8 * (((a45 == v46) * ((v45 - v47 - 1187) ^ 0xA7)) ^ (v45 - 980462865)))
                            - 12))();
}

uint64_t sub_1A2783784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,unsigned int a30,unint64_t *a31,unint64_t a32)
{
  int v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;

  v35 = *a31;
  v33[61] = a31;
  v33[62] = v35;
  v33[63] = a32;
  v33[64] = a30 - (unint64_t)((2 * a30) & 0x54720850) - 0x5D906247D5C6FBD8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v34
                                        + 8
                                        * (int)(((a32 > v35)
                                               * ((((v32 ^ 0x546) + 1515994247) & 0xA5A3BFDF ^ 0xFFFFF893)
                                                + (v32 ^ 0x546)
                                                + 804)) ^ v32 ^ 0x546))
                            - 4))();
}

uint64_t sub_1A2783810@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  uint64_t v18;

  LODWORD(STACK[0x30C]) = (((106 * (a1 ^ 0x254) + 1533752131) & 0xA494CBAF) + 708379003) ^ LODWORD(STACK[0x300]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * ((59 * (a18 == 13)) ^ a1)) - 8))();
}

uint64_t sub_1A2783874()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((274 * (((v0 == 0) ^ (v1 + 82)) & 1)) ^ v1))
                            + 980465334
                            - ((v1 - 9374383) & 0x3AFFBEBF)
                            + 4))();
}

uint64_t sub_1A27838D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v30;
  _QWORD *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;

  v34 = *(_QWORD *)(v33 + 8 * v30);
  v31[43] = v34;
  v31[44] = a30;
  v35 = STACK[0x2E4];
  LODWORD(STACK[0x26C]) = STACK[0x2E4];
  v31[46] = 0;
  v31[47] = v34;
  LODWORD(STACK[0x284]) = v35;
  v31[49] = 0;
  return ((uint64_t (*)(void))(980465334
                            - (v32
                             + (v30 ^ 0x3E4u)
                             + 511)
                            + *(_QWORD *)(v33 + 8 * ((44 * (a30 != 0)) | v30 ^ 0x660))))();
}

uint64_t sub_1A2783940()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v1 == 0) ^ (v0 - 59)) & 1 | (4
                                                                                         * (((v1 == 0) ^ (v0 - 59)) & 1)) | v0))
                            - 4))();
}

uint64_t sub_1A2783998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  int v25;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)(v26 + 528) = LODWORD(STACK[0x30C]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v27 + 8 * ((25 * (a25 != 13)) ^ v25))
                            - 37 * ((v25 + 1796645749) & 0x94E95BDF ^ 0x3C3)
                            + 2434))();
}

uint64_t sub_1A2783A08@<X0>(uint64_t a1@<X8>)
{
  int v1;
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v2[4] = 0;
  v5 = v2[66] - 1;
  *(_BYTE *)(v2[62] + a1 + ((v3 + v1 + 466) ^ 0x810409A2AE5CB2BFLL)) = *(_BYTE *)(v2[63]
                                                                                              + a1
                                                                                              + ((v3 + v1 + 466) ^ 0x810409A2AE5CB2BFLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((2817 * (v5 == 0)) ^ v1)) - 12))();
}

void sub_1A2783A78()
{
  JUMPOUT(0x1A2783A34);
}

uint64_t sub_1A2783A80@<X0>(uint64_t a1@<X8>)
{
  int v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[116] = 0;
  v4 = v2[66] - 1;
  *(_BYTE *)(v2[62] + a1 - 0x7EFBF65D6BD3FBFFLL) = *(_BYTE *)(v2[63] + a1 - 0x7EFBF65D6BD3FBFFLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v4 != 0) * ((v1 ^ 0x3A70BF34) - 980465331)) ^ v1 ^ 0xB)) - 12))();
}

void sub_1A2783B04()
{
  JUMPOUT(0x1A2783ABCLL);
}

void sub_1A2783B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int *a17, void (*a18)(_QWORD, uint64_t, _QWORD), uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,unsigned int a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;

  v33[4] = v32;
  v34 = v33[61];
  *(_DWORD *)(v34 + 8) = a30;
  *(_DWORD *)(v34 + 12) = 0;
  v33[6] = v34;
  v35 = v33[6];
  a18(*a17, a32, a30);
  v33[8] = v35;
  JUMPOUT(0x1A2783C54);
}

uint64_t sub_1A2783CD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v45;
  uint64_t v46;
  _BOOL4 v47;

  v47 = *(_QWORD *)(v45 + 544) == 0;
  *(_QWORD *)(v45 + 80) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 + 8 * (v47 | a9)) - (((a9 - 1276) + 255) ^ (a9 - 1025))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_1A2783D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _BOOL4 v53;
  _BOOL4 v54;

  v46 = v44[68];
  v47 = *(unsigned int *)(v46 + 8);
  v44[10] = v46;
  v48 = *(_DWORD *)(v46 + 12);
  v44[69] = v46 + 12;
  LODWORD(STACK[0x334]) = v48;
  v44[71] = v47;
  v49 = v47 ^ 0xCDBFD9FFFD77FBFBLL;
  v50 = v47 << (v43 - 43);
  v44[72] = v50;
  v51 = (v48 ^ 0xCF7BBDECFDDFFFF3) + 0x30844213761C7488 + ((2 * v48) & 0x1FBBFFFE6);
  v52 = v49 + 0x324026007684787CLL + (v50 & ((v43 + 264) ^ 0x1FAEFF3C2));
  v53 = v51 < 0x73FC7477;
  v54 = v51 > v52;
  if (v53 != v52 < 0x73FC7477)
    v54 = v53;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 + 8 * ((241 * !v54) ^ v43)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_1A2783E14@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;

  v4 = **(_QWORD **)(v2 + 544);
  *(_QWORD *)(v2 + 584) = v4;
  v5 = STACK[0x334];
  v6 = ((2 * LODWORD(STACK[0x334])) & 0xAE9D5FFE) + (LODWORD(STACK[0x334]) ^ 0x574EAFFF) - 1464774655;
  v7 = *(unsigned __int8 *)(v4 + v6 + 1);
  v8 = (((v7 - ((2 * v7) & 0x13A)) << 16) - 1902313472) ^ 0x8E9D0000;
  v9 = *(unsigned __int8 *)(v4 + v6 + 2);
  v10 = v8 | (((*(unsigned __int8 *)(v4 + v6) - ((2 * *(unsigned __int8 *)(v4 + v6)) & 0x16) + 150) << (((a1 - 126) & 0xEB) + 118))
            - 184549376) ^ 0x8B000000;
  v11 = ((v9 - ((2 * v9) & 0xBBBBBBBB) + 3338208) << 8) - 768;
  LODWORD(v4) = *(unsigned __int8 *)(v4 + v6 + 3);
  LODWORD(v4) = ((v4 - ((2 * v4) & 0x8E) - 285719737) ^ 0xE7A74194) & ~(v10 | v11 ^ 0x32EFDD00) | (v10 | v11 ^ 0x32EFDD00) & 0xF6A0FD00;
  LODWORD(v4) = (((v4 ^ 0x7F619929) - 1972886616) ^ ((v4 ^ 0x5B2A7D6C) - 1373386781) ^ ((v4 ^ 0x2D14E696) - 669164519))
              + 1779679125;
  LODWORD(STACK[0x350]) = v4;
  v5 += 4;
  LODWORD(STACK[0x354]) = v5;
  **(_DWORD **)(v2 + 552) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((99 * ((_DWORD)v4 == v1)) ^ a1)) - 12))();
}

uint64_t sub_1A2783FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _BOOL4 v52;
  _BOOL4 v53;

  v47 = LODWORD(STACK[0x354]);
  v45[75] = v47;
  v48 = v47 ^ 0x77FFEFDBFFFDFFF5;
  v49 = v47 << (((v44 - 107) & 0xEFu) - 38);
  v45[76] = v49;
  v50 = v48 - 0x77FFEFDBE4A0E590 + (v49 & 0x1FFFBFFEALL);
  v51 = (v45[71] ^ 0xF73F24BF6CC974F3) + (v45[72] & 0xD992E9E6) + 0x8C0DB40AE93A56ALL;
  v52 = v50 < 0x1B5D1A5D;
  v53 = v50 > v51;
  if (v51 < 0x1B5D1A5D != v52)
    v53 = v52;
  v45[10] = v45[68];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 + 8 * (v44 ^ (16 * v53))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_1A27840C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  unsigned __int8 *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v56;

  v50 = v46 + 251;
  v51 = (unsigned __int8 *)((*(_QWORD *)(v48 + 608) & 0x1EDDFF2EELL)
                          + (*(_QWORD *)(v48 + 600) ^ 0xCE7CC9BFF6EFF977)
                          + *(_QWORD *)(v48 + 584)
                          + 0x3183364009100689);
  v52 = ((unint64_t)*v51 << 56) | ((unint64_t)v51[1] << 48) | ((unint64_t)v51[2] << ((v46 - 5) ^ 0xFu)) | ((unint64_t)v51[3] << 32) | ((unint64_t)v51[4] << 24) | (((v51[5] - ((2 * v51[5]) & 0x2CLL) + 0x943A17A3F23ELL) << 16) - 2621440) ^ 0x943A17A3F2160000 | (((v51[6] - ((2 * v51[6]) & 0xC4) + 0x41B174E3F23082) << 8) - 0x2000) ^ 0x41B174E3F2306200;
  v53 = v51[7] - ((2 * v51[7]) & 0x166) + 0x2C4F7A186F8472B3;
  *a10 = v53 & 0x307 ^ 0x196F724C632F3EFBLL ^ ((v52 - ((2 * v52) & 0x16616C9F6D6DA236) - 0x74CF49B049492EFDLL) ^ 0x925FC403D599EDFBLL) & (v53 ^ 0xD3B085E7907B8D4CLL);
  **(_DWORD **)(v48 + 552) += 8;
  *(_QWORD *)(v48 + 80) = *(_QWORD *)(v48 + 544);
  v56 = STACK[0x31C];
  LODWORD(STACK[0x368]) = v47;
  LODWORD(STACK[0x36C]) = v56;
  v54 = *(_QWORD *)(v48 + 80);
  *(_QWORD *)(v48 + 624) = v54;
  *(_QWORD *)(v48 + 632) = a28;
  *(_QWORD *)(v48 + 96) = v54;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 + 8 * ((15 * (((v50 - 104) ^ (a28 == 0)) & 1)) ^ v50)) - ((v50 - 946867265) & 0x387008BF) + 162))(196, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1A2784368()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v4 = v2[78];
  v2[40] = (((_DWORD)v0 - 637538575) & 0x6E0D58FB ^ (unint64_t)(v1 + 2)) + *(_QWORD *)(v3 + 8 * v0);
  v2[41] = v4;
  LODWORD(STACK[0x250]) = STACK[0x36C];
  LODWORD(STACK[0x254]) = STACK[0x368];
  v5 = v2[79];
  LODWORD(v4) = STACK[0x254];
  v6 = STACK[0x250];
  v7 = v2[41];
  v2[43] = v2[40];
  v2[44] = v5;
  LODWORD(STACK[0x268]) = v4;
  LODWORD(STACK[0x26C]) = v6;
  v2[46] = v7;
  return sub_1A2784464();
}

uint64_t sub_1A2784464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;

  v20[113] = v20[46];
  v23 = v20[43];
  v22 = (_QWORD *)v20[44];
  v20[114] = v22;
  v20[115] = v23;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 + 8 * (((*v22 != 0) * (a9 - 817)) ^ a9)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

void sub_1A27844B0()
{
  JUMPOUT(0x1A2782874);
}

uint64_t sub_1A27844B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X8>, uint64_t a10, uint64_t a11)
{
  return a9(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

uint64_t sub_1A27844C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int a66;
  int v66;
  int v67;
  _QWORD *v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  LODWORD(STACK[0x3FC]) = a65;
  v72 = v68[24];
  v71 = v68[25];
  v68[96] = v71;
  v73 = v68[23];
  v68[97] = v72;
  v68[98] = v73;
  v68[27] = v73;
  v68[28] = v72;
  v68[29] = v71;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 8 * ((887 * (a66 == (v66 ^ (v69 + 591) ^ (v67 - 1276)))) ^ (v66 - 980464058))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_1A278452C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  unsigned int v64;
  _QWORD *v65;
  int v66;
  uint64_t *v67;
  uint64_t v68;
  _DWORD *v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v77;

  v67 = (uint64_t *)v65[98];
  v68 = *v67;
  v69 = (_DWORD *)v65[96];
  v70 = STACK[0x3FC];
  v71 = LODWORD(STACK[0x3FC]) - ((2 * LODWORD(STACK[0x3FC])) & 0xBFE4C9AE) - 537762601;
  v72 = (((v66 + a9 + 79) ^ 0xC7161914) & (2 * *v69)) + (*v69 ^ 0xFEB357D5) + 21801003;
  *(_BYTE *)(*v67 + v72) = HIBYTE(v71) ^ 0xDF;
  *(_BYTE *)(v68 + v72 + 1) = BYTE2(v71) ^ 0xF2;
  *(_BYTE *)(v68 + v72 + 2) = ((BYTE1(v71) ^ 0x64) - ((2 * (BYTE1(v71) ^ 0x64)) & 0x96) + 75) ^ 0x4B;
  *(_BYTE *)(v68 + v72 + 3) = v71 ^ 0xD7;
  *v69 += 4;
  v73 = v65[97];
  v65[27] = v67;
  v65[28] = v73;
  v65[29] = v69;
  v75 = v65[27];
  v76 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v65[28];
  v77 = v65[29];
  *v65 = v76;
  v65[1] = v77;
  return v76(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           v75,
           a34,
           v77,
           __PAIR64__(v64, v70),
           v75,
           v76,
           v77,
           __PAIR64__(v64, v70),
           v75,
           a42,
           a43,
           __PAIR64__(v64, v70),
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

uint64_t sub_1A2784640@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((((v1 ^ 0xA21979F7) + 1575388489) * ((a1 & 0xFFFFFFFF80000000) != 0)) ^ v1))
                            - (v1 ^ 0x23CLL)))();
}

uint64_t sub_1A2784684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  *(_QWORD *)(v61 + 288) = a9;
  *(_QWORD *)(v61 + 864) = a9;
  LODWORD(STACK[0x23C]) = 1718210905;
  *(_QWORD *)(v61 + 872) = v60;
  HIDWORD(a45) = STACK[0x23C];
  v62 = *(_QWORD *)(v61 + 816);
  *(_QWORD *)(v61 + 184) = *(_QWORD *)(v61 + 824);
  *(_QWORD *)(v61 + 192) = v62;
  *(_QWORD *)(v61 + 200) = *(_QWORD *)(v61 + 808);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 832))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

uint64_t sub_1A27846D8@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ (460 * a1)))
                            + 980465334
                            - (v2 + v1 + 214)
                            - (v1 - 105)
                            + 1048))();
}

uint64_t sub_1A2784710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19
                                                                                                  + 8 * (((((v16 ^ 0x3A70BFCA) - 980464250) ^ (v16 - 1323)) * (a1 == 0)) ^ v16)))(v17, a2, a15, a14, a16, a11, v18);
}

uint64_t sub_1A2784764()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = **(_QWORD **)(v1 + 792);
  *(_QWORD *)(v1 + 888) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((44 * (v3 <= *(_QWORD *)(v1 + 880))) ^ v0)) - 12))();
}

uint64_t sub_1A2784920()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x484]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((((v0 + 1254553025) & 0xB5390FBF ^ 0x221) * (v1 != 0)) ^ v0))
                            - 8))();
}

uint64_t sub_1A2784970@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x480]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 ^ (1903 * (v1 != 0))))
                            + 980465334
                            - ((a1 + 536903208) | 0x1A703680u)))();
}

uint64_t sub_1A27849BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  _QWORD *v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  LODWORD(STACK[0x284]) = a26;
  v47[49] = v47[113];
  v48 = v47[49];
  v49 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v47[47];
  v47[6] = 0;
  v47[12] = v48;
  return v49(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1A2784A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v30;
  uint64_t v31;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 + 8 * ((1632 * LOBYTE(STACK[0x3DB])) ^ (v30 - 980464997))) - ((v30 - 163101409) & 0xCF48057B ^ 0x15DLL)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_1A2784A80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  _QWORD *v64;
  int v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;

  v67 = a9 & 0xFFFFFFFFCF48057BLL;
  v68 = (a9 & 0xCF48057B) + 695;
  v64[21] = (v68 ^ 0xFFFFFFFFFFFFFBECLL) + *(_QWORD *)(v66 + 8 * v67);
  HIDWORD(a64) = 1;
  LODWORD(STACK[0x3DC]) = 1;
  v69 = v64[21];
  v64[92] = a32;
  v64[93] = v69;
  v70 = *(_DWORD *)(a32 + 12);
  v64[94] = a32 + 12;
  LODWORD(STACK[0x3F8]) = v70;
  v64[27] = a32 + 12;
  v64[28] = a32;
  v64[29] = v69;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 + 8 * (int)(((v70 < (v68 ^ 0xFFFFFBEB)) * ((v65 + v68 + 323) ^ (v65 + 1168))) ^ v68)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

uint64_t sub_1A2784C20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  _QWORD *v60;
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  _BOOL4 v67;
  _BOOL4 v68;

  v63 = a9 ^ 0x476;
  v64 = v60[92];
  v65 = (LODWORD(STACK[0x3F8]) ^ 0x43FFD37FD6ECEAAFLL)
      - 0x43FFD37F75565620
      + ((2 * LODWORD(STACK[0x3F8])) & 0x1ADD9D55ELL);
  v66 = (v63 ^ (v61 + 1389) ^ *(_DWORD *)(v64 + 8) ^ 0xBFFC231A85ABB3C5)
      + ((2 * *(unsigned int *)(v64 + 8)) & 0x17FB60AF6)
      + 0x4003DCE5A1BB8F10;
  v67 = v65 < 0x6196948B;
  v68 = v65 > v66;
  if (v67 != v66 < 0x6196948B)
    v68 = v67;
  v60[23] = v60[94];
  v60[24] = v64;
  v60[25] = v60[93];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 + 8 * ((2536 * v68) ^ v63)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

void sub_1A2784D18(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v3 = v1[92];
  v1[32] = v1[94];
  v1[33] = v3;
  v6 = STACK[0x3DC];
  LODWORD(STACK[0x218]) = a1;
  v1[34] = v1[93];
  LODWORD(STACK[0x21C]) = 4;
  v1[99] = v3;
  v1[101] = v1[34];
  LODWORD(STACK[0x424]) = v6;
  v4 = v1[32];
  v1[102] = v1[33];
  v5 = *(_QWORD *)(v2 + 8 * SLODWORD(STACK[0x218]));
  v1[103] = v4;
  v1[104] = v5 - 12;
  v1[105] = v3 + 8;
  JUMPOUT(0x1A2785620);
}

uint64_t sub_1A2784D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v46;
  int v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;

  LODWORD(STACK[0x2A4]) = HIDWORD(a43);
  v50 = *v48;
  v48[53] = v48[1];
  v48[54] = v50;
  v48[55] = a40;
  v48[10] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * ((((v47 - 1342044909) & 0x158D47FE ^ 0xF0B ^ ((v47 - 980465340) | 0x86C)) * ((_DWORD)a44 == v46)) ^ (v47 - 980464672))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1A2784DC8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), void (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(uint64_t),uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t *a31)
{
  int *v31;
  int v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;

  v33[56] = a31;
  a4();
  v38 = *v31;
  v39 = *a31;
  v40 = *((_DWORD *)a31 + 3);
  v33[57] = (char *)a31 + 12;
  v41 = v33[50];
  v42 = v33[51];
  v43 = 932829133 * ((v35 - 136) ^ 0xA04B5D8D);
  *(_DWORD *)(v35 - 116) = -932829133 * ((v35 - 136) ^ 0xA04B5D8D) + 1793297355 * v38 + 1017140188;
  v33[131] = v39;
  v33[135] = v41;
  *(_DWORD *)(v35 - 120) = (v32 - 709) ^ v43;
  *(_DWORD *)(v35 - 128) = v40 - v43 - 532470131 - ((2 * v40) & 0xC0864D1A);
  v33[134] = v42;
  a3(v35 - 136);
  v44 = *(_DWORD *)(v35 - 124);
  v45 = a20(a1);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v34
                                                      + 8
                                                      * ((248 * ((((v32 + 306195902) ^ (v44 == 1934675644)) & 1) == 0)) ^ v32))
                                          - 8))(v45);
}

uint64_t sub_1A2784EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45)
{
  int v45;
  uint64_t v46;

  return ((uint64_t (*)(void))(*(_QWORD *)(v46
                                        + 8
                                        * ((475
                                          * (((((v45 | 0x28308092) - 980465188) ^ (a45 == (((v45 | 0x28308092)
                                                                                          - 625835713) & 0xEADCC87B)
                                                                                        + 1666240064)) & 1) == 0)) ^ ((v45 | 0x28308092) - 980464648)))
                            - 12))();
}

void sub_1A278522C(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v2 + 8 * a1);
  v4 = v1[54];
  v5 = v1[53];
  v1[15] = v1[55];
  v1[16] = v4;
  v1[5] = v3;
  v1[17] = v5;
  JUMPOUT(0x1A2785268);
}

uint64_t sub_1A27852F4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)(v1 + 704);
  *v4 = 0;
  v4[1] = 0;
  *(_QWORD *)(v1 + 712) = v4 + 1;
  v5 = v3(4096, 2241923698);
  **(_QWORD **)(v1 + 704) = v5;
  return (*(uint64_t (**)(void))(v2
                              + 8 * (int)(((v5 == 0) * ((((v0 ^ 0x36B) + 388) ^ 0xFFFFFC65) + 3 * (v0 ^ 0x36B))) ^ v0)))();
}

uint64_t sub_1A2785354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(_QWORD),int a24,int a25)
{
  int v25;
  uint64_t v26;
  uint64_t v27;

  a23(*(_QWORD *)(v26 + 704));
  *(_QWORD *)(v26 + 152) = 0;
  LODWORD(STACK[0x3D4]) = 1718210903;
  LOBYTE(STACK[0x3DB]) = 0;
  **(_QWORD **)(v26 + 656) = *(_QWORD *)(v26 + 152);
  return (*(uint64_t (**)(char *))(v27
                                           + 8
                                           * (int)(((a25 != (((v25 + 7381090) | 0x3A001416) ^ 0x3A70B6B3))
                                                  * ((v25 + 2079700153) & 0xBE7AFFBE ^ 0x3A70B6C0)) ^ (v25 + 1774))))((char *)off_1E47CDD30[v25 - 568] - 4);
}

uint64_t sub_1A27854C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X8>, uint64_t a10, uint64_t a11)
{
  return a9(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

uint64_t sub_1A27854D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;

  *(_QWORD *)(v42 + 48) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 + 8 * ((2770 * LOBYTE(STACK[0x3DB])) ^ (v41 - 980464526))) - (v41 ^ (v43 + 1223)) + 128))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_1A2785518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  int v41;
  uint64_t v42;

  LODWORD(STACK[0x2D4]) = a36;
  *(_QWORD *)(v40 + 472) = a29;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * ((2537 * (a36 > *(_DWORD *)(a29 + 8))) ^ a9)) - ((v41 + a9 + 1223) ^ 0x3A70B6B2)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

void sub_1A2785568(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[85];
  v1[32] = v1[86];
  v1[33] = v2;
  LODWORD(STACK[0x218]) = a1;
  v1[34] = v1[84];
  LODWORD(STACK[0x21C]) = STACK[0x2D4];
  JUMPOUT(0x1A2785598);
}

uint64_t sub_1A2785698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48)
{
  int v48;
  int v49;
  int v50;
  uint64_t v51;

  LODWORD(STACK[0x2E4]) = a48;
  return ((uint64_t (*)(void))(*(_QWORD *)(v51 + 8 * ((61 * (a48 != v49)) ^ (v48 - 980462897)))
                            - ((7 * (v48 ^ (v50 + 1273))) ^ 0x5FELL)))();
}

uint64_t sub_1A27856E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v28;
  _QWORD *v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;

  v32 = 26 * (v28 ^ (v30 + 1361));
  v33 = *(_QWORD *)(v31 + 8 * v32);
  v29[43] = v33;
  v29[44] = a28;
  v34 = STACK[0x2E4];
  LODWORD(STACK[0x26C]) = STACK[0x2E4];
  v29[46] = 0;
  v29[47] = v33;
  v29[49] = 0;
  LODWORD(STACK[0x284]) = v34;
  return (*(uint64_t (**)(void))(v31 + 8 * ((((v30 + ((v32 + 32) | 0x300) + 511) ^ (v30 + 443)) + v32) ^ (a28 == 0))))();
}

uint64_t sub_1A278574C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t *a28,uint64_t a29,unint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,unsigned int a35)
{
  int v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;

  v38 = *a28;
  v36[61] = a28;
  v36[62] = v38;
  v36[63] = a30;
  v36[64] = a35 - (unint64_t)((2 * a35) & 0x54720850) - 0x5D906247D5C6FBD8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v37 + 8 * ((1000 * (a30 > v38)) ^ v35))
                            - ((v35 + 804) ^ (v35 - 921) ^ 0xB43)))();
}

uint64_t sub_1A27857C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  int v25;
  uint64_t v26;

  LODWORD(STACK[0x318]) = (((3 * (v25 ^ 0x824)) ^ 0x117) + 708379003) ^ LODWORD(STACK[0x300]);
  return (*(uint64_t (**)(void))(v26 + 8 * ((44 * (a25 != 13)) ^ v25)))();
}

uint64_t sub_1A278580C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((((v0 + 1236067110) & 0xB6531FFF ^ 0xE5E) * (v1 != 0)) ^ v0))
                            + 980465334
                            - ((v0 + 1236067110) ^ 0x73DC536Du)
                            + 4))();
}

uint64_t sub_1A2785868@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v3 = LODWORD(STACK[0x318]);
  v1[4] = v3;
  LODWORD(v3) = v3 - 1;
  v4 = (v3 ^ 0x7B177EDEFFDFAFB0)
     - 0x7B177EDEFFDFAFB0
     + (((unint64_t)v3 << ((a1 + 44) & 0xBE ^ 0xBFu)) & 0x1FFBF5F60);
  *(_BYTE *)(v1[62] + v4) = *(_BYTE *)(v1[63] + v4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((886 * (v3 == 0)) ^ a1)) - 8))();
}

void sub_1A278590C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  JUMPOUT(0x1A2785914);
}

uint64_t sub_1A27859C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  uint64_t v46;
  int v47;
  uint64_t v48;
  _BOOL4 v49;

  v49 = *(_QWORD *)(v46 + 544) != 0;
  *(_QWORD *)(v46 + 80) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * ((2043 * v49) ^ v47)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1A2785A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  _QWORD *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _BOOL4 v53;
  _BOOL4 v54;

  v47 = v44[68];
  v48 = *(unsigned int *)(v47 + 8);
  v44[10] = v47;
  v49 = *(_DWORD *)(v47 + 12);
  v44[69] = v47 + 12;
  LODWORD(STACK[0x334]) = v49;
  v44[71] = v48;
  v50 = v48 ^ 0xDFFFFFEFFDEFEFDFLL;
  v48 *= 2;
  v44[72] = v48;
  v51 = (v49 ^ 0x6AEE4EDB7BFF0FDELL)
      - 0x6AEE4EDAFCABA02DLL
      + (((unint64_t)v49 << (v45 - 46 + ((v45 - 78) | 0x80u) - 63)) & 0xF7FE1FBC);
  v52 = v50 + 0x2000001081637FCELL + (v48 & 0x1FBDFDFBELL);
  v53 = v51 < 0x7F536FAD;
  v54 = v51 > v52;
  if (v53 != v52 < 0x7F536FAD)
    v54 = v53;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8 * ((1458 * !v54) ^ v45)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_1A2785B08()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v4 = **(_QWORD **)(v2 + 544);
  *(_QWORD *)(v2 + 584) = v4;
  v5 = STACK[0x334];
  v6 = ((2 * LODWORD(STACK[0x334])) & 0xBCFFDDF6) + (LODWORD(STACK[0x334]) ^ 0x5E7FEEFB) - 1585442555;
  v7 = *(unsigned __int8 *)(v4 + v6 + 1);
  v8 = (((v7 - ((2 * v7) & 0x13A)) << 16) - 1902313472) ^ 0x8E9D0000 | (((*(unsigned __int8 *)(v4 + v6)
                                                                        + ((v0 - 1746) ^ 8)
                                                                        - ((((v0 - 2280) | 0x216) ^ 0x88888888) & (2 * *(unsigned __int8 *)(v4 + v6)))) << 24)
                                                                      - 184549376) ^ 0x8B000000;
  v9 = *(unsigned __int8 *)(v4 + v6 + 2);
  v10 = v8 | (((v9 - ((2 * v9) & 0xBBBBBBBB) + 3338208) << 8) - 768) ^ 0x32EFDD00;
  LODWORD(v4) = *(unsigned __int8 *)(v4 + v6 + 3);
  LODWORD(v4) = ((v4 - ((2 * v4) & 0x8E) - 285719737) ^ 0xE7A74194) & ~v10 | v10 & 0xF6A0FD00;
  LODWORD(v4) = (((v4 ^ 0x7F619929) - 1972886616) ^ ((v4 ^ 0x5B2A7D6C) - 1373386781) ^ ((v4 ^ 0x2D14E696) - 669164519))
              + 1779679125;
  LODWORD(STACK[0x350]) = v4;
  v5 += 4;
  LODWORD(STACK[0x354]) = v5;
  **(_DWORD **)(v2 + 552) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((_DWORD)v4 != v1) | (4 * ((_DWORD)v4 != v1))) ^ v0)) - 4))();
}

uint64_t sub_1A2785CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, _QWORD *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  _QWORD *v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v53;

  *a11 = 0;
  v53 = STACK[0x31C];
  v48[10] = v48[68];
  LODWORD(STACK[0x368]) = STACK[0x350];
  v51 = v48[10];
  v48[78] = v51;
  LODWORD(STACK[0x36C]) = v53;
  v48[79] = a32;
  v48[12] = v51;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 + 8 * ((7 * (a32 == 0)) ^ ((a9 - 414) | 0x2D0))) - ((((a9 - 414) | 0x2D0) ^ (v49 + 1027) ^ 0x3A70B6B6) + (((a9 - 414) | 0x2D0) ^ 0x3D0u))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_1A2786020()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v3 = (v0 ^ 0xFFFFFFFFFFFFFFF4) + *(_QWORD *)(v2 + 8 * v0);
  LODWORD(STACK[0x250]) = STACK[0x36C];
  v4 = v1[78];
  v1[40] = v3;
  v1[41] = v4;
  LODWORD(STACK[0x254]) = STACK[0x368];
  v5 = v1[79];
  LODWORD(v4) = STACK[0x254];
  v6 = v1[41];
  v7 = STACK[0x250];
  v1[43] = v1[40];
  v1[44] = v5;
  LODWORD(STACK[0x268]) = v4;
  v1[46] = v6;
  LODWORD(STACK[0x26C]) = v7;
  return sub_1A278610C();
}

uint64_t sub_1A278610C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;

  v20[113] = v20[46];
  v23 = v20[43];
  v22 = (_QWORD *)v20[44];
  v20[114] = v22;
  v20[115] = v23;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 + 8 * ((35 * (*v22 != 0)) | a9)) - (a9 ^ 0xB81u) + 2249))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1A2786160@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t (*a16)(void), int a17, int a18, uint64_t a19, int a20,int a21,uint64_t a22)
{
  _QWORD *v22;
  uint64_t v23;
  int v24;
  _QWORD *v25;
  uint64_t v26;
  _BOOL4 v27;

  v24 = 119 * (a1 ^ 0x347);
  ((void (*)(uint64_t))a16)(a22);
  v25 = (_QWORD *)v22[114];
  *v25 = 0;
  v25[1] = 0;
  v26 = a16();
  v22[47] = v22[115];
  LODWORD(STACK[0x280]) = a21;
  v27 = a18 == ((5 * (v24 ^ 0x9FC) - 461) | 0x2D0) - 1731;
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * (((4 * v27) | (8 * v27)) ^ v24)))(v26);
}

uint64_t sub_1A27861D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  _QWORD *v50;
  int v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v50[49] = v50[113];
  LODWORD(STACK[0x284]) = a26;
  v52 = v50[49];
  v53 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v50[47];
  HIDWORD(a48) = STACK[0x284];
  v51 = STACK[0x284];
  v50[6] = 0;
  LODWORD(a50) = v51;
  v50[12] = v52;
  return v53(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

void sub_1A2786220()
{
  JUMPOUT(0x1A2782874);
}

uint64_t sub_1A2786228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int a66;
  int v66;
  int v67;
  _QWORD *v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v72 = v68[24];
  v71 = v68[25];
  v68[96] = v71;
  LODWORD(STACK[0x3FC]) = a65;
  v73 = v68[23];
  v68[97] = v72;
  v68[98] = v73;
  v68[27] = v73;
  v68[28] = v72;
  v68[29] = v71;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 + 8 * (((a66 == v67) * (8 * (v66 ^ (v69 + 1233)) - 941)) ^ (v66 - 980464302))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_1A2786294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  unsigned int v64;
  _QWORD *v65;
  uint64_t *v66;
  uint64_t v67;
  _DWORD *v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v66 = (uint64_t *)v65[97];
  v67 = *v66;
  v68 = (_DWORD *)v65[98];
  v69 = STACK[0x3FC];
  v70 = v69 - ((v69 << (((a9 + 28) | 0x92) + 67)) & 0xBFE4C9AE) - 537762601;
  v71 = ((2 * *v68) & 0xDF76AFB2) + (*v68 ^ 0xEFBB57D9) + 272934951;
  *(_BYTE *)(*v66 + v71) = HIBYTE(v70) ^ 0xDF;
  *(_BYTE *)(v67 + v71 + 1) = BYTE2(v70) ^ 0xF2;
  *(_BYTE *)(v67 + v71 + 2) = ((BYTE1(v70) ^ 0x64) - ((2 * (BYTE1(v70) ^ 0x64)) & 0x96) + 75) ^ 0x4B;
  *(_BYTE *)(v67 + v71 + 3) = v70 ^ 0xD7;
  *v68 += 4;
  v65[27] = v68;
  v65[28] = v66;
  v65[29] = v65[96];
  v73 = v65[27];
  HIDWORD(a36) = v69;
  v74 = v65[28];
  v75 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v65[29];
  *v65 = v74;
  v65[1] = v75;
  LODWORD(a45) = v64;
  return v75(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           v73,
           v74,
           a35,
           a36,
           v73,
           v74,
           v75,
           __PAIR64__(v69, v64),
           v73,
           a42,
           a43,
           __PAIR64__(v69, v64),
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

uint64_t sub_1A27863CC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1002 * (((v0 == v1) ^ (v2 + 14)) & 1)) ^ v2))
                            - 8))();
}

uint64_t sub_1A2786414@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v1 ^ 0x7B2) - 1402) * (a1 >> 31 == 0)) ^ v1)) - 4))();
}

uint64_t sub_1A2786448@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ ((2 * a1 <= v1) | (4 * (2 * a1 <= v1)))))
                            - ((v2 + 84) ^ 0x5E3)))();
}

uint64_t sub_1A278647C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  uint64_t v18;
  int v19;
  _QWORD *v20;
  uint64_t v21;

  v20[36] = v18;
  v20[108] = a1;
  v20[109] = v18;
  LODWORD(STACK[0x23C]) = 1718210905;
  return ((uint64_t (*)(void))(*(_QWORD *)(v21
                                        + 8 * (int)(((a18 == 13) * ((v19 + 1894551114) & 0x8F136E7D ^ 0x403)) ^ v19))
                            - (v19 ^ 0x60u)
                            + 2001))();
}

uint64_t sub_1A27864E0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v1 ^ v2) - 980461399) * a1) ^ v1))
                            - ((9 * (v1 ^ 0x7A1u)) ^ 0x418)))();
}

uint64_t sub_1A278651C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(_QWORD, uint64_t), uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v28 = a19(*(_QWORD *)(v25 + 872), 2241923698);
  *(_QWORD *)(v25 + 880) = v28;
  LODWORD(STACK[0x23C]) = 1718210903;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 + 8 * ((45 * (a25 != ((605 * (v26 ^ 0x410)) ^ 0x979))) ^ v26)) - 4))(v28, v29, v30, v31, v32, v33, v34, v35);
}

uint64_t sub_1A2786594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  uint64_t v20;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 + 8 * (((v18 - 836) | 0x705) ^ (43 * (a1 != 0))))
                                                                                                - (((v18 - 836) | 0x705) ^ v19)
                                                                                                - (((v18 - 836) | 0x705u) ^ 0xFFFFFFFFC58F4E9BLL)))(v16, a2, a15, a14, a16, a11, v17);
}

uint64_t sub_1A27865F0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = **(_QWORD **)(v1 + 792);
  *(_QWORD *)(v1 + 888) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 | (2 * (v3 <= *(_QWORD *)(v1 + 880))))) - 12))();
}

uint64_t sub_1A27867A4()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x484]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (1462 * (v1 != 0))))
                            - ((v0 + 980464808) ^ 0x3A70B6B6)))();
}

uint64_t sub_1A27867EC@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = LODWORD(STACK[0x484]);
  v1[38] = v4--;
  v5 = (a1 ^ (v2 - 66))
     + (v4 ^ 0x7B177EDEFFDFAFB0)
     + ((2 * v4) & 0x1FFBF5F60)
     - 0x7B177EDF3A50666ELL;
  *(_BYTE *)(v1[110] + v5) = *(_BYTE *)(v1[111] + v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((3844 * (v4 == 0)) ^ a1)) - 12))();
}

uint64_t sub_1A2786874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  *(_QWORD *)(v61 + 288) = a9;
  *(_QWORD *)(v61 + 864) = a9;
  LODWORD(STACK[0x23C]) = 1718210905;
  *(_QWORD *)(v61 + 872) = v60;
  LODWORD(a49) = STACK[0x23C];
  v62 = *(_QWORD *)(v61 + 816);
  *(_QWORD *)(v61 + 184) = *(_QWORD *)(v61 + 824);
  *(_QWORD *)(v61 + 192) = v62;
  *(_QWORD *)(v61 + 200) = *(_QWORD *)(v61 + 808);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 832))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

uint64_t sub_1A27868C8@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x480]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 ^ (1903 * (v1 != 0))))
                            + 980465334
                            - (((a1 - 1920441094) & 0x72779FFFu)
                             + 980463534)))();
}

uint64_t sub_1A2786924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v20 = LODWORD(STACK[0x480]);
  v18[37] = 0;
  v21 = ((v17 - 1141513105) & 0xEFFE3F9B ^ 0x810409A23FD82F1ALL) + 0x7EFBF65D6BD3FBFFLL;
  v22 = *(unsigned __int8 *)(v18[111] + v21);
  *(_BYTE *)(v18[110] + v21) = v22;
  v23 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8 * ((49 * (v20 == 1)) ^ v17));
  return v23(49, v23, v22, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

void sub_1A27869C0()
{
  JUMPOUT(0x1A278698CLL);
}

uint64_t sub_1A27869C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(_QWORD),int a24,int a25)
{
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  _QWORD *v31;

  *(_QWORD *)(v28 + 304) = v25;
  v30 = v26 - 980464723;
  v31 = *(_QWORD **)(v28 + 792);
  a23(*v31);
  *v31 = *(_QWORD *)(v28 + 880);
  **(_DWORD **)(v28 + 840) = *(_QWORD *)(v28 + 872);
  LODWORD(STACK[0x23C]) = 1718253555;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v29 + 8 * ((1558 * (a25 != 13)) ^ v30)) - 4))(v27);
}

void sub_1A2786A64(uint64_t a1)
{
  __asm { BR              X16 }
}

uint64_t sub_1A2786B1C@<X0>(uint64_t (*a1)(uint64_t)@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  v11 = *(_QWORD *)(v6 + 8 * (v1 + 1932638917)) - 8;
  v12 = v4;
  v13 = 0;
  v14 = v7;
  v15 = v3;
  v16 = v5;
  v17 = v2;
  *(_DWORD *)(v9 - 36) = (v1 + 1935377303) ^ (2106769199
                                            * (((v9 - 40) & 0x55754C3F | ~((v9 - 40) | 0x55754C3F)) ^ 0xC57698F5));
  *(_QWORD *)(v9 - 32) = &v11;
  result = a1(v9 - 40);
  *(_DWORD *)(v8 + 8) = -42789;
  return result;
}

void bJM8NAjYQsWsGN9h(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1A2786DF0@<X0>(_DWORD *a1@<X0>, unsigned int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2647 * (*a1 == 1)) ^ a2)) - 12))();
}

uint64_t sub_1A2786E14(uint64_t a1)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((6 * (*(_QWORD *)(a1 + 8) == 0)) ^ 0x25A)) - 12))();
}

uint64_t sub_1A2786E5C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((a2 ^ 0x504) - 601954079) ^ 0x23E1154C) + 151 * (a2 ^ 0x504))
                                * (*(_DWORD *)(a1 + 16) == 0)) | a2)))();
}

uint64_t sub_1A2786EA4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t))(v2 + 8 * (v0 ^ 0x26E)))(v1);
  return 0;
}

uint64_t sub_1A278703C(uint64_t a1)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 64)
                            + 1973783323
                            * (((a1 | 0x1A74164C429291B3) - (a1 & 0x1A74164C429291B3)) ^ 0x7D69FCAAA5DB322)))();
}

uint64_t sub_1A2787080(uint64_t result)
{
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1A2787088(uint64_t result)
{
  *(_DWORD *)(result + 32) = -42789;
  return result;
}

uint64_t sub_1A2787094(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) - 1629346421 * ((a1 & 0x871F3A76 | ~(a1 | 0x871F3A76)) ^ 0x44F4B69B);
  return ((uint64_t (*)(void))(*((_QWORD *)off_1E47CDD30[v1 - 435]
                              + ((1018 * (*(_DWORD *)(*(_QWORD *)(a1 + 8) + 20) != 1300)) ^ v1))
                            - ((v1 + 1582584329) & 0xA1ABAF37 ^ 0x31BLL)))();
}

_DWORD *sub_1A278712C@<X0>(_DWORD *result@<X0>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;
  int v5;

  v4 = a2 - 8;
  v5 = a2 - 1;
  if (v2 == ((v3 + 2026620103) & 0x873439F7 ^ 0x191))
    v5 = v4;
  *result = v5;
  return result;
}

void sub_1A2787344(uint64_t a1)
{
  int v1;
  _DWORD v2[10];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 32) + 2106769199 * (((a1 | 0x7A656CCB) - a1 + (a1 & 0x859A9334)) ^ 0x159947FE);
  v2[0] = v1 + 1756268191 * ((v2 - 486729323 - 2 * (v2 & 0xE2FD1995)) ^ 0x6F6F9754) - 83;
  sub_1A275B1A8(v2);
  __asm { BR              X9 }
}

uint64_t sub_1A278746C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  unint64_t v38;
  int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  uint64_t (*v43)();
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v35 = *(_QWORD *)(v34 - 224);
  v36 = (*(_DWORD *)(v35 + 52) + v31);
  v37 = *(_DWORD *)(v35 + 40);
  v38 = v36 | ((unint64_t)(v36 < 0x188570D8) << 32);
  v57 = v38 + 0x7DF43CD5053FFA6;
  v54 = v38 - 0x7920DC3333AC10DELL;
  v39 = ((v36 & 0xE77A8F28) << (((a1 - 62) & 0x57u) - 83)) & (v36 ^ 0xE7728E0F) ^ v36 & 0xE77A8F28;
  LODWORD(v35) = ((2 * (v36 ^ 0x2BA28E0F)) ^ 0x99B0024E) & (v36 ^ 0x2BA28E0F) ^ (2 * (v36 ^ 0x2BA28E0F)) & 0xCCD80126;
  v40 = v35 ^ 0x44480121;
  LODWORD(v35) = (v35 ^ 0xC8900000) & (4 * v39) ^ v39;
  v41 = ((4 * v40) ^ 0x3360049C) & v40 ^ (4 * v40) & 0xCCD80124;
  LODWORD(v35) = (v41 ^ 0x400000) & (16 * v35) ^ v35;
  v42 = ((16 * (v41 ^ 0xCC980123)) ^ 0xCD801270) & (v41 ^ 0xCC980123) ^ (16 * (v41 ^ 0xCC980123)) & 0xCCD80120;
  LODWORD(v35) = v35 ^ 0xCCD80127 ^ (v42 ^ 0xCC800000) & ((_DWORD)v35 << 8);
  LODWORD(v35) = v36 ^ (2
                      * (((_DWORD)v35 << 16) & 0x4CD80000 ^ v35 ^ (((_DWORD)v35 << 16) ^ 0x1270000) & (((v42 ^ 0x580107) << 8) & 0xCCD80000 ^ 0x4D80000 ^ (((v42 ^ 0x580107) << 8) ^ 0x58010000) & (v42 ^ 0x580107))));
  LODWORD(v56) = WORD1(v35) ^ 0xFFFFFFCA;
  HIDWORD(v56) = BYTE3(v35) ^ 0x7E;
  HIDWORD(v55) = (((v35 >> 8) ^ 0xFFFFFF8D)
                - ((2 * ((v35 >> 8) ^ 0xFFFFFF8D)) & 0xFFFFFF96)
                + 75) ^ 0x4B;
  LODWORD(v55) = v35 ^ 0x66;
  HIDWORD(a15) = ((2 * v37) & 0xE7FFEDFE) + (v37 ^ 0xF3FFF6FF) + 201328897;
  HIDWORD(a12) = (v33 - 480960863) & 0x1CAADE2E;
  HIDWORD(v58) = HIDWORD(a12) ^ 0x5FF;
  *(_QWORD *)(v34 - 240) = (v33 << 7) ^ 0x4A300u;
  LODWORD(v58) = v36 - 411398360;
  HIDWORD(a2) = v36 - 411398356;
  HIDWORD(a24) = (a1 - 426201150) & 0x19675957;
  *(_DWORD *)(v34 - 256) = HIDWORD(a24) - 1200;
  v59 = *(_QWORD *)(v32 + 8 * a1);
  v43 = off_1E47CDD30[HIDWORD(a24) - 2351];
  v44 = ((uint64_t (*)(uint64_t, uint64_t))v43)(16, 2241923698);
  v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8 * (((v44 != 0) * ((HIDWORD(a24) - 985) ^ 0x961)) ^ *(_DWORD *)(v34 - 256)));
  *(_QWORD *)(v34 - 256) = off_1E47CDD30[HIDWORD(a24) ^ 0x966];
  HIDWORD(a24) = 1718210903;
  return v45(v44, v46, v47, v48, v49, v50, v51, v52, a2, 2106769199* ((((v34 - 136) | 0x47334E6CE5703DBALL) - (v34 - 136) + ((v34 - 136) & 0xB8CCB1931A8FC240)) ^ 0x722F6028A8C168FLL), 81 * (v33 ^ 0x957u), a5, a6, a7, a8, a9, a10, a11,
           a12,
           v34 + 0x1EFC1F4B90642E06,
           v34 + 0x278F89334A28162CLL,
           a15,
           v54,
           a17,
           v55,
           v56,
           v57,
           v58,
           a22,
           v43,
           a24,
           v33 ^ 0x88Bu,
           v59,
           a27,
           v33 ^ 0x9B4,
           v33 ^ 0x9BBLL,
           v33 ^ 0x991,
           a31);
}

uint64_t sub_1A27878B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v34;

  v24 = v21;
  v34 = 3 * (v21 ^ 0x4F5);
  LODWORD(a18) = v21 ^ 0xC2F;
  *a1 = 0;
  a1[1] = 0;
  v25 = v22(4096, 2241923698);
  *a1 = v25;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 + 8 * (int)(((v25 == 0) * (((2 * v34) ^ 0xFFFFFFE4) + a18)) ^ v24)) - 4))(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_1A2787924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t),uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,_QWORD *a46)
{
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v48 = (*(uint64_t (**)(uint64_t))(v47 - 256))(v46);
  *a46 = 0;
  return a33(v48, 2147481843, 3000625123, 1718253555, 1294342463);
}

uint64_t sub_1A2787974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t),uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,_QWORD *a46)
{
  *a46 = 0;
  return a33(a1, 2147481843, 3000625123, 1718253555, 1294342463);
}

uint64_t sub_1A27879B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v11;
  uint64_t v12;
  int v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((v13 - 2364) ^ (1326 * v11))) - (a11 ^ 0xFB)))();
}

uint64_t sub_1A27879DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v39 = (a11 + 234);
  *(_QWORD *)(v38 - 208) = (v39 ^ 0xFFFFFFFFFFFFFE25) + *(_QWORD *)(v37 + 8 * (int)a11);
  v40 = *(_QWORD *)(v38 - 168);
  *(_QWORD *)(v38 - 216) = v40;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 + 8 * (int)((573 * (*(_DWORD *)(v40 + 12) < (((v39 ^ 0x889) - 2107) ^ 0xFFFFFEE2))) ^ v39)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1A2787C88()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BOOL4 v7;
  _BOOL4 v8;

  v4 = *(unsigned int *)(*(_QWORD *)(v3 - 216) + 8);
  v5 = ((2 * v1) & 0x155FBABEELL) + (v1 ^ 0xFBDF3CBEAAFDD5F7) + ((v0 + 2107) ^ 0x420C341B0C2B116);
  v6 = (v4 ^ 0xD73F7BFDA6FBFB76) + 0x28C08402B4C492BFLL + ((2 * v4) & 0x14DF7F6ECLL);
  v7 = v5 < 0x5BC08E35;
  v8 = v5 > v6;
  if (v7 != v6 < 0x5BC08E35)
    v8 = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((716 * v8) ^ v0)) - 8))();
}

void sub_1A2787D5C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 232) = *(_QWORD *)(v1 + 8 * v0) + ((v0 + 65013315) & 0xFC1FFFAF) - 1812;
  JUMPOUT(0x1A2787D8CLL);
}

uint64_t sub_1A2787E48(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  unint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8 + 8 * (((((v6 + a3) & a5) - 2051) * (v7 > v5)) ^ v6)))();
}

uint64_t sub_1A2787E6C@<X0>(int a1@<W8>)
{
  unint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((a1 - 2062) * (v1 < 0xFFFFFFFF)) ^ (a1 - 1378))) - 8))();
}

uint64_t sub_1A2787E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t (*a30)(uint64_t, uint64_t),uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v35 = a30(v32, 2241923698);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t))(*(_QWORD *)(v34 + 8 * ((((v33 ^ (v35 == 0)) & 1) * (((v33 - 557) | 0x13) + 957)) ^ v33)) - 8))(v35, 2147481843, 3000625123, 1718253555, 1294342463, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_1A2787F24(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,unint64_t *a41)
{
  int v41;
  uint64_t v42;
  uint64_t v43;

  return (*(uint64_t (**)(unint64_t, uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8 * (int)((27 * (*a41 <= a1)) | (v41 + 52132096) & 0xFCE48F4C)))(a1, 0x1FFBF5F60, *(_QWORD *)(v43 - 224), a4, *(_QWORD *)(v43 - 248), *(_QWORD *)(v43 - 240), a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_1A2788C9C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((((v0 == 0) ^ (v1 + 30)) & 1) * (v1 + 62)) ^ v1))
                            - 12))();
}

uint64_t sub_1A2788CD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v10 = 6 * (v5 ^ 0x12653CB4);
  v11 = v3 + (v10 + 1242) - 2389;
  v12 = (a2 & (2 * v11)) + (v11 ^ v7);
  *(_BYTE *)(a1 + v4 + 0x74E201AB2F781F5FLL + v12) = *(_BYTE *)(v12 + a3 + v6);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v11 == 0) * v9) ^ v10)) - 8))();
}

uint64_t sub_1A2788D40()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((3637 * (v0 != 0)) ^ (v1 - 616)))
                            - ((v1 + 84) ^ 0x95CLL)))();
}

uint64_t sub_1A2788D70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(a1 + v3 + 0x70FD8A2CC383D310 + v6) = *(_BYTE *)(v6 + a2 + v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((((v4 - 1984674969) & 0x764BBF54) - 1903) | (8 * (v2 == 1))))
                            - 12))();
}

uint64_t sub_1A2788DE4()
{
  uint64_t (*v0)(void);

  return v0();
}

void sub_1A2788DF4()
{
  JUMPOUT(0x1A2788C38);
}

void sub_1A2788E34()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 160);
  *(_QWORD *)(v1 + 8) = *(unsigned int *)(v0 - 148);
  *(_QWORD *)(v0 - 184) = v1;
  JUMPOUT(0x1A2788FECLL);
}

uint64_t sub_1A2789070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                                                 + 8
                                                                                                 * (((((v5 + 161) | 0x4C2) ^ 0x5D0) * (v4 == 0)) ^ (v5 + 1369)))
                                                                                     - 4))(a1, a2, *(_QWORD *)(v7 - 224), a4, 3101435780, *(_QWORD *)(v7 - 240));
}

uint64_t sub_1A27890EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  _BOOL4 v12;

  v9 = (*(unsigned int *)(v5 + 12) ^ 0x5FFF7E7EDFB2FFF7)
     - 0x5FFF7E7E26D6D86FLL
     + (v8 & (2 * *(unsigned int *)(v5 + 12)));
  v10 = (*(unsigned int *)(v5 + 8) ^ 0xD96FEFF367E3D77DLL)
      + 0x2690100D50F85007
      + (((unint64_t)*(unsigned int *)(v5 + 8) << ((v6 + 122) ^ 0x55u)) & 0xCFC7AEFA);
  v11 = (v9 < a5) ^ (v10 < a5);
  v12 = v9 > v10;
  if (v11)
    v12 = v9 < a5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((690 * !v12) ^ v6)) - 4))();
}

uint64_t sub_1A27891C4()
{
  _DWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;

  v6 = ((2 * v5) & 0xE6EDFDF2) + (v5 ^ 0x7376FEF9) - 1937178361;
  v7 = *(unsigned __int8 *)(*(_QWORD *)v1 + v6);
  v8 = (((v7 - ((2 * v7) & 0x16) + 150) << (v4 + 62)) - 184549376) ^ 0x8B000000;
  v9 = *(unsigned __int8 *)(*(_QWORD *)v1 + v6 + 1);
  v10 = (((v9 - ((2 * v9) & 0x13A)) << 16) - 1902313472) ^ 0x8E9D0000 | v8;
  v11 = *(unsigned __int8 *)(*(_QWORD *)v1 + v6 + 2);
  v12 = v10 | (((v11 - ((2 * v11) & 0xBBBBBBBB)) << 8) + 854580480) ^ 0x32EFDD00;
  v13 = *(unsigned __int8 *)(*(_QWORD *)v1 + v6 + 3);
  v14 = ((v13 - ((2 * v13) & 0x8E) - 285719737) ^ 0xE7A74194) & ~v12 | v12 & 0xF6A0FD00;
  *v0 = (((v14 ^ 0x7F619929) - 1972886616) ^ ((v14 ^ 0x5B2A7D6C) - 1373386781) ^ ((v14 ^ 0x2D14E696) - 669164519))
      + 1779679125;
  *(_DWORD *)(v1 + 12) += 4;
  return ((uint64_t (*)(void))(v2 + v3))();
}

uint64_t sub_1A2789328(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((*(_DWORD *)(v7 - 172) == a4) * v4) ^ (v6 - 261))) - 4))();
}

void sub_1A278934C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;

  *(_DWORD *)(v4 - 176) = a4;
  JUMPOUT(0x1A27890B0);
}

uint64_t sub_1A2789364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t (*v49)(void);

  v49 = (uint64_t (*)(void))(*(_QWORD *)(v46 + 8 * ((v47 - 2180) ^ (1199 * v45))) - a44 + 1568);
  *(_QWORD *)(v48 - 184) = v44;
  return v49();
}

uint64_t sub_1A2789390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44)
{
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  *(_QWORD *)(v46 - 184) = 0;
  return (*(uint64_t (**)(void))(v45 + 8 * (((((a44 - 1435145928) & 0x558A99F7) + 1257) * (v44 != 0)) ^ a44)))();
}

uint64_t sub_1A27893D4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44)
{
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _BOOL4 v49;
  _BOOL4 v50;
  uint64_t (*v51)(void);

  v47 = (*(unsigned int *)(v46 - 176) | ((unint64_t)(*(_DWORD *)(v46 - 176) < a4) << 32))
      + (*(unsigned int *)(v44 + 12) ^ 0x7BDEBC1FA9F7EFFFLL)
      + ((2 * *(unsigned int *)(v44 + 12)) & 0x153EFDFFELL)
      + (((a44 - 1488) | 0x900u) ^ 0x842143E0E80BD061);
  v48 = (*(unsigned int *)(v44 + 8) ^ 0x77F7DFAFDF77B77DLL)
      - 0x77F7DFAEE7097656
      + (((a44 + 706552666) & 0xD5E2D6FF ^ 0x1BEEF6E84) & (2 * *(unsigned int *)(v44 + 8)));
  v49 = v47 < 0xF86E4127;
  v50 = v47 > v48;
  if (v48 < 0xF86E4127 != v49)
    v50 = v49;
  v51 = (uint64_t (*)(void))(*(_QWORD *)(v45 + 8 * ((467 * !v50) ^ (a44 + 185))) - 8);
  *(_QWORD *)(v46 - 184) = v44;
  return v51();
}

void sub_1A27894EC()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  *(_DWORD *)(v0 + 12) = v3 + v2 + ((v1 + 1005679969) & 0xC40E8FBD ^ 0x99958D90);
  JUMPOUT(0x1A27890A8);
}

uint64_t sub_1A2789530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29)
{
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t (*v34)(void);

  v34 = (uint64_t (*)(void))(*(_QWORD *)(v31 + 8 * ((a29 * v30) ^ (v32 - 2180))) - 4);
  *(_QWORD *)(v33 - 184) = v29;
  return v34();
}

uint64_t sub_1A2789554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unsigned int a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)(v22 - 184) = 0;
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * ((((((a20 - 91250222) ^ (v20 == 0)) & 1) == 0) * ((a20 - 112739910) & 0x6B84975 ^ 0x917)) ^ a20)))();
}

uint64_t sub_1A27895B4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  _BOOL4 v7;
  _BOOL4 v8;
  uint64_t (*v9)(void);

  v4 = v1 & 0x57058D9;
  v5 = *(unsigned int *)(v3 - 176)
     + (*(unsigned int *)(v0 + 12) ^ 0xF9F7DB7DDEFDBEBFLL)
     + ((unint64_t)(*(_DWORD *)(v3 - 176) < ((v4 + 1311889711) & 0x11CE2F54 ^ 0x666A7EA7u)) << 32)
     + ((((v4 - 78) & 0xFFFFFFBALL | 0x44) ^ 0x1BDFB7DB8) & (2 * *(unsigned int *)(v0 + 12)))
     + 0x608248268B45D7ELL;
  v6 = (*(unsigned int *)(v0 + 8) ^ 0x7BF5FA7DFFF3DDF7)
     - 0x7BF5FA7D51D749C7
     + ((2 * *(unsigned int *)(v0 + 8)) & 0x1FFE7BBEELL);
  v7 = v5 < 0xAE1C9430;
  v8 = v5 > v6;
  if (v6 < 0xAE1C9430 != v7)
    v8 = v7;
  v9 = (uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1463 * !v8) ^ v4)) - 4);
  *(_QWORD *)(v3 - 184) = v0;
  return v9();
}

void sub_1A27896F4()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  *(_DWORD *)(v0 + 12) = v1 - 1718255113 + v3 + v2 + 1359;
  *(_QWORD *)(v4 - 184) = v0;
  JUMPOUT(0x1A2788C20);
}

uint64_t sub_1A2789748()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  if (v3)
    v2 = v0;
  *(_QWORD *)(v6 - 184) = v1;
  *(_DWORD *)(v6 - 192) = v2;
  return (*(uint64_t (**)(void))(v4 + 8 * (((*(_QWORD *)(v6 - 184) != 0) * (v5 - 1963)) ^ (v5 - 294))))();
}

void sub_1A2789770()
{
  JUMPOUT(0x1A2789780);
}

uint64_t sub_1A27897A8()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((725 * (((*v1 == 0) ^ (v0 - 91)) & 1)) ^ (v0 - 1115)))
                            - ((v0 - 84) | 0x54u)
                            + 2376))();
}

uint64_t sub_1A27897E8()
{
  _QWORD *v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = v0;
  (*(void (**)(void))(v2 - 256))();
  *v3 = 0;
  v3[1] = 0;
  v4 = (*(uint64_t (**)(_QWORD *))(v2 - 256))(v3);
  return v1(v4);
}

void sub_1A2789818()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(*(_QWORD *)(v1 - 224) + 48) = v0;
}

uint64_t sub_1A278985C(unint64_t a1)
{
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)a1
                                         - 2106769199
                                         * (((a1 ^ 0x4215416240090005) & 0x6277E962D019CD85 | (a1 ^ 0x110004880A62206ALL) & 0x9D88169D2FE6327ALL) ^ 0x1304FD8425970B5ALL)))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_1A2789904(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)(((((v2 - 513) | 0x201) - 720) * (a1 == 0)) ^ (v2 + 903)))
                            - v2
                            + 805))();
}

uint64_t sub_1A2789944(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_1A27899A4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (932829133 * ((-2 - ((a1 | 0x267BE018) + (~(_DWORD)a1 | 0xD9841FE7))) ^ 0x79CF426A));
  off_1E47CDD30[v1 - 1398]();
  __asm { BR              X8 }
}

uint64_t sub_1A2789ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11)
{
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;

  (*(void (**)(uint64_t *))(v11 + 8 * (v13 ^ 0x589)))(&a9);
  v14 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(v11
                                                                                                + 8
                                                                                                * ((v13 + 968) ^ 0x966)))(&a9, 3, 56, 64, a11, 0, 0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v12
                                        + 8
                                        * ((217
                                          * (((2 * v14) & 0xEEF5FFF6) + (v14 ^ 0xF77AFFFB) + 1809174206 != ((v13 + 1787812438) & 0x957028FE ^ 0x6350C647))) ^ (v13 + 968)))
                            - 8))();
}

uint64_t sub_1A2789B8C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v1 + 8 * ((52 * (a1 >= 125501451)) ^ (v2 - 1885))))();
}

uint64_t sub_1A2789BB8@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v1 + 305) ^ (50 * (a1 == v2))))
                            - ((v1 + 305) ^ 0x6D2)))();
}

uint64_t sub_1A2789BEC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t result;
  unsigned int v5;

  result = (*(uint64_t (**)(_QWORD))(v2 + 8 * (v0 - 1034)))(v5);
  *(_DWORD *)(v1 + 12) = v3;
  return result;
}

void sub_1A2789D7C(uint64_t a1)
{
  __asm { BR              X13 }
}

uint64_t sub_1A2789E1C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD v12[3];
  unsigned int v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v6 = v4[3];
  v7 = v4[9];
  v8 = v4[5];
  v10 = *v4;
  v9 = v4[1];
  v12[0] = *((_QWORD *)off_1E47CDD30[a1 + 2072213758] + a1 + 2072214151);
  v12[1] = v3 - ((2 * v3) & 0xB458574F6496B6F2) + 0x5A2C2BA7B24B5B79;
  v12[2] = v10;
  v13 = (v2 ^ 0xF67E7FEF) + 1338364767 + ((2 * v2) & 0xECFCFFDE);
  v14 = 1526419896;
  v15 = v8;
  v16 = (v1 ^ 0x7EFE535E) - 951713808 + ((2 * v1) & 0xFDFCA6BC);
  v17 = 0;
  v18 = 2083507214;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 1178882894;
  v23 = v9;
  v24 = v7;
  v25 = v6;
  v26 = 55;
  *(_DWORD *)(v5 - 32) = a1 + 253222187 * ((((v5 - 48) | 0x4B78EAB) - ((v5 - 48) & 0x4B78EAB)) ^ 0xCEE24977) - 21021237;
  *(_QWORD *)(v5 - 40) = v12;
  result = ((uint64_t (*)(uint64_t))off_1E47CDD30[a1 ^ 0x847C8734])(v5 - 48);
  *((_DWORD *)v4 + 5) = *(_DWORD *)(v5 - 48) - 1718253555;
  return result;
}

void __getAMSUIPrivacyViewControllerClass_block_invoke_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AppleMediaServicesUILibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SSPrivacyController.m"), 31, CFSTR("%s"), *a1);

  __break(1u);
}

void __getAMSUIPrivacyViewControllerClass_block_invoke_cold_2()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAMSUIPrivacyViewControllerClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SSPrivacyController.m"), 33, CFSTR("Unable to find class %s"), "AMSUIPrivacyViewController");

  __break(1u);
}

void __getOBBundleClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getOBBundleClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SSPrivacyController.m"), 34, CFSTR("Unable to find class %s"), "OBBundle");

  __break(1u);
}

void OnBoardingKitLibrary_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *OnBoardingKitLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SSPrivacyController.m"), 32, CFSTR("%s"), *a1);

  __break(1u);
}

void __getOBPrivacyFlowClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getOBPrivacyFlowClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SSPrivacyController.m"), 35, CFSTR("Unable to find class %s"), "OBPrivacyFlow");

  __break(1u);
}

void __getISStoreURLOperationClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getISStoreURLOperationClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SSPrivacyController.m"), 43, CFSTR("Unable to find class %s"), "ISStoreURLOperation");

  __break(1u);
}

void iTunesStoreLibrary_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *iTunesStoreLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SSPrivacyController.m"), 40, CFSTR("%s"), *a1);

  __break(1u);
}

void __getISProtocolDataProviderClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getISProtocolDataProviderClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SSPrivacyController.m"), 41, CFSTR("Unable to find class %s"), "ISProtocolDataProvider");

  __break(1u);
}

void __getISOperationQueueClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getISOperationQueueClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SSPrivacyController.m"), 42, CFSTR("Unable to find class %s"), "ISOperationQueue");

  __break(1u);
}

void getAAFollowUpUserInfoAccountIdentifier_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSString *getAAFollowUpUserInfoAccountIdentifier(void)");
  objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v0, CFSTR("SSFollowUpController.m"), 35, CFSTR("%s"), OUTLINED_FUNCTION_0());

  __break(1u);
}

void getAAFollowUpUserInfoAltDSID_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSString *getAAFollowUpUserInfoAltDSID(void)");
  objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v0, CFSTR("SSFollowUpController.m"), 36, CFSTR("%s"), OUTLINED_FUNCTION_0());

  __break(1u);
}

void __getFLFollowUpControllerClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getFLFollowUpControllerClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SSFollowUpController.m"), 31, CFSTR("Unable to find class %s"), "FLFollowUpController");

  __break(1u);
}

void CoreFollowUpLibrary_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreFollowUpLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SSFollowUpController.m"), 29, CFSTR("%s"), *a1);

  __break(1u);
}

void AppleAccountLibrary_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AppleAccountLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SSFollowUpController.m"), 28, CFSTR("%s"), *a1);

  __break(1u);
}

void __getFLFollowUpActionClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getFLFollowUpActionClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SSFollowUpController.m"), 30, CFSTR("Unable to find class %s"), "FLFollowUpAction");

  __break(1u);
}

void __getFLFollowUpItemClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getFLFollowUpItemClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SSFollowUpController.m"), 32, CFSTR("Unable to find class %s"), "FLFollowUpItem");

  __break(1u);
  AMSGenerateLogCorrelationKey();
}

uint64_t AMSGenerateLogCorrelationKey()
{
  return MEMORY[0x1E0CFD838]();
}

uint64_t AMSHashIfNeeded()
{
  return MEMORY[0x1E0CFD850]();
}

uint64_t AMSLogableError()
{
  return MEMORY[0x1E0CFD860]();
}

uint64_t AMSSetLogKeyIfNeeded()
{
  return MEMORY[0x1E0CFD9B0]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1E0D15428]();
}

unsigned __int8 *__cdecl CC_MD5(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1E0C80308](data, *(_QWORD *)&len, md);
}

unsigned __int8 *__cdecl CC_SHA1(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1E0C80328](data, *(_QWORD *)&len, md);
}

unsigned __int8 *__cdecl CC_SHA512(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1E0C803A8](data, *(_QWORD *)&len, md);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  CFAbsoluteTime result;

  MEMORY[0x1E0C97C58]();
  return result;
}

CFAllocatorRef CFAllocatorCreate(CFAllocatorRef allocator, CFAllocatorContext *context)
{
  return (CFAllocatorRef)MEMORY[0x1E0C97CA8](allocator, context);
}

void CFArrayAppendValue(CFMutableArrayRef theArray, const void *value)
{
  MEMORY[0x1E0C97CF8](theArray, value);
}

CFArrayRef CFArrayCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFArrayCallBacks *callBacks)
{
  return (CFArrayRef)MEMORY[0x1E0C97D20](allocator, values, numValues, callBacks);
}

CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks)
{
  return (CFMutableArrayRef)MEMORY[0x1E0C97D38](allocator, capacity, callBacks);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return MEMORY[0x1E0C97D60](theArray);
}

CFIndex CFArrayGetFirstIndexOfValue(CFArrayRef theArray, CFRange range, const void *value)
{
  return MEMORY[0x1E0C97D78](theArray, range.location, range.length, value);
}

CFTypeID CFArrayGetTypeID(void)
{
  return MEMORY[0x1E0C97D90]();
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return (const void *)MEMORY[0x1E0C97D98](theArray, idx);
}

void CFArrayRemoveValueAtIndex(CFMutableArrayRef theArray, CFIndex idx)
{
  MEMORY[0x1E0C97DC0](theArray, idx);
}

CFTypeID CFBooleanGetTypeID(void)
{
  return MEMORY[0x1E0C97FC8]();
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return MEMORY[0x1E0C97FE0](BOOLean);
}

CFDictionaryRef CFBundleGetInfoDictionary(CFBundleRef bundle)
{
  return (CFDictionaryRef)MEMORY[0x1E0C98130](bundle);
}

CFBundleRef CFBundleGetMainBundle(void)
{
  return (CFBundleRef)MEMORY[0x1E0C98150]();
}

uint64_t CFCachedURLResponseCopyReceiverDataArray()
{
  return MEMORY[0x1E0C92740]();
}

CFDataRef CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length)
{
  return (CFDataRef)MEMORY[0x1E0C983A0](allocator, bytes, length);
}

CFDataRef CFDataCreateWithBytesNoCopy(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length, CFAllocatorRef bytesDeallocator)
{
  return (CFDataRef)MEMORY[0x1E0C983C8](allocator, bytes, length, bytesDeallocator);
}

const UInt8 *__cdecl CFDataGetBytePtr(CFDataRef theData)
{
  return (const UInt8 *)MEMORY[0x1E0C983E0](theData);
}

void CFDataGetBytes(CFDataRef theData, CFRange range, UInt8 *buffer)
{
  MEMORY[0x1E0C983F0](theData, range.location, range.length, buffer);
}

CFIndex CFDataGetLength(CFDataRef theData)
{
  return MEMORY[0x1E0C983F8](theData);
}

CFTypeID CFDataGetTypeID(void)
{
  return MEMORY[0x1E0C98418]();
}

CFDateRef CFDateCreate(CFAllocatorRef allocator, CFAbsoluteTime at)
{
  return (CFDateRef)MEMORY[0x1E0C98448](allocator, at);
}

CFDateFormatterRef CFDateFormatterCreate(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle)
{
  return (CFDateFormatterRef)MEMORY[0x1E0C98460](allocator, locale, dateStyle, timeStyle);
}

CFStringRef CFDateFormatterCreateStringWithAbsoluteTime(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFAbsoluteTime at)
{
  return (CFStringRef)MEMORY[0x1E0C98488](allocator, formatter, at);
}

CFStringRef CFDateFormatterCreateStringWithDate(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFDateRef date)
{
  return (CFStringRef)MEMORY[0x1E0C98490](allocator, formatter, date);
}

void CFDateFormatterSetFormat(CFDateFormatterRef formatter, CFStringRef formatString)
{
  MEMORY[0x1E0C984C0](formatter, formatString);
}

CFAbsoluteTime CFDateGetAbsoluteTime(CFDateRef theDate)
{
  CFAbsoluteTime result;

  MEMORY[0x1E0C984D8](theDate);
  return result;
}

CFTypeID CFDateGetTypeID(void)
{
  return MEMORY[0x1E0C984E8]();
}

void CFDictionaryAddValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
  MEMORY[0x1E0C98500](theDict, key, value);
}

CFDictionaryRef CFDictionaryCreate(CFAllocatorRef allocator, const void **keys, const void **values, CFIndex numValues, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFDictionaryRef)MEMORY[0x1E0C98530](allocator, keys, values, numValues, keyCallBacks, valueCallBacks);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFMutableDictionaryRef)MEMORY[0x1E0C98550](allocator, capacity, keyCallBacks, valueCallBacks);
}

CFTypeID CFDictionaryGetTypeID(void)
{
  return MEMORY[0x1E0C985A8]();
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return (const void *)MEMORY[0x1E0C985B8](theDict, key);
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
  MEMORY[0x1E0C98610](theDict, key, value);
}

Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2)
{
  return MEMORY[0x1E0C98620](cf1, cf2);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1E0C98738](cf);
}

CFAbsoluteTime CFGregorianDateGetAbsoluteTime(CFGregorianDate gdate, CFTimeZoneRef tz)
{
  CFAbsoluteTime result;

  MEMORY[0x1E0C98748](*(_QWORD *)&gdate.year, *(_QWORD *)&gdate.second, tz);
  return result;
}

Boolean CFHTTPMessageAppendBytes(CFHTTPMessageRef message, const UInt8 *newBytes, CFIndex numBytes)
{
  return MEMORY[0x1E0C927D8](message, newBytes, numBytes);
}

CFDictionaryRef CFHTTPMessageCopyAllHeaderFields(CFHTTPMessageRef message)
{
  return (CFDictionaryRef)MEMORY[0x1E0C927E8](message);
}

CFDataRef CFHTTPMessageCopyBody(CFHTTPMessageRef message)
{
  return (CFDataRef)MEMORY[0x1E0C927F0](message);
}

CFStringRef CFHTTPMessageCopyRequestMethod(CFHTTPMessageRef request)
{
  return (CFStringRef)MEMORY[0x1E0C92800](request);
}

CFURLRef CFHTTPMessageCopyRequestURL(CFHTTPMessageRef request)
{
  return (CFURLRef)MEMORY[0x1E0C92808](request);
}

CFStringRef CFHTTPMessageCopyResponseStatusLine(CFHTTPMessageRef response)
{
  return (CFStringRef)MEMORY[0x1E0C92810](response);
}

CFDataRef CFHTTPMessageCopySerializedMessage(CFHTTPMessageRef message)
{
  return (CFDataRef)MEMORY[0x1E0C92818](message);
}

CFHTTPMessageRef CFHTTPMessageCreateEmpty(CFAllocatorRef alloc, Boolean isRequest)
{
  return (CFHTTPMessageRef)MEMORY[0x1E0C92830](alloc, isRequest);
}

CFHTTPMessageRef CFHTTPMessageCreateResponse(CFAllocatorRef alloc, CFIndex statusCode, CFStringRef statusDescription, CFStringRef httpVersion)
{
  return (CFHTTPMessageRef)MEMORY[0x1E0C92840](alloc, statusCode, statusDescription, httpVersion);
}

Boolean CFHTTPMessageIsHeaderComplete(CFHTTPMessageRef message)
{
  return MEMORY[0x1E0C92858](message);
}

void CFHTTPMessageSetBody(CFHTTPMessageRef message, CFDataRef bodyData)
{
  MEMORY[0x1E0C92860](message, bodyData);
}

void CFHTTPMessageSetHeaderFieldValue(CFHTTPMessageRef message, CFStringRef headerField, CFStringRef value)
{
  MEMORY[0x1E0C92868](message, headerField, value);
}

CFLocaleRef CFLocaleCopyCurrent(void)
{
  return (CFLocaleRef)MEMORY[0x1E0C98770]();
}

CFTypeRef CFMakeCollectable(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1E0C98858](cf);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
  MEMORY[0x1E0C988B0](center, observer, callBack, name, object, suspensionBehavior);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988B8]();
}

CFNotificationCenterRef CFNotificationCenterGetDistributedCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988C8]();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
  MEMORY[0x1E0C988E0](center, name, object, userInfo, deliverImmediately);
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
  MEMORY[0x1E0C98900](center, observer, name, object);
}

CFTypeID CFNullGetTypeID(void)
{
  return MEMORY[0x1E0C98908]();
}

CFNumberRef CFNumberCreate(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr)
{
  return (CFNumberRef)MEMORY[0x1E0C98928](allocator, theType, valuePtr);
}

CFTypeID CFNumberGetTypeID(void)
{
  return MEMORY[0x1E0C989B8]();
}

Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr)
{
  return MEMORY[0x1E0C989C0](number, theType, valuePtr);
}

Boolean CFNumberIsFloatType(CFNumberRef number)
{
  return MEMORY[0x1E0C989D0](number);
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return MEMORY[0x1E0C98A30](applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A40](key, applicationID);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x1E0C98A70](key, applicationID, keyExistsAndHasValidFormat);
}

CFIndex CFPreferencesGetAppIntegerValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x1E0C98A78](key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
  MEMORY[0x1E0C98A80](key, value, applicationID);
}

Boolean CFReadStreamSetProperty(CFReadStreamRef stream, CFStreamPropertyKey propertyName, CFTypeRef propertyValue)
{
  return MEMORY[0x1E0C98BA8](stream, propertyName, propertyValue);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1E0C98BD0](cf);
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
  MEMORY[0x1E0C98BF8](rl, source, mode);
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return (CFRunLoopRef)MEMORY[0x1E0C98C30]();
}

void CFRunLoopPerformBlock(CFRunLoopRef rl, CFTypeRef mode, void *block)
{
  MEMORY[0x1E0C98C80](rl, mode, block);
}

CFRunLoopRunResult CFRunLoopRunInMode(CFRunLoopMode mode, CFTimeInterval seconds, Boolean returnAfterSourceHandled)
{
  return MEMORY[0x1E0C98CB0](mode, returnAfterSourceHandled, seconds);
}

void CFRunLoopStop(CFRunLoopRef rl)
{
  MEMORY[0x1E0C98D00](rl);
}

void CFRunLoopWakeUp(CFRunLoopRef rl)
{
  MEMORY[0x1E0C98D68](rl);
}

void CFSetAddValue(CFMutableSetRef theSet, const void *value)
{
  MEMORY[0x1E0C98D70](theSet, value);
}

void CFSetApplyFunction(CFSetRef theSet, CFSetApplierFunction applier, void *context)
{
  MEMORY[0x1E0C98D78](theSet, applier, context);
}

CFSetRef CFSetCreateCopy(CFAllocatorRef allocator, CFSetRef theSet)
{
  return (CFSetRef)MEMORY[0x1E0C98D90](allocator, theSet);
}

CFMutableSetRef CFSetCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFSetCallBacks *callBacks)
{
  return (CFMutableSetRef)MEMORY[0x1E0C98D98](allocator, capacity, callBacks);
}

void CFSetRemoveValue(CFMutableSetRef theSet, const void *value)
{
  MEMORY[0x1E0C98DE0](theSet, value);
}

CFSocketRef CFSocketCreate(CFAllocatorRef allocator, SInt32 protocolFamily, SInt32 socketType, SInt32 protocol, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context)
{
  return (CFSocketRef)MEMORY[0x1E0C98E10](allocator, *(_QWORD *)&protocolFamily, *(_QWORD *)&socketType, *(_QWORD *)&protocol, callBackTypes, callout, context);
}

CFRunLoopSourceRef CFSocketCreateRunLoopSource(CFAllocatorRef allocator, CFSocketRef s, CFIndex order)
{
  return (CFRunLoopSourceRef)MEMORY[0x1E0C98E18](allocator, s, order);
}

CFSocketNativeHandle CFSocketGetNative(CFSocketRef s)
{
  return MEMORY[0x1E0C98E38](s);
}

void CFSocketInvalidate(CFSocketRef s)
{
  MEMORY[0x1E0C98E50](s);
}

CFSocketError CFSocketSetAddress(CFSocketRef s, CFDataRef address)
{
  return MEMORY[0x1E0C98E60](s, address);
}

void CFStreamCreatePairWithSocket(CFAllocatorRef alloc, CFSocketNativeHandle sock, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream)
{
  MEMORY[0x1E0C98EC8](alloc, *(_QWORD *)&sock, readStream, writeStream);
}

CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions)
{
  return MEMORY[0x1E0C98F10](theString1, theString2, compareOptions);
}

unint64_t CFStringConvertEncodingToNSStringEncoding(CFStringEncoding encoding)
{
  return MEMORY[0x1E0C98F30](*(_QWORD *)&encoding);
}

CFStringEncoding CFStringConvertIANACharSetNameToEncoding(CFStringRef theString)
{
  return MEMORY[0x1E0C98F40](theString);
}

CFStringRef CFStringCreateCopy(CFAllocatorRef alloc, CFStringRef theString)
{
  return (CFStringRef)MEMORY[0x1E0C98F78](alloc, theString);
}

CFDataRef CFStringCreateExternalRepresentation(CFAllocatorRef alloc, CFStringRef theString, CFStringEncoding encoding, UInt8 lossByte)
{
  return (CFDataRef)MEMORY[0x1E0C98F80](alloc, theString, *(_QWORD *)&encoding, lossByte);
}

CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding)
{
  return (CFStringRef)MEMORY[0x1E0C98FD0](alloc, cStr, *(_QWORD *)&encoding);
}

Boolean CFStringGetCString(CFStringRef theString, char *buffer, CFIndex bufferSize, CFStringEncoding encoding)
{
  return MEMORY[0x1E0C99098](theString, buffer, bufferSize, *(_QWORD *)&encoding);
}

CFIndex CFStringGetLength(CFStringRef theString)
{
  return MEMORY[0x1E0C99100](theString);
}

CFIndex CFStringGetMaximumSizeForEncoding(CFIndex length, CFStringEncoding encoding)
{
  return MEMORY[0x1E0C99118](length, *(_QWORD *)&encoding);
}

CFStringEncoding CFStringGetSystemEncoding(void)
{
  return MEMORY[0x1E0C99168]();
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x1E0C99170]();
}

uint64_t CFURLCacheAddCachedResponseForRequest()
{
  return MEMORY[0x1E0C928F0]();
}

uint64_t CFURLCacheCopyResponseForRequest()
{
  return MEMORY[0x1E0C928F8]();
}

uint64_t CFURLCacheRemoveAllCachedResponses()
{
  return MEMORY[0x1E0C92910]();
}

uint64_t CFURLCacheSetMemoryCapacity()
{
  return MEMORY[0x1E0C92920]();
}

CFURLRef CFURLCopyAbsoluteURL(CFURLRef relativeURL)
{
  return (CFURLRef)MEMORY[0x1E0C992C8](relativeURL);
}

CFStringRef CFURLGetString(CFURLRef anURL)
{
  return (CFStringRef)MEMORY[0x1E0C994A0](anURL);
}

CFTypeID CFURLGetTypeID(void)
{
  return MEMORY[0x1E0C994B8]();
}

uint64_t CFURLRequestSetShouldStartSynchronously()
{
  return MEMORY[0x1E0C92A28]();
}

uint64_t CFURLResponseCopyPeerAddress()
{
  return MEMORY[0x1E0C92A40]();
}

uint64_t CFURLResponseGetHTTPResponse()
{
  return MEMORY[0x1E0C92A68]();
}

uint64_t CFURLResponseSetExpectedContentLength()
{
  return MEMORY[0x1E0C92A80]();
}

uint64_t CFURLResponseSetMIMEType()
{
  return MEMORY[0x1E0C92A88]();
}

CFUUIDRef CFUUIDCreate(CFAllocatorRef alloc)
{
  return (CFUUIDRef)MEMORY[0x1E0C99518](alloc);
}

CFUUIDRef CFUUIDCreateFromString(CFAllocatorRef alloc, CFStringRef uuidStr)
{
  return (CFUUIDRef)MEMORY[0x1E0C99520](alloc, uuidStr);
}

CFUUIDRef CFUUIDCreateFromUUIDBytes(CFAllocatorRef alloc, CFUUIDBytes bytes)
{
  return (CFUUIDRef)MEMORY[0x1E0C99530](alloc, *(_QWORD *)&bytes.byte0, *(_QWORD *)&bytes.byte8);
}

CFTypeID CFUUIDGetTypeID(void)
{
  return MEMORY[0x1E0C99560]();
}

CFUUIDBytes CFUUIDGetUUIDBytes(CFUUIDRef uuid)
{
  uint64_t v1;
  uint64_t v2;
  CFUUIDBytes result;

  v1 = MEMORY[0x1E0C99568](uuid);
  result.byte8 = v2;
  result.byte9 = BYTE1(v2);
  result.byte10 = BYTE2(v2);
  result.byte11 = BYTE3(v2);
  result.byte12 = BYTE4(v2);
  result.byte13 = BYTE5(v2);
  result.byte14 = BYTE6(v2);
  result.byte15 = HIBYTE(v2);
  result.byte0 = v1;
  result.byte1 = BYTE1(v1);
  result.byte2 = BYTE2(v1);
  result.byte3 = BYTE3(v1);
  result.byte4 = BYTE4(v1);
  result.byte5 = BYTE5(v1);
  result.byte6 = BYTE6(v1);
  result.byte7 = HIBYTE(v1);
  return result;
}

Boolean CFWriteStreamSetProperty(CFWriteStreamRef stream, CFStreamPropertyKey propertyName, CFTypeRef propertyValue)
{
  return MEMORY[0x1E0C99670](stream, propertyName, propertyValue);
}

uint64_t CPCopyBundleIdentifierFromAuditToken()
{
  return MEMORY[0x1E0CFA248]();
}

uint64_t CPCopySharedResourcesPreferencesDomainForDomain()
{
  return MEMORY[0x1E0CFA250]();
}

uint64_t CPFSSizeStringsWithStyle()
{
  return MEMORY[0x1E0CFA278]();
}

uint64_t CPSharedResourcesDirectory()
{
  return MEMORY[0x1E0CFA6C0]();
}

uint64_t CPSqliteDatabaseDelete()
{
  return MEMORY[0x1E0CFA798]();
}

uint64_t CPSystemRootDirectory()
{
  return MEMORY[0x1E0CFA908]();
}

uint64_t CSArchitectureIs64Bit()
{
  return MEMORY[0x1E0D19F70]();
}

uint64_t CSIsNull()
{
  return MEMORY[0x1E0D19FB8]();
}

uint64_t CSSourceInfoGetFilename()
{
  return MEMORY[0x1E0D1A040]();
}

uint64_t CSSourceInfoGetLineNumber()
{
  return MEMORY[0x1E0D1A050]();
}

uint64_t CSSymbolGetName()
{
  return MEMORY[0x1E0D1A088]();
}

uint64_t CSSymbolGetRange()
{
  return MEMORY[0x1E0D1A090]();
}

uint64_t CSSymbolOwnerGetName()
{
  return MEMORY[0x1E0D1A130]();
}

uint64_t CSSymbolOwnerGetSourceInfoWithAddress()
{
  return MEMORY[0x1E0D1A158]();
}

uint64_t CSSymbolicatorCreateWithTaskFlagsAndNotification()
{
  return MEMORY[0x1E0D1A258]();
}

uint64_t CSSymbolicatorGetArchitecture()
{
  return MEMORY[0x1E0D1A2C8]();
}

uint64_t CSSymbolicatorGetSymbolOwnerWithAddressAtTime()
{
  return MEMORY[0x1E0D1A330]();
}

uint64_t CSSymbolicatorGetSymbolWithAddressAtTime()
{
  return MEMORY[0x1E0D1A350]();
}

uint64_t GSMainScreenScaleFactor()
{
  return MEMORY[0x1E0D27C58]();
}

io_object_t IOIteratorNext(io_iterator_t iterator)
{
  return MEMORY[0x1E0CBB668](*(_QWORD *)&iterator);
}

IONotificationPortRef IONotificationPortCreate(mach_port_t mainPort)
{
  return (IONotificationPortRef)MEMORY[0x1E0CBB698](*(_QWORD *)&mainPort);
}

void IONotificationPortDestroy(IONotificationPortRef notify)
{
  MEMORY[0x1E0CBB6A0](notify);
}

void IONotificationPortSetDispatchQueue(IONotificationPortRef notify, dispatch_queue_t queue)
{
  MEMORY[0x1E0CBB6B8](notify, queue);
}

kern_return_t IOObjectRelease(io_object_t object)
{
  return MEMORY[0x1E0CBB6F0](*(_QWORD *)&object);
}

CFTypeRef IORegistryEntryCreateCFProperty(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options)
{
  return (CFTypeRef)MEMORY[0x1E0CBB900](*(_QWORD *)&entry, key, allocator, *(_QWORD *)&options);
}

kern_return_t IORegistryEntryGetParentEntry(io_registry_entry_t entry, const io_name_t plane, io_registry_entry_t *parent)
{
  return MEMORY[0x1E0CBB958](*(_QWORD *)&entry, plane, parent);
}

kern_return_t IOServiceAddInterestNotification(IONotificationPortRef notifyPort, io_service_t service, const io_name_t interestType, IOServiceInterestCallback callback, void *refCon, io_object_t *notification)
{
  return MEMORY[0x1E0CBB9C0](notifyPort, *(_QWORD *)&service, interestType, callback, refCon, notification);
}

io_service_t IOServiceGetMatchingService(mach_port_t mainPort, CFDictionaryRef matching)
{
  return MEMORY[0x1E0CBB9E0](*(_QWORD *)&mainPort, matching);
}

kern_return_t IOServiceGetMatchingServices(mach_port_t mainPort, CFDictionaryRef matching, io_iterator_t *existing)
{
  return MEMORY[0x1E0CBB9F0](*(_QWORD *)&mainPort, matching, existing);
}

CFMutableDictionaryRef IOServiceMatching(const char *name)
{
  return (CFMutableDictionaryRef)MEMORY[0x1E0CBBA00](name);
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1E0DE2B20]();
}

uint64_t MGCopyMultipleAnswers()
{
  return MEMORY[0x1E0DE2B40]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x1E0DE2B50]();
}

uint64_t MGGetFloat32Answer()
{
  return MEMORY[0x1E0DE2B58]();
}

uint64_t MGGetSInt32Answer()
{
  return MEMORY[0x1E0DE2B70]();
}

uint64_t MKBDeviceUnlockedSinceBoot()
{
  return MEMORY[0x1E0D4E4A0]();
}

uint64_t MTShouldPlayHDRVideo()
{
  return MEMORY[0x1E0CC3200]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1E0CB28A0](aClassName);
}

NSString *NSHomeDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB2C00]();
}

void NSLog(NSString *format, ...)
{
  MEMORY[0x1E0CB2D88](format);
}

void NSLogv(NSString *format, va_list args)
{
  MEMORY[0x1E0CB2D90](format, args);
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return (SEL)MEMORY[0x1E0CB3190](aSelectorName);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1E0CB3230](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB3250]();
}

uint64_t PBDataWriterWriteBOOLField()
{
  return MEMORY[0x1E0D82C08]();
}

uint64_t PBDataWriterWriteDataField()
{
  return MEMORY[0x1E0D82C20]();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return MEMORY[0x1E0D82C30]();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return MEMORY[0x1E0D82C60]();
}

uint64_t PBDataWriterWriteInt64Field()
{
  return MEMORY[0x1E0D82C70]();
}

uint64_t PBDataWriterWriteStringField()
{
  return MEMORY[0x1E0D82CA0]();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return MEMORY[0x1E0D82CA8]();
}

uint64_t PBDataWriterWriteUint64Field()
{
  return MEMORY[0x1E0D82CC8]();
}

uint64_t PBReaderPlaceMark()
{
  return MEMORY[0x1E0D82CD8]();
}

uint64_t PBReaderReadData()
{
  return MEMORY[0x1E0D82CE8]();
}

uint64_t PBReaderReadString()
{
  return MEMORY[0x1E0D82CF8]();
}

uint64_t PBReaderRecallMark()
{
  return MEMORY[0x1E0D82D18]();
}

uint64_t PBReaderSkipValueWithTag()
{
  return MEMORY[0x1E0D82D20]();
}

uint64_t SBSCopyDisplayIdentifiers()
{
  return MEMORY[0x1E0DAB5F8]();
}

uint64_t SecCertificateCopyProperties()
{
  return MEMORY[0x1E0CD5FC0]();
}

uint64_t SecCertificateCopySubjectPublicKeyInfoSHA256Digest()
{
  return MEMORY[0x1E0CD5FF0]();
}

SecCertificateRef SecCertificateCreateWithData(CFAllocatorRef allocator, CFDataRef data)
{
  return (SecCertificateRef)MEMORY[0x1E0CD6010](allocator, data);
}

uint64_t SecCmsContentInfoGetContent()
{
  return MEMORY[0x1E0CD6088]();
}

uint64_t SecCmsContentInfoGetContentTypeTag()
{
  return MEMORY[0x1E0CD6090]();
}

uint64_t SecCmsDecoderCreate()
{
  return MEMORY[0x1E0CD60B8]();
}

uint64_t SecCmsDecoderDestroy()
{
  return MEMORY[0x1E0CD60C0]();
}

uint64_t SecCmsDecoderFinish()
{
  return MEMORY[0x1E0CD60C8]();
}

uint64_t SecCmsDecoderUpdate()
{
  return MEMORY[0x1E0CD60D0]();
}

uint64_t SecCmsMessageContentLevel()
{
  return MEMORY[0x1E0CD6110]();
}

uint64_t SecCmsMessageContentLevelCount()
{
  return MEMORY[0x1E0CD6118]();
}

uint64_t SecCmsMessageDestroy()
{
  return MEMORY[0x1E0CD6128]();
}

uint64_t SecCmsMessageGetContent()
{
  return MEMORY[0x1E0CD6138]();
}

uint64_t SecCmsSignedDataGetCertificateList()
{
  return MEMORY[0x1E0CD6168]();
}

OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef *result)
{
  return MEMORY[0x1E0CD6290](attributes, result);
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return MEMORY[0x1E0CD6298](query, result);
}

OSStatus SecItemUpdate(CFDictionaryRef query, CFDictionaryRef attributesToUpdate)
{
  return MEMORY[0x1E0CD62D8](query, attributesToUpdate);
}

SecPolicyRef SecPolicyCreateWithProperties(CFTypeRef policyIdentifier, CFDictionaryRef properties)
{
  return (SecPolicyRef)MEMORY[0x1E0CD6540](policyIdentifier, properties);
}

CFTypeRef SecTaskCopyValueForEntitlement(SecTaskRef task, CFStringRef entitlement, CFErrorRef *error)
{
  return (CFTypeRef)MEMORY[0x1E0CD65F0](task, entitlement, error);
}

SecTaskRef SecTaskCreateFromSelf(CFAllocatorRef allocator)
{
  return (SecTaskRef)MEMORY[0x1E0CD6610](allocator);
}

SecTaskRef SecTaskCreateWithAuditToken(CFAllocatorRef allocator, audit_token_t *token)
{
  return (SecTaskRef)MEMORY[0x1E0CD6620](allocator, token);
}

uint64_t SecTrustCopyInfo()
{
  return MEMORY[0x1E0CD6668]();
}

OSStatus SecTrustCreateWithCertificates(CFTypeRef certificates, CFTypeRef policies, SecTrustRef *trust)
{
  return MEMORY[0x1E0CD6698](certificates, policies, trust);
}

OSStatus SecTrustEvaluate(SecTrustRef trust, SecTrustResultType *result)
{
  return MEMORY[0x1E0CD66A8](trust, result);
}

OSStatus SecTrustSetAnchorCertificates(SecTrustRef trust, CFArrayRef anchorCertificates)
{
  return MEMORY[0x1E0CD6710](trust, anchorCertificates);
}

OSStatus SecTrustSetAnchorCertificatesOnly(SecTrustRef trust, Boolean anchorCertificatesOnly)
{
  return MEMORY[0x1E0CD6718](trust, anchorCertificatesOnly);
}

OSStatus SecTrustSetPolicies(SecTrustRef trust, CFTypeRef policies)
{
  return MEMORY[0x1E0CD6748](trust, policies);
}

OSStatus SecTrustSetVerifyDate(SecTrustRef trust, CFDateRef verifyDate)
{
  return MEMORY[0x1E0CD6760](trust, verifyDate);
}

Boolean UTTypeConformsTo(CFStringRef inUTI, CFStringRef inConformsToUTI)
{
  return MEMORY[0x1E0CA5940](inUTI, inConformsToUTI);
}

void _Block_object_assign(void *a1, const void *a2, const int a3)
{
  MEMORY[0x1E0C80940](a1, a2, *(_QWORD *)&a3);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

uint64_t _CFCopySystemVersionDictionary()
{
  return MEMORY[0x1E0C9A0D0]();
}

uint64_t _CFURLCacheLoadMemoryFromDiskNow()
{
  return MEMORY[0x1E0C92F38]();
}

uint64_t _CFURLCachePersistMemoryToDiskNow()
{
  return MEMORY[0x1E0C92F40]();
}

uint64_t _CFURLRequestSetProtocolProperty()
{
  return MEMORY[0x1E0C92F68]();
}

uint64_t _CFURLRequestSetStorageSession()
{
  return MEMORY[0x1E0C92F70]();
}

uint64_t _CFURLStorageSessionCopyCache()
{
  return MEMORY[0x1E0C92F88]();
}

uint64_t _CFURLStorageSessionCreate()
{
  return MEMORY[0x1E0C92F98]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

void std::terminate(void)
{
  MEMORY[0x1E0DE4E18]();
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x1E0DE5080](a1);
}

int *__error(void)
{
  return (int *)MEMORY[0x1E0C80AC0]();
}

uint64_t __memset_chk()
{
  return MEMORY[0x1E0C80B78]();
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1E0C81010]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _os_log_send_and_compose_impl()
{
  return MEMORY[0x1E0C81068]();
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

uint32_t arc4random(void)
{
  return MEMORY[0x1E0C81570]();
}

int asprintf(char **a1, const char *a2, ...)
{
  return MEMORY[0x1E0C81608](a1, a2);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

int close(int a1)
{
  return MEMORY[0x1E0C82688](*(_QWORD *)&a1);
}

int deflate(z_streamp strm, int flush)
{
  return MEMORY[0x1E0DE92C0](strm, *(_QWORD *)&flush);
}

int deflateEnd(z_streamp strm)
{
  return MEMORY[0x1E0DE92D0](strm);
}

int deflateInit2_(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, const char *version, int stream_size)
{
  return MEMORY[0x1E0DE92D8](strm, *(_QWORD *)&level, *(_QWORD *)&method, *(_QWORD *)&windowBits, *(_QWORD *)&memLevel, *(_QWORD *)&strategy, version, *(_QWORD *)&stream_size);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82BC8](when, queue, block);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BE8](queue);
}

void dispatch_assert_queue_not_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BF8](queue);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

void dispatch_barrier_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C28](queue, block);
}

void dispatch_barrier_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C48](queue, block);
}

void dispatch_block_cancel(dispatch_block_t block)
{
  MEMORY[0x1E0C82C58](block);
}

dispatch_block_t dispatch_block_create(dispatch_block_flags_t flags, dispatch_block_t block)
{
  return (dispatch_block_t)MEMORY[0x1E0C82C60](flags, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1E0C82D00](identifier, flags);
}

void *__cdecl dispatch_get_specific(const void *key)
{
  return (void *)MEMORY[0x1E0C82D08](key);
}

void dispatch_group_async(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82D10](group, queue, block);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82D48](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E28](attr, frequency);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

void dispatch_queue_set_specific(dispatch_queue_t queue, const void *key, void *context, dispatch_function_t destructor)
{
  MEMORY[0x1E0C82E80](queue, key, context, destructor);
}

void dispatch_release(dispatch_object_t object)
{
  MEMORY[0x1E0C82E98](object);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x1E0C82EA0](object);
}

void dispatch_retain(dispatch_object_t object)
{
  MEMORY[0x1E0C82EA8](object);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1E0C82EC8](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82ED8](dsema, timeout);
}

void dispatch_set_target_queue(dispatch_object_t object, dispatch_queue_t queue)
{
  MEMORY[0x1E0C82F08](object, queue);
}

void dispatch_source_cancel(dispatch_source_t source)
{
  MEMORY[0x1E0C82F10](source);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1E0C82F20](type, handle, mask, queue);
}

uintptr_t dispatch_source_get_data(dispatch_source_t source)
{
  return MEMORY[0x1E0C82F28](source);
}

void dispatch_source_merge_data(dispatch_source_t source, uintptr_t value)
{
  MEMORY[0x1E0C82F40](source, value);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F48](source, handler);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F58](source, handler);
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
  MEMORY[0x1E0C82F78](source, start, interval, leeway);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x1E0C83038]();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x1E0C83040](__path, *(_QWORD *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1E0C83050](__handle, __symbol);
}

double drand48(void)
{
  double result;

  MEMORY[0x1E0C83070]();
  return result;
}

int dup(int a1)
{
  return MEMORY[0x1E0C83078](*(_QWORD *)&a1);
}

long double exp2(long double __x)
{
  long double result;

  MEMORY[0x1E0C83288](__x);
  return result;
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C83440](__x, __y);
  return result;
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

void freeifaddrs(ifaddrs *a1)
{
  MEMORY[0x1E0C834D0](a1);
}

int getifaddrs(ifaddrs **a1)
{
  return MEMORY[0x1E0C836C8](a1);
}

pid_t getpid(void)
{
  return MEMORY[0x1E0C83760]();
}

uid_t getuid(void)
{
  return MEMORY[0x1E0C83828]();
}

char *__cdecl inet_ntoa(in_addr a1)
{
  return (char *)MEMORY[0x1E0C83960](*(_QWORD *)&a1.s_addr);
}

const char *__cdecl inet_ntop(int a1, const void *a2, char *a3, socklen_t a4)
{
  return (const char *)MEMORY[0x1E0C83968](*(_QWORD *)&a1, a2, a3, *(_QWORD *)&a4);
}

long double log2(long double __x)
{
  long double result;

  MEMORY[0x1E0C83BE8](__x);
  return result;
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x1E0C83C50]();
}

mach_msg_return_t mach_msg(mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify)
{
  return MEMORY[0x1E0C83CB0](msg, *(_QWORD *)&option, *(_QWORD *)&send_size, *(_QWORD *)&rcv_size, *(_QWORD *)&rcv_name, *(_QWORD *)&timeout, *(_QWORD *)&notify);
}

void mach_msg_destroy(mach_msg_header_t *a1)
{
  MEMORY[0x1E0C83CC0](a1);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83EF8](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F00](size, type_id);
}

void mig_dealloc_reply_port(mach_port_t reply_port)
{
  MEMORY[0x1E0C840E8](*(_QWORD *)&reply_port);
}

mach_port_t mig_get_reply_port(void)
{
  return MEMORY[0x1E0C84100]();
}

void mig_put_reply_port(mach_port_t reply_port)
{
  MEMORY[0x1E0C84110](*(_QWORD *)&reply_port);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return MEMORY[0x1E0C843E8](*(_QWORD *)&token, state64);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x1E0C843F8](name);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

uint32_t notify_set_state(int token, uint64_t state64)
{
  return MEMORY[0x1E0C84428](*(_QWORD *)&token, state64);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1E0DE7BF0](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_end_catch(void)
{
  MEMORY[0x1E0DE7C80]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

void objc_exception_rethrow(void)
{
  MEMORY[0x1E0DE7C98]();
}

void objc_exception_throw(id exception)
{
  MEMORY[0x1E0DE7CA0](exception);
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1E0DE7CA8](object, key);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1E0DE7CD0](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeak(id *location)
{
  return (id)MEMORY[0x1E0DE7D00](location);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
  MEMORY[0x1E0DE7F40](object, key, value, policy);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F88](self, _cmd, newValue, offset);
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F90](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F98](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1E0DE7FC8](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1E0DE7FD0](obj);
}

void objc_terminate(void)
{
  MEMORY[0x1E0DE7FD8]();
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7FE0](a1);
}

int open(const char *a1, int a2, ...)
{
  return MEMORY[0x1E0C84480](a1, *(_QWORD *)&a2);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x1E0C84970]();
}

int proc_pidpath(int pid, void *buffer, uint32_t buffersize)
{
  return MEMORY[0x1E0C84C50](*(_QWORD *)&pid, buffer, *(_QWORD *)&buffersize);
}

int pthread_mutex_lock(pthread_mutex_t *a1)
{
  return MEMORY[0x1E0C84E28](a1);
}

int pthread_mutex_unlock(pthread_mutex_t *a1)
{
  return MEMORY[0x1E0C84E38](a1);
}

int pthread_once(pthread_once_t *a1, void (*a2)(void))
{
  return MEMORY[0x1E0C84E68](a1, a2);
}

int res_9_getservers(res_9_state a1, res_9_sockaddr_union *a2, int a3)
{
  return MEMORY[0x1E0DE8480](a1, a2, *(_QWORD *)&a3);
}

void res_9_ndestroy(res_9_state a1)
{
  MEMORY[0x1E0DE8488](a1);
}

int res_9_ninit(res_9_state a1)
{
  return MEMORY[0x1E0DE8490](a1);
}

uint64_t sandbox_check()
{
  return MEMORY[0x1E0C85178]();
}

BOOL sel_isEqual(SEL lhs, SEL rhs)
{
  return MEMORY[0x1E0DE80D8](lhs, rhs);
}

int setsockopt(int a1, int a2, int a3, const void *a4, socklen_t a5)
{
  return MEMORY[0x1E0C85388](*(_QWORD *)&a1, *(_QWORD *)&a2, *(_QWORD *)&a3, a4, *(_QWORD *)&a5);
}

int sqlite3_bind_blob(sqlite3_stmt *a1, int a2, const void *a3, int n, void (__cdecl *a5)(void *))
{
  return MEMORY[0x1E0DE8580](a1, *(_QWORD *)&a2, a3, *(_QWORD *)&n, a5);
}

int sqlite3_bind_double(sqlite3_stmt *a1, int a2, double a3)
{
  return MEMORY[0x1E0DE8598](a1, *(_QWORD *)&a2, a3);
}

int sqlite3_bind_int(sqlite3_stmt *a1, int a2, int a3)
{
  return MEMORY[0x1E0DE85A0](a1, *(_QWORD *)&a2, *(_QWORD *)&a3);
}

int sqlite3_bind_int64(sqlite3_stmt *a1, int a2, sqlite3_int64 a3)
{
  return MEMORY[0x1E0DE85A8](a1, *(_QWORD *)&a2, a3);
}

int sqlite3_bind_null(sqlite3_stmt *a1, int a2)
{
  return MEMORY[0x1E0DE85B0](a1, *(_QWORD *)&a2);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return MEMORY[0x1E0DE85D8](a1, *(_QWORD *)&a2, a3, *(_QWORD *)&a4, a5);
}

int sqlite3_busy_timeout(sqlite3 *a1, int ms)
{
  return MEMORY[0x1E0DE8638](a1, *(_QWORD *)&ms);
}

int sqlite3_changes(sqlite3 *a1)
{
  return MEMORY[0x1E0DE8640](a1);
}

int sqlite3_clear_bindings(sqlite3_stmt *a1)
{
  return MEMORY[0x1E0DE8648](a1);
}

int sqlite3_close(sqlite3 *a1)
{
  return MEMORY[0x1E0DE8650](a1);
}

const void *__cdecl sqlite3_column_blob(sqlite3_stmt *a1, int iCol)
{
  return (const void *)MEMORY[0x1E0DE8660](a1, *(_QWORD *)&iCol);
}

int sqlite3_column_bytes(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1E0DE8668](a1, *(_QWORD *)&iCol);
}

double sqlite3_column_double(sqlite3_stmt *a1, int iCol)
{
  double result;

  MEMORY[0x1E0DE8688](a1, *(_QWORD *)&iCol);
  return result;
}

int sqlite3_column_int(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1E0DE8690](a1, *(_QWORD *)&iCol);
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1E0DE8698](a1, *(_QWORD *)&iCol);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return (const unsigned __int8 *)MEMORY[0x1E0DE86B8](a1, *(_QWORD *)&iCol);
}

int sqlite3_column_type(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1E0DE86C8](a1, *(_QWORD *)&iCol);
}

sqlite3 *__cdecl sqlite3_db_handle(sqlite3_stmt *a1)
{
  return (sqlite3 *)MEMORY[0x1E0DE8748](a1);
}

const char *__cdecl sqlite3_errmsg(sqlite3 *a1)
{
  return (const char *)MEMORY[0x1E0DE8788](a1);
}

const char *__cdecl sqlite3_errstr(int a1)
{
  return (const char *)MEMORY[0x1E0DE8790](*(_QWORD *)&a1);
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  return MEMORY[0x1E0DE8798](a1, sql, callback, a4, errmsg);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return MEMORY[0x1E0DE87C8](pStmt);
}

void sqlite3_free(void *a1)
{
  MEMORY[0x1E0DE87D0](a1);
}

sqlite3_stmt *__cdecl sqlite3_next_stmt(sqlite3 *pDb, sqlite3_stmt *pStmt)
{
  return (sqlite3_stmt *)MEMORY[0x1E0DE8860](pDb, pStmt);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return MEMORY[0x1E0DE8870](filename, ppDb, *(_QWORD *)&flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return MEMORY[0x1E0DE8880](db, zSql, *(_QWORD *)&nByte, ppStmt, pzTail);
}

int sqlite3_reset(sqlite3_stmt *pStmt)
{
  return MEMORY[0x1E0DE88B0](pStmt);
}

const char *__cdecl sqlite3_sql(sqlite3_stmt *pStmt)
{
  return (const char *)MEMORY[0x1E0DE8998](pStmt);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return MEMORY[0x1E0DE89A8](a1);
}

void srand48(uint64_t a1)
{
  MEMORY[0x1E0C85480](a1);
}

int stat(const char *a1, stat *a2)
{
  return MEMORY[0x1E0C854D8](a1, a2);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1E0C85520](__s1, __s2);
}

uint64_t strtoll(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x1E0C85678](__str, __endptr, *(_QWORD *)&__base);
}

unint64_t strtoul(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x1E0C85698](__str, __endptr, *(_QWORD *)&__base);
}

unint64_t strtoull(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x1E0C856A8](__str, __endptr, *(_QWORD *)&__base);
}

BOOLean_t voucher_mach_msg_set(mach_msg_header_t *msg)
{
  return MEMORY[0x1E0C85B68](msg);
}

void xpc_array_append_value(xpc_object_t xarray, xpc_object_t value)
{
  MEMORY[0x1E0C85DE0](xarray, value);
}

BOOL xpc_array_apply(xpc_object_t xarray, xpc_array_applier_t applier)
{
  return MEMORY[0x1E0C85DF8](xarray, applier);
}

xpc_object_t xpc_array_create(xpc_object_t *objects, size_t count)
{
  return (xpc_object_t)MEMORY[0x1E0C85E00](objects, count);
}

size_t xpc_array_get_count(xpc_object_t xarray)
{
  return MEMORY[0x1E0C85E30](xarray);
}

int64_t xpc_array_get_int64(xpc_object_t xarray, size_t index)
{
  return MEMORY[0x1E0C85E60](xarray, index);
}

xpc_object_t xpc_array_get_value(xpc_object_t xarray, size_t index)
{
  return (xpc_object_t)MEMORY[0x1E0C85E90](xarray, index);
}

void xpc_array_set_data(xpc_object_t xarray, size_t index, const void *bytes, size_t length)
{
  MEMORY[0x1E0C85EA8](xarray, index, bytes, length);
}

void xpc_array_set_int64(xpc_object_t xarray, size_t index, int64_t value)
{
  MEMORY[0x1E0C85EC0](xarray, index, value);
}

void xpc_array_set_value(xpc_object_t xarray, size_t index, xpc_object_t value)
{
  MEMORY[0x1E0C85EE8](xarray, index, value);
}

xpc_object_t xpc_BOOL_create(BOOL value)
{
  return (xpc_object_t)MEMORY[0x1E0C85EF0](value);
}

BOOL xpc_BOOL_get_value(xpc_object_t xBOOL)
{
  return MEMORY[0x1E0C85F00](xBOOL);
}

void xpc_connection_cancel(xpc_connection_t connection)
{
  MEMORY[0x1E0C85F68](connection);
}

xpc_connection_t xpc_connection_create(const char *name, dispatch_queue_t targetq)
{
  return (xpc_connection_t)MEMORY[0x1E0C85F90](name, targetq);
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return (xpc_connection_t)MEMORY[0x1E0C85FB0](name, targetq, flags);
}

uint64_t xpc_connection_get_audit_token()
{
  return MEMORY[0x1E0C85FD0]();
}

void xpc_connection_resume(xpc_connection_t connection)
{
  MEMORY[0x1E0C86018](connection);
}

void xpc_connection_send_message(xpc_connection_t connection, xpc_object_t message)
{
  MEMORY[0x1E0C86030](connection, message);
}

void xpc_connection_send_message_with_reply(xpc_connection_t connection, xpc_object_t message, dispatch_queue_t replyq, xpc_handler_t handler)
{
  MEMORY[0x1E0C86038](connection, message, replyq, handler);
}

xpc_object_t xpc_connection_send_message_with_reply_sync(xpc_connection_t connection, xpc_object_t message)
{
  return (xpc_object_t)MEMORY[0x1E0C86048](connection, message);
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
  MEMORY[0x1E0C86080](connection, handler);
}

uint64_t xpc_connection_set_legacy()
{
  return MEMORY[0x1E0C86098]();
}

void xpc_connection_set_target_queue(xpc_connection_t connection, dispatch_queue_t targetq)
{
  MEMORY[0x1E0C860C8](connection, targetq);
}

xpc_object_t xpc_data_create(const void *bytes, size_t length)
{
  return (xpc_object_t)MEMORY[0x1E0C86178](bytes, length);
}

const void *__cdecl xpc_data_get_bytes_ptr(xpc_object_t xdata)
{
  return (const void *)MEMORY[0x1E0C86198](xdata);
}

size_t xpc_data_get_length(xpc_object_t xdata)
{
  return MEMORY[0x1E0C861A8](xdata);
}

xpc_object_t xpc_date_create(int64_t interval)
{
  return (xpc_object_t)MEMORY[0x1E0C861B8](interval);
}

int64_t xpc_date_get_value(xpc_object_t xdate)
{
  return MEMORY[0x1E0C861D0](xdate);
}

BOOL xpc_dictionary_apply(xpc_object_t xdict, xpc_dictionary_applier_t applier)
{
  return MEMORY[0x1E0C861F0](xdict, applier);
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return (xpc_object_t)MEMORY[0x1E0C86208](keys, values, count);
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return (xpc_object_t)MEMORY[0x1E0C86228](original);
}

BOOL xpc_dictionary_get_BOOL(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C86260](xdict, key);
}

size_t xpc_dictionary_get_count(xpc_object_t xdict)
{
  return MEMORY[0x1E0C86270](xdict);
}

xpc_object_t xpc_dictionary_get_dictionary(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x1E0C86288](xdict, key);
}

double xpc_dictionary_get_double(xpc_object_t xdict, const char *key)
{
  double result;

  MEMORY[0x1E0C86298](xdict, key);
  return result;
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C862A0](xdict, key);
}

uint64_t xpc_dictionary_get_uint64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C862D0](xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x1E0C862E0](xdict, key);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
  MEMORY[0x1E0C86310](xdict, key, value);
}

void xpc_dictionary_set_double(xpc_object_t xdict, const char *key, double value)
{
  MEMORY[0x1E0C86348](xdict, key, value);
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
  MEMORY[0x1E0C86360](xdict, key, value);
}

void xpc_dictionary_set_uint64(xpc_object_t xdict, const char *key, uint64_t value)
{
  MEMORY[0x1E0C86398](xdict, key, value);
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
  MEMORY[0x1E0C863B8](xdict, key, value);
}

xpc_object_t xpc_double_create(double value)
{
  return (xpc_object_t)MEMORY[0x1E0C863D0](value);
}

double xpc_double_get_value(xpc_object_t xdouble)
{
  double result;

  MEMORY[0x1E0C863E0](xdouble);
  return result;
}

xpc_endpoint_t xpc_endpoint_create(xpc_connection_t connection)
{
  return (xpc_endpoint_t)MEMORY[0x1E0C863F0](connection);
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x1E0C86520](object);
}

xpc_object_t xpc_int64_create(int64_t value)
{
  return (xpc_object_t)MEMORY[0x1E0C86568](value);
}

int64_t xpc_int64_get_value(xpc_object_t xint)
{
  return MEMORY[0x1E0C86570](xint);
}

xpc_object_t xpc_null_create(void)
{
  return (xpc_object_t)MEMORY[0x1E0C86628]();
}

void xpc_release(xpc_object_t object)
{
  MEMORY[0x1E0C86658](object);
}

xpc_object_t xpc_retain(xpc_object_t object)
{
  return (xpc_object_t)MEMORY[0x1E0C86660](object);
}

xpc_object_t xpc_string_create(const char *string)
{
  return (xpc_object_t)MEMORY[0x1E0C86720](string);
}

const char *__cdecl xpc_string_get_string_ptr(xpc_object_t xstring)
{
  return (const char *)MEMORY[0x1E0C86758](xstring);
}

xpc_object_t xpc_uuid_create(const unsigned __int8 *uuid)
{
  return (xpc_object_t)MEMORY[0x1E0C867E0](uuid);
}

const uint8_t *__cdecl xpc_uuid_get_bytes(xpc_object_t xuuid)
{
  return (const uint8_t *)MEMORY[0x1E0C867F8](xuuid);
}

