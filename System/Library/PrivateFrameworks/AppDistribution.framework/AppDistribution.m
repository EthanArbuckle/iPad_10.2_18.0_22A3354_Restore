uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B7EBA50]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t static AppDistributor.AppDistributorsOrTrustedDevelopersChangedNotification.getter()
{
  return sub_2360D0BA8();
}

uint64_t sub_236067108(uint64_t a1)
{
  return sub_236067174(a1, qword_2563A0198);
}

uint64_t static Logger.ald.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_236067204(&qword_2563A0190, (uint64_t)qword_2563A0198, a1);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_236067154(uint64_t a1)
{
  return sub_236067174(a1, qword_2563A01B8);
}

uint64_t sub_236067174(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_2360D0B3C();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_2360D0B30();
}

uint64_t static Logger.general.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_236067204(&qword_2563A01B0, (uint64_t)qword_2563A01B8, a1);
}

uint64_t sub_236067204@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_2360D0B3C();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_236067484(a1, &qword_2563A01E8);
}

uint64_t sub_236067280(uint64_t a1)
{
  MEMORY[0x23B7EBA68](&unk_2360D18D8, a1);
  return sub_2360D0998();
}

uint64_t sub_2360672BC()
{
  MEMORY[0x23B7EBA68](&unk_2360D18D8);
  return sub_2360D098C();
}

uint64_t sub_236067304(uint64_t a1, uint64_t a2)
{
  sub_2360D10B8();
  MEMORY[0x23B7EBA68](&unk_2360D18D8, a2);
  sub_2360D098C();
  return sub_2360D10F4();
}

uint64_t sub_23606735C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B7EBA68](&unk_2360D18D8, a3);
  return sub_2360D0980();
}

uint64_t sub_2360673A8()
{
  return sub_2360673F0(&qword_2563A01F0, (uint64_t)&unk_2360D1868);
}

uint64_t sub_2360673CC()
{
  return sub_2360673F0(&qword_2563A01F8, (uint64_t)&unk_2360D1894);
}

uint64_t sub_2360673F0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CGColor(255);
    result = MEMORY[0x23B7EBA68](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_236067484(a1, &qword_2563A0200);
}

void sub_236067484(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

BOOL sub_2360674C8(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_2360674D8()
{
  return sub_2360D10C4();
}

uint64_t sub_2360674FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2360675EC()
{
  sub_2360D10B8();
  sub_2360D10C4();
  return sub_2360D10F4();
}

uint64_t sub_236067630(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6572756C696166;
  else
    return 0x73736563637573;
}

BOOL sub_236067660(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2360674C8(*a1, *a2);
}

uint64_t sub_236067678()
{
  return sub_2360675EC();
}

uint64_t sub_23606768C()
{
  return sub_2360674D8();
}

uint64_t sub_2360676A0()
{
  sub_2360D10B8();
  sub_2360674D8();
  return sub_2360D10F4();
}

uint64_t sub_2360676E8()
{
  char *v0;

  return sub_236067630(*v0);
}

uint64_t sub_2360676FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360674FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23606772C()
{
  return 0;
}

uint64_t sub_236067738@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23606B388();
  *a1 = result;
  return result;
}

uint64_t sub_236067768(uint64_t a1)
{
  MEMORY[0x23B7EBA68](&unk_2360D1CF0, a1);
  return sub_2360D1148();
}

uint64_t sub_23606779C(uint64_t a1)
{
  MEMORY[0x23B7EBA68](&unk_2360D1CF0, a1);
  return sub_2360D1154();
}

uint64_t sub_2360677D0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2360D1028();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23606783C()
{
  return 1;
}

uint64_t sub_236067848()
{
  return sub_2360D10C4();
}

uint64_t sub_236067870()
{
  return 12383;
}

uint64_t sub_236067880@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_2360679A4(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_23606783C, a2);
}

uint64_t sub_23606788C(uint64_t a1)
{
  MEMORY[0x23B7EBA68](&unk_2360D1D90, a1);
  return sub_2360D1148();
}

uint64_t sub_2360678C0(uint64_t a1)
{
  MEMORY[0x23B7EBA68](&unk_2360D1D90, a1);
  return sub_2360D1154();
}

uint64_t sub_2360678F4()
{
  sub_2360D10B8();
  sub_2360D10C4();
  return sub_2360D10F4();
}

uint64_t sub_236067934()
{
  sub_2360D10B8();
  sub_2360D10C4();
  return sub_2360D10F4();
}

uint64_t sub_236067970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360677D0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2360679A4@<X0>(_QWORD *a1@<X1>, uint64_t (*a2)(_QWORD, _QWORD, _QWORD)@<X3>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = a2(a1[2], a1[3], a1[4]);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2360679D8(uint64_t a1)
{
  MEMORY[0x23B7EBA68](&unk_2360D1D40, a1);
  return sub_2360D1148();
}

uint64_t sub_236067A0C(uint64_t a1)
{
  MEMORY[0x23B7EBA68](&unk_2360D1D40, a1);
  return sub_2360D1154();
}

uint64_t MarketplaceKitServiceResult.encode(to:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD v33[3];
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;

  v4 = a2[2];
  v5 = a2[3];
  v6 = a2[4];
  v7 = type metadata accessor for MarketplaceKitServiceResult.FailureCodingKeys(255, v4, v5, v6);
  v40 = MEMORY[0x23B7EBA68](&unk_2360D1D90, v7);
  v41 = v7;
  v8 = sub_2360D1010();
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v44 = (char *)v33 - v9;
  v39 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v39);
  v42 = (uint64_t)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MarketplaceKitServiceResult.SuccessCodingKeys(255, v4, v5, v6);
  v33[1] = MEMORY[0x23B7EBA68](&unk_2360D1D40, v11);
  v33[2] = v11;
  v38 = sub_2360D1010();
  v36 = *(_QWORD *)(v38 - 8);
  v12 = MEMORY[0x24BDAC7A8](v38);
  v34 = (char *)v33 - v13;
  v37 = *(_QWORD *)(v4 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v35 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(a2 - 1);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = v4;
  v47 = v6;
  v19 = type metadata accessor for MarketplaceKitServiceResult.CodingKeys(255, v4, v5, v6);
  MEMORY[0x23B7EBA68](&unk_2360D1CF0, v19);
  v20 = sub_2360D1010();
  v48 = *(_QWORD *)(v20 - 8);
  v49 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v33 - v21;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360D113C();
  (*(void (**)(char *, uint64_t, _QWORD *))(v16 + 16))(v18, v50, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = v42;
    sub_236067E34((uint64_t)v18, v42);
    v52 = 1;
    v24 = v44;
    v25 = v49;
    sub_2360D0F98();
    sub_236068654(&qword_2563A0268, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v26 = v46;
    sub_2360D0FEC();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v24, v26);
    sub_236067E78(v23);
  }
  else
  {
    v27 = v37;
    v28 = v35;
    v29 = v43;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v35, v18, v43);
    v51 = 0;
    v30 = v34;
    v25 = v49;
    sub_2360D0F98();
    v31 = v38;
    sub_2360D0FEC();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v30, v31);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v22, v25);
}

uint64_t type metadata accessor for MarketplaceKitServiceResult.FailureCodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MarketplaceKitServiceResult.FailureCodingKeys);
}

uint64_t type metadata accessor for MarketplaceKitServiceResult.SuccessCodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MarketplaceKitServiceResult.SuccessCodingKeys);
}

uint64_t type metadata accessor for MarketplaceKitServiceResult.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MarketplaceKitServiceResult.CodingKeys);
}

uint64_t sub_236067E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MarketplaceKitError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_236067E78(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MarketplaceKitError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MarketplaceKitServiceResult.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  char *v51;
  __int128 v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  _QWORD *v78;

  v68 = a5;
  v9 = type metadata accessor for MarketplaceKitServiceResult.FailureCodingKeys(255, a2, a3, a4);
  v65 = MEMORY[0x23B7EBA68](&unk_2360D1D90, v9);
  v66 = v9;
  v59 = sub_2360D0F8C();
  v61 = *(_QWORD *)(v59 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v67 = (char *)&v52 - v10;
  v11 = type metadata accessor for MarketplaceKitServiceResult.SuccessCodingKeys(255, a2, a3, a4);
  v62 = MEMORY[0x23B7EBA68](&unk_2360D1D40, v11);
  v63 = v11;
  v56 = sub_2360D0F8C();
  v60 = *(_QWORD *)(v56 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v64 = (char *)&v52 - v12;
  v13 = type metadata accessor for MarketplaceKitServiceResult.CodingKeys(255, a2, a3, a4);
  v73 = MEMORY[0x23B7EBA68](&unk_2360D1CF0, v13);
  v14 = sub_2360D0F8C();
  v70 = *(_QWORD *)(v14 - 8);
  v71 = v14;
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v16 = (char *)&v52 - v15;
  v57 = a2;
  v58 = a3;
  v69 = type metadata accessor for MarketplaceKitServiceResult(0, a2, a3, a4);
  v55 = *(_QWORD *)(v69 - 8);
  v17 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v52 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v52 - v23;
  v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v72 = v16;
  v26 = v78;
  sub_2360D1124();
  if (v26)
    goto LABEL_7;
  v54 = v22;
  v73 = (uint64_t)v19;
  v53 = v24;
  v78 = a1;
  v27 = v72;
  v28 = v71;
  *(_QWORD *)&v74 = sub_2360D0F80();
  v29 = sub_2360D0C38();
  MEMORY[0x23B7EBA68](MEMORY[0x24BEE12C8], v29);
  *(_QWORD *)&v76 = sub_2360D0DB8();
  *((_QWORD *)&v76 + 1) = v30;
  *(_QWORD *)&v77 = v31;
  *((_QWORD *)&v77 + 1) = v32;
  v33 = sub_2360D0DAC();
  MEMORY[0x23B7EBA68](MEMORY[0x24BEE2190], v33);
  sub_2360D0CF8();
  v34 = v74;
  if (v74 == 2 || (v52 = v76, v74 = v76, v75 = v77, (sub_2360D0D04() & 1) == 0))
  {
    v38 = sub_2360D0E78();
    swift_allocError();
    v40 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0270);
    *v40 = v69;
    sub_2360D0F08();
    sub_2360D0E6C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v40, *MEMORY[0x24BEE26D0], v38);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v27, v28);
    v25 = v78;
LABEL_7:
    v41 = (uint64_t)v25;
    return __swift_destroy_boxed_opaque_existential_1(v41);
  }
  if ((v34 & 1) != 0)
  {
    LOBYTE(v74) = 1;
    v43 = v67;
    sub_2360D0EFC();
    v51 = v68;
    type metadata accessor for MarketplaceKitError();
    sub_236068654(&qword_2563A0278, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v46 = v73;
    v47 = v59;
    sub_2360D0F5C();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v43, v47);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v27, v28);
    v48 = v69;
    swift_storeEnumTagMultiPayload();
    v49 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 32);
    v50 = v53;
    v49(v53, v46, v48);
  }
  else
  {
    LOBYTE(v74) = 0;
    v35 = v64;
    v36 = v28;
    sub_2360D0EFC();
    v37 = v70;
    v44 = v54;
    v45 = v56;
    sub_2360D0F5C();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v35, v45);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v36);
    v48 = v69;
    swift_storeEnumTagMultiPayload();
    v49 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 32);
    v50 = v53;
    v49(v53, (uint64_t)v44, v48);
    v51 = v68;
  }
  v49(v51, (uint64_t)v50, v48);
  v41 = (uint64_t)v78;
  return __swift_destroy_boxed_opaque_existential_1(v41);
}

uint64_t type metadata accessor for MarketplaceKitServiceResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MarketplaceKitServiceResult);
}

uint64_t sub_236068568@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  return MarketplaceKitServiceResult.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_236068588(_QWORD *a1, _QWORD *a2)
{
  return MarketplaceKitServiceResult.encode(to:)(a1, a2);
}

uint64_t Result.init<>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  type metadata accessor for MarketplaceKitServiceResult(0, a2, a3, a4);
  if (swift_getEnumCaseMultiPayload() == 1)
    sub_236067E34(a1, a5);
  else
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a5, a1, a2);
  type metadata accessor for MarketplaceKitError();
  sub_236068654((unint64_t *)&qword_2563A0280, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
  sub_2360D110C();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_236068654(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for MarketplaceKitError();
    result = MEMORY[0x23B7EBA68](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236068694()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23606869C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for MarketplaceKitError();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_236068720(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  unsigned __int8 *v20;
  unsigned int v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  unsigned int v26;
  unint64_t v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  char v36;
  uint64_t v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  unsigned int v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2563A0288);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_QWORD *)(v9 + 64) <= 0x10uLL)
    v10 = 16;
  else
    v10 = *(_QWORD *)(v9 + 64);
  if (v10 > 3)
    goto LABEL_8;
  v11 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  v12 = 2;
  if (v11 > 0xFFFC)
    v12 = 4;
  if (v11 <= 0xFC)
LABEL_8:
    v12 = 1;
  v13 = v12 + v10;
  if (v13 <= v7)
    v13 = v7;
  v14 = v13 + 1;
  v15 = *(_DWORD *)(v9 + 80) | *(_DWORD *)(v6 + 80);
  if (v14 > 0x18 || (v15 & 0x1000F8) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + (((v15 & 0xF8 | 7u) + 16) & ~(unint64_t)(v15 & 0xF8 | 7u)));
    swift_retain();
    return a1;
  }
  if (v10 > 3)
  {
    if (v10 + 1 > v7)
      v18 = v10 + 1;
    else
      v18 = v7;
    v19 = *((unsigned __int8 *)a2 + v18);
    if (v19 <= 1)
    {
      if (v19 != 1)
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
LABEL_89:
        v34 = 1;
LABEL_90:
        v42 = v34 + v10;
        if (v42 <= v7)
          v42 = v7;
        *((_BYTE *)a1 + v42) = 0;
        return a1;
      }
      v20 = (unsigned __int8 *)a2 + v10;
LABEL_51:
      v32 = *v20;
      if (v32 < 3)
        goto LABEL_65;
LABEL_58:
      if (v10 <= 3)
        v33 = v10;
      else
        v33 = 4;
      __asm { BR              X13 }
    }
    goto LABEL_30;
  }
  v21 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  if (v21 > 0xFFFC)
  {
    v25 = v10 + 4;
    if (v10 + 4 <= v7)
      v25 = v7;
    v26 = *((unsigned __int8 *)a2 + v25);
    if (v26 >= 2)
      goto LABEL_39;
    if (v26 == 1)
    {
      v20 = (unsigned __int8 *)a2 + v10;
      goto LABEL_53;
    }
    goto LABEL_62;
  }
  if (v21 > 0xFC)
  {
    v27 = v10 + 2;
    if (v10 + 2 <= v7)
      v27 = v7;
    v28 = *((unsigned __int8 *)a2 + v27);
    if (v28 > 1)
    {
LABEL_39:
      v24 = 2;
      if (v21 > 0xFFFC)
        v24 = 4;
LABEL_41:
      v29 = v24 + v10;
      if (v29 <= v7)
        LODWORD(v29) = v7;
      if (v29 <= 3)
        v30 = v29;
      else
        v30 = 4;
      __asm { BR              X13 }
    }
    if (v28 == 1)
    {
      v20 = (unsigned __int8 *)a2 + v10;
      goto LABEL_57;
    }
LABEL_62:
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v34 = 2;
    if (v21 > 0xFFFC)
      v34 = 4;
    goto LABEL_90;
  }
  if (v10 + 1 > v7)
    v22 = v10 + 1;
  else
    v22 = v7;
  v23 = *((unsigned __int8 *)a2 + v22);
  if (v23 > 1)
  {
LABEL_30:
    v24 = 1;
    goto LABEL_41;
  }
  if (v23 != 1)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v41 = ((1 << (8 * v10)) + 17) >> (8 * v10);
    v34 = 2;
    if (v41 > 0xFFFC)
      v34 = 4;
    if (v41 > 0xFC)
      goto LABEL_90;
    goto LABEL_89;
  }
  v20 = (unsigned __int8 *)a2 + v10;
  v31 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  if (v31 <= 0xFFFC)
  {
    if (v31 <= 0xFC)
      goto LABEL_51;
LABEL_57:
    v32 = *(unsigned __int16 *)v20;
    if (v32 < 3)
      goto LABEL_65;
    goto LABEL_58;
  }
LABEL_53:
  v32 = *(_DWORD *)v20;
  if (v32 >= 3)
    goto LABEL_58;
LABEL_65:
  if (v32 == 2)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
    if (v10 <= 3)
    {
      v35 = ((1 << (8 * v10)) + 17) >> (8 * v10);
      if (v35 > 0xFFFC)
      {
        v38 = 2;
        goto LABEL_94;
      }
      if (v35 > 0xFC)
      {
        LOWORD(v38) = 2;
        goto LABEL_97;
      }
    }
    v36 = 2;
    goto LABEL_78;
  }
  if (v32 != 1)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
    if (v10 > 3)
      goto LABEL_68;
    v35 = ((1 << (8 * v10)) + 17) >> (8 * v10);
    if (v35 > 0xFFFC)
    {
      *(_DWORD *)((char *)a1 + v10) = 0;
    }
    else
    {
      if (v35 <= 0xFC)
      {
LABEL_68:
        *((_BYTE *)a1 + v10) = 0;
        if (v10 > 3)
          goto LABEL_82;
LABEL_79:
        v39 = ((1 << (8 * v10)) + 17) >> (8 * v10);
        v40 = 2;
        if (v39 > 0xFFFC)
          v40 = 4;
        if (v39 > 0xFC)
          goto LABEL_100;
        goto LABEL_82;
      }
      *(_WORD *)((char *)a1 + v10) = 0;
    }
LABEL_98:
    v43 = v35 > 0xFFFC;
    v40 = 2;
    if (v43)
      v40 = 4;
    goto LABEL_100;
  }
  v37 = a2[1];
  *a1 = *a2;
  a1[1] = v37;
  swift_bridgeObjectRetain();
  if (v10 > 3)
    goto LABEL_77;
  v38 = 1;
  v35 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  if (v35 > 0xFFFC)
  {
LABEL_94:
    *(_DWORD *)((char *)a1 + v10) = v38;
    goto LABEL_98;
  }
  if (v35 > 0xFC)
  {
LABEL_97:
    *(_WORD *)((char *)a1 + v10) = v38;
    goto LABEL_98;
  }
LABEL_77:
  v36 = 1;
LABEL_78:
  *((_BYTE *)a1 + v10) = v36;
  if (v10 <= 3)
    goto LABEL_79;
LABEL_82:
  v40 = 1;
LABEL_100:
  v44 = v40 + v10;
  if (v44 <= v7)
    v44 = v7;
  *((_BYTE *)a1 + v44) = 1;
  return a1;
}

uint64_t sub_236068CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  unsigned int v14;
  unsigned __int16 *v15;
  unint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unsigned int v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_2563A0288);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  if (v8 <= 0x10)
    v8 = 16;
  if (v8 > 3)
  {
    if (v8 + 1 > v5)
      v9 = v8 + 1;
    else
      v9 = v5;
    v10 = *(unsigned __int8 *)(a1 + v9);
    if (v10 > 1)
    {
LABEL_8:
      v11 = 1;
      goto LABEL_29;
    }
    if (v10 == 1)
    {
      v15 = (unsigned __int16 *)(a1 + v8);
      goto LABEL_37;
    }
LABEL_48:
    v26 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
    v27 = a1;
    v6 = v3;
    return v26(v27, v6);
  }
  v12 = ((1 << (8 * v8)) + 17) >> (8 * v8);
  if (v12 > 0xFFFC)
  {
    v16 = v8 + 4;
    if (v8 + 4 <= v5)
      v16 = v5;
    v17 = *(unsigned __int8 *)(a1 + v16);
    if (v17 < 2)
    {
      if (v17 != 1)
        goto LABEL_48;
      v15 = (unsigned __int16 *)(a1 + v8);
      goto LABEL_39;
    }
LABEL_27:
    v20 = v12 > 0xFFFC;
    v11 = 2;
    if (v20)
      v11 = 4;
LABEL_29:
    v21 = v11 + v8;
    if (v21 <= v5)
      LODWORD(v21) = v5;
    if (v21 <= 3)
      v22 = v21;
    else
      v22 = 4;
    __asm { BR              X14 }
  }
  if (v12 > 0xFC)
  {
    v18 = v8 + 2;
    if (v8 + 2 <= v5)
      v18 = v5;
    v19 = *(unsigned __int8 *)(a1 + v18);
    if (v19 <= 1)
    {
      if (v19 != 1)
        goto LABEL_48;
      v15 = (unsigned __int16 *)(a1 + v8);
LABEL_43:
      v24 = *v15;
      if (v24 < 3)
        goto LABEL_50;
      goto LABEL_44;
    }
    goto LABEL_27;
  }
  if (v8 + 1 > v5)
    v13 = v8 + 1;
  else
    v13 = v5;
  v14 = *(unsigned __int8 *)(a1 + v13);
  if (v14 > 1)
    goto LABEL_8;
  if (v14 != 1)
    goto LABEL_48;
  v15 = (unsigned __int16 *)(a1 + v8);
  v23 = ((1 << (8 * v8)) + 17) >> (8 * v8);
  if (v23 <= 0xFFFC)
  {
    if (v23 <= 0xFC)
    {
LABEL_37:
      v24 = *(unsigned __int8 *)v15;
      if (v24 < 3)
        goto LABEL_50;
LABEL_44:
      if (v8 <= 3)
        v25 = v8;
      else
        v25 = 4;
      __asm { BR              X14 }
    }
    goto LABEL_43;
  }
LABEL_39:
  v24 = *(_DWORD *)v15;
  if (v24 >= 3)
    goto LABEL_44;
LABEL_50:
  if (v24 == 2)
  {
    v26 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
    v27 = a1;
    return v26(v27, v6);
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_236068FA8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unsigned __int8 *v13;
  unsigned int v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unsigned int v29;
  char v30;
  uint64_t v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unint64_t v35;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2563A0288);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_QWORD *)(v9 + 64) <= 0x10uLL)
    v10 = 16;
  else
    v10 = *(_QWORD *)(v9 + 64);
  if (v10 > 3)
  {
    if (v10 + 1 > v7)
      v11 = v10 + 1;
    else
      v11 = v7;
    v12 = *((unsigned __int8 *)a2 + v11);
    if (v12 <= 1)
    {
      if (v12 != 1)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
LABEL_78:
        v27 = 0;
        v28 = 1;
        goto LABEL_87;
      }
      v13 = (unsigned __int8 *)a2 + v10;
LABEL_39:
      v25 = *v13;
      if (v25 < 3)
        goto LABEL_53;
LABEL_46:
      if (v10 <= 3)
        v26 = v10;
      else
        v26 = 4;
      __asm { BR              X13 }
    }
    goto LABEL_18;
  }
  v14 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  if (v14 > 0xFFFC)
  {
    v18 = v10 + 4;
    if (v10 + 4 <= v7)
      v18 = v7;
    v19 = *((unsigned __int8 *)a2 + v18);
    if (v19 >= 2)
      goto LABEL_27;
    if (v19 == 1)
    {
      v13 = (unsigned __int8 *)a2 + v10;
      goto LABEL_41;
    }
    goto LABEL_50;
  }
  if (v14 > 0xFC)
  {
    v20 = v10 + 2;
    if (v10 + 2 <= v7)
      v20 = v7;
    v21 = *((unsigned __int8 *)a2 + v20);
    if (v21 > 1)
    {
LABEL_27:
      v17 = 2;
      if (v14 > 0xFFFC)
        v17 = 4;
LABEL_29:
      v22 = v17 + v10;
      if (v22 <= v7)
        LODWORD(v22) = v7;
      if (v22 <= 3)
        v23 = v22;
      else
        v23 = 4;
      __asm { BR              X13 }
    }
    if (v21 == 1)
    {
      v13 = (unsigned __int8 *)a2 + v10;
      goto LABEL_45;
    }
LABEL_50:
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
    v27 = 0;
    v28 = 2;
    if (v14 > 0xFFFC)
      v28 = 4;
    goto LABEL_87;
  }
  if (v10 + 1 > v7)
    v15 = v10 + 1;
  else
    v15 = v7;
  v16 = *((unsigned __int8 *)a2 + v15);
  if (v16 > 1)
  {
LABEL_18:
    v17 = 1;
    goto LABEL_29;
  }
  if (v16 != 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
    v34 = ((1 << (8 * v10)) + 17) >> (8 * v10);
    v28 = 2;
    if (v34 > 0xFFFC)
      v28 = 4;
    if (v34 > 0xFC)
    {
      v27 = 0;
      goto LABEL_87;
    }
    goto LABEL_78;
  }
  v13 = (unsigned __int8 *)a2 + v10;
  v24 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  if (v24 <= 0xFFFC)
  {
    if (v24 <= 0xFC)
      goto LABEL_39;
LABEL_45:
    v25 = *(unsigned __int16 *)v13;
    if (v25 < 3)
      goto LABEL_53;
    goto LABEL_46;
  }
LABEL_41:
  v25 = *(_DWORD *)v13;
  if (v25 >= 3)
    goto LABEL_46;
LABEL_53:
  if (v25 == 2)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(a1, a2, v8);
    if (v10 <= 3)
    {
      v29 = ((1 << (8 * v10)) + 17) >> (8 * v10);
      if (v29 > 0xFFFC)
      {
        v32 = 2;
        goto LABEL_80;
      }
      if (v29 > 0xFC)
      {
        LOWORD(v32) = 2;
        goto LABEL_83;
      }
    }
    v30 = 2;
    goto LABEL_66;
  }
  if (v25 == 1)
  {
    v31 = a2[1];
    *a1 = *a2;
    a1[1] = v31;
    swift_bridgeObjectRetain();
    if (v10 > 3)
    {
LABEL_65:
      v30 = 1;
LABEL_66:
      *((_BYTE *)a1 + v10) = v30;
      if (v10 > 3)
      {
LABEL_70:
        v28 = 1;
LABEL_86:
        v27 = 1;
        goto LABEL_87;
      }
      goto LABEL_67;
    }
    v32 = 1;
    v29 = ((1 << (8 * v10)) + 17) >> (8 * v10);
    if (v29 <= 0xFFFC)
    {
      if (v29 <= 0xFC)
        goto LABEL_65;
LABEL_83:
      *(_WORD *)((char *)a1 + v10) = v32;
LABEL_84:
      v28 = 4;
      if (v29 <= 0xFFFC)
        v28 = 2;
      goto LABEL_86;
    }
LABEL_80:
    *(_DWORD *)((char *)a1 + v10) = v32;
    goto LABEL_84;
  }
  *a1 = *a2;
  swift_bridgeObjectRetain();
  if (v10 > 3)
    goto LABEL_56;
  v29 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  if (v29 > 0xFFFC)
  {
    *(_DWORD *)((char *)a1 + v10) = 0;
    goto LABEL_84;
  }
  if (v29 > 0xFC)
  {
    *(_WORD *)((char *)a1 + v10) = 0;
    goto LABEL_84;
  }
LABEL_56:
  *((_BYTE *)a1 + v10) = 0;
  if (v10 > 3)
    goto LABEL_70;
LABEL_67:
  v27 = 1;
  v33 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  v28 = 2;
  if (v33 > 0xFFFC)
    v28 = 4;
  if (v33 <= 0xFC)
    goto LABEL_70;
LABEL_87:
  v35 = v28 + v10;
  if (v35 <= v7)
    v35 = v7;
  *((_BYTE *)a1 + v35) = v27;
  return a1;
}

_QWORD *sub_2360694D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unsigned int v13;
  unsigned __int16 *v14;
  unsigned int v15;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unsigned int v22;
  BOOL v23;
  unint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unsigned int v30;
  unsigned __int8 *v31;
  unsigned int v32;
  unint64_t v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  unsigned int v37;
  unint64_t v38;
  unsigned int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  unsigned int v47;
  char v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unint64_t v52;

  if (a1 == a2)
    return a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2563A0288);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_QWORD *)(v9 + 64) <= 0x10uLL)
    v10 = 16;
  else
    v10 = *(_QWORD *)(v9 + 64);
  v11 = 8 * v10;
  if (v10 > 3)
  {
    if (v10 + 1 > v7)
      v12 = v10 + 1;
    else
      v12 = v7;
    v13 = *((unsigned __int8 *)a1 + v12);
    if (v13 <= 1)
    {
      if (v13 == 1)
      {
        v14 = (unsigned __int16 *)((char *)a1 + v10);
        goto LABEL_38;
      }
LABEL_49:
      (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_52;
    }
    goto LABEL_18;
  }
  v15 = ((1 << v11) + 17) >> v11;
  if (v15 > 0xFFFC)
  {
    v19 = v10 + 4;
    if (v10 + 4 <= v7)
      v19 = v7;
    v20 = *((unsigned __int8 *)a1 + v19);
    if (v20 < 2)
    {
      if (v20 != 1)
        goto LABEL_49;
      v14 = (unsigned __int16 *)((char *)a1 + v10);
      goto LABEL_40;
    }
LABEL_27:
    v23 = v15 > 0xFFFC;
    v18 = 2;
    if (v23)
      v18 = 4;
LABEL_29:
    v24 = v18 + v10;
    if (v24 <= v7)
      LODWORD(v24) = v7;
    if (v24 <= 3)
      v25 = v24;
    else
      v25 = 4;
    __asm { BR              X12 }
  }
  if (v15 > 0xFC)
  {
    v21 = v10 + 2;
    if (v10 + 2 <= v7)
      v21 = v7;
    v22 = *((unsigned __int8 *)a1 + v21);
    if (v22 <= 1)
    {
      if (v22 != 1)
        goto LABEL_49;
      v14 = (unsigned __int16 *)((char *)a1 + v10);
LABEL_44:
      v27 = *v14;
      if (v27 < 3)
        goto LABEL_50;
      goto LABEL_45;
    }
    goto LABEL_27;
  }
  if (v10 + 1 > v7)
    v16 = v10 + 1;
  else
    v16 = v7;
  v17 = *((unsigned __int8 *)a1 + v16);
  if (v17 > 1)
  {
LABEL_18:
    v18 = 1;
    goto LABEL_29;
  }
  if (v17 != 1)
    goto LABEL_49;
  v14 = (unsigned __int16 *)((char *)a1 + v10);
  v26 = ((1 << v11) + 17) >> v11;
  if (v26 <= 0xFFFC)
  {
    if (v26 <= 0xFC)
    {
LABEL_38:
      v27 = *(unsigned __int8 *)v14;
      if (v27 < 3)
        goto LABEL_50;
LABEL_45:
      if (v10 <= 3)
        v28 = v10;
      else
        v28 = 4;
      __asm { BR              X12 }
    }
    goto LABEL_44;
  }
LABEL_40:
  v27 = *(_DWORD *)v14;
  if (v27 >= 3)
    goto LABEL_45;
LABEL_50:
  if (v27 == 2)
  {
    (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(a1, v8);
LABEL_52:
    if (v10 > 3)
      goto LABEL_53;
    goto LABEL_61;
  }
  swift_bridgeObjectRelease();
  if (v10 > 3)
  {
LABEL_53:
    if (v10 + 1 > v7)
      v29 = v10 + 1;
    else
      v29 = v7;
    v30 = *((unsigned __int8 *)a2 + v29);
    if (v30 <= 1)
    {
      if (v30 != 1)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
LABEL_127:
        v45 = 0;
        v46 = 1;
        goto LABEL_136;
      }
      v31 = (unsigned __int8 *)a2 + v10;
LABEL_88:
      v43 = *v31;
      if (v43 < 3)
        goto LABEL_102;
      goto LABEL_95;
    }
    goto LABEL_67;
  }
LABEL_61:
  v32 = ((1 << v11) + 17) >> v11;
  if (v32 > 0xFFFC)
  {
    v36 = v10 + 4;
    if (v10 + 4 <= v7)
      v36 = v7;
    v37 = *((unsigned __int8 *)a2 + v36);
    if (v37 >= 2)
      goto LABEL_76;
    if (v37 == 1)
    {
      v31 = (unsigned __int8 *)a2 + v10;
      goto LABEL_90;
    }
    goto LABEL_99;
  }
  if (v32 > 0xFC)
  {
    v38 = v10 + 2;
    if (v10 + 2 <= v7)
      v38 = v7;
    v39 = *((unsigned __int8 *)a2 + v38);
    if (v39 > 1)
    {
LABEL_76:
      v35 = 2;
      if (v32 > 0xFFFC)
        v35 = 4;
LABEL_78:
      v40 = v35 + v10;
      if (v40 <= v7)
        LODWORD(v40) = v7;
      if (v40 <= 3)
        v41 = v40;
      else
        v41 = 4;
      __asm { BR              X12 }
    }
    if (v39 == 1)
    {
      v31 = (unsigned __int8 *)a2 + v10;
      goto LABEL_94;
    }
LABEL_99:
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
    v45 = 0;
    v46 = 2;
    if (v32 > 0xFFFC)
      v46 = 4;
    goto LABEL_136;
  }
  if (v10 + 1 > v7)
    v33 = v10 + 1;
  else
    v33 = v7;
  v34 = *((unsigned __int8 *)a2 + v33);
  if (v34 > 1)
  {
LABEL_67:
    v35 = 1;
    goto LABEL_78;
  }
  if (v34 == 1)
  {
    v31 = (unsigned __int8 *)a2 + v10;
    v42 = ((1 << v11) + 17) >> v11;
    if (v42 <= 0xFFFC)
    {
      if (v42 <= 0xFC)
        goto LABEL_88;
LABEL_94:
      v43 = *(unsigned __int16 *)v31;
      if (v43 < 3)
        goto LABEL_102;
      goto LABEL_95;
    }
LABEL_90:
    v43 = *(_DWORD *)v31;
    if (v43 < 3)
    {
LABEL_102:
      if (v43 != 2)
      {
        if (v43 != 1)
        {
          *a1 = *a2;
          swift_bridgeObjectRetain();
          if (v10 > 3)
            goto LABEL_105;
          v47 = ((1 << v11) + 17) >> v11;
          if (v47 > 0xFFFC)
          {
            *(_DWORD *)((char *)a1 + v10) = 0;
          }
          else
          {
            if (v47 <= 0xFC)
            {
LABEL_105:
              *((_BYTE *)a1 + v10) = 0;
              if (v10 > 3)
                goto LABEL_119;
              goto LABEL_116;
            }
            *(_WORD *)((char *)a1 + v10) = 0;
          }
LABEL_133:
          v46 = 4;
          if (v47 <= 0xFFFC)
            v46 = 2;
          goto LABEL_135;
        }
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        if (v10 > 3)
          goto LABEL_114;
        v49 = 1;
        v47 = ((1 << v11) + 17) >> v11;
        if (v47 <= 0xFFFC)
        {
          if (v47 <= 0xFC)
          {
LABEL_114:
            v48 = 1;
LABEL_115:
            *((_BYTE *)a1 + v10) = v48;
            if (v10 > 3)
            {
LABEL_119:
              v46 = 1;
LABEL_135:
              v45 = 1;
              goto LABEL_136;
            }
LABEL_116:
            v45 = 1;
            v50 = ((1 << v11) + 17) >> v11;
            v46 = 2;
            if (v50 > 0xFFFC)
              v46 = 4;
            if (v50 > 0xFC)
              goto LABEL_136;
            goto LABEL_119;
          }
LABEL_132:
          *(_WORD *)((char *)a1 + v10) = v49;
          goto LABEL_133;
        }
LABEL_129:
        *(_DWORD *)((char *)a1 + v10) = v49;
        goto LABEL_133;
      }
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(a1, a2, v8);
      if (v10 <= 3)
      {
        v47 = ((1 << v11) + 17) >> v11;
        if (v47 > 0xFFFC)
        {
          v49 = 2;
          goto LABEL_129;
        }
        if (v47 > 0xFC)
        {
          LOWORD(v49) = 2;
          goto LABEL_132;
        }
      }
      v48 = 2;
      goto LABEL_115;
    }
LABEL_95:
    if (v10 <= 3)
      v44 = v10;
    else
      v44 = 4;
    __asm { BR              X12 }
  }
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
  v51 = ((1 << v11) + 17) >> v11;
  v46 = 2;
  if (v51 > 0xFFFC)
    v46 = 4;
  if (v51 <= 0xFC)
    goto LABEL_127;
  v45 = 0;
LABEL_136:
  v52 = v46 + v10;
  if (v52 <= v7)
    v52 = v7;
  *((_BYTE *)a1 + v52) = v45;
  return a1;
}

_OWORD *sub_236069C78(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unsigned __int8 *v13;
  unsigned int v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unsigned int v29;
  char v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  unint64_t v34;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2563A0288);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_QWORD *)(v9 + 64) <= 0x10uLL)
    v10 = 16;
  else
    v10 = *(_QWORD *)(v9 + 64);
  if (v10 > 3)
  {
    if (v10 + 1 > v7)
      v11 = v10 + 1;
    else
      v11 = v7;
    v12 = *((unsigned __int8 *)a2 + v11);
    if (v12 <= 1)
    {
      if (v12 != 1)
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
LABEL_78:
        v27 = 0;
        v28 = 1;
        goto LABEL_87;
      }
      v13 = (unsigned __int8 *)a2 + v10;
LABEL_39:
      v25 = *v13;
      if (v25 < 3)
        goto LABEL_53;
LABEL_46:
      if (v10 <= 3)
        v26 = v10;
      else
        v26 = 4;
      __asm { BR              X13 }
    }
    goto LABEL_18;
  }
  v14 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  if (v14 > 0xFFFC)
  {
    v18 = v10 + 4;
    if (v10 + 4 <= v7)
      v18 = v7;
    v19 = *((unsigned __int8 *)a2 + v18);
    if (v19 >= 2)
      goto LABEL_27;
    if (v19 == 1)
    {
      v13 = (unsigned __int8 *)a2 + v10;
      goto LABEL_41;
    }
    goto LABEL_50;
  }
  if (v14 > 0xFC)
  {
    v20 = v10 + 2;
    if (v10 + 2 <= v7)
      v20 = v7;
    v21 = *((unsigned __int8 *)a2 + v20);
    if (v21 > 1)
    {
LABEL_27:
      v17 = 2;
      if (v14 > 0xFFFC)
        v17 = 4;
LABEL_29:
      v22 = v17 + v10;
      if (v22 <= v7)
        LODWORD(v22) = v7;
      if (v22 <= 3)
        v23 = v22;
      else
        v23 = 4;
      __asm { BR              X13 }
    }
    if (v21 == 1)
    {
      v13 = (unsigned __int8 *)a2 + v10;
      goto LABEL_45;
    }
LABEL_50:
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
    v27 = 0;
    v28 = 2;
    if (v14 > 0xFFFC)
      v28 = 4;
    goto LABEL_87;
  }
  if (v10 + 1 > v7)
    v15 = v10 + 1;
  else
    v15 = v7;
  v16 = *((unsigned __int8 *)a2 + v15);
  if (v16 > 1)
  {
LABEL_18:
    v17 = 1;
    goto LABEL_29;
  }
  if (v16 != 1)
  {
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
    v33 = ((1 << (8 * v10)) + 17) >> (8 * v10);
    v28 = 2;
    if (v33 > 0xFFFC)
      v28 = 4;
    if (v33 > 0xFC)
    {
      v27 = 0;
      goto LABEL_87;
    }
    goto LABEL_78;
  }
  v13 = (unsigned __int8 *)a2 + v10;
  v24 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  if (v24 <= 0xFFFC)
  {
    if (v24 <= 0xFC)
      goto LABEL_39;
LABEL_45:
    v25 = *(unsigned __int16 *)v13;
    if (v25 < 3)
      goto LABEL_53;
    goto LABEL_46;
  }
LABEL_41:
  v25 = *(_DWORD *)v13;
  if (v25 >= 3)
    goto LABEL_46;
LABEL_53:
  if (v25 == 2)
  {
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v9 + 32))(a1, a2, v8);
    if (v10 <= 3)
    {
      v29 = ((1 << (8 * v10)) + 17) >> (8 * v10);
      if (v29 > 0xFFFC)
      {
        v31 = 2;
        goto LABEL_80;
      }
      if (v29 > 0xFC)
      {
        LOWORD(v31) = 2;
        goto LABEL_83;
      }
    }
    v30 = 2;
    goto LABEL_66;
  }
  if (v25 == 1)
  {
    *a1 = *a2;
    if (v10 > 3)
    {
LABEL_65:
      v30 = 1;
LABEL_66:
      *((_BYTE *)a1 + v10) = v30;
      if (v10 > 3)
      {
LABEL_70:
        v28 = 1;
LABEL_86:
        v27 = 1;
        goto LABEL_87;
      }
      goto LABEL_67;
    }
    v31 = 1;
    v29 = ((1 << (8 * v10)) + 17) >> (8 * v10);
    if (v29 <= 0xFFFC)
    {
      if (v29 <= 0xFC)
        goto LABEL_65;
LABEL_83:
      *(_WORD *)((char *)a1 + v10) = v31;
LABEL_84:
      v28 = 4;
      if (v29 <= 0xFFFC)
        v28 = 2;
      goto LABEL_86;
    }
LABEL_80:
    *(_DWORD *)((char *)a1 + v10) = v31;
    goto LABEL_84;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if (v10 > 3)
    goto LABEL_56;
  v29 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  if (v29 > 0xFFFC)
  {
    *(_DWORD *)((char *)a1 + v10) = 0;
    goto LABEL_84;
  }
  if (v29 > 0xFC)
  {
    *(_WORD *)((char *)a1 + v10) = 0;
    goto LABEL_84;
  }
LABEL_56:
  *((_BYTE *)a1 + v10) = 0;
  if (v10 > 3)
    goto LABEL_70;
LABEL_67:
  v27 = 1;
  v32 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  v28 = 2;
  if (v32 > 0xFFFC)
    v28 = 4;
  if (v32 <= 0xFC)
    goto LABEL_70;
LABEL_87:
  v34 = v28 + v10;
  if (v34 <= v7)
    v34 = v7;
  *((_BYTE *)a1 + v34) = v27;
  return a1;
}

_QWORD *sub_23606A19C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unsigned int v13;
  unsigned __int16 *v14;
  unsigned int v15;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unsigned int v22;
  BOOL v23;
  unint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unsigned int v30;
  unsigned __int8 *v31;
  unsigned int v32;
  unint64_t v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  unsigned int v37;
  unint64_t v38;
  unsigned int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  unsigned int v47;
  char v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unint64_t v52;

  if (a1 == a2)
    return a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2563A0288);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_QWORD *)(v9 + 64) <= 0x10uLL)
    v10 = 16;
  else
    v10 = *(_QWORD *)(v9 + 64);
  v11 = 8 * v10;
  if (v10 > 3)
  {
    if (v10 + 1 > v7)
      v12 = v10 + 1;
    else
      v12 = v7;
    v13 = *((unsigned __int8 *)a1 + v12);
    if (v13 <= 1)
    {
      if (v13 == 1)
      {
        v14 = (unsigned __int16 *)((char *)a1 + v10);
        goto LABEL_38;
      }
LABEL_49:
      (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_52;
    }
    goto LABEL_18;
  }
  v15 = ((1 << v11) + 17) >> v11;
  if (v15 > 0xFFFC)
  {
    v19 = v10 + 4;
    if (v10 + 4 <= v7)
      v19 = v7;
    v20 = *((unsigned __int8 *)a1 + v19);
    if (v20 < 2)
    {
      if (v20 != 1)
        goto LABEL_49;
      v14 = (unsigned __int16 *)((char *)a1 + v10);
      goto LABEL_40;
    }
LABEL_27:
    v23 = v15 > 0xFFFC;
    v18 = 2;
    if (v23)
      v18 = 4;
LABEL_29:
    v24 = v18 + v10;
    if (v24 <= v7)
      LODWORD(v24) = v7;
    if (v24 <= 3)
      v25 = v24;
    else
      v25 = 4;
    __asm { BR              X12 }
  }
  if (v15 > 0xFC)
  {
    v21 = v10 + 2;
    if (v10 + 2 <= v7)
      v21 = v7;
    v22 = *((unsigned __int8 *)a1 + v21);
    if (v22 <= 1)
    {
      if (v22 != 1)
        goto LABEL_49;
      v14 = (unsigned __int16 *)((char *)a1 + v10);
LABEL_44:
      v27 = *v14;
      if (v27 < 3)
        goto LABEL_50;
      goto LABEL_45;
    }
    goto LABEL_27;
  }
  if (v10 + 1 > v7)
    v16 = v10 + 1;
  else
    v16 = v7;
  v17 = *((unsigned __int8 *)a1 + v16);
  if (v17 > 1)
  {
LABEL_18:
    v18 = 1;
    goto LABEL_29;
  }
  if (v17 != 1)
    goto LABEL_49;
  v14 = (unsigned __int16 *)((char *)a1 + v10);
  v26 = ((1 << v11) + 17) >> v11;
  if (v26 <= 0xFFFC)
  {
    if (v26 <= 0xFC)
    {
LABEL_38:
      v27 = *(unsigned __int8 *)v14;
      if (v27 < 3)
        goto LABEL_50;
LABEL_45:
      if (v10 <= 3)
        v28 = v10;
      else
        v28 = 4;
      __asm { BR              X12 }
    }
    goto LABEL_44;
  }
LABEL_40:
  v27 = *(_DWORD *)v14;
  if (v27 >= 3)
    goto LABEL_45;
LABEL_50:
  if (v27 == 2)
  {
    (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(a1, v8);
LABEL_52:
    if (v10 > 3)
      goto LABEL_53;
    goto LABEL_61;
  }
  swift_bridgeObjectRelease();
  if (v10 > 3)
  {
LABEL_53:
    if (v10 + 1 > v7)
      v29 = v10 + 1;
    else
      v29 = v7;
    v30 = *((unsigned __int8 *)a2 + v29);
    if (v30 <= 1)
    {
      if (v30 != 1)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
LABEL_127:
        v45 = 0;
        v46 = 1;
        goto LABEL_136;
      }
      v31 = (unsigned __int8 *)a2 + v10;
LABEL_88:
      v43 = *v31;
      if (v43 < 3)
        goto LABEL_102;
      goto LABEL_95;
    }
    goto LABEL_67;
  }
LABEL_61:
  v32 = ((1 << v11) + 17) >> v11;
  if (v32 > 0xFFFC)
  {
    v36 = v10 + 4;
    if (v10 + 4 <= v7)
      v36 = v7;
    v37 = *((unsigned __int8 *)a2 + v36);
    if (v37 >= 2)
      goto LABEL_76;
    if (v37 == 1)
    {
      v31 = (unsigned __int8 *)a2 + v10;
      goto LABEL_90;
    }
    goto LABEL_99;
  }
  if (v32 > 0xFC)
  {
    v38 = v10 + 2;
    if (v10 + 2 <= v7)
      v38 = v7;
    v39 = *((unsigned __int8 *)a2 + v38);
    if (v39 > 1)
    {
LABEL_76:
      v35 = 2;
      if (v32 > 0xFFFC)
        v35 = 4;
LABEL_78:
      v40 = v35 + v10;
      if (v40 <= v7)
        LODWORD(v40) = v7;
      if (v40 <= 3)
        v41 = v40;
      else
        v41 = 4;
      __asm { BR              X12 }
    }
    if (v39 == 1)
    {
      v31 = (unsigned __int8 *)a2 + v10;
      goto LABEL_94;
    }
LABEL_99:
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
    v45 = 0;
    v46 = 2;
    if (v32 > 0xFFFC)
      v46 = 4;
    goto LABEL_136;
  }
  if (v10 + 1 > v7)
    v33 = v10 + 1;
  else
    v33 = v7;
  v34 = *((unsigned __int8 *)a2 + v33);
  if (v34 > 1)
  {
LABEL_67:
    v35 = 1;
    goto LABEL_78;
  }
  if (v34 == 1)
  {
    v31 = (unsigned __int8 *)a2 + v10;
    v42 = ((1 << v11) + 17) >> v11;
    if (v42 <= 0xFFFC)
    {
      if (v42 <= 0xFC)
        goto LABEL_88;
LABEL_94:
      v43 = *(unsigned __int16 *)v31;
      if (v43 < 3)
        goto LABEL_102;
      goto LABEL_95;
    }
LABEL_90:
    v43 = *(_DWORD *)v31;
    if (v43 < 3)
    {
LABEL_102:
      if (v43 != 2)
      {
        if (v43 != 1)
        {
          *a1 = *a2;
          if (v10 > 3)
            goto LABEL_105;
          v47 = ((1 << v11) + 17) >> v11;
          if (v47 > 0xFFFC)
          {
            *(_DWORD *)((char *)a1 + v10) = 0;
          }
          else
          {
            if (v47 <= 0xFC)
            {
LABEL_105:
              *((_BYTE *)a1 + v10) = 0;
              if (v10 > 3)
                goto LABEL_119;
              goto LABEL_116;
            }
            *(_WORD *)((char *)a1 + v10) = 0;
          }
LABEL_133:
          v46 = 4;
          if (v47 <= 0xFFFC)
            v46 = 2;
          goto LABEL_135;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        if (v10 > 3)
          goto LABEL_114;
        v49 = 1;
        v47 = ((1 << v11) + 17) >> v11;
        if (v47 <= 0xFFFC)
        {
          if (v47 <= 0xFC)
          {
LABEL_114:
            v48 = 1;
LABEL_115:
            *((_BYTE *)a1 + v10) = v48;
            if (v10 > 3)
            {
LABEL_119:
              v46 = 1;
LABEL_135:
              v45 = 1;
              goto LABEL_136;
            }
LABEL_116:
            v45 = 1;
            v50 = ((1 << v11) + 17) >> v11;
            v46 = 2;
            if (v50 > 0xFFFC)
              v46 = 4;
            if (v50 > 0xFC)
              goto LABEL_136;
            goto LABEL_119;
          }
LABEL_132:
          *(_WORD *)((char *)a1 + v10) = v49;
          goto LABEL_133;
        }
LABEL_129:
        *(_DWORD *)((char *)a1 + v10) = v49;
        goto LABEL_133;
      }
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 32))(a1, a2, v8);
      if (v10 <= 3)
      {
        v47 = ((1 << v11) + 17) >> v11;
        if (v47 > 0xFFFC)
        {
          v49 = 2;
          goto LABEL_129;
        }
        if (v47 > 0xFC)
        {
          LOWORD(v49) = 2;
          goto LABEL_132;
        }
      }
      v48 = 2;
      goto LABEL_115;
    }
LABEL_95:
    if (v10 <= 3)
      v44 = v10;
    else
      v44 = 4;
    __asm { BR              X12 }
  }
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
  v51 = ((1 << v11) + 17) >> v11;
  v46 = 2;
  if (v51 > 0xFFFC)
    v46 = 4;
  if (v51 <= 0xFC)
    goto LABEL_127;
  v45 = 0;
LABEL_136:
  v52 = v46 + v10;
  if (v52 <= v7)
    v52 = v7;
  *((_BYTE *)a1 + v52) = v45;
  return a1;
}

uint64_t sub_23606A930(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  int v12;
  unsigned int v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  v6 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_2563A0288) - 8) + 64);
  if (v6 <= 0x10)
    v6 = 16;
  if (v6 > 3)
    goto LABEL_7;
  v7 = ((1 << (8 * v6)) + 17) >> (8 * v6);
  v8 = 2;
  if (v7 > 0xFFFC)
    v8 = 4;
  if (v7 <= 0xFC)
LABEL_7:
    v8 = 1;
  v9 = v8 + v6;
  if (v9 <= v5)
    v9 = v5;
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_28;
  v10 = v9 + 1;
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v14 = ((a2 + ~(-1 << v11) - 254) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (!v12)
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v14 > 0xFF)
    {
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (!*(_WORD *)(a1 + v10))
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v14 < 2)
    {
LABEL_28:
      if (v6 > 3)
        goto LABEL_32;
      v16 = ((1 << (8 * v6)) + 17) >> (8 * v6);
      v17 = 2;
      if (v16 > 0xFFFC)
        v17 = 4;
      if (v16 <= 0xFC)
LABEL_32:
        v17 = 1;
      v18 = v17 + v6;
      if (v18 <= v5)
        v18 = v5;
      v19 = *(unsigned __int8 *)(a1 + v18);
      if (v19 >= 2)
        return (v19 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v12 = *(unsigned __int8 *)(a1 + v10);
  if (!*(_BYTE *)(a1 + v10))
    goto LABEL_28;
LABEL_21:
  v15 = (v12 - 1) << v11;
  if (v10 > 3)
    v15 = 0;
  if ((_DWORD)v10)
  {
    if (v10 > 3)
      LODWORD(v10) = 4;
    __asm { BR              X11 }
  }
  return (v15 + 255);
}

void sub_23606AB08(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v11;
  size_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_2563A0288) - 8) + 64);
  if (v8 <= 0x10)
    v8 = 16;
  if (v8 > 3)
    goto LABEL_7;
  v9 = ((1 << (8 * v8)) + 17) >> (8 * v8);
  v10 = 2;
  if (v9 > 0xFFFC)
    v10 = 4;
  if (v9 <= 0xFC)
LABEL_7:
    v10 = 1;
  v11 = v10 + v8;
  if (v11 <= v7)
    v11 = v7;
  v12 = v11 + 1;
  if (a3 < 0xFF)
  {
    v13 = 0;
  }
  else if (v12 <= 3)
  {
    v15 = ((a3 + ~(-1 << (8 * v12)) - 254) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v14 = a2 - 255;
  if (v12 < 4)
  {
    if ((_DWORD)v12)
    {
      v16 = v14 & ~(-1 << (8 * v12));
      bzero(a1, v12);
      if ((_DWORD)v12 == 3)
      {
        *(_WORD *)a1 = v16;
        a1[2] = BYTE2(v16);
      }
      else if ((_DWORD)v12 == 2)
      {
        *(_WORD *)a1 = v16;
      }
      else
      {
        *a1 = v16;
      }
    }
  }
  else
  {
    bzero(a1, v12);
    *(_DWORD *)a1 = v14;
  }
  __asm { BR              X10 }
}

uint64_t sub_23606AD5C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  unint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_2563A0288) - 8) + 64);
  if (v4 <= 0x10)
    v4 = 16;
  if (v4 <= 3)
  {
    v8 = ((1 << (8 * v4)) + 17) >> (8 * v4);
    if (v8 > 0xFFFC)
    {
      v10 = v4 + 4;
      if (v4 + 4 <= v3)
        v10 = v3;
      result = *(unsigned __int8 *)(a1 + v10);
      if (result < 2)
        return result;
    }
    else
    {
      if (v8 <= 0xFC)
        goto LABEL_4;
      v9 = v4 + 2;
      if (v4 + 2 <= v3)
        v9 = v3;
      result = *(unsigned __int8 *)(a1 + v9);
      if (result <= 1)
        return result;
    }
    v11 = v8 > 0xFFFC;
    v7 = 2;
    if (v11)
      v7 = 4;
LABEL_20:
    v12 = v7 + v4;
    if (v12 <= v3)
      LODWORD(v12) = v3;
    if (v12 <= 3)
      v13 = v12;
    else
      v13 = 4;
    __asm { BR              X11 }
  }
LABEL_4:
  if (v4 + 1 > v3)
    v5 = v4 + 1;
  else
    v5 = v3;
  result = *(unsigned __int8 *)(a1 + v5);
  if (result > 1)
  {
    v7 = 1;
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_23606AEB4(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t result;
  unint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  unsigned int v16;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  size_t v22;
  size_t v23;
  int v24;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  result = __swift_instantiateConcreteTypeFromMangledName(qword_2563A0288);
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 64);
  if (v7 <= 0x10)
    v7 = 16;
  if (a2 > 1)
  {
    v11 = 8 * v7;
    if (v7 > 3)
      goto LABEL_16;
    v12 = ((1 << v11) + 17) >> v11;
    v13 = 2;
    if (v12 > 0xFFFC)
      v13 = 4;
    if (v12 <= 0xFC)
LABEL_16:
      v13 = 1;
    v14 = v13 + v7;
    if (v14 <= v5)
      LODWORD(v14) = v5;
    v15 = v14 > 3;
    v16 = ((a2 - 2) >> (8 * v14)) + 2;
    if (v15)
      LOBYTE(v16) = 2;
    if (v7 < 4)
    {
      v18 = ((1 << v11) + 17) >> v11;
      v19 = 4;
      if (v18 >= 0xFFFD)
        v20 = 4;
      else
        v20 = 2;
      if (v18 < 0xFD)
        v20 = 1;
      v21 = v20 + v7;
      if (v21 <= v5)
        v21 = v5;
      a1[v21] = v16;
      if (v18 <= 0xFFFC)
        v19 = 2;
      if (v18 > 0xFC)
      {
LABEL_37:
        v22 = v19 + v7;
        if (v22 <= v5)
          v23 = v5;
        else
          v23 = v22;
        if (v23 >= 4)
          v24 = 4;
        else
          v24 = v23;
        bzero(a1, v23);
        __asm { BR              X10 }
      }
    }
    else
    {
      if (v7 + 1 > v5)
        v17 = v7 + 1;
      else
        v17 = v5;
      a1[v17] = v16;
    }
    v19 = 1;
    goto LABEL_37;
  }
  if (v7 > 3)
    goto LABEL_8;
  v8 = ((1 << (8 * v7)) + 17) >> (8 * v7);
  v9 = 2;
  if (v8 > 0xFFFC)
    v9 = 4;
  if (v8 <= 0xFC)
LABEL_8:
    v9 = 1;
  v10 = v9 + v7;
  if (v10 <= v5)
    v10 = v5;
  a1[v10] = a2;
  return result;
}

uint64_t sub_23606B0A4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t getEnumTagSinglePayload for FeatureFlag(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_23606B13C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23606B188 + 4 * byte_2360D199C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23606B1BC + 4 * byte_2360D1997[v4]))();
}

uint64_t sub_23606B1BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23606B1C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23606B1CCLL);
  return result;
}

uint64_t sub_23606B1D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23606B1E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23606B1E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23606B1EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23606B1F8(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23606B200(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

uint64_t sub_23606B214()
{
  return 0;
}

uint64_t getEnumTagSinglePayload for AppLibrary.UninstallError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t sub_23606B26C(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23606B2AC + 4 * byte_2360D19A1[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23606B2CC + 4 * byte_2360D19A6[v4]))();
}

_BYTE *sub_23606B2AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23606B2CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23606B2D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23606B2DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23606B2E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23606B2EC(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_23606B2F8()
{
  JUMPOUT(0x23B7EBA68);
}

void sub_23606B308()
{
  JUMPOUT(0x23B7EBA68);
}

void sub_23606B318()
{
  JUMPOUT(0x23B7EBA68);
}

void sub_23606B328()
{
  JUMPOUT(0x23B7EBA68);
}

void sub_23606B338()
{
  JUMPOUT(0x23B7EBA68);
}

void sub_23606B348()
{
  JUMPOUT(0x23B7EBA68);
}

void sub_23606B358()
{
  JUMPOUT(0x23B7EBA68);
}

void sub_23606B368()
{
  JUMPOUT(0x23B7EBA68);
}

void sub_23606B378()
{
  JUMPOUT(0x23B7EBA68);
}

uint64_t sub_23606B388()
{
  return 2;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x23B7EBA08](a1, v6, a5);
}

uint64_t AppInstallRequest.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2360D0914();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AppInstallRequest.adp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppInstallRequest() + 20);
  v4 = sub_2360D08D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AppInstallRequest()
{
  uint64_t result;

  result = qword_2563A0558;
  if (!qword_2563A0558)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AppInstallRequest.oAuthToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AppInstallRequest() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppInstallRequest.installVerificationToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AppInstallRequest() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppInstallRequest.accountID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AppInstallRequest() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppInstallRequest.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppInstallRequest() + 36);
  v4 = sub_2360D09A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppInstallRequest.isMarketplaceInstall.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AppInstallRequest() + 40));
}

uint64_t AppInstallRequest.referrer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AppInstallRequest();
  return sub_236078AC4(v1 + *(int *)(v3 + 44), a1, &qword_2563A0490);
}

uint64_t AppInstallRequest.appShareURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AppInstallRequest();
  return sub_236078AC4(v1 + *(int *)(v3 + 48), a1, &qword_2563A0490);
}

uint64_t sub_23606B610(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23606B638 + 4 * byte_2360D1DE0[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23606B638()
{
  return 7365733;
}

uint64_t sub_23606B648()
{
  return 0x6B6F54687475416FLL;
}

unint64_t sub_23606B664()
{
  return 0xD000000000000014;
}

uint64_t sub_23606B6B8()
{
  return 0x7265727265666572;
}

uint64_t sub_23606B6D0()
{
  return 0x6572616853707061;
}

uint64_t sub_23606B6F0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23606B718 + 4 * byte_2360D1DE9[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23606B718()
{
  return 7365733;
}

uint64_t sub_23606B728()
{
  return 0x6B6F54687475416FLL;
}

unint64_t sub_23606B744()
{
  return 0xD000000000000014;
}

uint64_t sub_23606B798()
{
  return 0x7265727265666572;
}

uint64_t sub_23606B7B0()
{
  return 0x6572616853707061;
}

void sub_23606B7D0(char *a1)
{
  sub_23606B7DC(*a1);
}

void sub_23606B7DC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23606B814(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23606B8EC + 4 * byte_2360D1DFB[a2]))(7365733);
}

uint64_t sub_23606B8EC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 7365733 && v1 == 0xE300000000000000)
    v2 = 1;
  else
    v2 = sub_2360D1028();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_23606BA20()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_2360D10B8();
  sub_23606BA6C((uint64_t)v3, v1);
  return sub_2360D10F4();
}

void sub_23606BA64(uint64_t a1)
{
  char *v1;

  sub_23606BA6C(a1, *v1);
}

void sub_23606BA6C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23606BAA0()
{
  sub_2360D0BD8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23606BB6C()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_2360D10B8();
  sub_23606BA6C((uint64_t)v3, v1);
  return sub_2360D10F4();
}

uint64_t sub_23606BBAC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_236077A70();
  *a1 = result;
  return result;
}

uint64_t sub_23606BBD8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23606B610(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23606BC00()
{
  unsigned __int8 *v0;

  return sub_23606B6F0(*v0);
}

uint64_t sub_23606BC08@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_236077A70();
  *a1 = result;
  return result;
}

void sub_23606BC2C(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_23606BC38()
{
  sub_2360700C4();
  return sub_2360D1148();
}

uint64_t sub_23606BC60()
{
  sub_2360700C4();
  return sub_2360D1154();
}

uint64_t AppInstallRequest.init(adp:type:oAuthToken:installVerificationToken:accountID:appShareURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a7;
  v34 = a8;
  v35 = a2;
  v16 = sub_2360D0914();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2360D0908();
  sub_236078B4C(a10, &qword_2563A0490);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a9, v19, v16);
  v20 = (int *)type metadata accessor for AppInstallRequest();
  v21 = a9 + v20[5];
  v22 = sub_2360D08D8();
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v21, a1, v22);
  v24 = (_QWORD *)(a9 + v20[6]);
  *v24 = a3;
  v24[1] = a4;
  v25 = (_QWORD *)(a9 + v20[7]);
  *v25 = a5;
  v25[1] = a6;
  v26 = (_QWORD *)(a9 + v20[8]);
  v27 = v34;
  *v26 = v33;
  v26[1] = v27;
  v28 = a9 + v20[9];
  v29 = sub_2360D09A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v28, v35, v29);
  *(_BYTE *)(a9 + v20[10]) = 0;
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56);
  v30(a9 + v20[11], 1, 1, v22);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v30)(a9 + v20[12], 1, 1, v22);
}

uint64_t sub_23606BE18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t *v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v43 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v39 - v7;
  v9 = sub_2360D08D8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for AppInstallRequest();
  v44 = *((_QWORD *)v13 - 1);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for LinkMetadata();
  sub_236078AC4(a1 + v16[10], (uint64_t)v8, &qword_2563A0490);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_236078270(a1, (uint64_t (*)(_QWORD))type metadata accessor for LinkMetadata);
    sub_236078B4C((uint64_t)v8, &qword_2563A0490);
    v17 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_2360D0908();
    v18 = &v15[v13[5]];
    v41 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v41(v18, v12, v9);
    v19 = (uint64_t *)(a1 + v16[7]);
    v21 = *v19;
    v20 = v19[1];
    v22 = &v15[v13[6]];
    *(_QWORD *)v22 = v21;
    *((_QWORD *)v22 + 1) = v20;
    v23 = (uint64_t *)(a1 + v16[8]);
    v24 = *v23;
    v25 = v23[1];
    v26 = &v15[v13[7]];
    *(_QWORD *)v26 = v24;
    *((_QWORD *)v26 + 1) = v25;
    v27 = (uint64_t *)(a1 + v16[9]);
    v28 = v27[1];
    v42 = a2;
    if (v28)
    {
      v29 = *v27;
      v39 = v28;
      v40 = v29;
    }
    else
    {
      v39 = 0xE900000000000073;
      v40 = 0x756F6D796E6F6E41;
    }
    v30 = *(void (**)(char *, uint64_t))(v10 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30(v12, v9);
    v31 = (uint64_t *)&v15[v13[8]];
    v32 = v39;
    *v31 = v40;
    v31[1] = v32;
    v33 = &v15[v13[9]];
    v34 = *MEMORY[0x24BDDABA8];
    v35 = sub_2360D09A4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v33, v34, v35);
    v15[v13[10]] = 1;
    v36 = &v15[v13[11]];
    v41(v36, (char *)(a1 + v16[5]), v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v36, 0, 1, v9);
    v37 = v43;
    sub_236078AC4(a1 + v16[11], v43, &qword_2563A0490);
    sub_236078270(a1, (uint64_t (*)(_QWORD))type metadata accessor for LinkMetadata);
    sub_236078B08(v37, (uint64_t)&v15[v13[12]], &qword_2563A0490);
    a2 = v42;
    sub_236078854((uint64_t)v15, v42, (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
    v17 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v44 + 56))(a2, v17, 1, v13);
}

uint64_t AppInstallRequest.request()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[3] = v0;
  type metadata accessor for AppInstallRequest();
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23606C1CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  if (qword_2563A01E0 != -1)
    swift_once();
  v1 = v0[4];
  v2 = v0[5];
  sub_236077F70(v0[3], v2, (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  sub_236077F30(&qword_2563A04A0, (uint64_t (*)(uint64_t))type metadata accessor for AppInstallRequest, (uint64_t)&protocol conformance descriptor for AppInstallRequest);
  sub_236077F30(&qword_2563A04A8, (uint64_t (*)(uint64_t))type metadata accessor for AppInstallRequest, (uint64_t)&protocol conformance descriptor for AppInstallRequest);
  sub_236077F70(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  v0[2] = v1;
  v5 = (char *)&dword_2563A04B0 + dword_2563A04B0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[6] = v3;
  *v3 = v0;
  v3[1] = sub_23606C2D4;
  return ((uint64_t (*)(_QWORD *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v5)(v0 + 2, sub_23606C400, 0);
}

uint64_t sub_23606C2D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_236078270(*(_QWORD *)(v2 + 32), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  return swift_task_switch();
}

uint64_t sub_23606C348()
{
  uint64_t v0;

  sub_236078270(*(_QWORD *)(v0 + 40), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23606C398()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_236078270(*(_QWORD *)(v0 + 32), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  sub_236078270(v1, (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23606C400(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  _QWORD v10[6];

  v8 = (void *)sub_2360D08F0();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23607D2C4;
  v10[3] = &block_descriptor_180;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_requestEDPInstallation_reply_, v8, v9);
  _Block_release(v9);

}

uint64_t AppInstallRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A04B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360700C4();
  sub_2360D113C();
  v20 = 0;
  sub_2360D0914();
  sub_236077F30(&qword_2563A04C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_2360D0FEC();
  if (!v2)
  {
    v9 = type metadata accessor for AppInstallRequest();
    v19 = 1;
    sub_2360D08D8();
    sub_236077F30(&qword_2563A04D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_2360D0FEC();
    v18 = 2;
    sub_2360D0FA4();
    v17 = 3;
    sub_2360D0FA4();
    v16 = 4;
    sub_2360D0FD4();
    v11 = v3 + *(int *)(v9 + 36);
    v15 = 5;
    sub_2360D09A4();
    sub_236077F30(&qword_2563A04D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDDABB0], MEMORY[0x24BDDABB8]);
    sub_2360D0FEC();
    v14 = 6;
    sub_2360D0FE0();
    v13 = 7;
    sub_2360D0FBC();
    v12 = 8;
    sub_2360D0FBC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t AppInstallRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD v38[2];
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v41 = (uint64_t)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v42 = (uint64_t)v38 - v6;
  v7 = sub_2360D09A4();
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2360D08D8();
  v47 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2360D0914();
  v49 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A04E0);
  v16 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v18 = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for AppInstallRequest();
  MEMORY[0x24BDAC7A8](v52);
  v50 = a1;
  v51 = (char *)v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360700C4();
  v46 = v18;
  v20 = v53;
  sub_2360D1124();
  if (v20)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  v39 = v9;
  v53 = v16;
  v62 = 0;
  sub_236077F30(&qword_2563A04E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_2360D0F5C();
  v21 = (uint64_t)v51;
  (*(void (**)(char *, char *))(v49 + 32))(v51, v15);
  v61 = 1;
  v22 = sub_236077F30(&qword_2563A04F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v23 = v48;
  sub_2360D0F5C();
  v38[1] = v22;
  v24 = (int *)v52;
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v21 + *(int *)(v52 + 20), v12, v23);
  v60 = 2;
  v25 = sub_2360D0F14();
  v26 = (uint64_t *)(v21 + v24[6]);
  *v26 = v25;
  v26[1] = v27;
  v59 = 3;
  v28 = sub_2360D0F14();
  v29 = (uint64_t)v50;
  v30 = (uint64_t *)(v21 + v24[7]);
  *v30 = v28;
  v30[1] = v31;
  v58 = 4;
  v32 = sub_2360D0F44();
  v33 = (uint64_t *)(v21 + v24[8]);
  *v33 = v32;
  v33[1] = v34;
  v57 = 5;
  sub_236077F30(&qword_2563A04F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDDABB0], MEMORY[0x24BDDABC0]);
  v35 = v39;
  v36 = v44;
  sub_2360D0F5C();
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v21 + v24[9], v35, v36);
  v56 = 6;
  v39 = 0;
  *(_BYTE *)(v21 + v24[10]) = sub_2360D0F50() & 1;
  v55 = 7;
  sub_2360D0F2C();
  sub_236078B08(v42, v21 + v24[11], &qword_2563A0490);
  v54 = 8;
  sub_2360D0F2C();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v46, v45);
  sub_236078B08(v41, v21 + v24[12], &qword_2563A0490);
  sub_236077F70(v21, v40, (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  __swift_destroy_boxed_opaque_existential_1(v29);
  return sub_236078270(v21, (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
}

uint64_t sub_23606CF00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AppInstallRequest.init(from:)(a1, a2);
}

uint64_t sub_23606CF14(_QWORD *a1)
{
  return AppInstallRequest.encode(to:)(a1);
}

uint64_t sub_23606CF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v4[9] = *v3;
  v4[10] = type metadata accessor for AppInstallRequest();
  v4[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23606CF90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v13;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(uint64_t **)(v0 + 40);
  sub_236077F30(&qword_2563A04A0, (uint64_t (*)(uint64_t))type metadata accessor for AppInstallRequest, (uint64_t)&protocol conformance descriptor for AppInstallRequest);
  v4 = sub_236077F30(&qword_2563A04A8, (uint64_t (*)(uint64_t))type metadata accessor for AppInstallRequest, (uint64_t)&protocol conformance descriptor for AppInstallRequest);
  sub_236077F70(*v3, v1, (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v4;
  v5 = sub_2360D0A04();
  *(_QWORD *)(v0 + 96) = v5;
  *(_QWORD *)(v0 + 104) = v6;
  v7 = v6;
  v8 = *(_QWORD *)(v0 + 72);
  v13 = *(_OWORD *)(v0 + 48);
  sub_236078270(*(_QWORD *)(v0 + 88), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  v9 = sub_2360D0A10();
  *(_QWORD *)(v0 + 112) = v9;
  v10 = swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v10;
  *(_QWORD *)(v10 + 16) = v9;
  *(_OWORD *)(v10 + 24) = v13;
  *(_QWORD *)(v10 + 40) = v5;
  *(_QWORD *)(v10 + 48) = v7;
  *(_QWORD *)(v10 + 56) = v8;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05D8);
  *v11 = v0;
  v11[1] = sub_23606D14C;
  return sub_2360D104C();
}

uint64_t sub_23606D14C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23606D1C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  v4[11] = *v3;
  return swift_task_switch();
}

uint64_t sub_23606D1E4()
{
  uint64_t v0;
  _QWORD **v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v13;

  v1 = *(_QWORD ***)(v0 + 56);
  sub_236078E0C();
  v2 = sub_236078E50();
  v3 = (*v1)[1];
  *(_QWORD *)(v0 + 16) = **v1;
  *(_QWORD *)(v0 + 32) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v3;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 40) = &type metadata for DiscoverRestoresRequest;
  *(_QWORD *)(v0 + 48) = v2;
  v4 = sub_2360D0A04();
  *(_QWORD *)(v0 + 96) = v4;
  *(_QWORD *)(v0 + 104) = v5;
  v6 = v4;
  v7 = v5;
  v8 = *(_QWORD *)(v0 + 88);
  v13 = *(_OWORD *)(v0 + 64);
  swift_bridgeObjectRelease();
  v9 = sub_2360D0A10();
  *(_QWORD *)(v0 + 112) = v9;
  v10 = swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v10;
  *(_QWORD *)(v10 + 16) = v9;
  *(_OWORD *)(v10 + 24) = v13;
  *(_QWORD *)(v10 + 40) = v6;
  *(_QWORD *)(v10 + 48) = v7;
  *(_QWORD *)(v10 + 56) = v8;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05D8);
  *v11 = v0;
  v11[1] = sub_23606D36C;
  return sub_2360D104C();
}

uint64_t sub_23606D36C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23606D3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  v4[11] = *v3;
  return swift_task_switch();
}

uint64_t sub_23606D404()
{
  uint64_t v0;
  _QWORD **v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v13;

  v1 = *(_QWORD ***)(v0 + 56);
  sub_236078CE0();
  v2 = sub_236078D24();
  v3 = (*v1)[1];
  *(_QWORD *)(v0 + 16) = **v1;
  *(_QWORD *)(v0 + 32) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v3;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 40) = &type metadata for PrioritizeAppRequest;
  *(_QWORD *)(v0 + 48) = v2;
  v4 = sub_2360D0A04();
  *(_QWORD *)(v0 + 96) = v4;
  *(_QWORD *)(v0 + 104) = v5;
  v6 = v4;
  v7 = v5;
  v8 = *(_QWORD *)(v0 + 88);
  v13 = *(_OWORD *)(v0 + 64);
  swift_bridgeObjectRelease();
  v9 = sub_2360D0A10();
  *(_QWORD *)(v0 + 112) = v9;
  v10 = swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v10;
  *(_QWORD *)(v10 + 16) = v9;
  *(_OWORD *)(v10 + 24) = v13;
  *(_QWORD *)(v10 + 40) = v6;
  *(_QWORD *)(v10 + 48) = v7;
  *(_QWORD *)(v10 + 56) = v8;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05D8);
  *v11 = v0;
  v11[1] = sub_23606D58C;
  return sub_2360D104C();
}

uint64_t sub_23606D58C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23606D600()
{
  uint64_t v0;

  sub_236077AC4(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 144));
}

uint64_t sub_23606D638()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);

  sub_236077AC4(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23606D68C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  v4[10] = *v3;
  return swift_task_switch();
}

uint64_t sub_23606D6B0()
{
  uint64_t v0;
  _QWORD **v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v12;

  v1 = *(_QWORD ***)(v0 + 48);
  sub_236078C34();
  v2 = sub_236078C78();
  *(_QWORD *)(v0 + 24) = **v1;
  *(_QWORD *)(v0 + 16) = v0 + 24;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 32) = &type metadata for PromoteAppsRequest;
  *(_QWORD *)(v0 + 40) = v2;
  v3 = sub_2360D0A04();
  *(_QWORD *)(v0 + 88) = v3;
  *(_QWORD *)(v0 + 96) = v4;
  v5 = v3;
  v6 = v4;
  v7 = *(_QWORD *)(v0 + 80);
  v12 = *(_OWORD *)(v0 + 56);
  swift_bridgeObjectRelease();
  v8 = sub_2360D0A10();
  *(_QWORD *)(v0 + 104) = v8;
  v9 = swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v9;
  *(_QWORD *)(v9 + 16) = v8;
  *(_OWORD *)(v9 + 24) = v12;
  *(_QWORD *)(v9 + 40) = v5;
  *(_QWORD *)(v9 + 48) = v6;
  *(_QWORD *)(v9 + 56) = v7;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05D8);
  *v10 = v0;
  v10[1] = sub_23606D834;
  return sub_2360D104C();
}

uint64_t sub_23606D834()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23606D8A8()
{
  uint64_t v0;

  sub_236077AC4(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 136));
}

uint64_t sub_23606D8E0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);

  sub_236077AC4(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23606D934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  v4[12] = *v3;
  return swift_task_switch();
}

uint64_t sub_23606D958()
{
  uint64_t v0;
  _QWORD **v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __int128 v14;

  v1 = *(_QWORD ***)(v0 + 64);
  sub_236078B88();
  v2 = sub_236078BCC();
  v3 = (*v1)[1];
  v4 = *((_BYTE *)*v1 + 16);
  *(_QWORD *)(v0 + 16) = **v1;
  *(_QWORD *)(v0 + 40) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v3;
  *(_BYTE *)(v0 + 32) = v4;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 48) = &type metadata for PollForUpdatesRequest;
  *(_QWORD *)(v0 + 56) = v2;
  v5 = sub_2360D0A04();
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 112) = v6;
  v7 = v5;
  v8 = v6;
  v9 = *(_QWORD *)(v0 + 96);
  v14 = *(_OWORD *)(v0 + 72);
  swift_bridgeObjectRelease();
  v10 = sub_2360D0A10();
  *(_QWORD *)(v0 + 120) = v10;
  v11 = swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v11;
  *(_QWORD *)(v11 + 16) = v10;
  *(_OWORD *)(v11 + 24) = v14;
  *(_QWORD *)(v11 + 40) = v7;
  *(_QWORD *)(v11 + 48) = v8;
  *(_QWORD *)(v11 + 56) = v9;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05D8);
  *v12 = v0;
  v12[1] = sub_23606DAE8;
  return sub_2360D104C();
}

uint64_t sub_23606DAE8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23606DB5C()
{
  uint64_t v0;

  sub_236077AC4(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 33));
}

uint64_t sub_23606DB94()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);

  sub_236077AC4(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23606DBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  v4[10] = *v3;
  return swift_task_switch();
}

uint64_t sub_23606DC0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v10;

  *(_QWORD *)(v0 + 24) = ***(_QWORD ***)(v0 + 48);
  *(_QWORD *)(v0 + 16) = v0 + 24;
  *(_QWORD *)(v0 + 32) = MEMORY[0x24BEE4568];
  *(_QWORD *)(v0 + 40) = MEMORY[0x24BEE4570];
  v1 = sub_2360D0A04();
  *(_QWORD *)(v0 + 88) = v1;
  *(_QWORD *)(v0 + 96) = v2;
  v3 = v1;
  v4 = v2;
  v5 = *(_QWORD *)(v0 + 80);
  v10 = *(_OWORD *)(v0 + 56);
  v6 = sub_2360D0A10();
  *(_QWORD *)(v0 + 104) = v6;
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v7;
  *(_QWORD *)(v7 + 16) = v6;
  *(_OWORD *)(v7 + 24) = v10;
  *(_QWORD *)(v7 + 40) = v3;
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v5;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05D8);
  *v8 = v0;
  v8[1] = sub_23606DD74;
  return sub_2360D104C();
}

uint64_t sub_23606DD74()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23606DDE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  v5[13] = *v4;
  return swift_task_switch();
}

uint64_t sub_23606DE10()
{
  uint64_t v0;
  _QWORD **v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __int128 v14;

  v1 = *(_QWORD ***)(v0 + 72);
  sub_236078944();
  v2 = sub_236078988();
  v3 = (*v1)[1];
  v4 = *((_BYTE *)*v1 + 16);
  *(_QWORD *)(v0 + 16) = **v1;
  *(_QWORD *)(v0 + 40) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v3;
  *(_BYTE *)(v0 + 32) = v4;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 48) = &type metadata for UpdateMetadataRequest;
  *(_QWORD *)(v0 + 56) = v2;
  v5 = sub_2360D0A04();
  *(_QWORD *)(v0 + 112) = v5;
  *(_QWORD *)(v0 + 120) = v6;
  v7 = v5;
  v8 = v6;
  v9 = *(_QWORD *)(v0 + 104);
  v14 = *(_OWORD *)(v0 + 80);
  swift_bridgeObjectRelease();
  v10 = sub_2360D0A10();
  *(_QWORD *)(v0 + 128) = v10;
  v11 = swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v11;
  *(_QWORD *)(v11 + 16) = v10;
  *(_OWORD *)(v11 + 24) = v14;
  *(_QWORD *)(v11 + 40) = v7;
  *(_QWORD *)(v11 + 48) = v8;
  *(_QWORD *)(v11 + 56) = v9;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0830);
  *v12 = v0;
  v12[1] = sub_23606DF90;
  return sub_2360D104C();
}

uint64_t sub_23606DF90()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23606E004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[15] = a3;
  v4[16] = v3;
  v4[13] = a1;
  v4[14] = a2;
  v4[17] = *v3;
  return swift_task_switch();
}

uint64_t sub_23606E028()
{
  uint64_t v0;
  uint64_t **v1;
  unint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __int128 v21;

  v1 = *(uint64_t ***)(v0 + 104);
  sub_236078898();
  v2 = sub_2360788DC();
  v3 = *v1;
  v5 = **v1;
  v4 = (*v1)[1];
  v6 = (*v1)[2];
  v7 = (*v1)[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  *(_QWORD *)(v0 + 16) = v5;
  *(_QWORD *)(v0 + 80) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v4;
  *(_QWORD *)(v0 + 32) = v6;
  *(_QWORD *)(v0 + 40) = v7;
  *(_QWORD *)(v0 + 48) = v8;
  *(_QWORD *)(v0 + 56) = v9;
  *(_QWORD *)(v0 + 64) = v10;
  *(_QWORD *)(v0 + 72) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 88) = &type metadata for UpdateMetadata;
  *(_QWORD *)(v0 + 96) = v2;
  v12 = sub_2360D0A04();
  *(_QWORD *)(v0 + 144) = v12;
  *(_QWORD *)(v0 + 152) = v13;
  v14 = v12;
  v15 = v13;
  v16 = *(_QWORD *)(v0 + 136);
  v21 = *(_OWORD *)(v0 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = sub_2360D0A10();
  *(_QWORD *)(v0 + 160) = v17;
  v18 = swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v18;
  *(_QWORD *)(v18 + 16) = v17;
  *(_OWORD *)(v18 + 24) = v21;
  *(_QWORD *)(v18 + 40) = v14;
  *(_QWORD *)(v18 + 48) = v15;
  *(_QWORD *)(v18 + 56) = v16;
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05D8);
  *v19 = v0;
  v19[1] = sub_23606E234;
  return sub_2360D104C();
}

uint64_t sub_23606E234()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23606E2A8()
{
  uint64_t v0;

  sub_236077AC4(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 192));
}

uint64_t sub_23606E2E0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(_QWORD *)(v0 + 152);

  sub_236077AC4(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23606E334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  v5[13] = *v4;
  return swift_task_switch();
}

uint64_t sub_23606E35C()
{
  uint64_t v0;
  uint64_t **v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  __int128 v17;

  v1 = *(uint64_t ***)(v0 + 72);
  sub_2360786F4();
  v2 = sub_236078738();
  v3 = **v1;
  v4 = (*v1)[1];
  v5 = (void *)(*v1)[2];
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 40) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v4;
  *(_QWORD *)(v0 + 32) = v5;
  sub_23607877C(v3, v4);
  v6 = v5;
  *(_QWORD *)(v0 + 48) = &type metadata for SecureButtonActionRequest;
  *(_QWORD *)(v0 + 56) = v2;
  v7 = sub_2360D0A04();
  *(_QWORD *)(v0 + 112) = v7;
  *(_QWORD *)(v0 + 120) = v8;
  v9 = v7;
  v10 = v8;
  v11 = *(_QWORD *)(v0 + 104);
  v12 = *(void **)(v0 + 32);
  v17 = *(_OWORD *)(v0 + 80);
  sub_23607878C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));

  v13 = sub_2360D0A10();
  *(_QWORD *)(v0 + 128) = v13;
  v14 = swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v14;
  *(_QWORD *)(v14 + 16) = v13;
  *(_OWORD *)(v14 + 24) = v17;
  *(_QWORD *)(v14 + 40) = v9;
  *(_QWORD *)(v14 + 48) = v10;
  *(_QWORD *)(v14 + 56) = v11;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v15;
  type metadata accessor for SecureButtonActionResponse(0);
  *v15 = v0;
  v15[1] = sub_23606E4E8;
  return sub_2360D104C();
}

uint64_t sub_23606E4E8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23606E55C()
{
  uint64_t v0;

  sub_236077AC4(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23606E590()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);

  sub_236077AC4(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23606E5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[15] = a4;
  v5[16] = v4;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  v5[17] = *v4;
  return swift_task_switch();
}

uint64_t sub_23606E60C()
{
  uint64_t v0;
  uint64_t **v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __int128 v19;

  v1 = *(uint64_t ***)(v0 + 104);
  sub_2360785A0();
  v2 = sub_2360785E4();
  v3 = **v1;
  v4 = (*v1)[1];
  v5 = (*v1)[2];
  v6 = (*v1)[3];
  v7 = (*v1)[4];
  v8 = (*v1)[5];
  v9 = *((_BYTE *)*v1 + 48);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 72) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v4;
  *(_QWORD *)(v0 + 32) = v5;
  *(_QWORD *)(v0 + 40) = v6;
  *(_QWORD *)(v0 + 48) = v7;
  *(_QWORD *)(v0 + 56) = v8;
  *(_BYTE *)(v0 + 64) = v9;
  sub_236078628(v3, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)(v0 + 80) = &type metadata for FetchPrivateDataRequest;
  *(_QWORD *)(v0 + 88) = v2;
  v10 = sub_2360D0A04();
  *(_QWORD *)(v0 + 144) = v10;
  *(_QWORD *)(v0 + 152) = v11;
  v12 = v10;
  v13 = v11;
  v14 = *(_QWORD *)(v0 + 136);
  v19 = *(_OWORD *)(v0 + 112);
  sub_23607867C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  v15 = sub_2360D0A10();
  *(_QWORD *)(v0 + 160) = v15;
  v16 = swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v16;
  *(_QWORD *)(v16 + 16) = v15;
  *(_OWORD *)(v16 + 24) = v19;
  *(_QWORD *)(v16 + 40) = v12;
  *(_QWORD *)(v16 + 48) = v13;
  *(_QWORD *)(v16 + 56) = v14;
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v17;
  *v17 = v0;
  v17[1] = sub_23606E7AC;
  return sub_2360D104C();
}

uint64_t sub_23606E7AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23606E820()
{
  uint64_t v0;

  sub_236077AC4(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23606E854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  v4[16] = *v3;
  return swift_task_switch();
}

uint64_t sub_23606E878()
{
  uint64_t v0;
  uint64_t **v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __int128 v19;

  v1 = *(uint64_t ***)(v0 + 96);
  sub_236078410();
  v2 = sub_236078454();
  v3 = **v1;
  v4 = (*v1)[1];
  v5 = (*v1)[2];
  v6 = (*v1)[3];
  v7 = (*v1)[4];
  v8 = (*v1)[5];
  v9 = *((_BYTE *)*v1 + 48);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 72) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v4;
  *(_QWORD *)(v0 + 32) = v5;
  *(_QWORD *)(v0 + 40) = v6;
  *(_QWORD *)(v0 + 48) = v7;
  *(_QWORD *)(v0 + 56) = v8;
  *(_BYTE *)(v0 + 64) = v9;
  sub_236078498(v3, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)(v0 + 80) = &type metadata for SetPrivateDataRequest;
  *(_QWORD *)(v0 + 88) = v2;
  v10 = sub_2360D0A04();
  *(_QWORD *)(v0 + 136) = v10;
  *(_QWORD *)(v0 + 144) = v11;
  v12 = v10;
  v13 = v11;
  v14 = *(_QWORD *)(v0 + 128);
  v19 = *(_OWORD *)(v0 + 104);
  sub_236078500(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  v15 = sub_2360D0A10();
  *(_QWORD *)(v0 + 152) = v15;
  v16 = swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v16;
  *(_QWORD *)(v16 + 16) = v15;
  *(_OWORD *)(v16 + 24) = v19;
  *(_QWORD *)(v16 + 40) = v12;
  *(_QWORD *)(v16 + 48) = v13;
  *(_QWORD *)(v16 + 56) = v14;
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05D8);
  *v17 = v0;
  v17[1] = sub_23606EA30;
  return sub_2360D104C();
}

uint64_t sub_23606EA30()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23606EAA4()
{
  uint64_t v0;

  sub_236077AC4(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 65));
}

uint64_t sub_23606EADC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);

  sub_236077AC4(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23606EB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[13] = *v3;
  return swift_task_switch();
}

uint64_t sub_23606EB54()
{
  uint64_t v0;
  uint64_t **v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  __int128 v15;

  v1 = *(uint64_t ***)(v0 + 72);
  sub_2360782D0();
  v2 = sub_236078314();
  v4 = **v1;
  v3 = (*v1)[1];
  v5 = (*v1)[2];
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v3;
  *(_QWORD *)(v0 + 32) = v5;
  *(_QWORD *)(v0 + 48) = v0 + 16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 56) = &type metadata for AvailableAppMetadataRequest;
  *(_QWORD *)(v0 + 64) = v2;
  v6 = sub_2360D0A04();
  *(_QWORD *)(v0 + 112) = v6;
  *(_QWORD *)(v0 + 120) = v7;
  v8 = v6;
  v9 = v7;
  v10 = *(_QWORD *)(v0 + 104);
  v15 = *(_OWORD *)(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = sub_2360D0A10();
  *(_QWORD *)(v0 + 128) = v11;
  v12 = swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v12;
  *(_QWORD *)(v12 + 16) = v11;
  *(_OWORD *)(v12 + 24) = v15;
  *(_QWORD *)(v12 + 40) = v8;
  *(_QWORD *)(v12 + 48) = v9;
  *(_QWORD *)(v12 + 56) = v10;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0780);
  *v13 = v0;
  v13[1] = sub_23606ECF8;
  return sub_2360D104C();
}

uint64_t sub_23606ECF8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23606ED6C()
{
  uint64_t v0;

  sub_236077AC4(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 40));
}

uint64_t sub_23606EDA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[3] = a3;
  v4[4] = v3;
  v4[2] = a2;
  v4[5] = *v3;
  return swift_task_switch();
}

uint64_t sub_23606EDC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v10;

  v1 = sub_2360D0A04();
  *(_QWORD *)(v0 + 48) = v1;
  *(_QWORD *)(v0 + 56) = v2;
  v3 = v1;
  v4 = v2;
  v5 = *(_QWORD *)(v0 + 40);
  v10 = *(_OWORD *)(v0 + 16);
  v6 = sub_2360D0A10();
  *(_QWORD *)(v0 + 64) = v6;
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v7;
  *(_QWORD *)(v7 + 16) = v6;
  *(_OWORD *)(v7 + 24) = v10;
  *(_QWORD *)(v7 + 40) = v3;
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v5;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05D8);
  *v8 = v0;
  v8[1] = sub_23606EEFC;
  return sub_2360D104C();
}

uint64_t sub_23606EEFC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23606EF70()
{
  uint64_t v0;

  sub_236077AC4(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 96));
}

uint64_t sub_23606EFA8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);

  sub_236077AC4(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23606EFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  v5[13] = *v4;
  return swift_task_switch();
}

uint64_t sub_23606F024()
{
  uint64_t v0;
  _QWORD **v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __int128 v14;

  v1 = *(_QWORD ***)(v0 + 72);
  sub_236078118();
  v2 = sub_23607815C();
  v3 = (*v1)[1];
  v4 = *((_BYTE *)*v1 + 16);
  *(_QWORD *)(v0 + 16) = **v1;
  *(_QWORD *)(v0 + 40) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v3;
  *(_BYTE *)(v0 + 32) = v4;
  sub_2360781A0();
  *(_QWORD *)(v0 + 48) = &type metadata for PerformActionRequest;
  *(_QWORD *)(v0 + 56) = v2;
  v5 = sub_2360D0A04();
  *(_QWORD *)(v0 + 112) = v5;
  *(_QWORD *)(v0 + 120) = v6;
  v7 = v5;
  v8 = v6;
  v9 = *(_QWORD *)(v0 + 104);
  v14 = *(_OWORD *)(v0 + 80);
  sub_2360781AC();
  v10 = sub_2360D0A10();
  *(_QWORD *)(v0 + 128) = v10;
  v11 = swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v11;
  *(_QWORD *)(v11 + 16) = v10;
  *(_OWORD *)(v11 + 24) = v14;
  *(_QWORD *)(v11 + 40) = v7;
  *(_QWORD *)(v11 + 48) = v8;
  *(_QWORD *)(v11 + 56) = v9;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v12;
  *v12 = v0;
  v12[1] = sub_23606E4E8;
  return sub_2360D104C();
}

uint64_t sub_23606F1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a1;
  v5[6] = a3;
  v5[9] = *v4;
  return swift_task_switch();
}

uint64_t sub_23606F1C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v10;

  sub_236077FD8();
  *(_QWORD *)(v0 + 32) = sub_23607801C();
  *(_QWORD *)(v0 + 24) = &type metadata for FetchPublicDataRequest;
  v1 = sub_2360D0A04();
  *(_QWORD *)(v0 + 80) = v1;
  *(_QWORD *)(v0 + 88) = v2;
  v3 = v1;
  v4 = v2;
  v5 = *(_QWORD *)(v0 + 72);
  v10 = *(_OWORD *)(v0 + 48);
  v6 = sub_2360D0A10();
  *(_QWORD *)(v0 + 96) = v6;
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v7;
  *(_QWORD *)(v7 + 16) = v6;
  *(_OWORD *)(v7 + 24) = v10;
  *(_QWORD *)(v7 + 40) = v3;
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v5;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v8;
  *v8 = v0;
  v8[1] = sub_23606F300;
  return sub_2360D104C();
}

uint64_t sub_23606F300()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23606F374()
{
  uint64_t v0;

  sub_236077AC4(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23606F3A8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);

  sub_236077AC4(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23606F3FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v4[9] = *v3;
  v4[10] = type metadata accessor for SetPublicDataRequest(0);
  v4[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23606F464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v13;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(uint64_t **)(v0 + 40);
  sub_236077F30(&qword_2563A06E0, type metadata accessor for SetPublicDataRequest, (uint64_t)&protocol conformance descriptor for SetPublicDataRequest);
  v4 = sub_236077F30(&qword_2563A06E8, type metadata accessor for SetPublicDataRequest, (uint64_t)&protocol conformance descriptor for SetPublicDataRequest);
  sub_236077F70(*v3, v1, type metadata accessor for SetPublicDataRequest);
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v4;
  v5 = sub_2360D0A04();
  *(_QWORD *)(v0 + 96) = v5;
  *(_QWORD *)(v0 + 104) = v6;
  v7 = v6;
  v8 = *(_QWORD *)(v0 + 72);
  v13 = *(_OWORD *)(v0 + 48);
  sub_236078270(*(_QWORD *)(v0 + 88), type metadata accessor for SetPublicDataRequest);
  v9 = sub_2360D0A10();
  *(_QWORD *)(v0 + 112) = v9;
  v10 = swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v10;
  *(_QWORD *)(v10 + 16) = v9;
  *(_OWORD *)(v10 + 24) = v13;
  *(_QWORD *)(v10 + 40) = v5;
  *(_QWORD *)(v10 + 48) = v7;
  *(_QWORD *)(v10 + 56) = v8;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05D8);
  *v11 = v0;
  v11[1] = sub_23606F620;
  return sub_2360D104C();
}

uint64_t sub_23606F620()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23606F694()
{
  uint64_t v0;
  uint64_t v1;

  sub_236077AC4(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  v1 = *(unsigned __int8 *)(v0 + 144);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_23606F6DC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);

  sub_236077AC4(v2, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23606F738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[12] = a4;
  v5[13] = v4;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  v5[14] = *v4;
  return swift_task_switch();
}

uint64_t sub_23606F760()
{
  uint64_t v0;
  uint64_t **v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  __int128 v16;

  v1 = *(uint64_t ***)(v0 + 80);
  sub_236077DB0();
  v2 = sub_236077DF4();
  v3 = **v1;
  v4 = (*v1)[1];
  v5 = (*v1)[2];
  v6 = *((_BYTE *)*v1 + 24);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 48) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v4;
  *(_QWORD *)(v0 + 32) = v5;
  *(_BYTE *)(v0 + 40) = v6;
  sub_236077E38(v3, v4, v5, v6);
  *(_QWORD *)(v0 + 56) = &type metadata for PerformPrivateActionRequest;
  *(_QWORD *)(v0 + 64) = v2;
  v7 = sub_2360D0A04();
  *(_QWORD *)(v0 + 120) = v7;
  *(_QWORD *)(v0 + 128) = v8;
  v9 = v7;
  v10 = v8;
  v11 = *(_QWORD *)(v0 + 112);
  v16 = *(_OWORD *)(v0 + 88);
  sub_236077E58(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  v12 = sub_2360D0A10();
  *(_QWORD *)(v0 + 136) = v12;
  v13 = swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v13;
  *(_QWORD *)(v13 + 16) = v12;
  *(_OWORD *)(v13 + 24) = v16;
  *(_QWORD *)(v13 + 40) = v9;
  *(_QWORD *)(v13 + 48) = v10;
  *(_QWORD *)(v13 + 56) = v11;
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v14;
  *v14 = v0;
  v14[1] = sub_23606F8EC;
  return sub_2360D104C();
}

uint64_t sub_23606F8EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23606F960()
{
  uint64_t v0;

  sub_236077AC4(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23606F994()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);

  sub_236077AC4(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23606F9E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v4[9] = *v3;
  v4[10] = type metadata accessor for ManifestValidationRequest();
  v4[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23606FA50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v13;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(uint64_t **)(v0 + 40);
  sub_236077F30(&qword_2563A0678, (uint64_t (*)(uint64_t))type metadata accessor for ManifestValidationRequest, (uint64_t)&protocol conformance descriptor for ManifestValidationRequest);
  v4 = sub_236077F30(&qword_2563A0680, (uint64_t (*)(uint64_t))type metadata accessor for ManifestValidationRequest, (uint64_t)&protocol conformance descriptor for ManifestValidationRequest);
  sub_236077F70(*v3, v1, (uint64_t (*)(_QWORD))type metadata accessor for ManifestValidationRequest);
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v4;
  v5 = sub_2360D0A04();
  *(_QWORD *)(v0 + 96) = v5;
  *(_QWORD *)(v0 + 104) = v6;
  v7 = v6;
  v8 = *(_QWORD *)(v0 + 72);
  v13 = *(_OWORD *)(v0 + 48);
  sub_236078270(*(_QWORD *)(v0 + 88), (uint64_t (*)(_QWORD))type metadata accessor for ManifestValidationRequest);
  v9 = sub_2360D0A10();
  *(_QWORD *)(v0 + 112) = v9;
  v10 = swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v10;
  *(_QWORD *)(v10 + 16) = v9;
  *(_OWORD *)(v10 + 24) = v13;
  *(_QWORD *)(v10 + 40) = v5;
  *(_QWORD *)(v10 + 48) = v7;
  *(_QWORD *)(v10 + 56) = v8;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05D8);
  *v11 = v0;
  v11[1] = sub_23606D14C;
  return sub_2360D104C();
}

uint64_t sub_23606FC0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v5[12] = *v4;
  return swift_task_switch();
}

uint64_t sub_23606FC34()
{
  uint64_t v0;
  _QWORD **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __int128 v14;

  v1 = *(_QWORD ***)(v0 + 64);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0630);
  sub_236077C74(&qword_2563A0638, MEMORY[0x24BEE0D38], MEMORY[0x24BEE4AC0]);
  v3 = sub_236077C74(&qword_2563A0640, MEMORY[0x24BEE0D08], MEMORY[0x24BEE4AA8]);
  v4 = (*v1)[1];
  *(_QWORD *)(v0 + 16) = **v1;
  *(_QWORD *)(v0 + 32) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v4;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 40) = v2;
  *(_QWORD *)(v0 + 48) = v3;
  v5 = sub_2360D0A04();
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 112) = v6;
  v7 = v5;
  v8 = v6;
  v9 = *(_QWORD *)(v0 + 96);
  v14 = *(_OWORD *)(v0 + 72);
  swift_bridgeObjectRelease();
  v10 = sub_2360D0A10();
  *(_QWORD *)(v0 + 120) = v10;
  v11 = swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v11;
  *(_QWORD *)(v11 + 16) = v10;
  *(_OWORD *)(v11 + 24) = v14;
  *(_QWORD *)(v11 + 40) = v7;
  *(_QWORD *)(v11 + 48) = v8;
  *(_QWORD *)(v11 + 56) = v9;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0648);
  *v12 = v0;
  v12[1] = sub_23606FDE4;
  return sub_2360D104C();
}

uint64_t sub_23606FDE4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23606FE58()
{
  uint64_t v0;

  sub_236077AC4(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23606FE8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v4[9] = *v3;
  return swift_task_switch();
}

uint64_t sub_23606FEB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v10;

  *(_BYTE *)(v0 + 129) = ***(_BYTE ***)(v0 + 40);
  *(_QWORD *)(v0 + 16) = v0 + 129;
  *(_QWORD *)(v0 + 24) = MEMORY[0x24BEE1328];
  *(_QWORD *)(v0 + 32) = MEMORY[0x24BEE1330];
  v1 = sub_2360D0A04();
  *(_QWORD *)(v0 + 80) = v1;
  *(_QWORD *)(v0 + 88) = v2;
  v3 = v1;
  v4 = v2;
  v5 = *(_QWORD *)(v0 + 72);
  v10 = *(_OWORD *)(v0 + 48);
  v6 = sub_2360D0A10();
  *(_QWORD *)(v0 + 96) = v6;
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v7;
  *(_QWORD *)(v7 + 16) = v6;
  *(_OWORD *)(v7 + 24) = v10;
  *(_QWORD *)(v7 + 40) = v3;
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v5;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05D8);
  *v8 = v0;
  v8[1] = sub_236070018;
  return sub_2360D104C();
}

uint64_t sub_236070018()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23607008C()
{
  uint64_t v0;

  sub_236077AC4(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 128));
}

unint64_t sub_2360700C4()
{
  unint64_t result;

  result = qword_2563A04C0;
  if (!qword_2563A04C0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D202C, &type metadata for AppInstallRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A04C0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for AppInstallRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2360D0914();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2360D08D8();
    v40 = *(_QWORD *)(v11 - 8);
    v41 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
    v41(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (_QWORD *)((char *)a1 + v12);
    v15 = (_QWORD *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (_QWORD *)((char *)a1 + v13);
    v18 = (_QWORD *)((char *)a2 + v13);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = a3[8];
    v21 = a3[9];
    v22 = (_QWORD *)((char *)a1 + v20);
    v23 = (_QWORD *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (char *)a1 + v21;
    v39 = (char *)a2 + v21;
    v26 = sub_2360D09A4();
    v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27(v25, v39, v26);
    v28 = a3[11];
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
    if (v31((char *)a2 + v28, 1, v11))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v41(v29, v30, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v29, 0, 1, v11);
    }
    v34 = a3[12];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    if (v31(v36, 1, v11))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      v41(v35, v36, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v35, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t destroy for AppInstallRequest(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  void (*v14)(uint64_t, uint64_t);

  v4 = sub_2360D0914();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_2360D08D8();
  v7 = *(_QWORD *)(v6 - 8);
  v14 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v14(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = a1 + a2[9];
  v9 = sub_2360D09A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = a1 + a2[11];
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v11(v10, 1, v6))
    v14(v10, v6);
  v12 = a1 + a2[12];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v12, 1, v6);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v14)(v12, v6);
  return result;
}

uint64_t initializeWithCopy for AppInstallRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  void *v28;
  const void *v29;
  unsigned int (*v30)(const void *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(void *, const void *, uint64_t);

  v6 = sub_2360D0914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_2360D08D8();
  v38 = *(_QWORD *)(v10 - 8);
  v39 = *(void (**)(void *, const void *, uint64_t))(v38 + 16);
  v39(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (_QWORD *)(a1 + v12);
  v17 = (_QWORD *)(a2 + v12);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = a3[8];
  v20 = a3[9];
  v21 = (_QWORD *)(a1 + v19);
  v22 = (_QWORD *)(a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = a1 + v20;
  v37 = a2 + v20;
  v25 = sub_2360D09A4();
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26(v24, v37, v25);
  v27 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v28 = (void *)(a1 + v27);
  v29 = (const void *)(a2 + v27);
  v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48);
  if (v30((const void *)(a2 + v27), 1, v10))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v39(v28, v29, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v28, 0, 1, v10);
  }
  v32 = a3[12];
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  if (v30(v34, 1, v10))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v39(v33, v34, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v33, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for AppInstallRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t (*v29)(const void *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  int v36;
  int v37;
  uint64_t v38;

  v6 = sub_2360D0914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_2360D08D8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[9];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_2360D09A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v26 = a3[11];
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  v29 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v30 = v29((const void *)(a1 + v26), 1, v10);
  v31 = v29(v28, 1, v10);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v27, v28, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v27, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v31)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v27, v10);
LABEL_6:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_7;
  }
  v12(v27, v28, v10);
LABEL_7:
  v33 = a3[12];
  v34 = (void *)(a1 + v33);
  v35 = (const void *)(a2 + v33);
  v36 = v29((const void *)(a1 + v33), 1, v10);
  v37 = v29(v35, 1, v10);
  if (!v36)
  {
    if (!v37)
    {
      v12(v34, v35, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v34, v10);
    goto LABEL_12;
  }
  if (v37)
  {
LABEL_12:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v34, v35, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v34, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for AppInstallRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  unsigned int (*v21)(const void *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;

  v6 = sub_2360D0914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_2360D08D8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v13 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  v14 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_2360D09A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v21((const void *)(a2 + v18), 1, v10))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v12(v19, v20, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  v23 = a3[12];
  v24 = (void *)(a1 + v23);
  v25 = (const void *)(a2 + v23);
  if (v21(v25, 1, v10))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v12(v24, v25, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for AppInstallRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t (*v35)(const void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  int v42;
  int v43;
  uint64_t v44;

  v6 = sub_2360D0914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_2360D08D8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  v28 = a3[9];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_2360D09A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
  v32 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  v35 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v36 = v35((const void *)(a1 + v32), 1, v10);
  v37 = v35(v34, 1, v10);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v33, v34, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v33, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v33, v10);
LABEL_6:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_7;
  }
  v12(v33, v34, v10);
LABEL_7:
  v39 = a3[12];
  v40 = (void *)(a1 + v39);
  v41 = (const void *)(a2 + v39);
  v42 = v35((const void *)(a1 + v39), 1, v10);
  v43 = v35(v41, 1, v10);
  if (!v42)
  {
    if (!v43)
    {
      v12(v40, v41, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v40, v10);
    goto LABEL_12;
  }
  if (v43)
  {
LABEL_12:
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v40, v41, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v40, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppInstallRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_236070DB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;

  v6 = sub_2360D0914();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_2360D08D8();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_12:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v16 = sub_2360D09A4();
    v12 = *(_QWORD *)(v16 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v16;
      v13 = a3[9];
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = a3[11];
    }
    goto LABEL_12;
  }
  v14 = *(_QWORD *)(a1 + a3[8] + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for AppInstallRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_236070EB8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = sub_2360D0914();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = sub_2360D08D8();
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[8] + 8) = (a2 - 1);
        return result;
      }
      v16 = sub_2360D09A4();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[9];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[11];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_236070FAC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_2360D0914();
  if (v0 <= 0x3F)
  {
    sub_2360D08D8();
    if (v1 <= 0x3F)
    {
      sub_2360D09A4();
      if (v2 <= 0x3F)
      {
        sub_236071084();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void sub_236071084()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2563A0568[0])
  {
    sub_2360D08D8();
    v0 = sub_2360D0D7C();
    if (!v1)
      atomic_store(v0, qword_2563A0568);
  }
}

uint64_t getEnumTagSinglePayload for AppInstallRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AppInstallRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_2360711B4 + 4 * byte_2360D1E12[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_2360711E8 + 4 * byte_2360D1E0D[v4]))();
}

uint64_t sub_2360711E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360711F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360711F8);
  return result;
}

uint64_t sub_236071204(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23607120CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_236071210(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236071218(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_236071224(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AppInstallRequest.CodingKeys()
{
  return &type metadata for AppInstallRequest.CodingKeys;
}

unint64_t sub_236071240()
{
  unint64_t result;

  result = qword_2563A05B8;
  if (!qword_2563A05B8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D2004, &type metadata for AppInstallRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A05B8);
  }
  return result;
}

unint64_t sub_236071288()
{
  unint64_t result;

  result = qword_2563A05C0;
  if (!qword_2563A05C0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D1F3C, &type metadata for AppInstallRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A05C0);
  }
  return result;
}

unint64_t sub_2360712D0()
{
  unint64_t result;

  result = qword_2563A05C8;
  if (!qword_2563A05C8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D1F64, &type metadata for AppInstallRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A05C8);
  }
  return result;
}

uint64_t sub_236071314(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v29;
  uint64_t v30[4];
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a5;
  v26 = a6;
  v27 = a4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v16(v15 + v14, v12, v9);
  aBlock[4] = sub_236077B14;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236074850;
  aBlock[3] = &block_descriptor_175;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)aBlock, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if (swift_dynamicCast())
  {
    v19 = v29;
    v13(v12, a1, v9);
    v20 = swift_allocObject();
    v16(v20 + v14, v12, v9);
    v21 = v25;
    *(_QWORD *)(v20 + ((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v28(v19, v21, v26, sub_236079014, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v22 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v30[0] = v22;
    sub_2360D0C50();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_2360715A0(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v29;
  uint64_t v30[4];
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a5;
  v26 = a6;
  v27 = a4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v16(v15 + v14, v12, v9);
  aBlock[4] = sub_236077B14;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236074850;
  aBlock[3] = &block_descriptor_166;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)aBlock, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if (swift_dynamicCast())
  {
    v19 = v29;
    v13(v12, a1, v9);
    v20 = swift_allocObject();
    v16(v20 + v14, v12, v9);
    v21 = v25;
    *(_QWORD *)(v20 + ((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v28(v19, v21, v26, sub_236079014, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v22 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v30[0] = v22;
    sub_2360D0C50();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_23607182C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v29;
  uint64_t v30[4];
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a5;
  v26 = a6;
  v27 = a4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v16(v15 + v14, v12, v9);
  aBlock[4] = sub_236077B14;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236074850;
  aBlock[3] = &block_descriptor_157;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)aBlock, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if (swift_dynamicCast())
  {
    v19 = v29;
    v13(v12, a1, v9);
    v20 = swift_allocObject();
    v16(v20 + v14, v12, v9);
    v21 = v25;
    *(_QWORD *)(v20 + ((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v28(v19, v21, v26, sub_236078D8C, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v22 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v30[0] = v22;
    sub_2360D0C50();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_236071AB8(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v29;
  uint64_t v30[4];
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a5;
  v26 = a6;
  v27 = a4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v16(v15 + v14, v12, v9);
  aBlock[4] = sub_236077B14;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236074850;
  aBlock[3] = &block_descriptor_148;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)aBlock, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if (swift_dynamicCast())
  {
    v19 = v29;
    v13(v12, a1, v9);
    v20 = swift_allocObject();
    v16(v20 + v14, v12, v9);
    v21 = v25;
    *(_QWORD *)(v20 + ((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v28(v19, v21, v26, sub_236079014, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v22 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v30[0] = v22;
    sub_2360D0C50();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_236071D44(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v29;
  uint64_t v30[4];
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a5;
  v26 = a6;
  v27 = a4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v16(v15 + v14, v12, v9);
  aBlock[4] = sub_236077B14;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236074850;
  aBlock[3] = &block_descriptor_139;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)aBlock, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if (swift_dynamicCast())
  {
    v19 = v29;
    v13(v12, a1, v9);
    v20 = swift_allocObject();
    v16(v20 + v14, v12, v9);
    v21 = v25;
    *(_QWORD *)(v20 + ((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v28(v19, v21, v26, sub_236079014, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v22 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v30[0] = v22;
    sub_2360D0C50();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_236071FD0(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v29;
  uint64_t v30[4];
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a5;
  v26 = a6;
  v27 = a4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v16(v15 + v14, v12, v9);
  aBlock[4] = sub_236077B14;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236074850;
  aBlock[3] = &block_descriptor;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)aBlock, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if (swift_dynamicCast())
  {
    v19 = v29;
    v13(v12, a1, v9);
    v20 = swift_allocObject();
    v16(v20 + v14, v12, v9);
    v21 = v25;
    *(_QWORD *)(v20 + ((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v28(v19, v21, v26, sub_236079014, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v22 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v30[0] = v22;
    sub_2360D0C50();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_23607225C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v29;
  uint64_t v30[4];
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a5;
  v26 = a6;
  v27 = a4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0838);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v16(v15 + v14, v12, v9);
  aBlock[4] = sub_2360789E4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236074850;
  aBlock[3] = &block_descriptor_130;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)aBlock, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if (swift_dynamicCast())
  {
    v19 = v29;
    v13(v12, a1, v9);
    v20 = swift_allocObject();
    v16(v20 + v14, v12, v9);
    v21 = v25;
    *(_QWORD *)(v20 + ((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v28(v19, v21, v26, sub_236078A04, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v22 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v30[0] = v22;
    sub_2360D0C50();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_2360724E8(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v29;
  uint64_t v30[4];
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a5;
  v26 = a6;
  v27 = a4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v16(v15 + v14, v12, v9);
  aBlock[4] = sub_236077B14;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236074850;
  aBlock[3] = &block_descriptor_121;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)aBlock, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if (swift_dynamicCast())
  {
    v19 = v29;
    v13(v12, a1, v9);
    v20 = swift_allocObject();
    v16(v20 + v14, v12, v9);
    v21 = v25;
    *(_QWORD *)(v20 + ((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v28(v19, v21, v26, sub_236079014, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v22 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v30[0] = v22;
    sub_2360D0C50();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_236072774(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v29;
  uint64_t v30[4];
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a5;
  v26 = a6;
  v27 = a4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A07E0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v16(v15 + v14, v12, v9);
  aBlock[4] = sub_2360787B4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236074850;
  aBlock[3] = &block_descriptor_112;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)aBlock, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if (swift_dynamicCast())
  {
    v19 = v29;
    v13(v12, a1, v9);
    v20 = swift_allocObject();
    v16(v20 + v14, v12, v9);
    v21 = v25;
    *(_QWORD *)(v20 + ((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v28(v19, v21, v26, sub_2360787D4, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v22 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v30[0] = v22;
    sub_2360D0C50();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_236072A00(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v29;
  uint64_t v30[4];
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a5;
  v26 = a6;
  v27 = a4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0708);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v16(v15 + v14, v12, v9);
  aBlock[4] = sub_236078078;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236074850;
  aBlock[3] = &block_descriptor_103;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)aBlock, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if (swift_dynamicCast())
  {
    v19 = v29;
    v13(v12, a1, v9);
    v20 = swift_allocObject();
    v16(v20 + v14, v12, v9);
    v21 = v25;
    *(_QWORD *)(v20 + ((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v28(v19, v21, v26, sub_236079018, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v22 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v30[0] = v22;
    sub_2360D0C50();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_236072C8C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v29;
  uint64_t v30[4];
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a5;
  v26 = a6;
  v27 = a4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v16(v15 + v14, v12, v9);
  aBlock[4] = sub_236077B14;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236074850;
  aBlock[3] = &block_descriptor_94;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)aBlock, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if (swift_dynamicCast())
  {
    v19 = v29;
    v13(v12, a1, v9);
    v20 = swift_allocObject();
    v16(v20 + v14, v12, v9);
    v21 = v25;
    *(_QWORD *)(v20 + ((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v28(v19, v21, v26, sub_236079014, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v22 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v30[0] = v22;
    sub_2360D0C50();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_236072F18(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v29;
  uint64_t v30[4];
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a5;
  v26 = a6;
  v27 = a4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0788);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v16(v15 + v14, v12, v9);
  aBlock[4] = sub_236078370;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236074850;
  aBlock[3] = &block_descriptor_85;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)aBlock, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if (swift_dynamicCast())
  {
    v19 = v29;
    v13(v12, a1, v9);
    v20 = swift_allocObject();
    v16(v20 + v14, v12, v9);
    v21 = v25;
    *(_QWORD *)(v20 + ((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v28(v19, v21, v26, sub_236078390, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v22 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v30[0] = v22;
    sub_2360D0C50();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_2360731A4(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v29;
  uint64_t v30[4];
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a5;
  v26 = a6;
  v27 = a4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v16(v15 + v14, v12, v9);
  aBlock[4] = sub_236077B14;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236074850;
  aBlock[3] = &block_descriptor_76;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)aBlock, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if (swift_dynamicCast())
  {
    v19 = v29;
    v13(v12, a1, v9);
    v20 = swift_allocObject();
    v16(v20 + v14, v12, v9);
    v21 = v25;
    *(_QWORD *)(v20 + ((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v28(v19, v21, v26, sub_236079014, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v22 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v30[0] = v22;
    sub_2360D0C50();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_236073430(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v29;
  uint64_t v30[4];
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a5;
  v26 = a6;
  v27 = a4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0740);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v16(v15 + v14, v12, v9);
  aBlock[4] = sub_2360781D0;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236074850;
  aBlock[3] = &block_descriptor_67;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)aBlock, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if (swift_dynamicCast())
  {
    v19 = v29;
    v13(v12, a1, v9);
    v20 = swift_allocObject();
    v16(v20 + v14, v12, v9);
    v21 = v25;
    *(_QWORD *)(v20 + ((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v28(v19, v21, v26, sub_2360781F0, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v22 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v30[0] = v22;
    sub_2360D0C50();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_2360736BC(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v29;
  uint64_t v30[4];
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a5;
  v26 = a6;
  v27 = a4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0708);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v16(v15 + v14, v12, v9);
  aBlock[4] = sub_236078078;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236074850;
  aBlock[3] = &block_descriptor_58;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)aBlock, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if (swift_dynamicCast())
  {
    v19 = v29;
    v13(v12, a1, v9);
    v20 = swift_allocObject();
    v16(v20 + v14, v12, v9);
    v21 = v25;
    *(_QWORD *)(v20 + ((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v28(v19, v21, v26, sub_236078098, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v22 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v30[0] = v22;
    sub_2360D0C50();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_236073948(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v29;
  uint64_t v30[4];
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a5;
  v26 = a6;
  v27 = a4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v16(v15 + v14, v12, v9);
  aBlock[4] = sub_236077B14;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236074850;
  aBlock[3] = &block_descriptor_49;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)aBlock, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if (swift_dynamicCast())
  {
    v19 = v29;
    v13(v12, a1, v9);
    v20 = swift_allocObject();
    v16(v20 + v14, v12, v9);
    v21 = v25;
    *(_QWORD *)(v20 + ((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v28(v19, v21, v26, sub_236079014, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v22 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v30[0] = v22;
    sub_2360D0C50();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_236073BD4(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v29;
  uint64_t v30[4];
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a5;
  v26 = a6;
  v27 = a4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A06A0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v16(v15 + v14, v12, v9);
  aBlock[4] = sub_236077E90;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236074850;
  aBlock[3] = &block_descriptor_40;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)aBlock, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if (swift_dynamicCast())
  {
    v19 = v29;
    v13(v12, a1, v9);
    v20 = swift_allocObject();
    v16(v20 + v14, v12, v9);
    v21 = v25;
    *(_QWORD *)(v20 + ((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v28(v19, v21, v26, sub_236077EB0, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v22 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v30[0] = v22;
    sub_2360D0C50();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_236073E60(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v29;
  uint64_t v30[4];
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a5;
  v26 = a6;
  v27 = a4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v16(v15 + v14, v12, v9);
  aBlock[4] = sub_236077C54;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236074850;
  aBlock[3] = &block_descriptor_31;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)aBlock, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if (swift_dynamicCast())
  {
    v19 = v29;
    v13(v12, a1, v9);
    v20 = swift_allocObject();
    v16(v20 + v14, v12, v9);
    v21 = v25;
    *(_QWORD *)(v20 + ((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v28(v19, v21, v26, sub_236079014, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v22 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v30[0] = v22;
    sub_2360D0C50();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_2360740EC(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v29;
  uint64_t v30[4];
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a5;
  v26 = a6;
  v27 = a4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0650);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v16(v15 + v14, v12, v9);
  aBlock[4] = sub_236077CEC;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236074850;
  aBlock[3] = &block_descriptor_22;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)aBlock, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if (swift_dynamicCast())
  {
    v19 = v29;
    v13(v12, a1, v9);
    v20 = swift_allocObject();
    v16(v20 + v14, v12, v9);
    v21 = v25;
    *(_QWORD *)(v20 + ((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v28(v19, v21, v26, sub_236077D0C, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v22 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v30[0] = v22;
    sub_2360D0C50();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_236074378(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v29;
  uint64_t v30[4];
  _QWORD aBlock[6];

  v24 = a7;
  v25 = a5;
  v26 = a6;
  v27 = a4;
  v28 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v16(v15 + v14, v12, v9);
  aBlock[4] = sub_236077C54;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236074850;
  aBlock[3] = &block_descriptor_13;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v17);
  _Block_release(v17);
  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)aBlock, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if (swift_dynamicCast())
  {
    v19 = v29;
    v13(v12, a1, v9);
    v20 = swift_allocObject();
    v16(v20 + v14, v12, v9);
    v21 = v25;
    *(_QWORD *)(v20 + ((v14 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
    v28(v19, v21, v26, sub_236079014, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v22 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v30[0] = v22;
    sub_2360D0C50();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_236074604(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = sub_2360D0B3C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2360D0AF4();
  v9 = a1;
  v10 = a1;
  v11 = sub_2360D0B24();
  v12 = sub_2360D0D28();
  if (os_log_type_enabled(v11, v12))
  {
    v23 = v5;
    v13 = swift_slowAlloc();
    v22 = v6;
    v14 = (uint8_t *)v13;
    v21 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v14 = 138543362;
    v15 = a1;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    v24 = v16;
    v5 = v23;
    sub_2360D0D88();
    v17 = v21;
    *v21 = v16;

    _os_log_impl(&dword_236065000, v11, v12, "Error fetching remote object proxy: %{public}@", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0618);
    swift_arrayDestroy();
    MEMORY[0x23B7EBB1C](v17, -1, -1);
    v18 = v14;
    v6 = v22;
    MEMORY[0x23B7EBB1C](v18, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  type metadata accessor for MarketplaceKitError();
  sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
  v19 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  v24 = v19;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_2360D0C50();
}

void sub_236074850(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_2360748A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t), uint64_t *a7)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;

  v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a6(a1, a2);
  sub_2360777AC((uint64_t)v14, a5, a7);
  return sub_236078B4C((uint64_t)v14, a5);
}

uint64_t sub_236074950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t), void (*a7)(char *))
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;

  v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a6(a1, a2);
  a7(v14);
  return sub_236078B4C((uint64_t)v14, a5);
}

uint64_t sub_2360749F8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  char *v27;

  v19 = a3;
  v5 = sub_2360D0B3C();
  v17[0] = *(_QWORD *)(v5 - 8);
  v17[1] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v6);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05F0);
  MEMORY[0x24BDAC7A8](v18);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05F8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v17 - v13;
  v24 = a1;
  v25 = a2;
  v26 = &v24;
  v27 = (char *)v17 - v13;
  sub_236077B70(a1, a2);
  v22 = v9;
  v23 = MEMORY[0x24BDCDDE8];
  v21 = sub_236077BB4();
  v20 = sub_236078A84(&qword_2563A0608, &qword_2563A05F8);
  sub_2360D09F8();
  sub_236077AC4(v24, v25);
  sub_236078AC4((uint64_t)v14, (uint64_t)v12, &qword_2563A05F8);
  if (swift_getEnumCaseMultiPayload() == 1)
    sub_236078854((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
  else
    *v8 = *v12;
  v15 = v19;
  swift_storeEnumTagMultiPayload();
  sub_236078B08((uint64_t)v8, v15, &qword_2563A05F0);
  return sub_236078B4C((uint64_t)v14, &qword_2563A05F8);
}

uint64_t sub_236074E38@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  char *v29;

  v21 = a3;
  v5 = sub_2360D0B3C();
  v19[0] = *(_QWORD *)(v5 - 8);
  v19[1] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v6);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0840);
  MEMORY[0x24BDAC7A8](v20);
  v8 = (_OWORD *)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0848);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (_OWORD *)((char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v19 - v13;
  v26 = a1;
  v27 = a2;
  v28 = &v26;
  v29 = (char *)v19 - v13;
  sub_236077B70(a1, a2);
  v24 = v9;
  v25 = MEMORY[0x24BDCDDE8];
  v23 = sub_236077BB4();
  v22 = sub_236078A84(&qword_2563A0850, &qword_2563A0848);
  sub_2360D09F8();
  sub_236077AC4(v26, v27);
  sub_236078AC4((uint64_t)v14, (uint64_t)v12, &qword_2563A0848);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_236078854((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
  }
  else
  {
    v15 = v12[1];
    *v8 = *v12;
    v8[1] = v15;
    v16 = v12[3];
    v8[2] = v12[2];
    v8[3] = v16;
  }
  v17 = v21;
  swift_storeEnumTagMultiPayload();
  sub_236078B08((uint64_t)v8, v17, &qword_2563A0840);
  return sub_236078B4C((uint64_t)v14, &qword_2563A0848);
}

uint64_t sub_236075280@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  _QWORD v19[5];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  char *v28;

  v20 = a3;
  v5 = sub_2360D0B3C();
  v19[2] = *(_QWORD *)(v5 - 8);
  v19[3] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v19[4] = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A07E8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A07F0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v19 - v15;
  v25 = a1;
  v26 = a2;
  v27 = &v25;
  v28 = (char *)v19 - v15;
  sub_236077B70(a1, a2);
  v23 = v11;
  v24 = MEMORY[0x24BDCDDE8];
  v22 = sub_236077BB4();
  v21 = sub_236078A84(&qword_2563A07F8, &qword_2563A07F0);
  sub_2360D09F8();
  sub_236077AC4(v25, v26);
  sub_236078AC4((uint64_t)v16, (uint64_t)v14, &qword_2563A07F0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v17 = (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError;
  else
    v17 = type metadata accessor for SecureButtonActionResponse;
  sub_236078854((uint64_t)v14, (uint64_t)v10, v17);
  swift_storeEnumTagMultiPayload();
  sub_236078B08((uint64_t)v10, v20, &qword_2563A07E8);
  return sub_236078B4C((uint64_t)v16, &qword_2563A07F0);
}

uint64_t sub_2360756C8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  char *v28;

  v20 = a3;
  v5 = sub_2360D0B3C();
  v18[0] = *(_QWORD *)(v5 - 8);
  v18[1] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v6);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0710);
  MEMORY[0x24BDAC7A8](v19);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0718);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v18 - v13;
  v25 = a1;
  v26 = a2;
  v27 = &v25;
  v28 = (char *)v18 - v13;
  sub_236077B70(a1, a2);
  v23 = v9;
  v24 = MEMORY[0x24BDCDDE8];
  v22 = sub_236077BB4();
  v21 = sub_236078A84(&qword_2563A0720, &qword_2563A0718);
  sub_2360D09F8();
  sub_236077AC4(v25, v26);
  sub_236078AC4((uint64_t)v14, (uint64_t)v12, &qword_2563A0718);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_236078854((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
  }
  else
  {
    v15 = v12[16];
    *(_OWORD *)v8 = *(_OWORD *)v12;
    v8[16] = v15;
  }
  v16 = v20;
  swift_storeEnumTagMultiPayload();
  sub_236078B08((uint64_t)v8, v16, &qword_2563A0710);
  return sub_236078B4C((uint64_t)v14, &qword_2563A0718);
}

uint64_t sub_236075B10@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  char *v27;

  v19 = a3;
  v5 = sub_2360D0B3C();
  v17[0] = *(_QWORD *)(v5 - 8);
  v17[1] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v6);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0790);
  MEMORY[0x24BDAC7A8](v18);
  v8 = (_QWORD *)((char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0798);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (_QWORD *)((char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v17 - v13;
  v24 = a1;
  v25 = a2;
  v26 = &v24;
  v27 = (char *)v17 - v13;
  sub_236077B70(a1, a2);
  v22 = v9;
  v23 = MEMORY[0x24BDCDDE8];
  v21 = sub_236077BB4();
  v20 = sub_236078A84(&qword_2563A07A0, &qword_2563A0798);
  sub_2360D09F8();
  sub_236077AC4(v24, v25);
  sub_236078AC4((uint64_t)v14, (uint64_t)v12, &qword_2563A0798);
  if (swift_getEnumCaseMultiPayload() == 1)
    sub_236078854((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
  else
    *v8 = *v12;
  v15 = v19;
  swift_storeEnumTagMultiPayload();
  sub_236078B08((uint64_t)v8, v15, &qword_2563A0790);
  return sub_236078B4C((uint64_t)v14, &qword_2563A0798);
}

uint64_t sub_236075F50@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  char *v27;

  v19 = a3;
  v5 = sub_2360D0B3C();
  v17[0] = *(_QWORD *)(v5 - 8);
  v17[1] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v6);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0748);
  MEMORY[0x24BDAC7A8](v18);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0750);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v17 - v13;
  v24 = a1;
  v25 = a2;
  v26 = &v24;
  v27 = (char *)v17 - v13;
  sub_236077B70(a1, a2);
  v22 = v9;
  v23 = MEMORY[0x24BDCDDE8];
  v21 = sub_236077BB4();
  v20 = sub_236078A84(&qword_2563A0758, &qword_2563A0750);
  sub_2360D09F8();
  sub_236077AC4(v24, v25);
  sub_236078AC4((uint64_t)v14, (uint64_t)v12, &qword_2563A0750);
  if (swift_getEnumCaseMultiPayload() == 1)
    sub_236078854((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
  v15 = v19;
  swift_storeEnumTagMultiPayload();
  sub_236078B08((uint64_t)v8, v15, &qword_2563A0748);
  return sub_236078B4C((uint64_t)v14, &qword_2563A0750);
}

uint64_t sub_236076388@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  char *v27;

  v19 = a3;
  v5 = sub_2360D0B3C();
  v17[0] = *(_QWORD *)(v5 - 8);
  v17[1] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v6);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A06C0);
  MEMORY[0x24BDAC7A8](v18);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A06C8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v17 - v13;
  v24 = a1;
  v25 = a2;
  v26 = &v24;
  v27 = (char *)v17 - v13;
  sub_236077B70(a1, a2);
  v22 = v9;
  v23 = MEMORY[0x24BDCDDE8];
  v21 = sub_236077BB4();
  v20 = sub_236078A84(&qword_2563A06D0, &qword_2563A06C8);
  sub_2360D09F8();
  sub_236077AC4(v24, v25);
  sub_236078AC4((uint64_t)v14, (uint64_t)v12, &qword_2563A06C8);
  if (swift_getEnumCaseMultiPayload() == 1)
    sub_236078854((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
  else
    *v8 = *v12;
  v15 = v19;
  swift_storeEnumTagMultiPayload();
  sub_236078B08((uint64_t)v8, v15, &qword_2563A06C0);
  return sub_236078B4C((uint64_t)v14, &qword_2563A06C8);
}

uint64_t sub_2360767C8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  char *v27;

  v19 = a3;
  v5 = sub_2360D0B3C();
  v17[0] = *(_QWORD *)(v5 - 8);
  v17[1] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v6);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A06A8);
  MEMORY[0x24BDAC7A8](v18);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A06B0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v17 - v13;
  v24 = a1;
  v25 = a2;
  v26 = &v24;
  v27 = (char *)v17 - v13;
  sub_236077B70(a1, a2);
  v22 = v9;
  v23 = MEMORY[0x24BDCDDE8];
  v21 = sub_236077BB4();
  v20 = sub_236078A84(&qword_2563A06B8, &qword_2563A06B0);
  sub_2360D09F8();
  sub_236077AC4(v24, v25);
  sub_236078AC4((uint64_t)v14, (uint64_t)v12, &qword_2563A06B0);
  if (swift_getEnumCaseMultiPayload() == 1)
    sub_236078854((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
  v15 = v19;
  swift_storeEnumTagMultiPayload();
  sub_236078B08((uint64_t)v8, v15, &qword_2563A06A8);
  return sub_236078B4C((uint64_t)v14, &qword_2563A06B0);
}

uint64_t sub_236076C00@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  char *v28;

  v20 = a3;
  v5 = sub_2360D0B3C();
  v18[0] = *(_QWORD *)(v5 - 8);
  v18[1] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v6);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0658);
  MEMORY[0x24BDAC7A8](v19);
  v8 = (_OWORD *)((char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0660);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (_OWORD *)((char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v18 - v13;
  v25 = a1;
  v26 = a2;
  v27 = &v25;
  v28 = (char *)v18 - v13;
  sub_236077B70(a1, a2);
  v23 = v9;
  v24 = MEMORY[0x24BDCDDE8];
  v22 = sub_236077BB4();
  v21 = sub_236078A84(&qword_2563A0668, &qword_2563A0660);
  sub_2360D09F8();
  sub_236077AC4(v25, v26);
  sub_236078AC4((uint64_t)v14, (uint64_t)v12, &qword_2563A0660);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_236078854((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
  }
  else
  {
    v15 = v12[1];
    *v8 = *v12;
    v8[1] = v15;
  }
  v16 = v20;
  swift_storeEnumTagMultiPayload();
  sub_236078B08((uint64_t)v8, v16, &qword_2563A0658);
  return sub_236078B4C((uint64_t)v14, &qword_2563A0660);
}

uint64_t sub_236077040(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[8];
  uint64_t v12;

  v2 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05F0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_236078AC4(a1, (uint64_t)v7, &qword_2563A05F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_236078854((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v8 = swift_allocError();
    sub_236078854((uint64_t)v4, v9, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    v12 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E0);
    return sub_2360D0C50();
  }
  else
  {
    v11[7] = *v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E0);
    return sub_2360D0C5C();
  }
}

uint64_t sub_2360771AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  _OWORD v13[4];

  v2 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0840);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (_OWORD *)((char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_236078AC4(a1, (uint64_t)v7, &qword_2563A0840);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_236078854((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v8 = swift_allocError();
    sub_236078854((uint64_t)v4, v9, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    *(_QWORD *)&v13[0] = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0838);
    return sub_2360D0C50();
  }
  else
  {
    v11 = v7[1];
    v13[0] = *v7;
    v13[1] = v11;
    v12 = v7[3];
    v13[2] = v7[2];
    v13[3] = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0838);
    return sub_2360D0C5C();
  }
}

uint64_t sub_236077320(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  v2 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SecureButtonActionResponse(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A07E8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236078AC4(a1, (uint64_t)v10, &qword_2563A07E8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_236078854((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v11 = swift_allocError();
    sub_236078854((uint64_t)v4, v12, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    v14[1] = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A07E0);
    return sub_2360D0C50();
  }
  else
  {
    sub_236078854((uint64_t)v10, (uint64_t)v7, type metadata accessor for SecureButtonActionResponse);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A07E0);
    return sub_2360D0C5C();
  }
}

uint64_t sub_2360774CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  __int128 v12;
  char v13;

  v2 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0710);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236078AC4(a1, (uint64_t)v7, &qword_2563A0710);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_236078854((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v8 = swift_allocError();
    sub_236078854((uint64_t)v4, v9, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    *(_QWORD *)&v12 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0708);
    return sub_2360D0C50();
  }
  else
  {
    v11 = v7[16];
    v12 = *(_OWORD *)v7;
    v13 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0708);
    return sub_2360D0C5C();
  }
}

uint64_t sub_236077640(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v2 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0790);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_236078AC4(a1, (uint64_t)v7, &qword_2563A0790);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_236078854((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v8 = swift_allocError();
    sub_236078854((uint64_t)v4, v9, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    v12 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0788);
    return sub_2360D0C50();
  }
  else
  {
    v12 = *v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0788);
    return sub_2360D0C5C();
  }
}

uint64_t sub_2360777AC(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v6 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236078AC4(a1, (uint64_t)v11, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_236078854((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v12 = swift_allocError();
    sub_236078854((uint64_t)v8, v13, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    v15[1] = v12;
    __swift_instantiateConcreteTypeFromMangledName(a3);
    return sub_2360D0C50();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    return sub_2360D0C5C();
  }
}

uint64_t sub_236077904(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  _OWORD v12[2];

  v2 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0658);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (_OWORD *)((char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_236078AC4(a1, (uint64_t)v7, &qword_2563A0658);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_236078854((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v8 = swift_allocError();
    sub_236078854((uint64_t)v4, v9, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    *(_QWORD *)&v12[0] = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0650);
    return sub_2360D0C50();
  }
  else
  {
    v11 = v7[1];
    v12[0] = *v7;
    v12[1] = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0650);
    return sub_2360D0C5C();
  }
}

uint64_t sub_236077A70()
{
  unint64_t v0;

  v0 = sub_2360D0EF0();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

uint64_t sub_236077AB8(uint64_t a1)
{
  return sub_236078EC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236071FD0);
}

uint64_t sub_236077AC4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_236077B08()
{
  return objectdestroyTm(&qword_2563A05E0);
}

uint64_t sub_236077B14(uint64_t a1)
{
  return sub_236078F40(a1, &qword_2563A05E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_236074604);
}

uint64_t sub_236077B28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_236077B64()
{
  return objectdestroy_5Tm(&qword_2563A05E0);
}

uint64_t sub_236077B70(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_236077BB4()
{
  unint64_t result;

  result = qword_2563A0600;
  if (!qword_2563A0600)
  {
    result = MEMORY[0x23B7EBA68](MEMORY[0x24BDCDDC0], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2563A0600);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B7EBA5C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_236077C3C(uint64_t a1)
{
  return sub_236078EC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236074378);
}

uint64_t sub_236077C48()
{
  return objectdestroyTm(&qword_2563A05E0);
}

uint64_t sub_236077C54(uint64_t a1)
{
  return sub_236078F40(a1, &qword_2563A05E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_2360790D0);
}

uint64_t sub_236077C68()
{
  return objectdestroy_5Tm(&qword_2563A05E0);
}

uint64_t sub_236077C74(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563A0630);
    v8 = a2;
    result = MEMORY[0x23B7EBA68](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236077CD4(uint64_t a1)
{
  return sub_236078EC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2360740EC);
}

uint64_t sub_236077CE0()
{
  return objectdestroyTm(&qword_2563A0650);
}

uint64_t sub_236077CEC(uint64_t a1)
{
  return sub_236078F40(a1, &qword_2563A0650, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_2360790D0);
}

uint64_t sub_236077D00()
{
  return objectdestroy_5Tm(&qword_2563A0650);
}

uint64_t sub_236077D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563A0650) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_236074950(a1, a2, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), &qword_2563A0658, (void (*)(uint64_t, uint64_t))sub_236076C00, (void (*)(char *))sub_236077904);
}

uint64_t sub_236077D8C(uint64_t a1)
{
  return sub_236078EC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236073E60);
}

uint64_t sub_236077D98()
{
  return objectdestroyTm(&qword_2563A05E0);
}

uint64_t sub_236077DA4()
{
  return objectdestroy_5Tm(&qword_2563A05E0);
}

unint64_t sub_236077DB0()
{
  unint64_t result;

  result = qword_2563A0690;
  if (!qword_2563A0690)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for PerformPrivateActionRequest, &type metadata for PerformPrivateActionRequest);
    atomic_store(result, (unint64_t *)&qword_2563A0690);
  }
  return result;
}

unint64_t sub_236077DF4()
{
  unint64_t result;

  result = qword_2563A0698;
  if (!qword_2563A0698)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for PerformPrivateActionRequest, &type metadata for PerformPrivateActionRequest);
    atomic_store(result, (unint64_t *)&qword_2563A0698);
  }
  return result;
}

uint64_t sub_236077E38(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if (a4 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_236077E58(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if (a4 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_236077E78(uint64_t a1)
{
  return sub_236078EC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236073BD4);
}

uint64_t sub_236077E84()
{
  return objectdestroyTm(&qword_2563A06A0);
}

uint64_t sub_236077E90(uint64_t a1)
{
  return sub_236078F40(a1, &qword_2563A06A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_2360790D0);
}

uint64_t sub_236077EA4()
{
  return objectdestroy_5Tm(&qword_2563A06A0);
}

uint64_t sub_236077EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563A06A0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_2360748A0(a1, a2, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), &qword_2563A06A8, (void (*)(uint64_t, uint64_t))sub_2360767C8, &qword_2563A06A0);
}

uint64_t sub_236077F30(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x23B7EBA68](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236077F70(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_236077FB4(uint64_t a1)
{
  return sub_236078EC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236073948);
}

uint64_t sub_236077FC0()
{
  return objectdestroyTm(&qword_2563A05E0);
}

uint64_t sub_236077FCC()
{
  return objectdestroy_5Tm(&qword_2563A05E0);
}

unint64_t sub_236077FD8()
{
  unint64_t result;

  result = qword_2563A06F8;
  if (!qword_2563A06F8)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for FetchPublicDataRequest, &type metadata for FetchPublicDataRequest);
    atomic_store(result, (unint64_t *)&qword_2563A06F8);
  }
  return result;
}

unint64_t sub_23607801C()
{
  unint64_t result;

  result = qword_2563A0700;
  if (!qword_2563A0700)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for FetchPublicDataRequest, &type metadata for FetchPublicDataRequest);
    atomic_store(result, (unint64_t *)&qword_2563A0700);
  }
  return result;
}

uint64_t sub_236078060(uint64_t a1)
{
  return sub_236078EC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2360736BC);
}

uint64_t sub_23607806C()
{
  return objectdestroyTm(&qword_2563A0708);
}

uint64_t sub_236078078(uint64_t a1)
{
  return sub_236078F40(a1, &qword_2563A0708, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_236074604);
}

uint64_t sub_23607808C()
{
  return objectdestroy_5Tm(&qword_2563A0708);
}

uint64_t sub_236078098(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563A0708) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_236074950(a1, a2, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), &qword_2563A0710, (void (*)(uint64_t, uint64_t))sub_2360756C8, (void (*)(char *))sub_2360774CC);
}

unint64_t sub_236078118()
{
  unint64_t result;

  result = qword_2563A0730;
  if (!qword_2563A0730)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for PerformActionRequest, &type metadata for PerformActionRequest);
    atomic_store(result, (unint64_t *)&qword_2563A0730);
  }
  return result;
}

unint64_t sub_23607815C()
{
  unint64_t result;

  result = qword_2563A0738;
  if (!qword_2563A0738)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for PerformActionRequest, &type metadata for PerformActionRequest);
    atomic_store(result, (unint64_t *)&qword_2563A0738);
  }
  return result;
}

uint64_t sub_2360781A0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2360781AC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2360781B8(uint64_t a1)
{
  return sub_236078EC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236073430);
}

uint64_t sub_2360781C4()
{
  return objectdestroyTm(&qword_2563A0740);
}

uint64_t sub_2360781D0(uint64_t a1)
{
  return sub_236078F40(a1, &qword_2563A0740, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_236074604);
}

uint64_t sub_2360781E4()
{
  return objectdestroy_5Tm(&qword_2563A0740);
}

uint64_t sub_2360781F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563A0740) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_2360748A0(a1, a2, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), &qword_2563A0748, (void (*)(uint64_t, uint64_t))sub_236075F50, &qword_2563A0740);
}

uint64_t sub_236078270(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2360782AC(uint64_t a1)
{
  return sub_236078EC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2360731A4);
}

uint64_t sub_2360782B8()
{
  return objectdestroyTm(&qword_2563A05E0);
}

uint64_t sub_2360782C4()
{
  return objectdestroy_5Tm(&qword_2563A05E0);
}

unint64_t sub_2360782D0()
{
  unint64_t result;

  result = qword_2563A0770;
  if (!qword_2563A0770)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for AvailableAppMetadataRequest, &type metadata for AvailableAppMetadataRequest);
    atomic_store(result, (unint64_t *)&qword_2563A0770);
  }
  return result;
}

unint64_t sub_236078314()
{
  unint64_t result;

  result = qword_2563A0778;
  if (!qword_2563A0778)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for AvailableAppMetadataRequest, &type metadata for AvailableAppMetadataRequest);
    atomic_store(result, (unint64_t *)&qword_2563A0778);
  }
  return result;
}

uint64_t sub_236078358(uint64_t a1)
{
  return sub_236078EC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236072F18);
}

uint64_t sub_236078364()
{
  return objectdestroyTm(&qword_2563A0788);
}

uint64_t sub_236078370(uint64_t a1)
{
  return sub_236078F40(a1, &qword_2563A0788, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_236074604);
}

uint64_t sub_236078384()
{
  return objectdestroy_5Tm(&qword_2563A0788);
}

uint64_t sub_236078390(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563A0788) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_236074950(a1, a2, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), &qword_2563A0790, (void (*)(uint64_t, uint64_t))sub_236075B10, (void (*)(char *))sub_236077640);
}

unint64_t sub_236078410()
{
  unint64_t result;

  result = qword_2563A07B0;
  if (!qword_2563A07B0)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for SetPrivateDataRequest, &type metadata for SetPrivateDataRequest);
    atomic_store(result, (unint64_t *)&qword_2563A07B0);
  }
  return result;
}

unint64_t sub_236078454()
{
  unint64_t result;

  result = qword_2563A07B8;
  if (!qword_2563A07B8)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for SetPrivateDataRequest, &type metadata for SetPrivateDataRequest);
    atomic_store(result, (unint64_t *)&qword_2563A07B8);
  }
  return result;
}

uint64_t sub_236078498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  switch(a7)
  {
    case 0:
      swift_bridgeObjectRetain();
      goto LABEL_3;
    case 1:
    case 2:
    case 3:
      goto LABEL_4;
    case 4:
LABEL_3:
      swift_bridgeObjectRetain();
LABEL_4:
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_236078500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  switch(a7)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 1:
    case 2:
    case 3:
      goto LABEL_4;
    case 4:
      swift_bridgeObjectRelease();
LABEL_4:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23607857C(uint64_t a1)
{
  return sub_236078EC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236072C8C);
}

uint64_t sub_236078588()
{
  return objectdestroyTm(&qword_2563A05E0);
}

uint64_t sub_236078594()
{
  return objectdestroy_5Tm(&qword_2563A05E0);
}

unint64_t sub_2360785A0()
{
  unint64_t result;

  result = qword_25429DD58;
  if (!qword_25429DD58)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for FetchPrivateDataRequest, &type metadata for FetchPrivateDataRequest);
    atomic_store(result, (unint64_t *)&qword_25429DD58);
  }
  return result;
}

unint64_t sub_2360785E4()
{
  unint64_t result;

  result = qword_25429DD50;
  if (!qword_25429DD50)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for FetchPrivateDataRequest, &type metadata for FetchPrivateDataRequest);
    atomic_store(result, (unint64_t *)&qword_25429DD50);
  }
  return result;
}

uint64_t sub_236078628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, char a7)
{
  int v7;
  uint64_t result;

  if ((a7 & 1) != 0)
    v7 = 4;
  else
    v7 = 0;
  switch((a6 >> 60) & 3 | v7)
  {
    case 0uLL:
    case 1uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      result = swift_bridgeObjectRetain();
      break;
    case 2uLL:
      result = sub_236077B70(a5, a6 & 0xCFFFFFFFFFFFFFFFLL);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23607867C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, char a7)
{
  int v7;
  uint64_t result;

  if ((a7 & 1) != 0)
    v7 = 4;
  else
    v7 = 0;
  switch((a6 >> 60) & 3 | v7)
  {
    case 0uLL:
    case 1uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      result = swift_bridgeObjectRelease();
      break;
    case 2uLL:
      result = sub_236077AC4(a5, a6 & 0xCFFFFFFFFFFFFFFFLL);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2360786D0(uint64_t a1)
{
  return sub_236078EC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236072A00);
}

uint64_t sub_2360786DC()
{
  return objectdestroyTm(&qword_2563A0708);
}

uint64_t sub_2360786E8()
{
  return objectdestroy_5Tm(&qword_2563A0708);
}

unint64_t sub_2360786F4()
{
  unint64_t result;

  result = qword_2563A07D0;
  if (!qword_2563A07D0)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for SecureButtonActionRequest, &type metadata for SecureButtonActionRequest);
    atomic_store(result, (unint64_t *)&qword_2563A07D0);
  }
  return result;
}

unint64_t sub_236078738()
{
  unint64_t result;

  result = qword_2563A07D8;
  if (!qword_2563A07D8)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for SecureButtonActionRequest, &type metadata for SecureButtonActionRequest);
    atomic_store(result, (unint64_t *)&qword_2563A07D8);
  }
  return result;
}

uint64_t sub_23607877C(uint64_t result, uint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0)
    return sub_236077B70(result, a2 & 0xCFFFFFFFFFFFFFFFLL);
  return result;
}

uint64_t sub_23607878C(uint64_t result, uint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0)
    return sub_236077AC4(result, a2 & 0xCFFFFFFFFFFFFFFFLL);
  return result;
}

uint64_t sub_23607879C(uint64_t a1)
{
  return sub_236078EC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236072774);
}

uint64_t sub_2360787A8()
{
  return objectdestroyTm(&qword_2563A07E0);
}

uint64_t sub_2360787B4(uint64_t a1)
{
  return sub_236078F40(a1, &qword_2563A07E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_236074604);
}

uint64_t sub_2360787C8()
{
  return objectdestroy_5Tm(&qword_2563A07E0);
}

uint64_t sub_2360787D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563A07E0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_236074950(a1, a2, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), &qword_2563A07E8, (void (*)(uint64_t, uint64_t))sub_236075280, (void (*)(char *))sub_236077320);
}

uint64_t sub_236078854(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_236078898()
{
  unint64_t result;

  result = qword_2563A0808;
  if (!qword_2563A0808)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for UpdateMetadata, &type metadata for UpdateMetadata);
    atomic_store(result, (unint64_t *)&qword_2563A0808);
  }
  return result;
}

unint64_t sub_2360788DC()
{
  unint64_t result;

  result = qword_2563A0810;
  if (!qword_2563A0810)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for UpdateMetadata, &type metadata for UpdateMetadata);
    atomic_store(result, (unint64_t *)&qword_2563A0810);
  }
  return result;
}

uint64_t sub_236078920(uint64_t a1)
{
  return sub_236078EC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2360724E8);
}

uint64_t sub_23607892C()
{
  return objectdestroyTm(&qword_2563A05E0);
}

uint64_t sub_236078938()
{
  return objectdestroy_5Tm(&qword_2563A05E0);
}

unint64_t sub_236078944()
{
  unint64_t result;

  result = qword_2563A0820;
  if (!qword_2563A0820)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for UpdateMetadataRequest, &type metadata for UpdateMetadataRequest);
    atomic_store(result, (unint64_t *)&qword_2563A0820);
  }
  return result;
}

unint64_t sub_236078988()
{
  unint64_t result;

  result = qword_2563A0828;
  if (!qword_2563A0828)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for UpdateMetadataRequest, &type metadata for UpdateMetadataRequest);
    atomic_store(result, (unint64_t *)&qword_2563A0828);
  }
  return result;
}

uint64_t sub_2360789CC(uint64_t a1)
{
  return sub_236078EC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23607225C);
}

uint64_t sub_2360789D8()
{
  return objectdestroyTm(&qword_2563A0838);
}

uint64_t sub_2360789E4(uint64_t a1)
{
  return sub_236078F40(a1, &qword_2563A0838, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_236074604);
}

uint64_t sub_2360789F8()
{
  return objectdestroy_5Tm(&qword_2563A0838);
}

uint64_t sub_236078A04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563A0838) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_236074950(a1, a2, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), &qword_2563A0840, (void (*)(uint64_t, uint64_t))sub_236074E38, (void (*)(char *))sub_2360771AC);
}

uint64_t sub_236078A84(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for MarketplaceKitServiceResult<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236078AC4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_236078B08(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_236078B4C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_236078B88()
{
  unint64_t result;

  result = qword_2563A0860;
  if (!qword_2563A0860)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for PollForUpdatesRequest, &type metadata for PollForUpdatesRequest);
    atomic_store(result, (unint64_t *)&qword_2563A0860);
  }
  return result;
}

unint64_t sub_236078BCC()
{
  unint64_t result;

  result = qword_2563A0868;
  if (!qword_2563A0868)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for PollForUpdatesRequest, &type metadata for PollForUpdatesRequest);
    atomic_store(result, (unint64_t *)&qword_2563A0868);
  }
  return result;
}

uint64_t sub_236078C10(uint64_t a1)
{
  return sub_236078EC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236071D44);
}

uint64_t sub_236078C1C()
{
  return objectdestroyTm(&qword_2563A05E0);
}

uint64_t sub_236078C28()
{
  return objectdestroy_5Tm(&qword_2563A05E0);
}

unint64_t sub_236078C34()
{
  unint64_t result;

  result = qword_2563A0878;
  if (!qword_2563A0878)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for PromoteAppsRequest, &type metadata for PromoteAppsRequest);
    atomic_store(result, (unint64_t *)&qword_2563A0878);
  }
  return result;
}

unint64_t sub_236078C78()
{
  unint64_t result;

  result = qword_2563A0880;
  if (!qword_2563A0880)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for PromoteAppsRequest, &type metadata for PromoteAppsRequest);
    atomic_store(result, (unint64_t *)&qword_2563A0880);
  }
  return result;
}

uint64_t sub_236078CBC(uint64_t a1)
{
  return sub_236078EC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236071AB8);
}

uint64_t sub_236078CC8()
{
  return objectdestroyTm(&qword_2563A05E0);
}

uint64_t sub_236078CD4()
{
  return objectdestroy_5Tm(&qword_2563A05E0);
}

unint64_t sub_236078CE0()
{
  unint64_t result;

  result = qword_2563A0890;
  if (!qword_2563A0890)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for PrioritizeAppRequest, &type metadata for PrioritizeAppRequest);
    atomic_store(result, (unint64_t *)&qword_2563A0890);
  }
  return result;
}

unint64_t sub_236078D24()
{
  unint64_t result;

  result = qword_2563A0898;
  if (!qword_2563A0898)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for PrioritizeAppRequest, &type metadata for PrioritizeAppRequest);
    atomic_store(result, (unint64_t *)&qword_2563A0898);
  }
  return result;
}

uint64_t sub_236078D68(uint64_t a1)
{
  return sub_236078EC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23607182C);
}

uint64_t sub_236078D74()
{
  return objectdestroyTm(&qword_2563A05E0);
}

uint64_t sub_236078D80()
{
  return objectdestroy_5Tm(&qword_2563A05E0);
}

uint64_t sub_236078D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_236074950(a1, a2, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), &qword_2563A05F0, (void (*)(uint64_t, uint64_t))sub_2360749F8, (void (*)(char *))sub_236077040);
}

unint64_t sub_236078E0C()
{
  unint64_t result;

  result = qword_2563A08A8;
  if (!qword_2563A08A8)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for DiscoverRestoresRequest, &type metadata for DiscoverRestoresRequest);
    atomic_store(result, (unint64_t *)&qword_2563A08A8);
  }
  return result;
}

unint64_t sub_236078E50()
{
  unint64_t result;

  result = qword_2563A08B0;
  if (!qword_2563A08B0)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for DiscoverRestoresRequest, &type metadata for DiscoverRestoresRequest);
    atomic_store(result, (unint64_t *)&qword_2563A08B0);
  }
  return result;
}

uint64_t sub_236078E94(uint64_t a1)
{
  return sub_236078EC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2360715A0);
}

uint64_t sub_236078EA0()
{
  return objectdestroyTm(&qword_2563A05E0);
}

uint64_t sub_236078EAC()
{
  return objectdestroy_5Tm(&qword_2563A05E0);
}

uint64_t sub_236078EB8(uint64_t a1)
{
  return sub_236078EC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236071314);
}

uint64_t sub_236078EC4(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_236078ED8()
{
  return objectdestroyTm(&qword_2563A05E0);
}

uint64_t objectdestroyTm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_236078F40(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8) + 80);
  return a3(a1, v3 + ((v7 + 16) & ~v7), a2);
}

uint64_t sub_236078F94()
{
  return objectdestroy_5Tm(&qword_2563A05E0);
}

uint64_t objectdestroy_5Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t static Restores.discover()()
{
  return swift_task_switch();
}

uint64_t sub_2360790E8()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v3;

  if (qword_2563A01E0 != -1)
    swift_once();
  sub_236078E0C();
  sub_236078E50();
  v0[2] = 0;
  v0[4] = v0 + 2;
  v0[3] = 0;
  v3 = (char *)&dword_2563A08A0 + dword_2563A08A0;
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = v1;
  *v1 = v0;
  v1[1] = sub_2360791A0;
  return ((uint64_t (*)(_QWORD *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v3)(v0 + 4, sub_236079288, 0);
}

uint64_t sub_2360791A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23607920C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_236079240()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void DiscoverRestoresRequest.init()(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

void sub_236079288(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_236079824(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_17, (SEL *)&selRef_discoverRestores_reply_);
}

uint64_t static Restores.discover(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return swift_task_switch();
}

uint64_t sub_2360792B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  if (qword_2563A01E0 != -1)
    swift_once();
  v2 = v0[5];
  v1 = v0[6];
  swift_bridgeObjectRetain();
  sub_236078E0C();
  sub_236078E50();
  v0[2] = v2;
  v0[4] = v0 + 2;
  v0[3] = v1;
  v5 = (char *)&dword_2563A08A0 + dword_2563A08A0;
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[7] = v3;
  *v3 = v0;
  v3[1] = sub_23607938C;
  return ((uint64_t (*)(_QWORD *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v5)(v0 + 4, sub_236079440, 0);
}

uint64_t sub_23607938C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2360793F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DiscoverRestoresRequest.init(accountID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void sub_236079440(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_236079824(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_14, (SEL *)&selRef_discoverRestores_reply_);
}

uint64_t static Restores.prioritize(app:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return swift_task_switch();
}

uint64_t sub_23607946C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  if (qword_2563A01E0 != -1)
    swift_once();
  v2 = v0[5];
  v1 = v0[6];
  swift_bridgeObjectRetain();
  sub_236078CE0();
  sub_236078D24();
  v0[2] = v2;
  v0[4] = v0 + 2;
  v0[3] = v1;
  v5 = (char *)&dword_2563A0888 + dword_2563A0888;
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[7] = v3;
  *v3 = v0;
  v3[1] = sub_236079544;
  return ((uint64_t (*)(_QWORD *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v5)(v0 + 4, sub_23607962C, 0);
}

uint64_t sub_236079544()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2360795B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2360795E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PrioritizeAppRequest.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void sub_23607962C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_236079824(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_11, (SEL *)&selRef_prioritizeApp_reply_);
}

uint64_t static Restores.promote(apps:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_236079658()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  char *v4;

  if (qword_2563A01E0 != -1)
    swift_once();
  v1 = v0[4];
  swift_bridgeObjectRetain();
  sub_236078C34();
  sub_236078C78();
  v0[3] = v1;
  v0[2] = v0 + 3;
  v4 = (char *)&dword_2563A0870 + dword_2563A0870;
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = v2;
  *v2 = v0;
  v2[1] = sub_23607972C;
  return ((uint64_t (*)(_QWORD *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v4)(v0 + 2, sub_236079810, 0);
}

uint64_t sub_23607972C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_236079798()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2360797CC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void __swiftcall PromoteAppsRequest.init(_:)(Swift::OpaquePointer a1)
{
  Swift::OpaquePointer *v1;

  v1->_rawValue = a1._rawValue;
}

void sub_236079810(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_236079824(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_0, (SEL *)&selRef_promoteApps_reply_);
}

void sub_236079824(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, SEL *a7)
{
  void *v12;
  void *v13;
  _QWORD v14[6];

  v12 = (void *)sub_2360D08F0();
  v14[4] = a4;
  v14[5] = a5;
  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 1107296256;
  v14[2] = sub_23607D2C4;
  v14[3] = a6;
  v13 = _Block_copy(v14);
  swift_retain();
  swift_release();
  objc_msgSend(a1, *a7, v12, v13);
  _Block_release(v13);

}

uint64_t DiscoverRestoresRequest.accountID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23607990C()
{
  return 0x49746E756F636361;
}

uint64_t sub_236079928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x49746E756F636361 && a2 == 0xE900000000000044)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2360D1028();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_2360799C8(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_2360799D4()
{
  sub_23607A4DC();
  return sub_2360D1148();
}

uint64_t sub_2360799FC()
{
  sub_23607A4DC();
  return sub_2360D1154();
}

uint64_t DiscoverRestoresRequest.encode(to:)(_QWORD *a1)
{
  return sub_23607A180(a1, &qword_2563A08D8, (void (*)(void))sub_23607A4DC, (uint64_t)&type metadata for DiscoverRestoresRequest.CodingKeys, (void (*)(uint64_t, uint64_t))MEMORY[0x24BEE3428]);
}

uint64_t DiscoverRestoresRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A08E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23607A4DC();
  sub_2360D1124();
  if (!v2)
  {
    v9 = sub_2360D0F14();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_236079B74@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return DiscoverRestoresRequest.init(from:)(a1, a2);
}

uint64_t sub_236079B88(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23607A3E0(a1, a2, a3, &qword_2563A08D8, (void (*)(void))sub_23607A4DC, (uint64_t)&type metadata for DiscoverRestoresRequest.CodingKeys, (void (*)(uint64_t, uint64_t))MEMORY[0x24BEE3428]);
}

uint64_t PromoteAppsRequest.appsToPromote.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PromoteAppsRequest.appsToPromote.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*PromoteAppsRequest.appsToPromote.modify())()
{
  return nullsub_1;
}

uint64_t sub_236079BFC()
{
  return 0x72506F5473707061;
}

uint64_t sub_236079C20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x72506F5473707061 && a2 == 0xED000065746F6D6FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2360D1028();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_236079CD8()
{
  sub_23607A520();
  return sub_2360D1148();
}

uint64_t sub_236079D00()
{
  sub_23607A520();
  return sub_2360D1154();
}

uint64_t PromoteAppsRequest.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A08F0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23607A520();
  sub_2360D113C();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25429DBB0);
  sub_23607A564(&qword_2563A0900, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  sub_2360D0FEC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PromoteAppsRequest.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0908);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23607A520();
  sub_2360D1124();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25429DBB0);
    sub_23607A564(&qword_25429DBD8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_2360D0F5C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_236079F88@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return PromoteAppsRequest.init(from:)(a1, a2);
}

uint64_t sub_236079F9C(_QWORD *a1)
{
  return PromoteAppsRequest.encode(to:)(a1);
}

uint64_t PrioritizeAppRequest.appToPrioritize.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PrioritizeAppRequest.appToPrioritize.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PrioritizeAppRequest.appToPrioritize.modify())()
{
  return nullsub_1;
}

uint64_t sub_23607A020()
{
  return 0x6972506F54707061;
}

uint64_t sub_23607A044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6972506F54707061 && a2 == 0xEF657A697469726FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2360D1028();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23607A0FC()
{
  sub_23607A5C4();
  return sub_2360D1148();
}

uint64_t sub_23607A124()
{
  sub_23607A5C4();
  return sub_2360D1154();
}

uint64_t PrioritizeAppRequest.encode(to:)(_QWORD *a1)
{
  return sub_23607A180(a1, &qword_2563A0910, (void (*)(void))sub_23607A5C4, (uint64_t)&type metadata for PrioritizeAppRequest.CodingKeys, (void (*)(uint64_t, uint64_t))MEMORY[0x24BEE34A0]);
}

uint64_t sub_23607A180(_QWORD *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void);
  void (*v16)(uint64_t, uint64_t);

  v16 = a5;
  v15 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v5[1];
  v14 = *v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15();
  sub_2360D113C();
  v16(v14, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t PrioritizeAppRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0920);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23607A5C4();
  sub_2360D1124();
  if (!v2)
  {
    v9 = sub_2360D0F44();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23607A398@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PrioritizeAppRequest.init(from:)(a1, a2);
}

uint64_t sub_23607A3AC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23607A3E0(a1, a2, a3, &qword_2563A0910, (void (*)(void))sub_23607A5C4, (uint64_t)&type metadata for PrioritizeAppRequest.CodingKeys, (void (*)(uint64_t, uint64_t))MEMORY[0x24BEE34A0]);
}

uint64_t sub_23607A3E0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void), uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void);
  void (*v18)(uint64_t, uint64_t);

  v18 = a7;
  v17 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v7[1];
  v16 = *v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v17();
  sub_2360D113C();
  v18(v16, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

unint64_t sub_23607A4DC()
{
  unint64_t result;

  result = qword_2563A08E0;
  if (!qword_2563A08E0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D24E8, &type metadata for DiscoverRestoresRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A08E0);
  }
  return result;
}

unint64_t sub_23607A520()
{
  unint64_t result;

  result = qword_2563A08F8;
  if (!qword_2563A08F8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D2498, &type metadata for PromoteAppsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A08F8);
  }
  return result;
}

uint64_t sub_23607A564(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25429DBB0);
    v8 = a2;
    result = MEMORY[0x23B7EBA68](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23607A5C4()
{
  unint64_t result;

  result = qword_2563A0918;
  if (!qword_2563A0918)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D2448, &type metadata for PrioritizeAppRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0918);
  }
  return result;
}

ValueMetadata *type metadata accessor for Restores()
{
  return &type metadata for Restores;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DiscoverRestoresRequest(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoverRestoresRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoverRestoresRequest()
{
  return &type metadata for DiscoverRestoresRequest;
}

ValueMetadata *type metadata accessor for PromoteAppsRequest()
{
  return &type metadata for PromoteAppsRequest;
}

_QWORD *initializeBufferWithCopyOfBuffer for PrioritizeAppRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PrioritizeAppRequest()
{
  return swift_bridgeObjectRelease();
}

_QWORD *_s15AppDistribution23DiscoverRestoresRequestVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for PrioritizeAppRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrioritizeAppRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrioritizeAppRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrioritizeAppRequest()
{
  return &type metadata for PrioritizeAppRequest;
}

ValueMetadata *type metadata accessor for PrioritizeAppRequest.CodingKeys()
{
  return &type metadata for PrioritizeAppRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for PromoteAppsRequest.CodingKeys()
{
  return &type metadata for PromoteAppsRequest.CodingKeys;
}

uint64_t _s15AppDistribution20PrioritizeAppRequestV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23607A890 + 4 * byte_2360D20A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23607A8B0 + 4 * byte_2360D20A5[v4]))();
}

_BYTE *sub_23607A890(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23607A8B0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23607A8B8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23607A8C0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23607A8C8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23607A8D0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DiscoverRestoresRequest.CodingKeys()
{
  return &type metadata for DiscoverRestoresRequest.CodingKeys;
}

unint64_t sub_23607A8F0()
{
  unint64_t result;

  result = qword_2563A0928;
  if (!qword_2563A0928)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D22B0, &type metadata for DiscoverRestoresRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0928);
  }
  return result;
}

unint64_t sub_23607A938()
{
  unint64_t result;

  result = qword_2563A0930;
  if (!qword_2563A0930)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D2368, &type metadata for PromoteAppsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0930);
  }
  return result;
}

unint64_t sub_23607A980()
{
  unint64_t result;

  result = qword_2563A0938;
  if (!qword_2563A0938)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D2420, &type metadata for PrioritizeAppRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0938);
  }
  return result;
}

unint64_t sub_23607A9C8()
{
  unint64_t result;

  result = qword_2563A0940;
  if (!qword_2563A0940)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D2390, &type metadata for PrioritizeAppRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0940);
  }
  return result;
}

unint64_t sub_23607AA10()
{
  unint64_t result;

  result = qword_2563A0948;
  if (!qword_2563A0948)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D23B8, &type metadata for PrioritizeAppRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0948);
  }
  return result;
}

unint64_t sub_23607AA58()
{
  unint64_t result;

  result = qword_2563A0950;
  if (!qword_2563A0950)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D22D8, &type metadata for PromoteAppsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0950);
  }
  return result;
}

unint64_t sub_23607AAA0()
{
  unint64_t result;

  result = qword_2563A0958;
  if (!qword_2563A0958)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D2300, &type metadata for PromoteAppsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0958);
  }
  return result;
}

unint64_t sub_23607AAE8()
{
  unint64_t result;

  result = qword_2563A0960;
  if (!qword_2563A0960)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D2220, &type metadata for DiscoverRestoresRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0960);
  }
  return result;
}

unint64_t sub_23607AB30()
{
  unint64_t result;

  result = qword_2563A0968;
  if (!qword_2563A0968)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D2248, &type metadata for DiscoverRestoresRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0968);
  }
  return result;
}

const char *FeatureFlag.domain.getter()
{
  _BYTE *v0;

  if (*v0)
    return "InstallCoordination";
  else
    return "MarketplaceKit";
}

const char *FeatureFlag.feature.getter()
{
  _BYTE *v0;

  if (*v0)
    return "IX_BACKGROUND_UPDATE_SCHEDULING";
  else
    return "WebDistribution";
}

BOOL static FeatureFlag.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeatureFlag.hash(into:)()
{
  return sub_2360D10C4();
}

uint64_t FeatureFlag.hashValue.getter()
{
  sub_2360D10B8();
  sub_2360D10C4();
  return sub_2360D10F4();
}

BOOL sub_23607AC80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23607AC98()
{
  sub_2360D10B8();
  sub_2360D10C4();
  return sub_2360D10F4();
}

uint64_t sub_23607ACDC()
{
  return sub_2360D10C4();
}

uint64_t sub_23607AD04()
{
  sub_2360D10B8();
  sub_2360D10C4();
  return sub_2360D10F4();
}

const char *sub_23607AD44()
{
  _BYTE *v0;

  if (*v0)
    return "InstallCoordination";
  else
    return "MarketplaceKit";
}

const char *sub_23607AD74()
{
  _BYTE *v0;

  if (*v0)
    return "IX_BACKGROUND_UPDATE_SCHEDULING";
  else
    return "WebDistribution";
}

uint64_t isFeatureEnabled(_:)(char *a1)
{
  char v1;
  char v2;
  _BYTE v4[24];
  ValueMetadata *v5;
  unint64_t v6;

  v1 = *a1;
  v5 = &type metadata for FeatureFlag;
  v6 = sub_23607ADF8();
  v4[0] = v1;
  v2 = sub_2360D0974();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2 & 1;
}

unint64_t sub_23607ADF8()
{
  unint64_t result;

  result = qword_2563A0970;
  if (!qword_2563A0970)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for FeatureFlag, &type metadata for FeatureFlag);
    atomic_store(result, (unint64_t *)&qword_2563A0970);
  }
  return result;
}

unint64_t sub_23607AE40()
{
  unint64_t result;

  result = qword_2563A0978;
  if (!qword_2563A0978)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for FeatureFlag, &type metadata for FeatureFlag);
    atomic_store(result, (unint64_t *)&qword_2563A0978);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeatureFlag(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23607AED0 + 4 * byte_2360D253D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23607AF04 + 4 * byte_2360D2538[v4]))();
}

uint64_t sub_23607AF04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23607AF0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23607AF14);
  return result;
}

uint64_t sub_23607AF20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23607AF28);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23607AF2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23607AF34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlag()
{
  return &type metadata for FeatureFlag;
}

uint64_t PollForUpdatesRequest.domain.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PollForUpdatesRequest.shouldStartUpdates.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t PollForUpdatesRequest.init(domain:shouldStartUpdates:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = a3;
  return result;
}

uint64_t PollForUpdatesRequest.run()()
{
  uint64_t v0;
  uint64_t v1;

  *(_OWORD *)(v1 + 48) = *(_OWORD *)v0;
  *(_BYTE *)(v1 + 33) = *(_BYTE *)(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_23607AFB4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v6;

  if (qword_2563A01E0 != -1)
    swift_once();
  v1 = *(_BYTE *)(v0 + 33);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  sub_236078B88();
  sub_236078BCC();
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 40) = v0 + 16;
  *(_BYTE *)(v0 + 32) = v1;
  v6 = (char *)&dword_2563A0858 + dword_2563A0858;
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_23607B094;
  return ((uint64_t (*)(uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v6)(v0 + 40, sub_23607B174, 0);
}

uint64_t sub_23607B094()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23607B100()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23607B134()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23607B174(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  _QWORD v10[6];

  v8 = (void *)sub_2360D08F0();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23607D2C4;
  v10[3] = &block_descriptor_1;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_requestUpdatesPoll_reply_, v8, v9);
  _Block_release(v9);

}

uint64_t sub_23607B234()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0x6E69616D6F64;
}

uint64_t sub_23607B270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23607B930(a1, a2);
  *a3 = result;
  return result;
}

void sub_23607B294(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_23607B2A0()
{
  sub_23607B5C0();
  return sub_2360D1148();
}

uint64_t sub_23607B2C8()
{
  sub_23607B5C0();
  return sub_2360D1154();
}

uint64_t PollForUpdatesRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0988);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23607B5C0();
  sub_2360D113C();
  v12 = 0;
  sub_2360D0FA4();
  if (!v2)
  {
    v11 = 1;
    sub_2360D0FE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

uint64_t PollForUpdatesRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0998);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23607B5C0();
  sub_2360D1124();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = 0;
  v9 = sub_2360D0F14();
  v11 = v10;
  v15 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_2360D0F50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v12 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23607B598@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PollForUpdatesRequest.init(from:)(a1, a2);
}

uint64_t sub_23607B5AC(_QWORD *a1)
{
  return PollForUpdatesRequest.encode(to:)(a1);
}

unint64_t sub_23607B5C0()
{
  unint64_t result;

  result = qword_2563A0990;
  if (!qword_2563A0990)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D274C, &type metadata for PollForUpdatesRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0990);
  }
  return result;
}

uint64_t sub_23607B608(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PollForUpdatesRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for PollForUpdatesRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for PollForUpdatesRequest(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PollForUpdatesRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PollForUpdatesRequest()
{
  return &type metadata for PollForUpdatesRequest;
}

uint64_t storeEnumTagSinglePayload for PollForUpdatesRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23607B7D8 + 4 * byte_2360D2605[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23607B80C + 4 * byte_2360D2600[v4]))();
}

uint64_t sub_23607B80C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23607B814(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23607B81CLL);
  return result;
}

uint64_t sub_23607B828(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23607B830);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23607B834(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23607B83C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PollForUpdatesRequest.CodingKeys()
{
  return &type metadata for PollForUpdatesRequest.CodingKeys;
}

unint64_t sub_23607B85C()
{
  unint64_t result;

  result = qword_2563A09A0;
  if (!qword_2563A09A0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D2724, &type metadata for PollForUpdatesRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A09A0);
  }
  return result;
}

unint64_t sub_23607B8A4()
{
  unint64_t result;

  result = qword_2563A09A8;
  if (!qword_2563A09A8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D2694, &type metadata for PollForUpdatesRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A09A8);
  }
  return result;
}

unint64_t sub_23607B8EC()
{
  unint64_t result;

  result = qword_2563A09B0;
  if (!qword_2563A09B0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D26BC, &type metadata for PollForUpdatesRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A09B0);
  }
  return result;
}

uint64_t sub_23607B930(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002360DD1E0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t *sub_23607BA14(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *__dst;
  uint64_t v38;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v31 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2360D08D8();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v9((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v10 = a3[6];
    v11 = a3[7];
    v12 = (uint64_t *)((char *)a1 + v10);
    v13 = (uint64_t *)((char *)a2 + v10);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = (uint64_t *)((char *)a1 + v11);
    v16 = (uint64_t *)((char *)a2 + v11);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = a3[8];
    v19 = a3[9];
    v20 = (uint64_t *)((char *)a1 + v18);
    v21 = (uint64_t *)((char *)a2 + v18);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = (uint64_t *)((char *)a1 + v19);
    v24 = (uint64_t *)((char *)a2 + v19);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = a3[10];
    __dst = (char *)a1 + v26;
    v38 = v8;
    v27 = (char *)a2 + v26;
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28(v27, 1, v7))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
      memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      v30 = v38;
    }
    else
    {
      v9((uint64_t *)__dst, (uint64_t *)v27, v7);
      v30 = v38;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v7);
    }
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    if (v28(v34, 1, v7))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v33, (uint64_t *)v34, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v33, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_23607BC18(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;
  void (*v10)(uint64_t, uint64_t);

  v4 = sub_2360D08D8();
  v5 = *(_QWORD *)(v4 - 8);
  v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v10(a1, v4);
  v10(a1 + a2[5], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + a2[10];
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v7(v6, 1, v4))
    v10(v6, v4);
  v8 = a1 + a2[11];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v4);
  return result;
}

char *sub_23607BD3C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unsigned int (*v27)(const void *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *__dst;
  uint64_t v36;

  v6 = sub_2360D08D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v9 = a3[6];
  v10 = a3[7];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = a3[8];
  v18 = a3[9];
  v19 = &a1[v17];
  v20 = &a2[v17];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  v22 = &a1[v18];
  v23 = &a2[v18];
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = v24;
  v25 = a3[10];
  __dst = &a1[v25];
  v36 = v7;
  v26 = &a2[v25];
  v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27(v26, 1, v6))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    v29 = v36;
  }
  else
  {
    v8(__dst, v26, v6);
    v29 = v36;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v6);
  }
  v30 = a3[11];
  v31 = &a1[v30];
  v32 = &a2[v30];
  if (v27(v32, 1, v6))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v8(v31, v32, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v31, 0, 1, v6);
  }
  return a1;
}

char *sub_23607BF14(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t (*v24)(const void *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  int v32;
  uint64_t v33;

  v6 = sub_2360D08D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v9 = a3[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[8];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[9];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[10];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v25 = v24(&a1[v21], 1, v6);
  v26 = v24(v23, 1, v6);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v22, v23, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v22, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v22, v6);
LABEL_6:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  v8(v22, v23, v6);
LABEL_7:
  v28 = a3[11];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = v24(&a1[v28], 1, v6);
  v32 = v24(v30, 1, v6);
  if (!v31)
  {
    if (!v32)
    {
      v8(v29, v30, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v6);
    goto LABEL_12;
  }
  if (v32)
  {
LABEL_12:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v29, v30, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v29, 0, 1, v6);
  return a1;
}

char *sub_23607C1A8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = sub_2360D08D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v9 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  v10 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  v11 = a3[10];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  if (v14(&a2[v11], 1, v6))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v8(v12, v13, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  }
  v16 = a3[11];
  v17 = &a1[v16];
  v18 = &a2[v16];
  if (v14(v18, 1, v6))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v8(v17, v18, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
  }
  return a1;
}

char *sub_23607C32C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t (*v32)(const void *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int v39;
  int v40;
  uint64_t v41;

  v6 = sub_2360D08D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v9 = a3[6];
  v10 = &a1[v9];
  v11 = (uint64_t *)&a2[v9];
  v13 = *v11;
  v12 = v11[1];
  *(_QWORD *)v10 = v13;
  *((_QWORD *)v10 + 1) = v12;
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = &a1[v14];
  v16 = (uint64_t *)&a2[v14];
  v18 = *v16;
  v17 = v16[1];
  *(_QWORD *)v15 = v18;
  *((_QWORD *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  v19 = a3[8];
  v20 = &a1[v19];
  v21 = (uint64_t *)&a2[v19];
  v23 = *v21;
  v22 = v21[1];
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  v24 = a3[9];
  v25 = &a1[v24];
  v26 = (uint64_t *)&a2[v24];
  v28 = *v26;
  v27 = v26[1];
  *(_QWORD *)v25 = v28;
  *((_QWORD *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  v29 = a3[10];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v33 = v32(&a1[v29], 1, v6);
  v34 = v32(v31, 1, v6);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v30, v31, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v30, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v30, v6);
LABEL_6:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_7;
  }
  v8(v30, v31, v6);
LABEL_7:
  v36 = a3[11];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = v32(&a1[v36], 1, v6);
  v40 = v32(v38, 1, v6);
  if (!v39)
  {
    if (!v40)
    {
      v8(v37, v38, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v37, v6);
    goto LABEL_12;
  }
  if (v40)
  {
LABEL_12:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v37, v38, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v37, 0, 1, v6);
  return a1;
}

uint64_t sub_23607C580()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23607C58C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_2360D08D8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    v10 = a1 + *(int *)(a3 + 40);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_23607C63C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23607C648(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_2360D08D8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    v12 = a1 + *(int *)(a4 + 40);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for LinkMetadata()
{
  uint64_t result;

  result = qword_2563A0A10;
  if (!qword_2563A0A10)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23607C730()
{
  unint64_t v0;
  unint64_t v1;

  sub_2360D08D8();
  if (v0 <= 0x3F)
  {
    sub_236071084();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_23607C7CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  int *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  void (*v60)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t);
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t);
  uint64_t v105;
  void (*v106)(char *, uint64_t);
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int *v123;
  uint64_t v124;

  v122 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v116 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v115 = (char *)&v105 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0A60);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v117 = (char *)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v110 = (uint64_t)&v105 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v112 = (uint64_t)&v105 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v113 = (char *)&v105 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v114 = (char *)&v105 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v111 = (uint64_t)&v105 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v118 = (uint64_t)&v105 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v105 - v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0A68);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v105 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_2360D0854();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v105 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v105 - v34;
  v36 = sub_2360D08D8();
  v119 = *(_QWORD *)(v36 - 8);
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 16);
  v37(a3, a2, v36);
  v123 = (int *)type metadata accessor for LinkMetadata();
  v124 = a3;
  v38 = a3 + v123[5];
  v120 = v36;
  v37(v38, v122, v36);
  sub_2360D0830();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) == 1)
  {
    sub_236078B4C((uint64_t)v28, &qword_2563A0A68);
LABEL_9:
    v50 = v122;
    v52 = v119;
    v51 = v120;
    v53 = *(void (**)(uint64_t, uint64_t))(v119 + 8);
    v53(a2, v120);
    v53(v50, v51);
    v55 = v123;
    v54 = v124;
    v56 = (_QWORD *)(v124 + v123[6]);
    *v56 = 0;
    v56[1] = 0xE000000000000000;
    v57 = (_QWORD *)(v54 + v55[7]);
    *v57 = 0;
    v57[1] = 0;
    v58 = (_QWORD *)(v54 + v55[8]);
    *v58 = 0;
    v58[1] = 0;
    v59 = (_QWORD *)(v54 + v55[9]);
    *v59 = 0;
    v59[1] = 0;
    v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56);
    v60(v54 + v55[10], 1, 1, v51);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v60)(v54 + v55[11], 1, 1, v51);
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v35, v28, v29);
  v121 = sub_2360D0824();
  if (!v121)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v35, v29);
    goto LABEL_9;
  }
  v39 = sub_2360D083C();
  v41 = v40;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v33, v35, v29);
  if (!v41)
  {
    v39 = sub_2360D0848();
    v41 = v42;
  }
  v106 = *(void (**)(char *, uint64_t))(v30 + 8);
  v106(v33, v29);
  v43 = (uint64_t *)(v124 + v123[6]);
  *v43 = v39;
  v43[1] = v41;
  sub_23607D140(v121, 0x6E656B6F74, 0xE500000000000000, (uint64_t)v25);
  v44 = sub_2360D0818();
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  v47 = v46(v25, 1, v44);
  v109 = v45;
  if (v47 == 1)
  {
    sub_236078B4C((uint64_t)v25, &qword_2563A0A60);
    v48 = 0;
    v49 = 0;
  }
  else
  {
    v48 = sub_2360D080C();
    v49 = v62;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v25, v44);
  }
  v63 = (uint64_t *)(v124 + v123[7]);
  *v63 = v48;
  v63[1] = v49;
  v64 = v118;
  sub_23607D140(v121, 0xD000000000000018, 0x80000002360DD200, v118);
  v65 = v46((char *)v64, 1, v44);
  v107 = v35;
  v108 = v29;
  if (v65 == 1)
  {
    sub_236078B4C(v64, &qword_2563A0A60);
  }
  else
  {
    v66 = sub_2360D080C();
    v68 = v67;
    (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v64, v44);
    if (v68)
    {
LABEL_16:
      v70 = v109;
      goto LABEL_18;
    }
  }
  v69 = v111;
  sub_23607D140(v121, 0x44664F666F6F7270, 0xEF64616F6C6E776FLL, v111);
  if (v46((char *)v69, 1, v44) == 1)
  {
    sub_236078B4C(v69, &qword_2563A0A60);
    swift_bridgeObjectRelease();
    v66 = 0;
    v68 = 0;
    goto LABEL_16;
  }
  v66 = sub_2360D080C();
  v68 = v71;
  v70 = v109;
  (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v69, v44);
  swift_bridgeObjectRelease();
LABEL_18:
  v72 = (uint64_t)v113;
  v73 = (uint64_t)v114;
  v118 = a2;
  v74 = (uint64_t *)(v124 + v123[8]);
  *v74 = v66;
  v74[1] = v68;
  v75 = v121;
  sub_23607D140(v121, 0x746E756F636361, 0xE700000000000000, v73);
  v76 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v46;
  if (v46((char *)v73, 1, v44) == 1)
  {
    sub_236078B4C(v73, &qword_2563A0A60);
    v77 = 0;
    v78 = 0;
  }
  else
  {
    v77 = sub_2360D080C();
    v78 = v79;
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v73, v44);
  }
  v80 = (uint64_t *)(v124 + v123[9]);
  *v80 = v77;
  v80[1] = v78;
  sub_23607D140(v75, 0xD00000000000001ELL, 0x80000002360DD220, v72);
  v81 = v76(v72, 1, v44);
  v82 = v119;
  if (v81 == 1)
  {
    sub_236078B4C(v72, &qword_2563A0A60);
  }
  else
  {
    sub_2360D080C();
    v84 = v83;
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v72, v44);
    if (v84)
    {
LABEL_31:
      v90 = v82;
      goto LABEL_32;
    }
  }
  v85 = v112;
  sub_23607D140(v75, 7365729, 0xE300000000000000, v112);
  if (v76(v85, 1, v44) == 1)
  {
    sub_236078B4C(v85, &qword_2563A0A60);
  }
  else
  {
    v86 = v70;
    v87 = v85;
    sub_2360D080C();
    v89 = v88;
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v87, v44);
    if (v89)
    {
      v90 = v82;
      swift_bridgeObjectRelease();
      v70 = v109;
LABEL_32:
      swift_bridgeObjectRetain();
      v94 = v115;
      sub_2360D08CC();
      v95 = (uint64_t)v94;
      swift_bridgeObjectRelease_n();
      goto LABEL_34;
    }
  }
  v91 = v110;
  sub_23607D140(v121, 7365733, 0xE300000000000000, v110);
  if (v76(v91, 1, v44) != 1)
  {
    sub_2360D080C();
    v93 = v92;
    v70 = v109;
    (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v91, v44);
    swift_bridgeObjectRelease_n();
    if (!v93)
      goto LABEL_33;
    goto LABEL_31;
  }
  sub_236078B4C(v91, &qword_2563A0A60);
  swift_bridgeObjectRelease_n();
  v70 = v109;
LABEL_33:
  v90 = v82;
  v95 = (uint64_t)v115;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56))(v115, 1, 1, v120);
LABEL_34:
  v97 = (uint64_t)v117;
  v96 = v118;
  v98 = (uint64_t)v116;
  sub_23607D27C(v95, v124 + v123[10]);
  sub_23607D140(v121, 0x6572616853707061, 0xEB000000004C5255, v97);
  if (v76(v97, 1, v44) == 1)
  {
    sub_236078B4C(v97, &qword_2563A0A60);
    swift_bridgeObjectRelease();
LABEL_38:
    v103 = v120;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56))(v98, 1, 1, v120);
    v101 = v106;
    v102 = v122;
    goto LABEL_39;
  }
  sub_2360D080C();
  v100 = v99;
  (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v97, v44);
  swift_bridgeObjectRelease();
  if (!v100)
    goto LABEL_38;
  swift_bridgeObjectRetain();
  sub_2360D08CC();
  swift_bridgeObjectRelease();
  v101 = v106;
  v102 = v122;
  v103 = v120;
LABEL_39:
  v104 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
  v104(v96, v103);
  v104(v102, v103);
  swift_bridgeObjectRelease();
  v101(v107, v108);
  return sub_23607D27C(v98, v124 + v123[11]);
}

uint64_t sub_23607D140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v8 = sub_2360D0818();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(_QWORD *)(v9 + 72);
    v11 = a1
        + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
        + v10 * (v5 - 1);
    v12 = -v10;
    while (sub_2360D0800() != a2 || v13 != a3)
    {
      v14 = sub_2360D1028();
      swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
        goto LABEL_9;
      v11 += v12;
      if (!--v5)
        goto LABEL_7;
    }
    swift_bridgeObjectRelease();
LABEL_9:
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a4, v11, v8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(a4, 0, 1, v8);
  }
  else
  {
LABEL_7:
    v15 = sub_2360D0818();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a4, 1, 1, v15);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23607D27C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23607D2C4(uint64_t a1, void *a2)
{
  void (*v3)(uint64_t, unint64_t);
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = *(void (**)(uint64_t, unint64_t))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = sub_2360D08FC();
  v7 = v6;

  v3(v5, v7);
  sub_236077AC4(v5, v7);
  return swift_release();
}

uint64_t AppLibrary.App.id.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t AppLibrary.App.Metadata.appleVersionID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t AppLibrary.App.Metadata.version.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppLibrary.App.Metadata.shortVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppLibrary.App.Metadata.account.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppLibrary.App.Metadata.init(appleVersionID:version:shortVersion:account:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  *a8 = result;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

id AppLibrary.App.Installation.progress.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 56);
}

uint64_t AppLibrary.App.installedMetadata.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  sub_236077F30((unint64_t *)&qword_2563A0A78, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
  sub_2360D092C();
  swift_release();
  v3 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v8 = v1[8];
  v9 = v1[9];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  sub_236083A94(v3, v4, v5);
  return swift_release();
}

double sub_23607D500@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;

  AppLibrary.App.installedMetadata.getter((uint64_t *)v5);
  v2 = v7;
  v3 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v3;
  result = *(double *)&v6;
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = v2;
  return result;
}

uint64_t sub_23607D548(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8[7];

  v1 = a1[1];
  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  v8[0] = *a1;
  v8[1] = v1;
  v8[2] = v2;
  v8[3] = v3;
  v8[4] = v4;
  v8[5] = v5;
  v8[6] = v6;
  sub_236083A94(v8[0], v1, v2);
  return sub_23607D5A0((uint64_t)v8);
}

uint64_t sub_23607D5A0(uint64_t a1)
{
  uint64_t KeyPath;
  _QWORD v3[7];

  sub_236078B08(a1, (uint64_t)v3, &qword_2563A0BF0);
  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  sub_236077F30((unint64_t *)&qword_2563A0A78, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
  sub_2360D0920();
  sub_23608445C(v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236083B48);
  swift_release();
  return swift_release();
}

uint64_t sub_23607D6FC(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v4 = a1 + 24;
  v7 = *(_QWORD *)(v4 + 16);
  sub_236078B08((uint64_t)a2, v4, &qword_2563A0BF0);
  sub_23608445C(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236083A94);
  sub_236083B48(v5, v6, v7);
  return swift_release();
}

uint64_t AppLibrary.App.installation.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  sub_236077F30((unint64_t *)&qword_2563A0A78, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
  sub_2360D092C();
  swift_release();
  v3 = v1[10];
  v4 = v1[11];
  v5 = v1[12];
  v6 = v1[13];
  v7 = v1[14];
  v8 = v1[15];
  v9 = v1[16];
  v10 = (void *)v1[17];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = (uint64_t)v10;
  sub_236083AD8(v3, v4, v5, v6, v7, v8, v9, v10);
  return swift_release();
}

double sub_23607D910@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  double result;
  __int128 v4;
  _OWORD v5[2];
  __int128 v6;
  __int128 v7;

  AppLibrary.App.installation.getter((uint64_t *)v5);
  v2 = v5[1];
  *a1 = v5[0];
  a1[1] = v2;
  result = *(double *)&v6;
  v4 = v7;
  a1[2] = v6;
  a1[3] = v4;
  return result;
}

uint64_t sub_23607D950(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9[8];

  v1 = a1[1];
  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  v7 = (void *)a1[7];
  v9[0] = *a1;
  v9[1] = v1;
  v9[2] = v2;
  v9[3] = v3;
  v9[4] = v4;
  v9[5] = v5;
  v9[6] = v6;
  v9[7] = (uint64_t)v7;
  sub_236083AD8(v9[0], v1, v2, v3, v4, v5, v6, v7);
  return sub_23607D9A8((uint64_t)v9);
}

uint64_t sub_23607D9A8(uint64_t a1)
{
  uint64_t KeyPath;
  _QWORD v3[8];

  sub_236078B08(a1, (uint64_t)v3, &qword_2563A0BC0);
  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  sub_236077F30((unint64_t *)&qword_2563A0A78, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
  sub_2360D0920();
  sub_2360843B8(v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236083B84);
  swift_release();
  return swift_release();
}

uint64_t sub_23607DB04(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;

  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v3 = (_QWORD *)(a1 + 80);
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v12 = v3[5];
  v9 = v3[6];
  v10 = (void *)v3[7];
  sub_236078B08((uint64_t)a2, (uint64_t)v3, &qword_2563A0BC0);
  sub_2360843B8(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236083AD8);
  sub_236083B84(v4, v5, v6, v7, v8, v12, v9, v10);
  return swift_release();
}

uint64_t AppLibrary.App.installationError.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  sub_236077F30((unint64_t *)&qword_2563A0A78, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
  sub_2360D092C();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtCC15AppDistribution10AppLibrary3App__installationError;
  swift_beginAccess();
  sub_236078AC4(v3, a1, &qword_2563A0A88);
  return swift_release();
}

uint64_t sub_23607DD34@<X0>(uint64_t a1@<X8>)
{
  return AppLibrary.App.installationError.getter(a1);
}

uint64_t sub_23607DD54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0A88);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236078AC4(a1, (uint64_t)v4, &qword_2563A0A88);
  return sub_23607DDD8((uint64_t)v4);
}

uint64_t sub_23607DDD8(uint64_t a1)
{
  uint64_t KeyPath;

  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  sub_236077F30((unint64_t *)&qword_2563A0A78, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
  sub_2360D0920();
  swift_release();
  sub_236078B4C(a1, &qword_2563A0A88);
  return swift_release();
}

uint64_t sub_23607DF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v4 = a1 + OBJC_IVAR____TtCC15AppDistribution10AppLibrary3App__installationError;
  swift_beginAccess();
  sub_236084340(a2, v4);
  swift_endAccess();
  return swift_release();
}

BOOL AppLibrary.App.isInstalled.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  sub_236077F30((unint64_t *)&qword_2563A0A78, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
  sub_2360D092C();
  swift_release();
  v1 = v0[3];
  v2 = v0[4];
  v3 = v0[5];
  sub_236083A94(v1, v2, v3);
  swift_release();
  if (v3)
    sub_236083B48(v1, v2, v3);
  swift_release();
  return v3 != 0;
}

BOOL AppLibrary.App.isInstalling.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = v0;
  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  sub_236077F30((unint64_t *)&qword_2563A0A78, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
  sub_2360D092C();
  swift_release();
  v2 = v0[10];
  v3 = v0[11];
  v4 = v0[12];
  v5 = v1[13];
  v6 = v1[14];
  v7 = v1[15];
  v9 = v1[16];
  v8 = (void *)v1[17];
  sub_236083AD8(v2, v3, v4, v5, v6, v7, v9, v8);
  swift_release();
  if (v4)
    sub_236083B84(v2, v3, v4, v5, v6, v7, v9, v8);
  swift_release();
  return v4 != 0;
}

BOOL AppLibrary.App.isUpdating.getter()
{
  BOOL v0;

  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  if (AppLibrary.App.isInstalled.getter())
  {
    sub_2360D0C68();
    sub_2360D0C44();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    v0 = AppLibrary.App.isInstalling.getter();
    swift_release();
  }
  else
  {
    v0 = 0;
  }
  swift_release();
  return v0;
}

uint64_t sub_23607E484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  _QWORD v14[8];
  _QWORD v15[7];

  v5 = v4;
  sub_236078B08(a2, (uint64_t)v15, &qword_2563A0BF0);
  sub_236078B08(a3, (uint64_t)v14, &qword_2563A0BC0);
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = 0u;
  *(_OWORD *)(v5 + 104) = 0u;
  *(_OWORD *)(v5 + 120) = 0u;
  *(_QWORD *)(v5 + 136) = 0;
  v8 = v5 + OBJC_IVAR____TtCC15AppDistribution10AppLibrary3App__installationError;
  v9 = type metadata accessor for MarketplaceKitError();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_2360D0950();
  *(_QWORD *)(v5 + 16) = a1;
  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  sub_236077F30((unint64_t *)&qword_2563A0A78, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
  sub_2360D0920();
  sub_23608445C(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236083B48);
  swift_release();
  swift_release();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v11 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v11);
  sub_2360D0920();
  sub_2360843B8(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236083B84);
  swift_release();
  swift_release();
  sub_236078B4C(a4, &qword_2563A0A88);
  return v5;
}

uint64_t sub_23607E768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a2;
  v5 = sub_2360D0AA0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2360D0C74();
  v26 = sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  v25 = sub_2360D0A7C();
  v9 = sub_2360D0A94();
  v23 = v10;
  v24 = v9;
  v11 = sub_2360D0A70();
  v13 = v12;
  v14 = sub_2360D0A88();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v17 = sub_2360D0A40();
  v18 = objc_allocWithZone((Class)type metadata accessor for InstallationNSProgress());
  v19 = sub_236082DF4(v17);
  result = swift_release();
  v21 = v24;
  *a3 = v25;
  a3[1] = v21;
  a3[2] = v23;
  a3[3] = v11;
  a3[4] = v13;
  a3[5] = v14;
  a3[6] = v16;
  a3[7] = (uint64_t)v19;
  return result;
}

uint64_t sub_23607E8EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0BD8);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0BE0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v17 - v10;
  v12 = *(_QWORD *)(v0 + 16);
  sub_2360D09BC();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE6A10], v1);
  sub_2360D0CA4();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0BE8);
  swift_allocObject();
  v13 = sub_2360D0A34();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  *(_QWORD *)(v14 + 32) = 0;
  *(_BYTE *)(v14 + 40) = 0;
  swift_retain();
  sub_2360D0CB0();
  sub_2360D0AE8();
  v15 = (void *)sub_2360D0ADC();
  sub_2360D0AD0();
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
}

void sub_23607EAD8()
{
  id v0;

  sub_2360D0AE8();
  v0 = (id)sub_2360D0ADC();
  sub_2360D0AB8();

}

void sub_23607EB4C(void (*a1)(char *, uint64_t))
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, void (*)(_QWORD, _QWORD), uint64_t);
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char **v44;
  char *v45;
  uint64_t (*v46)(char **, uint64_t);
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  void *v56;
  id v57;
  double v58;
  int v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  void *v80;
  char **v81;
  uint64_t v82;
  char *v83;
  void (*v84)(char *, char *, uint64_t);
  double v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  id v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  char *v106;
  NSObject *v107;
  os_log_type_t v108;
  uint8_t *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  unint64_t v120;
  void (*v121)(char *, uint64_t);
  char *v122;
  char *v123;
  NSObject *v124;
  os_log_type_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  void (*v133)(char **, uint64_t);
  char *v134;
  NSObject *v135;
  uint64_t v136;
  uint8_t *v137;
  char isCurrentExecutor;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  NSObject *v142;
  os_log_type_t v143;
  uint8_t *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  char **v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  void (*v157)(char *, void (*)(_QWORD, _QWORD), uint64_t);
  uint64_t v158;
  uint64_t v159;
  void (*v160)(char *, uint64_t);
  char *v161;
  char *v162;
  void (*v163)(char *, uint64_t);
  uint64_t v164;
  uint64_t v165;
  uint64_t v166[2];

  v2 = v1;
  v4 = sub_2360D09BC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v161 = (char *)&v146 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v150 = (char *)&v146 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v153 = (char **)((char *)&v146 - v11);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v155 = (char *)&v146 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v162 = (char *)&v146 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v146 - v16;
  v18 = sub_2360D0B3C();
  v160 = *(void (**)(char *, uint64_t))(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v149 = (char *)&v146 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v151 = (char *)&v146 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v148 = (char *)&v146 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v152 = (char *)&v146 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v147 = (char *)&v146 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v146 - v29;
  v31 = sub_2360D0C74();
  v159 = sub_2360D0C68();
  v164 = v31;
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  sub_2360D0B0C();
  v32 = *(void (**)(char *, void (*)(_QWORD, _QWORD), uint64_t))(v5 + 16);
  v163 = a1;
  v32(v17, (void (*)(_QWORD, _QWORD))a1, v4);
  swift_retain_n();
  v33 = sub_2360D0B24();
  v34 = sub_2360D0D1C();
  if (os_log_type_enabled(v33, v34))
  {
    v157 = v32;
    v158 = (uint64_t)v1;
    v154 = v4;
    v156 = v18;
    v35 = swift_slowAlloc();
    v146 = swift_slowAlloc();
    v166[0] = v146;
    *(_DWORD *)v35 = 134218242;
    sub_2360D0C68();
    sub_2360D0C44();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    v36 = *(_QWORD *)(v158 + 16);
    swift_release();
    swift_release();
    v165 = v36;
    sub_2360D0D88();
    swift_release();
    *(_WORD *)(v35 + 12) = 2082;
    sub_2360D0C68();
    sub_2360D0C44();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    swift_release();
    sub_236077F30(&qword_2563A0BD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDDAC28], MEMORY[0x24BDDAC38]);
    v37 = v154;
    v38 = sub_2360D101C();
    v165 = sub_23609FE8C(v38, v39, v166);
    sub_2360D0D88();
    swift_bridgeObjectRelease();
    v40 = *(void (**)(char *, uint64_t))(v5 + 8);
    v40(v17, v37);
    _os_log_impl(&dword_236065000, v33, v34, "[%llu] Got state %{public}s", (uint8_t *)v35, 0x16u);
    v41 = v146;
    swift_arrayDestroy();
    MEMORY[0x23B7EBB1C](v41, -1, -1);
    MEMORY[0x23B7EBB1C](v35, -1, -1);

    v42 = v37;
    v43 = (void (*)(char *, uint64_t))*((_QWORD *)v160 + 1);
    v18 = v156;
    v43(v30, v156);
    v32 = v157;
    v2 = (_QWORD *)v158;
  }
  else
  {
    swift_release_n();
    v40 = *(void (**)(char *, uint64_t))(v5 + 8);
    v40(v17, v4);

    v43 = (void (*)(char *, uint64_t))*((_QWORD *)v160 + 1);
    v43(v30, v18);
    v42 = v4;
  }
  v45 = v161;
  v44 = (char **)v162;
  v32(v162, (void (*)(_QWORD, _QWORD))v163, v42);
  v46 = *(uint64_t (**)(char **, uint64_t))(v5 + 88);
  v47 = v46(v44, v42);
  if (v47 == *MEMORY[0x24BDDAC18])
  {
    (*(void (**)(char **, uint64_t))(v5 + 96))(v44, v42);
    swift_release();
LABEL_12:
    sub_2360D0C68();
    sub_2360D0C44();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    swift_getKeyPath();
    v166[0] = (uint64_t)v2;
    sub_236077F30((unint64_t *)&qword_2563A0A78, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
    sub_2360D092C();
    swift_release();
    v49 = v2[10];
    v48 = v2[11];
    v50 = v2[12];
    v51 = v2[13];
    v52 = v2[14];
    v53 = v2[15];
    v54 = v2;
    v55 = v2[16];
    v56 = (void *)v54[17];
    sub_236083AD8(v49, v48, v50, v51, v52, v53, v55, v56);
    swift_release();
    if (v50)
    {
      v57 = v56;
      sub_236083B84(v49, v48, v50, v51, v52, v53, v55, v56);
      v58 = 1.0;
LABEL_16:
      sub_236080174(v58);
      sub_236080450(0, 0);
LABEL_17:
      swift_release();

      return;
    }
    goto LABEL_73;
  }
  if (v47 == *MEMORY[0x24BDDABD8])
  {
    (*(void (**)(char **, uint64_t))(v5 + 96))(v44, v42);
    swift_release();
    goto LABEL_73;
  }
  v157 = v32;
  v59 = *MEMORY[0x24BDDABC8];
  if (v47 == *MEMORY[0x24BDDABC8])
  {
    v163 = v43;
    v156 = v18;
    (*(void (**)(char **, uint64_t))(v5 + 96))(v44, v42);
    v162 = *v44;
    v60 = *((double *)v162 + 2);
    v161 = (char *)sub_2360D0C68();
    sub_2360D0C44();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    swift_getKeyPath();
    v166[0] = (uint64_t)v2;
    sub_236077F30((unint64_t *)&qword_2563A0A78, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
    sub_2360D092C();
    swift_release();
    v61 = v2[10];
    v62 = v2[11];
    v63 = v2[12];
    v64 = v2[13];
    v66 = v2[14];
    v65 = v2[15];
    v68 = v2[16];
    v67 = (void *)v2[17];
    sub_236083AD8(v61, v62, v63, v64, v66, v65, v68, v67);
    swift_release();
    if (v63)
    {
      v57 = v67;
      sub_236083B84(v61, v62, v63, v64, v66, v65, v68, v67);
      sub_236080174(v60);
      sub_236080450(0, 0);
      swift_release();
      goto LABEL_17;
    }
    v106 = v152;
    sub_2360D0B0C();
    swift_retain_n();
    v107 = sub_2360D0B24();
    v108 = sub_2360D0D10();
    if (os_log_type_enabled(v107, v108))
    {
      v109 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v109 = 134217984;
      sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      v110 = v2[2];
      swift_release();
      swift_release();
      v166[0] = v110;
      sub_2360D0D88();
      swift_release();
      _os_log_impl(&dword_236065000, v107, v108, "[%llu] Received AppState update before app catalog update for installation", v109, 0xCu);
      MEMORY[0x23B7EBB1C](v109, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v163(v106, v156);
LABEL_72:
    swift_release();
    goto LABEL_73;
  }
  if (v47 == *MEMORY[0x24BDDAC00])
  {
    v160 = v40;
    v163 = v43;
    v156 = v18;
    v152 = *(char **)(v5 + 96);
    ((void (*)(char **, uint64_t))v152)(v44, v42);
    v161 = *v44;
    v69 = swift_projectBox();
    v154 = v42;
    v157(v155, (void (*)(_QWORD, _QWORD))v69, v42);
    v162 = (char *)sub_2360D0C68();
    sub_2360D0C44();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    swift_getKeyPath();
    v70 = (char *)v2 + OBJC_IVAR____TtCC15AppDistribution10AppLibrary3App___observationRegistrar;
    v166[0] = (uint64_t)v2;
    v147 = (char *)sub_236077F30((unint64_t *)&qword_2563A0A78, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
    v149 = v70;
    sub_2360D092C();
    swift_release();
    v71 = v2[10];
    v72 = v2[11];
    v73 = v2[12];
    v74 = v2[13];
    v75 = v2;
    v76 = v2[14];
    v78 = v75[15];
    v77 = v75[16];
    v158 = (uint64_t)v75;
    v79 = (void *)v75[17];
    sub_236083AD8(v71, v72, v73, v74, v76, v78, v77, v79);
    swift_release();
    if (v73)
    {
      v162 = v79;
      sub_236083B84(v71, v72, v73, v74, v76, v78, v77, v79);
      v80 = v162;
      sub_236080450(1, 0);

    }
    v81 = v153;
    v82 = v154;
    v83 = v155;
    v84 = (void (*)(char *, char *, uint64_t))v157;
    v157((char *)v153, (void (*)(_QWORD, _QWORD))v155, v154);
    if (v46(v81, v82) != v59)
    {
      v111 = v151;
      sub_2360D0B0C();
      v112 = v150;
      v84(v150, v83, v82);
      v113 = v158;
      swift_retain_n();
      v114 = sub_2360D0B24();
      v115 = sub_2360D0D28();
      if (os_log_type_enabled(v114, v115))
      {
        v116 = swift_slowAlloc();
        v162 = (char *)swift_slowAlloc();
        v166[0] = (uint64_t)v162;
        *(_DWORD *)v116 = 134218242;
        sub_2360D0C68();
        sub_2360D0C44();
        if ((swift_task_isCurrentExecutor() & 1) == 0)
          swift_task_reportUnexpectedExecutor();
        v117 = *(_QWORD *)(v113 + 16);
        swift_release();
        swift_release();
        v165 = v117;
        sub_2360D0D88();
        swift_release();
        *(_WORD *)(v116 + 12) = 2082;
        sub_2360D0C68();
        sub_2360D0C44();
        if ((swift_task_isCurrentExecutor() & 1) == 0)
          swift_task_reportUnexpectedExecutor();
        swift_release();
        sub_236077F30(&qword_2563A0BD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDDAC28], MEMORY[0x24BDDAC38]);
        v118 = v150;
        v119 = sub_2360D101C();
        v165 = sub_23609FE8C(v119, v120, v166);
        sub_2360D0D88();
        swift_bridgeObjectRelease();
        v121 = v160;
        v160(v118, v82);
        _os_log_impl(&dword_236065000, v114, v115, "[%llu] Unhandled paused substate: %{public}s", (uint8_t *)v116, 0x16u);
        v122 = v162;
        swift_arrayDestroy();
        MEMORY[0x23B7EBB1C](v122, -1, -1);
        MEMORY[0x23B7EBB1C](v116, -1, -1);

        v163(v151, v156);
        v121(v155, v82);
        v81 = v153;
      }
      else
      {

        swift_release();
        v121 = v160;
        v160(v112, v82);
        swift_release();
        v163(v111, v156);
        v121(v83, v82);
      }
      v121((char *)v81, v82);
      swift_release();
      goto LABEL_73;
    }
    ((void (*)(char **, uint64_t))v152)(v81, v82);
    v162 = *v81;
    v85 = *((double *)v162 + 2);
    sub_2360D0C68();
    sub_2360D0C44();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    swift_getKeyPath();
    v86 = (_QWORD *)v158;
    v166[0] = v158;
    sub_2360D092C();
    swift_release();
    v87 = v86[10];
    v88 = v86[11];
    v89 = v86[12];
    v90 = v86[13];
    v91 = v86[14];
    v92 = v86[15];
    v94 = v86[16];
    v93 = (void *)v86[17];
    sub_236083AD8(v87, v88, v89, v90, v91, v92, v94, v93);
    swift_release();
    if (v89)
    {
      v95 = v93;
      sub_236083B84(v87, v88, v89, v90, v91, v92, v94, v93);
      sub_236080174(v85);

      v97 = v154;
      v96 = v155;
    }
    else
    {
      v134 = v148;
      sub_2360D0B0C();
      swift_retain_n();
      v135 = sub_2360D0B24();
      v136 = sub_2360D0D10();
      if (os_log_type_enabled(v135, (os_log_type_t)v136))
      {
        v137 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v137 = 134217984;
        sub_2360D0C68();
        sub_2360D0C44();
        isCurrentExecutor = swift_task_isCurrentExecutor();
        v139 = v154;
        if ((isCurrentExecutor & 1) == 0)
          swift_task_reportUnexpectedExecutor();
        v140 = v86[2];
        swift_release();
        swift_release();
        v166[0] = v140;
        sub_2360D0D88();
        swift_release();
        _os_log_impl(&dword_236065000, v135, (os_log_type_t)v136, "[%llu] Received AppState update before app catalog update for installation", v137, 0xCu);
        MEMORY[0x23B7EBB1C](v137, -1, -1);

      }
      else
      {

        swift_release_n();
        v139 = v154;
      }
      v163(v134, v156);
      v96 = v155;
      v97 = v139;
    }
    v160(v96, v97);
    swift_release();
    goto LABEL_72;
  }
  if (v47 == *MEMORY[0x24BDDAC20] || v47 == *MEMORY[0x24BDDAC08])
    goto LABEL_12;
  if (v47 == *MEMORY[0x24BDDAC10])
  {
    v163 = v43;
    v156 = v18;
    v162 = (char *)sub_2360D0C68();
    sub_2360D0C44();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    swift_getKeyPath();
    v166[0] = (uint64_t)v2;
    sub_236077F30((unint64_t *)&qword_2563A0A78, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
    sub_2360D092C();
    swift_release();
    v99 = v2[10];
    v98 = v2[11];
    v100 = v2[12];
    v101 = v2[13];
    v102 = v2[14];
    v103 = v2[15];
    v104 = v2[16];
    v105 = (void *)v2[17];
    sub_236083AD8(v99, v98, v100, v101, v102, v103, v104, v105);
    swift_release();
    if (v100)
    {
      v57 = v105;
      sub_236083B84(v99, v98, v100, v101, v102, v103, v104, v105);
      v58 = -1.0;
      goto LABEL_16;
    }
    v141 = v147;
    sub_2360D0B0C();
    swift_retain_n();
    v142 = sub_2360D0B24();
    v143 = sub_2360D0D10();
    if (os_log_type_enabled(v142, v143))
    {
      v144 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v144 = 134217984;
      sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      v145 = v2[2];
      swift_release();
      swift_release();
      v166[0] = v145;
      sub_2360D0D88();
      swift_release();
      _os_log_impl(&dword_236065000, v142, v143, "[%llu] Received AppState update before app catalog update for installation", v144, 0xCu);
      MEMORY[0x23B7EBB1C](v144, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v163(v141, v156);
  }
  else
  {
    v160 = v40;
    v123 = v149;
    sub_2360D0B0C();
    v157(v45, (void (*)(_QWORD, _QWORD))v163, v42);
    swift_retain_n();
    v124 = sub_2360D0B24();
    v125 = sub_2360D0D28();
    if (os_log_type_enabled(v124, v125))
    {
      v154 = v42;
      v163 = v43;
      v156 = v18;
      v126 = swift_slowAlloc();
      v127 = swift_slowAlloc();
      v166[0] = v127;
      *(_DWORD *)v126 = 134218242;
      sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      v128 = v2[2];
      swift_release();
      swift_release();
      v165 = v128;
      sub_2360D0D88();
      swift_release();
      *(_WORD *)(v126 + 12) = 2082;
      sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      v129 = v161;
      v130 = sub_2360D09B0();
      v132 = v131;
      swift_release();
      v165 = sub_23609FE8C(v130, v132, v166);
      sub_2360D0D88();
      swift_bridgeObjectRelease();
      v42 = v154;
      v133 = (void (*)(char **, uint64_t))v160;
      v160(v129, v154);
      _os_log_impl(&dword_236065000, v124, v125, "[%llu] Unknown state: %{public}s", (uint8_t *)v126, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B7EBB1C](v127, -1, -1);
      MEMORY[0x23B7EBB1C](v126, -1, -1);

      v163(v149, v156);
      v44 = (char **)v162;
    }
    else
    {
      swift_release_n();
      v133 = (void (*)(char **, uint64_t))v160;
      v160(v45, v42);

      v43(v123, v18);
    }
    v133(v44, v42);
  }
LABEL_73:
  swift_release();
}

id sub_236080174(double a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id result;
  uint64_t v10;
  char *v11;
  double v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  NSObject *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD v21[2];

  v2 = v1;
  v4 = sub_2360D0B3C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (id)MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v21 - v10;
  v12 = 4.50359963e15;
  if (a1 < 1.0)
    v12 = a1 * 4.50359963e15;
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v12 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  v13 = (uint64_t)v12;
  if (a1 == -1.0 || (uint64_t)objc_msgSend(v2, sel_completedUnitCount) <= v13)
  {
    result = objc_msgSend(v2, sel_setCompletedUnitCount_, v13);
    if (a1 >= 0.6)
    {
      result = objc_msgSend(v2, sel_isPausable);
      if ((_DWORD)result)
      {
        sub_2360D0B0C();
        v17 = v2;
        v18 = sub_2360D0B24();
        v19 = sub_2360D0D10();
        if (os_log_type_enabled(v18, v19))
        {
          v20 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v20 = 134217984;
          v21[1] = *((char *)v17 + OBJC_IVAR____TtC15AppDistribution22InstallationNSProgress_id);
          sub_2360D0D88();

          _os_log_impl(&dword_236065000, v18, v19, "[%llu] No longer pausable nor cancelable", v20, 0xCu);
          MEMORY[0x23B7EBB1C](v20, -1, -1);
        }
        else
        {

          v18 = v17;
        }

        (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
        -[NSObject setPausable:](v17, sel_setPausable_, 0);
        return -[NSObject setCancellable:](v17, sel_setCancellable_, 0);
      }
    }
  }
  else
  {
    sub_2360D0B18();
    v14 = sub_2360D0B24();
    v15 = sub_2360D0D28();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_236065000, v14, v15, "Received progress update out of order", v16, 2u);
      MEMORY[0x23B7EBB1C](v16, -1, -1);
    }

    return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return result;
}

void sub_236080450(int a1, int a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  int v20;
  int v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  LODWORD(v4) = a2;
  LODWORD(v5) = a1;
  v6 = sub_2360D0B3C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2360D0B0C();
  v10 = sub_2360D0B24();
  v11 = sub_2360D0D10();
  if (os_log_type_enabled(v10, v11))
  {
    v20 = v4;
    v4 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v24 = v12;
    *(_DWORD *)v4 = 136315394;
    v21 = v5;
    v22 = v3;
    if ((_BYTE)v5)
    {
      if (v5 == 1)
        v13 = 0x646573756170;
      else
        v13 = 0x64656C65636E6163;
      if (v5 == 1)
        v5 = 0xE600000000000000;
      else
        v5 = 0xE800000000000000;
    }
    else
    {
      v5 = 0xE700000000000000;
      v13 = 0x676E696E6E7572;
    }
    v23 = sub_23609FE8C(v13, v5, &v24);
    sub_2360D0D88();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 1024;
    v14 = v20;
    LODWORD(v23) = v20 & 1;
    sub_2360D0D88();
    _os_log_impl(&dword_236065000, v10, v11, "setState %s, sendingToDaemon: %{BOOL}d", (uint8_t *)v4, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B7EBB1C](v12, -1, -1);
    v15 = v4;
    LOBYTE(v4) = v14;
    MEMORY[0x23B7EBB1C](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v3 = v22;
    LOBYTE(v5) = v21;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v16 = *(os_unfair_lock_s **)&v3[OBJC_IVAR____TtC15AppDistribution22InstallationNSProgress_lock];
  v17 = (uint64_t)&v16[4];
  v18 = v16 + 8;
  os_unfair_lock_lock(v16 + 8);
  sub_236082F94(v17, v5, v4 & 1, v3);
  os_unfair_lock_unlock(v18);
}

uint64_t sub_2360806BC(void (*a1)(char *, uint64_t))
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  uint64_t KeyPath;
  _QWORD *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  uint64_t v104;
  BOOL v105;
  BOOL v106;
  void (*isa)(char *, uint64_t);
  char *v108;
  NSObject *v109;
  int v110;
  _BOOL4 v111;
  _DWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  NSObject *v124;
  uint8_t *v125;
  uint64_t v126;
  char *v127;
  NSObject *v128;
  int v129;
  _DWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  int v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  void *v160;
  NSObject *v161;
  os_log_type_t v162;
  uint64_t v163;
  uint8_t *v164;
  char *v165;
  NSObject *v166;
  os_log_type_t v167;
  uint8_t *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t (*v193)(char *, uint64_t, uint64_t);
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  char *v201;
  NSObject *v202;
  uint64_t v203;
  uint64_t v204;
  void (*v205)(char *, uint64_t);
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  _OWORD v211[4];
  _QWORD *v212;
  _QWORD v213[7];

  v2 = v1;
  v205 = a1;
  v203 = type metadata accessor for MarketplaceKitError();
  v3 = *(_QWORD *)(v203 - 8);
  MEMORY[0x24BDAC7A8](v203);
  v5 = (char *)&v179 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2360D0B3C();
  v202 = *(NSObject **)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v179 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v179 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v199 = (char *)&v179 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v198 = (char *)&v179 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v201 = (char *)&v179 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0A88);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v188 = (uint64_t)&v179 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v196 = (char *)&v179 - v21;
  v204 = sub_2360D0AA0();
  v200 = *(_QWORD *)(v204 - 8);
  v22 = MEMORY[0x24BDAC7A8](v204);
  v187 = (char *)&v179 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v186 = (char *)&v179 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v206 = (char *)&v179 - v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0BF8);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v194 = (uint64_t)&v179 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v195 = (char *)&v179 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v192 = (uint64_t)&v179 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v207 = (char *)&v179 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v179 - v36;
  v38 = sub_2360D0C74();
  v39 = sub_2360D0C68();
  v208 = v38;
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v40 = v1[2];
  if (v40 == sub_2360D0A40())
  {
    v183 = v40;
    v189 = v3;
    v182 = v5;
    v185 = v39;
    v190 = v12;
    v197 = v6;
    sub_2360D0A64();
    v193 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v200 + 48);
    v41 = v193(v37, 1, v204);
    sub_236078B4C((uint64_t)v37, &qword_2563A0BF8);
    if (v41 == 1)
    {
      v180 = sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      swift_getKeyPath();
      v42 = (uint64_t)v2 + OBJC_IVAR____TtCC15AppDistribution10AppLibrary3App___observationRegistrar;
      v212 = v2;
      v181 = sub_236077F30((unint64_t *)&qword_2563A0A78, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
      v191 = v42;
      sub_2360D092C();
      swift_release();
      v43 = v2[10];
      v44 = v2[11];
      v45 = v2[12];
      v46 = v2[13];
      v47 = v2[14];
      v48 = v2[15];
      v49 = v2[16];
      v50 = (void *)v2[17];
      sub_236083AD8(v43, v44, v45, v46, v47, v48, v49, v50);
      swift_release();
      if (v45)
      {
        v51 = v50;
        sub_236083B84(v43, v44, v45, v46, v47, v48, v49, v50);
        sub_236080174(1.0);

      }
      v180 = sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      swift_getKeyPath();
      v212 = v2;
      sub_2360D092C();
      swift_release();
      v52 = v2[10];
      v53 = v2[11];
      v54 = v2[12];
      v55 = v2[13];
      v56 = v2[14];
      v57 = v2[15];
      v59 = v2[16];
      v58 = (void *)v2[17];
      sub_236083AD8(v52, v53, v54, v55, v56, v57, v59, v58);
      swift_release();
      if (v54)
      {
        v60 = v58;
        sub_236083B84(v52, v53, v54, v55, v56, v57, v59, v58);
        sub_236080450(0, 0);

      }
    }
    v61 = (uint64_t)v207;
    sub_2360D0A58();
    v62 = v192;
    sub_236078AC4(v61, v192, &qword_2563A0BF8);
    v63 = v204;
    v64 = v193((char *)v62, 1, v204);
    v184 = v2;
    if (v64 == 1)
    {
      v65 = 0;
      v66 = 0;
      v67 = 0;
      v68 = 0;
      v69 = 0;
      v70 = 0;
      v71 = 0;
    }
    else
    {
      v75 = v200;
      (*(void (**)(char *, uint64_t, uint64_t))(v200 + 32))(v206, v62, v63);
      v181 = sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      v76 = v186;
      v77 = v206;
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v186, v206, v63);
      v192 = sub_2360D0A7C();
      v191 = sub_2360D0A94();
      v67 = v78;
      v68 = sub_2360D0A70();
      v69 = v79;
      v80 = sub_2360D0A88();
      v81 = v75;
      v71 = v82;
      v83 = *(void (**)(char *, uint64_t))(v81 + 8);
      v83(v76, v63);
      swift_release();
      v83(v77, v63);
      v70 = (char *)v80;
      v66 = v191;
      v65 = v192;
    }
    v192 = v65;
    v213[0] = v65;
    v213[1] = v66;
    v191 = v66;
    v213[2] = v67;
    v213[3] = v68;
    v213[4] = v69;
    v213[5] = v70;
    v186 = v70;
    v213[6] = v71;
    sub_236078B4C(v61, &qword_2563A0BF8);
    sub_2360D0C68();
    sub_2360D0C44();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    v85 = v184;
    *(&v179 - 2) = (uint64_t)v184;
    *(&v179 - 1) = (uint64_t)v213;
    v86 = (char *)v85 + OBJC_IVAR____TtCC15AppDistribution10AppLibrary3App___observationRegistrar;
    v212 = v85;
    v206 = (char *)sub_236077F30((unint64_t *)&qword_2563A0A78, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
    v207 = v86;
    sub_2360D0920();
    sub_236083B48(v192, v191, v67);
    swift_release();
    swift_release();
    v87 = (uint64_t)v195;
    v88 = (uint64_t)v205;
    sub_2360D0A64();
    v89 = v194;
    sub_236078AC4(v87, v194, &qword_2563A0BF8);
    v90 = v204;
    if (v193((char *)v89, 1, v204) == 1)
    {
      memset(v211, 0, sizeof(v211));
      v91 = v197;
    }
    else
    {
      v92 = v200;
      v93 = (uint64_t)v187;
      (*(void (**)(char *, uint64_t, uint64_t))(v200 + 32))(v187, v89, v90);
      sub_2360827C0(v93, v85, v88, (uint64_t *)v211);
      v91 = v197;
      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v93, v90);
    }
    sub_236078B4C(v87, &qword_2563A0BF8);
    sub_236078B08((uint64_t)v211, (uint64_t)&v212, &qword_2563A0BC0);
    sub_2360D0C68();
    sub_2360D0C44();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    v94 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v94);
    *(&v179 - 2) = (uint64_t)v85;
    *(&v179 - 1) = (uint64_t)&v212;
    v210 = v85;
    sub_2360D0920();
    sub_2360843B8(&v212, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_236083B84);
    swift_release();
    swift_release();
    v95 = sub_2360D0A4C();
    if (v96 >> 60 == 15)
    {
      v97 = 1;
      v98 = (uint64_t)v196;
    }
    else
    {
      v99 = v95;
      v100 = v96;
      sub_2360D08B4();
      swift_allocObject();
      sub_2360D08A8();
      sub_236077F30(&qword_2563A0278, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
      v98 = (uint64_t)v196;
      sub_2360D089C();
      v97 = 0;
      sub_2360844D8(v99, v100);
      swift_release();
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v189 + 56))(v98, v97, 1, v203);
    sub_2360D0C68();
    sub_2360D0C44();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    v101 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v101);
    *(&v179 - 2) = (uint64_t)v85;
    *(&v179 - 1) = v98;
    *(_QWORD *)&v211[0] = v85;
    sub_2360D0920();
    swift_release();
    sub_236078B4C(v98, &qword_2563A0A88);
    swift_release();
    sub_2360D0B0C();
    swift_retain_n();
    v102 = sub_2360D0B24();
    v103 = sub_2360D0D1C();
    if (os_log_type_enabled(v102, v103))
    {
      v104 = swift_slowAlloc();
      *(_DWORD *)v104 = 134218496;
      sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      swift_release();
      swift_release();
      *(_QWORD *)&v211[0] = v183;
      sub_2360D0D88();
      swift_release();
      *(_WORD *)(v104 + 12) = 1024;
      sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      v105 = AppLibrary.App.isInstalled.getter();
      swift_release();
      swift_release();
      LODWORD(v211[0]) = v105;
      sub_2360D0D88();
      swift_release();
      *(_WORD *)(v104 + 18) = 1024;
      sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      v106 = AppLibrary.App.isInstalling.getter();
      swift_release();
      swift_release();
      LODWORD(v211[0]) = v106;
      sub_2360D0D88();
      swift_release();
      _os_log_impl(&dword_236065000, v102, v103, "Updating app %llu: isInstalled: %{BOOL}d, isInstalling: %{BOOL}d", (uint8_t *)v104, 0x18u);
      MEMORY[0x23B7EBB1C](v104, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    isa = (void (*)(char *, uint64_t))v202[1].isa;
    isa(v201, v91);
    v108 = v198;
    sub_2360D0B0C();
    swift_retain_n();
    v109 = sub_2360D0B24();
    v110 = sub_2360D0D1C();
    v111 = os_log_type_enabled(v109, (os_log_type_t)v110);
    v205 = isa;
    if (v111)
    {
      LODWORD(v201) = v110;
      v112 = (_DWORD *)swift_slowAlloc();
      v200 = swift_slowAlloc();
      *(_QWORD *)&v211[0] = v200;
      v204 = (uint64_t)v112;
      *v112 = 134218242;
      sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      v202 = v109;
      sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      swift_getKeyPath();
      v210 = v85;
      sub_2360D092C();
      swift_release();
      v114 = v85[3];
      v113 = v85[4];
      v115 = v85[5];
      sub_236083A94(v114, v113, v115);
      swift_release();
      if (v115)
      {
        sub_236083B48(v114, v113, v115);
        swift_release();
        swift_release();
      }
      else
      {
        sub_2360D0C68();
        sub_2360D0C44();
        if ((swift_task_isCurrentExecutor() & 1) == 0)
          swift_task_reportUnexpectedExecutor();
        swift_release();
        swift_release();
        swift_release();
        v114 = 0;
      }
      v117 = v204;
      v210 = (_QWORD *)v114;
      sub_2360D0D88();
      swift_release();
      *(_WORD *)(v117 + 12) = 2080;
      sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      swift_getKeyPath();
      v210 = v85;
      sub_2360D092C();
      swift_release();
      v119 = v85[3];
      v118 = v85[4];
      v120 = v85[5];
      v121 = v85[8];
      v122 = v85[9];
      sub_236083A94(v119, v118, v120);
      swift_release();
      if (!v120 || (swift_bridgeObjectRetain(), sub_236083B48(v119, v118, v120), !v122))
      {
        sub_2360D0C68();
        sub_2360D0C44();
        if ((swift_task_isCurrentExecutor() & 1) == 0)
          swift_task_reportUnexpectedExecutor();
        v121 = 0x296C696E28;
        swift_release();
        swift_bridgeObjectRelease();
        v122 = 0xE500000000000000;
      }
      v91 = v197;
      v123 = v198;
      isa = v205;
      v124 = v202;
      swift_release();
      v125 = (uint8_t *)v204;
      v210 = (_QWORD *)sub_23609FE8C(v121, v122, (uint64_t *)v211);
      sub_2360D0D88();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_236065000, v124, (os_log_type_t)v201, "\t installedMetadata evid: %llu account: %s", v125, 0x16u);
      v126 = v200;
      swift_arrayDestroy();
      MEMORY[0x23B7EBB1C](v126, -1, -1);
      MEMORY[0x23B7EBB1C](v125, -1, -1);

      v116 = v123;
    }
    else
    {

      swift_release_n();
      v116 = v108;
    }
    isa(v116, v91);
    v127 = v199;
    sub_2360D0B0C();
    swift_retain_n();
    v128 = sub_2360D0B24();
    v129 = sub_2360D0D1C();
    if (os_log_type_enabled(v128, (os_log_type_t)v129))
    {
      v130 = (_DWORD *)swift_slowAlloc();
      v131 = swift_slowAlloc();
      *(_QWORD *)&v211[0] = v131;
      v204 = (uint64_t)v130;
      *v130 = 67109634;
      v198 = (char *)sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      v200 = v131;
      LODWORD(v201) = v129;
      v202 = v128;
      sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      swift_getKeyPath();
      v210 = v85;
      sub_2360D092C();
      swift_release();
      v132 = v85[10];
      v133 = v85[11];
      v134 = v85[12];
      v135 = v85[13];
      v136 = v85[14];
      v137 = v85[15];
      v139 = v85[16];
      v138 = (void *)v85[17];
      sub_236083AD8(v132, v133, v134, v135, v136, v137, v139, v138);
      swift_release();
      if (v134)
      {
        sub_236083B84(v132, v133, v134, v135, v136, v137, v139, v138);
        v140 = 1;
      }
      else
      {
        v140 = 0;
      }
      swift_release();
      swift_release();
      v143 = v204;
      LODWORD(v210) = v140;
      sub_2360D0D88();
      swift_release();
      *(_WORD *)(v143 + 8) = 2048;
      v198 = (char *)sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      swift_getKeyPath();
      v210 = v85;
      sub_2360D092C();
      swift_release();
      v145 = v85[10];
      v144 = v85[11];
      v146 = v85[12];
      v147 = v85[13];
      v148 = v85[14];
      v149 = v85[15];
      v151 = v85[16];
      v150 = (void *)v85[17];
      sub_236083AD8(v145, v144, v146, v147, v148, v149, v151, v150);
      swift_release();
      if (v146)
      {
        sub_236083B84(v145, v144, v146, v147, v148, v149, v151, v150);
        swift_release();
        swift_release();
      }
      else
      {
        sub_2360D0C68();
        sub_2360D0C44();
        if ((swift_task_isCurrentExecutor() & 1) == 0)
          swift_task_reportUnexpectedExecutor();
        swift_release();
        swift_release();
        swift_release();
        v145 = 0;
      }
      v152 = v204;
      v210 = (_QWORD *)v145;
      sub_2360D0D88();
      swift_release();
      *(_WORD *)(v152 + 18) = 2080;
      v198 = (char *)sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      swift_getKeyPath();
      v210 = v85;
      sub_2360D092C();
      swift_release();
      v154 = v85[10];
      v153 = v85[11];
      v156 = v85[12];
      v155 = v85[13];
      v157 = v85[14];
      v158 = v85[15];
      v159 = v85[16];
      v160 = (void *)v85[17];
      sub_236083AD8(v154, v153, v156, v155, v157, v158, v159, v160);
      swift_release();
      if (v156
        && (swift_bridgeObjectRetain(),
            swift_bridgeObjectRetain(),
            swift_bridgeObjectRetain(),
            sub_236083B84(v154, v153, v156, v155, v157, v158, v159, v160),
            swift_bridgeObjectRelease(),
            swift_bridgeObjectRelease(),
            v159))
      {
        v91 = v197;
        v161 = v202;
        v162 = v201;
        v163 = v200;
      }
      else
      {
        sub_2360D0C68();
        sub_2360D0C44();
        if ((swift_task_isCurrentExecutor() & 1) == 0)
          swift_task_reportUnexpectedExecutor();
        v158 = 0x296C696E28;
        swift_release();
        swift_bridgeObjectRelease();
        v159 = 0xE500000000000000;
        v91 = v197;
        v161 = v202;
        v162 = v201;
        v163 = v200;
      }
      swift_release();
      v164 = (uint8_t *)v204;
      v210 = (_QWORD *)sub_23609FE8C(v158, v159, (uint64_t *)v211);
      sub_2360D0D88();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_236065000, v161, v162, "\t installation: %{BOOL}d evid: %llu account: %s", v164, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x23B7EBB1C](v163, -1, -1);
      MEMORY[0x23B7EBB1C](v164, -1, -1);

      v141 = v199;
      v142 = v91;
      isa = v205;
    }
    else
    {

      swift_release_n();
      v141 = v127;
      v142 = v91;
    }
    isa(v141, v142);
    v165 = v190;
    sub_2360D0B0C();
    swift_retain_n();
    v166 = sub_2360D0B24();
    v167 = sub_2360D0D1C();
    if (os_log_type_enabled(v166, v167))
    {
      v168 = (uint8_t *)swift_slowAlloc();
      v169 = swift_slowAlloc();
      v210 = (_QWORD *)v169;
      *(_DWORD *)v168 = 136315138;
      sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      swift_getKeyPath();
      *(_QWORD *)&v211[0] = v85;
      sub_2360D092C();
      swift_release();
      v170 = (char *)v85 + OBJC_IVAR____TtCC15AppDistribution10AppLibrary3App__installationError;
      swift_beginAccess();
      v171 = (uint64_t)v170;
      v172 = v188;
      sub_236078AC4(v171, v188, &qword_2563A0A88);
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v189 + 48))(v172, 1, v203))
      {
        sub_236078B4C(v172, &qword_2563A0A88);
        sub_2360D0C68();
        sub_2360D0C44();
        if ((swift_task_isCurrentExecutor() & 1) == 0)
          swift_task_reportUnexpectedExecutor();
        v173 = 0x296C696E28;
        swift_release();
        v174 = 0xE500000000000000;
      }
      else
      {
        v175 = (uint64_t)v182;
        sub_236084494(v172, (uint64_t)v182);
        sub_236078B4C(v172, &qword_2563A0A88);
        MarketplaceKitError.description.getter();
        v173 = v176;
        v174 = v177;
        sub_236067E78(v175);
      }
      swift_release();
      v209 = sub_23609FE8C(v173, v174, (uint64_t *)&v210);
      sub_2360D0D88();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_236065000, v166, v167, "\t installError:: %s", v168, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7EBB1C](v169, -1, -1);
      MEMORY[0x23B7EBB1C](v168, -1, -1);

      v205(v190, v91);
    }
    else
    {

      swift_release_n();
      isa(v165, v91);
    }
  }
  else
  {
    sub_2360D0B0C();
    v72 = sub_2360D0B24();
    v73 = sub_2360D0D28();
    if (os_log_type_enabled(v72, v73))
    {
      v74 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v74 = 0;
      _os_log_impl(&dword_236065000, v72, v73, "Trying to update app with mismatched app data", v74, 2u);
      MEMORY[0x23B7EBB1C](v74, -1, -1);
    }

    ((void (*)(char *, uint64_t))v202[1].isa)(v9, v6);
  }
  return swift_release();
}

uint64_t sub_2360827C0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char isCurrentExecutor;
  uint64_t v39;
  id v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;

  v53 = a4;
  v45 = a3;
  v52 = sub_2360D0AAC();
  v6 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2360D0AA0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2360D0C74();
  v49 = sub_2360D0C68();
  v56 = v13;
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v50 = v8;
  v51 = v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  v48 = sub_2360D0A7C();
  v14 = sub_2360D0A94();
  v46 = v15;
  v47 = v14;
  v16 = sub_2360D0A70();
  v43 = v17;
  v44 = v16;
  v42 = sub_2360D0A88();
  v55 = v18;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v54 = sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  v57 = a2;
  sub_236077F30((unint64_t *)&qword_2563A0A78, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
  sub_2360D092C();
  swift_release();
  v20 = a2[10];
  v19 = a2[11];
  v22 = a2[12];
  v21 = a2[13];
  v23 = a2[14];
  v24 = a2[15];
  v25 = a2[16];
  v26 = (void *)a2[17];
  sub_236083AD8(v20, v19, v22, v21, v23, v24, v25, v26);
  swift_release();
  if (v22)
  {
    v27 = v26;
    sub_236083B84(v20, v19, v22, v21, v23, v24, v25, v26);
    v29 = v50;
    v28 = v51;
    v30 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v45, v52);
    v31 = v43;
    if (v26)
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
      v32 = v53;
      v33 = v48;
      v35 = v46;
      v34 = v47;
      v36 = v44;
      v37 = v42;
      goto LABEL_12;
    }
  }
  else
  {
    v29 = v50;
    v28 = v51;
    v30 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v45, v52);
    v31 = v43;
  }
  sub_2360D0C68();
  sub_2360D0C44();
  isCurrentExecutor = swift_task_isCurrentExecutor();
  v37 = v42;
  if ((isCurrentExecutor & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v39 = sub_2360D0A40();
  v40 = objc_allocWithZone((Class)type metadata accessor for InstallationNSProgress());
  v27 = sub_236082DF4(v39);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
  swift_release();
  v32 = v53;
  v34 = v47;
  v33 = v48;
  v35 = v46;
  v36 = v44;
LABEL_12:
  result = swift_release();
  *v32 = v33;
  v32[1] = v34;
  v32[2] = v35;
  v32[3] = v36;
  v32[4] = v31;
  v32[5] = v37;
  v32[6] = v55;
  v32[7] = (uint64_t)v27;
  return result;
}

BOOL static AppLibrary.App.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
}

uint64_t AppLibrary.App.hash(into:)()
{
  return sub_2360D10DC();
}

uint64_t AppLibrary.App.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_236083B48(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  sub_236083B84(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(void **)(v0 + 136));
  sub_236078B4C(v0 + OBJC_IVAR____TtCC15AppDistribution10AppLibrary3App__installationError, &qword_2563A0A88);
  v1 = v0 + OBJC_IVAR____TtCC15AppDistribution10AppLibrary3App___observationRegistrar;
  v2 = sub_2360D095C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AppLibrary.App.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_236083B48(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  sub_236083B84(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(void **)(v0 + 136));
  sub_236078B4C(v0 + OBJC_IVAR____TtCC15AppDistribution10AppLibrary3App__installationError, &qword_2563A0A88);
  v1 = v0 + OBJC_IVAR____TtCC15AppDistribution10AppLibrary3App___observationRegistrar;
  v2 = sub_2360D095C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t AppLibrary.App.hashValue.getter()
{
  sub_2360D10B8();
  sub_2360D10DC();
  return sub_2360D10F4();
}

void sub_236082D04(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 16);
}

uint64_t sub_236082D14()
{
  sub_2360D10B8();
  sub_2360D10DC();
  return sub_2360D10F4();
}

uint64_t sub_236082D58()
{
  return sub_2360D10DC();
}

uint64_t sub_236082D84()
{
  sub_2360D10B8();
  sub_2360D10DC();
  return sub_2360D10F4();
}

BOOL sub_236082DC4(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)a1 + 16) == *(_QWORD *)(*(_QWORD *)a2 + 16);
}

BOOL sub_236082DE0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

id sub_236082DF4(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  id v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = OBJC_IVAR____TtC15AppDistribution22InstallationNSProgress_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0BC8);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 32) = 0;
  *(_BYTE *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  *(_QWORD *)&v1[v4] = v5;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15AppDistribution22InstallationNSProgress_id] = a1;
  v8.receiver = v1;
  v8.super_class = ObjectType;
  v6 = objc_msgSendSuper2(&v8, sel_initWithParent_userInfo_, 0, 0);
  objc_msgSend(v6, sel_setTotalUnitCount_, 0x10000000000000);
  objc_msgSend(v6, sel_setPausable_, 1);
  objc_msgSend(v6, sel_setCancellable_, 1);
  sub_236080174(-1.0);

  return v6;
}

id sub_236082F94(uint64_t a1, char a2, char a3, char *a4)
{
  uint64_t ObjectType;
  uint64_t v9;
  id result;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char **v21;
  objc_super *v22;
  _QWORD v23[2];
  char *v24;
  objc_super v25;
  uint64_t v26;

  ObjectType = swift_getObjectType();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0BA8);
  result = (id)MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_BYTE *)a1)
  {
    if (a2)
      goto LABEL_10;
LABEL_7:
    if ((a3 & 1) == 0)
      return result;
    goto LABEL_14;
  }
  if (*(_BYTE *)a1 != 1 || a2 == 1)
    goto LABEL_7;
LABEL_10:
  *(_BYTE *)a1 = a2;
  if ((a3 & 1) != 0)
  {
    v14 = swift_allocObject();
    *(_BYTE *)(v14 + 16) = a2;
    v26 = *(_QWORD *)&a4[OBJC_IVAR____TtC15AppDistribution22InstallationNSProgress_id];
    v15 = *(_QWORD *)(a1 + 8);
    if (v15)
      sub_2360D0CD4();
    v16 = sub_2360D0C98();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v12, 1, 1, v16);
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = 0;
    v17[3] = 0;
    v18 = v26;
    v17[4] = v15;
    v17[5] = v18;
    v17[6] = sub_236084220;
    v17[7] = v14;
    v17[8] = a4;
    swift_retain();
    swift_retain();
    v19 = a4;
    v20 = sub_2360A27D0((uint64_t)v12, (uint64_t)&unk_2563A0BB8, (uint64_t)v17);
    swift_release();
    swift_release();
    *(_QWORD *)(a1 + 8) = v20;
  }
LABEL_14:
  if (a2)
  {
    if (a2 == 1)
    {
      v24 = a4;
      v21 = &selRef_pause;
      v22 = (objc_super *)&v24;
    }
    else
    {
      v25.receiver = a4;
      v21 = &selRef_cancel;
      v22 = &v25;
    }
  }
  else
  {
    v23[0] = a4;
    v21 = &selRef_resume;
    v22 = (objc_super *)v23;
  }
  v22->super_class = (Class)ObjectType;
  return objc_msgSendSuper2(v22, *v21, v23[0]);
}

void sub_2360831A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, void *);
  void *v14;
  uint64_t v15;
  uint64_t v16;

  if (a6)
  {
    if (a6 == 1)
    {
      v9 = (void *)sub_2360D08F0();
      v15 = a4;
      v16 = a5;
      v11 = MEMORY[0x24BDAC760];
      v12 = 1107296256;
      v13 = sub_23607D2C4;
      v14 = &block_descriptor_19;
      v10 = _Block_copy(&v11);
      swift_retain();
      swift_release();
      objc_msgSend(a1, sel_pauseInstall_reply_, v9, v10);
    }
    else
    {
      v9 = (void *)sub_2360D08F0();
      v15 = a4;
      v16 = a5;
      v11 = MEMORY[0x24BDAC760];
      v12 = 1107296256;
      v13 = sub_23607D2C4;
      v14 = &block_descriptor_2;
      v10 = _Block_copy(&v11);
      swift_retain();
      swift_release();
      objc_msgSend(a1, sel_cancelInstall_reply_, v9, v10);
    }
  }
  else
  {
    v9 = (void *)sub_2360D08F0();
    v15 = a4;
    v16 = a5;
    v11 = MEMORY[0x24BDAC760];
    v12 = 1107296256;
    v13 = sub_23607D2C4;
    v14 = &block_descriptor_16;
    v10 = _Block_copy(&v11);
    swift_retain();
    swift_release();
    objc_msgSend(a1, sel_resumeInstall_reply_, v9, v10);
  }
  _Block_release(v10);

}

uint64_t sub_236083340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[5] = a4;
  v9 = sub_2360D0B3C();
  v8[10] = v9;
  v8[11] = *(_QWORD *)(v9 - 8);
  v8[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2360833A8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v3;
  char *v4;

  if (*(_QWORD *)(v0 + 40))
  {
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v1;
    *v1 = v0;
    v1[1] = sub_2360834C8;
    return sub_2360D0CE0();
  }
  else if ((sub_2360D0CEC() & 1) != 0)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_2563A01E0 != -1)
      swift_once();
    *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 16) = v0 + 24;
    v4 = (char *)&dword_2563A05D0 + dword_2563A05D0;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v3;
    *v3 = v0;
    v3[1] = sub_2360835EC;
    return ((uint64_t (*)(uint64_t, _QWORD, _QWORD))v4)(v0 + 16, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  }
}

uint64_t sub_2360834C8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23608351C()
{
  uint64_t v0;
  _QWORD *v2;
  char *v3;

  if ((sub_2360D0CEC() & 1) != 0)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_2563A01E0 != -1)
      swift_once();
    *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 16) = v0 + 24;
    v3 = (char *)&dword_2563A05D0 + dword_2563A05D0;
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v2;
    *v2 = v0;
    v2[1] = sub_2360835EC;
    return ((uint64_t (*)(uint64_t, _QWORD, _QWORD))v3)(v0 + 16, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  }
}

uint64_t sub_2360835EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_236083650()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC15AppDistribution22InstallationNSProgress_lock);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 32));
  if ((sub_2360D0CEC() & 1) == 0)
  {
    swift_release();
    *(_QWORD *)(v1 + 24) = 0;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 32));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2360836B8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 120);
  sub_2360D0B0C();
  v2 = v1;
  v3 = v1;
  v4 = sub_2360D0B24();
  v5 = sub_2360D0D34();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 120);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138543362;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 32) = v10;
    sub_2360D0D88();
    *v8 = v10;

    _os_log_impl(&dword_236065000, v4, v5, "Error updating progress: %{public}@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0618);
    swift_arrayDestroy();
    MEMORY[0x23B7EBB1C](v8, -1, -1);
    MEMORY[0x23B7EBB1C](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 120);

  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  v12 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC15AppDistribution22InstallationNSProgress_lock);
  os_unfair_lock_lock((os_unfair_lock_t)(v12 + 32));
  if ((sub_2360D0CEC() & 1) == 0)
  {
    swift_release();
    *(_QWORD *)(v12 + 24) = 0;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(v12 + 32));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_2360838C8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s15AppDistribution0A7LibraryC0A0C8MetadataV2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  char v12;

  if (*a1 != *a2)
    return 0;
  v2 = a1[3];
  v4 = a1[4];
  v3 = a1[5];
  v5 = a1[6];
  v6 = a2[3];
  v7 = a2[4];
  v9 = a2[5];
  v8 = a2[6];
  if (a1[1] == a2[1] && a1[2] == a2[2] || (v10 = sub_2360D1028(), result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (v12 = sub_2360D1028(), result = 0, (v12 & 1) != 0))
    {
      if (v5)
      {
        if (v8 && (v3 == v9 && v5 == v8 || (sub_2360D1028() & 1) != 0))
          return 1;
      }
      else if (!v8)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

double sub_236083A0C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;

  AppLibrary.App.installedMetadata.getter((uint64_t *)v5);
  v2 = v7;
  v3 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v3;
  result = *(double *)&v6;
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = v2;
  return result;
}

uint64_t type metadata accessor for AppLibrary.App()
{
  uint64_t result;

  result = qword_2563A0AC0;
  if (!qword_2563A0AC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_236083A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_236083AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  id v9;
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRetain();
    v9 = a8;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_236083B24@<X0>(uint64_t a1@<X8>)
{
  return AppLibrary.App.installationError.getter(a1);
}

uint64_t sub_236083B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_236083B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_236083BD0()
{
  return MEMORY[0x24BEE4578];
}

uint64_t sub_236083BDC()
{
  return sub_236077F30(&qword_2563A0A90, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
}

uint64_t sub_236083C08()
{
  return type metadata accessor for AppLibrary.App();
}

void sub_236083C10()
{
  unint64_t v0;
  unint64_t v1;

  sub_236083CC8();
  if (v0 <= 0x3F)
  {
    sub_2360D095C();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for AppLibrary.App()
{
  return swift_lookUpClassMethod();
}

void sub_236083CC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2563A0AD0)
  {
    type metadata accessor for MarketplaceKitError();
    v0 = sub_2360D0D7C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2563A0AD0);
  }
}

uint64_t _s3AppC8MetadataVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s3AppC8MetadataVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s3AppC8MetadataVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s3AppC8MetadataVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s3AppC8MetadataVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s3AppC8MetadataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppLibrary.App.Metadata()
{
  return &type metadata for AppLibrary.App.Metadata;
}

uint64_t _s3AppC12InstallationVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

void _s3AppC12InstallationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t _s3AppC12InstallationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = v5;
  return a1;
}

_QWORD *_s3AppC12InstallationVwca(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[7];
  v5 = (void *)a1[7];
  a1[7] = v4;
  v6 = v4;

  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s3AppC12InstallationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  return a1;
}

uint64_t _s3AppC12InstallationVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s3AppC12InstallationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppLibrary.App.Installation()
{
  return &type metadata for AppLibrary.App.Installation;
}

uint64_t type metadata accessor for InstallationNSProgress()
{
  return objc_opt_self();
}

uint64_t sub_236084210()
{
  return swift_deallocObject();
}

void sub_236084220(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_2360831A8(a1, a2, a3, a4, a5, *(_BYTE *)(v5 + 16));
}

uint64_t sub_236084228()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_236084264(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_2360842F8;
  return sub_236083340(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_2360842F8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_236084340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_236084388()
{
  uint64_t v0;

  return sub_23607DF24(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2360843A0()
{
  uint64_t v0;

  return sub_23607DB04(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

_QWORD *sub_2360843B8(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  return a1;
}

uint64_t sub_2360843F4()
{
  uint64_t v0;

  swift_release();
  sub_236084424(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_236084424(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_236084434()
{
  sub_23607EAD8();
}

uint64_t sub_236084444()
{
  uint64_t v0;

  return sub_23607D6FC(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

_QWORD *sub_23608445C(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  return a1;
}

uint64_t sub_236084494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MarketplaceKitError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2360844D8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_236077AC4(a1, a2);
  return a1;
}

uint64_t sub_2360844EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v60[2];
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  unsigned int (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[8];
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  _QWORD v77[7];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0A88);
  MEMORY[0x24BDAC7A8](v2);
  v69 = (char *)v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2360D0AA0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v62 = (char *)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v61 = (char *)v60 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v63 = (char *)v60 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0BF8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v66 = (uint64_t)v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v70 = (uint64_t)v60 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v60 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v60 - v19;
  v68 = sub_2360D0A40();
  v71 = a1;
  sub_2360D0A58();
  v64 = v20;
  sub_236078AC4((uint64_t)v20, (uint64_t)v18, &qword_2563A0BF8);
  v67 = v5;
  v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v21 = 0;
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  if (v65(v18, 1, v4) != 1)
  {
    v28 = v67;
    v29 = v63;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v63, v18, v4);
    sub_2360D0C74();
    v60[1] = sub_2360D0C68();
    sub_2360D0C44();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    v30 = v61;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v61, v29, v4);
    v21 = sub_2360D0A7C();
    v22 = sub_2360D0A94();
    v31 = v28;
    v23 = v32;
    v24 = sub_2360D0A70();
    v25 = v33;
    v26 = sub_2360D0A88();
    v27 = v34;
    v35 = *(void (**)(char *, uint64_t))(v31 + 8);
    v35(v30, v4);
    swift_release();
    v35(v63, v4);
  }
  sub_236078B4C((uint64_t)v64, &qword_2563A0BF8);
  v77[0] = v21;
  v77[1] = v22;
  v77[2] = v23;
  v77[3] = v24;
  v77[4] = v25;
  v77[5] = v26;
  v77[6] = v27;
  v36 = v70;
  v37 = v71;
  sub_2360D0A64();
  v38 = v66;
  sub_236078AC4(v36, v66, &qword_2563A0BF8);
  if (v65((char *)v38, 1, v4) == 1)
  {
    v39 = 0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
    v43 = 0;
    v44 = 0;
    v45 = 0;
    v46 = 0;
    v75 = 0u;
    v76 = 0u;
    v73 = 0u;
    v74 = 0u;
  }
  else
  {
    v47 = v67;
    v48 = (uint64_t)v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v62, v38, v4);
    sub_23607E768(v48, v37, (uint64_t *)&v73);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v4);
    v45 = *((_QWORD *)&v73 + 1);
    v46 = v73;
    v43 = *((_QWORD *)&v74 + 1);
    v44 = v74;
    v41 = *((_QWORD *)&v75 + 1);
    v42 = v75;
    v39 = *((_QWORD *)&v76 + 1);
    v40 = v76;
  }
  sub_236078B4C(v70, &qword_2563A0BF8);
  v72[0] = v46;
  v72[1] = v45;
  v72[2] = v44;
  v72[3] = v43;
  v72[4] = v42;
  v72[5] = v41;
  v72[6] = v40;
  v72[7] = v39;
  v49 = v71;
  v50 = sub_2360D0A4C();
  if (v51 >> 60 == 15)
  {
    v52 = type metadata accessor for MarketplaceKitError();
    v53 = (uint64_t)v69;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v69, 1, 1, v52);
  }
  else
  {
    v54 = v50;
    v55 = v51;
    sub_2360D08B4();
    swift_allocObject();
    sub_2360D08A8();
    v56 = type metadata accessor for MarketplaceKitError();
    sub_236077F30(&qword_2563A0278, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v53 = (uint64_t)v69;
    sub_2360D089C();
    sub_2360844D8(v54, v55);
    swift_release();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v53, 0, 1, v56);
  }
  type metadata accessor for AppLibrary.App();
  v57 = swift_allocObject();
  sub_23607E484(v68, (uint64_t)v77, (uint64_t)v72, v53);
  v58 = sub_2360D0AAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v49, v58);
  return v57;
}

uint64_t getEnumTagSinglePayload for InstallationNSProgress.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for InstallationNSProgress.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_236084BA8 + 4 * byte_2360D2815[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_236084BDC + 4 * byte_2360D2810[v4]))();
}

uint64_t sub_236084BDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236084BE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236084BECLL);
  return result;
}

uint64_t sub_236084BF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x236084C00);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_236084C04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236084C0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InstallationNSProgress.State()
{
  return &type metadata for InstallationNSProgress.State;
}

unint64_t sub_236084C2C()
{
  unint64_t result;

  result = qword_2563A0C00;
  if (!qword_2563A0C00)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D2A70, &type metadata for InstallationNSProgress.State);
    atomic_store(result, (unint64_t *)&qword_2563A0C00);
  }
  return result;
}

uint64_t sub_236084C80()
{
  return sub_2360843A0();
}

uint64_t sub_236084C94()
{
  return sub_236084444();
}

uint64_t sub_236084CA8()
{
  return sub_236084388();
}

uint64_t static UpdateService.availableUpdate(for:checkInWithServer:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  *(_BYTE *)(v4 + 33) = a4;
  *(_QWORD *)(v4 + 56) = a2;
  *(_QWORD *)(v4 + 64) = a3;
  *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_236084CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD *v4;
  char *v6;

  v1 = qword_2563A01E0;
  v2 = swift_bridgeObjectRetain();
  if (v1 != -1)
  {
    swift_once();
    v2 = *(_QWORD *)(v0 + 64);
  }
  v3 = *(_BYTE *)(v0 + 33);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 40) = v0 + 16;
  *(_BYTE *)(v0 + 32) = v3;
  v6 = (char *)&dword_2563A0818 + dword_2563A0818;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  *v4 = v0;
  v4[1] = sub_236084DB0;
  return ((uint64_t (*)(_QWORD, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v6)(*(_QWORD *)(v0 + 48), v0 + 40, sub_236084E64, 0);
}

uint64_t sub_236084DB0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_236084E24()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t UpdateMetadataRequest.init(bundleID:shouldCheckInWithServer:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = a3;
  return result;
}

void sub_236084E64(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_236079824(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_7, (SEL *)&selRef_requestUpdateMetadata_reply_);
}

uint64_t static UpdateService.requestUpdate(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)a1;
  *(_QWORD *)(v1 + 96) = v2;
  *(_OWORD *)(v1 + 104) = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(v1 + 120) = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 128) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v1 + 144) = *(_QWORD *)(a1 + 56);
  return swift_task_switch();
}

uint64_t sub_236084EB4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  if (qword_2563A01E0 != -1)
    swift_once();
  v2 = v0[17];
  v1 = v0[18];
  v4 = v0[15];
  v3 = v0[16];
  v6 = v0[13];
  v5 = v0[14];
  v8 = v0[11];
  v7 = v0[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_236078898();
  sub_2360788DC();
  v0[2] = v8;
  v0[3] = v7;
  v0[4] = v6;
  v0[5] = v5;
  v0[6] = v4;
  v0[7] = v3;
  v0[8] = v2;
  v0[10] = v0 + 2;
  v0[9] = v1;
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2563A0800 + dword_2563A0800);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[19] = v9;
  *v9 = v0;
  v9[1] = sub_236084FE8;
  return v11((uint64_t)(v0 + 10), (uint64_t)sub_236085180, 0);
}

uint64_t sub_236084FE8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_236085080()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2360850E0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_236085180(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_236079824(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_3, (SEL *)&selRef_requestUpdate_reply_);
}

uint64_t UpdateMetadataRequest.bundleID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UpdateMetadataRequest.shouldCheckInWithServer.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_2360851C8()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000017;
  else
    return 0x4449656C646E7562;
}

uint64_t sub_236085208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360857EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23608522C()
{
  sub_23608555C();
  return sub_2360D1148();
}

uint64_t sub_236085254()
{
  sub_23608555C();
  return sub_2360D1154();
}

uint64_t UpdateMetadataRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0C18);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23608555C();
  sub_2360D113C();
  v12 = 0;
  sub_2360D0FD4();
  if (!v2)
  {
    v11 = 1;
    sub_2360D0FE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

uint64_t UpdateMetadataRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0C28);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23608555C();
  sub_2360D1124();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = 0;
  v9 = sub_2360D0F44();
  v11 = v10;
  v15 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_2360D0F50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v12 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_236085534@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UpdateMetadataRequest.init(from:)(a1, a2);
}

uint64_t sub_236085548(_QWORD *a1)
{
  return UpdateMetadataRequest.encode(to:)(a1);
}

unint64_t sub_23608555C()
{
  unint64_t result;

  result = qword_2563A0C20;
  if (!qword_2563A0C20)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D2BFC, &type metadata for UpdateMetadataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0C20);
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateService()
{
  return &type metadata for UpdateService;
}

uint64_t getEnumTagSinglePayload for UpdateMetadataRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UpdateMetadataRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateMetadataRequest()
{
  return &type metadata for UpdateMetadataRequest;
}

uint64_t storeEnumTagSinglePayload for UpdateMetadataRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_236085694 + 4 * byte_2360D2AA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2360856C8 + 4 * byte_2360D2AA0[v4]))();
}

uint64_t sub_2360856C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360856D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360856D8);
  return result;
}

uint64_t sub_2360856E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360856ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2360856F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360856F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UpdateMetadataRequest.CodingKeys()
{
  return &type metadata for UpdateMetadataRequest.CodingKeys;
}

unint64_t sub_236085718()
{
  unint64_t result;

  result = qword_2563A0C30;
  if (!qword_2563A0C30)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D2BD4, &type metadata for UpdateMetadataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0C30);
  }
  return result;
}

unint64_t sub_236085760()
{
  unint64_t result;

  result = qword_2563A0C38;
  if (!qword_2563A0C38)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D2B44, &type metadata for UpdateMetadataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0C38);
  }
  return result;
}

unint64_t sub_2360857A8()
{
  unint64_t result;

  result = qword_2563A0C40;
  if (!qword_2563A0C40)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D2B6C, &type metadata for UpdateMetadataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0C40);
  }
  return result;
}

uint64_t sub_2360857EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002360DD3A0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void SecureButtonActionRequest.Action.stringValue.getter()
{
  __asm { BR              X12 }
}

uint64_t sub_236085930()
{
  sub_2360D101C();
  sub_2360D0BE4();
  swift_bridgeObjectRelease();
  return 0x2D206574656C6544;
}

uint64_t sub_2360859B4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2360859E0 + 4 * byte_2360D2C54[*v0]))(0x6574656C6564, 0xE600000000000000);
}

uint64_t sub_2360859E0()
{
  return 0x68636E75616CLL;
}

uint64_t sub_2360859F0()
{
  return 0x6867696C66657270;
}

uint64_t sub_236085A20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23608A16C(a1, a2);
  *a3 = result;
  return result;
}

void sub_236085A44(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_236085A50()
{
  sub_236085FD0();
  return sub_2360D1148();
}

uint64_t sub_236085A78()
{
  sub_236085FD0();
  return sub_2360D1154();
}

uint64_t sub_236085AA4()
{
  sub_236086124();
  return sub_2360D1148();
}

uint64_t sub_236085ACC()
{
  sub_236086124();
  return sub_2360D1154();
}

uint64_t sub_236085AF4()
{
  sub_2360860E0();
  return sub_2360D1148();
}

uint64_t sub_236085B1C()
{
  sub_2360860E0();
  return sub_2360D1154();
}

uint64_t sub_236085B44()
{
  sub_236086014();
  return sub_2360D1148();
}

uint64_t sub_236085B6C()
{
  sub_236086014();
  return sub_2360D1154();
}

uint64_t sub_236085B94()
{
  sub_23608609C();
  return sub_2360D1148();
}

uint64_t sub_236085BBC()
{
  sub_23608609C();
  return sub_2360D1154();
}

void SecureButtonActionRequest.Action.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD v13[14];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0C48);
  v13[7] = *(_QWORD *)(v3 - 8);
  v13[8] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v13[6] = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0C50);
  v13[4] = *(_QWORD *)(v5 - 8);
  v13[5] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v13[3] = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0C58);
  v13[1] = *(_QWORD *)(v7 - 8);
  v13[2] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0C60);
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0C68);
  v13[10] = *(_QWORD *)(v9 - 8);
  v13[11] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v13[9] = *v1;
  v10 = a1[3];
  v11 = a1;
  v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_236085FD0();
  sub_2360D113C();
  __asm { BR              X10 }
}

uint64_t sub_236085DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 96) = 0;
  sub_236086124();
  v5 = *(_QWORD *)(v4 - 104);
  sub_2360D0F98();
  sub_2360D1004();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 112) + 8))(v1, v5);
}

unint64_t sub_236085FD0()
{
  unint64_t result;

  result = qword_2563A0C70;
  if (!qword_2563A0C70)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D39CC, &type metadata for SecureButtonActionRequest.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0C70);
  }
  return result;
}

unint64_t sub_236086014()
{
  unint64_t result;

  result = qword_2563A0C78;
  if (!qword_2563A0C78)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D397C, &type metadata for SecureButtonActionRequest.Action.PreflightBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0C78);
  }
  return result;
}

unint64_t sub_236086058()
{
  unint64_t result;

  result = qword_2563A0C80;
  if (!qword_2563A0C80)
  {
    result = MEMORY[0x23B7EBA68](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2563A0C80);
  }
  return result;
}

unint64_t sub_23608609C()
{
  unint64_t result;

  result = qword_2563A0C88;
  if (!qword_2563A0C88)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D392C, &type metadata for SecureButtonActionRequest.Action.PreflightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0C88);
  }
  return result;
}

unint64_t sub_2360860E0()
{
  unint64_t result;

  result = qword_2563A0C90;
  if (!qword_2563A0C90)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D38DC, &type metadata for SecureButtonActionRequest.Action.LaunchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0C90);
  }
  return result;
}

unint64_t sub_236086124()
{
  unint64_t result;

  result = qword_2563A0C98;
  if (!qword_2563A0C98)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D388C, &type metadata for SecureButtonActionRequest.Action.DeleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0C98);
  }
  return result;
}

uint64_t SecureButtonActionRequest.Action.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD v25[5];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v33 = a2;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0CA0);
  v28 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v32 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0CA8);
  v29 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0CB0);
  v6 = *(_QWORD *)(v5 - 8);
  v25[3] = v5;
  v25[4] = v6;
  MEMORY[0x24BDAC7A8](v5);
  v30 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0CB8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0CC0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_236085FD0();
  v17 = v35;
  sub_2360D1124();
  if (!v17)
  {
    v25[1] = v8;
    v25[2] = v11;
    v25[0] = v9;
    v35 = v13;
    v18 = sub_2360D0F80();
    v19 = v12;
    v20 = v15;
    if (*(_QWORD *)(v18 + 16) == 1)
      __asm { BR              X10 }
    v21 = sub_2360D0E78();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0270);
    *v23 = &type metadata for SecureButtonActionRequest.Action;
    sub_2360D0F08();
    sub_2360D0E6C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v20, v19);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

unint64_t sub_2360867A4()
{
  unint64_t result;

  result = qword_2563A0CC8;
  if (!qword_2563A0CC8)
  {
    result = MEMORY[0x23B7EBA68](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2563A0CC8);
  }
  return result;
}

uint64_t sub_2360867E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SecureButtonActionRequest.Action.init(from:)(a1, a2);
}

void sub_2360867FC(_QWORD *a1)
{
  SecureButtonActionRequest.Action.encode(to:)(a1);
}

uint64_t SecureButtonActionRequest.action.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_23607877C(v2, v3);
}

id SecureButtonActionRequest.authenticationMessage.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

__n128 SecureButtonActionRequest.init(action:authenticationMessage:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>)
{
  __n128 result;

  result = *a1;
  *a3 = *a1;
  a3[1].n128_u64[0] = a2;
  return result;
}

uint64_t SecureButtonActionRequest.run()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)v1;
  *(_QWORD *)(v2 + 72) = *(_QWORD *)(v1 + 16);
  return swift_task_switch();
}

uint64_t sub_23608685C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  char *v7;

  if (qword_2563A01E0 != -1)
    swift_once();
  v1 = v0[8];
  v2 = (void *)v0[9];
  v3 = v0[7];
  v0[2] = v3;
  v0[3] = v1;
  v0[4] = v2;
  v0[5] = v0 + 2;
  sub_23607877C(v3, v1);
  v7 = (char *)&dword_2563A07C8 + dword_2563A07C8;
  v4 = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[10] = v5;
  *v5 = v0;
  v5[1] = sub_236086930;
  return ((uint64_t (*)(_QWORD, _QWORD *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v7)(v0[6], v0 + 5, sub_2360869EC, 0);
}

uint64_t sub_236086930()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = *(void **)(v2 + 32);
  sub_23607878C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));

  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2360869B0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  sub_23607878C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2360869EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  _QWORD v10[6];

  v8 = (void *)sub_2360D08F0();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23607D2C4;
  v10[3] = &block_descriptor_4;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_handleSecureButtonActionRequest_reply_, v8, v9);
  _Block_release(v9);

}

uint64_t sub_236086AAC()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000015;
  else
    return 0x6E6F69746361;
}

uint64_t sub_236086AE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23608A33C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236086B0C()
{
  sub_236088388();
  return sub_2360D1148();
}

uint64_t sub_236086B34()
{
  sub_236088388();
  return sub_2360D1154();
}

uint64_t SecureButtonActionRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  void *v11;
  id v12;
  id v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  _QWORD v18[2];
  char v19;
  id v20;
  unint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0CD8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)v1;
  v7 = *(_QWORD *)(v1 + 8);
  v18[0] = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236088388();
  sub_2360D113C();
  v20 = v8;
  v21 = v7;
  v19 = 0;
  sub_2360883CC();
  v9 = v18[1];
  sub_2360D0FEC();
  if (v9)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v11 = (void *)objc_opt_self();
  v20 = 0;
  v12 = objc_msgSend(v11, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v18[0], 1, &v20);
  v13 = v20;
  if (!v12)
  {
    v17 = v13;
    sub_2360D08C0();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  v14 = (void *)sub_2360D08FC();
  v16 = v15;

  v20 = v14;
  v21 = v16;
  v19 = 1;
  sub_236086058();
  sub_2360D0FEC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_236077AC4((uint64_t)v14, v16);
}

void SecureButtonActionRequest.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0CF0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236088388();
  sub_2360D1124();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v21 = 0;
    sub_236088410();
    sub_2360D0F5C();
    v9 = v19;
    v10 = v20;
    v21 = 1;
    sub_23607877C(v19, v20);
    sub_2360867A4();
    sub_2360D0F5C();
    v11 = v20;
    v18 = v19;
    v17 = sub_236088454(0, &qword_2563A0D00);
    sub_236088454(0, &qword_2563A0D08);
    v16 = v11;
    v12 = sub_2360D0D40();
    v13 = (void *)v12;
    if (v12)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_236077AC4(v18, v16);
      sub_23607877C(v9, v10);
      v14 = v13;
      sub_23607878C(v9, v10);
      *a2 = v9;
      a2[1] = v10;
      a2[2] = (uint64_t)v14;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      sub_23607878C(v9, v10);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_236086FEC(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  SecureButtonActionRequest.init(from:)(a1, a2);
}

uint64_t sub_236087000(_QWORD *a1)
{
  return SecureButtonActionRequest.encode(to:)(a1);
}

uint64_t SecureButtonActionResponse.ResponseType.stringValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int EnumCaseMultiPayload;
  unint64_t v10;
  const char *v11;
  unint64_t v12;
  unint64_t v14;
  unint64_t v15;

  v1 = v0;
  v2 = sub_2360D0914();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2360884A0(v1, (uint64_t)v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
      return 1701736270;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    v14 = 0;
    v15 = 0xE000000000000000;
    sub_2360D0E48();
    swift_bridgeObjectRelease();
    v10 = 0xD000000000000018;
    v11 = "Confirm install batch - ";
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    v14 = 0;
    v15 = 0xE000000000000000;
    sub_2360D0E48();
    swift_bridgeObjectRelease();
    v10 = 0xD000000000000012;
    v11 = "Confirm install - ";
  }
  v14 = v10;
  v15 = (unint64_t)(v11 - 32) | 0x8000000000000000;
  sub_236077F30(&qword_2563A0D10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_2360D101C();
  sub_2360D0BE4();
  swift_bridgeObjectRelease();
  v12 = v14;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v12;
}

uint64_t sub_2360871DC()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x496D7269666E6F63;
  if (*v0 != 1)
    v1 = 0xD000000000000013;
  if (*v0)
    return v1;
  else
    return 1701736302;
}

uint64_t sub_236087240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23608A420(a1, a2);
  *a3 = result;
  return result;
}

void sub_236087264(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_236087270()
{
  sub_2360884E4();
  return sub_2360D1148();
}

uint64_t sub_236087298()
{
  sub_2360884E4();
  return sub_2360D1154();
}

uint64_t sub_2360872C0()
{
  sub_236088528();
  return sub_2360D1148();
}

uint64_t sub_2360872E8()
{
  sub_236088528();
  return sub_2360D1154();
}

uint64_t sub_236087310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2360D1028();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23608738C()
{
  sub_23608856C();
  return sub_2360D1148();
}

uint64_t sub_2360873B4()
{
  sub_23608856C();
  return sub_2360D1154();
}

uint64_t sub_2360873DC()
{
  return 0;
}

uint64_t sub_2360873E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_236087414()
{
  sub_2360885B0();
  return sub_2360D1148();
}

uint64_t sub_23608743C()
{
  sub_2360885B0();
  return sub_2360D1154();
}

uint64_t SecureButtonActionResponse.ResponseType.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0D18);
  v40 = *(_QWORD *)(v2 - 8);
  v41 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v39 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0D20);
  v35 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v37 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2360D0914();
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v36 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v34 - v8;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0D28);
  v10 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0D30);
  v45 = *(_QWORD *)(v16 - 8);
  v46 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360884E4();
  sub_2360D113C();
  sub_2360884A0(v44, (uint64_t)v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      v48 = 0;
      sub_2360885B0();
      v32 = v46;
      sub_2360D0F98();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v34);
      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v18, v32);
    }
    v20 = v42;
    v21 = v36;
    v22 = v15;
    v23 = v43;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v36, v22, v43);
    v50 = 2;
    sub_236088528();
    v24 = v39;
    v25 = v46;
    sub_2360D0F98();
    sub_236077F30(&qword_2563A04C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v26 = v41;
    v27 = v47;
    sub_2360D0FEC();
    if (!v27)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v26);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v23);
      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v18, v25);
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v26);
    v9 = v21;
  }
  else
  {
    v28 = v35;
    v20 = v42;
    v29 = v15;
    v23 = v43;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v9, v29, v43);
    v49 = 1;
    sub_23608856C();
    v30 = v37;
    v25 = v46;
    sub_2360D0F98();
    sub_236077F30(&qword_2563A04C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v31 = v38;
    sub_2360D0FEC();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v31);
  }
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v18, v25);
}

uint64_t SecureButtonActionResponse.ResponseType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  char *v41;
  char *v42;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  _QWORD *v65;
  uint64_t v66;
  char v67;
  char v68;
  char v69;

  v59 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0D58);
  v4 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  v58 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v64 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0D60);
  v55 = *(_QWORD *)(v6 - 8);
  v56 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v60 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0D68);
  v53 = *(_QWORD *)(v8 - 8);
  v54 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v62 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0D70);
  v61 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v49 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v49 - v19;
  v21 = a1[3];
  v65 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_2360884E4();
  v22 = v11;
  v23 = v66;
  sub_2360D1124();
  if (v23)
    goto LABEL_9;
  v25 = v61;
  v24 = v62;
  v50 = v15;
  v51 = v18;
  v52 = v20;
  v66 = v12;
  v27 = v63;
  v26 = v64;
  v28 = v22;
  v29 = sub_2360D0F80();
  if (*(_QWORD *)(v29 + 16) != 1)
  {
    v37 = v27;
    v38 = sub_2360D0E78();
    swift_allocError();
    v40 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0270);
    *v40 = v66;
    sub_2360D0F08();
    sub_2360D0E6C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v40, *MEMORY[0x24BEE26D0], v38);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v37);
LABEL_9:
    v34 = (uint64_t)v65;
    return __swift_destroy_boxed_opaque_existential_1(v34);
  }
  v30 = v22;
  v31 = v25;
  if (*(_BYTE *)(v29 + 32))
  {
    if (*(_BYTE *)(v29 + 32) == 1)
    {
      v68 = 1;
      sub_23608856C();
      v32 = v60;
      sub_2360D0EFC();
      sub_2360D0914();
      sub_236077F30(&qword_2563A04E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
      v33 = v56;
      sub_2360D0F5C();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v32, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v27);
      v34 = (uint64_t)v65;
      v35 = (uint64_t)v51;
      swift_storeEnumTagMultiPayload();
      v36 = v35;
    }
    else
    {
      v69 = 2;
      sub_236088528();
      v41 = v26;
      v42 = v28;
      sub_2360D0EFC();
      sub_2360D0914();
      sub_236077F30(&qword_2563A04E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
      v45 = (uint64_t)v50;
      v46 = v41;
      v47 = v27;
      v48 = v57;
      sub_2360D0F5C();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v46, v48);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v42, v47);
      v34 = (uint64_t)v65;
      swift_storeEnumTagMultiPayload();
      v36 = v45;
    }
    v44 = (uint64_t)v52;
    sub_236078854(v36, (uint64_t)v52, type metadata accessor for SecureButtonActionResponse.ResponseType);
  }
  else
  {
    v67 = 0;
    sub_2360885B0();
    sub_2360D0EFC();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v24, v54);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v27);
    v44 = (uint64_t)v52;
    swift_storeEnumTagMultiPayload();
    v34 = (uint64_t)v65;
  }
  sub_236078854(v44, v59, type metadata accessor for SecureButtonActionResponse.ResponseType);
  return __swift_destroy_boxed_opaque_existential_1(v34);
}

uint64_t sub_236087E50@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SecureButtonActionResponse.ResponseType.init(from:)(a1, a2);
}

uint64_t sub_236087E64(_QWORD *a1)
{
  return SecureButtonActionResponse.ResponseType.encode(to:)(a1);
}

uint64_t SecureButtonActionResponse.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2360884A0(v1, a1);
}

uint64_t SecureButtonActionResponse.init(type:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_236078854(a1, a2, type metadata accessor for SecureButtonActionResponse.ResponseType);
}

uint64_t sub_236087EA4()
{
  return 1701869940;
}

uint64_t sub_236087EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2360D1028();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_236087F38()
{
  sub_2360885F4();
  return sub_2360D1148();
}

uint64_t sub_236087F60()
{
  sub_2360885F4();
  return sub_2360D1154();
}

uint64_t SecureButtonActionResponse.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0D78);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360885F4();
  sub_2360D113C();
  type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  sub_236077F30(&qword_2563A0D88, type metadata accessor for SecureButtonActionResponse.ResponseType, (uint64_t)&protocol conformance descriptor for SecureButtonActionResponse.ResponseType);
  sub_2360D0FEC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t SecureButtonActionResponse.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2;
  v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  MEMORY[0x24BDAC7A8](v4);
  v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0D90);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SecureButtonActionResponse(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360885F4();
  sub_2360D1124();
  if (!v2)
  {
    sub_236077F30(&qword_2563A0D98, type metadata accessor for SecureButtonActionResponse.ResponseType, (uint64_t)&protocol conformance descriptor for SecureButtonActionResponse.ResponseType);
    sub_2360D0F5C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_236078854(v15, (uint64_t)v11, type metadata accessor for SecureButtonActionResponse.ResponseType);
    sub_236078854((uint64_t)v11, v13, type metadata accessor for SecureButtonActionResponse);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_236088264@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SecureButtonActionResponse.init(from:)(a1, a2);
}

uint64_t sub_236088278(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0D78);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360885F4();
  sub_2360D113C();
  type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  sub_236077F30(&qword_2563A0D88, type metadata accessor for SecureButtonActionResponse.ResponseType, (uint64_t)&protocol conformance descriptor for SecureButtonActionResponse.ResponseType);
  sub_2360D0FEC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_236088388()
{
  unint64_t result;

  result = qword_2563A0CE0;
  if (!qword_2563A0CE0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D383C, &type metadata for SecureButtonActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0CE0);
  }
  return result;
}

unint64_t sub_2360883CC()
{
  unint64_t result;

  result = qword_2563A0CE8;
  if (!qword_2563A0CE8)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for SecureButtonActionRequest.Action, &type metadata for SecureButtonActionRequest.Action);
    atomic_store(result, (unint64_t *)&qword_2563A0CE8);
  }
  return result;
}

unint64_t sub_236088410()
{
  unint64_t result;

  result = qword_2563A0CF8;
  if (!qword_2563A0CF8)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for SecureButtonActionRequest.Action, &type metadata for SecureButtonActionRequest.Action);
    atomic_store(result, (unint64_t *)&qword_2563A0CF8);
  }
  return result;
}

uint64_t sub_236088454(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for SecureButtonActionResponse.ResponseType(uint64_t a1)
{
  return sub_23608864C(a1, qword_2563A0EA0);
}

uint64_t sub_2360884A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2360884E4()
{
  unint64_t result;

  result = qword_2563A0D38;
  if (!qword_2563A0D38)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D37EC, &type metadata for SecureButtonActionResponse.ResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0D38);
  }
  return result;
}

unint64_t sub_236088528()
{
  unint64_t result;

  result = qword_2563A0D40;
  if (!qword_2563A0D40)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D379C, &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0D40);
  }
  return result;
}

unint64_t sub_23608856C()
{
  unint64_t result;

  result = qword_2563A0D48;
  if (!qword_2563A0D48)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D374C, &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0D48);
  }
  return result;
}

unint64_t sub_2360885B0()
{
  unint64_t result;

  result = qword_2563A0D50;
  if (!qword_2563A0D50)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D36FC, &type metadata for SecureButtonActionResponse.ResponseType.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0D50);
  }
  return result;
}

unint64_t sub_2360885F4()
{
  unint64_t result;

  result = qword_2563A0D80;
  if (!qword_2563A0D80)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D36AC, &type metadata for SecureButtonActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0D80);
  }
  return result;
}

uint64_t type metadata accessor for SecureButtonActionResponse(uint64_t a1)
{
  return sub_23608864C(a1, qword_2563A0DF8);
}

uint64_t sub_23608864C(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void destroy for SecureButtonActionRequest(uint64_t a1)
{
  sub_23607878C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));

}

uint64_t *_s15AppDistribution25SecureButtonActionRequestVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v4 = *a2;
  v5 = a2[1];
  sub_23607877C(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v6 = (void *)a2[2];
  a1[2] = (uint64_t)v6;
  v7 = v6;
  return a1;
}

uint64_t *assignWithCopy for SecureButtonActionRequest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v4 = *a2;
  v5 = a2[1];
  sub_23607877C(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_23607878C(v6, v7);
  v8 = (void *)a2[2];
  v9 = (void *)a1[2];
  a1[2] = (uint64_t)v8;
  v10 = v8;

  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t *assignWithTake for SecureButtonActionRequest(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_23607878C(v4, v5);
  v6 = (void *)a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for SecureButtonActionRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureButtonActionRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest()
{
  return &type metadata for SecureButtonActionRequest;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureButtonActionRequest.Action(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_23607877C(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for SecureButtonActionRequest.Action(uint64_t *a1)
{
  return sub_23607878C(*a1, a1[1]);
}

uint64_t *assignWithCopy for SecureButtonActionRequest.Action(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_23607877C(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_23607878C(v5, v6);
  return a1;
}

uint64_t *assignWithTake for SecureButtonActionRequest.Action(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_23607878C(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureButtonActionRequest.Action(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SecureButtonActionRequest.Action(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

uint64_t sub_236088958(uint64_t a1)
{
  return (*(_QWORD *)(a1 + 8) >> 60) & 3;
}

uint64_t sub_236088964(uint64_t result)
{
  *(_QWORD *)(result + 8) &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_236088974(uint64_t result, char a2)
{
  *(_QWORD *)(result + 8) = *(_QWORD *)(result + 8) & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 3) << 60);
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.Action()
{
  return &type metadata for SecureButtonActionRequest.Action;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureButtonActionResponse(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(type metadata accessor for SecureButtonActionResponse.ResponseType(0) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(v4 + 64));
  }
  else
  {
    v6 = sub_2360D0914();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SecureButtonActionResponse(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    v3 = sub_2360D0914();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for SecureButtonActionResponse(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  else
  {
    v5 = sub_2360D0914();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for SecureButtonActionResponse(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_236088C90((uint64_t)a1);
    v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
    else
    {
      v5 = sub_2360D0914();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_236088C90(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for SecureButtonActionResponse(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  else
  {
    v5 = sub_2360D0914();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for SecureButtonActionResponse(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_236088C90((uint64_t)a1);
    v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
    else
    {
      v5 = sub_2360D0914();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureButtonActionResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_236088E80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SecureButtonActionResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_236088EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_236088F08()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SecureButtonActionResponse.ResponseType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureButtonActionResponse.ResponseType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v7 = sub_2360D0914();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SecureButtonActionResponse.ResponseType(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    v3 = sub_2360D0914();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for SecureButtonActionResponse.ResponseType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_2360D0914();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for SecureButtonActionResponse.ResponseType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_236088C90((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_2360D0914();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for SecureButtonActionResponse.ResponseType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_2360D0914();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for SecureButtonActionResponse.ResponseType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_236088C90((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_2360D0914();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureButtonActionResponse.ResponseType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for SecureButtonActionResponse.ResponseType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_2360893F4()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_236089404()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2360D0914();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionResponse.CodingKeys()
{
  return &type metadata for SecureButtonActionResponse.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SecureButtonActionResponse.ResponseType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2360894C8 + 4 * byte_2360D2C65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2360894FC + 4 * byte_2360D2C60[v4]))();
}

uint64_t sub_2360894FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236089504(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23608950CLL);
  return result;
}

uint64_t sub_236089518(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x236089520);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_236089524(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23608952C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionResponse.ResponseType.CodingKeys()
{
  return &type metadata for SecureButtonActionResponse.ResponseType.CodingKeys;
}

ValueMetadata *type metadata accessor for SecureButtonActionResponse.ResponseType.NoneCodingKeys()
{
  return &type metadata for SecureButtonActionResponse.ResponseType.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for SecureButtonActionResponse.ResponseType.ConfirmInstallCodingKeys()
{
  return &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallCodingKeys;
}

ValueMetadata *type metadata accessor for SecureButtonActionResponse.ResponseType.ConfirmInstallBatchCodingKeys()
{
  return &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallBatchCodingKeys;
}

uint64_t storeEnumTagSinglePayload for SecureButtonActionRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2360895C4 + 4 * byte_2360D2C6F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2360895F8 + 4 * byte_2360D2C6A[v4]))();
}

uint64_t sub_2360895F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236089600(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236089608);
  return result;
}

uint64_t sub_236089614(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23608961CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_236089620(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236089628(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.CodingKeys()
{
  return &type metadata for SecureButtonActionRequest.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SecureButtonActionRequest.Action.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureButtonActionRequest.Action.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_236089720 + 4 * byte_2360D2C79[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_236089754 + 4 * byte_2360D2C74[v4]))();
}

uint64_t sub_236089754(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23608975C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236089764);
  return result;
}

uint64_t sub_236089770(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x236089778);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23608977C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236089784(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.Action.CodingKeys()
{
  return &type metadata for SecureButtonActionRequest.Action.CodingKeys;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.Action.DeleteCodingKeys()
{
  return &type metadata for SecureButtonActionRequest.Action.DeleteCodingKeys;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.Action.LaunchCodingKeys()
{
  return &type metadata for SecureButtonActionRequest.Action.LaunchCodingKeys;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.Action.PreflightCodingKeys()
{
  return &type metadata for SecureButtonActionRequest.Action.PreflightCodingKeys;
}

uint64_t _s15AppDistribution26SecureButtonActionResponseV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_236089810 + 4 * byte_2360D2C7E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_236089830 + 4 * byte_2360D2C83[v4]))();
}

_BYTE *sub_236089810(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_236089830(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_236089838(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_236089840(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_236089848(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_236089850(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.Action.PreflightBatchCodingKeys()
{
  return &type metadata for SecureButtonActionRequest.Action.PreflightBatchCodingKeys;
}

unint64_t sub_236089870()
{
  unint64_t result;

  result = qword_2563A0ED8;
  if (!qword_2563A0ED8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D2FBC, &type metadata for SecureButtonActionRequest.Action.PreflightBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0ED8);
  }
  return result;
}

unint64_t sub_2360898B8()
{
  unint64_t result;

  result = qword_2563A0EE0;
  if (!qword_2563A0EE0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D3074, &type metadata for SecureButtonActionRequest.Action.PreflightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0EE0);
  }
  return result;
}

unint64_t sub_236089900()
{
  unint64_t result;

  result = qword_2563A0EE8;
  if (!qword_2563A0EE8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D312C, &type metadata for SecureButtonActionRequest.Action.LaunchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0EE8);
  }
  return result;
}

unint64_t sub_236089948()
{
  unint64_t result;

  result = qword_2563A0EF0;
  if (!qword_2563A0EF0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D31E4, &type metadata for SecureButtonActionRequest.Action.DeleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0EF0);
  }
  return result;
}

unint64_t sub_236089990()
{
  unint64_t result;

  result = qword_2563A0EF8;
  if (!qword_2563A0EF8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D329C, &type metadata for SecureButtonActionRequest.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0EF8);
  }
  return result;
}

unint64_t sub_2360899D8()
{
  unint64_t result;

  result = qword_2563A0F00;
  if (!qword_2563A0F00)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D3354, &type metadata for SecureButtonActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0F00);
  }
  return result;
}

unint64_t sub_236089A20()
{
  unint64_t result;

  result = qword_2563A0F08;
  if (!qword_2563A0F08)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D340C, &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0F08);
  }
  return result;
}

unint64_t sub_236089A68()
{
  unint64_t result;

  result = qword_2563A0F10;
  if (!qword_2563A0F10)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D34C4, &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0F10);
  }
  return result;
}

unint64_t sub_236089AB0()
{
  unint64_t result;

  result = qword_2563A0F18;
  if (!qword_2563A0F18)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D35CC, &type metadata for SecureButtonActionResponse.ResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0F18);
  }
  return result;
}

unint64_t sub_236089AF8()
{
  unint64_t result;

  result = qword_2563A0F20;
  if (!qword_2563A0F20)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D3684, &type metadata for SecureButtonActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0F20);
  }
  return result;
}

unint64_t sub_236089B40()
{
  unint64_t result;

  result = qword_2563A0F28;
  if (!qword_2563A0F28)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D35F4, &type metadata for SecureButtonActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0F28);
  }
  return result;
}

unint64_t sub_236089B88()
{
  unint64_t result;

  result = qword_2563A0F30;
  if (!qword_2563A0F30)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D361C, &type metadata for SecureButtonActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0F30);
  }
  return result;
}

unint64_t sub_236089BD0()
{
  unint64_t result;

  result = qword_2563A0F38;
  if (!qword_2563A0F38)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D34EC, &type metadata for SecureButtonActionResponse.ResponseType.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0F38);
  }
  return result;
}

unint64_t sub_236089C18()
{
  unint64_t result;

  result = qword_2563A0F40;
  if (!qword_2563A0F40)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D3514, &type metadata for SecureButtonActionResponse.ResponseType.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0F40);
  }
  return result;
}

unint64_t sub_236089C60()
{
  unint64_t result;

  result = qword_2563A0F48;
  if (!qword_2563A0F48)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D3434, &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0F48);
  }
  return result;
}

unint64_t sub_236089CA8()
{
  unint64_t result;

  result = qword_2563A0F50;
  if (!qword_2563A0F50)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D345C, &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0F50);
  }
  return result;
}

unint64_t sub_236089CF0()
{
  unint64_t result;

  result = qword_2563A0F58;
  if (!qword_2563A0F58)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D337C, &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0F58);
  }
  return result;
}

unint64_t sub_236089D38()
{
  unint64_t result;

  result = qword_2563A0F60;
  if (!qword_2563A0F60)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D33A4, &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0F60);
  }
  return result;
}

unint64_t sub_236089D80()
{
  unint64_t result;

  result = qword_2563A0F68;
  if (!qword_2563A0F68)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D353C, &type metadata for SecureButtonActionResponse.ResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0F68);
  }
  return result;
}

unint64_t sub_236089DC8()
{
  unint64_t result;

  result = qword_2563A0F70;
  if (!qword_2563A0F70)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D3564, &type metadata for SecureButtonActionResponse.ResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0F70);
  }
  return result;
}

unint64_t sub_236089E10()
{
  unint64_t result;

  result = qword_2563A0F78;
  if (!qword_2563A0F78)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D32C4, &type metadata for SecureButtonActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0F78);
  }
  return result;
}

unint64_t sub_236089E58()
{
  unint64_t result;

  result = qword_2563A0F80;
  if (!qword_2563A0F80)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D32EC, &type metadata for SecureButtonActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0F80);
  }
  return result;
}

unint64_t sub_236089EA0()
{
  unint64_t result;

  result = qword_2563A0F88;
  if (!qword_2563A0F88)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D3154, &type metadata for SecureButtonActionRequest.Action.DeleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0F88);
  }
  return result;
}

unint64_t sub_236089EE8()
{
  unint64_t result;

  result = qword_2563A0F90;
  if (!qword_2563A0F90)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D317C, &type metadata for SecureButtonActionRequest.Action.DeleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0F90);
  }
  return result;
}

unint64_t sub_236089F30()
{
  unint64_t result;

  result = qword_2563A0F98;
  if (!qword_2563A0F98)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D309C, &type metadata for SecureButtonActionRequest.Action.LaunchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0F98);
  }
  return result;
}

unint64_t sub_236089F78()
{
  unint64_t result;

  result = qword_2563A0FA0;
  if (!qword_2563A0FA0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D30C4, &type metadata for SecureButtonActionRequest.Action.LaunchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0FA0);
  }
  return result;
}

unint64_t sub_236089FC0()
{
  unint64_t result;

  result = qword_2563A0FA8;
  if (!qword_2563A0FA8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D2FE4, &type metadata for SecureButtonActionRequest.Action.PreflightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0FA8);
  }
  return result;
}

unint64_t sub_23608A008()
{
  unint64_t result;

  result = qword_2563A0FB0;
  if (!qword_2563A0FB0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D300C, &type metadata for SecureButtonActionRequest.Action.PreflightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0FB0);
  }
  return result;
}

unint64_t sub_23608A050()
{
  unint64_t result;

  result = qword_2563A0FB8;
  if (!qword_2563A0FB8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D2F2C, &type metadata for SecureButtonActionRequest.Action.PreflightBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0FB8);
  }
  return result;
}

unint64_t sub_23608A098()
{
  unint64_t result;

  result = qword_2563A0FC0;
  if (!qword_2563A0FC0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D2F54, &type metadata for SecureButtonActionRequest.Action.PreflightBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0FC0);
  }
  return result;
}

unint64_t sub_23608A0E0()
{
  unint64_t result;

  result = qword_2563A0FC8;
  if (!qword_2563A0FC8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D320C, &type metadata for SecureButtonActionRequest.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0FC8);
  }
  return result;
}

unint64_t sub_23608A128()
{
  unint64_t result;

  result = qword_2563A0FD0;
  if (!qword_2563A0FD0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D3234, &type metadata for SecureButtonActionRequest.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A0FD0);
  }
  return result;
}

uint64_t sub_23608A16C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6574656C6564 && a2 == 0xE600000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x68636E75616CLL && a2 == 0xE600000000000000 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6867696C66657270 && a2 == 0xE900000000000074 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6867696C66657270 && a2 == 0xEE00686374614274)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23608A33C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F69746361 && a2 == 0xE600000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002360DD400)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23608A420(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496D7269666E6F63 && a2 == 0xEE006C6C6174736ELL || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002360DD420)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t static PrivateNotifications.priorityOrAllowedDevelopersChangedNotificationName.getter()
{
  return 0xD000000000000044;
}

void *sub_23608A5B4()
{
  void *result;

  result = (void *)sub_23608DCA8();
  off_2563A0FD8 = result;
  return result;
}

void sub_23608A5D0(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v3;
  id v4;
  id v5;

  v3 = (os_unfair_lock_s *)(a2 + 32);
  os_unfair_lock_lock((os_unfair_lock_t)(a2 + 32));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = 0;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 24) = 0;
  os_unfair_lock_unlock(v3);
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v5 = (id)sub_2360D0BA8();
  objc_msgSend(v4, sel_postNotificationName_object_, v5, 0);

}

uint64_t sub_23608A684(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t static AppDistributor.distributorPriorityList.getter()
{
  return swift_task_switch();
}

uint64_t sub_23608A6D4()
{
  uint64_t v0;
  _QWORD *v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);

  if (qword_2563A01D0 != -1)
    swift_once();
  v1 = off_2563A0FD8;
  v2 = (os_unfair_lock_s *)((char *)off_2563A0FD8 + 32);
  os_unfair_lock_lock((os_unfair_lock_t)off_2563A0FD8 + 8);
  v3 = v1[2];
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v2);
  if (v3)
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  if (qword_2563A01E0 != -1)
    swift_once();
  *(_QWORD *)(v0 + 16) = 1;
  *(_QWORD *)(v0 + 56) = 0x2000000000000000;
  *(_BYTE *)(v0 + 64) = 1;
  *(_QWORD *)(v0 + 96) = v0 + 16;
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2563A07C0 + dword_2563A07C0);
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v5;
  *v5 = v0;
  v5[1] = sub_23608A81C;
  return v6(v0 + 72, v0 + 96, (uint64_t)sub_2360BFEF0, 0);
}

uint64_t sub_23608A81C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_23607867C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_23608A894()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  int v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = *(void **)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(unsigned __int8 *)(v0 + 88);
  if (v3 == 3)
  {
    v4 = (os_unfair_lock_s *)off_2563A0FD8;
    v5 = swift_task_alloc();
    *(_QWORD *)(v5 + 16) = v2;
    sub_23608DBC8((uint64_t)v2, v1, 3);
    sub_23608DBC8((uint64_t)v2, v1, 3);
    sub_23608DBC8((uint64_t)v2, v1, 3);
    os_unfair_lock_lock(v4 + 8);
    v6 = *(_QWORD *)(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v4[4]._os_unfair_lock_opaque = v6;
    os_unfair_lock_unlock(v4 + 8);
    sub_23608DB8C((uint64_t)v2, v1, 3);
    sub_23608DB8C((uint64_t)v2, v1, 3);
    sub_23608DB8C((uint64_t)v2, v1, 3);
    swift_task_dealloc();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v7 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_23608DB8C((uint64_t)v2, v1, v3);

    v2 = &unk_25077AB10;
  }
  return (*(uint64_t (**)(void *))(v0 + 8))(v2);
}

uint64_t sub_23608AA18()
{
  uint64_t v0;

  sub_23607867C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));

  return (*(uint64_t (**)(void *))(v0 + 8))(&unk_25077AB10);
}

uint64_t static AppDistributor.setDistributorPriorityList(_:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_23608AA7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 80);
  v2 = qword_2563A01E0;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  sub_236078410();
  sub_236078454();
  *(_QWORD *)(v0 + 16) = v1;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_QWORD *)(v0 + 56) = 0;
  *(_BYTE *)(v0 + 64) = 1;
  *(_QWORD *)(v0 + 72) = v0 + 16;
  sub_236078498(v1, 0, 0, 0, 0, 0, 1);
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2563A07A8 + dword_2563A07A8);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v3;
  *v3 = v0;
  v3[1] = sub_23608AB78;
  return v5(v0 + 72, (uint64_t)sub_23608ACA0, 0);
}

uint64_t sub_23608AB78()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_236078500(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_23608ABF0()
{
  uint64_t v0;

  sub_236078500(*(_QWORD *)(v0 + 80), 0, 0, 0, 0, 0, 1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23608AC3C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  sub_236078500(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  sub_236078500(v1, 0, 0, 0, 0, 0, 1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23608ACA0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_236079824(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_40_0, (SEL *)&selRef_setPrivateDataRequest_reply_);
}

void *static AppDistributor.synchronousDistributorPriorityList.getter()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  os_unfair_lock_s *v5;
  void *v6;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  unint64_t v11;
  char v12;
  uint64_t *v13;
  __int128 v14;
  char v15;

  if (qword_2563A01D0 != -1)
    swift_once();
  v0 = off_2563A0FD8;
  v1 = (os_unfair_lock_s *)((char *)off_2563A0FD8 + 32);
  os_unfair_lock_lock((os_unfair_lock_t)off_2563A0FD8 + 8);
  v2 = v0[2];
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v1);
  if (!v2)
  {
    if (qword_2563A01E0 != -1)
      swift_once();
    v8 = 1;
    v9 = 0u;
    v10 = 0u;
    v11 = 0x2000000000000000;
    v12 = 1;
    v13 = &v8;
    sub_23608C860(&v13, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_2360BFF04, 0, &v14);
    sub_23607867C(v8, v9, *((uint64_t *)&v9 + 1), v10, *((uint64_t *)&v10 + 1), v11, v12);
    v3 = *((_QWORD *)&v14 + 1);
    v2 = v14;
    v4 = v15;
    if (v15 == 3)
    {
      v5 = (os_unfair_lock_s *)off_2563A0FD8;
      sub_23608DBC8(v14, *((unint64_t *)&v14 + 1), 3);
      sub_23608DBC8(v2, v3, 3);
      sub_23608DBC8(v2, v3, 3);
      os_unfair_lock_lock(v5 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v5[4]._os_unfair_lock_opaque = v2;
      os_unfair_lock_unlock(v5 + 8);
      sub_23608DB8C(v2, v3, 3);
      sub_23608DB8C(v2, v3, 3);
      sub_23608DB8C(v2, v3, 3);
    }
    else
    {
      type metadata accessor for MarketplaceKitError();
      sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
      v6 = (void *)swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_23608DB8C(v2, v3, v4);

      return &unk_25077AB40;
    }
  }
  return (void *)v2;
}

uint64_t static AppDistributor.synchronousAllApprovedDevelopers.getter()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  void *v5;
  os_unfair_lock_s *v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  __int128 *v13;
  __int128 v14;
  char v15;

  if (qword_2563A01D0 != -1)
    swift_once();
  v0 = off_2563A0FD8;
  v1 = (os_unfair_lock_s *)((char *)off_2563A0FD8 + 32);
  os_unfair_lock_lock((os_unfair_lock_t)off_2563A0FD8 + 8);
  v2 = v0[3];
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v1);
  if (!v2)
  {
    if (qword_2563A01E0 != -1)
      swift_once();
    v8 = 0u;
    v9 = 0u;
    v10 = 0;
    v11 = 0x2000000000000000;
    v12 = 1;
    v13 = &v8;
    sub_23608C860((uint64_t **)&v13, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_2360BFF04, 0, &v14);
    sub_23607867C(v8, *((uint64_t *)&v8 + 1), v9, *((uint64_t *)&v9 + 1), v10, v11, v12);
    v3 = *((_QWORD *)&v14 + 1);
    v2 = v14;
    v4 = v15;
    if (v15)
    {
      type metadata accessor for MarketplaceKitError();
      sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
      v5 = (void *)swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_23608DB8C(v2, v3, v4);

      return MEMORY[0x24BEE4AF8];
    }
    else
    {
      v7 = (os_unfair_lock_s *)off_2563A0FD8;
      sub_23608DBC8(v14, *((unint64_t *)&v14 + 1), 0);
      sub_23608DBC8(v2, v3, 0);
      sub_23608DBC8(v2, v3, 0);
      os_unfair_lock_lock(v7 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v7[6]._os_unfair_lock_opaque = v2;
      os_unfair_lock_unlock(v7 + 8);
      sub_23608DB8C(v2, v3, 0);
      sub_23608DB8C(v2, v3, 0);
      sub_23608DB8C(v2, v3, 0);
    }
  }
  return v2;
}

uint64_t static AppDistributor.setShouldShowInstallConfirmations(for:shouldShow:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 65) = a3;
  *(_QWORD *)(v3 + 72) = a1;
  *(_QWORD *)(v3 + 80) = a2;
  return swift_task_switch();
}

uint64_t sub_23608B16C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(unsigned __int8 *)(v0 + 65);
  v2 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_BYTE *)(v0 + 64) = 3;
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v3;
  *v3 = v0;
  v3[1] = sub_23608B1E0;
  return SetPrivateDataRequest.run()();
}

uint64_t sub_23608B1E0()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {

    return swift_task_switch();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
}

uint64_t sub_23608B258()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static AppDistributor.synchronousSetShouldShowInstallConfirmations(for:shouldShow:)()
{
  void *v0;

  swift_bridgeObjectRetain();
  SetPrivateDataRequest.runSynchronously()();
  if (v0)

  return swift_bridgeObjectRelease();
}

uint64_t static AppDistributor.synchronousShouldShowInstallConfirmations(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  char v6;
  uint64_t v7;
  void *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  __int128 v18;
  char v19;

  v4 = qword_2563A01E0;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v10 = a1;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v15 = 0x3000000000000000;
  v16 = 0;
  v17 = &v10;
  sub_236078628(a1, a2, 0, 0, 0, 0x3000000000000000uLL, 0);
  sub_23608C860(&v17, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_2360BFF04, 0, &v18);
  sub_23607867C(v10, v11, v12, v13, v14, v15, v16);
  v5 = v18;
  v6 = v19;
  if (v19 == 5)
  {
    v7 = v18 & 1;
    sub_23608DB8C(v18, *((unint64_t *)&v18 + 1), 5);
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v8 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_23608DB8C(v5, *((unint64_t *)&v5 + 1), v6);
    swift_bridgeObjectRelease();

    return 1;
  }
  return v7;
}

uint64_t static AppDistributor.shouldShowInstallConfirmations(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return swift_task_switch();
}

uint64_t sub_23608B4A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v6;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = qword_2563A01E0;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0x3000000000000000;
  *(_BYTE *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 96) = v0 + 16;
  sub_236078628(v3, v1, 0, 0, 0, 0x3000000000000000uLL, 0);
  v6 = (char *)&dword_2563A07C0 + dword_2563A07C0;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v4;
  *v4 = v0;
  v4[1] = sub_23608B5A8;
  return ((uint64_t (*)(uint64_t, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v6)(v0 + 72, v0 + 96, sub_2360BFEF0, 0);
}

uint64_t sub_23608B5A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_23607867C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_23608B620()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  int v3;
  uint64_t v4;
  void *v5;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(unsigned __int8 *)(v0 + 88);
  if (v3 == 5)
  {
    v4 = *(_QWORD *)(v0 + 72) & 1;
    sub_23608DB8C(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), 5);
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v5 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_23608DB8C(v1, v2, v3);
    swift_bridgeObjectRelease();

    v4 = 1;
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_23608B718()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);
  sub_23607867C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t static AppDistributor.shouldShowAppInstallationSettings()()
{
  return swift_task_switch();
}

uint64_t sub_23608B784()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);

  if (qword_2563A01D0 != -1)
    swift_once();
  if (qword_2563A01E0 != -1)
    swift_once();
  *(_QWORD *)(v0 + 16) = 2;
  *(_QWORD *)(v0 + 56) = 0x2000000000000000;
  *(_BYTE *)(v0 + 64) = 1;
  *(_QWORD *)(v0 + 96) = v0 + 16;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2563A07C0 + dword_2563A07C0);
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  *v1 = v0;
  v1[1] = sub_23608B888;
  return v3(v0 + 72, v0 + 96, (uint64_t)sub_2360BFEF0, 0);
}

uint64_t sub_23608B888()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_23607867C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_23608B900()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  void *v5;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(unsigned __int8 *)(v0 + 88);
  if (v3 == 6)
  {
    v4 = *(_QWORD *)(v0 + 72) & 1;
    sub_23608DB8C(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), 6);
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v5 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_23608DB8C(v2, v1, v3);

    v4 = 0;
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_23608B9DC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 112);
  sub_23607867C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t AvailableAppMetadataRequest.distributorID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AvailableAppMetadataRequest.ids.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AvailableAppMetadataRequest.init(distributorID:ids:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_23608BA68()
{
  _BYTE *v0;

  if (*v0)
    return 7562345;
  else
    return 0x7562697274736964;
}

uint64_t sub_23608BAA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23608DE28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23608BACC()
{
  sub_23608DC04();
  return sub_2360D1148();
}

uint64_t sub_23608BAF4()
{
  sub_23608DC04();
  return sub_2360D1154();
}

uint64_t AvailableAppMetadataRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1008);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23608DC04();
  sub_2360D113C();
  v13 = 0;
  sub_2360D0FD4();
  if (!v2)
  {
    v11 = v9;
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1018);
    sub_23608DC48(&qword_2563A1020, MEMORY[0x24BEE4570], MEMORY[0x24BEE12A0]);
    sub_2360D0FEC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t AvailableAppMetadataRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1028);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23608DC04();
  sub_2360D1124();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = 0;
  v9 = sub_2360D0F44();
  v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1018);
  v15 = 1;
  sub_23608DC48(&qword_2563A1030, MEMORY[0x24BEE4598], MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_2360D0F5C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v14[1];
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23608BE68@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AvailableAppMetadataRequest.init(from:)(a1, a2);
}

uint64_t sub_23608BE7C(_QWORD *a1)
{
  return AvailableAppMetadataRequest.encode(to:)(a1);
}

uint64_t static AppDistributor.availableApp(for:distributor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_23608BEAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  v1 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1040);
  v2 = swift_allocObject();
  v0[6] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_2360D3A20;
  *(_QWORD *)(v2 + 32) = v1;
  v5 = (char *)&dword_2563A1048 + dword_2563A1048;
  v3 = (_QWORD *)swift_task_alloc();
  v0[7] = v3;
  *v3 = v0;
  v3[1] = sub_23608BF44;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD))v5)(v2, v0[4], v0[5]);
}

uint64_t sub_23608BF44(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23608BFA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 64);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 16);
    if (*(_QWORD *)(v1 + 16))
    {
      *(_OWORD *)v2 = *(_OWORD *)(v1 + 32);
      *(_BYTE *)(v2 + 16) = 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)v2 = 0;
      *(_QWORD *)(v2 + 8) = 0;
      *(_BYTE *)(v2 + 16) = 1;
    }
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)v3 = 0;
    *(_QWORD *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 16) = 1;
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static AppDistributor.availableApps(for:distributor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2563A1048 + dword_2563A1048);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23608C094;
  return v9(a1, a2, a3);
}

uint64_t sub_23608C094(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

void sub_23608C0E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_236079824(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_27, (SEL *)&selRef_fetchAvailableAppMetadata_reply_);
}

uint64_t static AppDistributor.requestProductPage(_:itemID:versionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 25) = a5;
  *(_QWORD *)(v5 + 48) = a3;
  *(_QWORD *)(v5 + 56) = a4;
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a2;
  type metadata accessor for LaunchAngelXPCRequest(0);
  *(_QWORD *)(v5 + 64) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23608C158()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_BYTE *)(v0 + 25);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  *(_OWORD *)v1 = *(_OWORD *)(v0 + 48);
  *(_BYTE *)(v1 + 16) = v2 & 1;
  *(_QWORD *)(v1 + 24) = v3;
  *(_QWORD *)(v1 + 32) = v4;
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v5;
  *v5 = v0;
  v5[1] = sub_23608C1FC;
  return static LaunchAngelConnectionUtilities.handleLaunchAngelRequest(_:)(v0 + 16, *(_QWORD *)(v0 + 64));
}

uint64_t sub_23608C1FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_23608E130(*(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
  return swift_task_switch();
}

uint64_t static AppDistributor.requestSearchPage(_:searchString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  type metadata accessor for LaunchAngelXPCRequest(0);
  v4[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23608C2C8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[7];
  v1 = (_QWORD *)v0[8];
  v3 = v0[5];
  v4 = v0[4];
  *v1 = v0[6];
  v1[1] = v2;
  v1[2] = v4;
  v1[3] = v3;
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  v0[9] = v5;
  *v5 = v0;
  v5[1] = sub_23608C368;
  return static LaunchAngelConnectionUtilities.handleLaunchAngelRequest(_:)((uint64_t)(v0 + 2), v0[8]);
}

uint64_t sub_23608C368()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_23608E130(*(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
  return swift_task_switch();
}

uint64_t sub_23608C3D8()
{
  uint64_t v0;

  sub_23608E0F4(*(_QWORD *)(v0 + 64));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23608C418()
{
  uint64_t v0;

  sub_23608E0F4(*(_QWORD *)(v0 + 64));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static AppDistributor.requestAuthorization(_:account:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  type metadata accessor for LaunchAngelXPCRequest(0);
  v4[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23608C4B4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[7];
  v1 = (_QWORD *)v0[8];
  v3 = v0[5];
  v4 = v0[4];
  *v1 = v0[6];
  v1[1] = v2;
  v1[2] = v4;
  v1[3] = v3;
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  v0[9] = v5;
  *v5 = v0;
  v5[1] = sub_23608C1FC;
  return static LaunchAngelConnectionUtilities.handleLaunchAngelRequest(_:)((uint64_t)(v0 + 2), v0[8]);
}

uint64_t static AppDistributor.handleEmergencyReset()()
{
  return swift_task_switch();
}

uint64_t sub_23608C568()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  if (qword_2563A01E0 != -1)
    swift_once();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2563A0760 + dword_2563A0760);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23608C604;
  return v3(v0 + 16, (uint64_t)sub_23608C680, 0);
}

uint64_t sub_23608C604()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 24) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23608C668()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23608C674()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23608C680(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  _QWORD v7[6];

  v7[4] = a4;
  v7[5] = a5;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_23607D2C4;
  v7[3] = &block_descriptor_23;
  v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_handleEmergencyResetRequestWithReply_, v6);
  _Block_release(v6);
}

uint64_t static AppDistributor.addAllowedDeveloper(_:name:supportURL:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t *v21;

  v12 = qword_2563A01E0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 != -1)
    swift_once();
  sub_236078410();
  sub_236078454();
  v14 = a1;
  v15 = a2;
  v16 = a3;
  v17 = a4;
  v18 = a5;
  v19 = a6;
  v20 = 0;
  v21 = &v14;
  sub_236078498(a1, a2, a3, a4, a5, a6, 0);
  sub_23608CCF4(&v21, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_23608C84C, 0);
  sub_236078500(v14, v15, v16, v17, v18, v19, v20);
  return sub_236078500(a1, a2, a3, a4, a5, a6, 0);
}

void sub_23608C84C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_236079824(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_20, (SEL *)&selRef_setPrivateDataRequest_reply_);
}

uint64_t sub_23608C860@<X0>(uint64_t **a1@<X0>, void (*a2)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t)@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, void *);
  void *v23;
  uint64_t (*v24)(void *);
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  _OWORD *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _OWORD *v46;
  void (*v47)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t **v50;
  uint64_t v51;
  unint64_t v52;
  ValueMetadata *v53;
  uint64_t aBlock;
  uint64_t v55;
  void (*v56)(uint64_t, void *);
  void *v57;
  uint64_t (*v58)(void *);
  unint64_t v59;
  char v60;
  _BYTE v61[40];
  uint64_t *p_aBlock;

  v50 = a1;
  v46 = a4;
  v47 = a2;
  v48 = *v4;
  v49 = a3;
  v5 = type metadata accessor for MarketplaceKitError();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v42 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0710);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A10B8);
  swift_allocObject();
  v14 = sub_2360D09EC();
  v15 = (void *)sub_2360D0A10();
  v58 = sub_23608E5C4;
  v59 = v14;
  aBlock = MEMORY[0x24BDAC760];
  v55 = 1107296256;
  v56 = sub_236074850;
  v57 = &block_descriptor_35;
  v16 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v17 = objc_msgSend(v15, sel_synchronousRemoteObjectProxyWithErrorHandler_, v16);
  _Block_release(v16);

  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)v61, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v31 = sub_2360D09C8();
    sub_236077F30(&qword_2563A1098, (uint64_t (*)(uint64_t))MEMORY[0x24BDDAD00], MEMORY[0x24BDDAD10]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v32, *MEMORY[0x24BDDACF8], v31);
    swift_willThrow();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  }
  v45 = v11;
  v18 = v48;
  v43 = v10;
  v42 = v5;
  v44 = v8;
  v19 = p_aBlock;
  sub_2360785A0();
  v20 = sub_2360785E4();
  v21 = (*v50)[1];
  v22 = (void (*)(uint64_t, void *))(*v50)[2];
  v23 = (void *)(*v50)[3];
  v24 = (uint64_t (*)(void *))(*v50)[4];
  v25 = (*v50)[5];
  v26 = *((_BYTE *)*v50 + 48);
  aBlock = **v50;
  v55 = v21;
  v56 = v22;
  v57 = v23;
  v58 = v24;
  v59 = v25;
  v60 = v26;
  p_aBlock = &aBlock;
  sub_236078628(aBlock, v21, (uint64_t)v22, (uint64_t)v23, (uint64_t)v24, v25, v26);
  v52 = v20;
  v53 = &type metadata for FetchPrivateDataRequest;
  v27 = v51;
  v28 = sub_2360D0A04();
  if (v27)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
    swift_unknownObjectRelease();
    swift_release();
    return sub_23607867C(aBlock, v55, (uint64_t)v56, (uint64_t)v57, (uint64_t)v58, v59, v60);
  }
  v33 = v28;
  v34 = v29;
  sub_23607867C(aBlock, v55, (uint64_t)v56, (uint64_t)v57, (uint64_t)v58, v59, v60);
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v14;
  *(_QWORD *)(v35 + 24) = v18;
  swift_retain();
  v47(v19, v33, v34, sub_23608E5E4, v35);
  swift_release();
  sub_2360D09D4();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v36 = (uint64_t)v43;
    sub_236067E34((uint64_t)v13, (uint64_t)v43);
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    swift_willThrowTypedImpl();
    v37 = v36;
    v38 = (uint64_t)v44;
    sub_236067E34(v37, (uint64_t)v44);
    swift_allocError();
    sub_236067E34(v38, v39);
    sub_236077AC4(v33, v34);
    swift_release();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  }
  v40 = v13[16];
  v41 = v46;
  *v46 = *(_OWORD *)v13;
  *((_BYTE *)v41 + 16) = v40;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  swift_release();
  sub_236077AC4(v33, v34);
  return swift_unknownObjectRelease();
}

unint64_t sub_23608CCF4(uint64_t **a1, void (*a2)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  void (*v22)(uint64_t, void *);
  void *v23;
  uint64_t (*v24)(void *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t **v46;
  uint64_t v47;
  unint64_t v48;
  ValueMetadata *v49;
  uint64_t aBlock;
  uint64_t v51;
  void (*v52)(uint64_t, void *);
  void *v53;
  uint64_t (*v54)(void *);
  uint64_t v55;
  char v56;
  _BYTE v57[40];
  uint64_t *p_aBlock;

  v46 = a1;
  v43 = a2;
  v44 = *v3;
  v45 = a3;
  v4 = type metadata accessor for MarketplaceKitError();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v39 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (unsigned __int8 *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A10B0);
  swift_allocObject();
  v13 = sub_2360D09EC();
  v14 = (void *)sub_2360D0A10();
  v54 = sub_23608E57C;
  v55 = v13;
  aBlock = MEMORY[0x24BDAC760];
  v51 = 1107296256;
  v52 = sub_236074850;
  v53 = &block_descriptor_30;
  v15 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v16 = objc_msgSend(v14, sel_synchronousRemoteObjectProxyWithErrorHandler_, v15);
  _Block_release(v15);

  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)v57, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v19 = sub_2360D09C8();
    sub_236077F30(&qword_2563A1098, (uint64_t (*)(uint64_t))MEMORY[0x24BDDAD00], MEMORY[0x24BDDAD10]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, unint64_t))(*(_QWORD *)(v19 - 8) + 104))(v29, *MEMORY[0x24BDDACF8], v19);
    swift_willThrow();
    swift_release();
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
    return v19;
  }
  v42 = v10;
  v17 = v44;
  v40 = v9;
  v39[1] = v4;
  v41 = v7;
  v18 = p_aBlock;
  sub_236078410();
  v19 = sub_236078454();
  v20 = *v46;
  v21 = (*v46)[1];
  v22 = (void (*)(uint64_t, void *))(*v46)[2];
  v23 = (void *)(*v46)[3];
  v24 = (uint64_t (*)(void *))(*v46)[4];
  v25 = (*v46)[5];
  aBlock = **v46;
  v51 = v21;
  v52 = v22;
  v53 = v23;
  v54 = v24;
  v55 = v25;
  v56 = *((_BYTE *)v20 + 48);
  p_aBlock = &aBlock;
  sub_236078498(aBlock, v21, (uint64_t)v22, (uint64_t)v23, (uint64_t)v24, v25, v56);
  v48 = v19;
  v49 = &type metadata for SetPrivateDataRequest;
  v26 = v47;
  v27 = sub_2360D0A04();
  if (!v26)
  {
    v31 = v27;
    v32 = v28;
    sub_236078500(aBlock, v51, (uint64_t)v52, (uint64_t)v53, (uint64_t)v54, v55, v56);
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = v13;
    *(_QWORD *)(v33 + 24) = v17;
    swift_retain();
    v34 = v32;
    v43(v18, v31, v32, sub_23608E59C, v33);
    swift_release();
    sub_2360D09D4();
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v19 = *v12;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
      swift_release();
      sub_236077AC4(v31, v34);
      swift_unknownObjectRelease();
      return v19;
    }
    v35 = (uint64_t)v40;
    sub_236067E34((uint64_t)v12, (uint64_t)v40);
    v19 = sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    swift_willThrowTypedImpl();
    v36 = v35;
    v37 = (uint64_t)v41;
    sub_236067E34(v36, (uint64_t)v41);
    swift_allocError();
    sub_236067E34(v37, v38);
    sub_236077AC4(v31, v34);
    swift_release();
    swift_unknownObjectRelease();
    goto LABEL_5;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  swift_unknownObjectRelease();
  swift_release();
  sub_236078500(aBlock, v51, (uint64_t)v52, (uint64_t)v53, (uint64_t)v54, v55, v56);
  return v19;
}

uint64_t sub_23608D1A0(uint64_t **a1, void (*a2)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v44;
  uint64_t **v45;
  uint64_t v46;
  unint64_t v47;
  ValueMetadata *v48;
  uint64_t aBlock;
  uint64_t v50;
  __int128 v51;
  uint64_t (*v52)(void *);
  uint64_t v53;
  char v54;
  _BYTE v55[40];
  uint64_t *p_aBlock;

  v45 = a1;
  v42 = a3;
  v43 = a2;
  v44 = *v3;
  v4 = type metadata accessor for MarketplaceKitError();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v37 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A06C0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (unsigned __int8 *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1090);
  swift_allocObject();
  v13 = sub_2360D09EC();
  v14 = (void *)sub_2360D0A10();
  v52 = sub_23608E4A0;
  v53 = v13;
  aBlock = MEMORY[0x24BDAC760];
  v50 = 1107296256;
  *(_QWORD *)&v51 = sub_236074850;
  *((_QWORD *)&v51 + 1) = &block_descriptor_5;
  v15 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v16 = objc_msgSend(v14, sel_synchronousRemoteObjectProxyWithErrorHandler_, v15);
  _Block_release(v15);

  sub_2360D0DA0();
  swift_unknownObjectRelease();
  sub_236077B28((uint64_t)v55, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A05E8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v21 = sub_2360D09C8();
    sub_236077F30(&qword_2563A1098, (uint64_t (*)(uint64_t))MEMORY[0x24BDDAD00], MEMORY[0x24BDDAD10]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v28, *MEMORY[0x24BDDACF8], v21);
    swift_willThrow();
    swift_release();
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
    return v21;
  }
  v17 = v44;
  v41 = v10;
  v38 = v9;
  v39 = v4;
  v40 = v7;
  v18 = p_aBlock;
  sub_23608E4A8();
  v19 = sub_23608E4EC();
  v20 = *v45;
  v21 = (*v45)[1];
  v22 = *((_BYTE *)*v45 + 32);
  v23 = (*v45)[5];
  v24 = *((_BYTE *)*v45 + 48);
  aBlock = **v45;
  v50 = v21;
  v51 = *((_OWORD *)v20 + 1);
  LOBYTE(v52) = v22;
  v53 = v23;
  v54 = v24;
  p_aBlock = &aBlock;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v47 = v19;
  v48 = &type metadata for InstallRequirements;
  v25 = v46;
  v26 = sub_2360D0A04();
  if (!v25)
  {
    v30 = v26;
    v31 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = v13;
    *(_QWORD *)(v32 + 24) = v17;
    swift_retain();
    v43(v18, v30, v31, sub_23608E554, v32);
    swift_release();
    sub_2360D09D4();
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v21 = *v12;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
      swift_release();
      sub_236077AC4(v30, v31);
      swift_unknownObjectRelease();
      return v21;
    }
    v33 = (uint64_t)v38;
    sub_236067E34((uint64_t)v12, (uint64_t)v38);
    v21 = sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    swift_willThrowTypedImpl();
    v34 = v33;
    v35 = (uint64_t)v40;
    sub_236067E34(v34, (uint64_t)v40);
    swift_allocError();
    sub_236067E34(v35, v36);
    sub_236077AC4(v30, v31);
    swift_release();
    swift_unknownObjectRelease();
    goto LABEL_5;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_23608D648(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v3 = a3;
  v29 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x24BDAC7A8](v29);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2360D0B3C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2360D0AF4();
  v12 = a1;
  v13 = a1;
  v14 = sub_2360D0B24();
  v15 = sub_2360D0D28();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v28 = v3;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v27 = a2;
    v19 = (_QWORD *)v18;
    v26 = v9;
    *(_DWORD *)v17 = 138543362;
    v25 = v17 + 4;
    v20 = a1;
    v21 = v8;
    v22 = _swift_stdlib_bridgeErrorToNSError();
    v30 = v22;
    v9 = v26;
    sub_2360D0D88();
    *v19 = v22;
    v8 = v21;

    _os_log_impl(&dword_236065000, v14, v15, "Error fetching synchronous remote object proxy: %{public}@", v17, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0618);
    swift_arrayDestroy();
    MEMORY[0x23B7EBB1C](v19, -1, -1);
    v23 = v17;
    v3 = v28;
    MEMORY[0x23B7EBB1C](v23, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  type metadata accessor for MarketplaceKitError();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_2360D09E0();
  return sub_236078B4C((uint64_t)v7, v3);
}

uint64_t sub_23608D8A0(void *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A06C0);
  MEMORY[0x24BDAC7A8](v24);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2360D0B3C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2360D0AF4();
  v10 = a1;
  v11 = a1;
  v12 = sub_2360D0B24();
  v13 = sub_2360D0D28();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v23 = a2;
    v15 = (uint8_t *)v14;
    v16 = (_QWORD *)swift_slowAlloc();
    v22 = v7;
    *(_DWORD *)v15 = 138543362;
    v21[1] = v15 + 4;
    v17 = a1;
    v18 = v6;
    v19 = _swift_stdlib_bridgeErrorToNSError();
    v25 = v19;
    v7 = v22;
    sub_2360D0D88();
    *v16 = v19;
    v6 = v18;

    _os_log_impl(&dword_236065000, v12, v13, "Error fetching synchronous remote object proxy: %{public}@", v15, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0618);
    swift_arrayDestroy();
    MEMORY[0x23B7EBB1C](v16, -1, -1);
    MEMORY[0x23B7EBB1C](v15, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  type metadata accessor for MarketplaceKitError();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_2360D09E0();
  return sub_236078B4C((uint64_t)v5, &qword_2563A06C0);
}

uint64_t sub_23608DAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  a6(a1, a2);
  sub_2360D09E0();
  return sub_236078B4C((uint64_t)v12, a5);
}

uint64_t sub_23608DB8C(uint64_t result, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 2:
    case 3:
    case 7:
    case 8:
      result = swift_bridgeObjectRelease();
      break;
    case 4:
      result = sub_236077AC4(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23608DBC8(uint64_t result, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 2:
    case 3:
    case 7:
    case 8:
      result = swift_bridgeObjectRetain();
      break;
    case 4:
      result = sub_236077B70(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_23608DC04()
{
  unint64_t result;

  result = qword_2563A1010;
  if (!qword_2563A1010)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D3BB0, &type metadata for AvailableAppMetadataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1010);
  }
  return result;
}

uint64_t sub_23608DC48(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563A1018);
    v8 = a2;
    result = MEMORY[0x23B7EBA68](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23608DCA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  NSObject *v5;
  void *v6;
  _QWORD aBlock[6];
  int out_token;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v0 = sub_2360D0B60();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A10C0);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  *(_DWORD *)(v4 + 32) = 0;
  out_token = -1;
  sub_23608E60C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5490], v0);
  swift_retain();
  v5 = sub_2360D0D64();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  aBlock[4] = sub_23608E648;
  aBlock[5] = v4;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23608A684;
  aBlock[3] = &block_descriptor_43;
  v6 = _Block_copy(aBlock);
  swift_release();
  notify_register_dispatch("com.apple.managedappdistributiond.priorityOrAllowedDevelopersChanged", &out_token, v5, v6);
  _Block_release(v6);

  return v4;
}

uint64_t sub_23608DE28(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7562697274736964 && a2 == 0xED00004449726F74;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7562345 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23608DF2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return swift_task_switch();
}

uint64_t sub_23608DF48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v6;

  v1 = v0[8];
  v2 = v0[6];
  v3 = qword_2563A01E0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v3 != -1)
  {
    swift_once();
    v1 = v0[8];
    v2 = v0[6];
  }
  v0[2] = v0[7];
  v0[5] = v0 + 2;
  v0[3] = v1;
  v0[4] = v2;
  v6 = (char *)&dword_2563A0768 + dword_2563A0768;
  v4 = (_QWORD *)swift_task_alloc();
  v0[9] = v4;
  *v4 = v0;
  v4[1] = sub_23608E024;
  return ((uint64_t (*)(_QWORD *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v6)(v0 + 5, sub_23608C0E4, 0);
}

uint64_t sub_23608E024(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {

    return swift_task_switch();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
  }
}

uint64_t sub_23608E0B8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_23608E0F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LaunchAngelXPCRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23608E130(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

ValueMetadata *type metadata accessor for PrivateNotifications()
{
  return &type metadata for PrivateNotifications;
}

uint64_t destroy for AvailableAppMetadataRequest()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s15AppDistribution27AvailableAppMetadataRequestVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AvailableAppMetadataRequest(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AvailableAppMetadataRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AvailableAppMetadataRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AvailableAppMetadataRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AvailableAppMetadataRequest()
{
  return &type metadata for AvailableAppMetadataRequest;
}

uint64_t storeEnumTagSinglePayload for AvailableAppMetadataRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23608E348 + 4 * byte_2360D3A4D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23608E37C + 4 * byte_2360D3A48[v4]))();
}

uint64_t sub_23608E37C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23608E384(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23608E38CLL);
  return result;
}

uint64_t sub_23608E398(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23608E3A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23608E3A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23608E3AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AvailableAppMetadataRequest.CodingKeys()
{
  return &type metadata for AvailableAppMetadataRequest.CodingKeys;
}

unint64_t sub_23608E3CC()
{
  unint64_t result;

  result = qword_2563A1078;
  if (!qword_2563A1078)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D3B88, &type metadata for AvailableAppMetadataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1078);
  }
  return result;
}

unint64_t sub_23608E414()
{
  unint64_t result;

  result = qword_2563A1080;
  if (!qword_2563A1080)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D3AF8, &type metadata for AvailableAppMetadataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1080);
  }
  return result;
}

unint64_t sub_23608E45C()
{
  unint64_t result;

  result = qword_2563A1088;
  if (!qword_2563A1088)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D3B20, &type metadata for AvailableAppMetadataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1088);
  }
  return result;
}

uint64_t sub_23608E4A0(void *a1)
{
  uint64_t v1;

  return sub_23608D8A0(a1, v1);
}

unint64_t sub_23608E4A8()
{
  unint64_t result;

  result = qword_2563A10A0;
  if (!qword_2563A10A0)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for InstallRequirements, &type metadata for InstallRequirements);
    atomic_store(result, (unint64_t *)&qword_2563A10A0);
  }
  return result;
}

unint64_t sub_23608E4EC()
{
  unint64_t result;

  result = qword_2563A10A8;
  if (!qword_2563A10A8)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for InstallRequirements, &type metadata for InstallRequirements);
    atomic_store(result, (unint64_t *)&qword_2563A10A8);
  }
  return result;
}

uint64_t sub_23608E530()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23608E554(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23608DAF4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), &qword_2563A06C0, (void (*)(uint64_t, uint64_t))sub_236076388);
}

uint64_t sub_23608E57C(void *a1)
{
  uint64_t v1;

  return sub_23608D648(a1, v1, &qword_2563A05F0);
}

uint64_t sub_23608E59C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23608DAF4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), &qword_2563A05F0, (void (*)(uint64_t, uint64_t))sub_2360749F8);
}

uint64_t sub_23608E5C4(void *a1)
{
  uint64_t v1;

  return sub_23608D648(a1, v1, &qword_2563A0710);
}

uint64_t sub_23608E5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23608DAF4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), &qword_2563A0710, (void (*)(uint64_t, uint64_t))sub_2360756C8);
}

unint64_t sub_23608E60C()
{
  unint64_t result;

  result = qword_25429DD60;
  if (!qword_25429DD60)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25429DD60);
  }
  return result;
}

void sub_23608E648(uint64_t a1)
{
  uint64_t v1;

  sub_23608A5D0(a1, v1);
}

ValueMetadata *type metadata accessor for _AppDistributionNotificationRelay()
{
  return &type metadata for _AppDistributionNotificationRelay;
}

uint64_t destroy for _AppDistributionNotificationRelay.Cache()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s15AppDistribution33_AppDistributionNotificationRelayV5CacheVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for _AppDistributionNotificationRelay.Cache(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for _AppDistributionNotificationRelay.Cache(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for _AppDistributionNotificationRelay.Cache(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for _AppDistributionNotificationRelay.Cache(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for _AppDistributionNotificationRelay.Cache()
{
  return &type metadata for _AppDistributionNotificationRelay.Cache;
}

uint64_t LaunchAngelXPCRequest.init(requestType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_236078854(a1, a2, type metadata accessor for LaunchAngelXPCRequest.RequestType);
}

uint64_t type metadata accessor for LaunchAngelXPCRequest.RequestType(uint64_t a1)
{
  return sub_23608864C(a1, qword_2563A1368);
}

uint64_t sub_23608E890(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23608E8C8 + 4 * byte_2360D3C30[a1]))(0xD000000000000012, 0x80000002360DD4E0);
}

uint64_t sub_23608E8C8(uint64_t a1)
{
  return a1 + 2;
}

uint64_t sub_23608E91C()
{
  unsigned __int8 *v0;

  return sub_23608E890(*v0);
}

uint64_t sub_23608E924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360944E8(a1, a2);
  *a3 = result;
  return result;
}

void sub_23608E948(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_23608E954()
{
  sub_23608F62C();
  return sub_2360D1148();
}

uint64_t sub_23608E97C()
{
  sub_23608F62C();
  return sub_2360D1154();
}

uint64_t sub_23608E9A4()
{
  _BYTE *v0;

  if (*v0)
    return 0x7562697274736964;
  else
    return 0x746E756F636361;
}

uint64_t sub_23608E9EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_236094720(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23608EA10()
{
  sub_23608F8E4();
  return sub_2360D1148();
}

uint64_t sub_23608EA38()
{
  sub_23608F8E4();
  return sub_2360D1154();
}

uint64_t sub_23608EA60()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x496E6F6973726576;
  if (*v0 != 1)
    v1 = 0x7562697274736964;
  if (*v0)
    return v1;
  else
    return 0x44496D657469;
}

uint64_t sub_23608EAC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_236094834(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23608EAEC()
{
  sub_23608F96C();
  return sub_2360D1148();
}

uint64_t sub_23608EB14()
{
  sub_23608F96C();
  return sub_2360D1154();
}

uint64_t sub_23608EB3C()
{
  _BYTE *v0;

  if (*v0)
    return 0x7562697274736964;
  else
    return 0x7972657571;
}

uint64_t sub_23608EB80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360949B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23608EBA4()
{
  sub_23608F928();
  return sub_2360D1148();
}

uint64_t sub_23608EBCC()
{
  sub_23608F928();
  return sub_2360D1154();
}

uint64_t sub_23608EBF4()
{
  return 0x747865746E6F63;
}

uint64_t sub_23608EC10()
{
  sub_23608F73C();
  return sub_2360D1148();
}

uint64_t sub_23608EC38()
{
  sub_23608F73C();
  return sub_2360D1154();
}

uint64_t sub_23608EC60()
{
  sub_23608F6B4();
  return sub_2360D1148();
}

uint64_t sub_23608EC88()
{
  sub_23608F6B4();
  return sub_2360D1154();
}

uint64_t sub_23608ECB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x747865746E6F63 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2360D1028();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23608ED44()
{
  sub_23608F6F8();
  return sub_2360D1148();
}

uint64_t sub_23608ED6C()
{
  sub_23608F6F8();
  return sub_2360D1154();
}

void LaunchAngelXPCRequest.RequestType.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  _QWORD v17[4];
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A10C8);
  v32 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v31 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for LicenseResolutionContext();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A10D0);
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v25 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for OAuthAuthorizationContext();
  MEMORY[0x24BDAC7A8](v18);
  v24 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A10D8);
  v23 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v21 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A10E0);
  v20 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v19 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A10E8);
  v17[2] = *(_QWORD *)(v9 - 8);
  v17[3] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A10F0);
  v17[0] = *(_QWORD *)(v10 - 8);
  v17[1] = v10;
  MEMORY[0x24BDAC7A8](v10);
  v11 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A10F8);
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v15 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23608F62C();
  v37 = v15;
  sub_2360D113C();
  sub_23608F670(v35, (uint64_t)v13);
  v16 = (char *)sub_23608F0A8 + 4 * byte_2360D3C36[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23608F0A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  v0[22] = *(_QWORD *)(v1 + 8);
  *(_BYTE *)(v3 - 224) = 0;
  sub_23608F96C();
  v4 = v0[23];
  v5 = *(_QWORD *)(v3 - 72);
  sub_2360D0F98();
  *(_BYTE *)(v3 - 224) = 0;
  v6 = v0[1];
  v7 = v0[20];
  sub_2360D1004();
  if (v7)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*v0 + 8))(v2, v6);
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(v0[21] + 8);
    v9 = v5;
  }
  else
  {
    *(_BYTE *)(v3 - 224) = 1;
    sub_2360D0FC8();
    *(_BYTE *)(v3 - 224) = 2;
    sub_2360D0FD4();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*v0 + 8))(v2, v6);
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(v0[21] + 8);
    v9 = *(_QWORD *)(v3 - 72);
  }
  return v8(v9, v4);
}

unint64_t sub_23608F62C()
{
  unint64_t result;

  result = qword_2563A1100;
  if (!qword_2563A1100)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4C94, &type metadata for LaunchAngelXPCRequest.RequestType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1100);
  }
  return result;
}

uint64_t sub_23608F670(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23608F6B4()
{
  unint64_t result;

  result = qword_2563A1108;
  if (!qword_2563A1108)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4C44, &type metadata for LaunchAngelXPCRequest.RequestType.HandleLicenseResolutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1108);
  }
  return result;
}

unint64_t sub_23608F6F8()
{
  unint64_t result;

  result = qword_2563A1118;
  if (!qword_2563A1118)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4BF4, &type metadata for LaunchAngelXPCRequest.RequestType.OauthAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1118);
  }
  return result;
}

unint64_t sub_23608F73C()
{
  unint64_t result;

  result = qword_2563A1128;
  if (!qword_2563A1128)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4BA4, &type metadata for LaunchAngelXPCRequest.RequestType.GetInstallConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1128);
  }
  return result;
}

unint64_t sub_23608F780()
{
  unint64_t result;

  result = qword_2563A1130;
  if (!qword_2563A1130)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for InstallSheetContext, &type metadata for InstallSheetContext);
    atomic_store(result, (unint64_t *)&qword_2563A1130);
  }
  return result;
}

uint64_t sub_23608F7C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 104);
  v10 = *(_QWORD *)(a1 + 96);
  v8 = *(_BYTE *)(a1 + 88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23608F878(v2, v3, v4, v5, v6, v8);
  sub_2360844D8(v10, v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23608F878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t result;

  if (a6 == 2 || a6 == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if (!a6)
  {
    swift_bridgeObjectRelease();
    return sub_2360844D8(a4, a5);
  }
  return result;
}

unint64_t sub_23608F8E4()
{
  unint64_t result;

  result = qword_2563A1138;
  if (!qword_2563A1138)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4B54, &type metadata for LaunchAngelXPCRequest.RequestType.DisplayAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1138);
  }
  return result;
}

unint64_t sub_23608F928()
{
  unint64_t result;

  result = qword_2563A1140;
  if (!qword_2563A1140)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4B04, &type metadata for LaunchAngelXPCRequest.RequestType.DisplaySearchResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1140);
  }
  return result;
}

unint64_t sub_23608F96C()
{
  unint64_t result;

  result = qword_2563A1148;
  if (!qword_2563A1148)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4AB4, &type metadata for LaunchAngelXPCRequest.RequestType.DisplayProductPageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1148);
  }
  return result;
}

uint64_t LaunchAngelXPCRequest.RequestType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  _QWORD v38[13];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;

  v45 = a2;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1150);
  v38[10] = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v55 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1158);
  v54 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v52 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1160);
  v38[8] = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v48 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1168);
  v38[9] = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v49 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1170);
  v38[7] = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v46 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1178);
  v38[6] = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v47 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1180);
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  v11 = MEMORY[0x24BDAC7A8](v56);
  v38[12] = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v38[11] = (char *)v38 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v38 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)v38 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)v38 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)v38 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)v38 - v27;
  v29 = a1[3];
  v57 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v29);
  sub_23608F62C();
  v53 = v10;
  v30 = v58;
  sub_2360D1124();
  if (!v30)
  {
    v38[1] = v23;
    v38[2] = v20;
    v38[4] = v17;
    v38[0] = v26;
    v58 = 0;
    v38[5] = v28;
    v31 = v51;
    v32 = v53;
    v33 = sub_2360D0F80();
    if (*(_QWORD *)(v33 + 16) == 1)
    {
      v38[3] = v33;
      __asm { BR              X10 }
    }
    v34 = sub_2360D0E78();
    swift_allocError();
    v36 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0270);
    *v36 = v56;
    sub_2360D0F08();
    sub_2360D0E6C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v36, *MEMORY[0x24BEE26D0], v34);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v32, v31);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
}

unint64_t sub_2360906A4()
{
  unint64_t result;

  result = qword_2563A1198;
  if (!qword_2563A1198)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for InstallSheetContext, &type metadata for InstallSheetContext);
    atomic_store(result, (unint64_t *)&qword_2563A1198);
  }
  return result;
}

uint64_t sub_2360906E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LaunchAngelXPCRequest.RequestType.init(from:)(a1, a2);
}

void sub_2360906FC(_QWORD *a1)
{
  LaunchAngelXPCRequest.RequestType.encode(to:)(a1);
}

uint64_t LaunchAngelXPCRequest.requestType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23608F670(v1, a1);
}

uint64_t sub_23609071C()
{
  return 0x5474736575716572;
}

uint64_t sub_23609073C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x5474736575716572 && a2 == 0xEB00000000657079)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2360D1028();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2360907E8()
{
  sub_236090948();
  return sub_2360D1148();
}

uint64_t sub_236090810()
{
  sub_236090948();
  return sub_2360D1154();
}

uint64_t LaunchAngelXPCRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A11A0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236090948();
  sub_2360D113C();
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  sub_236077F30(&qword_2563A11B0, type metadata accessor for LaunchAngelXPCRequest.RequestType, (uint64_t)&protocol conformance descriptor for LaunchAngelXPCRequest.RequestType);
  sub_2360D0FEC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_236090948()
{
  unint64_t result;

  result = qword_2563A11A8;
  if (!qword_2563A11A8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4A64, &type metadata for LaunchAngelXPCRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A11A8);
  }
  return result;
}

uint64_t LaunchAngelXPCRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2;
  v4 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  MEMORY[0x24BDAC7A8](v4);
  v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A11B8);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LaunchAngelXPCRequest(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236090948();
  sub_2360D1124();
  if (!v2)
  {
    sub_236077F30(&qword_2563A11C0, type metadata accessor for LaunchAngelXPCRequest.RequestType, (uint64_t)&protocol conformance descriptor for LaunchAngelXPCRequest.RequestType);
    sub_2360D0F5C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_236078854(v15, (uint64_t)v11, type metadata accessor for LaunchAngelXPCRequest.RequestType);
    sub_236078854((uint64_t)v11, v13, type metadata accessor for LaunchAngelXPCRequest);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for LaunchAngelXPCRequest(uint64_t a1)
{
  return sub_23608864C(a1, qword_2563A12C0);
}

uint64_t sub_236090B6C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LaunchAngelXPCRequest.init(from:)(a1, a2);
}

uint64_t sub_236090B80(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A11A0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236090948();
  sub_2360D113C();
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  sub_236077F30(&qword_2563A11B0, type metadata accessor for LaunchAngelXPCRequest.RequestType, (uint64_t)&protocol conformance descriptor for LaunchAngelXPCRequest.RequestType);
  sub_2360D0FEC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_236090C90()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000018;
  if (*v0 != 1)
    v1 = 0xD000000000000012;
  if (*v0)
    return v1;
  else
    return 0x6465726F6E6769;
}

uint64_t sub_236090CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_236094ABC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236090D1C()
{
  sub_2360912D4();
  return sub_2360D1148();
}

uint64_t sub_236090D44()
{
  sub_2360912D4();
  return sub_2360D1154();
}

uint64_t sub_236090D6C()
{
  sub_2360913A0();
  return sub_2360D1148();
}

uint64_t sub_236090D94()
{
  sub_2360913A0();
  return sub_2360D1154();
}

uint64_t sub_236090DBC()
{
  return 0x656D7269666E6F63;
}

uint64_t sub_236090DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x656D7269666E6F63 && a2 == 0xE900000000000064)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2360D1028();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_236090E78()
{
  sub_23609135C();
  return sub_2360D1148();
}

uint64_t sub_236090EA0()
{
  sub_23609135C();
  return sub_2360D1154();
}

uint64_t sub_236090EC8()
{
  return 0x65736E6F70736572;
}

uint64_t sub_236090EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65736E6F70736572 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2360D1028();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_236090F74()
{
  sub_236091318();
  return sub_2360D1148();
}

uint64_t sub_236090F9C()
{
  sub_236091318();
  return sub_2360D1154();
}

uint64_t LaunchAngelXPCResponse.ResponseType.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A11C8);
  v26 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v25 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A11D0);
  v23 = *(_QWORD *)(v6 - 8);
  v24 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A11D8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A11E0);
  v29 = *(_QWORD *)(v13 - 8);
  v30 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *v2;
  v16 = *((unsigned __int8 *)v2 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360912D4();
  sub_2360D113C();
  if (!v16)
  {
    v33 = 1;
    sub_23609135C();
    v18 = v30;
    sub_2360D0F98();
    v20 = v24;
    sub_2360D0FE0();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v18);
  }
  if (v16 == 1)
  {
    v34 = 2;
    sub_236091318();
    v17 = v25;
    v18 = v30;
    sub_2360D0F98();
    v31 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A11F8);
    sub_2360918B8(&qword_2563A1200, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    v19 = v27;
    sub_2360D0FEC();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v18);
  }
  v32 = 0;
  sub_2360913A0();
  v22 = v30;
  sub_2360D0F98();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v22);
}

unint64_t sub_2360912D4()
{
  unint64_t result;

  result = qword_2563A11E8;
  if (!qword_2563A11E8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4A14, &type metadata for LaunchAngelXPCResponse.ResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A11E8);
  }
  return result;
}

unint64_t sub_236091318()
{
  unint64_t result;

  result = qword_2563A11F0;
  if (!qword_2563A11F0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D49C4, &type metadata for LaunchAngelXPCResponse.ResponseType.OauthAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A11F0);
  }
  return result;
}

unint64_t sub_23609135C()
{
  unint64_t result;

  result = qword_2563A1208;
  if (!qword_2563A1208)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4974, &type metadata for LaunchAngelXPCResponse.ResponseType.InstallSheetConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1208);
  }
  return result;
}

unint64_t sub_2360913A0()
{
  unint64_t result;

  result = qword_2563A1210;
  if (!qword_2563A1210)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4924, &type metadata for LaunchAngelXPCResponse.ResponseType.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1210);
  }
  return result;
}

uint64_t LaunchAngelXPCResponse.ResponseType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;

  v42 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1218);
  v4 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  v41 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v44 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1220);
  v7 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  v39 = v7;
  MEMORY[0x24BDAC7A8](v6);
  v43 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1228);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1230);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_2360912D4();
  v18 = v46;
  sub_2360D1124();
  if (v18)
    goto LABEL_9;
  v37 = v9;
  v19 = v43;
  v20 = v44;
  v46 = v14;
  v21 = sub_2360D0F80();
  if (*(_QWORD *)(v21 + 16) != 1)
  {
    v30 = sub_2360D0E78();
    swift_allocError();
    v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0270);
    *v32 = &type metadata for LaunchAngelXPCResponse.ResponseType;
    sub_2360D0F08();
    sub_2360D0E6C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, *MEMORY[0x24BEE26D0], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v13);
LABEL_9:
    v26 = (uint64_t)v45;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v22 = *(unsigned __int8 *)(v21 + 32);
  if (*(_BYTE *)(v21 + 32))
  {
    v36 = v21;
    if (v22 == 1)
    {
      v49 = 1;
      sub_23609135C();
      v23 = v13;
      sub_2360D0EFC();
      v24 = v38;
      v25 = sub_2360D0F50();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v24);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v23);
      v26 = (uint64_t)v45;
      v27 = 0;
      v28 = v25 & 1;
      v29 = v42;
    }
    else
    {
      v50 = 2;
      sub_236091318();
      sub_2360D0EFC();
      v29 = v42;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563A11F8);
      sub_2360918B8(&qword_2563A1238, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
      v34 = v40;
      sub_2360D0F5C();
      v35 = v46;
      (*(void (**)(char *, uint64_t))(v41 + 8))(v20, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v13);
      v28 = v47;
      v27 = 1;
      v26 = (uint64_t)v45;
    }
  }
  else
  {
    v48 = 0;
    sub_2360913A0();
    sub_2360D0EFC();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v37);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v13);
    v28 = 0;
    v27 = 2;
    v26 = (uint64_t)v45;
    v29 = v42;
  }
  *(_QWORD *)v29 = v28;
  *(_BYTE *)(v29 + 8) = v27;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_2360918B8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563A11F8);
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x23B7EBA68](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236091918@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LaunchAngelXPCResponse.ResponseType.init(from:)(a1, a2);
}

uint64_t sub_23609192C(_QWORD *a1)
{
  return LaunchAngelXPCResponse.ResponseType.encode(to:)(a1);
}

uint64_t LaunchAngelXPCResponse.responseType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)v1;
  *(_QWORD *)a1 = *(_QWORD *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  return sub_236091954(v2, v3);
}

uint64_t sub_236091954(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 == 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t LaunchAngelXPCResponse.init(responseType:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)a2 = *(_QWORD *)result;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_23609197C()
{
  return 0x65736E6F70736572;
}

uint64_t sub_23609199C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65736E6F70736572 && a2 == 0xEC00000065707954)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2360D1028();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_236091A48()
{
  sub_236091BA0();
  return sub_2360D1148();
}

uint64_t sub_236091A70()
{
  sub_236091BA0();
  return sub_2360D1154();
}

uint64_t LaunchAngelXPCResponse.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1240);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *((_BYTE *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236091BA0();
  sub_2360D113C();
  v10 = v7;
  v11 = v8;
  sub_236091BE4();
  sub_2360D0FEC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_236091BA0()
{
  unint64_t result;

  result = qword_2563A1248;
  if (!qword_2563A1248)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D48D4, &type metadata for LaunchAngelXPCResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1248);
  }
  return result;
}

unint64_t sub_236091BE4()
{
  unint64_t result;

  result = qword_2563A1250;
  if (!qword_2563A1250)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for LaunchAngelXPCResponse.ResponseType, &type metadata for LaunchAngelXPCResponse.ResponseType);
    atomic_store(result, (unint64_t *)&qword_2563A1250);
  }
  return result;
}

uint64_t LaunchAngelXPCResponse.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  char v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1258);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236091BA0();
  sub_2360D1124();
  if (!v2)
  {
    sub_236091D50();
    sub_2360D0F5C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v12;
    *(_QWORD *)a2 = v11;
    *(_BYTE *)(a2 + 8) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_236091D50()
{
  unint64_t result;

  result = qword_2563A1260;
  if (!qword_2563A1260)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for LaunchAngelXPCResponse.ResponseType, &type metadata for LaunchAngelXPCResponse.ResponseType);
    atomic_store(result, (unint64_t *)&qword_2563A1260);
  }
  return result;
}

uint64_t sub_236091D94@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LaunchAngelXPCResponse.init(from:)(a1, a2);
}

uint64_t sub_236091DA8(_QWORD *a1)
{
  return LaunchAngelXPCResponse.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for LaunchAngelXPCRequest(uint64_t *a1, uint64_t *a2)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(type metadata accessor for LaunchAngelXPCRequest.RequestType(0) - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_236091E24 + 4 * byte_2360D3C42[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_236092070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t result;

  if (a6 == 2 || a6 == 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else if (!a6)
  {
    swift_bridgeObjectRetain();
    return sub_2360920DC(a4, a5);
  }
  return result;
}

uint64_t sub_2360920DC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_236077B70(a1, a2);
  return a1;
}

uint64_t destroy for LaunchAngelXPCRequest(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      return swift_bridgeObjectRelease();
    case 1:
    case 2:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23608F878(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
      v3 = *(_QWORD *)(a1 + 104);
      if (v3 >> 60 != 15)
        sub_236077AC4(*(_QWORD *)(a1 + 96), v3);
      return swift_bridgeObjectRelease();
    case 4:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for OAuthAuthorizationContext();
      goto LABEL_8;
    case 5:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for LicenseResolutionContext();
LABEL_8:
      v5 = a1 + *(int *)(v4 + 20);
      v6 = sub_2360D08D8();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for LaunchAngelXPCRequest()
{
  char *v0;

  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  v0 = (char *)sub_236092260 + 4 * byte_2360D3C4E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_236092260()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  v3 = v1[2];
  v4 = v1[3];
  v0[2] = v3;
  v0[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for LaunchAngelXPCRequest(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_236078270(result, type metadata accessor for LaunchAngelXPCRequest.RequestType);
    type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
    v2 = (char *)&loc_236092470 + 4 * byte_2360D3C54[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *initializeWithTake for LaunchAngelXPCRequest(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v4 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5)
  {
    *a1 = *a2;
    v10 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2360D08D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 4)
  {
    *a1 = *a2;
    v6 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_2360D08D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for LaunchAngelXPCRequest(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_236078270((uint64_t)a1, type metadata accessor for LaunchAngelXPCRequest.RequestType);
    v4 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 5)
    {
      *a1 = *a2;
      v10 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_2360D08D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 4)
    {
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_2360D08D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for LaunchAngelXPCRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23609288C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for LaunchAngelXPCRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2360928D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_236092914()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for LaunchAngelXPCRequest.RequestType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for LaunchAngelXPCRequest.RequestType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_2360929DC + 4 * byte_2360D3C5A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for LaunchAngelXPCRequest.RequestType(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      return swift_bridgeObjectRelease();
    case 1:
    case 2:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23608F878(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
      v3 = *(_QWORD *)(a1 + 104);
      if (v3 >> 60 != 15)
        sub_236077AC4(*(_QWORD *)(a1 + 96), v3);
      return swift_bridgeObjectRelease();
    case 4:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for OAuthAuthorizationContext();
      goto LABEL_8;
    case 5:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for LicenseResolutionContext();
LABEL_8:
      v5 = a1 + *(int *)(v4 + 20);
      v6 = sub_2360D08D8();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for LaunchAngelXPCRequest.RequestType()
{
  char *v0;

  v0 = (char *)sub_236092D80 + 4 * byte_2360D3C66[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_236092D80()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  v3 = v1[2];
  v4 = v1[3];
  v0[2] = v3;
  v0[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for LaunchAngelXPCRequest.RequestType(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_236078270(result, type metadata accessor for LaunchAngelXPCRequest.RequestType);
    v2 = (char *)&loc_236092F88 + 4 * byte_2360D3C6C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *initializeWithTake for LaunchAngelXPCRequest.RequestType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5)
  {
    *a1 = *a2;
    v11 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2360D08D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 4)
  {
    *a1 = *a2;
    v7 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2360D08D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for LaunchAngelXPCRequest.RequestType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_236078270((uint64_t)a1, type metadata accessor for LaunchAngelXPCRequest.RequestType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 5)
    {
      *a1 = *a2;
      v11 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2360D08D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 4)
    {
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_2360D08D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_236093388()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for OAuthAuthorizationContext();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for LicenseResolutionContext();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse()
{
  return &type metadata for LaunchAngelXPCResponse;
}

uint64_t initializeBufferWithCopyOfBuffer for LaunchAngelXPCResponse.ResponseType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_236091954(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for LaunchAngelXPCResponse.ResponseType(uint64_t a1)
{
  return sub_23608E130(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t _s15AppDistribution22LaunchAngelXPCResponseVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_236091954(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_23608E130(v5, v6);
  return a1;
}

uint64_t assignWithTake for LaunchAngelXPCResponse.ResponseType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_23608E130(v4, v5);
  return a1;
}

uint64_t _s15AppDistribution22LaunchAngelXPCResponseVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s15AppDistribution22LaunchAngelXPCResponseVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_2360935C4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_2360935DC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse.ResponseType()
{
  return &type metadata for LaunchAngelXPCResponse.ResponseType;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse.CodingKeys()
{
  return &type metadata for LaunchAngelXPCResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse.ResponseType.CodingKeys()
{
  return &type metadata for LaunchAngelXPCResponse.ResponseType.CodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse.ResponseType.IgnoredCodingKeys()
{
  return &type metadata for LaunchAngelXPCResponse.ResponseType.IgnoredCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse.ResponseType.InstallSheetConfirmationCodingKeys()
{
  return &type metadata for LaunchAngelXPCResponse.ResponseType.InstallSheetConfirmationCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse.ResponseType.OauthAuthorizationCodingKeys()
{
  return &type metadata for LaunchAngelXPCResponse.ResponseType.OauthAuthorizationCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.CodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.CodingKeys;
}

uint64_t getEnumTagSinglePayload for LaunchAngelXPCRequest.RequestType.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LaunchAngelXPCRequest.RequestType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23609374C + 4 * byte_2360D3C77[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_236093780 + 4 * byte_2360D3C72[v4]))();
}

uint64_t sub_236093780(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236093788(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236093790);
  return result;
}

uint64_t sub_23609379C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360937A4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2360937A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360937B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.CodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.CodingKeys;
}

uint64_t _s15AppDistribution22LaunchAngelXPCResponseV12ResponseTypeO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_236093818 + 4 * byte_2360D3C81[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23609384C + 4 * byte_2360D3C7C[v4]))();
}

uint64_t sub_23609384C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236093854(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23609385CLL);
  return result;
}

uint64_t sub_236093868(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x236093870);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_236093874(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23609387C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.DisplayProductPageCodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.DisplayProductPageCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.DisplaySearchResultsCodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.DisplaySearchResultsCodingKeys;
}

uint64_t _s15AppDistribution21LaunchAngelXPCRequestV11RequestTypeO30DisplaySearchResultsCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2360938FC + 4 * byte_2360D3C8B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_236093930 + 4 * byte_2360D3C86[v4]))();
}

uint64_t sub_236093930(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236093938(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236093940);
  return result;
}

uint64_t sub_23609394C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x236093954);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_236093958(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236093960(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.DisplayAuthorizationCodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.DisplayAuthorizationCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.GetInstallConfirmationCodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.GetInstallConfirmationCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.OauthAuthorizationCodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.OauthAuthorizationCodingKeys;
}

uint64_t _s15AppDistribution22LaunchAngelXPCResponseV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2360939DC + 4 * byte_2360D3C90[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2360939FC + 4 * byte_2360D3C95[v4]))();
}

_BYTE *sub_2360939DC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2360939FC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_236093A04(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_236093A0C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_236093A14(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_236093A1C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.HandleLicenseResolutionCodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.HandleLicenseResolutionCodingKeys;
}

unint64_t sub_236093A3C()
{
  unint64_t result;

  result = qword_2563A13A0;
  if (!qword_2563A13A0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4074, &type metadata for LaunchAngelXPCRequest.RequestType.HandleLicenseResolutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A13A0);
  }
  return result;
}

unint64_t sub_236093A84()
{
  unint64_t result;

  result = qword_2563A13A8;
  if (!qword_2563A13A8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D412C, &type metadata for LaunchAngelXPCRequest.RequestType.OauthAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A13A8);
  }
  return result;
}

unint64_t sub_236093ACC()
{
  unint64_t result;

  result = qword_2563A13B0;
  if (!qword_2563A13B0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D41E4, &type metadata for LaunchAngelXPCRequest.RequestType.GetInstallConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A13B0);
  }
  return result;
}

unint64_t sub_236093B14()
{
  unint64_t result;

  result = qword_2563A13B8;
  if (!qword_2563A13B8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D429C, &type metadata for LaunchAngelXPCRequest.RequestType.DisplayAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A13B8);
  }
  return result;
}

unint64_t sub_236093B5C()
{
  unint64_t result;

  result = qword_2563A13C0;
  if (!qword_2563A13C0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4354, &type metadata for LaunchAngelXPCRequest.RequestType.DisplaySearchResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A13C0);
  }
  return result;
}

unint64_t sub_236093BA4()
{
  unint64_t result;

  result = qword_2563A13C8;
  if (!qword_2563A13C8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D440C, &type metadata for LaunchAngelXPCRequest.RequestType.DisplayProductPageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A13C8);
  }
  return result;
}

unint64_t sub_236093BEC()
{
  unint64_t result;

  result = qword_2563A13D0;
  if (!qword_2563A13D0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D44C4, &type metadata for LaunchAngelXPCRequest.RequestType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A13D0);
  }
  return result;
}

unint64_t sub_236093C34()
{
  unint64_t result;

  result = qword_2563A13D8;
  if (!qword_2563A13D8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D457C, &type metadata for LaunchAngelXPCRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A13D8);
  }
  return result;
}

unint64_t sub_236093C7C()
{
  unint64_t result;

  result = qword_2563A13E0;
  if (!qword_2563A13E0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4634, &type metadata for LaunchAngelXPCResponse.ResponseType.OauthAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A13E0);
  }
  return result;
}

unint64_t sub_236093CC4()
{
  unint64_t result;

  result = qword_2563A13E8;
  if (!qword_2563A13E8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D46EC, &type metadata for LaunchAngelXPCResponse.ResponseType.InstallSheetConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A13E8);
  }
  return result;
}

unint64_t sub_236093D0C()
{
  unint64_t result;

  result = qword_2563A13F0;
  if (!qword_2563A13F0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D47F4, &type metadata for LaunchAngelXPCResponse.ResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A13F0);
  }
  return result;
}

unint64_t sub_236093D54()
{
  unint64_t result;

  result = qword_2563A13F8;
  if (!qword_2563A13F8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D48AC, &type metadata for LaunchAngelXPCResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A13F8);
  }
  return result;
}

unint64_t sub_236093D9C()
{
  unint64_t result;

  result = qword_2563A1400;
  if (!qword_2563A1400)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D481C, &type metadata for LaunchAngelXPCResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1400);
  }
  return result;
}

unint64_t sub_236093DE4()
{
  unint64_t result;

  result = qword_2563A1408;
  if (!qword_2563A1408)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4844, &type metadata for LaunchAngelXPCResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1408);
  }
  return result;
}

unint64_t sub_236093E2C()
{
  unint64_t result;

  result = qword_2563A1410;
  if (!qword_2563A1410)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4714, &type metadata for LaunchAngelXPCResponse.ResponseType.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1410);
  }
  return result;
}

unint64_t sub_236093E74()
{
  unint64_t result;

  result = qword_2563A1418;
  if (!qword_2563A1418)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D473C, &type metadata for LaunchAngelXPCResponse.ResponseType.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1418);
  }
  return result;
}

unint64_t sub_236093EBC()
{
  unint64_t result;

  result = qword_2563A1420;
  if (!qword_2563A1420)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D465C, &type metadata for LaunchAngelXPCResponse.ResponseType.InstallSheetConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1420);
  }
  return result;
}

unint64_t sub_236093F04()
{
  unint64_t result;

  result = qword_2563A1428;
  if (!qword_2563A1428)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4684, &type metadata for LaunchAngelXPCResponse.ResponseType.InstallSheetConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1428);
  }
  return result;
}

unint64_t sub_236093F4C()
{
  unint64_t result;

  result = qword_2563A1430;
  if (!qword_2563A1430)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D45A4, &type metadata for LaunchAngelXPCResponse.ResponseType.OauthAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1430);
  }
  return result;
}

unint64_t sub_236093F94()
{
  unint64_t result;

  result = qword_2563A1438;
  if (!qword_2563A1438)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D45CC, &type metadata for LaunchAngelXPCResponse.ResponseType.OauthAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1438);
  }
  return result;
}

unint64_t sub_236093FDC()
{
  unint64_t result;

  result = qword_2563A1440;
  if (!qword_2563A1440)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4764, &type metadata for LaunchAngelXPCResponse.ResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1440);
  }
  return result;
}

unint64_t sub_236094024()
{
  unint64_t result;

  result = qword_2563A1448;
  if (!qword_2563A1448)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D478C, &type metadata for LaunchAngelXPCResponse.ResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1448);
  }
  return result;
}

unint64_t sub_23609406C()
{
  unint64_t result;

  result = qword_2563A1450;
  if (!qword_2563A1450)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D44EC, &type metadata for LaunchAngelXPCRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1450);
  }
  return result;
}

unint64_t sub_2360940B4()
{
  unint64_t result;

  result = qword_2563A1458;
  if (!qword_2563A1458)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4514, &type metadata for LaunchAngelXPCRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1458);
  }
  return result;
}

unint64_t sub_2360940FC()
{
  unint64_t result;

  result = qword_2563A1460;
  if (!qword_2563A1460)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D437C, &type metadata for LaunchAngelXPCRequest.RequestType.DisplayProductPageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1460);
  }
  return result;
}

unint64_t sub_236094144()
{
  unint64_t result;

  result = qword_2563A1468;
  if (!qword_2563A1468)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D43A4, &type metadata for LaunchAngelXPCRequest.RequestType.DisplayProductPageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1468);
  }
  return result;
}

unint64_t sub_23609418C()
{
  unint64_t result;

  result = qword_2563A1470;
  if (!qword_2563A1470)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D42C4, &type metadata for LaunchAngelXPCRequest.RequestType.DisplaySearchResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1470);
  }
  return result;
}

unint64_t sub_2360941D4()
{
  unint64_t result;

  result = qword_2563A1478;
  if (!qword_2563A1478)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D42EC, &type metadata for LaunchAngelXPCRequest.RequestType.DisplaySearchResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1478);
  }
  return result;
}

unint64_t sub_23609421C()
{
  unint64_t result;

  result = qword_2563A1480;
  if (!qword_2563A1480)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D420C, &type metadata for LaunchAngelXPCRequest.RequestType.DisplayAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1480);
  }
  return result;
}

unint64_t sub_236094264()
{
  unint64_t result;

  result = qword_2563A1488;
  if (!qword_2563A1488)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4234, &type metadata for LaunchAngelXPCRequest.RequestType.DisplayAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1488);
  }
  return result;
}

unint64_t sub_2360942AC()
{
  unint64_t result;

  result = qword_2563A1490;
  if (!qword_2563A1490)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4154, &type metadata for LaunchAngelXPCRequest.RequestType.GetInstallConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1490);
  }
  return result;
}

unint64_t sub_2360942F4()
{
  unint64_t result;

  result = qword_2563A1498;
  if (!qword_2563A1498)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D417C, &type metadata for LaunchAngelXPCRequest.RequestType.GetInstallConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1498);
  }
  return result;
}

unint64_t sub_23609433C()
{
  unint64_t result;

  result = qword_2563A14A0;
  if (!qword_2563A14A0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D409C, &type metadata for LaunchAngelXPCRequest.RequestType.OauthAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A14A0);
  }
  return result;
}

unint64_t sub_236094384()
{
  unint64_t result;

  result = qword_2563A14A8;
  if (!qword_2563A14A8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D40C4, &type metadata for LaunchAngelXPCRequest.RequestType.OauthAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A14A8);
  }
  return result;
}

unint64_t sub_2360943CC()
{
  unint64_t result;

  result = qword_2563A14B0;
  if (!qword_2563A14B0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D3FE4, &type metadata for LaunchAngelXPCRequest.RequestType.HandleLicenseResolutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A14B0);
  }
  return result;
}

unint64_t sub_236094414()
{
  unint64_t result;

  result = qword_2563A14B8;
  if (!qword_2563A14B8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D400C, &type metadata for LaunchAngelXPCRequest.RequestType.HandleLicenseResolutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A14B8);
  }
  return result;
}

unint64_t sub_23609445C()
{
  unint64_t result;

  result = qword_2563A14C0;
  if (!qword_2563A14C0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4434, &type metadata for LaunchAngelXPCRequest.RequestType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A14C0);
  }
  return result;
}

unint64_t sub_2360944A4()
{
  unint64_t result;

  result = qword_2563A14C8;
  if (!qword_2563A14C8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D445C, &type metadata for LaunchAngelXPCRequest.RequestType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A14C8);
  }
  return result;
}

uint64_t sub_2360944E8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x80000002360DD4E0 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002360DD500 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002360DD520 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002360DD540 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002360DD560 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002360DD580)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_236094720(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E756F636361 && a2 == 0xE700000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7562697274736964 && a2 == 0xED00004449726F74)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_236094834(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496E6F6973726576 && a2 == 0xE900000000000044 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7562697274736964 && a2 == 0xED00004449726F74)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2360949B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7562697274736964 && a2 == 0xED00004449726F74)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_236094ABC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6465726F6E6769 && a2 == 0xE700000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002360DD5A0 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002360DD560)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t LocalizedStringsRequest.LocalizedString.key.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LocalizedStringsRequest.LocalizedString.replacementTokens.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LocalizedStringsRequest.LocalizedString.init(key:replacementTokens:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_236094C5C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 7955819;
}

uint64_t sub_236094C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23609676C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236094CB8()
{
  sub_236094E74();
  return sub_2360D1148();
}

uint64_t sub_236094CE0()
{
  sub_236094E74();
  return sub_2360D1154();
}

uint64_t LocalizedStringsRequest.LocalizedString.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A14D0);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236094E74();
  sub_2360D113C();
  v13 = 0;
  sub_2360D0FD4();
  if (!v2)
  {
    v11 = v9;
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A11F8);
    sub_2360918B8(&qword_2563A1200, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    sub_2360D0FEC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

unint64_t sub_236094E74()
{
  unint64_t result;

  result = qword_2563A14D8;
  if (!qword_2563A14D8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D511C, &type metadata for LocalizedStringsRequest.LocalizedString.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A14D8);
  }
  return result;
}

uint64_t LocalizedStringsRequest.LocalizedString.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A14E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236094E74();
  sub_2360D1124();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = 0;
  v9 = sub_2360D0F44();
  v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A11F8);
  v15 = 1;
  sub_2360918B8(&qword_2563A1238, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
  swift_bridgeObjectRetain();
  sub_2360D0F5C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v14[1];
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236095098@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return LocalizedStringsRequest.LocalizedString.init(from:)(a1, a2);
}

uint64_t sub_2360950AC(_QWORD *a1)
{
  return LocalizedStringsRequest.LocalizedString.encode(to:)(a1);
}

uint64_t LocalizedStringsRequest.strings.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall LocalizedStringsRequest.init(strings:)(Swift::OpaquePointer strings)
{
  Swift::OpaquePointer *v1;

  v1->_rawValue = strings._rawValue;
}

uint64_t LocalizedStringsRequest.run()(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = v3;
  return swift_task_switch();
}

uint64_t sub_2360950EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = qword_2563A01E0;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  *(_QWORD *)(v0 + 16) = v1;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_QWORD *)(v0 + 56) = 0x1000000000000000;
  *(_BYTE *)(v0 + 64) = 1;
  *(_QWORD *)(v0 + 96) = v0 + 16;
  sub_236078628(v1, 0, 0, 0, 0, 0x1000000000000000uLL, 1);
  v5 = (char *)&dword_2563A07C0 + dword_2563A07C0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v3;
  *v3 = v0;
  v3[1] = sub_2360951F4;
  return ((uint64_t (*)(uint64_t, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v5)(v0 + 72, v0 + 96, sub_2360BFEF0, 0);
}

uint64_t sub_2360951F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_23607867C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_23609526C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(unsigned __int8 *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 112);
  if (v2 == 8)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v3 + 16);
    v6 = MEMORY[0x24BEE4AF8];
    if (v5)
    {
      v18 = *(_QWORD *)(v0 + 80);
      v19 = *(_BYTE *)(v0 + 88);
      v20 = *(_QWORD *)(v0 + 72);
      v21 = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_236095E98(0, v5, 0);
      v6 = v21;
      v7 = *(_QWORD *)(v21 + 16);
      v8 = 32 * v7 + 32;
      v9 = (uint64_t *)(v3 + 40);
      do
      {
        v10 = *(v9 - 1);
        v11 = *v9;
        v12 = v7 + 1;
        v13 = *(_QWORD *)(v21 + 24);
        swift_bridgeObjectRetain_n();
        if (v7 >= v13 >> 1)
          sub_236095E98(v13 > 1, v12, 1);
        *(_QWORD *)(v21 + 16) = v12;
        v14 = (_QWORD *)(v21 + v8);
        *v14 = v10;
        v14[1] = v11;
        v8 += 32;
        v9 += 3;
        ++v7;
        v14[2] = v10;
        v14[3] = v11;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
      v1 = v20;
      LOBYTE(v2) = v19;
      v4 = v18;
    }
    if (*(_QWORD *)(v6 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563A14F0);
      v15 = sub_2360D0ED8();
    }
    else
    {
      v15 = MEMORY[0x24BEE4B00];
    }
    v16 = *(_QWORD *)(v0 + 128);
    v22 = v15;
    sub_236095B54(v6, 1, (void (*)(uint64_t *__return_ptr, id *, _QWORD *))sub_236095498);
    if (v16)
      return swift_release();
    swift_bridgeObjectRelease();
    sub_23608DB8C(v1, v4, v2);
    v1 = v22;
  }
  **(_QWORD **)(v0 + 104) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23609544C()
{
  uint64_t v0;

  sub_23607867C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_236095498@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2360954B4()
{
  return 0x73676E69727473;
}

uint64_t sub_2360954CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x73676E69727473 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2360D1028();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_236095560()
{
  sub_236095EB4();
  return sub_2360D1148();
}

uint64_t sub_236095588()
{
  sub_236095EB4();
  return sub_2360D1154();
}

uint64_t LocalizedStringsRequest.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A14F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236095EB4();
  sub_2360D113C();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1508);
  sub_236095F3C(&qword_2563A1510, (uint64_t (*)(void))sub_236095EF8, MEMORY[0x24BEE12A0]);
  sub_2360D0FEC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t LocalizedStringsRequest.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1520);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236095EB4();
  sub_2360D1124();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1508);
    sub_236095F3C(&qword_2563A1528, (uint64_t (*)(void))sub_236095FA4, MEMORY[0x24BEE12D0]);
    sub_2360D0F5C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_236095810@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return LocalizedStringsRequest.init(from:)(a1, a2);
}

uint64_t sub_236095824(_QWORD *a1)
{
  return LocalizedStringsRequest.encode(to:)(a1);
}

unint64_t sub_236095838()
{
  return 0xD000000000000010;
}

uint64_t sub_236095854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_236096848(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23609587C()
{
  sub_236095FE8();
  return sub_2360D1148();
}

uint64_t sub_2360958A4()
{
  sub_236095FE8();
  return sub_2360D1154();
}

uint64_t LocalizedStringsResponse.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1538);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236095FE8();
  sub_2360D113C();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A11F8);
  sub_2360918B8(&qword_2563A1200, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
  sub_2360D0FEC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t LocalizedStringsResponse.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1548);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236095FE8();
  sub_2360D1124();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A11F8);
    sub_2360918B8(&qword_2563A1238, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    sub_2360D0F5C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_236095B2C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return LocalizedStringsResponse.init(from:)(a1, a2);
}

uint64_t sub_236095B40(_QWORD *a1)
{
  return LocalizedStringsResponse.encode(to:)(a1);
}

void sub_236095B54(uint64_t a1, char a2, void (*a3)(uint64_t *__return_ptr, id *, _QWORD *))
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  _QWORD *v27;
  uint64_t v28;
  void *v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  id v35;
  uint64_t v36;
  id v37[2];
  uint64_t v38;
  unint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v35 = v4;
  v7 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
  while (1)
  {
    v36 = v5;
    v14 = *(v7 - 2);
    v16 = *(v7 - 1);
    v17 = *v7;
    v41 = *(v7 - 3);
    v15 = v41;
    v42 = v14;
    v40[0] = v16;
    v40[1] = v17;
    v18 = *(_QWORD **)v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_23609C034(v15, v14);
    v21 = v18[2];
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_2360D1064();
      __break(1u);
      goto LABEL_24;
    }
    v24 = v19;
    if (v18[3] < v23)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v19 & 1) != 0)
        goto LABEL_13;
    }
    else
    {
      sub_23609C244();
      if ((v24 & 1) != 0)
        goto LABEL_13;
    }
LABEL_3:
    v8 = *(_QWORD **)v43;
    v8[(v20 >> 6) + 8] |= 1 << v20;
    v9 = (uint64_t *)(v8[6] + 16 * v20);
    *v9 = v15;
    v9[1] = v14;
    v10 = (_QWORD *)(v8[7] + 16 * v20);
    *v10 = v16;
    v10[1] = v17;
    v11 = v8[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_22;
    v8[2] = v13;
LABEL_5:
    v7 += 4;
    a2 = 1;
    --v5;
    if (v36 == 1)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_23609C59C(v23, a2 & 1);
  v25 = sub_23609C034(v15, v14);
  if ((v24 & 1) != (v26 & 1))
    goto LABEL_23;
  v20 = v25;
  if ((v24 & 1) == 0)
    goto LABEL_3;
LABEL_13:
  v27 = *(_QWORD **)v43;
  v28 = *(_QWORD *)(*(_QWORD *)v43 + 56) + 16 * v20;
  v29 = *(void **)(v28 + 8);
  v37[0] = *(id *)v28;
  v37[1] = v29;
  swift_bridgeObjectRetain();
  a3(&v38, v37, v40);
  if (!v35)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = (_QWORD *)(v27[7] + 16 * v20);
    v31 = v38;
    v32 = v39;
    swift_bridgeObjectRelease();
    *v30 = v31;
    v30[1] = v32;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  v37[0] = v35;
  v33 = v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0610);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_24:
  v38 = 0;
  v39 = 0xE000000000000000;
  sub_2360D0E48();
  sub_2360D0BE4();
  sub_2360D0E90();
  sub_2360D0BE4();
  sub_2360D0EA8();
  __break(1u);
}

uint64_t sub_236095E98(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23609647C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

unint64_t sub_236095EB4()
{
  unint64_t result;

  result = qword_2563A1500;
  if (!qword_2563A1500)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D50CC, &type metadata for LocalizedStringsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1500);
  }
  return result;
}

unint64_t sub_236095EF8()
{
  unint64_t result;

  result = qword_2563A1518;
  if (!qword_2563A1518)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for LocalizedStringsRequest.LocalizedString, &type metadata for LocalizedStringsRequest.LocalizedString);
    atomic_store(result, (unint64_t *)&qword_2563A1518);
  }
  return result;
}

uint64_t sub_236095F3C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563A1508);
    v8 = a2();
    result = MEMORY[0x23B7EBA68](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_236095FA4()
{
  unint64_t result;

  result = qword_2563A1530;
  if (!qword_2563A1530)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for LocalizedStringsRequest.LocalizedString, &type metadata for LocalizedStringsRequest.LocalizedString);
    atomic_store(result, (unint64_t *)&qword_2563A1530);
  }
  return result;
}

unint64_t sub_236095FE8()
{
  unint64_t result;

  result = qword_2563A1540;
  if (!qword_2563A1540)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D507C, &type metadata for LocalizedStringsResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1540);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedStringsRequest()
{
  return &type metadata for LocalizedStringsRequest;
}

ValueMetadata *type metadata accessor for LocalizedStringsRequest.LocalizedString()
{
  return &type metadata for LocalizedStringsRequest.LocalizedString;
}

ValueMetadata *type metadata accessor for LocalizedStringsResponse()
{
  return &type metadata for LocalizedStringsResponse;
}

ValueMetadata *type metadata accessor for LocalizedStringsResponse.CodingKeys()
{
  return &type metadata for LocalizedStringsResponse.CodingKeys;
}

uint64_t _s15AppDistribution24LocalizedStringsResponseV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2360960B0 + 4 * byte_2360D4CE5[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2360960D0 + 4 * byte_2360D4CEA[v4]))();
}

_BYTE *sub_2360960B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2360960D0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2360960D8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2360960E0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2360960E8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2360960F0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LocalizedStringsRequest.CodingKeys()
{
  return &type metadata for LocalizedStringsRequest.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for LocalizedStringsRequest.LocalizedString.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_236096158 + 4 * byte_2360D4CF4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23609618C + 4 * byte_2360D4CEF[v4]))();
}

uint64_t sub_23609618C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236096194(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23609619CLL);
  return result;
}

uint64_t sub_2360961A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360961B0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2360961B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360961BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocalizedStringsRequest.LocalizedString.CodingKeys()
{
  return &type metadata for LocalizedStringsRequest.LocalizedString.CodingKeys;
}

unint64_t sub_2360961DC()
{
  unint64_t result;

  result = qword_2563A1550;
  if (!qword_2563A1550)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4EE4, &type metadata for LocalizedStringsRequest.LocalizedString.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1550);
  }
  return result;
}

unint64_t sub_236096224()
{
  unint64_t result;

  result = qword_2563A1558;
  if (!qword_2563A1558)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4F9C, &type metadata for LocalizedStringsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1558);
  }
  return result;
}

unint64_t sub_23609626C()
{
  unint64_t result;

  result = qword_2563A1560;
  if (!qword_2563A1560)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5054, &type metadata for LocalizedStringsResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1560);
  }
  return result;
}

unint64_t sub_2360962B4()
{
  unint64_t result;

  result = qword_2563A1568;
  if (!qword_2563A1568)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4FC4, &type metadata for LocalizedStringsResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1568);
  }
  return result;
}

unint64_t sub_2360962FC()
{
  unint64_t result;

  result = qword_2563A1570;
  if (!qword_2563A1570)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4FEC, &type metadata for LocalizedStringsResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1570);
  }
  return result;
}

unint64_t sub_236096344()
{
  unint64_t result;

  result = qword_2563A1578;
  if (!qword_2563A1578)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4F0C, &type metadata for LocalizedStringsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1578);
  }
  return result;
}

unint64_t sub_23609638C()
{
  unint64_t result;

  result = qword_2563A1580;
  if (!qword_2563A1580)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4F34, &type metadata for LocalizedStringsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1580);
  }
  return result;
}

unint64_t sub_2360963D4()
{
  unint64_t result;

  result = qword_2563A1588;
  if (!qword_2563A1588)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4E54, &type metadata for LocalizedStringsRequest.LocalizedString.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1588);
  }
  return result;
}

unint64_t sub_23609641C()
{
  unint64_t result;

  result = qword_2563A1590;
  if (!qword_2563A1590)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D4E7C, &type metadata for LocalizedStringsRequest.LocalizedString.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1590);
  }
  return result;
}

uint64_t sub_236096460(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_236096604(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23609647C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A15A0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8)
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A15A8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2360D0EE4();
  __break(1u);
  return result;
}

uint64_t sub_236096604(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1598);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2360D0EE4();
  __break(1u);
  return result;
}

uint64_t sub_23609676C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002360DD5C0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_236096848(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x80000002360DD5E0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_2360D1028();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t LicenseResolutionContext.logKey.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LicenseResolutionContext.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
  v4 = sub_2360D08D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for LicenseResolutionContext()
{
  uint64_t result;

  result = qword_2563A1620;
  if (!qword_2563A1620)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t LicenseResolutionContext.init(logKey:url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char *v5;
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v5 = (char *)a4 + *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
  v6 = sub_2360D08D8();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a3, v6);
}

uint64_t sub_2360969D8()
{
  _BYTE *v0;

  if (*v0)
    return 7107189;
  else
    return 0x79654B676F6CLL;
}

uint64_t sub_236096A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360974EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236096A2C()
{
  sub_236096BC8();
  return sub_2360D1148();
}

uint64_t sub_236096A54()
{
  sub_236096BC8();
  return sub_2360D1154();
}

uint64_t LicenseResolutionContext.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A15B0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236096BC8();
  sub_2360D113C();
  v8[15] = 0;
  sub_2360D0FD4();
  if (!v1)
  {
    type metadata accessor for LicenseResolutionContext();
    v8[14] = 1;
    sub_2360D08D8();
    sub_236096E4C(&qword_2563A04D0, MEMORY[0x24BDCDAE0]);
    sub_2360D0FEC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_236096BC8()
{
  unint64_t result;

  result = qword_2563A15B8;
  if (!qword_2563A15B8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D52DC, &type metadata for LicenseResolutionContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A15B8);
  }
  return result;
}

uint64_t LicenseResolutionContext.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  v19 = a2;
  v21 = sub_2360D08D8();
  v18 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v20 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A15C0);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LicenseResolutionContext();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236096BC8();
  sub_2360D1124();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17 = a1;
  v11 = v10;
  v13 = v20;
  v12 = v21;
  v24 = 0;
  v14 = v22;
  *v11 = sub_2360D0F44();
  v11[1] = v15;
  v23 = 1;
  sub_236096E4C(&qword_2563A04F0, MEMORY[0x24BDCDB10]);
  sub_2360D0F5C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v14);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))((char *)v11 + *(int *)(v8 + 20), v13, v12);
  sub_236096E8C((uint64_t)v11, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return sub_236096ED0((uint64_t)v11);
}

uint64_t sub_236096E4C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_2360D08D8();
    result = MEMORY[0x23B7EBA68](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236096E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LicenseResolutionContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_236096ED0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LicenseResolutionContext();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_236096F0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LicenseResolutionContext.init(from:)(a1, a2);
}

uint64_t sub_236096F20(_QWORD *a1)
{
  return LicenseResolutionContext.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for LicenseResolutionContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_2360D08D8();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for LicenseResolutionContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2360D08D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for LicenseResolutionContext(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_2360D08D8();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for LicenseResolutionContext(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2360D08D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for LicenseResolutionContext(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2360D08D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for LicenseResolutionContext(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2360D08D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for LicenseResolutionContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2360971D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2360D08D8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for LicenseResolutionContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_236097260(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2360D08D8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2360972D4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2360D08D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LicenseResolutionContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_236097394 + 4 * byte_2360D5175[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2360973C8 + 4 * byte_2360D5170[v4]))();
}

uint64_t sub_2360973C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360973D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360973D8);
  return result;
}

uint64_t sub_2360973E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360973ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2360973F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360973F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LicenseResolutionContext.CodingKeys()
{
  return &type metadata for LicenseResolutionContext.CodingKeys;
}

unint64_t sub_236097418()
{
  unint64_t result;

  result = qword_2563A1658;
  if (!qword_2563A1658)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D52B4, &type metadata for LicenseResolutionContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1658);
  }
  return result;
}

unint64_t sub_236097460()
{
  unint64_t result;

  result = qword_2563A1660;
  if (!qword_2563A1660)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5224, &type metadata for LicenseResolutionContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1660);
  }
  return result;
}

unint64_t sub_2360974A8()
{
  unint64_t result;

  result = qword_2563A1668;
  if (!qword_2563A1668)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D524C, &type metadata for LicenseResolutionContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1668);
  }
  return result;
}

uint64_t sub_2360974EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t MarketplaceKitURIScheme.getter()
{
  return 0x6C7074656B72616DLL;
}

uint64_t sub_2360975E8()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for AppLibrary(0);
  v0 = swift_allocObject();
  result = sub_236098624();
  qword_2563A1670 = v0;
  return result;
}

uint64_t static AppLibrary.current.getter()
{
  if (qword_2563A01D8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t AppLibrary.installedApps.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  sub_236077F30(&qword_2563A1680, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
  sub_2360D092C();
  swift_release();
  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  return v1;
}

uint64_t sub_23609776C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = AppLibrary.installedApps.getter();
  *a1 = result;
  return result;
}

uint64_t sub_236097794@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = AppLibrary.installedApps.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2360977BC()
{
  swift_bridgeObjectRetain();
  return AppLibrary.installedApps.setter();
}

uint64_t sub_2360977E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(uint64_t))AppLibrary.installedApps.setter);
}

uint64_t type metadata accessor for AppLibrary(uint64_t a1)
{
  return sub_23608864C(a1, qword_2563A1710);
}

uint64_t AppLibrary.installedApps.setter()
{
  uint64_t KeyPath;

  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  sub_236077F30(&qword_2563A1680, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
  sub_2360D0920();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236097938(uint64_t a1, uint64_t a2)
{
  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_beginAccess();
  *(_QWORD *)(a1 + 24) = a2;
  swift_bridgeObjectRetain();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236097A04()
{
  uint64_t v0;

  return sub_236097938(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void (*AppLibrary.installedApps.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x38uLL);
  *a1 = v4;
  v4[3] = v2;
  sub_2360D0C74();
  v4[4] = sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC15AppDistribution10AppLibrary___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_236077F30(&qword_2563A1680, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
  sub_2360D092C();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_2360D0944();
  swift_release();
  swift_beginAccess();
  return sub_236097B6C;
}

void sub_236097B6C(_QWORD **a1)
{
  sub_2360985AC(a1);
}

uint64_t AppLibrary.installingApps.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  sub_236077F30(&qword_2563A1680, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
  sub_2360D092C();
  swift_release();
  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  return v1;
}

uint64_t sub_236097C80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = AppLibrary.installingApps.getter();
  *a1 = result;
  return result;
}

uint64_t sub_236097CA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = AppLibrary.installingApps.getter();
  *a1 = result;
  return result;
}

uint64_t sub_236097CD0()
{
  swift_bridgeObjectRetain();
  return AppLibrary.installingApps.setter();
}

uint64_t sub_236097CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(uint64_t))AppLibrary.installingApps.setter);
}

uint64_t keypath_setTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6;

  v6 = swift_bridgeObjectRetain();
  return a5(v6);
}

uint64_t AppLibrary.installingApps.setter()
{
  uint64_t KeyPath;

  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  sub_236077F30(&qword_2563A1680, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
  sub_2360D0920();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236097E64(uint64_t a1, uint64_t a2)
{
  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_beginAccess();
  *(_QWORD *)(a1 + 32) = a2;
  swift_bridgeObjectRetain();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236097F30()
{
  uint64_t v0;

  return sub_236097E64(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void (*AppLibrary.installingApps.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x38uLL);
  *a1 = v4;
  v4[3] = v2;
  sub_2360D0C74();
  v4[4] = sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC15AppDistribution10AppLibrary___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_236077F30(&qword_2563A1680, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
  sub_2360D092C();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_2360D0944();
  swift_release();
  swift_beginAccess();
  return sub_236098098;
}

void sub_236098098(_QWORD **a1)
{
  sub_2360985AC(a1);
}

uint64_t AppLibrary.isLoading.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  sub_236077F30(&qword_2563A1680, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
  sub_2360D092C();
  swift_release();
  swift_beginAccess();
  v1 = *(unsigned __int8 *)(v0 + 40);
  swift_release();
  return v1;
}

uint64_t sub_2360981A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = AppLibrary.isLoading.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2360981D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = AppLibrary.isLoading.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2360981FC()
{
  return AppLibrary.isLoading.setter();
}

uint64_t sub_236098220()
{
  return AppLibrary.isLoading.setter();
}

uint64_t AppLibrary.isLoading.setter()
{
  uint64_t KeyPath;

  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  sub_236077F30(&qword_2563A1680, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
  sub_2360D0920();
  swift_release();
  return swift_release();
}

uint64_t sub_236098378(uint64_t a1, char a2)
{
  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_beginAccess();
  *(_BYTE *)(a1 + 40) = a2 & 1;
  return swift_release();
}

uint64_t sub_236098434()
{
  uint64_t v0;

  return sub_236098378(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void (*AppLibrary.isLoading.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x38uLL);
  *a1 = v4;
  v4[3] = v2;
  sub_2360D0C74();
  v4[4] = sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC15AppDistribution10AppLibrary___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_236077F30(&qword_2563A1680, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
  sub_2360D092C();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_2360D0944();
  swift_release();
  swift_beginAccess();
  return sub_2360985A0;
}

void sub_2360985A0(_QWORD **a1)
{
  sub_2360985AC(a1);
}

void sub_2360985AC(_QWORD **a1)
{
  _QWORD *v1;

  v1 = *a1;
  swift_endAccess();
  *v1 = v1[3];
  swift_getKeyPath();
  sub_2360D0938();
  swift_release();
  swift_release();
  free(v1);
}

uint64_t sub_236098624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;

  v1 = v0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + 16) = sub_2360A0890(MEMORY[0x24BEE4AF8]);
  if ((v2 & 0xC000000000000000) != 0)
  {
    if (sub_2360D0EB4())
    {
      *(_QWORD *)(v1 + 24) = sub_23609F4C0(MEMORY[0x24BEE4AF8]);
    }
    else
    {
      v3 = MEMORY[0x24BEE4B08];
      *(_QWORD *)(v1 + 24) = MEMORY[0x24BEE4B08];
      if ((v2 & 0xC000000000000000) == 0)
        goto LABEL_3;
    }
    if (sub_2360D0EB4())
      v3 = sub_23609F4C0(MEMORY[0x24BEE4AF8]);
    else
      v3 = MEMORY[0x24BEE4B08];
  }
  else
  {
    v3 = MEMORY[0x24BEE4B08];
    *(_QWORD *)(v1 + 24) = MEMORY[0x24BEE4B08];
  }
LABEL_3:
  *(_QWORD *)(v1 + 32) = v3;
  *(_BYTE *)(v1 + 40) = 1;
  sub_2360D0950();
  sub_2360D0AE8();
  v4 = (void *)sub_2360D0ADC();
  swift_retain();
  sub_2360D0AC4();

  swift_release();
  return v1;
}

uint64_t sub_236098720(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v21 = a2;
  v3 = sub_2360D0B78();
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2360D0B54();
  v22 = *(_QWORD *)(v6 - 8);
  v23 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2360D0B3C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2360D0B0C();
  swift_bridgeObjectRetain();
  v13 = sub_2360D0B24();
  v14 = sub_2360D0D1C();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v15 = 134217984;
    aBlock[0] = *(_QWORD *)(a1 + 16);
    sub_2360D0D88();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_236065000, v13, v14, "Received %ld apps", v15, 0xCu);
    MEMORY[0x23B7EBB1C](v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_23608E60C();
  v16 = (void *)sub_2360D0D4C();
  sub_2360D0B48();
  v17 = swift_allocObject();
  v18 = v21;
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = v18;
  aBlock[4] = sub_23609F7C4;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236099BB8;
  aBlock[3] = &block_descriptor_6;
  v19 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2360D0B6C();
  MEMORY[0x23B7EB288](0, v5, v8, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v23);
  return swift_release();
}

uint64_t sub_2360989C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(void (*)(char *, uint64_t), unint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t result;
  int64_t v34;
  __int128 v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t KeyPath;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  char *v60;
  __int128 v61;
  char *v62;
  uint64_t v63;
  int64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  _OWORD v77[4];
  _OWORD v78[3];
  uint64_t v79;

  v70 = sub_2360D0B3C();
  v69 = *(_QWORD *)(v70 - 8);
  v4 = MEMORY[0x24BDAC7A8](v70);
  v72 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v60 = (char *)&v59 - v6;
  v7 = sub_2360D0AAC();
  v71 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v66 = (void (*)(char *, uint64_t))((char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v11 = (void (*)(char *, uint64_t))((char *)&v59 - v10);
  v73 = 0;
  v12 = sub_2360D0C74();
  v59 = sub_2360D0C68();
  v74 = v12;
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v14 = a2 + 16;
    v15 = a1 + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80));
    v67 = *(_QWORD *)(v71 + 72);
    v16 = *(void (**)(void (*)(char *, uint64_t), unint64_t, uint64_t))(v71 + 16);
    v65 = a1;
    swift_bridgeObjectRetain();
    v17 = MEMORY[0x24BEE4B08];
    do
    {
      v16(v11, v15, v7);
      v21 = sub_2360D0A40();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v77[0] = v17;
      sub_23609CD78(v21, isUniquelyReferenced_nonNull_native);
      v17 = *(_QWORD *)&v77[0];
      swift_bridgeObjectRelease();
      v23 = sub_2360D0A40();
      swift_beginAccess();
      v24 = *(_QWORD *)v14;
      if (*(_QWORD *)(*(_QWORD *)v14 + 16) && (v25 = sub_23609C098(v23), (v26 & 1) != 0))
      {
        v19 = *(_QWORD *)(*(_QWORD *)(v24 + 56) + 8 * v25);
        swift_endAccess();
        swift_retain_n();
        sub_2360806BC(v11);
      }
      else
      {
        swift_endAccess();
        v18 = (uint64_t)v66;
        v16(v66, (unint64_t)v11, v7);
        v19 = sub_2360844EC(v18);
        v20 = swift_retain();
        sub_236099488(v20);
      }
      swift_release();
      AppLibrary.updateInstallState(forUpdated:)(v19);
      swift_release();
      (*(void (**)(_QWORD, uint64_t))(v71 + 8))(v11, v7);
      v15 += v67;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = MEMORY[0x24BEE4B08];
  }
  swift_beginAccess();
  v27 = *(_QWORD *)(a2 + 16);
  v28 = *(_QWORD *)(v27 + 64);
  v63 = v27 + 64;
  v29 = 1 << *(_BYTE *)(v27 + 32);
  if (v29 < 64)
    v30 = ~(-1 << v29);
  else
    v30 = -1;
  v31 = v30 & v28;
  v64 = (unint64_t)(v29 + 63) >> 6;
  v32 = (void (*)(char *, uint64_t))(v17 + 56);
  v62 = &v76;
  v71 = v27;
  result = swift_bridgeObjectRetain();
  v34 = 0;
  *(_QWORD *)&v35 = 134217984;
  v61 = v35;
  v65 = MEMORY[0x24BEE4AE0] + 8;
  v68 = a2;
  v67 = v17;
  v66 = (void (*)(char *, uint64_t))(v17 + 56);
LABEL_17:
  while (v31)
  {
    v37 = __clz(__rbit64(v31));
    v31 &= v31 - 1;
    v38 = v37 | (v34 << 6);
LABEL_32:
    v42 = *(_QWORD *)(*(_QWORD *)(v71 + 56) + 8 * v38);
    if (!*(_QWORD *)(v17 + 16))
      goto LABEL_39;
    v43 = *(_QWORD *)(v42 + 16);
    result = sub_2360D10AC();
    v44 = -1 << *(_BYTE *)(v17 + 32);
    v45 = result & ~v44;
    if (((*(_QWORD *)((char *)v32 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) == 0)
      goto LABEL_39;
    v46 = *(_QWORD *)(v17 + 48);
    if (*(_QWORD *)(v46 + 8 * v45) != v43)
    {
      v47 = ~v44;
      while (1)
      {
        v45 = (v45 + 1) & v47;
        if (((*(_QWORD *)((char *)v32 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) == 0)
          break;
        if (*(_QWORD *)(v46 + 8 * v45) == v43)
          goto LABEL_17;
      }
LABEL_39:
      swift_retain();
      sub_2360D0B0C();
      swift_retain_n();
      v48 = sub_2360D0B24();
      v49 = sub_2360D0D10();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v50 = v61;
        sub_2360D0C68();
        sub_2360D0C44();
        if ((swift_task_isCurrentExecutor() & 1) == 0)
          swift_task_reportUnexpectedExecutor();
        v51 = *(_QWORD *)(v42 + 16);
        swift_release();
        swift_release();
        v75 = v51;
        sub_2360D0D88();
        swift_release();
        _os_log_impl(&dword_236065000, v48, v49, "Known app %llu is not installed", v50, 0xCu);
        MEMORY[0x23B7EBB1C](v50, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v69 + 8))(v72, v70);
      v79 = 0;
      memset(v78, 0, sizeof(v78));
      sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      KeyPath = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](KeyPath);
      *(&v59 - 2) = v42;
      *(&v59 - 1) = (uint64_t)v78;
      v75 = v42;
      sub_236077F30((unint64_t *)&qword_2563A0A78, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
      v53 = v73;
      sub_2360D0920();
      swift_release();
      swift_release();
      memset(v77, 0, sizeof(v77));
      sub_2360D0C68();
      sub_2360D0C44();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      v36 = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](v36);
      *(&v59 - 2) = v42;
      *(&v59 - 1) = (uint64_t)v77;
      v75 = v42;
      sub_2360D0920();
      v73 = v53;
      swift_release();
      swift_release();
      a2 = v68;
      AppLibrary.updateInstallState(forUpdated:)(v42);
      result = swift_release();
      v17 = v67;
      v32 = v66;
    }
  }
  if (__OFADD__(v34++, 1))
  {
    __break(1u);
LABEL_58:
    __break(1u);
    return result;
  }
  if (v34 >= v64)
    goto LABEL_52;
  v40 = *(_QWORD *)(v63 + 8 * v34);
  if (v40)
  {
LABEL_31:
    v31 = (v40 - 1) & v40;
    v38 = __clz(__rbit64(v40)) + (v34 << 6);
    goto LABEL_32;
  }
  v41 = v34 + 1;
  if (v34 + 1 >= v64)
    goto LABEL_52;
  v40 = *(_QWORD *)(v63 + 8 * v41);
  if (v40)
    goto LABEL_30;
  v41 = v34 + 2;
  if (v34 + 2 >= v64)
    goto LABEL_52;
  v40 = *(_QWORD *)(v63 + 8 * v41);
  if (v40)
    goto LABEL_30;
  v41 = v34 + 3;
  if (v34 + 3 >= v64)
    goto LABEL_52;
  v40 = *(_QWORD *)(v63 + 8 * v41);
  if (v40)
  {
LABEL_30:
    v34 = v41;
    goto LABEL_31;
  }
  v41 = v34 + 4;
  if (v34 + 4 < v64)
  {
    v40 = *(_QWORD *)(v63 + 8 * v41);
    if (!v40)
    {
      while (1)
      {
        v34 = v41 + 1;
        if (__OFADD__(v41, 1))
          goto LABEL_58;
        if (v34 >= v64)
          goto LABEL_52;
        v40 = *(_QWORD *)(v63 + 8 * v34);
        ++v41;
        if (v40)
          goto LABEL_31;
      }
    }
    goto LABEL_30;
  }
LABEL_52:
  swift_release();
  v54 = v60;
  swift_bridgeObjectRelease();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v55 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v55);
  *(&v59 - 2) = a2;
  *((_BYTE *)&v59 - 8) = 0;
  v75 = a2;
  sub_236077F30(&qword_2563A1680, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
  sub_2360D0920();
  swift_release();
  swift_release();
  sub_2360D0B0C();
  v56 = sub_2360D0B24();
  v57 = sub_2360D0D1C();
  if (os_log_type_enabled(v56, v57))
  {
    v58 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v58 = 0;
    _os_log_impl(&dword_236065000, v56, v57, "Finished updating catalog", v58, 2u);
    MEMORY[0x23B7EBB1C](v58, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v69 + 8))(v54, v70);
  return swift_release();
}

uint64_t sub_236099488(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0BA8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2360D0C74();
  sub_2360D0C68();
  v7 = MEMORY[0x24BEE6930];
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v8 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = 0x8000000000000000;
  sub_23609DD7C(a1, v8, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v1 + 16) = v14;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_2360D0C80();
  v10 = sub_2360D0C98();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 0, 1, v10);
  swift_retain();
  swift_retain();
  v11 = sub_2360D0C68();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v11;
  v12[3] = v7;
  v12[4] = a1;
  v12[5] = v2;
  sub_23609A0F4((uint64_t)v6, (uint64_t)&unk_2563A1858, (uint64_t)v12);
  swift_release();
  sub_236078B4C((uint64_t)v6, &qword_2563A0BA8);
  return swift_release();
}

uint64_t AppLibrary.updateInstallState(forUpdated:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v4;
  uint64_t v5;

  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  if (AppLibrary.App.isInstalled.getter())
  {
    swift_retain();
    sub_2360D0C68();
    sub_2360D0C44();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    swift_getKeyPath();
    sub_236077F30(&qword_2563A1680, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
    sub_2360D092C();
    swift_release();
    v5 = v1;
    swift_getKeyPath();
    sub_2360D0944();
    swift_release();
    swift_beginAccess();
    sub_23609DEB4(&v4, a1);
  }
  else
  {
    sub_2360D0C68();
    sub_2360D0C44();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    swift_getKeyPath();
    sub_236077F30(&qword_2563A1680, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
    sub_2360D092C();
    swift_release();
    v5 = v1;
    swift_getKeyPath();
    sub_2360D0944();
    swift_release();
    swift_beginAccess();
    sub_23609E10C(a1);
  }
  swift_endAccess();
  swift_release();
  v5 = v1;
  swift_getKeyPath();
  sub_2360D0938();
  swift_release();
  swift_release();
  if (AppLibrary.App.isInstalling.getter())
  {
    swift_retain();
    sub_2360D0C68();
    sub_2360D0C44();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    swift_getKeyPath();
    v5 = v1;
    sub_236077F30(&qword_2563A1680, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
    sub_2360D092C();
    swift_release();
    v5 = v1;
    swift_getKeyPath();
    sub_2360D0944();
    swift_release();
    swift_beginAccess();
    sub_23609DEB4(&v4, a1);
  }
  else
  {
    sub_2360D0C68();
    sub_2360D0C44();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    swift_getKeyPath();
    v5 = v1;
    sub_236077F30(&qword_2563A1680, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
    sub_2360D092C();
    swift_release();
    v5 = v1;
    swift_getKeyPath();
    sub_2360D0944();
    swift_release();
    swift_beginAccess();
    sub_23609E10C(a1);
  }
  swift_endAccess();
  swift_release();
  v5 = v1;
  swift_getKeyPath();
  sub_2360D0938();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_236099BB8(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t AppLibrary.app(forAppleItemID:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD v12[4];
  _OWORD v13[3];
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0A88);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_beginAccess();
  v6 = *(_QWORD *)(v1 + 16);
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_23609C098(a1), (v8 & 1) != 0))
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
    swift_endAccess();
    swift_retain();
  }
  else
  {
    swift_endAccess();
    v14 = 0;
    memset(v13, 0, sizeof(v13));
    v10 = type metadata accessor for MarketplaceKitError();
    memset(v12, 0, sizeof(v12));
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
    type metadata accessor for AppLibrary.App();
    swift_allocObject();
    v9 = sub_23607E484(a1, (uint64_t)v13, (uint64_t)v12, (uint64_t)v5);
    sub_236099488(v9);
  }
  swift_release();
  return v9;
}

uint64_t sub_236099D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[2] = a4;
  v5[3] = a5;
  v6 = sub_2360D09BC();
  v5[4] = v6;
  v5[5] = *(_QWORD *)(v6 - 8);
  v5[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1868);
  v5[7] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1870);
  v5[8] = v7;
  v5[9] = *(_QWORD *)(v7 - 8);
  v5[10] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1878);
  v5[11] = v8;
  v5[12] = *(_QWORD *)(v8 - 8);
  v5[13] = swift_task_alloc();
  v5[14] = sub_2360D0C74();
  v5[15] = sub_2360D0C68();
  v5[16] = sub_2360D0C44();
  v5[17] = v9;
  return swift_task_switch();
}

uint64_t sub_236099E98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[9];
  v1 = v0[10];
  v3 = v0[8];
  sub_23607E8EC();
  sub_2360D0CBC();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[18] = sub_2360D0C68();
  v4 = (_QWORD *)swift_task_alloc();
  v0[19] = v4;
  *v4 = v0;
  v4[1] = sub_236099F54;
  return sub_2360D0CC8();
}

uint64_t sub_236099F54()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_236099FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(void (**)(char *, uint64_t))(v0 + 48);
    v6 = *(_QWORD *)(v0 + 16);
    (*(void (**)(void (*)(char *, uint64_t), uint64_t, uint64_t))(v3 + 32))(v5, v1, v2);
    sub_23607EB4C(v5);
    AppLibrary.updateInstallState(forUpdated:)(v6);
    (*(void (**)(_QWORD, uint64_t))(v3 + 8))(v5, v2);
    *(_QWORD *)(v0 + 144) = sub_2360D0C68();
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v7;
    *v7 = v0;
    v7[1] = sub_236099F54;
    return sub_2360D0CC8();
  }
}

uint64_t sub_23609A0F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0BA8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236078AC4(a1, (uint64_t)v8, &qword_2563A0BA8);
  v9 = sub_2360D0C98();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_236078B4C((uint64_t)v8, &qword_2563A0BA8);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_2360D0C44();
      v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_2360D0C8C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t AppLibrary.InstallationRequest.alternativeDistributionPackageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2360D08D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AppLibrary.InstallationRequest.alternativeDistributionPackageURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2360D08D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AppLibrary.InstallationRequest.alternativeDistributionPackageURL.modify())()
{
  return nullsub_1;
}

uint64_t AppLibrary.InstallationRequest.account.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AppLibrary.InstallationRequest(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppLibrary.InstallationRequest.account.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for AppLibrary.InstallationRequest(0) + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AppLibrary.InstallationRequest.account.modify())()
{
  type metadata accessor for AppLibrary.InstallationRequest(0);
  return nullsub_1;
}

uint64_t AppLibrary.InstallationRequest.installVerificationToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AppLibrary.InstallationRequest(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppLibrary.InstallationRequest.installVerificationToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for AppLibrary.InstallationRequest(0) + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AppLibrary.InstallationRequest.installVerificationToken.modify())()
{
  type metadata accessor for AppLibrary.InstallationRequest(0);
  return nullsub_1;
}

uint64_t AppLibrary.InstallationRequest.appShareURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AppLibrary.InstallationRequest(0);
  return sub_236078AC4(v1 + *(int *)(v3 + 28), a1, &qword_2563A0490);
}

uint64_t AppLibrary.InstallationRequest.appShareURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AppLibrary.InstallationRequest(0) + 28);
  return sub_23609E2AC(a1, v3);
}

uint64_t (*AppLibrary.InstallationRequest.appShareURL.modify())()
{
  type metadata accessor for AppLibrary.InstallationRequest(0);
  return nullsub_1;
}

uint64_t AppLibrary.InstallationRequest.init(alternativeDistributionPackageURL:account:installVerificationToken:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (int *)type metadata accessor for AppLibrary.InstallationRequest(0);
  v13 = a6 + v12[7];
  v14 = sub_2360D08D8();
  v15 = *(_QWORD *)(v14 - 8);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v19(v13, 1, 1, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(a6, a1, v14);
  v16 = (_QWORD *)(a6 + v12[5]);
  *v16 = a2;
  v16[1] = a3;
  v17 = (_QWORD *)(a6 + v12[6]);
  *v17 = a4;
  v17[1] = a5;
  sub_236078B4C(v13, &qword_2563A0490);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v19)(v13, 1, 1, v14);
}

uint64_t AppLibrary.requestAppInstallation(for:account:installVerificationToken:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v5[7] = type metadata accessor for AppInstallRequest();
  v5[8] = swift_task_alloc();
  v6 = sub_2360D08D8();
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = type metadata accessor for AppLibrary.InstallationRequest(0);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23609A69C()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v10;
  int *v11;
  _QWORD *v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;

  v1 = v0[13];
  v3 = v0[11];
  v2 = (int *)v0[12];
  v5 = v0[9];
  v4 = v0[10];
  v7 = (int *)v0[7];
  v6 = v0[8];
  v31 = v0[5];
  v32 = v0[6];
  v29 = v0[3];
  v30 = v0[4];
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v34 = v0[14];
  v33(v3, v0[2], v5);
  v8 = v1 + v2[7];
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v9(v8, 1, 1, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, v3, v5);
  v10 = (_QWORD *)(v1 + v2[5]);
  *v10 = v29;
  v10[1] = v30;
  v11 = v2;
  v12 = (_QWORD *)(v1 + v2[6]);
  *v12 = v31;
  v12[1] = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_236078B4C(v8, &qword_2563A0490);
  v13 = v5;
  v9(v8, 1, 1, v5);
  v14 = v9;
  sub_236078854(v1, v34, type metadata accessor for AppLibrary.InstallationRequest);
  v33(v6 + v7[5], v34, v13);
  v15 = v6 + v7[9];
  v16 = *MEMORY[0x24BDDAB98];
  v17 = sub_2360D09A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  v18 = v11[5];
  v19 = (uint64_t *)(v34 + v11[6]);
  v21 = *v19;
  v20 = v19[1];
  v23 = *(_QWORD *)(v34 + v18);
  v22 = *(_QWORD *)(v34 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2360D0908();
  v24 = (_QWORD *)(v6 + v7[6]);
  *v24 = 0;
  v24[1] = 0;
  v25 = (_QWORD *)(v6 + v7[7]);
  *v25 = v21;
  v25[1] = v20;
  v26 = (_QWORD *)(v6 + v7[8]);
  *v26 = v23;
  v26[1] = v22;
  *(_BYTE *)(v6 + v7[10]) = 0;
  v14(v6 + v7[11], 1, 1, v13);
  v14(v6 + v7[12], 1, 1, v13);
  v27 = (_QWORD *)swift_task_alloc();
  v0[15] = v27;
  *v27 = v0;
  v27[1] = sub_23609A8C0;
  return AppInstallRequest.request()();
}

uint64_t sub_23609A8C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23609A924()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  sub_236078270(*(_QWORD *)(v0 + 64), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  sub_236078270(v1, type metadata accessor for AppLibrary.InstallationRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23609A9A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  sub_236078270(*(_QWORD *)(v0 + 64), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  sub_236078270(v1, type metadata accessor for AppLibrary.InstallationRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AppLibrary.requestAppInstallation(_:)(uint64_t a1)
{
  _QWORD *v1;

  v1[2] = a1;
  v1[3] = type metadata accessor for AppInstallRequest();
  v1[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23609AA80()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v21;

  v2 = (int *)v0[3];
  v1 = v0[4];
  v3 = v0[2];
  v4 = v1 + v2[5];
  v5 = sub_2360D08D8();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v3, v5);
  v7 = v1 + v2[9];
  v8 = *MEMORY[0x24BDDAB98];
  v9 = sub_2360D09A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = type metadata accessor for AppLibrary.InstallationRequest(0);
  v11 = *(int *)(v10 + 20);
  v12 = (uint64_t *)(v3 + *(int *)(v10 + 24));
  v14 = *v12;
  v13 = v12[1];
  v16 = *(_QWORD *)(v3 + v11);
  v15 = *(_QWORD *)(v3 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2360D0908();
  v17 = (_QWORD *)(v1 + v2[6]);
  *v17 = 0;
  v17[1] = 0;
  v18 = (_QWORD *)(v1 + v2[7]);
  *v18 = v14;
  v18[1] = v13;
  v19 = (_QWORD *)(v1 + v2[8]);
  *v19 = v16;
  v19[1] = v15;
  *(_BYTE *)(v1 + v2[10]) = 0;
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v20(v1 + v2[11], 1, 1, v5);
  v20(v1 + v2[12], 1, 1, v5);
  v21 = (_QWORD *)swift_task_alloc();
  v0[5] = v21;
  *v21 = v0;
  v21[1] = sub_23609ABE0;
  return AppInstallRequest.request()();
}

uint64_t sub_23609ABE0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23609AC44()
{
  uint64_t v0;

  sub_236078270(*(_QWORD *)(v0 + 32), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23609AC8C()
{
  uint64_t v0;

  sub_236078270(*(_QWORD *)(v0 + 32), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AppLibrary.requestAppInstallationFromBrowser(for:referrer:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_2360D08D8();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  type metadata accessor for LinkMetadata();
  v2[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A16A0);
  v2[9] = swift_task_alloc();
  v4 = type metadata accessor for AppInstallRequest();
  v2[10] = v4;
  v2[11] = *(_QWORD *)(v4 - 8);
  v2[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23609ADB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  _QWORD *v11;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 32);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 40) + 16);
  v9(v5, *(_QWORD *)(v0 + 24), v7);
  v9(v6, v8, v7);
  sub_23607C7CC(v5, v6, v4);
  sub_23606BE18(v4, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_236078B4C(*(_QWORD *)(v0 + 72), &qword_2563A16A0);
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_236078854(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 96), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v11;
    *v11 = v0;
    v11[1] = sub_23609AF5C;
    return AppInstallRequest.request()();
  }
}

uint64_t sub_23609AF5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23609AFC0()
{
  uint64_t v0;

  sub_236078270(*(_QWORD *)(v0 + 96), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23609B040()
{
  uint64_t v0;

  sub_236078270(*(_QWORD *)(v0 + 96), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AppLibrary.requestAppUpdate(_:)(uint64_t a1)
{
  _QWORD *v1;

  v1[2] = a1;
  v1[3] = type metadata accessor for AppInstallRequest();
  v1[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23609B118()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v21;

  v2 = (int *)v0[3];
  v1 = v0[4];
  v3 = v0[2];
  v4 = v1 + v2[5];
  v5 = sub_2360D08D8();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v3, v5);
  v7 = v1 + v2[9];
  v8 = *MEMORY[0x24BDDABA0];
  v9 = sub_2360D09A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = type metadata accessor for AppLibrary.InstallationRequest(0);
  v11 = *(int *)(v10 + 20);
  v12 = (uint64_t *)(v3 + *(int *)(v10 + 24));
  v14 = *v12;
  v13 = v12[1];
  v16 = *(_QWORD *)(v3 + v11);
  v15 = *(_QWORD *)(v3 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2360D0908();
  v17 = (_QWORD *)(v1 + v2[6]);
  *v17 = 0;
  v17[1] = 0;
  v18 = (_QWORD *)(v1 + v2[7]);
  *v18 = v14;
  v18[1] = v13;
  v19 = (_QWORD *)(v1 + v2[8]);
  *v19 = v16;
  v19[1] = v15;
  *(_BYTE *)(v1 + v2[10]) = 0;
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v20(v1 + v2[11], 1, 1, v5);
  v20(v1 + v2[12], 1, 1, v5);
  v21 = (_QWORD *)swift_task_alloc();
  v0[5] = v21;
  *v21 = v0;
  v21[1] = sub_23609B278;
  return AppInstallRequest.request()();
}

uint64_t sub_23609B278()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t AppLibrary.requestAppUpdate(for:account:installVerificationToken:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v5[7] = type metadata accessor for AppInstallRequest();
  v5[8] = swift_task_alloc();
  v6 = sub_2360D08D8();
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = type metadata accessor for AppLibrary.InstallationRequest(0);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23609B39C()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v10;
  int *v11;
  _QWORD *v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;

  v1 = v0[13];
  v3 = v0[11];
  v2 = (int *)v0[12];
  v5 = v0[9];
  v4 = v0[10];
  v7 = (int *)v0[7];
  v6 = v0[8];
  v31 = v0[5];
  v32 = v0[6];
  v29 = v0[3];
  v30 = v0[4];
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v34 = v0[14];
  v33(v3, v0[2], v5);
  v8 = v1 + v2[7];
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v9(v8, 1, 1, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, v3, v5);
  v10 = (_QWORD *)(v1 + v2[5]);
  *v10 = v29;
  v10[1] = v30;
  v11 = v2;
  v12 = (_QWORD *)(v1 + v2[6]);
  *v12 = v31;
  v12[1] = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_236078B4C(v8, &qword_2563A0490);
  v13 = v5;
  v9(v8, 1, 1, v5);
  v14 = v9;
  sub_236078854(v1, v34, type metadata accessor for AppLibrary.InstallationRequest);
  v33(v6 + v7[5], v34, v13);
  v15 = v6 + v7[9];
  v16 = *MEMORY[0x24BDDABA0];
  v17 = sub_2360D09A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  v18 = v11[5];
  v19 = (uint64_t *)(v34 + v11[6]);
  v21 = *v19;
  v20 = v19[1];
  v23 = *(_QWORD *)(v34 + v18);
  v22 = *(_QWORD *)(v34 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2360D0908();
  v24 = (_QWORD *)(v6 + v7[6]);
  *v24 = 0;
  v24[1] = 0;
  v25 = (_QWORD *)(v6 + v7[7]);
  *v25 = v21;
  v25[1] = v20;
  v26 = (_QWORD *)(v6 + v7[8]);
  *v26 = v23;
  v26[1] = v22;
  *(_BYTE *)(v6 + v7[10]) = 0;
  v14(v6 + v7[11], 1, 1, v13);
  v14(v6 + v7[12], 1, 1, v13);
  v27 = (_QWORD *)swift_task_alloc();
  v0[15] = v27;
  *v27 = v0;
  v27[1] = sub_23609B5C0;
  return AppInstallRequest.request()();
}

uint64_t sub_23609B5C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t AppLibrary.didAuthenticate(account:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch();
}

uint64_t sub_23609B63C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 56);
  v2 = qword_2563A01E0;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 24) = v1;
  *(_BYTE *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = v0 + 16;
  sub_2360781A0();
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2563A0728 + dword_2563A0728);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_23609B710;
  return v5((uint64_t)v5, v0 + 40, (uint64_t)sub_2360BBDFC, 0);
}

uint64_t sub_23609B710()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    sub_2360781AC();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_23609B78C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23609B794()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 72);
  sub_2360781AC();

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AppLibrary.signalAccountHasAuthenticated(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch();
}

uint64_t sub_23609B7F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 56);
  v2 = qword_2563A01E0;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 24) = v1;
  *(_BYTE *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = v0 + 16;
  sub_2360781A0();
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2563A0728 + dword_2563A0728);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_23609B8CC;
  return v5((uint64_t)v5, v0 + 40, (uint64_t)sub_2360BBDFC, 0);
}

uint64_t sub_23609B8CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    sub_2360781AC();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t AppLibrary.searchTerritory.getter()
{
  return swift_task_switch();
}

uint64_t sub_23609B95C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);

  if (qword_2563A01E0 != -1)
    swift_once();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2563A06F0 + dword_2563A06F0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_23609BA0C;
  return v3(v0 + 16, v0 + 40, (uint64_t)sub_2360C2594, 0);
}

uint64_t sub_23609BA0C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23609BA70()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  int v3;
  void *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(unsigned __int8 *)(v0 + 32);
  if (v3 != 7)
  {
    type metadata accessor for MarketplaceKitError();
    sub_236077F30((unint64_t *)&qword_2563A0280, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v4 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_23608DB8C(v2, v1, v3);

    v2 = 0;
    v1 = 0;
  }
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23609BB3C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t AppLibrary.setSearchTerritory(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for SetPublicDataRequest(0);
  v2[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23609BBCC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = v0[3];
  v2 = (_QWORD *)v0[4];
  *v2 = v0[2];
  v2[1] = v1;
  type metadata accessor for SetPublicDataRequest.Request(0);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  *v3 = v0;
  v3[1] = sub_23609BC48;
  return SetPublicDataRequest.run()();
}

uint64_t sub_23609BC48()
{
  void *v0;

  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_23609BCB4()
{
  uint64_t v0;

  sub_236078270(*(_QWORD *)(v0 + 32), type metadata accessor for SetPublicDataRequest);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AppLibrary.requestLicenseRenewal(appleItemIDs:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_23609BD10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 48);
  v2 = qword_2563A01E0;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  *(_QWORD *)(v0 + 40) = v0 + 16;
  sub_2360781A0();
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2563A0728 + dword_2563A0728);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_23609BDE8;
  return v5((uint64_t)v5, v0 + 40, (uint64_t)sub_2360BBDFC, 0);
}

uint64_t sub_23609BDE8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    sub_2360781AC();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_23609BE64()
{
  uint64_t v0;

  sub_2360781AC();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AppLibrary.requestAppUninstallation(for:)(Swift::UInt64 a1)
{
  sub_2360D0EA8();
  __break(1u);
}

uint64_t static AppLibrary.UninstallError.== infix(_:_:)()
{
  return 1;
}

uint64_t AppLibrary.UninstallError.hash(into:)()
{
  return sub_2360D10C4();
}

uint64_t AppLibrary.UninstallError.hashValue.getter()
{
  sub_2360D10B8();
  sub_2360D10C4();
  return sub_2360D10F4();
}

uint64_t AppLibrary.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC15AppDistribution10AppLibrary___observationRegistrar;
  v2 = sub_2360D095C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AppLibrary.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC15AppDistribution10AppLibrary___observationRegistrar;
  v2 = sub_2360D095C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

unint64_t sub_23609C034(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2360D10B8();
  sub_2360D0BD8();
  v4 = sub_2360D10F4();
  return sub_23609C0C8(a1, a2, v4);
}

unint64_t sub_23609C098(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2360D10AC();
  return sub_23609C1A8(a1, v2);
}

unint64_t sub_23609C0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2360D1028() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2360D1028() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_23609C1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

void *sub_23609C244()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A14F0);
  v2 = *v0;
  v3 = sub_2360D0EC0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23609C3FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1880);
  v2 = *v0;
  v3 = sub_2360D0EC0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_retain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23609C59C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A14F0);
  v42 = a2;
  v6 = sub_2360D0ECC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2360D10B8();
    sub_2360D0BD8();
    result = sub_2360D10F4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23609C8C0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1880);
  result = sub_2360D0ECC();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_retain();
      result = sub_2360D10AC();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23609CB74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1888);
    v2 = sub_2360D0E30();
    v14 = v2;
    sub_2360D0DDC();
    if (sub_2360D0E00())
    {
      type metadata accessor for AppLibrary.App();
      do
      {
        swift_dynamicCast();
        v2 = v14;
        if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
        {
          sub_23609CF98();
          v2 = v14;
        }
        sub_2360D10B8();
        sub_2360D10DC();
        result = sub_2360D10F4();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v9 = 0;
          v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v11 = v7 == v10;
            if (v7 == v10)
              v7 = 0;
            v9 |= v11;
            v12 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_2360D0E00());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

uint64_t sub_23609CD78(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v5 = *v2;
  v6 = sub_2360D10AC();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  v9 = v5 + 56;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
    goto LABEL_9;
  v10 = *(_QWORD *)(v5 + 48);
  if (*(_QWORD *)(v10 + 8 * v8) == a1)
  {
    v11 = 0;
    v12 = 1;
    goto LABEL_10;
  }
  v13 = ~v7;
  v8 = (v8 + 1) & ~v7;
  if (((*(_QWORD *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v11 = 1;
    while (1)
    {
      v14 = *(_QWORD *)(v10 + 8 * v8);
      v12 = v14 == a1;
      if (v14 == a1)
        break;
      v8 = (v8 + 1) & v13;
      if (((*(_QWORD *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_10;
    }
    v11 = 0;
  }
  else
  {
LABEL_9:
    v12 = 0;
    v11 = 1;
  }
LABEL_10:
  v15 = *(_QWORD *)(v5 + 16);
  v16 = v15 + v11;
  if (__OFADD__(v15, v11))
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v17 = *(_QWORD *)(v5 + 24);
  if (v17 >= v16 && (a2 & 1) != 0)
  {
    if (!v12)
      goto LABEL_29;
    goto LABEL_27;
  }
  if ((a2 & 1) != 0)
  {
    sub_23609D240();
  }
  else
  {
    if (v17 >= v16)
    {
      sub_23609D708();
      if (!v12)
      {
LABEL_29:
        v25 = *v2;
        *(_QWORD *)(*v2 + 8 * (v8 >> 6) + 56) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v25 + 48) + 8 * v8) = a1;
        v26 = *(_QWORD *)(v25 + 16);
        v27 = __OFADD__(v26, 1);
        v28 = v26 + 1;
        if (!v27)
        {
          result = 0;
          *(_QWORD *)(v25 + 16) = v28;
          return result;
        }
        goto LABEL_33;
      }
LABEL_27:
      v23 = *(_QWORD *)(*v2 + 48);
      result = *(_QWORD *)(v23 + 8 * v8);
      *(_QWORD *)(v23 + 8 * v8) = a1;
      return result;
    }
    sub_23609DB1C();
  }
  v18 = *v2;
  v19 = sub_2360D10AC();
  v20 = -1 << *(_BYTE *)(v18 + 32);
  v8 = v19 & ~v20;
  if (((*(_QWORD *)(v18 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
    goto LABEL_28;
  v21 = *(_QWORD *)(v18 + 48);
  if (*(_QWORD *)(v21 + 8 * v8) != a1)
  {
    v22 = ~v20;
    while (1)
    {
      v8 = (v8 + 1) & v22;
      if (((*(_QWORD *)(v18 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        break;
      if (*(_QWORD *)(v21 + 8 * v8) == a1)
        goto LABEL_26;
    }
LABEL_28:
    if (!v12)
      goto LABEL_29;
    goto LABEL_34;
  }
LABEL_26:
  if (v12)
    goto LABEL_27;
LABEL_34:
  result = sub_2360D1058();
  __break(1u);
  return result;
}

uint64_t sub_23609CF98()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1888);
  result = sub_2360D0E24();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_2360D10B8();
      sub_2360D10DC();
      result = sub_2360D10F4();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23609D240()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1890);
  result = sub_2360D0E24();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_2360D10AC();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_23609D4C0(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_2360D10B8();
  sub_2360D10DC();
  sub_2360D10F4();
  result = sub_2360D0DD0();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

void *sub_23609D560()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1888);
  v2 = *v0;
  v3 = sub_2360D0E18();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_retain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23609D708()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1890);
  v2 = *v0;
  v3 = sub_2360D0E18();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23609D89C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1888);
  result = sub_2360D0E24();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_2360D10B8();
    sub_2360D10DC();
    result = sub_2360D10F4();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
    result = swift_retain();
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23609DB1C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1890);
  result = sub_2360D0E24();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_2360D10AC();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23609DD7C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_23609C098(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_23609C3FC();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v19 = 8 * v10;
    *(_QWORD *)(v16[6] + v19) = a2;
    *(_QWORD *)(v16[7] + v19) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_23609C8C0(result, a3 & 1);
  result = sub_23609C098(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2360D1064();
  __break(1u);
  return result;
}

uint64_t sub_23609DEB4(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_retain();
    swift_bridgeObjectRetain();
    v8 = sub_2360D0DF4();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for AppLibrary.App();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v20;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_2360D0DE8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v16 = sub_23609CB74(v7, result + 1);
    v21 = v16;
    if (*(_QWORD *)(v16 + 24) <= *(_QWORD *)(v16 + 16))
    {
      swift_retain();
      sub_23609CF98();
      v17 = v21;
    }
    else
    {
      v17 = v16;
      swift_retain();
    }
    sub_23609D4C0(a2, v17);
    *v3 = v17;
  }
  else
  {
    sub_2360D10B8();
    v10 = *(_QWORD *)(a2 + 16);
    sub_2360D10DC();
    v11 = sub_2360D10F4();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      v14 = *(_QWORD *)(v6 + 48);
      if (*(_QWORD *)(*(_QWORD *)(v14 + 8 * v13) + 16) == v10)
      {
LABEL_12:
        swift_release();
        *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        swift_retain();
        return 0;
      }
      v15 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v15;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        if (*(_QWORD *)(*(_QWORD *)(v14 + 8 * v13) + 16) == v10)
          goto LABEL_12;
      }
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v2;
    *v2 = 0x8000000000000000;
    v19 = swift_retain();
    sub_23609F358(v19, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v22;
  }
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

unint64_t sub_23609E10C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  v4 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v5 = *v2;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v6 = sub_2360D0E0C();
    swift_release();
    if ((v6 & 1) != 0)
    {
      v7 = sub_23609F094(v5, a1);
      swift_bridgeObjectRelease();
      return v7;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_2360D10B8();
  v8 = *(_QWORD *)(a1 + 16);
  sub_2360D10DC();
  v9 = sub_2360D10F4();
  v10 = -1 << *(_BYTE *)(v4 + 32);
  v11 = v9 & ~v10;
  if (((*(_QWORD *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  v12 = *(_QWORD *)(v4 + 48);
  if (*(_QWORD *)(*(_QWORD *)(v12 + 8 * v11) + 16) != v8)
  {
    v13 = ~v10;
    do
    {
      v11 = (v11 + 1) & v13;
      if (((*(_QWORD *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        return 0;
    }
    while (*(_QWORD *)(*(_QWORD *)(v12 + 8 * v11) + 16) != v8);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = *v2;
  v17 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23609D560();
    v15 = v17;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v15 + 48) + 8 * v11);
  sub_23609F1B0(v11);
  *v2 = v17;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t type metadata accessor for AppLibrary.InstallationRequest(uint64_t a1)
{
  return sub_23608864C(a1, qword_2563A1810);
}

uint64_t sub_23609E2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_23609E2F8()
{
  unint64_t result;

  result = qword_2563A16E0;
  if (!qword_2563A16E0)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for AppLibrary.UninstallError, &type metadata for AppLibrary.UninstallError);
    atomic_store(result, (unint64_t *)&qword_2563A16E0);
  }
  return result;
}

uint64_t sub_23609E33C()
{
  return type metadata accessor for AppLibrary(0);
}

uint64_t sub_23609E344()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2360D095C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for AppLibrary()
{
  return swift_lookUpClassMethod();
}

uint64_t *initializeBufferWithCopyOfBuffer for AppLibrary.InstallationRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2360D08D8();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[5];
    v11 = a3[6];
    v12 = (uint64_t *)((char *)a1 + v10);
    v13 = (uint64_t *)((char *)a2 + v10);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = (uint64_t *)((char *)a1 + v11);
    v16 = (uint64_t *)((char *)a2 + v11);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = a3[7];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21(v20, 1, v7))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v19, (uint64_t *)v20, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v19, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for AppLibrary.InstallationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_2360D08D8();
  v5 = *(_QWORD *)(v4 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 28);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  return result;
}

char *initializeWithCopy for AppLibrary.InstallationRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  unsigned int (*v20)(const void *, uint64_t, uint64_t);
  uint64_t v21;

  v6 = sub_2360D08D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20(v19, 1, v6))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v8(v18, v19, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for AppLibrary.InstallationRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t (*v18)(const void *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;

  v6 = sub_2360D08D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v19 = v18(&a1[v15], 1, v6);
  v20 = v18(v17, 1, v6);
  if (!v19)
  {
    if (!v20)
    {
      v8(v16, v17, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v16, v17, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
  return a1;
}

char *initializeWithTake for AppLibrary.InstallationRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = sub_2360D08D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  v10 = a3[7];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v8(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for AppLibrary.InstallationRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t (*v22)(const void *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;

  v6 = sub_2360D08D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = (uint64_t *)&a2[v9];
  v13 = *v11;
  v12 = v11[1];
  *(_QWORD *)v10 = v13;
  *((_QWORD *)v10 + 1) = v12;
  swift_bridgeObjectRelease();
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = (uint64_t *)&a2[v14];
  v18 = *v16;
  v17 = v16[1];
  *(_QWORD *)v15 = v18;
  *((_QWORD *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  v19 = a3[7];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v23 = v22(&a1[v19], 1, v6);
  v24 = v22(v21, 1, v6);
  if (!v23)
  {
    if (!v24)
    {
      v8(v20, v21, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v6);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v20, v21, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppLibrary.InstallationRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23609EA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_2360D08D8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for AppLibrary.InstallationRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23609EB28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_2360D08D8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23609EBD4()
{
  unint64_t v0;
  unint64_t v1;

  sub_2360D08D8();
  if (v0 <= 0x3F)
  {
    sub_236071084();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

unint64_t destroy for AppLibrary.InstallError(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s15AppDistribution10AppLibraryC12InstallErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for AppLibrary.InstallError(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AppLibrary.InstallError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppLibrary.InstallError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFA && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483643);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 4;
  if (v4 >= 6)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AppLibrary.InstallError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 4;
  }
  return result;
}

uint64_t sub_23609EE70(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_23609EE88(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppLibrary.InstallError()
{
  return &type metadata for AppLibrary.InstallError;
}

uint64_t storeEnumTagSinglePayload for AppLibrary.UninstallError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23609EEF8 + 4 * byte_2360D5339[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23609EF18 + 4 * byte_2360D533E[v4]))();
}

_BYTE *sub_23609EEF8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23609EF18(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23609EF20(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23609EF28(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23609EF30(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23609EF38(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AppLibrary.UninstallError()
{
  return &type metadata for AppLibrary.UninstallError;
}

uint64_t sub_23609EF54()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23609EF88(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_2360842F8;
  return sub_236099D84(a1, v4, v5, v7, v6);
}

uint64_t sub_23609F000()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23609F024(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2360842F8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2563A1A60 + dword_2563A1A60))(a1, v4);
}

unint64_t sub_23609F094(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  swift_bridgeObjectRelease();
  v5 = sub_2360D0DE8();
  v6 = swift_unknownObjectRetain();
  v7 = sub_23609CB74(v6, v5);
  v16 = v7;
  sub_2360D10B8();
  v8 = *(_QWORD *)(a2 + 16);
  sub_2360D10DC();
  v9 = sub_2360D10F4();
  v10 = -1 << *(_BYTE *)(v7 + 32);
  result = v9 & ~v10;
  v12 = v7 + 56;
  if (((*(_QWORD *)(v7 + 56 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v13 = *(_QWORD *)(v7 + 48);
  v14 = *(_QWORD *)(v13 + 8 * result);
  if (*(_QWORD *)(v14 + 16) != v8)
  {
    v15 = ~v10;
    while (1)
    {
      result = (result + 1) & v15;
      if (((*(_QWORD *)(v12 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) == 0)
        break;
      v14 = *(_QWORD *)(v13 + 8 * result);
      if (*(_QWORD *)(v14 + 16) == v8)
        goto LABEL_6;
    }
    __break(1u);
    goto LABEL_9;
  }
LABEL_6:
  result = sub_23609F1B0(result);
  if (v8 == *(_QWORD *)(v14 + 16))
  {
    *v3 = v16;
    return v14;
  }
LABEL_10:
  __break(1u);
  return result;
}

unint64_t sub_23609F1B0(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_2360D0DC4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_2360D10B8();
        sub_2360D10DC();
        v10 = sub_2360D10F4() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9)
            goto LABEL_5;
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(v3 + 48);
          v12 = (_QWORD *)(v11 + 8 * v2);
          v13 = (_QWORD *)(v11 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v12 >= v13 + 1))
          {
            *v12 = *v13;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v14 = *(_QWORD *)(v3 + 16);
  v15 = __OFSUB__(v14, 1);
  v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_23609F358(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_13;
  if ((a3 & 1) != 0)
  {
    sub_23609CF98();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_23609D560();
      goto LABEL_13;
    }
    sub_23609D89C();
  }
  v8 = *v3;
  sub_2360D10B8();
  v9 = *(_QWORD *)(v5 + 16);
  sub_2360D10DC();
  result = sub_2360D10F4();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    result = type metadata accessor for AppLibrary.App();
    v11 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(*(_QWORD *)(v11 + 8 * a2) + 16) == v9)
    {
LABEL_12:
      result = sub_2360D1058();
      __break(1u);
    }
    else
    {
      while (1)
      {
        a2 = (a2 + 1) & ~v10;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(*(_QWORD *)(v11 + 8 * a2) + 16) == v9)
          goto LABEL_12;
      }
    }
  }
LABEL_13:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_23609F4B8(uint64_t a1)
{
  uint64_t v1;

  return sub_236098720(a1, v1);
}

unint64_t sub_23609F4C0(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_2360D0EB4();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1888);
      result = sub_2360D0E3C();
      v3 = result;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_2360D0EB4();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = v3 + 56;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    while (1)
    {
      while (1)
      {
        result = MEMORY[0x23B7EB390](v7, v1);
        v8 = __OFADD__(v7++, 1);
        if (v8)
        {
          __break(1u);
          goto LABEL_34;
        }
        v9 = result;
        sub_2360D10B8();
        v10 = *(_QWORD *)(v9 + 16);
        sub_2360D10DC();
        result = sub_2360D10F4();
        v11 = -1 << *(_BYTE *)(v3 + 32);
        v12 = result & ~v11;
        v13 = v12 >> 6;
        v14 = *(_QWORD *)(v6 + 8 * (v12 >> 6));
        v15 = 1 << v12;
        v16 = *(_QWORD *)(v3 + 48);
        if (((1 << v12) & v14) != 0)
          break;
LABEL_19:
        *(_QWORD *)(v6 + 8 * v13) = v15 | v14;
        *(_QWORD *)(v16 + 8 * v12) = v9;
        v18 = *(_QWORD *)(v3 + 16);
        v8 = __OFADD__(v18, 1);
        v19 = v18 + 1;
        if (v8)
          goto LABEL_35;
        *(_QWORD *)(v3 + 16) = v19;
        if (v7 == v4)
          return v3;
      }
      if (*(_QWORD *)(*(_QWORD *)(v16 + 8 * v12) + 16) != v10)
      {
        v17 = ~v11;
        do
        {
          v12 = (v12 + 1) & v17;
          v13 = v12 >> 6;
          v14 = *(_QWORD *)(v6 + 8 * (v12 >> 6));
          v15 = 1 << v12;
          if ((v14 & (1 << v12)) == 0)
            goto LABEL_19;
        }
        while (*(_QWORD *)(*(_QWORD *)(v16 + 8 * v12) + 16) != v10);
      }
      swift_unknownObjectRelease();
      if (v7 == v4)
        return v3;
    }
  }
  v20 = 0;
  v21 = v1 + 32;
  v22 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v20 != v22)
  {
    v25 = *(_QWORD *)(v21 + 8 * v20);
    sub_2360D10B8();
    v26 = *(_QWORD *)(v25 + 16);
    sub_2360D10DC();
    result = sub_2360D10F4();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    v32 = *(_QWORD *)(v3 + 48);
    if (((1 << v28) & v30) != 0)
    {
      if (*(_QWORD *)(*(_QWORD *)(v32 + 8 * v28) + 16) == v26)
        goto LABEL_25;
      v33 = ~v27;
      while (1)
      {
        v28 = (v28 + 1) & v33;
        v29 = v28 >> 6;
        v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
        v31 = 1 << v28;
        if ((v30 & (1 << v28)) == 0)
          break;
        if (*(_QWORD *)(*(_QWORD *)(v32 + 8 * v28) + 16) == v26)
          goto LABEL_25;
      }
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(v32 + 8 * v28) = v25;
    v23 = *(_QWORD *)(v3 + 16);
    v8 = __OFADD__(v23, 1);
    v24 = v23 + 1;
    if (v8)
      goto LABEL_36;
    *(_QWORD *)(v3 + 16) = v24;
    result = swift_retain();
LABEL_25:
    if (++v20 == v4)
      return v3;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_23609F798()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23609F7C4()
{
  uint64_t v0;

  return sub_2360989C4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23609F7EC()
{
  return sub_236098434();
}

uint64_t sub_23609F80C()
{
  uint64_t v0;
  uint64_t result;

  sub_2360D0A28();
  v0 = sub_2360D0A1C();
  type metadata accessor for ServiceConnection();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v0;
  qword_2563B89E0 = result;
  return result;
}

uint64_t sub_23609F854()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ServiceConnection()
{
  return objc_opt_self();
}

unint64_t sub_23609F898(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A14F0);
  v2 = (_QWORD *)sub_2360D0ED8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_23609C034(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t OAuthAuthorizationRequest.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_236077F70(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for OAuthAuthorizationContext);
}

void __swiftcall OAuthAuthorizationRequest.init(context:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23609F9E4(v0, v1);
}

uint64_t sub_23609F9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OAuthAuthorizationContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OAuthAuthorizationRequest.run()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[5] = v0;
  type metadata accessor for LaunchAngelXPCRequest(0);
  v1[6] = swift_task_alloc();
  type metadata accessor for OAuthAuthorizationRequest();
  v1[7] = swift_task_alloc();
  v2 = sub_2360D0B3C();
  v1[8] = v2;
  v1[9] = *(_QWORD *)(v2 - 8);
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23609FAC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t *v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0[5];
  v2 = v0[7];
  sub_2360D0B00();
  sub_236077F70(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for OAuthAuthorizationRequest);
  v3 = sub_2360D0B24();
  v4 = sub_2360D0D34();
  if (os_log_type_enabled(v3, v4))
  {
    v15 = v0[9];
    v5 = (uint64_t *)v0[7];
    v16 = v0[8];
    v17 = v0[10];
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v18 = v7;
    *(_DWORD *)v6 = 136315138;
    v9 = *v5;
    v8 = v5[1];
    swift_bridgeObjectRetain();
    v0[4] = sub_23609FE8C(v9, v8, &v18);
    sub_2360D0D88();
    swift_bridgeObjectRelease();
    sub_236078270((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for OAuthAuthorizationRequest);
    _os_log_impl(&dword_236065000, v3, v4, "[%s] Requesting OAuth Authorization using Launch Angel...", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7EBB1C](v7, -1, -1);
    MEMORY[0x23B7EBB1C](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    v11 = v0[9];
    v10 = v0[10];
    v12 = v0[8];
    sub_236078270(v0[7], (uint64_t (*)(_QWORD))type metadata accessor for OAuthAuthorizationRequest);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  sub_236077F70(v0[5], v0[6], (uint64_t (*)(_QWORD))type metadata accessor for OAuthAuthorizationContext);
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  swift_storeEnumTagMultiPayload();
  v13 = (_QWORD *)swift_task_alloc();
  v0[11] = v13;
  *v13 = v0;
  v13[1] = sub_23609FCF8;
  return static LaunchAngelConnectionUtilities.handleLaunchAngelRequest(_:)((uint64_t)(v0 + 2), v0[6]);
}

uint64_t sub_23609FCF8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23609FD5C()
{
  uint64_t v0;
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(v0 + 24);
  if (v2 != 1)
  {
    sub_23608E130(*(_QWORD *)(v0 + 16), v2);
    v1 = sub_23609F898(MEMORY[0x24BEE4AF8]);
  }
  sub_236078270(*(_QWORD *)(v0 + 48), type metadata accessor for LaunchAngelXPCRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v1);
}

uint64_t sub_23609FDEC()
{
  uint64_t v0;

  sub_236078270(*(_QWORD *)(v0 + 48), type metadata accessor for LaunchAngelXPCRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for OAuthAuthorizationRequest()
{
  uint64_t result;

  result = qword_2563A1998;
  if (!qword_2563A1998)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23609FE8C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_2360A0320(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_236077B28((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_236077B28((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t *initializeBufferWithCopyOfBuffer for OAuthAuthorizationRequest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v4 = type metadata accessor for OAuthAuthorizationContext();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2360D08D8();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t destroy for OAuthAuthorizationRequest(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  v3 = sub_2360D08D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *initializeWithCopy for OAuthAuthorizationRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_2360D08D8();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for OAuthAuthorizationRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2360D08D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *initializeWithTake for OAuthAuthorizationRequest(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2360D08D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for OAuthAuthorizationRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_2360D08D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for OAuthAuthorizationRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2360A0230(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OAuthAuthorizationContext();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for OAuthAuthorizationRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2360A0278(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OAuthAuthorizationContext();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_2360A02B8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for OAuthAuthorizationContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2360A0320(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2360D0D94();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_2360A04D8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_2360D0E84();
  if (!v8)
  {
    sub_2360D0E9C();
    __break(1u);
LABEL_17:
    result = sub_2360D0EE4();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_2360A04D8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_2360A056C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2360A0744(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_2360A0744(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2360A056C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_2360A06E0(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_2360D0E54();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_2360D0E9C();
      __break(1u);
LABEL_10:
      v2 = sub_2360D0BF0();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_2360D0EE4();
    __break(1u);
LABEL_14:
    result = sub_2360D0E9C();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_2360A06E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A19D0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_2360A0744(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A19D0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_2360D0EE4();
  __break(1u);
  return result;
}

unint64_t sub_2360A0890(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1880);
  v3 = (_QWORD *)sub_2360D0ED8();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_23609C098(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_retain();
    result = sub_23609C098(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t InstallRequirements.minimumSystemVersion.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InstallRequirements.minimumSystemVersion.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*InstallRequirements.minimumSystemVersion.modify())()
{
  return nullsub_1;
}

uint64_t InstallRequirements.requiredDeviceCapabilities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InstallRequirements.requiredDeviceCapabilities.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*InstallRequirements.requiredDeviceCapabilities.modify())()
{
  return nullsub_1;
}

uint64_t InstallRequirements.ageRatingRank.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t InstallRequirements.ageRatingRank.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = result;
  *(_BYTE *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*InstallRequirements.ageRatingRank.modify())()
{
  return nullsub_1;
}

uint64_t InstallRequirements.expectedInstallSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t InstallRequirements.expectedInstallSize.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = result;
  *(_BYTE *)(v2 + 48) = a2 & 1;
  return result;
}

uint64_t (*InstallRequirements.expectedInstallSize.modify())()
{
  return nullsub_1;
}

double InstallRequirements.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 32) = 1;
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 48) = 1;
  return result;
}

Swift::Bool __swiftcall InstallRequirements.satisfiedByDevice()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  char v4;
  uint64_t v5;
  int v6;
  int v7;
  char v9;
  __int128 v10;
  _QWORD v11[2];
  __int128 v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t *v16;

  v2 = *v0;
  v1 = v0[1];
  v3 = *((_OWORD *)v0 + 1);
  v4 = *((_BYTE *)v0 + 32);
  v5 = v0[5];
  v6 = *((unsigned __int8 *)v0 + 48);
  if (!v1)
  {
    v7 = (_QWORD)v3 ? 0 : *((unsigned __int8 *)v0 + 32);
    if ((v7 & v6 & 1) != 0)
      return 1;
  }
  if (qword_2563A01E0 != -1)
  {
    v10 = *((_OWORD *)v0 + 1);
    swift_once();
    v3 = v10;
  }
  v11[0] = v2;
  v11[1] = v1;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_23608D1A0(&v16, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_2360A0BDC, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9 == 2)
    return 0;
  else
    return v9 & 1;
}

void sub_2360A0BDC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  _QWORD v10[6];

  v8 = (void *)sub_2360D08F0();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23607D2C4;
  v10[3] = &block_descriptor_7;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_checkDeviceCabilityForADPInstallation_reply_, v8, v9);
  _Block_release(v9);

}

uint64_t sub_2360A0C9C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2360A0CD8 + 4 * byte_2360D5660[a1]))(0xD000000000000014, 0x80000002360DD960);
}

uint64_t sub_2360A0CD8()
{
  uint64_t v0;

  return v0 + 7;
}

uint64_t sub_2360A0CF0()
{
  return 0x6E69746152656761;
}

unint64_t sub_2360A0D14()
{
  return 0xD000000000000013;
}

uint64_t sub_2360A0D30()
{
  unsigned __int8 *v0;

  return sub_2360A0C9C(*v0);
}

uint64_t sub_2360A0D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360A169C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2360A0D5C()
{
  sub_2360A0F90();
  return sub_2360D1148();
}

uint64_t sub_2360A0D84()
{
  sub_2360A0F90();
  return sub_2360D1154();
}

uint64_t InstallRequirements.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD v10[2];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  char v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A19D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v12 = *(_QWORD *)(v1 + 24);
  v13 = v7;
  v16 = *(unsigned __int8 *)(v1 + 32);
  v11 = *(_QWORD *)(v1 + 40);
  v10[1] = *(unsigned __int8 *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360A0F90();
  sub_2360D113C();
  v20 = 0;
  v8 = v14;
  sub_2360D0FA4();
  if (!v8)
  {
    v15 = v13;
    v19 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A19E8);
    sub_2360A1264(&qword_2563A19F0, MEMORY[0x24BEE0D08], MEMORY[0x24BEE1700]);
    sub_2360D0FBC();
    v18 = 2;
    sub_2360D0FB0();
    v17 = 3;
    sub_2360D0FC8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2360A0F90()
{
  unint64_t result;

  result = qword_2563A19E0;
  if (!qword_2563A19E0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D57A8, &type metadata for InstallRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A19E0);
  }
  return result;
}

uint64_t InstallRequirements.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char *v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  char v27;
  char v28;
  char v29;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A19F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360A0F90();
  sub_2360D1124();
  if (!v2)
  {
    v29 = 0;
    v10 = sub_2360D0F14();
    v12 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A19E8);
    v28 = 1;
    sub_2360A1264(&qword_2563A1A00, MEMORY[0x24BEE0D38], MEMORY[0x24BEE1720]);
    swift_bridgeObjectRetain();
    sub_2360D0F2C();
    v23 = v10;
    v13 = v24;
    v27 = 2;
    swift_bridgeObjectRetain();
    v14 = sub_2360D0F20();
    v25 = v15;
    v22 = v14;
    v26 = 3;
    v16 = sub_2360D0F38();
    v17 = v8;
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
    *(_QWORD *)a2 = v23;
    *(_QWORD *)(a2 + 8) = v12;
    v20 = v22;
    *(_QWORD *)(a2 + 16) = v13;
    *(_QWORD *)(a2 + 24) = v20;
    *(_BYTE *)(a2 + 32) = v25 & 1;
    *(_QWORD *)(a2 + 40) = v16;
    *(_BYTE *)(a2 + 48) = v19 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2360A1264(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563A19E8);
    v8 = a2;
    result = MEMORY[0x23B7EBA68](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2360A12C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return InstallRequirements.init(from:)(a1, a2);
}

uint64_t sub_2360A12D8(_QWORD *a1)
{
  return InstallRequirements.encode(to:)(a1);
}

uint64_t initializeWithCopy for InstallRequirements(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InstallRequirements(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithTake for InstallRequirements(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for InstallRequirements(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InstallRequirements(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for InstallRequirements()
{
  return &type metadata for InstallRequirements;
}

uint64_t storeEnumTagSinglePayload for InstallRequirements.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2360A1544 + 4 * byte_2360D5669[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2360A1578 + 4 * byte_2360D5664[v4]))();
}

uint64_t sub_2360A1578(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360A1580(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360A1588);
  return result;
}

uint64_t sub_2360A1594(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360A159CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2360A15A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360A15A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InstallRequirements.CodingKeys()
{
  return &type metadata for InstallRequirements.CodingKeys;
}

unint64_t sub_2360A15C8()
{
  unint64_t result;

  result = qword_2563A1A08;
  if (!qword_2563A1A08)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5780, &type metadata for InstallRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1A08);
  }
  return result;
}

unint64_t sub_2360A1610()
{
  unint64_t result;

  result = qword_2563A1A10;
  if (!qword_2563A1A10)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D56F0, &type metadata for InstallRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1A10);
  }
  return result;
}

unint64_t sub_2360A1658()
{
  unint64_t result;

  result = qword_2563A1A18;
  if (!qword_2563A1A18)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5718, &type metadata for InstallRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1A18);
  }
  return result;
}

uint64_t sub_2360A169C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000002360DD960 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002360DD980 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E69746152656761 && a2 == 0xED00006B6E615267 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002360DD9A0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t ApprovedDeveloper.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApprovedDeveloper.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApprovedDeveloper.supportURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApprovedDeveloper.init(name:identifier:supportURL:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t sub_2360A18FC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x696669746E656469;
  if (*v0 != 1)
    v1 = 0x5574726F70707573;
  if (*v0)
    return v1;
  else
    return 1701667182;
}

uint64_t sub_2360A1958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360A2674(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2360A197C()
{
  sub_2360A1B34();
  return sub_2360D1148();
}

uint64_t sub_2360A19A4()
{
  sub_2360A1B34();
  return sub_2360D1154();
}

uint64_t ApprovedDeveloper.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[6];
  char v12;
  char v13;
  char v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1A20);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v11[3] = v1[3];
  v11[4] = v7;
  v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360A1B34();
  sub_2360D113C();
  v14 = 0;
  v9 = v11[5];
  sub_2360D0FD4();
  if (!v9)
  {
    v13 = 1;
    sub_2360D0FD4();
    v12 = 2;
    sub_2360D0FA4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2360A1B34()
{
  unint64_t result;

  result = qword_2563A1A28;
  if (!qword_2563A1A28)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5948, &type metadata for ApprovedDeveloper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1A28);
  }
  return result;
}

uint64_t ApprovedDeveloper.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1A30);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360A1B34();
  sub_2360D1124();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = 0;
  v9 = sub_2360D0F44();
  v11 = v10;
  v24 = v9;
  v26 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_2360D0F44();
  v14 = v13;
  v22 = v12;
  v25 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  v15 = sub_2360D0F14();
  v17 = v16;
  v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2360A1DA4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ApprovedDeveloper.init(from:)(a1, a2);
}

uint64_t sub_2360A1DB8(_QWORD *a1)
{
  return ApprovedDeveloper.encode(to:)(a1);
}

uint64_t static AppDistributor.allApprovedDevelopers()()
{
  uint64_t v0;
  char v1;
  unint64_t v2;
  void *v3;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  __int128 *v10;
  __int128 v11;
  char v12;

  if (qword_2563A01E0 != -1)
    swift_once();
  v5 = 0u;
  v6 = 0u;
  v7 = 0;
  v8 = 0x2000000000000000;
  v9 = 1;
  v10 = &v5;
  sub_23608C860((uint64_t **)&v10, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_2360BFF04, 0, &v11);
  sub_23607867C(v5, *((uint64_t *)&v5 + 1), v6, *((uint64_t *)&v6 + 1), v7, v8, v9);
  v0 = v11;
  v1 = v12;
  if (v12)
  {
    v2 = *((_QWORD *)&v11 + 1);
    type metadata accessor for MarketplaceKitError();
    sub_2360A226C();
    v3 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_23608DB8C(v0, v2, v1);

    return MEMORY[0x24BEE4AF8];
  }
  return v0;
}

uint64_t static AppDistributor.revokeDeveloperApproval(_:removeInstalledApps:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t *v15;

  v6 = qword_2563A01E0;
  swift_bridgeObjectRetain();
  if (v6 != -1)
    swift_once();
  sub_236078410();
  sub_236078454();
  v8 = a1;
  v9 = a2;
  v10 = a3 & 1;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v14 = 2;
  v15 = &v8;
  sub_236078498(a1, a2, v10, 0, 0, 0, 2);
  sub_23608CCF4(&v15, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_2360A2024, 0);
  sub_236078500(v8, v9, v10, v11, v12, v13, v14);
  return sub_236078500(a1, a2, a3 & 1, 0, 0, 0, 2);
}

void sub_2360A2024(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  _QWORD v10[6];

  v8 = (void *)sub_2360D08F0();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23607D2C4;
  v10[3] = &block_descriptor_8;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_setPrivateDataRequest_reply_, v8, v9);
  _Block_release(v9);

}

uint64_t static AppDistributor.isDeveloperApproved(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  char v6;
  uint64_t v7;
  void *v8;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  char v14;
  uint64_t *v15;
  __int128 v16;
  char v17;

  v4 = qword_2563A01E0;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v10 = a1;
  v11 = a2;
  v12 = 0u;
  v13 = 0u;
  v14 = 0;
  v15 = &v10;
  sub_236078628(a1, a2, 0, 0, 0, 0, 0);
  sub_23608C860(&v15, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_2360BFF04, 0, &v16);
  sub_23607867C(v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((unint64_t *)&v13 + 1), v14);
  v5 = v16;
  v6 = v17;
  if (v17 == 1)
  {
    v7 = v16 & 1;
    sub_23608DB8C(v16, *((unint64_t *)&v16 + 1), 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_2360A226C();
    v8 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_23608DB8C(v5, *((unint64_t *)&v5 + 1), v6);
    swift_bridgeObjectRelease();

    return 0;
  }
  return v7;
}

unint64_t sub_2360A226C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2563A0280;
  if (!qword_2563A0280)
  {
    v1 = type metadata accessor for MarketplaceKitError();
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for MarketplaceKitError, v1);
    atomic_store(result, (unint64_t *)&qword_2563A0280);
  }
  return result;
}

uint64_t destroy for ApprovedDeveloper()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ApprovedDeveloper(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ApprovedDeveloper(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for ApprovedDeveloper(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ApprovedDeveloper(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ApprovedDeveloper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ApprovedDeveloper()
{
  return &type metadata for ApprovedDeveloper;
}

uint64_t storeEnumTagSinglePayload for ApprovedDeveloper.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2360A251C + 4 * byte_2360D5804[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2360A2550 + 4 * byte_2360D57FF[v4]))();
}

uint64_t sub_2360A2550(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360A2558(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360A2560);
  return result;
}

uint64_t sub_2360A256C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360A2574);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2360A2578(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360A2580(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ApprovedDeveloper.CodingKeys()
{
  return &type metadata for ApprovedDeveloper.CodingKeys;
}

unint64_t sub_2360A25A0()
{
  unint64_t result;

  result = qword_2563A1A38;
  if (!qword_2563A1A38)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5920, &type metadata for ApprovedDeveloper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1A38);
  }
  return result;
}

unint64_t sub_2360A25E8()
{
  unint64_t result;

  result = qword_2563A1A40;
  if (!qword_2563A1A40)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5890, &type metadata for ApprovedDeveloper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1A40);
  }
  return result;
}

unint64_t sub_2360A2630()
{
  unint64_t result;

  result = qword_2563A1A48;
  if (!qword_2563A1A48)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D58B8, &type metadata for ApprovedDeveloper.CodingKeys);
    atomic_store(result, &qword_2563A1A48);
  }
  return result;
}

uint64_t sub_2360A2674(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5574726F70707573 && a2 == 0xEA00000000004C52)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2360A27D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_2360D0C98();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2360D0C8C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_2360A3060(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2360D0C44();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t static LicenseRepair.requestLicenseRepair(_:status:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0BA8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2360D0C98();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = a1;
  *(_QWORD *)(v11 + 40) = a2;
  *(_DWORD *)(v11 + 48) = a3;
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  swift_bridgeObjectRetain();
  if (v12 == 1)
  {
    sub_2360A3060((uint64_t)v8);
    v13 = 0;
    v14 = 0;
  }
  else
  {
    sub_2360D0C8C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(v11 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v13 = sub_2360D0C44();
      v14 = v15;
      swift_unknownObjectRelease();
    }
    else
    {
      v13 = 0;
      v14 = 0;
    }
  }
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = &unk_2563A1A58;
  *(_QWORD *)(v16 + 24) = v11;
  if (v14 | v13)
  {
    v18[0] = 0;
    v18[1] = 0;
    v18[2] = v13;
    v18[3] = v14;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_2360A2AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)(v6 + 44) = a6;
  *(_QWORD *)(v6 + 104) = a4;
  *(_QWORD *)(v6 + 112) = a5;
  v7 = sub_2360D0B3C();
  *(_QWORD *)(v6 + 120) = v7;
  *(_QWORD *)(v6 + 128) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 136) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2360A2B54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v1 = *(unsigned int *)(v0 + 44);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = qword_2563A01E0;
  swift_bridgeObjectRetain();
  if (v3 != -1)
    swift_once();
  v4 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v1;
  *(_BYTE *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 72) = v0 + 16;
  sub_236077E38(v4, v2, v1, 0);
  v7 = (uint64_t (*)(void))((char *)&dword_2563A0688 + dword_2563A0688);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v5;
  *v5 = v0;
  v5[1] = sub_2360A2C34;
  return v7();
}

uint64_t sub_2360A2C34()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    sub_236077E58(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40));
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_2360A2CB4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2360A2CE4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(void **)(v0 + 152);
  sub_236077E58(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_bridgeObjectRelease();
  sub_2360D0AF4();
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_2360D0B24();
  v5 = sub_2360D0D28();
  if (os_log_type_enabled(v4, v5))
  {
    v18 = *(id *)(v0 + 152);
    v20 = *(_QWORD *)(v0 + 128);
    v6 = *(_QWORD *)(v0 + 112);
    v21 = *(_QWORD *)(v0 + 120);
    v22 = *(_QWORD *)(v0 + 136);
    v7 = *(_QWORD *)(v0 + 104);
    v8 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v23 = v19;
    *(_DWORD *)v8 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_23609FE8C(v7, v6, &v23);
    sub_2360D0D88();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_getErrorValue();
    v9 = *(_QWORD *)(*(_QWORD *)(v0 + 56) - 8);
    swift_task_alloc();
    (*(void (**)(void))(v9 + 16))();
    v10 = sub_2360D0BCC();
    v12 = v11;
    swift_task_dealloc();
    *(_QWORD *)(v0 + 96) = sub_23609FE8C(v10, v12, &v23);
    sub_2360D0D88();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_236065000, v4, v5, "Error requesting license repair for app at path: %{public}s, %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B7EBB1C](v19, -1, -1);
    MEMORY[0x23B7EBB1C](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  }
  else
  {
    v13 = *(void **)(v0 + 152);
    v15 = *(_QWORD *)(v0 + 128);
    v14 = *(_QWORD *)(v0 + 136);
    v16 = *(_QWORD *)(v0 + 120);

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2360A2FB4()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2360A2FE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_DWORD *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_2360842F8;
  return sub_2360A2AF0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_2360A3060(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0BA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2360A30A0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2360A3104;
  return v6(a1);
}

uint64_t sub_2360A3104()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2360A3150()
{
  swift_release();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for LicenseRepair()
{
  return &type metadata for LicenseRepair;
}

__n128 PerformPrivateActionRequest.init(request:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u8[8];
  result = *a1;
  *a2 = *a1;
  a2[1].n128_u64[0] = v2;
  a2[1].n128_u8[8] = v3;
  return result;
}

uint64_t PerformPrivateActionRequest.run()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_OWORD *)(v2 + 64) = *(_OWORD *)v1;
  *(_QWORD *)(v2 + 80) = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(v2 + 41) = *(_BYTE *)(v1 + 24);
  return swift_task_switch();
}

uint64_t sub_2360A31D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  _QWORD *v5;
  char *v7;

  if (qword_2563A01E0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 32) = v2;
  v4 = *(_BYTE *)(v0 + 41);
  *(_BYTE *)(v0 + 40) = v4;
  *(_QWORD *)(v0 + 48) = v0 + 16;
  sub_236077E38(v3, v1, v2, v4);
  v7 = (char *)&dword_2563A0688 + dword_2563A0688;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v5;
  *v5 = v0;
  v5[1] = sub_2360A32A0;
  return ((uint64_t (*)(_QWORD, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v7)(*(_QWORD *)(v0 + 56), v0 + 48, sub_2360A4094, 0);
}

uint64_t sub_2360A32A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  sub_236077E58(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2360A331C()
{
  uint64_t v0;

  sub_236077E58(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2360A3358()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000017;
  if (*v0 != 1)
    v1 = 0x63694C77656E6572;
  if (*v0)
    return v1;
  else
    return 0x694C726961706572;
}

uint64_t sub_2360A33D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360A5FD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2360A33F4()
{
  sub_2360A4154();
  return sub_2360D1148();
}

uint64_t sub_2360A341C()
{
  sub_2360A4154();
  return sub_2360D1154();
}

uint64_t sub_2360A3444()
{
  sub_2360A4198();
  return sub_2360D1148();
}

uint64_t sub_2360A346C()
{
  sub_2360A4198();
  return sub_2360D1154();
}

unint64_t sub_2360A3494()
{
  unsigned __int8 *v0;

  return ((unint64_t)*v0 << 8) + 12383;
}

uint64_t sub_2360A34A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360A616C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2360A34CC()
{
  sub_2360A41DC();
  return sub_2360D1148();
}

uint64_t sub_2360A34F4()
{
  sub_2360A41DC();
  return sub_2360D1154();
}

uint64_t sub_2360A351C()
{
  _BYTE *v0;

  if (*v0)
    return 12639;
  else
    return 12383;
}

uint64_t sub_2360A3538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360A6278(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2360A355C()
{
  sub_2360A4220();
  return sub_2360D1148();
}

uint64_t sub_2360A3584()
{
  sub_2360A4220();
  return sub_2360D1154();
}

uint64_t PerformPrivateActionRequest.Request.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1A78);
  v25 = *(_QWORD *)(v3 - 8);
  v26 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v24 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1A80);
  v22 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v23 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1A88);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1A90);
  v29 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *v1;
  v28 = v1[1];
  v21 = v1[2];
  v12 = *((unsigned __int8 *)v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360A4154();
  sub_2360D113C();
  if (v12)
  {
    if (v12 == 1)
    {
      LOBYTE(v33) = 1;
      sub_2360A41DC();
      v13 = v23;
      v14 = v32;
      v15 = v11;
      sub_2360D0F98();
      LOBYTE(v33) = 0;
      v16 = v31;
      v17 = v27;
      sub_2360D0FD4();
      if (!v16)
      {
        LOBYTE(v33) = 1;
        sub_2360D0FE0();
        LOBYTE(v33) = 2;
        sub_2360D0FF8();
      }
      v20 = v22;
    }
    else
    {
      LOBYTE(v33) = 2;
      sub_2360A4198();
      v13 = v24;
      v14 = v32;
      v15 = v11;
      sub_2360D0F98();
      v33 = v30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1018);
      sub_23608DC48(&qword_2563A1020, MEMORY[0x24BEE4570], MEMORY[0x24BEE12A0]);
      v17 = v26;
      sub_2360D0FEC();
      v20 = v25;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v17);
  }
  else
  {
    LOBYTE(v33) = 0;
    sub_2360A4220();
    v14 = v32;
    v15 = v11;
    sub_2360D0F98();
    LOBYTE(v33) = 0;
    v18 = v31;
    sub_2360D0FD4();
    if (!v18)
    {
      LOBYTE(v33) = 1;
      sub_2360D0FF8();
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v14);
}

uint64_t PerformPrivateActionRequest.Request.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  char *v26;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;

  v44 = a2;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1AB8);
  v45 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v49 = (uint64_t)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1AC0);
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v50 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1AC8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1AD0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_2360A4154();
  v15 = v52;
  sub_2360D1124();
  v16 = (uint64_t)v15;
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  v42 = v7;
  v43 = v11;
  v17 = v6;
  v18 = v50;
  v52 = v13;
  v19 = sub_2360D0F80();
  if (*(_QWORD *)(v19 + 16) != 1)
  {
    v23 = sub_2360D0E78();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0270);
    *v25 = &type metadata for PerformPrivateActionRequest.Request;
    v26 = v52;
    sub_2360D0F08();
    sub_2360D0E6C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  }
  v41 = v10;
  v20 = *(unsigned __int8 *)(v19 + 32);
  if (*(_BYTE *)(v19 + 32))
  {
    v21 = v52;
    if (v20 == 1)
    {
      LOBYTE(v53) = 1;
      sub_2360A41DC();
      v22 = v18;
      sub_2360D0EFC();
      LOBYTE(v53) = 0;
      v31 = v47;
      v34 = sub_2360D0F44();
      v16 = v35;
      LOBYTE(v53) = 1;
      v48 = sub_2360D0F50();
      LOBYTE(v53) = 2;
      v49 = sub_2360D0F68();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v22, v31);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v21, v41);
      v38 = v48 & 1 | (v49 << 32);
    }
    else
    {
      LOBYTE(v53) = 2;
      sub_2360A4198();
      v30 = v49;
      sub_2360D0EFC();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1018);
      sub_23608DC48(&qword_2563A1030, MEMORY[0x24BEE4598], MEMORY[0x24BEE12D0]);
      v33 = v48;
      sub_2360D0F5C();
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v30, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v21, v41);
      v38 = 0;
      v34 = v53;
    }
  }
  else
  {
    LOBYTE(v53) = 0;
    sub_2360A4220();
    v28 = v9;
    v29 = v52;
    sub_2360D0EFC();
    LOBYTE(v53) = 0;
    v32 = v17;
    v34 = sub_2360D0F44();
    v16 = v36;
    LOBYTE(v53) = 1;
    v37 = sub_2360D0F68();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v41);
    v38 = v37;
  }
  v39 = (uint64_t)v51;
  v40 = v44;
  *v44 = v34;
  v40[1] = v16;
  v40[2] = v38;
  *((_BYTE *)v40 + 24) = v20;
  return __swift_destroy_boxed_opaque_existential_1(v39);
}

uint64_t sub_2360A4050@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PerformPrivateActionRequest.Request.init(from:)(a1, a2);
}

uint64_t sub_2360A4064(_QWORD *a1)
{
  return PerformPrivateActionRequest.Request.encode(to:)(a1);
}

uint64_t PerformPrivateActionRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(v1 + 24);
  *(_BYTE *)(a1 + 24) = v5;
  return sub_236077E38(v2, v3, v4, v5);
}

void sub_2360A4094(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  _QWORD v10[6];

  v8 = (void *)sub_2360D08F0();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23607D2C4;
  v10[3] = &block_descriptor_9;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_performPrivateActionRequest_reply_, v8, v9);
  _Block_release(v9);

}

unint64_t sub_2360A4154()
{
  unint64_t result;

  result = qword_2563A1A98;
  if (!qword_2563A1A98)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6410, &type metadata for PerformPrivateActionRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1A98);
  }
  return result;
}

unint64_t sub_2360A4198()
{
  unint64_t result;

  result = qword_2563A1AA0;
  if (!qword_2563A1AA0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D63C0, &type metadata for PerformPrivateActionRequest.Request.RenewLicensesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1AA0);
  }
  return result;
}

unint64_t sub_2360A41DC()
{
  unint64_t result;

  result = qword_2563A1AA8;
  if (!qword_2563A1AA8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6370, &type metadata for PerformPrivateActionRequest.Request.RepairLicenseByBundleIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1AA8);
  }
  return result;
}

unint64_t sub_2360A4220()
{
  unint64_t result;

  result = qword_2563A1AB0;
  if (!qword_2563A1AB0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6320, &type metadata for PerformPrivateActionRequest.Request.RepairLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1AB0);
  }
  return result;
}

unint64_t PerformPrivateActionRequest.stringValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;

  v1 = *v0;
  if (!*((_BYTE *)v0 + 24))
  {
    sub_2360D0E48();
    swift_bridgeObjectRelease();
    v12 = 0xD000000000000020;
    sub_2360D0BE4();
    sub_2360D0BE4();
    goto LABEL_5;
  }
  if (*((_BYTE *)v0 + 24) == 1)
  {
    v12 = 0;
    sub_2360D0E48();
    sub_2360D0BE4();
    sub_2360D0BE4();
    sub_2360D0BE4();
    sub_2360D0BE4();
    swift_bridgeObjectRelease();
    sub_2360D0BE4();
LABEL_5:
    sub_2360D101C();
    sub_2360D0BE4();
    swift_bridgeObjectRelease();
    sub_2360D0BE4();
    return v12;
  }
  sub_2360D0E48();
  swift_bridgeObjectRelease();
  v12 = 0xD000000000000014;
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_236096460(0, v2, 0);
    v3 = v1 + 32;
    do
    {
      v3 += 8;
      v4 = sub_2360D101C();
      v6 = v5;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      if (v8 >= v7 >> 1)
        sub_236096460(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v4;
      *(_QWORD *)(v9 + 40) = v6;
      --v2;
    }
    while (v2);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25429DBB0);
  sub_2360A51F0();
  sub_2360D0B9C();
  swift_bridgeObjectRelease();
  sub_2360D0BE4();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_2360A457C()
{
  return 0x74736575716572;
}

uint64_t sub_2360A4594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x74736575716572 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2360D1028();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2360A4628()
{
  sub_2360A523C();
  return sub_2360D1148();
}

uint64_t sub_2360A4650()
{
  sub_2360A523C();
  return sub_2360D1154();
}

uint64_t PerformPrivateActionRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  _OWORD v10[2];
  uint64_t v11;
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1AE0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[0] = *(_OWORD *)v1;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_BYTE *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360A523C();
  sub_2360D113C();
  v10[1] = v10[0];
  v11 = v7;
  v12 = v8;
  sub_2360A5280();
  sub_2360D0FEC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PerformPrivateActionRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  __int128 v12;
  uint64_t v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1AF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360A523C();
  sub_2360D1124();
  if (!v2)
  {
    sub_2360A52C4();
    sub_2360D0F5C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v13;
    v10 = v14;
    *(_OWORD *)a2 = v12;
    *(_QWORD *)(a2 + 16) = v9;
    *(_BYTE *)(a2 + 24) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2360A48C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PerformPrivateActionRequest.init(from:)(a1, a2);
}

uint64_t sub_2360A48D4(_QWORD *a1)
{
  return PerformPrivateActionRequest.encode(to:)(a1);
}

uint64_t static PerformPrivateActionResponse.Response.== infix(_:_:)()
{
  return 1;
}

uint64_t PerformPrivateActionResponse.Response.hash(into:)()
{
  return sub_2360D10C4();
}

uint64_t sub_2360A4914()
{
  return 0x6465726F6E6769;
}

uint64_t sub_2360A492C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6465726F6E6769 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2360D1028();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2360A49C0()
{
  sub_2360A5308();
  return sub_2360D1148();
}

uint64_t sub_2360A49E8()
{
  sub_2360A5308();
  return sub_2360D1154();
}

uint64_t sub_2360A4A10()
{
  sub_2360A534C();
  return sub_2360D1148();
}

uint64_t sub_2360A4A38()
{
  sub_2360A534C();
  return sub_2360D1154();
}

uint64_t PerformPrivateActionResponse.Response.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1B08);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1B10);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360A5308();
  sub_2360D113C();
  sub_2360A534C();
  sub_2360D0F98();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t PerformPrivateActionResponse.Response.hashValue.getter()
{
  sub_2360D10B8();
  sub_2360D10C4();
  return sub_2360D10F4();
}

uint64_t PerformPrivateActionResponse.Response.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1B28);
  v2 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1B30);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360A5308();
  v8 = v23;
  sub_2360D1124();
  if (v8)
    goto LABEL_7;
  v20 = a1;
  v23 = v5;
  v10 = v21;
  v9 = v22;
  if (*(_QWORD *)(sub_2360D0F80() + 16) != 1)
  {
    v14 = sub_2360D0E78();
    swift_allocError();
    v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0270);
    *v16 = &type metadata for PerformPrivateActionResponse.Response;
    sub_2360D0F08();
    sub_2360D0E6C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x24BEE26D0], v14);
    swift_willThrow();
    v17 = v23;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v9);
    a1 = v20;
LABEL_7:
    v13 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v13);
  }
  sub_2360A534C();
  v11 = v4;
  sub_2360D0EFC();
  v12 = v23;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
  v13 = (uint64_t)v20;
  return __swift_destroy_boxed_opaque_existential_1(v13);
}

uint64_t sub_2360A4E38(_QWORD *a1)
{
  return PerformPrivateActionResponse.Response.init(from:)(a1);
}

uint64_t sub_2360A4E4C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1B08);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1B10);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360A5308();
  sub_2360D113C();
  sub_2360A534C();
  sub_2360D0F98();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2360A4F90()
{
  sub_2360A5390();
  return sub_2360D1148();
}

uint64_t sub_2360A4FB8()
{
  sub_2360A5390();
  return sub_2360D1154();
}

uint64_t PerformPrivateActionResponse.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1B38);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360A5390();
  sub_2360D113C();
  sub_2360A53D4();
  sub_2360D0FEC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t PerformPrivateActionResponse.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1B50);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360A5390();
  sub_2360D1124();
  if (!v1)
  {
    sub_2360A5418();
    sub_2360D0F5C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2360A51C8(_QWORD *a1)
{
  return PerformPrivateActionResponse.init(from:)(a1);
}

uint64_t sub_2360A51DC(_QWORD *a1)
{
  return PerformPrivateActionResponse.encode(to:)(a1);
}

unint64_t sub_2360A51F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2563A1AD8;
  if (!qword_2563A1AD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25429DBB0);
    result = MEMORY[0x23B7EBA68](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_2563A1AD8);
  }
  return result;
}

unint64_t sub_2360A523C()
{
  unint64_t result;

  result = qword_2563A1AE8;
  if (!qword_2563A1AE8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D62D0, &type metadata for PerformPrivateActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1AE8);
  }
  return result;
}

unint64_t sub_2360A5280()
{
  unint64_t result;

  result = qword_2563A1AF0;
  if (!qword_2563A1AF0)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for PerformPrivateActionRequest.Request, &type metadata for PerformPrivateActionRequest.Request);
    atomic_store(result, (unint64_t *)&qword_2563A1AF0);
  }
  return result;
}

unint64_t sub_2360A52C4()
{
  unint64_t result;

  result = qword_2563A1B00;
  if (!qword_2563A1B00)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for PerformPrivateActionRequest.Request, &type metadata for PerformPrivateActionRequest.Request);
    atomic_store(result, (unint64_t *)&qword_2563A1B00);
  }
  return result;
}

unint64_t sub_2360A5308()
{
  unint64_t result;

  result = qword_2563A1B18;
  if (!qword_2563A1B18)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6280, &type metadata for PerformPrivateActionResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1B18);
  }
  return result;
}

unint64_t sub_2360A534C()
{
  unint64_t result;

  result = qword_2563A1B20;
  if (!qword_2563A1B20)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6230, &type metadata for PerformPrivateActionResponse.Response.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1B20);
  }
  return result;
}

unint64_t sub_2360A5390()
{
  unint64_t result;

  result = qword_2563A1B40;
  if (!qword_2563A1B40)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D61E0, &type metadata for PerformPrivateActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1B40);
  }
  return result;
}

unint64_t sub_2360A53D4()
{
  unint64_t result;

  result = qword_2563A1B48;
  if (!qword_2563A1B48)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for PerformPrivateActionResponse.Response, &type metadata for PerformPrivateActionResponse.Response);
    atomic_store(result, (unint64_t *)&qword_2563A1B48);
  }
  return result;
}

unint64_t sub_2360A5418()
{
  unint64_t result;

  result = qword_2563A1B58;
  if (!qword_2563A1B58)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for PerformPrivateActionResponse.Response, &type metadata for PerformPrivateActionResponse.Response);
    atomic_store(result, (unint64_t *)&qword_2563A1B58);
  }
  return result;
}

unint64_t sub_2360A5460()
{
  unint64_t result;

  result = qword_2563A1B60;
  if (!qword_2563A1B60)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for PerformPrivateActionResponse.Response, &type metadata for PerformPrivateActionResponse.Response);
    atomic_store(result, (unint64_t *)&qword_2563A1B60);
  }
  return result;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest()
{
  return &type metadata for PerformPrivateActionRequest;
}

uint64_t destroy for PerformPrivateActionRequest.Request(uint64_t a1)
{
  return sub_236077E58(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t _s15AppDistribution27PerformPrivateActionRequestVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_236077E38(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s15AppDistribution27PerformPrivateActionRequestVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_236077E38(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_236077E58(v7, v8, v9, v10);
  return a1;
}

uint64_t _s15AppDistribution27PerformPrivateActionRequestVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_236077E58(v5, v7, v6, v8);
  return a1;
}

uint64_t _s15AppDistribution27PerformPrivateActionRequestVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s15AppDistribution27PerformPrivateActionRequestVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_2360A5694(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_2360A569C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest.Request()
{
  return &type metadata for PerformPrivateActionRequest.Request;
}

ValueMetadata *type metadata accessor for PerformPrivateActionResponse()
{
  return &type metadata for PerformPrivateActionResponse;
}

ValueMetadata *type metadata accessor for PerformPrivateActionResponse.Response()
{
  return &type metadata for PerformPrivateActionResponse.Response;
}

ValueMetadata *type metadata accessor for PerformPrivateActionResponse.CodingKeys()
{
  return &type metadata for PerformPrivateActionResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for PerformPrivateActionResponse.Response.CodingKeys()
{
  return &type metadata for PerformPrivateActionResponse.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for PerformPrivateActionResponse.Response.IgnoredCodingKeys()
{
  return &type metadata for PerformPrivateActionResponse.Response.IgnoredCodingKeys;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest.CodingKeys()
{
  return &type metadata for PerformPrivateActionRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest.Request.CodingKeys()
{
  return &type metadata for PerformPrivateActionRequest.Request.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PerformPrivateActionRequest.Request.RepairLicenseCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2360A5778 + 4 * byte_2360D59B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2360A57AC + 4 * asc_2360D59B0[v4]))();
}

uint64_t sub_2360A57AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360A57B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360A57BCLL);
  return result;
}

uint64_t sub_2360A57C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360A57D0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2360A57D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360A57DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest.Request.RepairLicenseCodingKeys()
{
  return &type metadata for PerformPrivateActionRequest.Request.RepairLicenseCodingKeys;
}

uint64_t _s15AppDistribution27PerformPrivateActionRequestV7RequestO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2360A5844 + 4 * byte_2360D59BF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2360A5878 + 4 * byte_2360D59BA[v4]))();
}

uint64_t sub_2360A5878(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360A5880(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360A5888);
  return result;
}

uint64_t sub_2360A5894(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360A589CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2360A58A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360A58A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest.Request.RepairLicenseByBundleIDCodingKeys()
{
  return &type metadata for PerformPrivateActionRequest.Request.RepairLicenseByBundleIDCodingKeys;
}

uint64_t _s15AppDistribution28PerformPrivateActionResponseV8ResponseOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2360A5904 + 4 * byte_2360D59C4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2360A5924 + 4 * byte_2360D59C9[v4]))();
}

_BYTE *sub_2360A5904(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2360A5924(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2360A592C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2360A5934(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2360A593C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2360A5944(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest.Request.RenewLicensesCodingKeys()
{
  return &type metadata for PerformPrivateActionRequest.Request.RenewLicensesCodingKeys;
}

unint64_t sub_2360A5964()
{
  unint64_t result;

  result = qword_2563A1B68;
  if (!qword_2563A1B68)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5D18, &type metadata for PerformPrivateActionRequest.Request.RenewLicensesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1B68);
  }
  return result;
}

unint64_t sub_2360A59AC()
{
  unint64_t result;

  result = qword_2563A1B70;
  if (!qword_2563A1B70)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5DD0, &type metadata for PerformPrivateActionRequest.Request.RepairLicenseByBundleIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1B70);
  }
  return result;
}

unint64_t sub_2360A59F4()
{
  unint64_t result;

  result = qword_2563A1B78;
  if (!qword_2563A1B78)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5E88, &type metadata for PerformPrivateActionRequest.Request.RepairLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1B78);
  }
  return result;
}

unint64_t sub_2360A5A3C()
{
  unint64_t result;

  result = qword_2563A1B80;
  if (!qword_2563A1B80)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5F40, &type metadata for PerformPrivateActionRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1B80);
  }
  return result;
}

unint64_t sub_2360A5A84()
{
  unint64_t result;

  result = qword_2563A1B88;
  if (!qword_2563A1B88)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5FF8, &type metadata for PerformPrivateActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1B88);
  }
  return result;
}

unint64_t sub_2360A5ACC()
{
  unint64_t result;

  result = qword_2563A1B90;
  if (!qword_2563A1B90)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6100, &type metadata for PerformPrivateActionResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1B90);
  }
  return result;
}

unint64_t sub_2360A5B14()
{
  unint64_t result;

  result = qword_2563A1B98;
  if (!qword_2563A1B98)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D61B8, &type metadata for PerformPrivateActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1B98);
  }
  return result;
}

unint64_t sub_2360A5B5C()
{
  unint64_t result;

  result = qword_2563A1BA0;
  if (!qword_2563A1BA0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6128, &type metadata for PerformPrivateActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1BA0);
  }
  return result;
}

unint64_t sub_2360A5BA4()
{
  unint64_t result;

  result = qword_2563A1BA8;
  if (!qword_2563A1BA8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6150, &type metadata for PerformPrivateActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1BA8);
  }
  return result;
}

unint64_t sub_2360A5BEC()
{
  unint64_t result;

  result = qword_2563A1BB0;
  if (!qword_2563A1BB0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6020, &type metadata for PerformPrivateActionResponse.Response.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1BB0);
  }
  return result;
}

unint64_t sub_2360A5C34()
{
  unint64_t result;

  result = qword_2563A1BB8;
  if (!qword_2563A1BB8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6048, &type metadata for PerformPrivateActionResponse.Response.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1BB8);
  }
  return result;
}

unint64_t sub_2360A5C7C()
{
  unint64_t result;

  result = qword_2563A1BC0;
  if (!qword_2563A1BC0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6070, &type metadata for PerformPrivateActionResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1BC0);
  }
  return result;
}

unint64_t sub_2360A5CC4()
{
  unint64_t result;

  result = qword_2563A1BC8;
  if (!qword_2563A1BC8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6098, &type metadata for PerformPrivateActionResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1BC8);
  }
  return result;
}

unint64_t sub_2360A5D0C()
{
  unint64_t result;

  result = qword_2563A1BD0;
  if (!qword_2563A1BD0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5F68, &type metadata for PerformPrivateActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1BD0);
  }
  return result;
}

unint64_t sub_2360A5D54()
{
  unint64_t result;

  result = qword_2563A1BD8;
  if (!qword_2563A1BD8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5F90, &type metadata for PerformPrivateActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1BD8);
  }
  return result;
}

unint64_t sub_2360A5D9C()
{
  unint64_t result;

  result = qword_2563A1BE0;
  if (!qword_2563A1BE0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5DF8, &type metadata for PerformPrivateActionRequest.Request.RepairLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1BE0);
  }
  return result;
}

unint64_t sub_2360A5DE4()
{
  unint64_t result;

  result = qword_2563A1BE8;
  if (!qword_2563A1BE8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5E20, &type metadata for PerformPrivateActionRequest.Request.RepairLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1BE8);
  }
  return result;
}

unint64_t sub_2360A5E2C()
{
  unint64_t result;

  result = qword_2563A1BF0;
  if (!qword_2563A1BF0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5D40, &type metadata for PerformPrivateActionRequest.Request.RepairLicenseByBundleIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1BF0);
  }
  return result;
}

unint64_t sub_2360A5E74()
{
  unint64_t result;

  result = qword_2563A1BF8;
  if (!qword_2563A1BF8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5D68, &type metadata for PerformPrivateActionRequest.Request.RepairLicenseByBundleIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1BF8);
  }
  return result;
}

unint64_t sub_2360A5EBC()
{
  unint64_t result;

  result = qword_2563A1C00;
  if (!qword_2563A1C00)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5C88, &type metadata for PerformPrivateActionRequest.Request.RenewLicensesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1C00);
  }
  return result;
}

unint64_t sub_2360A5F04()
{
  unint64_t result;

  result = qword_2563A1C08;
  if (!qword_2563A1C08)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5CB0, &type metadata for PerformPrivateActionRequest.Request.RenewLicensesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1C08);
  }
  return result;
}

unint64_t sub_2360A5F4C()
{
  unint64_t result;

  result = qword_2563A1C10;
  if (!qword_2563A1C10)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5EB0, &type metadata for PerformPrivateActionRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1C10);
  }
  return result;
}

unint64_t sub_2360A5F94()
{
  unint64_t result;

  result = qword_2563A1C18;
  if (!qword_2563A1C18)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D5ED8, &type metadata for PerformPrivateActionRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1C18);
  }
  return result;
}

uint64_t sub_2360A5FD8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x694C726961706572 && a2 == 0xED000065736E6563;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002360DDA50 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x63694C77656E6572 && a2 == 0xED00007365736E65)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2360A616C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 12895 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2360A6278(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t ManifestValidationRequest.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2360D08D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ManifestValidationRequest.primaryProductVariant.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ManifestValidationRequest() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for ManifestValidationRequest()
{
  uint64_t result;

  result = qword_2563A1C98;
  if (!qword_2563A1C98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ManifestValidationRequest.compatibleProductVariants.getter()
{
  type metadata accessor for ManifestValidationRequest();
  return swift_bridgeObjectRetain();
}

uint64_t ManifestValidationRequest.osVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ManifestValidationRequest() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

int *ManifestValidationRequest.init(url:primaryProductVariant:compatibleProductVariants:osVersion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  int *result;
  _QWORD *v16;
  _QWORD *v17;

  v14 = sub_2360D08D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a7, a1, v14);
  result = (int *)type metadata accessor for ManifestValidationRequest();
  v16 = (_QWORD *)(a7 + result[5]);
  *v16 = a2;
  v16[1] = a3;
  *(_QWORD *)(a7 + result[6]) = a4;
  v17 = (_QWORD *)(a7 + result[7]);
  *v17 = a5;
  v17[1] = a6;
  return result;
}

uint64_t ManifestValidationRequest.run()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[3] = v0;
  type metadata accessor for ManifestValidationRequest();
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2360A6544()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  if (qword_2563A01E0 != -1)
    swift_once();
  v1 = v0[4];
  v2 = v0[5];
  sub_2360A6748(v0[3], v2);
  sub_236077F30(&qword_2563A0678, (uint64_t (*)(uint64_t))type metadata accessor for ManifestValidationRequest, (uint64_t)&protocol conformance descriptor for ManifestValidationRequest);
  sub_236077F30(&qword_2563A0680, (uint64_t (*)(uint64_t))type metadata accessor for ManifestValidationRequest, (uint64_t)&protocol conformance descriptor for ManifestValidationRequest);
  sub_2360A6748(v2, v1);
  v0[2] = v1;
  v5 = (char *)&dword_2563A0670 + dword_2563A0670;
  v3 = (_QWORD *)swift_task_alloc();
  v0[6] = v3;
  *v3 = v0;
  v3[1] = sub_2360A6644;
  return ((uint64_t (*)(_QWORD *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v5)(v0 + 2, sub_2360A678C, 0);
}

uint64_t sub_2360A6644()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_2360A684C(*(_QWORD *)(v2 + 32));
  return swift_task_switch();
}

uint64_t sub_2360A66B0()
{
  uint64_t v0;

  sub_2360A684C(*(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2360A66F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_2360A684C(*(_QWORD *)(v0 + 32));
  sub_2360A684C(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2360A6748(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ManifestValidationRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2360A678C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  _QWORD v10[6];

  v8 = (void *)sub_2360D08F0();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23607D2C4;
  v10[3] = &block_descriptor_10;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_runManifestValidation_reply_, v8, v9);
  _Block_release(v9);

}

uint64_t sub_2360A684C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ManifestValidationRequest();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2360A6888()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2360A68B0 + 4 * byte_2360D6460[*v0]))(7107189, 0xE300000000000000);
}

unint64_t sub_2360A68B0()
{
  return 0xD000000000000015;
}

unint64_t sub_2360A68CC()
{
  return 0xD000000000000019;
}

uint64_t sub_2360A68EC()
{
  return 0x6F6973726556736FLL;
}

uint64_t sub_2360A6908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360A7614(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2360A692C()
{
  sub_2360A6B6C();
  return sub_2360D1148();
}

uint64_t sub_2360A6954()
{
  sub_2360A6B6C();
  return sub_2360D1154();
}

uint64_t ManifestValidationRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;
  char v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1C28);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360A6B6C();
  sub_2360D113C();
  v14 = 0;
  sub_2360D08D8();
  sub_236077F30(&qword_2563A04D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  sub_2360D0FEC();
  if (!v2)
  {
    v9 = type metadata accessor for ManifestValidationRequest();
    v13 = 1;
    sub_2360D0FA4();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 24));
    v11[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25429DBB0);
    sub_23607A564(&qword_2563A0900, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_2360D0FBC();
    v11[14] = 3;
    sub_2360D0FA4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2360A6B6C()
{
  unint64_t result;

  result = qword_2563A1C30;
  if (!qword_2563A1C30)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D65F4, &type metadata for ManifestValidationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1C30);
  }
  return result;
}

uint64_t ManifestValidationRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;

  v26 = a2;
  v27 = sub_2360D08D8();
  v3 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v28 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1C38);
  v5 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for ManifestValidationRequest();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360A6B6C();
  v30 = v7;
  v11 = (uint64_t)v31;
  sub_2360D1124();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v12 = v5;
  v31 = a1;
  v13 = (uint64_t)v10;
  v36 = 0;
  sub_236077F30(&qword_2563A04F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v14 = v27;
  v15 = v28;
  v16 = v29;
  sub_2360D0F5C();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v13, v15, v14);
  v35 = 1;
  v17 = sub_2360D0F14();
  v18 = (uint64_t *)(v13 + v8[5]);
  *v18 = v17;
  v18[1] = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25429DBB0);
  v34 = 2;
  sub_23607A564(&qword_25429DBD8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  sub_2360D0F2C();
  *(_QWORD *)(v13 + v8[6]) = v32;
  v33 = 3;
  v20 = sub_2360D0F14();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v30, v16);
  v23 = (uint64_t *)(v13 + v8[7]);
  *v23 = v20;
  v23[1] = v22;
  sub_2360A6748(v13, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return sub_2360A684C(v13);
}

uint64_t sub_2360A6F24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ManifestValidationRequest.init(from:)(a1, a2);
}

uint64_t sub_2360A6F38(_QWORD *a1)
{
  return ManifestValidationRequest.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ManifestValidationRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2360D08D8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    v13 = a3[7];
    v14 = (uint64_t *)((char *)a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ManifestValidationRequest(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2360D08D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ManifestValidationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = sub_2360D08D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ManifestValidationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_2360D08D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ManifestValidationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_2360D08D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for ManifestValidationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_2360D08D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ManifestValidationRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2360A72E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_2360D08D8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for ManifestValidationRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2360A7378(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_2360D08D8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_2360A73F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2360D08D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ManifestValidationRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2360A74BC + 4 * byte_2360D6469[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2360A74F0 + 4 * byte_2360D6464[v4]))();
}

uint64_t sub_2360A74F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360A74F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360A7500);
  return result;
}

uint64_t sub_2360A750C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360A7514);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2360A7518(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360A7520(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ManifestValidationRequest.CodingKeys()
{
  return &type metadata for ManifestValidationRequest.CodingKeys;
}

unint64_t sub_2360A7540()
{
  unint64_t result;

  result = qword_2563A1CD8;
  if (!qword_2563A1CD8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D65CC, &type metadata for ManifestValidationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1CD8);
  }
  return result;
}

unint64_t sub_2360A7588()
{
  unint64_t result;

  result = qword_2563A1CE0;
  if (!qword_2563A1CE0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D653C, &type metadata for ManifestValidationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1CE0);
  }
  return result;
}

unint64_t sub_2360A75D0()
{
  unint64_t result;

  result = qword_2563A1CE8;
  if (!qword_2563A1CE8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6564, &type metadata for ManifestValidationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1CE8);
  }
  return result;
}

uint64_t sub_2360A7614(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002360DDA70 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000002360DDA90 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t static AppLibrary.getSearchTerritory(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return swift_task_switch();
}

uint64_t sub_2360A77D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v6;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = qword_2563A01E0;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v1;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_BYTE *)(v0 + 64) = 1;
  *(_QWORD *)(v0 + 96) = v0 + 16;
  sub_236078628(v3, v1, 0, 0, 0, 0, 1);
  v6 = (char *)&dword_2563A07C0 + dword_2563A07C0;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v4;
  *v4 = v0;
  v4[1] = sub_2360A78D4;
  return ((uint64_t (*)(uint64_t, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v6)(v0 + 72, v0 + 96, sub_2360BFEF0, 0);
}

uint64_t sub_2360A78D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_23607867C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_2360A794C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  int v3;

  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(unsigned __int8 *)(v0 + 88);
  if (v3 != 7)
  {
    sub_23608DB8C(v1, v2, v3);
    v1 = 0;
    v2 = 0;
  }
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_2360A799C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);
  sub_23607867C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t static AppLibrary.setSearchTerritory(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  sub_2360D0C74();
  v4[14] = sub_2360D0C68();
  v4[15] = sub_2360D0C44();
  v4[16] = v5;
  return swift_task_switch();
}

uint64_t sub_2360A7A68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = qword_2563A01E0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v1 != -1)
    swift_once();
  *(_QWORD *)(v0 + 136) = qword_2563B89E0;
  return swift_task_switch();
}

uint64_t sub_2360A7AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  sub_236078410();
  sub_236078454();
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v3;
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 40) = v2;
  *(_BYTE *)(v0 + 64) = 4;
  *(_QWORD *)(v0 + 72) = v0 + 16;
  sub_236078498(v4, v3, v1, v2, 0, 0, 4);
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2563A07A8 + dword_2563A07A8);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v5;
  *v5 = v0;
  v5[1] = sub_2360A7BB4;
  return v7(v0 + 72, (uint64_t)sub_2360A7D54, 0);
}

uint64_t sub_2360A7BB4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_236078500(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_2360A7C2C()
{
  uint64_t *v0;

  sub_236078500(v0[10], v0[11], v0[12], v0[13], 0, 0, 4);
  return swift_task_switch();
}

uint64_t sub_2360A7C74()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2360A7CA4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 152);
  sub_236078500(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));

  return swift_task_switch();
}

uint64_t sub_2360A7CF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  swift_release();
  sub_236078500(v4, v3, v2, v1, 0, 0, 4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2360A7D54(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  _QWORD v10[6];

  v8 = (void *)sub_2360D08F0();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23607D2C4;
  v10[3] = &block_descriptor_11;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_setPrivateDataRequest_reply_, v8, v9);
  _Block_release(v9);

}

uint64_t static AppLibrary.associatedApps(developerID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return swift_task_switch();
}

uint64_t sub_2360A7E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v6;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = qword_2563A01E0;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0x1000000000000000;
  *(_BYTE *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 96) = v0 + 16;
  sub_236078628(v3, v1, 0, 0, 0, 0x1000000000000000uLL, 0);
  v6 = (char *)&dword_2563A07C0 + dword_2563A07C0;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v4;
  *v4 = v0;
  v4[1] = sub_2360A7F2C;
  return ((uint64_t (*)(uint64_t, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v6)(v0 + 72, v0 + 96, sub_2360BFEF0, 0);
}

uint64_t sub_2360A7F2C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_23607867C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_2360A7FA4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(unsigned __int8 *)(v0 + 88);
  if (v2 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23608DB8C(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), v2);
    swift_bridgeObjectRelease();
    v1 = MEMORY[0x24BEE4AF8];
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_2360A8010()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);
  sub_23607867C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
}

uint64_t static AppLibrary.synchronousAssociatedApps(developerID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t *v14;
  __int128 v15;
  char v16;

  v4 = qword_2563A01E0;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v7 = a1;
  v8 = a2;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0x1000000000000000;
  v13 = 0;
  v14 = &v7;
  sub_236078628(a1, a2, 0, 0, 0, 0x1000000000000000uLL, 0);
  sub_23608C860(&v14, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_2360BFF04, 0, &v15);
  sub_23607867C(v7, v8, v9, v10, v11, v12, v13);
  v5 = v15;
  if (v16 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23608DB8C(v15, *((unint64_t *)&v15 + 1), v16);
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v5;
}

Swift::Void __swiftcall AppLibrary.beginIndeterminantProgress(itemID:)(Swift::UInt64 itemID)
{
  Swift::String v2;
  Swift::String v3;

  sub_2360D0C74();
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  AppLibrary.beginIndeterminantProgress(itemID:versionID:version:shortVersion:account:)(itemID, 0, v2, v3, (Swift::String_optional)0);
  swift_release();
}

Swift::Void __swiftcall AppLibrary.beginIndeterminantProgress(itemID:versionID:version:shortVersion:account:)(Swift::UInt64 itemID, Swift::UInt64 versionID, Swift::String version, Swift::String shortVersion, Swift::String_optional account)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t countAndFlagsBits;
  void *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *object;
  void *v30;
  uint64_t v31;
  _QWORD v32[8];

  object = account.value._object;
  v30 = shortVersion._object;
  countAndFlagsBits = account.value._countAndFlagsBits;
  v6 = shortVersion._countAndFlagsBits;
  v7 = version._object;
  v8 = version._countAndFlagsBits;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0A88);
  MEMORY[0x24BDAC7A8](v11);
  v27 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2360D0C74();
  v26 = sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v28 = v5;
  v13 = AppLibrary.app(forAppleItemID:)(itemID);
  v14 = objc_allocWithZone((Class)type metadata accessor for InstallationNSProgress());
  v15 = object;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = v30;
  swift_bridgeObjectRetain();
  v17 = sub_236082DF4(itemID);
  v32[0] = versionID;
  v32[1] = v8;
  v25 = v7;
  v32[2] = v7;
  v32[3] = v6;
  v32[4] = v16;
  v32[5] = countAndFlagsBits;
  v32[6] = v15;
  v32[7] = v17;
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  *(&v23 - 2) = v13;
  *(&v23 - 1) = (uint64_t)v32;
  v19 = v13 + OBJC_IVAR____TtCC15AppDistribution10AppLibrary3App___observationRegistrar;
  v31 = v13;
  sub_2360A8AD4();
  countAndFlagsBits = v19;
  sub_2360D0920();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = type metadata accessor for MarketplaceKitError();
  v21 = (uint64_t)v27;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v27, 1, 1, v20);
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v22 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v22);
  *(&v23 - 2) = v13;
  *(&v23 - 1) = v21;
  v31 = v13;
  sub_2360D0920();
  swift_release();
  sub_2360A8B24(v21);
  swift_release();
  AppLibrary.updateInstallState(forUpdated:)(v13);
  swift_release();
  swift_release();
}

uint64_t AppLibrary.resetAppToAvailable(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  char *v10;
  uint64_t v11;
  _OWORD v12[4];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0A88);
  MEMORY[0x24BDAC7A8](v2);
  v10 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2360D0C74();
  v9[1] = sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  memset(v12, 0, sizeof(v12));
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  v9[-2] = a1;
  v9[-1] = v12;
  v11 = a1;
  sub_2360A8AD4();
  sub_2360D0920();
  swift_release();
  swift_release();
  v5 = type metadata accessor for MarketplaceKitError();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v10, 1, 1, v5);
  sub_2360D0C68();
  sub_2360D0C44();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v6 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v6);
  v7 = (uint64_t)v10;
  v9[-2] = a1;
  v9[-1] = v7;
  v11 = a1;
  sub_2360D0920();
  swift_release();
  sub_2360A8B24(v7);
  swift_release();
  AppLibrary.updateInstallState(forUpdated:)(a1);
  return swift_release();
}

uint64_t RepairRequest.bundleID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RepairRequest.isBackground.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t RepairRequest.reason.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t RepairRequest.init(bundleID:isBackground:reason:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  return result;
}

uint64_t AppLibrary.handleRepairRequest(_:)(uint64_t a1)
{
  uint64_t v1;

  *(_OWORD *)(v1 + 56) = *(_OWORD *)a1;
  *(_BYTE *)(v1 + 41) = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(v1 + 72) = *(_QWORD *)(a1 + 24);
  return swift_task_switch();
}

uint64_t sub_2360A890C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v3 = *(_QWORD *)(v2 + 72);
  if (v3 >> 31)
  {
    __break(1u);
    goto LABEL_5;
  }
  v1 = *(unsigned __int8 *)(v2 + 41);
  v0 = *(_QWORD *)(v2 + 64);
  v4 = qword_2563A01E0;
  swift_bridgeObjectRetain();
  if (v4 != -1)
LABEL_5:
    swift_once();
  v5 = v1 ^ 1u | (v3 << 32);
  v6 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)(v2 + 24) = v0;
  *(_QWORD *)(v2 + 32) = v5;
  *(_BYTE *)(v2 + 40) = 1;
  *(_QWORD *)(v2 + 48) = v2 + 16;
  sub_236077E38(v6, v0, v5, 1u);
  v9 = (uint64_t (*)(void))((char *)&dword_2563A0688 + dword_2563A0688);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 80) = v7;
  *v7 = v2;
  v7[1] = sub_2360A8A04;
  return v9();
}

uint64_t sub_2360A8A04()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    sub_236077E58(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40));
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_2360A8A84()
{
  uint64_t v0;

  sub_236077E58(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_2360A8AD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2563A0A78;
  if (!qword_2563A0A78)
  {
    v1 = type metadata accessor for AppLibrary.App();
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for AppLibrary.App, v1);
    atomic_store(result, (unint64_t *)&qword_2563A0A78);
  }
  return result;
}

uint64_t sub_2360A8B24(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0A88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithCopy for RepairRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RepairRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for RepairRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for RepairRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RepairRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RepairRequest()
{
  return &type metadata for RepairRequest;
}

uint64_t CodableAuditToken.auditToken.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CodableAuditToken.init(auditToken:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t CodableAuditToken.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __int128 v5;
  void *v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD v12[6];

  v12[5] = *MEMORY[0x24BDAC8D0];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360D1118();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    sub_2360867A4();
    sub_2360D1034();
    v5 = v10;
    v10 = 0u;
    v11 = 0u;
    v6 = (void *)sub_2360D08F0();
    objc_msgSend(v6, sel_getBytes_length_, &v10, 32);
    sub_236077AC4(v5, *((unint64_t *)&v5 + 1));

    v8 = v11;
    v9 = v10;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    *a2 = v9;
    a2[1] = v8;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t CodableAuditToken.encode(to:)(_QWORD *a1)
{
  _OWORD *v1;
  __int128 v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _OWORD v7[2];
  uint64_t v8;
  unint64_t v9;
  _BYTE v10[24];
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360D1130();
  v2 = v1[1];
  v7[0] = *v1;
  v7[1] = v2;
  v3 = sub_2360A92EC(v7, 32);
  v5 = v4;
  v8 = v3;
  v9 = v4;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
  sub_236086058();
  sub_2360D1040();
  sub_236077AC4(v3, v5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_2360A8F5C@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return CodableAuditToken.init(from:)(a1, a2);
}

uint64_t sub_2360A8F70(_QWORD *a1)
{
  return CodableAuditToken.encode(to:)(a1);
}

uint64_t static FairPlayPassbookProvisioning.getProvisioningInfo(auditToken:nonce:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[17] = a5;
  v6[18] = a6;
  v6[15] = a3;
  v6[16] = a4;
  v6[13] = a1;
  v6[14] = a2;
  return swift_task_switch();
}

uint64_t sub_2360A8FA4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 144);
  sub_236077B70(*(_QWORD *)(v0 + 136), v1);
  if (qword_2563A01E0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 16) = v6;
  *(_QWORD *)(v0 + 24) = v4;
  *(_QWORD *)(v0 + 32) = v5;
  *(_QWORD *)(v0 + 40) = v2;
  *(_QWORD *)(v0 + 48) = v3;
  *(_QWORD *)(v0 + 56) = v1 | 0x2000000000000000;
  *(_BYTE *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 96) = v0 + 16;
  sub_236078628(v6, v4, v5, v2, v3, v1 | 0x2000000000000000, 0);
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2563A07C0 + dword_2563A07C0);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v7;
  *v7 = v0;
  v7[1] = sub_2360A9094;
  return v9(v0 + 72, v0 + 96, (uint64_t)sub_2360BFEF0, 0);
}

uint64_t sub_2360A9094()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_23607867C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_2360A910C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  int v3;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(unsigned __int8 *)(v0 + 88);
  if (v3 == 4)
  {
    sub_236077AC4(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
    return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v2, v1);
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_2360A226C();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_23608DB8C(v2, v1, v3);
    sub_236077AC4(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2360A91E4()
{
  uint64_t v0;

  sub_23607867C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  sub_236077AC4(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2360A922C(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_2360A92EC(_BYTE *__src, uint64_t a2)
{
  uint64_t result;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_2360A922C(__src, &__src[a2]);
  sub_2360D0890();
  swift_allocObject();
  sub_2360D0860();
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  sub_2360D08E4();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for CodableAuditToken(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CodableAuditToken(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CodableAuditToken()
{
  return &type metadata for CodableAuditToken;
}

ValueMetadata *type metadata accessor for FairPlayPassbookProvisioning()
{
  return &type metadata for FairPlayPassbookProvisioning;
}

uint64_t AppDistributorResult.init(distributorID:requestingBundleID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t sub_2360A9444()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0x7562697274736964;
}

uint64_t sub_2360A9490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360AA174(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2360A94B4()
{
  sub_2360A9638();
  return sub_2360D1148();
}

uint64_t sub_2360A94DC()
{
  sub_2360A9638();
  return sub_2360D1154();
}

uint64_t AppDistributorResult.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1D18);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v9[1] = *(_QWORD *)(v1 + 24);
  v9[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360A9638();
  sub_2360D113C();
  v12 = 0;
  sub_2360D0FD4();
  if (!v2)
  {
    v11 = 1;
    sub_2360D0FD4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

unint64_t sub_2360A9638()
{
  unint64_t result;

  result = qword_2563A1D20;
  if (!qword_2563A1D20)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D68AC, &type metadata for AppDistributorResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1D20);
  }
  return result;
}

uint64_t AppDistributorResult.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1D28);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360A9638();
  sub_2360D1124();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = 0;
  v9 = sub_2360D0F44();
  v11 = v10;
  v19 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_2360D0F44();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v16;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2360A981C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AppDistributorResult.init(from:)(a1, a2);
}

uint64_t sub_2360A9830(_QWORD *a1)
{
  return AppDistributorResult.encode(to:)(a1);
}

uint64_t static AppDistributor.current.getter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = a1;
  return swift_task_switch();
}

uint64_t sub_2360A985C()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v11;

  v1 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v2 = objc_msgSend(v1, sel_environment);

  v3 = sub_2360D0B90();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_23609C034(0xD00000000000001BLL, 0x80000002360DDAE0), (v5 & 1) != 0))
  {
    v6 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v4);
    v8 = *v6;
    v7 = v6[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  swift_bridgeObjectRelease();
  if (qword_2563A01E0 != -1)
    swift_once();
  v0[6] = v8;
  v0[8] = v0 + 6;
  v0[7] = v7;
  v11 = (char *)&dword_2563A0628 + dword_2563A0628;
  v9 = (_QWORD *)swift_task_alloc();
  v0[10] = v9;
  *v9 = v0;
  v9[1] = sub_2360A99D4;
  return ((uint64_t (*)(_QWORD *, _QWORD *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v11)(v0 + 2, v0 + 8, sub_2360A9AB4, 0);
}

uint64_t sub_2360A99D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2360A9A40()
{
  uint64_t v0;
  uint64_t *v1;
  __int128 v2;
  _OWORD v4[2];

  v1 = *(uint64_t **)(v0 + 72);
  v2 = *(_OWORD *)(v0 + 32);
  v4[0] = *(_OWORD *)(v0 + 16);
  v4[1] = v2;
  AppDistributor.init(result:)((uint64_t *)v4, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2360A9A80()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2360A9AB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_236079824(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_7_0, (SEL *)&selRef_distributorIDForCaller_reply_);
}

uint64_t *AppDistributor.init(result:)@<X0>(uint64_t *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = result[1];
  if (v3)
  {
    v4 = *result;
    v6 = result[2];
    v5 = result[3];
    if (*result == 0xD000000000000012)
    {
      v7 = 0x80000002360DCF10;
      if (v3 == 0x80000002360DCF10)
      {
        v8 = 0xD000000000000012;
LABEL_8:
        result = (uint64_t *)sub_2360A9DBC(v8, v7);
        v4 = 0;
        v3 = 0;
        goto LABEL_9;
      }
    }
    if ((sub_2360D1028() & 1) != 0)
    {
      v8 = v4;
      v7 = v3;
      goto LABEL_8;
    }
    if (v4 == 0xD000000000000014)
    {
      v9 = 0x80000002360DDB00;
      if (v3 == 0x80000002360DDB00)
      {
        v10 = 0xD000000000000014;
LABEL_15:
        result = (uint64_t *)sub_2360A9DBC(v10, v9);
        v4 = 0;
        v3 = 1;
        goto LABEL_9;
      }
    }
    if ((sub_2360D1028() & 1) != 0)
    {
      v10 = v4;
      v9 = v3;
      goto LABEL_15;
    }
    if (v4 == v6 && v3 == v5)
    {
      v11 = v4;
      v12 = v3;
    }
    else
    {
      if ((sub_2360D1028() & 1) == 0)
      {
        swift_bridgeObjectRetain();
        result = (uint64_t *)sub_2360A9DBC(v4, v3);
        goto LABEL_9;
      }
      v11 = v4;
      v12 = v3;
    }
    result = (uint64_t *)sub_2360A9DBC(v11, v12);
    v4 = 0;
    v3 = 2;
  }
  else
  {
    v4 = 0;
    v3 = 3;
  }
LABEL_9:
  *a2 = v4;
  a2[1] = v3;
  return result;
}

uint64_t static AppDistributor.setDistributorIDOverridableForStoreSignedApps(_:)(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 41) = a1;
  return swift_task_switch();
}

uint64_t sub_2360A9C88()
{
  uint64_t v0;
  _QWORD *v1;
  char *v3;

  if (qword_2563A01E0 != -1)
    swift_once();
  *(_BYTE *)(v0 + 40) = *(_BYTE *)(v0 + 41);
  *(_QWORD *)(v0 + 16) = v0 + 40;
  v3 = (char *)&dword_2563A0620 + dword_2563A0620;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_2360A9D38;
  return ((uint64_t (*)(uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v3)(v0 + 16, sub_2360A9DA8, 0);
}

uint64_t sub_2360A9D38()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2360A9D9C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2360A9DA8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_236079824(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_12, (SEL *)&selRef_setDistributorIDOverridableForStoreSignedApps_reply_);
}

uint64_t sub_2360A9DBC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t destroy for AppDistributorResult()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AppDistributorResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AppDistributorResult(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for AppDistributorResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AppDistributorResult()
{
  return &type metadata for AppDistributorResult;
}

uint64_t getEnumTagSinglePayload for AppDistributor(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 3;
  if (v4 >= 5)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AppDistributor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppDistributor()
{
  return &type metadata for AppDistributor;
}

uint64_t storeEnumTagSinglePayload for AppDistributorResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2360AA01C + 4 * byte_2360D6755[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2360AA050 + 4 * asc_2360D6750[v4]))();
}

uint64_t sub_2360AA050(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360AA058(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360AA060);
  return result;
}

uint64_t sub_2360AA06C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360AA074);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2360AA078(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360AA080(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppDistributorResult.CodingKeys()
{
  return &type metadata for AppDistributorResult.CodingKeys;
}

unint64_t sub_2360AA0A0()
{
  unint64_t result;

  result = qword_2563A1D40;
  if (!qword_2563A1D40)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6884, &type metadata for AppDistributorResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1D40);
  }
  return result;
}

unint64_t sub_2360AA0E8()
{
  unint64_t result;

  result = qword_2563A1D48;
  if (!qword_2563A1D48)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D67F4, &type metadata for AppDistributorResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1D48);
  }
  return result;
}

unint64_t sub_2360AA130()
{
  unint64_t result;

  result = qword_2563A1D50;
  if (!qword_2563A1D50)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D681C, &type metadata for AppDistributorResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1D50);
  }
  return result;
}

uint64_t sub_2360AA174(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7562697274736964 && a2 == 0xED00004449726F74;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002360DDB20)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t UpdateMetadata.bundleID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UpdateMetadata.bundleVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UpdateMetadata.itemID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UpdateMetadata.shortVersionString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UpdateMetadata.init(bundleID:bundleVersion:itemID:shortVersionString:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t sub_2360AA350()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2360AA380 + 4 * byte_2360D68FC[*v0]))(0x4449656C646E7562, 0xE800000000000000);
}

uint64_t sub_2360AA380()
{
  return 0x6556656C646E7562;
}

uint64_t sub_2360AA3A4()
{
  return 0x44496D657469;
}

unint64_t sub_2360AA3B8()
{
  return 0xD000000000000012;
}

uint64_t sub_2360AA3D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360AAD24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2360AA3F8()
{
  sub_2360AA5F0();
  return sub_2360D1148();
}

uint64_t sub_2360AA420()
{
  sub_2360AA5F0();
  return sub_2360D1154();
}

uint64_t UpdateMetadata.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[8];
  char v13;
  char v14;
  char v15;
  char v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1D58);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v12[5] = v1[3];
  v12[6] = v7;
  v8 = v1[4];
  v12[3] = v1[5];
  v12[4] = v8;
  v9 = v1[6];
  v12[1] = v1[7];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360AA5F0();
  sub_2360D113C();
  v16 = 0;
  v10 = v12[7];
  sub_2360D0FD4();
  if (!v10)
  {
    v15 = 1;
    sub_2360D0FD4();
    v14 = 2;
    sub_2360D0FD4();
    v13 = 3;
    sub_2360D0FD4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2360AA5F0()
{
  unint64_t result;

  result = qword_2563A1D60;
  if (!qword_2563A1D60)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6A40, &type metadata for UpdateMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1D60);
  }
  return result;
}

uint64_t UpdateMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1D68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360AA5F0();
  sub_2360D1124();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v32 = 0;
  v9 = sub_2360D0F44();
  v11 = v10;
  v27 = v9;
  v31 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_2360D0F44();
  v28 = v13;
  v26 = v12;
  v30 = 2;
  swift_bridgeObjectRetain();
  v24 = sub_2360D0F44();
  v25 = v14;
  v29 = 3;
  swift_bridgeObjectRetain();
  v15 = sub_2360D0F44();
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20 = v15;
  v19(v8, v5);
  swift_bridgeObjectRetain();
  v21 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v27;
  a2[1] = v11;
  v22 = v25;
  a2[2] = v26;
  a2[3] = v21;
  a2[4] = v24;
  a2[5] = v22;
  a2[6] = v20;
  a2[7] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2360AA904@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return UpdateMetadata.init(from:)(a1, a2);
}

uint64_t sub_2360AA918(_QWORD *a1)
{
  return UpdateMetadata.encode(to:)(a1);
}

uint64_t destroy for UpdateMetadata()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for UpdateMetadata(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for UpdateMetadata(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for UpdateMetadata(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UpdateMetadata(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UpdateMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateMetadata()
{
  return &type metadata for UpdateMetadata;
}

uint64_t storeEnumTagSinglePayload for UpdateMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2360AABCC + 4 * byte_2360D6905[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2360AAC00 + 4 * byte_2360D6900[v4]))();
}

uint64_t sub_2360AAC00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360AAC08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360AAC10);
  return result;
}

uint64_t sub_2360AAC1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360AAC24);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2360AAC28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360AAC30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UpdateMetadata.CodingKeys()
{
  return &type metadata for UpdateMetadata.CodingKeys;
}

unint64_t sub_2360AAC50()
{
  unint64_t result;

  result = qword_2563A1D70;
  if (!qword_2563A1D70)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6A18, &type metadata for UpdateMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1D70);
  }
  return result;
}

unint64_t sub_2360AAC98()
{
  unint64_t result;

  result = qword_2563A1D78;
  if (!qword_2563A1D78)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6988, &type metadata for UpdateMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1D78);
  }
  return result;
}

unint64_t sub_2360AACE0()
{
  unint64_t result;

  result = qword_2563A1D80;
  if (!qword_2563A1D80)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D69B0, &type metadata for UpdateMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1D80);
  }
  return result;
}

uint64_t sub_2360AAD24(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6556656C646E7562 && a2 == 0xED00006E6F697372 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44496D657469 && a2 == 0xE600000000000000 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002360DDB40)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t DeveloperApprovalSheetContext.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.firstBulletTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.firstBulletBody.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.secondBulletTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.secondBulletBody.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.thirdBulletTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.thirdBulletBody.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.allowButtonText.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.ignoreButtonText.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.developerID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.developerName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.supportURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.passcodeTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 208);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.passcodeReason.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 224);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.touchIDTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 240);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.touchIDReason.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 256);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 DeveloperApprovalSheetContext.init(title:body:firstBulletTitle:firstBulletBody:secondBulletTitle:secondBulletBody:thirdBulletTitle:thirdBulletBody:allowButtonText:ignoreButtonText:developerID:developerName:supportURL:passcodeTitle:passcodeReason:touchIDTitle:touchIDReason:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __int128 a11, __int128 a12, __int128 a13, __int128 a14, __int128 a15, __int128 a16, __int128 a17, __int128 a18, __int128 a19, __int128 a20,__n128 a21,uint64_t a22,uint64_t a23)
{
  __n128 result;

  result = a21;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 80) = a11;
  *(_OWORD *)(a9 + 96) = a12;
  *(_OWORD *)(a9 + 112) = a13;
  *(_OWORD *)(a9 + 128) = a14;
  *(_OWORD *)(a9 + 144) = a15;
  *(_OWORD *)(a9 + 160) = a16;
  *(_OWORD *)(a9 + 176) = a17;
  *(_OWORD *)(a9 + 192) = a18;
  *(_OWORD *)(a9 + 208) = a19;
  *(_OWORD *)(a9 + 224) = a20;
  *(__n128 *)(a9 + 240) = a21;
  *(_QWORD *)(a9 + 256) = a22;
  *(_QWORD *)(a9 + 264) = a23;
  return result;
}

uint64_t sub_2360AB22C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2360AB25C + 4 * byte_2360D6A90[a1]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_2360AB25C()
{
  return 2036625250;
}

unint64_t sub_2360AB26C()
{
  return 0xD000000000000010;
}

uint64_t sub_2360AB324()
{
  return 0x65706F6C65766564;
}

uint64_t sub_2360AB358()
{
  return 0x5574726F70707573;
}

uint64_t sub_2360AB374()
{
  return 0x65646F6373736170;
}

uint64_t sub_2360AB3AC()
{
  return 0x5444496863756F74;
}

uint64_t sub_2360AB3CC()
{
  return 0x5244496863756F74;
}

uint64_t sub_2360AB3F0()
{
  unsigned __int8 *v0;

  return sub_2360AB22C(*v0);
}

uint64_t sub_2360AB3F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360AD320(a1, a2);
  *a3 = result;
  return result;
}

void sub_2360AB41C(_BYTE *a1@<X8>)
{
  *a1 = 17;
}

uint64_t sub_2360AB428()
{
  sub_2360AB95C();
  return sub_2360D1148();
}

uint64_t sub_2360AB450()
{
  sub_2360AB95C();
  return sub_2360D1154();
}

uint64_t DeveloperApprovalSheetContext.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[32];
  uint64_t v20;
  char v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1D88);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v19[30] = v1[3];
  v19[31] = v7;
  v8 = v1[4];
  v19[28] = v1[5];
  v19[29] = v8;
  v9 = v1[6];
  v19[26] = v1[7];
  v19[27] = v9;
  v10 = v1[8];
  v19[24] = v1[9];
  v19[25] = v10;
  v11 = v1[11];
  v19[22] = v1[10];
  v19[23] = v11;
  v12 = v1[13];
  v19[20] = v1[12];
  v19[21] = v12;
  v13 = v1[15];
  v19[18] = v1[14];
  v19[19] = v13;
  v14 = v1[17];
  v19[16] = v1[16];
  v19[17] = v14;
  v15 = v1[18];
  v19[14] = v1[19];
  v19[15] = v15;
  v16 = v1[20];
  v19[12] = v1[21];
  v19[13] = v16;
  v19[11] = v1[22];
  v19[10] = v1[23];
  v19[9] = v1[24];
  v19[8] = v1[25];
  v19[7] = v1[26];
  v19[6] = v1[27];
  v19[5] = v1[28];
  v19[4] = v1[29];
  v19[3] = v1[30];
  v19[2] = v1[31];
  v19[1] = v1[32];
  v19[0] = v1[33];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360AB95C();
  sub_2360D113C();
  v21 = 0;
  v17 = v20;
  sub_2360D0FD4();
  if (!v17)
  {
    v21 = 1;
    sub_2360D0FD4();
    v21 = 2;
    sub_2360D0FD4();
    v20 = v4;
    v21 = 3;
    sub_2360D0FD4();
    v21 = 4;
    sub_2360D0FD4();
    v21 = 5;
    sub_2360D0FD4();
    v21 = 6;
    sub_2360D0FD4();
    v21 = 7;
    sub_2360D0FD4();
    v21 = 8;
    sub_2360D0FD4();
    v21 = 9;
    sub_2360D0FD4();
    v21 = 10;
    sub_2360D0FD4();
    v21 = 11;
    sub_2360D0FD4();
    v21 = 12;
    sub_2360D0FA4();
    v21 = 13;
    sub_2360D0FD4();
    v21 = 14;
    sub_2360D0FD4();
    v21 = 15;
    sub_2360D0FD4();
    v21 = 16;
    sub_2360D0FD4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2360AB95C()
{
  unint64_t result;

  result = qword_2563A1D90;
  if (!qword_2563A1D90)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6C24, &type metadata for DeveloperApprovalSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1D90);
  }
  return result;
}

uint64_t DeveloperApprovalSheetContext.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD v86[34];
  _QWORD v87[35];
  char v88;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1D98);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v85 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_2360AB95C();
  sub_2360D1124();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
  v76 = a2;
  LOBYTE(v87[0]) = 0;
  v11 = sub_2360D0F44();
  v13 = v12;
  LOBYTE(v87[0]) = 1;
  swift_bridgeObjectRetain();
  v75 = sub_2360D0F44();
  LOBYTE(v87[0]) = 2;
  v15 = v14;
  swift_bridgeObjectRetain();
  v16 = sub_2360D0F44();
  v84 = v15;
  v74 = v16;
  LOBYTE(v87[0]) = 3;
  v18 = v17;
  swift_bridgeObjectRetain();
  v19 = sub_2360D0F44();
  v83 = v18;
  v73 = v19;
  LOBYTE(v87[0]) = 4;
  v21 = v20;
  swift_bridgeObjectRetain();
  v22 = sub_2360D0F44();
  v82 = v21;
  v72 = v22;
  LOBYTE(v87[0]) = 5;
  v24 = v23;
  swift_bridgeObjectRetain();
  v25 = sub_2360D0F44();
  v81 = v24;
  v71 = v25;
  LOBYTE(v87[0]) = 6;
  v27 = v26;
  swift_bridgeObjectRetain();
  v28 = sub_2360D0F44();
  v80 = v27;
  v70 = v28;
  LOBYTE(v87[0]) = 7;
  v30 = v29;
  swift_bridgeObjectRetain();
  v31 = sub_2360D0F44();
  v79 = v30;
  v69 = v31;
  LOBYTE(v87[0]) = 8;
  v33 = v32;
  swift_bridgeObjectRetain();
  v68 = sub_2360D0F44();
  v78 = v33;
  LOBYTE(v87[0]) = 9;
  v77 = v34;
  swift_bridgeObjectRetain();
  v66 = sub_2360D0F44();
  v67 = v35;
  LOBYTE(v87[0]) = 10;
  swift_bridgeObjectRetain();
  v64 = sub_2360D0F44();
  v65 = v36;
  LOBYTE(v87[0]) = 11;
  swift_bridgeObjectRetain();
  v62 = sub_2360D0F44();
  v63 = v37;
  LOBYTE(v87[0]) = 12;
  swift_bridgeObjectRetain();
  v59 = sub_2360D0F14();
  v61 = v38;
  LOBYTE(v87[0]) = 13;
  swift_bridgeObjectRetain();
  v56 = sub_2360D0F44();
  v58 = v39;
  v60 = 0;
  LOBYTE(v87[0]) = 14;
  swift_bridgeObjectRetain();
  v40 = v60;
  v55 = sub_2360D0F44();
  v57 = v41;
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (!v60)
      return swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v87[0]) = 15;
    swift_bridgeObjectRetain();
    v54 = sub_2360D0F44();
    v43 = v42;
    v88 = 16;
    swift_bridgeObjectRetain();
    v44 = sub_2360D0F44();
    v53 = v45;
    v46 = v44;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v86[0] = v11;
    v86[1] = v13;
    v86[2] = v75;
    v86[3] = v84;
    v86[4] = v74;
    v86[5] = v83;
    v86[6] = v73;
    v86[7] = v82;
    v86[8] = v72;
    v86[9] = v81;
    v86[10] = v71;
    v86[11] = v80;
    v86[12] = v70;
    v86[13] = v79;
    v86[14] = v69;
    v86[15] = v78;
    v86[16] = v68;
    v86[17] = v77;
    v86[18] = v66;
    v86[19] = v67;
    v86[20] = v64;
    v86[21] = v65;
    v86[22] = v62;
    v86[23] = v63;
    v86[24] = v59;
    v86[25] = v61;
    v86[26] = v56;
    v86[27] = v58;
    v86[28] = v55;
    v86[29] = v57;
    v86[30] = v54;
    v86[31] = v43;
    v52 = v46;
    v86[32] = v46;
    v86[33] = v53;
    sub_2360AC810((uint64_t)v86);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v47 = v63;
    swift_bridgeObjectRelease();
    v48 = v61;
    swift_bridgeObjectRelease();
    v49 = v58;
    swift_bridgeObjectRelease();
    v50 = v57;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v76, v86, 0x110uLL);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
    v87[0] = v11;
    v87[1] = v13;
    v87[2] = v75;
    v87[3] = v84;
    v87[4] = v74;
    v87[5] = v83;
    v87[6] = v73;
    v87[7] = v82;
    v87[8] = v72;
    v87[9] = v81;
    v87[10] = v71;
    v87[11] = v80;
    v87[12] = v70;
    v87[13] = v79;
    v87[14] = v69;
    v87[15] = v78;
    v87[16] = v68;
    v87[17] = v77;
    v87[18] = v66;
    v87[19] = v67;
    v87[20] = v64;
    v87[21] = v65;
    v87[22] = v62;
    v87[23] = v47;
    v87[24] = v59;
    v87[25] = v48;
    v87[26] = v56;
    v87[27] = v49;
    v87[28] = v55;
    v87[29] = v50;
    v87[30] = v54;
    v87[31] = v43;
    v87[32] = v52;
    v87[33] = v53;
    return sub_2360AC930((uint64_t)v87);
  }
  return result;
}

uint64_t sub_2360AC810(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2360AC930(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2360ACA50@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return DeveloperApprovalSheetContext.init(from:)(a1, a2);
}

uint64_t sub_2360ACA64(_QWORD *a1)
{
  return DeveloperApprovalSheetContext.encode(to:)(a1);
}

uint64_t destroy for DeveloperApprovalSheetContext()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DeveloperApprovalSheetContext(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  v14 = a2[23];
  a1[22] = a2[22];
  a1[23] = v14;
  v15 = a2[25];
  a1[24] = a2[24];
  a1[25] = v15;
  v16 = a2[27];
  a1[26] = a2[26];
  a1[27] = v16;
  v17 = a2[29];
  a1[28] = a2[28];
  a1[29] = v17;
  v18 = a2[31];
  a1[30] = a2[30];
  a1[31] = v18;
  v19 = a2[33];
  a1[32] = a2[32];
  a1[33] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DeveloperApprovalSheetContext(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[24] = a2[24];
  a1[25] = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[26] = a2[26];
  a1[27] = a2[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[28] = a2[28];
  a1[29] = a2[29];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[30] = a2[30];
  a1[31] = a2[31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[32] = a2[32];
  a1[33] = a2[33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy272_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x110uLL);
}

_QWORD *assignWithTake for DeveloperApprovalSheetContext(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_bridgeObjectRelease();
  v15 = a2[23];
  a1[22] = a2[22];
  a1[23] = v15;
  swift_bridgeObjectRelease();
  v16 = a2[25];
  a1[24] = a2[24];
  a1[25] = v16;
  swift_bridgeObjectRelease();
  v17 = a2[27];
  a1[26] = a2[26];
  a1[27] = v17;
  swift_bridgeObjectRelease();
  v18 = a2[29];
  a1[28] = a2[28];
  a1[29] = v18;
  swift_bridgeObjectRelease();
  v19 = a2[31];
  a1[30] = a2[30];
  a1[31] = v19;
  swift_bridgeObjectRelease();
  v20 = a2[33];
  a1[32] = a2[32];
  a1[33] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeveloperApprovalSheetContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 272))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeveloperApprovalSheetContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 272) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 272) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeveloperApprovalSheetContext()
{
  return &type metadata for DeveloperApprovalSheetContext;
}

uint64_t getEnumTagSinglePayload for DeveloperApprovalSheetContext.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF0)
    goto LABEL_17;
  if (a2 + 16 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 16) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 16;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 16;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 16;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v8 = v6 - 17;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DeveloperApprovalSheetContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_2360AD1C8 + 4 * byte_2360D6AA6[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_2360AD1FC + 4 * byte_2360D6AA1[v4]))();
}

uint64_t sub_2360AD1FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360AD204(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360AD20CLL);
  return result;
}

uint64_t sub_2360AD218(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360AD220);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_2360AD224(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360AD22C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeveloperApprovalSheetContext.CodingKeys()
{
  return &type metadata for DeveloperApprovalSheetContext.CodingKeys;
}

unint64_t sub_2360AD24C()
{
  unint64_t result;

  result = qword_2563A1DA0;
  if (!qword_2563A1DA0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6BFC, &type metadata for DeveloperApprovalSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1DA0);
  }
  return result;
}

unint64_t sub_2360AD294()
{
  unint64_t result;

  result = qword_2563A1DA8;
  if (!qword_2563A1DA8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6B6C, &type metadata for DeveloperApprovalSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1DA8);
  }
  return result;
}

unint64_t sub_2360AD2DC()
{
  unint64_t result;

  result = qword_2563A1DB0;
  if (!qword_2563A1DB0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6B94, &type metadata for DeveloperApprovalSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1DB0);
  }
  return result;
}

uint64_t sub_2360AD320(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002360DDB60 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C75427473726966 && a2 == 0xEF79646F4274656CLL || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002360DDB80 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002360DDBA0 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002360DDBC0 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6C75426472696874 && a2 == 0xEF79646F4274656CLL || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x747542776F6C6C61 && a2 == 0xEF747865546E6F74 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002360DDBE0 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x65706F6C65766564 && a2 == 0xEB00000000444972 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x65706F6C65766564 && a2 == 0xED0000656D614E72 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x5574726F70707573 && a2 == 0xEA00000000004C52 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x65646F6373736170 && a2 == 0xED0000656C746954 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x65646F6373736170 && a2 == 0xEE006E6F73616552 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x5444496863756F74 && a2 == 0xEC000000656C7469 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x5244496863756F74 && a2 == 0xED00006E6F736165)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 16;
    else
      return 17;
  }
}

uint64_t OAuthAuthorizationContext.logKey.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OAuthAuthorizationContext.requestURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  v4 = sub_2360D08D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for OAuthAuthorizationContext()
{
  uint64_t result;

  result = qword_2563A1E28;
  if (!qword_2563A1E28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t OAuthAuthorizationContext.init(logKey:requestURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char *v5;
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v5 = (char *)a4 + *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  v6 = sub_2360D08D8();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a3, v6);
}

uint64_t sub_2360ADBA0()
{
  _BYTE *v0;

  if (*v0)
    return 0x5574736575716572;
  else
    return 0x79654B676F6CLL;
}

uint64_t sub_2360ADBDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360AE3E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2360ADC00()
{
  sub_2360ADD9C();
  return sub_2360D1148();
}

uint64_t sub_2360ADC28()
{
  sub_2360ADD9C();
  return sub_2360D1154();
}

uint64_t OAuthAuthorizationContext.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1DB8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360ADD9C();
  sub_2360D113C();
  v8[15] = 0;
  sub_2360D0FD4();
  if (!v1)
  {
    type metadata accessor for OAuthAuthorizationContext();
    v8[14] = 1;
    sub_2360D08D8();
    sub_236096E4C(&qword_2563A04D0, MEMORY[0x24BDCDAE0]);
    sub_2360D0FEC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2360ADD9C()
{
  unint64_t result;

  result = qword_2563A1DC0;
  if (!qword_2563A1DC0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6DEC, &type metadata for OAuthAuthorizationContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1DC0);
  }
  return result;
}

uint64_t OAuthAuthorizationContext.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  v19 = a2;
  v21 = sub_2360D08D8();
  v18 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v20 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1DC8);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OAuthAuthorizationContext();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360ADD9C();
  sub_2360D1124();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17 = a1;
  v11 = v10;
  v13 = v20;
  v12 = v21;
  v24 = 0;
  v14 = v22;
  *v11 = sub_2360D0F44();
  v11[1] = v15;
  v23 = 1;
  sub_236096E4C(&qword_2563A04F0, MEMORY[0x24BDCDB10]);
  sub_2360D0F5C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v14);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))((char *)v11 + *(int *)(v8 + 20), v13, v12);
  sub_2360AE020((uint64_t)v11, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return sub_2360AE064((uint64_t)v11);
}

uint64_t sub_2360AE020(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OAuthAuthorizationContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2360AE064(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for OAuthAuthorizationContext();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2360AE0A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OAuthAuthorizationContext.init(from:)(a1, a2);
}

uint64_t sub_2360AE0B4(_QWORD *a1)
{
  return OAuthAuthorizationContext.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for OAuthAuthorizationContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2360AE0D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2360D08D8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for OAuthAuthorizationContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2360AE15C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2360D08D8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2360AE1D0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2360D08D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OAuthAuthorizationContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2360AE290 + 4 * byte_2360D6C85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2360AE2C4 + 4 * byte_2360D6C80[v4]))();
}

uint64_t sub_2360AE2C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360AE2CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360AE2D4);
  return result;
}

uint64_t sub_2360AE2E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360AE2E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2360AE2EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360AE2F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OAuthAuthorizationContext.CodingKeys()
{
  return &type metadata for OAuthAuthorizationContext.CodingKeys;
}

unint64_t sub_2360AE314()
{
  unint64_t result;

  result = qword_2563A1E60;
  if (!qword_2563A1E60)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6DC4, &type metadata for OAuthAuthorizationContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1E60);
  }
  return result;
}

unint64_t sub_2360AE35C()
{
  unint64_t result;

  result = qword_2563A1E68;
  if (!qword_2563A1E68)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6D34, &type metadata for OAuthAuthorizationContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1E68);
  }
  return result;
}

unint64_t sub_2360AE3A4()
{
  unint64_t result;

  result = qword_2563A1E70;
  if (!qword_2563A1E70)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D6D5C, &type metadata for OAuthAuthorizationContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1E70);
  }
  return result;
}

uint64_t sub_2360AE3E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5574736575716572 && a2 == 0xEA00000000004C52)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t InstallSheetContext.Source.AppStoreSheetContext.showBiometrics.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t InstallSheetContext.Source.AppStoreSheetContext.installType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InstallSheetContext.Source.AppStoreSheetContext.metricsFieldData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_2360920DC(v1, *(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t InstallSheetContext.Source.AppStoreSheetContext.init(showBiometrics:installType:metricsFieldData:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(_BYTE *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(_QWORD *)(a6 + 32) = a5;
  return result;
}

uint64_t sub_2360AE554()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x546C6C6174736E69;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x6D6F6942776F6873;
}

uint64_t sub_2360AE5C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360B347C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2360AE5EC()
{
  sub_2360B1334();
  return sub_2360D1148();
}

uint64_t sub_2360AE614()
{
  sub_2360B1334();
  return sub_2360D1154();
}

uint64_t InstallSheetContext.Source.AppStoreSheetContext.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1E78);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[1];
  v15 = v1[2];
  v16 = v8;
  v9 = v1[3];
  v13 = v1[4];
  v14 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360B1334();
  sub_2360D113C();
  LOBYTE(v17) = 0;
  sub_2360D0FE0();
  if (!v2)
  {
    v11 = v13;
    v10 = v14;
    LOBYTE(v17) = 1;
    sub_2360D0FD4();
    v17 = v10;
    v18 = v11;
    v19 = 2;
    sub_236086058();
    sub_2360D0FBC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t InstallSheetContext.Source.AppStoreSheetContext.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1E88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360B1334();
  sub_2360D1124();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v18) = 0;
  v9 = sub_2360D0F50();
  LOBYTE(v18) = 1;
  v10 = sub_2360D0F44();
  v12 = v11;
  v17 = v10;
  v20 = 2;
  sub_2360867A4();
  swift_bridgeObjectRetain();
  sub_2360D0F2C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v18;
  v14 = v19;
  swift_bridgeObjectRetain();
  sub_2360920DC(v13, v14);
  swift_bridgeObjectRelease();
  *(_BYTE *)a2 = v9 & 1;
  *(_QWORD *)(a2 + 8) = v17;
  *(_QWORD *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v13;
  *(_QWORD *)(a2 + 32) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_2360844D8(v13, v14);
}

uint64_t sub_2360AE9C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return InstallSheetContext.Source.AppStoreSheetContext.init(from:)(a1, a2);
}

uint64_t sub_2360AE9D4(_QWORD *a1)
{
  return InstallSheetContext.Source.AppStoreSheetContext.encode(to:)(a1);
}

BOOL InstallSheetContext.Source.isAppStore.getter()
{
  uint64_t v0;
  int8x16_t v1;
  _BOOL8 result;

  result = 1;
  if (*(_BYTE *)(v0 + 40))
  {
    if (*(_BYTE *)(v0 + 40) != 3)
      return 0;
    v1 = vorrq_s8(*(int8x16_t *)(v0 + 8), *(int8x16_t *)(v0 + 24));
    if (*(_QWORD *)&vorr_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL)) | *(_QWORD *)v0)
      return 0;
  }
  return result;
}

uint64_t sub_2360AEA34()
{
  sub_2360B1A48();
  return sub_2360D1148();
}

uint64_t sub_2360AEA5C()
{
  sub_2360B1A48();
  return sub_2360D1154();
}

uint64_t sub_2360AEA84()
{
  sub_2360B19C0();
  return sub_2360D1148();
}

uint64_t sub_2360AEAAC()
{
  sub_2360B19C0();
  return sub_2360D1154();
}

uint64_t sub_2360AEAD4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2360AEB04 + 4 * byte_2360D6E40[*v0]))(0x65726F7453707061, 0xE800000000000000);
}

unint64_t sub_2360AEB04()
{
  return 0xD000000000000013;
}

uint64_t sub_2360AEB20()
{
  return 0x7562697274736964;
}

uint64_t sub_2360AEB40()
{
  return 6448503;
}

uint64_t sub_2360AEB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360B3608(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2360AEB74()
{
  sub_2360B18F4();
  return sub_2360D1148();
}

uint64_t sub_2360AEB9C()
{
  sub_2360B18F4();
  return sub_2360D1154();
}

uint64_t sub_2360AEBC4()
{
  _BYTE *v0;

  if (*v0)
    return 25705;
  else
    return 1701667182;
}

uint64_t sub_2360AEBEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360B37C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2360AEC10()
{
  sub_2360B197C();
  return sub_2360D1148();
}

uint64_t sub_2360AEC38()
{
  sub_2360B197C();
  return sub_2360D1154();
}

uint64_t sub_2360AEC60()
{
  _BYTE *v0;

  if (*v0)
    return 0x65706F6C65766564;
  else
    return 0x6E69616D6F64;
}

uint64_t sub_2360AECA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360B3888(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2360AECC8()
{
  sub_2360B1938();
  return sub_2360D1148();
}

uint64_t sub_2360AECF0()
{
  sub_2360B1938();
  return sub_2360D1154();
}

void InstallSheetContext.Source.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[14];
  uint64_t v14;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1E90);
  v13[8] = *(_QWORD *)(v3 - 8);
  v13[9] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v13[7] = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1E98);
  v13[5] = *(_QWORD *)(v5 - 8);
  v13[6] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v13[4] = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1EA0);
  v13[2] = *(_QWORD *)(v7 - 8);
  v13[3] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v13[1] = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1EA8);
  MEMORY[0x24BDAC7A8](v9);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1EB0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v10 = *v1;
  v13[12] = v1[1];
  v13[13] = v10;
  v11 = v1[2];
  v13[10] = v1[3];
  v13[11] = v11;
  v12 = *((unsigned __int8 *)v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360B18F4();
  sub_2360D113C();
  __asm { BR              X9 }
}

uint64_t sub_2360AEEEC()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v2 - 128) = 1;
  v3 = *(_QWORD *)(v2 - 168);
  swift_bridgeObjectRetain();
  v4 = *(_QWORD *)(v2 - 176);
  v5 = v0;
  *(_QWORD *)(v2 - 256) = v0;
  sub_2360920DC(v4, v0);
  sub_2360B19C0();
  v6 = *(_QWORD *)(v2 - 248);
  v7 = *(_QWORD *)(v2 - 144);
  sub_2360D0F98();
  v9 = *(_QWORD *)(v2 - 160);
  v8 = *(_QWORD *)(v2 - 152);
  *(_BYTE *)(v2 - 128) = *(_BYTE *)(v2 - 152) & 1;
  *(_QWORD *)(v2 - 120) = v9;
  *(_QWORD *)(v2 - 112) = v3;
  *(_QWORD *)(v2 - 104) = v4;
  *(_QWORD *)(v2 - 96) = v5;
  sub_2360B1A04();
  v10 = *(_QWORD *)(v2 - 232);
  sub_2360D0FEC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 240) + 8))(v6, v10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8))(v1, v7);
  return sub_23608F878(v8, v9, *(_QWORD *)(v2 - 168), v4, *(_QWORD *)(v2 - 256), 0);
}

uint64_t InstallSheetContext.Source.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD v25[12];
  _QWORD *v26;
  char *v27;

  v25[8] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1EE8);
  v25[2] = *(_QWORD *)(v3 - 8);
  v25[3] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v25[11] = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1EF0);
  v6 = *(_QWORD *)(v5 - 8);
  v25[6] = v5;
  v25[7] = v6;
  MEMORY[0x24BDAC7A8](v5);
  v25[10] = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1EF8);
  v25[4] = *(_QWORD *)(v8 - 8);
  v25[5] = v8;
  MEMORY[0x24BDAC7A8](v8);
  v25[9] = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1F00);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1F08);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_2360B18F4();
  v19 = v27;
  sub_2360D1124();
  if (!v19)
  {
    v27 = v13;
    v25[0] = v11;
    v25[1] = v10;
    v20 = sub_2360D0F80();
    if (*(_QWORD *)(v20 + 16) == 1)
      __asm { BR              X10 }
    v21 = sub_2360D0E78();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0270);
    *v23 = &type metadata for InstallSheetContext.Source;
    sub_2360D0F08();
    sub_2360D0E6C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

uint64_t sub_2360AF7D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return InstallSheetContext.Source.init(from:)(a1, a2);
}

void sub_2360AF7EC(_QWORD *a1)
{
  InstallSheetContext.Source.encode(to:)(a1);
}

BOOL static InstallSheetContext.InstallType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t InstallSheetContext.InstallType.hash(into:)()
{
  return sub_2360D10C4();
}

uint64_t sub_2360AF844()
{
  sub_2360B1B58();
  return sub_2360D1148();
}

uint64_t sub_2360AF86C()
{
  sub_2360B1B58();
  return sub_2360D1154();
}

uint64_t sub_2360AF894()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C7074656B72616DLL;
  else
    return 7368801;
}

uint64_t sub_2360AF8D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360B3994(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2360AF8F4()
{
  sub_2360B1AD0();
  return sub_2360D1148();
}

uint64_t sub_2360AF91C()
{
  sub_2360B1AD0();
  return sub_2360D1154();
}

uint64_t sub_2360AF944()
{
  sub_2360B1B14();
  return sub_2360D1148();
}

uint64_t sub_2360AF96C()
{
  sub_2360B1B14();
  return sub_2360D1154();
}

uint64_t InstallSheetContext.InstallType.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1F18);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1F20);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1F28);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360B1AD0();
  sub_2360D113C();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_2360B1B14();
    sub_2360D0F98();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_2360B1B58();
    sub_2360D0F98();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t InstallSheetContext.InstallType.hashValue.getter()
{
  sub_2360D10B8();
  sub_2360D10C4();
  return sub_2360D10F4();
}

uint64_t InstallSheetContext.InstallType.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1F48);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1F50);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1F58);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360B1AD0();
  v11 = v33;
  sub_2360D1124();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_2360D0F80();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_2360D0E78();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0270);
    *v21 = &type metadata for InstallSheetContext.InstallType;
    sub_2360D0F08();
    sub_2360D0E6C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_2360B1B14();
    sub_2360D0EFC();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_2360B1B58();
    v22 = v6;
    sub_2360D0EFC();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_2360AFF04@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return InstallSheetContext.InstallType.init(from:)(a1, a2);
}

uint64_t sub_2360AFF18(_QWORD *a1)
{
  return InstallSheetContext.InstallType.encode(to:)(a1);
}

uint64_t InstallSheetContext.itemID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InstallSheetContext.versionID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InstallSheetContext.logKey.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InstallSheetContext.source.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  v4 = *(_QWORD *)(v1 + 64);
  v5 = *(_QWORD *)(v1 + 72);
  v6 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(_BYTE *)(v1 + 88);
  *(_BYTE *)(a1 + 40) = v7;
  return sub_236092070(v2, v3, v4, v5, v6, v7);
}

void InstallSheetContext.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 89);
}

uint64_t InstallSheetContext.authenticationContextData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  sub_2360920DC(v1, *(_QWORD *)(v0 + 104));
  return v1;
}

uint64_t InstallSheetContext.learnMoreURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InstallSheetContext.showBiometricsForAppStoreInstall.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 128);
}

__n128 InstallSheetContext.init(itemID:versionID:source:type:logKey:learnMoreURL:authenticationContextData:showBiometricsForAppStoreInstall:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, __n128 a12, char a13)
{
  __n128 result;
  uint64_t v14;
  char v15;
  char v16;
  __int128 v17;

  result = a12;
  v14 = *(_QWORD *)(a5 + 32);
  v15 = *(_BYTE *)(a5 + 40);
  v16 = *a6;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a7;
  *(_QWORD *)(a9 + 40) = a8;
  v17 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a9 + 48) = *(_OWORD *)a5;
  *(_OWORD *)(a9 + 64) = v17;
  *(_QWORD *)(a9 + 80) = v14;
  *(_BYTE *)(a9 + 88) = v15;
  *(_BYTE *)(a9 + 89) = v16;
  *(__n128 *)(a9 + 96) = a12;
  *(_QWORD *)(a9 + 112) = a10;
  *(_QWORD *)(a9 + 120) = a11;
  *(_BYTE *)(a9 + 128) = a13;
  return result;
}

uint64_t sub_2360B008C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2360B00BC + 4 * byte_2360D6E4C[a1]))(0x44496D657469, 0xE600000000000000);
}

uint64_t sub_2360B00BC()
{
  return 0x496E6F6973726576;
}

uint64_t sub_2360B00D8()
{
  return 0x79654B676F6CLL;
}

uint64_t sub_2360B00E8()
{
  return 0x656372756F73;
}

uint64_t sub_2360B00F8()
{
  return 1701869940;
}

unint64_t sub_2360B0108()
{
  return 0xD000000000000019;
}

uint64_t sub_2360B0124()
{
  return 0x726F4D6E7261656CLL;
}

unint64_t sub_2360B0144()
{
  return 0xD000000000000020;
}

uint64_t sub_2360B0164()
{
  unsigned __int8 *v0;

  return sub_2360B008C(*v0);
}

uint64_t sub_2360B016C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360B3A8C(a1, a2);
  *a3 = result;
  return result;
}

void sub_2360B0190(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_2360B019C()
{
  sub_2360B1B9C();
  return sub_2360D1148();
}

uint64_t sub_2360B01C4()
{
  sub_2360B1B9C();
  return sub_2360D1154();
}

uint64_t InstallSheetContext.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD v17[4];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  int v39;
  char v40;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1F60);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v30 = *(_QWORD *)(v1 + 24);
  v31 = v7;
  v8 = *(_QWORD *)(v1 + 32);
  v28 = *(_QWORD *)(v1 + 40);
  v29 = v8;
  v9 = *(_QWORD *)(v1 + 48);
  v26 = *(_QWORD *)(v1 + 56);
  v27 = v9;
  v10 = *(_QWORD *)(v1 + 72);
  v23 = *(_QWORD *)(v1 + 64);
  v24 = v10;
  v25 = *(_QWORD *)(v1 + 80);
  v39 = *(unsigned __int8 *)(v1 + 88);
  v22 = *(unsigned __int8 *)(v1 + 89);
  v11 = *(_QWORD *)(v1 + 104);
  v20 = *(_QWORD *)(v1 + 96);
  v21 = v11;
  v12 = *(_QWORD *)(v1 + 120);
  v18 = *(_QWORD *)(v1 + 112);
  v19 = v12;
  v17[3] = *(unsigned __int8 *)(v1 + 128);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360B1B9C();
  sub_2360D113C();
  LOBYTE(v33) = 0;
  v13 = v32;
  sub_2360D0FD4();
  if (!v13)
  {
    v14 = v26;
    v15 = v27;
    LOBYTE(v33) = 1;
    sub_2360D0FA4();
    LOBYTE(v33) = 2;
    sub_2360D0FD4();
    v33 = v15;
    v34 = v14;
    v35 = v23;
    v36 = v24;
    v37 = v25;
    v38 = v39;
    v40 = 3;
    sub_2360B1BE0();
    sub_2360D0FEC();
    LOBYTE(v33) = v22;
    v40 = 4;
    sub_2360B1C24();
    sub_2360D0FEC();
    v33 = v20;
    v34 = v21;
    v40 = 5;
    sub_236086058();
    sub_2360D0FBC();
    LOBYTE(v33) = 6;
    sub_2360D0FD4();
    LOBYTE(v33) = 7;
    sub_2360D0FE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t InstallSheetContext.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v33;
  int v34;
  __int128 v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  unint64_t v65;
  char v66;
  char v67;
  int v68;
  __int16 v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  char v73;
  char v74;
  int v75;
  __int16 v76;
  _QWORD *v77;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1F80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v77 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_2360B1B9C();
  sub_2360D1124();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
  LOBYTE(v57) = 0;
  v10 = sub_2360D0F44();
  v12 = v11;
  LOBYTE(v57) = 1;
  swift_bridgeObjectRetain();
  v45 = sub_2360D0F14();
  v46 = v10;
  LOBYTE(v57) = 2;
  v14 = v13;
  swift_bridgeObjectRetain();
  v15 = sub_2360D0F44();
  v47 = v14;
  v17 = v16;
  v40 = v15;
  LOBYTE(v48) = 3;
  sub_2360B1C68();
  swift_bridgeObjectRetain();
  sub_2360D0F5C();
  v39 = v17;
  v18 = v57;
  LOBYTE(v48) = 4;
  v44 = v58;
  v43 = v59;
  v41 = v60;
  v42 = v61;
  sub_236092070(v57, v58, v59, *((uint64_t *)&v59 + 1), v60, v61);
  sub_2360B1CAC();
  sub_2360D0F5C();
  v36 = v57;
  LOBYTE(v48) = 5;
  sub_2360867A4();
  sub_2360D0F2C();
  v19 = v57;
  LOBYTE(v57) = 6;
  v37 = v58;
  v38 = v19;
  sub_2360920DC(v19, v58);
  *(_QWORD *)&v35 = sub_2360D0F44();
  *((_QWORD *)&v35 + 1) = v20;
  v74 = 7;
  swift_bridgeObjectRetain();
  LOBYTE(v17) = sub_2360D0F50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v34 = v17 & 1;
  *(_QWORD *)&v48 = v46;
  *((_QWORD *)&v48 + 1) = v12;
  *(_QWORD *)&v49 = v45;
  *((_QWORD *)&v49 + 1) = v47;
  v33 = v18;
  v21 = v41;
  v22 = v38;
  *(_QWORD *)&v50 = v40;
  *((_QWORD *)&v50 + 1) = v39;
  *(_QWORD *)&v51 = v18;
  *((_QWORD *)&v51 + 1) = v44;
  v23 = v43;
  v52 = v43;
  *(_QWORD *)&v53 = v41;
  BYTE8(v53) = v42;
  BYTE9(v53) = v36;
  v24 = v37;
  *(_QWORD *)&v54 = v38;
  *((_QWORD *)&v54 + 1) = v37;
  v55 = v35;
  v56 = v34;
  sub_2360B1CF0((uint64_t)&v48);
  swift_bridgeObjectRelease();
  sub_2360844D8(v22, v24);
  v25 = v33;
  LOBYTE(v22) = v42;
  sub_23608F878(v33, v44, v23, *((uint64_t *)&v43 + 1), v21, v42);
  swift_bridgeObjectRelease();
  v26 = v47;
  swift_bridgeObjectRelease();
  v27 = v39;
  swift_bridgeObjectRelease();
  v28 = v55;
  *(_OWORD *)(a2 + 96) = v54;
  *(_OWORD *)(a2 + 112) = v28;
  *(_BYTE *)(a2 + 128) = v56;
  v29 = v51;
  *(_OWORD *)(a2 + 32) = v50;
  *(_OWORD *)(a2 + 48) = v29;
  v30 = v53;
  *(_OWORD *)(a2 + 64) = v52;
  *(_OWORD *)(a2 + 80) = v30;
  v31 = v49;
  *(_OWORD *)a2 = v48;
  *(_OWORD *)(a2 + 16) = v31;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
  v57 = v46;
  v58 = v12;
  *(_QWORD *)&v59 = v45;
  *((_QWORD *)&v59 + 1) = v26;
  v60 = v40;
  v61 = v27;
  v62 = v25;
  v63 = v44;
  v64 = v43;
  v65 = v21;
  v66 = v22;
  v67 = v36;
  v68 = v75;
  v69 = v76;
  v70 = v38;
  v71 = v37;
  v72 = v35;
  v73 = v34;
  return sub_23608F7C4((uint64_t)&v57);
}

uint64_t sub_2360B0B7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return InstallSheetContext.init(from:)(a1, a2);
}

uint64_t sub_2360B0B90(_QWORD *a1)
{
  return InstallSheetContext.encode(to:)(a1);
}

void sub_2360B0BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_2360B0C04(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x2360B0DE8);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_2360B0E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_2360B0BA4((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_2360B0EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_2360D086C();
  v11 = result;
  if (result)
  {
    result = sub_2360D0884();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_2360D0878();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_2360B0BA4(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_2360B0F94(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_2360B0FE0()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_2360B1014 + dword_2360B11EC[v0 >> 62]))();
}

uint64_t sub_2360B1024@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

BOOL _s15AppDistribution19InstallSheetContextV6SourceO0a5StoredE0V2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  _BOOL8 result;
  char v9;
  char v10;

  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2)
    return 0;
  v2 = a1[3];
  v3 = a1[4];
  v5 = a2[3];
  v4 = a2[4];
  v6 = a1[1] == a2[1] && a1[2] == a2[2];
  if (v6 || (v7 = sub_2360D1028(), result = 0, (v7 & 1) != 0))
  {
    if (v3 >> 60 == 15)
    {
      if (v4 >> 60 == 15)
        return 1;
    }
    else if (v4 >> 60 != 15)
    {
      sub_2360920DC(v2, v3);
      sub_2360920DC(v5, v4);
      sub_2360B0F94(v2, v3);
      v10 = v9;
      sub_2360844D8(v5, v4);
      sub_2360844D8(v2, v3);
      return (v10 & 1) != 0;
    }
    sub_2360920DC(v2, v3);
    sub_2360920DC(v5, v4);
    sub_2360844D8(v2, v3);
    sub_2360844D8(v5, v4);
    return 0;
  }
  return result;
}

unint64_t sub_2360B1334()
{
  unint64_t result;

  result = qword_2563A1E80;
  if (!qword_2563A1E80)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D7A8C, &type metadata for InstallSheetContext.Source.AppStoreSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1E80);
  }
  return result;
}

void _s15AppDistribution19InstallSheetContextV6SourceO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

BOOL sub_2360B13D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];
  _QWORD v32[17];

  if (v10)
  {
    v24 = v11;
    v25 = v8;
    v29 = v11;
    v27 = v5;
    sub_236092070(v24, v25, v9, v12, v7, v10);
    sub_236092070(v27, v15, v14, v13, a5, v6);
    sub_23608F878(v27, v15, v14, v13, a5, v6);
    sub_23608F878(v29, v30, v9, v12, v7, v10);
    return 0;
  }
  else
  {
    LOBYTE(v32[0]) = v5 & 1;
    v32[1] = v15;
    v32[2] = v14;
    v32[3] = v13;
    v32[4] = a5;
    LOBYTE(v31[0]) = v11 & 1;
    v31[1] = v8;
    v31[2] = v9;
    v31[3] = v12;
    v31[4] = v7;
    v16 = v8;
    v17 = v8;
    v18 = v9;
    v19 = v9;
    v20 = v7;
    v22 = v5;
    sub_236092070(v11, v16, v19, v12, v20, 0);
    sub_236092070(v22, v15, v14, v13, a5, 0);
    sub_236092070(v11, v17, v18, v12, v20, 0);
    sub_236092070(v22, v15, v14, v13, a5, 0);
    v23 = _s15AppDistribution19InstallSheetContextV6SourceO0a5StoredE0V2eeoiySbAG_AGtFZ_0(v32, v31);
    sub_23608F878(v22, v15, v14, v13, a5, 0);
    sub_23608F878(v11, v30, v18, v12, v20, 0);
    sub_23608F878(v11, v30, v18, v12, v20, 0);
    sub_23608F878(v22, v15, v14, v13, a5, 0);
  }
  return v23;
}

unint64_t sub_2360B18F4()
{
  unint64_t result;

  result = qword_2563A1EB8;
  if (!qword_2563A1EB8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D7A3C, &type metadata for InstallSheetContext.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1EB8);
  }
  return result;
}

unint64_t sub_2360B1938()
{
  unint64_t result;

  result = qword_2563A1EC0;
  if (!qword_2563A1EC0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D79EC, &type metadata for InstallSheetContext.Source.WebCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1EC0);
  }
  return result;
}

unint64_t sub_2360B197C()
{
  unint64_t result;

  result = qword_2563A1EC8;
  if (!qword_2563A1EC8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D799C, &type metadata for InstallSheetContext.Source.DistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1EC8);
  }
  return result;
}

unint64_t sub_2360B19C0()
{
  unint64_t result;

  result = qword_2563A1ED0;
  if (!qword_2563A1ED0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D794C, &type metadata for InstallSheetContext.Source.AppStoreWithContextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1ED0);
  }
  return result;
}

unint64_t sub_2360B1A04()
{
  unint64_t result;

  result = qword_2563A1ED8;
  if (!qword_2563A1ED8)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for InstallSheetContext.Source.AppStoreSheetContext, &type metadata for InstallSheetContext.Source.AppStoreSheetContext);
    atomic_store(result, (unint64_t *)&qword_2563A1ED8);
  }
  return result;
}

unint64_t sub_2360B1A48()
{
  unint64_t result;

  result = qword_2563A1EE0;
  if (!qword_2563A1EE0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D78FC, &type metadata for InstallSheetContext.Source.AppStoreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1EE0);
  }
  return result;
}

unint64_t sub_2360B1A8C()
{
  unint64_t result;

  result = qword_2563A1F10;
  if (!qword_2563A1F10)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for InstallSheetContext.Source.AppStoreSheetContext, &type metadata for InstallSheetContext.Source.AppStoreSheetContext);
    atomic_store(result, (unint64_t *)&qword_2563A1F10);
  }
  return result;
}

unint64_t sub_2360B1AD0()
{
  unint64_t result;

  result = qword_2563A1F30;
  if (!qword_2563A1F30)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D78AC, &type metadata for InstallSheetContext.InstallType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1F30);
  }
  return result;
}

unint64_t sub_2360B1B14()
{
  unint64_t result;

  result = qword_2563A1F38;
  if (!qword_2563A1F38)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D785C, &type metadata for InstallSheetContext.InstallType.MarketplaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1F38);
  }
  return result;
}

unint64_t sub_2360B1B58()
{
  unint64_t result;

  result = qword_2563A1F40;
  if (!qword_2563A1F40)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D780C, &type metadata for InstallSheetContext.InstallType.AppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1F40);
  }
  return result;
}

unint64_t sub_2360B1B9C()
{
  unint64_t result;

  result = qword_2563A1F68;
  if (!qword_2563A1F68)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D77BC, &type metadata for InstallSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1F68);
  }
  return result;
}

unint64_t sub_2360B1BE0()
{
  unint64_t result;

  result = qword_2563A1F70;
  if (!qword_2563A1F70)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for InstallSheetContext.Source, &type metadata for InstallSheetContext.Source);
    atomic_store(result, (unint64_t *)&qword_2563A1F70);
  }
  return result;
}

unint64_t sub_2360B1C24()
{
  unint64_t result;

  result = qword_2563A1F78;
  if (!qword_2563A1F78)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for InstallSheetContext.InstallType, &type metadata for InstallSheetContext.InstallType);
    atomic_store(result, (unint64_t *)&qword_2563A1F78);
  }
  return result;
}

unint64_t sub_2360B1C68()
{
  unint64_t result;

  result = qword_2563A1F88;
  if (!qword_2563A1F88)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for InstallSheetContext.Source, &type metadata for InstallSheetContext.Source);
    atomic_store(result, (unint64_t *)&qword_2563A1F88);
  }
  return result;
}

unint64_t sub_2360B1CAC()
{
  unint64_t result;

  result = qword_2563A1F90;
  if (!qword_2563A1F90)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for InstallSheetContext.InstallType, &type metadata for InstallSheetContext.InstallType);
    atomic_store(result, (unint64_t *)&qword_2563A1F90);
  }
  return result;
}

uint64_t sub_2360B1CF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 104);
  v10 = *(_QWORD *)(a1 + 96);
  v8 = *(_BYTE *)(a1 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_236092070(v2, v3, v4, v5, v6, v8);
  sub_2360920DC(v10, v7);
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_2360B1DA4()
{
  unint64_t result;

  result = qword_2563A1F98;
  if (!qword_2563A1F98)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for InstallSheetContext.InstallType, &type metadata for InstallSheetContext.InstallType);
    atomic_store(result, (unint64_t *)&qword_2563A1F98);
  }
  return result;
}

uint64_t destroy for InstallSheetContext(uint64_t a1)
{
  unint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23608F878(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
  v2 = *(_QWORD *)(a1 + 104);
  if (v2 >> 60 != 15)
    sub_236077AC4(*(_QWORD *)(a1 + 96), v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InstallSheetContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  v11 = *(_QWORD *)(a2 + 80);
  v12 = *(_BYTE *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_236092070(v7, v8, v9, v10, v11, v12);
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 88) = v12;
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  v13 = (uint64_t *)(a2 + 96);
  v14 = *(_QWORD *)(a2 + 104);
  if (v14 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)v13;
  }
  else
  {
    v15 = *v13;
    sub_236077B70(*v13, *(_QWORD *)(a2 + 104));
    *(_QWORD *)(a1 + 96) = v15;
    *(_QWORD *)(a1 + 104) = v14;
  }
  v16 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v16;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InstallSheetContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 80);
  v9 = *(_BYTE *)(a2 + 88);
  sub_236092070(v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v8;
  v15 = *(_BYTE *)(a1 + 88);
  *(_BYTE *)(a1 + 88) = v9;
  sub_23608F878(v10, v11, v12, v13, v14, v15);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  v16 = (uint64_t *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  if (*(_QWORD *)(a1 + 104) >> 60 != 15)
  {
    if (v17 >> 60 != 15)
    {
      v19 = *v16;
      sub_236077B70(*v16, *(_QWORD *)(a2 + 104));
      v20 = *(_QWORD *)(a1 + 96);
      v21 = *(_QWORD *)(a1 + 104);
      *(_QWORD *)(a1 + 96) = v19;
      *(_QWORD *)(a1 + 104) = v17;
      sub_236077AC4(v20, v21);
      goto LABEL_8;
    }
    sub_2360B20E4(a1 + 96);
    goto LABEL_6;
  }
  if (v17 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 96) = *(_OWORD *)v16;
    goto LABEL_8;
  }
  v18 = *v16;
  sub_236077B70(*v16, *(_QWORD *)(a2 + 104));
  *(_QWORD *)(a1 + 96) = v18;
  *(_QWORD *)(a1 + 104) = v17;
LABEL_8:
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  return a1;
}

uint64_t sub_2360B20E4(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for InstallSheetContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;
  char v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 80);
  v8 = *(_BYTE *)(a2 + 88);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 72);
  v13 = *(_QWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 80) = v7;
  v15 = *(_BYTE *)(a1 + 88);
  *(_BYTE *)(a1 + 88) = v8;
  sub_23608F878(v9, v10, v11, v12, v13, v15);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  v16 = (_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a1 + 104);
  if (v17 >> 60 != 15)
  {
    v18 = *(_QWORD *)(a2 + 104);
    if (v18 >> 60 != 15)
    {
      v19 = *(_QWORD *)(a1 + 96);
      *(_QWORD *)(a1 + 96) = *v16;
      *(_QWORD *)(a1 + 104) = v18;
      sub_236077AC4(v19, v17);
      goto LABEL_6;
    }
    sub_2360B20E4(a1 + 96);
  }
  *(_OWORD *)(a1 + 96) = *(_OWORD *)v16;
LABEL_6:
  v20 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for InstallSheetContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 129))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InstallSheetContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 128) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 129) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 129) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext()
{
  return &type metadata for InstallSheetContext;
}

uint64_t destroy for InstallSheetContext.Source(uint64_t a1)
{
  return sub_23608F878(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for InstallSheetContext.Source(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_236092070(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for InstallSheetContext.Source(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_236092070(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_23608F878(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for InstallSheetContext.Source(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_23608F878(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for InstallSheetContext.Source(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InstallSheetContext.Source(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_2360B250C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 2u)
    return *(unsigned __int8 *)(a1 + 40);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_2360B2524(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source()
{
  return &type metadata for InstallSheetContext.Source;
}

uint64_t destroy for InstallSheetContext.Source.AppStoreSheetContext(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >> 60 != 15)
    return sub_236077AC4(*(_QWORD *)(a1 + 24), v3);
  return result;
}

uint64_t initializeWithCopy for InstallSheetContext.Source.AppStoreSheetContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _OWORD *v4;
  unint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = (_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *v4;
  }
  else
  {
    v6 = *(_QWORD *)v4;
    sub_236077B70(v6, v5);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v5;
  }
  return a1;
}

uint64_t assignWithCopy for InstallSheetContext.Source.AppStoreSheetContext(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (uint64_t *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_236077B70(*v4, v5);
      v8 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v5;
      sub_236077AC4(v8, v9);
      return a1;
    }
    sub_2360B20E4(a1 + 24);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v4;
    return a1;
  }
  v6 = *v4;
  sub_236077B70(*v4, v5);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v5;
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for InstallSheetContext.Source.AppStoreSheetContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  if (v6 >> 60 != 15)
  {
    v7 = *(_QWORD *)(a2 + 32);
    if (v7 >> 60 != 15)
    {
      v8 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 24) = *v5;
      *(_QWORD *)(a1 + 32) = v7;
      sub_236077AC4(v8, v6);
      return a1;
    }
    sub_2360B20E4(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for InstallSheetContext.Source.AppStoreSheetContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InstallSheetContext.Source.AppStoreSheetContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.AppStoreSheetContext()
{
  return &type metadata for InstallSheetContext.Source.AppStoreSheetContext;
}

ValueMetadata *type metadata accessor for InstallSheetContext.InstallType()
{
  return &type metadata for InstallSheetContext.InstallType;
}

uint64_t getEnumTagSinglePayload for InstallSheetContext.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for InstallSheetContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2360B2914 + 4 * byte_2360D6E5D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_2360B2948 + 4 * byte_2360D6E58[v4]))();
}

uint64_t sub_2360B2948(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360B2950(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360B2958);
  return result;
}

uint64_t sub_2360B2964(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360B296CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_2360B2970(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360B2978(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext.CodingKeys()
{
  return &type metadata for InstallSheetContext.CodingKeys;
}

ValueMetadata *type metadata accessor for InstallSheetContext.InstallType.CodingKeys()
{
  return &type metadata for InstallSheetContext.InstallType.CodingKeys;
}

ValueMetadata *type metadata accessor for InstallSheetContext.InstallType.AppCodingKeys()
{
  return &type metadata for InstallSheetContext.InstallType.AppCodingKeys;
}

ValueMetadata *type metadata accessor for InstallSheetContext.InstallType.MarketplaceCodingKeys()
{
  return &type metadata for InstallSheetContext.InstallType.MarketplaceCodingKeys;
}

uint64_t storeEnumTagSinglePayload for InstallSheetContext.Source.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2360B2A10 + 4 * byte_2360D6E67[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2360B2A44 + 4 * byte_2360D6E62[v4]))();
}

uint64_t sub_2360B2A44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360B2A4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360B2A54);
  return result;
}

uint64_t sub_2360B2A60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360B2A68);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2360B2A6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360B2A74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.CodingKeys()
{
  return &type metadata for InstallSheetContext.Source.CodingKeys;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.AppStoreCodingKeys()
{
  return &type metadata for InstallSheetContext.Source.AppStoreCodingKeys;
}

uint64_t storeEnumTagSinglePayload for InstallSheetContext.Source.AppStoreWithContextCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2360B2AE0 + 4 * byte_2360D6E6C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2360B2B00 + 4 * byte_2360D6E71[v4]))();
}

_BYTE *sub_2360B2AE0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2360B2B00(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2360B2B08(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2360B2B10(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2360B2B18(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2360B2B20(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.AppStoreWithContextCodingKeys()
{
  return &type metadata for InstallSheetContext.Source.AppStoreWithContextCodingKeys;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.DistributorCodingKeys()
{
  return &type metadata for InstallSheetContext.Source.DistributorCodingKeys;
}

uint64_t _s15AppDistribution19InstallSheetContextV11InstallTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2360B2B98 + 4 * byte_2360D6E7B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2360B2BCC + 4 * byte_2360D6E76[v4]))();
}

uint64_t sub_2360B2BCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360B2BD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360B2BDCLL);
  return result;
}

uint64_t sub_2360B2BE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360B2BF0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2360B2BF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360B2BFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.WebCodingKeys()
{
  return &type metadata for InstallSheetContext.Source.WebCodingKeys;
}

uint64_t storeEnumTagSinglePayload for InstallSheetContext.Source.AppStoreSheetContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2360B2C64 + 4 * byte_2360D6E85[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2360B2C98 + 4 * byte_2360D6E80[v4]))();
}

uint64_t sub_2360B2C98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360B2CA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360B2CA8);
  return result;
}

uint64_t sub_2360B2CB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360B2CBCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2360B2CC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360B2CC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.AppStoreSheetContext.CodingKeys()
{
  return &type metadata for InstallSheetContext.Source.AppStoreSheetContext.CodingKeys;
}

unint64_t sub_2360B2CE8()
{
  unint64_t result;

  result = qword_2563A1FA0;
  if (!qword_2563A1FA0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D7254, &type metadata for InstallSheetContext.Source.AppStoreSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1FA0);
  }
  return result;
}

unint64_t sub_2360B2D30()
{
  unint64_t result;

  result = qword_2563A1FA8;
  if (!qword_2563A1FA8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D730C, &type metadata for InstallSheetContext.Source.WebCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1FA8);
  }
  return result;
}

unint64_t sub_2360B2D78()
{
  unint64_t result;

  result = qword_2563A1FB0;
  if (!qword_2563A1FB0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D73C4, &type metadata for InstallSheetContext.Source.DistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1FB0);
  }
  return result;
}

unint64_t sub_2360B2DC0()
{
  unint64_t result;

  result = qword_2563A1FB8;
  if (!qword_2563A1FB8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D747C, &type metadata for InstallSheetContext.Source.AppStoreWithContextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1FB8);
  }
  return result;
}

unint64_t sub_2360B2E08()
{
  unint64_t result;

  result = qword_2563A1FC0;
  if (!qword_2563A1FC0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D7584, &type metadata for InstallSheetContext.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1FC0);
  }
  return result;
}

unint64_t sub_2360B2E50()
{
  unint64_t result;

  result = qword_2563A1FC8;
  if (!qword_2563A1FC8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D76DC, &type metadata for InstallSheetContext.InstallType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1FC8);
  }
  return result;
}

unint64_t sub_2360B2E98()
{
  unint64_t result;

  result = qword_2563A1FD0;
  if (!qword_2563A1FD0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D7794, &type metadata for InstallSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1FD0);
  }
  return result;
}

unint64_t sub_2360B2EE0()
{
  unint64_t result;

  result = qword_2563A1FD8;
  if (!qword_2563A1FD8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D7704, &type metadata for InstallSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1FD8);
  }
  return result;
}

unint64_t sub_2360B2F28()
{
  unint64_t result;

  result = qword_2563A1FE0;
  if (!qword_2563A1FE0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D772C, &type metadata for InstallSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1FE0);
  }
  return result;
}

unint64_t sub_2360B2F70()
{
  unint64_t result;

  result = qword_2563A1FE8;
  if (!qword_2563A1FE8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D75FC, &type metadata for InstallSheetContext.InstallType.AppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1FE8);
  }
  return result;
}

unint64_t sub_2360B2FB8()
{
  unint64_t result;

  result = qword_2563A1FF0;
  if (!qword_2563A1FF0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D7624, &type metadata for InstallSheetContext.InstallType.AppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1FF0);
  }
  return result;
}

unint64_t sub_2360B3000()
{
  unint64_t result;

  result = qword_2563A1FF8;
  if (!qword_2563A1FF8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D75AC, &type metadata for InstallSheetContext.InstallType.MarketplaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A1FF8);
  }
  return result;
}

unint64_t sub_2360B3048()
{
  unint64_t result;

  result = qword_2563A2000;
  if (!qword_2563A2000)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D75D4, &type metadata for InstallSheetContext.InstallType.MarketplaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2000);
  }
  return result;
}

unint64_t sub_2360B3090()
{
  unint64_t result;

  result = qword_2563A2008;
  if (!qword_2563A2008)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D764C, &type metadata for InstallSheetContext.InstallType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2008);
  }
  return result;
}

unint64_t sub_2360B30D8()
{
  unint64_t result;

  result = qword_2563A2010;
  if (!qword_2563A2010)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D7674, &type metadata for InstallSheetContext.InstallType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2010);
  }
  return result;
}

unint64_t sub_2360B3120()
{
  unint64_t result;

  result = qword_2563A2018;
  if (!qword_2563A2018)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D74A4, &type metadata for InstallSheetContext.Source.AppStoreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2018);
  }
  return result;
}

unint64_t sub_2360B3168()
{
  unint64_t result;

  result = qword_2563A2020;
  if (!qword_2563A2020)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D74CC, &type metadata for InstallSheetContext.Source.AppStoreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2020);
  }
  return result;
}

unint64_t sub_2360B31B0()
{
  unint64_t result;

  result = qword_2563A2028;
  if (!qword_2563A2028)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D73EC, &type metadata for InstallSheetContext.Source.AppStoreWithContextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2028);
  }
  return result;
}

unint64_t sub_2360B31F8()
{
  unint64_t result;

  result = qword_2563A2030;
  if (!qword_2563A2030)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D7414, &type metadata for InstallSheetContext.Source.AppStoreWithContextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2030);
  }
  return result;
}

unint64_t sub_2360B3240()
{
  unint64_t result;

  result = qword_2563A2038;
  if (!qword_2563A2038)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D7334, &type metadata for InstallSheetContext.Source.DistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2038);
  }
  return result;
}

unint64_t sub_2360B3288()
{
  unint64_t result;

  result = qword_2563A2040;
  if (!qword_2563A2040)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D735C, &type metadata for InstallSheetContext.Source.DistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2040);
  }
  return result;
}

unint64_t sub_2360B32D0()
{
  unint64_t result;

  result = qword_2563A2048;
  if (!qword_2563A2048)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D727C, &type metadata for InstallSheetContext.Source.WebCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2048);
  }
  return result;
}

unint64_t sub_2360B3318()
{
  unint64_t result;

  result = qword_2563A2050;
  if (!qword_2563A2050)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D72A4, &type metadata for InstallSheetContext.Source.WebCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2050);
  }
  return result;
}

unint64_t sub_2360B3360()
{
  unint64_t result;

  result = qword_2563A2058;
  if (!qword_2563A2058)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D74F4, &type metadata for InstallSheetContext.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2058);
  }
  return result;
}

unint64_t sub_2360B33A8()
{
  unint64_t result;

  result = qword_2563A2060;
  if (!qword_2563A2060)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D751C, &type metadata for InstallSheetContext.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2060);
  }
  return result;
}

unint64_t sub_2360B33F0()
{
  unint64_t result;

  result = qword_2563A2068;
  if (!qword_2563A2068)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D71C4, &type metadata for InstallSheetContext.Source.AppStoreSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2068);
  }
  return result;
}

unint64_t sub_2360B3438()
{
  unint64_t result;

  result = qword_2563A2070;
  if (!qword_2563A2070)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D71EC, &type metadata for InstallSheetContext.Source.AppStoreSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2070);
  }
  return result;
}

uint64_t sub_2360B347C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D6F6942776F6873 && a2 == 0xEE00736369727465;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x546C6C6174736E69 && a2 == 0xEB00000000657079 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002360DDD00)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2360B3608(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65726F7453707061 && a2 == 0xE800000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002360DDD20 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7562697274736964 && a2 == 0xEB00000000726F74 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6448503 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2360B37C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2360B3888(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65706F6C65766564 && a2 == 0xED0000656D614E72)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2360B3994(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7368801 && a2 == 0xE300000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C7074656B72616DLL && a2 == 0xEB00000000656361)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2360B3A8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496E6F6973726576 && a2 == 0xE900000000000044 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000002360DDD40 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x726F4D6E7261656CLL && a2 == 0xEC0000004C525565 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000002360DDD60)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

void MarketplaceKitError.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2563A0288);
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v2);
  sub_236084494(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)&loc_2360B3E90 + dword_2360B426C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2360B3EA0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v0;
  *(_QWORD *)(v1 - 80) = 0;
  *(_QWORD *)(v1 - 72) = 0xE000000000000000;
  sub_2360D0E48();
  v3 = *(_QWORD *)(v1 - 72);
  *(_QWORD *)(v1 - 80) = *(_QWORD *)(v1 - 80);
  *(_QWORD *)(v1 - 72) = v3;
  sub_2360D0BE4();
  *(_QWORD *)(v1 - 88) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2078);
  sub_2360B42FC();
  sub_2360D0B9C();
  swift_bridgeObjectRelease();
  sub_2360D0BE4();
  swift_bridgeObjectRelease();
  return *(_QWORD *)(v1 - 80);
}

uint64_t type metadata accessor for MarketplaceKitError()
{
  uint64_t result;

  result = qword_2563A2318;
  if (!qword_2563A2318)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_2360B42FC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2563A2080;
  if (!qword_2563A2080)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563A2078);
    v2 = sub_2360B78B4((unint64_t *)&qword_2563A1AD8, &qword_25429DBB0, MEMORY[0x24BEE12B0]);
    result = MEMORY[0x23B7EBA68](MEMORY[0x24BEE2598], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2563A2080);
  }
  return result;
}

uint64_t sub_2360B4378(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2360B43AC + 4 * byte_2360D7AE0[a1]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

unint64_t sub_2360B43AC()
{
  return 0xD000000000000013;
}

uint64_t sub_2360B45D4()
{
  sub_2360B5F6C();
  return sub_2360D1148();
}

uint64_t sub_2360B45FC()
{
  sub_2360B5F6C();
  return sub_2360D1154();
}

uint64_t sub_2360B4624()
{
  sub_2360B5DD4();
  return sub_2360D1148();
}

uint64_t sub_2360B464C()
{
  sub_2360B5DD4();
  return sub_2360D1154();
}

uint64_t sub_2360B4674()
{
  unsigned __int8 *v0;

  return sub_2360B4378(*v0);
}

uint64_t sub_2360B467C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360B8F60(a1, a2);
  *a3 = result;
  return result;
}

void sub_2360B46A0(_BYTE *a1@<X8>)
{
  *a1 = 21;
}

uint64_t sub_2360B46AC()
{
  sub_2360B5C3C();
  return sub_2360D1148();
}

uint64_t sub_2360B46D4()
{
  sub_2360B5C3C();
  return sub_2360D1154();
}

uint64_t sub_2360B46FC()
{
  sub_2360B5E18();
  return sub_2360D1148();
}

uint64_t sub_2360B4724()
{
  sub_2360B5E18();
  return sub_2360D1154();
}

uint64_t sub_2360B474C()
{
  sub_2360B607C();
  return sub_2360D1148();
}

uint64_t sub_2360B4774()
{
  sub_2360B607C();
  return sub_2360D1154();
}

uint64_t sub_2360B479C()
{
  sub_2360B60C0();
  return sub_2360D1148();
}

uint64_t sub_2360B47C4()
{
  sub_2360B60C0();
  return sub_2360D1154();
}

uint64_t sub_2360B47EC()
{
  sub_2360B5FF4();
  return sub_2360D1148();
}

uint64_t sub_2360B4814()
{
  sub_2360B5FF4();
  return sub_2360D1154();
}

uint64_t sub_2360B483C()
{
  sub_2360B5E5C();
  return sub_2360D1148();
}

uint64_t sub_2360B4864()
{
  sub_2360B5E5C();
  return sub_2360D1154();
}

uint64_t sub_2360B488C()
{
  sub_2360B5EA0();
  return sub_2360D1148();
}

uint64_t sub_2360B48B4()
{
  sub_2360B5EA0();
  return sub_2360D1154();
}

uint64_t sub_2360B48DC()
{
  sub_2360B5D08();
  return sub_2360D1148();
}

uint64_t sub_2360B4904()
{
  sub_2360B5D08();
  return sub_2360D1154();
}

uint64_t sub_2360B492C()
{
  sub_2360B5F28();
  return sub_2360D1148();
}

uint64_t sub_2360B4954()
{
  sub_2360B5F28();
  return sub_2360D1154();
}

uint64_t sub_2360B497C()
{
  sub_2360B5CC4();
  return sub_2360D1148();
}

uint64_t sub_2360B49A4()
{
  sub_2360B5CC4();
  return sub_2360D1154();
}

uint64_t sub_2360B49CC()
{
  sub_2360B6104();
  return sub_2360D1148();
}

uint64_t sub_2360B49F4()
{
  sub_2360B6104();
  return sub_2360D1154();
}

uint64_t sub_2360B4A1C()
{
  sub_2360B5D90();
  return sub_2360D1148();
}

uint64_t sub_2360B4A44()
{
  sub_2360B5D90();
  return sub_2360D1154();
}

uint64_t sub_2360B4A6C()
{
  sub_2360B618C();
  return sub_2360D1148();
}

uint64_t sub_2360B4A94()
{
  sub_2360B618C();
  return sub_2360D1154();
}

uint64_t sub_2360B4ABC()
{
  sub_2360B5C80();
  return sub_2360D1148();
}

uint64_t sub_2360B4AE4()
{
  sub_2360B5C80();
  return sub_2360D1154();
}

uint64_t sub_2360B4B0C()
{
  sub_2360B5EE4();
  return sub_2360D1148();
}

uint64_t sub_2360B4B34()
{
  sub_2360B5EE4();
  return sub_2360D1154();
}

uint64_t sub_2360B4B5C()
{
  sub_2360B5FB0();
  return sub_2360D1148();
}

uint64_t sub_2360B4B84()
{
  sub_2360B5FB0();
  return sub_2360D1154();
}

uint64_t sub_2360B4BAC()
{
  sub_2360B5D4C();
  return sub_2360D1148();
}

uint64_t sub_2360B4BD4()
{
  sub_2360B5D4C();
  return sub_2360D1154();
}

uint64_t sub_2360B4BFC()
{
  sub_2360B6038();
  return sub_2360D1148();
}

uint64_t sub_2360B4C24()
{
  sub_2360B6038();
  return sub_2360D1154();
}

uint64_t sub_2360B4C4C()
{
  sub_2360B61D0();
  return sub_2360D1148();
}

uint64_t sub_2360B4C74()
{
  sub_2360B61D0();
  return sub_2360D1154();
}

uint64_t sub_2360B4C9C()
{
  sub_2360B6148();
  return sub_2360D1148();
}

uint64_t sub_2360B4CC4()
{
  sub_2360B6148();
  return sub_2360D1154();
}

void MarketplaceKitError.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  _QWORD v35[4];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2088);
  v94 = *(_QWORD *)(v2 - 8);
  v95 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v93 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2090);
  v91 = *(_QWORD *)(v4 - 8);
  v92 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v90 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2098);
  v88 = *(_QWORD *)(v6 - 8);
  v89 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v87 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A20A0);
  v85 = *(_QWORD *)(v8 - 8);
  v86 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v84 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A20A8);
  v82 = *(_QWORD *)(v10 - 8);
  v83 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v81 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A20B0);
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v78 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A20B8);
  v76 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v75 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A20C0);
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v72 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A20C8);
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v69 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A20D0);
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v66 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A20D8);
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v63 = (char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A20E0);
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v57 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A20E8);
  v52 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v51 = (char *)v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A20F0);
  v59 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v56 = (char *)v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(qword_2563A0288);
  v55 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v53 = (char *)v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A20F8);
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v48 = (char *)v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2100);
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v45 = (char *)v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2108);
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v40 = (char *)v35 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2110);
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v39 = (char *)v35 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2118);
  v35[2] = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v35[1] = (char *)v35 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2120);
  v37 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v35[3] = (char *)v35 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2128);
  MEMORY[0x24BDAC7A8](v28);
  v29 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)v35 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2130);
  v96 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v33 = (char *)v35 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360B5C3C();
  v97 = v33;
  sub_2360D113C();
  sub_236084494(v99, (uint64_t)v31);
  v34 = (char *)sub_2360B5474 + 4 * word_2360D7AF6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2360B5474()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v0;
  *(_BYTE *)(v1 - 72) = 1;
  sub_2360B618C();
  v3 = *(_QWORD *)(v1 - 616);
  v5 = *(_QWORD *)(v1 - 120);
  v4 = *(_QWORD *)(v1 - 112);
  sub_2360D0F98();
  *(_QWORD *)(v1 - 72) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25429DBB0);
  sub_23607A564(&qword_2563A0900, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  v6 = *(_QWORD *)(v1 - 592);
  sub_2360D0FEC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 600) + 8))(v3, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 128) + 8))(v5, v4);
  return swift_bridgeObjectRelease();
}

unint64_t sub_2360B5C3C()
{
  unint64_t result;

  result = qword_2563A2138;
  if (!qword_2563A2138)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8EEC, &type metadata for MarketplaceKitError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2138);
  }
  return result;
}

unint64_t sub_2360B5C80()
{
  unint64_t result;

  result = qword_2563A2140;
  if (!qword_2563A2140)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8E9C, &type metadata for MarketplaceKitError.MissingInstallVerificationTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2140);
  }
  return result;
}

unint64_t sub_2360B5CC4()
{
  unint64_t result;

  result = qword_2563A2148;
  if (!qword_2563A2148)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8E4C, &type metadata for MarketplaceKitError.InvalidURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2148);
  }
  return result;
}

unint64_t sub_2360B5D08()
{
  unint64_t result;

  result = qword_2563A2150;
  if (!qword_2563A2150)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8DFC, &type metadata for MarketplaceKitError.InvalidLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2150);
  }
  return result;
}

unint64_t sub_2360B5D4C()
{
  unint64_t result;

  result = qword_2563A2158;
  if (!qword_2563A2158)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8DAC, &type metadata for MarketplaceKitError.OauthTokenErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2158);
  }
  return result;
}

unint64_t sub_2360B5D90()
{
  unint64_t result;

  result = qword_2563A2160;
  if (!qword_2563A2160)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8D5C, &type metadata for MarketplaceKitError.MismatchedInstallTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2160);
  }
  return result;
}

unint64_t sub_2360B5DD4()
{
  unint64_t result;

  result = qword_2563A2168;
  if (!qword_2563A2168)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8D0C, &type metadata for MarketplaceKitError.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2168);
  }
  return result;
}

unint64_t sub_2360B5E18()
{
  unint64_t result;

  result = qword_2563A2170;
  if (!qword_2563A2170)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8CBC, &type metadata for MarketplaceKitError.FeatureUnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2170);
  }
  return result;
}

unint64_t sub_2360B5E5C()
{
  unint64_t result;

  result = qword_2563A2178;
  if (!qword_2563A2178)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8C6C, &type metadata for MarketplaceKitError.InvalidAlternativeDistributionPackageSignatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2178);
  }
  return result;
}

unint64_t sub_2360B5EA0()
{
  unint64_t result;

  result = qword_2563A2180;
  if (!qword_2563A2180)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8C1C, &type metadata for MarketplaceKitError.InvalidAlternativeDistributionPackageURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2180);
  }
  return result;
}

unint64_t sub_2360B5EE4()
{
  unint64_t result;

  result = qword_2563A2188;
  if (!qword_2563A2188)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8BCC, &type metadata for MarketplaceKitError.NetworkErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2188);
  }
  return result;
}

unint64_t sub_2360B5F28()
{
  unint64_t result;

  result = qword_2563A2190;
  if (!qword_2563A2190)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8B7C, &type metadata for MarketplaceKitError.InvalidManifestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2190);
  }
  return result;
}

unint64_t sub_2360B5F6C()
{
  unint64_t result;

  result = qword_2563A2198;
  if (!qword_2563A2198)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8B2C, &type metadata for MarketplaceKitError.AppNotInstalledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2198);
  }
  return result;
}

unint64_t sub_2360B5FB0()
{
  unint64_t result;

  result = qword_2563A21A0;
  if (!qword_2563A21A0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8ADC, &type metadata for MarketplaceKitError.NoSupportedVariantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A21A0);
  }
  return result;
}

unint64_t sub_2360B5FF4()
{
  unint64_t result;

  result = qword_2563A21A8;
  if (!qword_2563A21A8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8A8C, &type metadata for MarketplaceKitError.InsufficientStorageSpaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A21A8);
  }
  return result;
}

unint64_t sub_2360B6038()
{
  unint64_t result;

  result = qword_2563A21B8;
  if (!qword_2563A21B8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8A3C, &type metadata for MarketplaceKitError.RatingRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A21B8);
  }
  return result;
}

unint64_t sub_2360B607C()
{
  unint64_t result;

  result = qword_2563A21C0;
  if (!qword_2563A21C0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D89EC, &type metadata for MarketplaceKitError.InstallationOfMarketplaceDeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A21C0);
  }
  return result;
}

unint64_t sub_2360B60C0()
{
  unint64_t result;

  result = qword_2563A21C8;
  if (!qword_2563A21C8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D899C, &type metadata for MarketplaceKitError.InstallationRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A21C8);
  }
  return result;
}

unint64_t sub_2360B6104()
{
  unint64_t result;

  result = qword_2563A21D0;
  if (!qword_2563A21D0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D894C, &type metadata for MarketplaceKitError.MinimumPlatformVersionNotSatisfiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A21D0);
  }
  return result;
}

unint64_t sub_2360B6148()
{
  unint64_t result;

  result = qword_2563A21D8;
  if (!qword_2563A21D8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D88FC, &type metadata for MarketplaceKitError.UnsupportedPlatformCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A21D8);
  }
  return result;
}

unint64_t sub_2360B618C()
{
  unint64_t result;

  result = qword_2563A21E0;
  if (!qword_2563A21E0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D88AC, &type metadata for MarketplaceKitError.MissingCapabilitiesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A21E0);
  }
  return result;
}

unint64_t sub_2360B61D0()
{
  unint64_t result;

  result = qword_2563A21E8;
  if (!qword_2563A21E8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D885C, &type metadata for MarketplaceKitError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A21E8);
  }
  return result;
}

uint64_t MarketplaceKitError.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  _QWORD v47[5];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;

  v107 = a2;
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A21F0);
  v113 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v112 = (char *)v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A21F8);
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v106 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2200);
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v105 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2208);
  v81 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v104 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2210);
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v103 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2218);
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v102 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2220);
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v101 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2228);
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v100 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2230);
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v99 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2238);
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v98 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2240);
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v97 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2248);
  v65 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v96 = (char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2250);
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v95 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2258);
  v64 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v111 = (char *)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2260);
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v94 = (char *)v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2268);
  v57 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v93 = (char *)v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2270);
  v53 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v91 = (char *)v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2278);
  v54 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v92 = (char *)v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2280);
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v89 = (char *)v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2288);
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v90 = (char *)v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2290);
  v47[4] = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v88 = (char *)v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2298);
  v108 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110);
  v25 = (char *)v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for MarketplaceKitError();
  v27 = MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)v47 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)v47 - v31;
  v33 = MEMORY[0x24BDAC7A8](v30);
  v35 = (char *)v47 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v37 = (char *)v47 - v36;
  v38 = a1[3];
  v114 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v38);
  sub_2360B5C3C();
  v109 = v25;
  v39 = v115;
  sub_2360D1124();
  if (!v39)
  {
    v47[0] = v32;
    v47[1] = v35;
    v47[2] = v29;
    v115 = 0;
    v47[3] = v37;
    v40 = v109;
    v41 = v110;
    v42 = sub_2360D0F80();
    if (*(_QWORD *)(v42 + 16) == 1)
      __asm { BR              X10 }
    v43 = sub_2360D0E78();
    swift_allocError();
    v45 = v44;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0270);
    *v45 = v26;
    sub_2360D0F08();
    sub_2360D0E6C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v45, *MEMORY[0x24BEE26D0], v43);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v40, v41);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v114);
}

void sub_2360B764C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 72) = 20;
  sub_2360B5C80();
  v5 = *(_QWORD *)(v4 - 96);
  sub_2360D0EFC();
  if (v5)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 152) + 8))(v2, v3);
    JUMPOUT(0x2360B7624);
  }
  (*(void (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v4 - 320));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 152) + 8))(v2, v3);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2360B77A0);
}

uint64_t sub_2360B78B4(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B7EBA68](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2360B78F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MarketplaceKitError.init(from:)(a1, a2);
}

void sub_2360B790C(_QWORD *a1)
{
  MarketplaceKitError.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for MarketplaceKitError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(qword_2563A0288);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for MarketplaceKitError(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledName(qword_2563A0288);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else if (result <= 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for MarketplaceKitError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2563A0288);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for MarketplaceKitError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_236067E78((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2563A0288);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for MarketplaceKitError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(qword_2563A0288);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for MarketplaceKitError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_236067E78((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = __swift_instantiateConcreteTypeFromMangledName(qword_2563A0288);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_2360B7D98()
{
  unint64_t v0;

  sub_2360B7E14();
  if (v0 <= 0x3F)
    swift_initEnumMetadataMultiPayload();
}

void sub_2360B7E14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2563A2328)
  {
    sub_2360B7E68();
    v0 = sub_2360D07F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2563A2328);
  }
}

unint64_t sub_2360B7E68()
{
  unint64_t result;

  result = qword_2563A2330;
  if (!qword_2563A2330)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2563A2330);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MarketplaceKitError.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEC)
    goto LABEL_17;
  if (a2 + 20 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 20) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 20;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 20;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 20;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x15;
  v8 = v6 - 21;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MarketplaceKitError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 20 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 20) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEB)
    return ((uint64_t (*)(void))((char *)&loc_2360B7F80 + 4 * byte_2360D7B4F[v4]))();
  *a1 = a2 + 20;
  return ((uint64_t (*)(void))((char *)sub_2360B7FB4 + 4 * byte_2360D7B4A[v4]))();
}

uint64_t sub_2360B7FB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360B7FBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360B7FC4);
  return result;
}

uint64_t sub_2360B7FD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360B7FD8);
  *(_BYTE *)result = a2 + 20;
  return result;
}

uint64_t sub_2360B7FDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360B7FE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.CodingKeys()
{
  return &type metadata for MarketplaceKitError.CodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.UnknownCodingKeys()
{
  return &type metadata for MarketplaceKitError.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.MissingCapabilitiesCodingKeys()
{
  return &type metadata for MarketplaceKitError.MissingCapabilitiesCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.UnsupportedPlatformCodingKeys()
{
  return &type metadata for MarketplaceKitError.UnsupportedPlatformCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.MinimumPlatformVersionNotSatisfiedCodingKeys()
{
  return &type metadata for MarketplaceKitError.MinimumPlatformVersionNotSatisfiedCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InstallationRestrictedCodingKeys()
{
  return &type metadata for MarketplaceKitError.InstallationRestrictedCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InstallationOfMarketplaceDeniedCodingKeys()
{
  return &type metadata for MarketplaceKitError.InstallationOfMarketplaceDeniedCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.RatingRestrictedCodingKeys()
{
  return &type metadata for MarketplaceKitError.RatingRestrictedCodingKeys;
}

uint64_t _s15AppDistribution19MarketplaceKitErrorO29MissingCapabilitiesCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2360B80B4 + 4 * byte_2360D7B54[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2360B80D4 + 4 * byte_2360D7B59[v4]))();
}

_BYTE *sub_2360B80B4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2360B80D4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2360B80DC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2360B80E4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2360B80EC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2360B80F4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InsufficientStorageSpaceCodingKeys()
{
  return &type metadata for MarketplaceKitError.InsufficientStorageSpaceCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.NoSupportedVariantCodingKeys()
{
  return &type metadata for MarketplaceKitError.NoSupportedVariantCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.AppNotInstalledCodingKeys()
{
  return &type metadata for MarketplaceKitError.AppNotInstalledCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InvalidManifestCodingKeys()
{
  return &type metadata for MarketplaceKitError.InvalidManifestCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.NetworkErrorCodingKeys()
{
  return &type metadata for MarketplaceKitError.NetworkErrorCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InvalidAlternativeDistributionPackageURLCodingKeys()
{
  return &type metadata for MarketplaceKitError.InvalidAlternativeDistributionPackageURLCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InvalidAlternativeDistributionPackageSignatureCodingKeys()
{
  return &type metadata for MarketplaceKitError.InvalidAlternativeDistributionPackageSignatureCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.FeatureUnavailableCodingKeys()
{
  return &type metadata for MarketplaceKitError.FeatureUnavailableCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.CancelledCodingKeys()
{
  return &type metadata for MarketplaceKitError.CancelledCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.MismatchedInstallTypeCodingKeys()
{
  return &type metadata for MarketplaceKitError.MismatchedInstallTypeCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.OauthTokenErrorCodingKeys()
{
  return &type metadata for MarketplaceKitError.OauthTokenErrorCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InvalidLicenseCodingKeys()
{
  return &type metadata for MarketplaceKitError.InvalidLicenseCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InvalidURLCodingKeys()
{
  return &type metadata for MarketplaceKitError.InvalidURLCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.MissingInstallVerificationTokenCodingKeys()
{
  return &type metadata for MarketplaceKitError.MissingInstallVerificationTokenCodingKeys;
}

unint64_t sub_2360B81E4()
{
  unint64_t result;

  result = qword_2563A2360;
  if (!qword_2563A2360)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D847C, &type metadata for MarketplaceKitError.InsufficientStorageSpaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2360);
  }
  return result;
}

unint64_t sub_2360B822C()
{
  unint64_t result;

  result = qword_2563A2368;
  if (!qword_2563A2368)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8624, &type metadata for MarketplaceKitError.MinimumPlatformVersionNotSatisfiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2368);
  }
  return result;
}

unint64_t sub_2360B8274()
{
  unint64_t result;

  result = qword_2563A2370;
  if (!qword_2563A2370)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D872C, &type metadata for MarketplaceKitError.MissingCapabilitiesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2370);
  }
  return result;
}

unint64_t sub_2360B82BC()
{
  unint64_t result;

  result = qword_2563A2378;
  if (!qword_2563A2378)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8834, &type metadata for MarketplaceKitError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2378);
  }
  return result;
}

unint64_t sub_2360B8304()
{
  unint64_t result;

  result = qword_2563A2380;
  if (!qword_2563A2380)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8754, &type metadata for MarketplaceKitError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2380);
  }
  return result;
}

unint64_t sub_2360B834C()
{
  unint64_t result;

  result = qword_2563A2388;
  if (!qword_2563A2388)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D877C, &type metadata for MarketplaceKitError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2388);
  }
  return result;
}

unint64_t sub_2360B8394()
{
  unint64_t result;

  result = qword_2563A2390;
  if (!qword_2563A2390)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D869C, &type metadata for MarketplaceKitError.MissingCapabilitiesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2390);
  }
  return result;
}

unint64_t sub_2360B83DC()
{
  unint64_t result;

  result = qword_2563A2398;
  if (!qword_2563A2398)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D86C4, &type metadata for MarketplaceKitError.MissingCapabilitiesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2398);
  }
  return result;
}

unint64_t sub_2360B8424()
{
  unint64_t result;

  result = qword_2563A23A0;
  if (!qword_2563A23A0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D864C, &type metadata for MarketplaceKitError.UnsupportedPlatformCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A23A0);
  }
  return result;
}

unint64_t sub_2360B846C()
{
  unint64_t result;

  result = qword_2563A23A8;
  if (!qword_2563A23A8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8674, &type metadata for MarketplaceKitError.UnsupportedPlatformCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A23A8);
  }
  return result;
}

unint64_t sub_2360B84B4()
{
  unint64_t result;

  result = qword_2563A23B0;
  if (!qword_2563A23B0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8594, &type metadata for MarketplaceKitError.MinimumPlatformVersionNotSatisfiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A23B0);
  }
  return result;
}

unint64_t sub_2360B84FC()
{
  unint64_t result;

  result = qword_2563A23B8;
  if (!qword_2563A23B8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D85BC, &type metadata for MarketplaceKitError.MinimumPlatformVersionNotSatisfiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A23B8);
  }
  return result;
}

unint64_t sub_2360B8544()
{
  unint64_t result;

  result = qword_2563A23C0;
  if (!qword_2563A23C0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8544, &type metadata for MarketplaceKitError.InstallationRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A23C0);
  }
  return result;
}

unint64_t sub_2360B858C()
{
  unint64_t result;

  result = qword_2563A23C8;
  if (!qword_2563A23C8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D856C, &type metadata for MarketplaceKitError.InstallationRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A23C8);
  }
  return result;
}

unint64_t sub_2360B85D4()
{
  unint64_t result;

  result = qword_2563A23D0;
  if (!qword_2563A23D0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D84F4, &type metadata for MarketplaceKitError.InstallationOfMarketplaceDeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A23D0);
  }
  return result;
}

unint64_t sub_2360B861C()
{
  unint64_t result;

  result = qword_2563A23D8;
  if (!qword_2563A23D8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D851C, &type metadata for MarketplaceKitError.InstallationOfMarketplaceDeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A23D8);
  }
  return result;
}

unint64_t sub_2360B8664()
{
  unint64_t result;

  result = qword_2563A23E0;
  if (!qword_2563A23E0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D84A4, &type metadata for MarketplaceKitError.RatingRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A23E0);
  }
  return result;
}

unint64_t sub_2360B86AC()
{
  unint64_t result;

  result = qword_2563A23E8;
  if (!qword_2563A23E8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D84CC, &type metadata for MarketplaceKitError.RatingRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A23E8);
  }
  return result;
}

unint64_t sub_2360B86F4()
{
  unint64_t result;

  result = qword_2563A23F0;
  if (!qword_2563A23F0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D83EC, &type metadata for MarketplaceKitError.InsufficientStorageSpaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A23F0);
  }
  return result;
}

unint64_t sub_2360B873C()
{
  unint64_t result;

  result = qword_2563A23F8;
  if (!qword_2563A23F8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8414, &type metadata for MarketplaceKitError.InsufficientStorageSpaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A23F8);
  }
  return result;
}

unint64_t sub_2360B8784()
{
  unint64_t result;

  result = qword_2563A2400;
  if (!qword_2563A2400)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D839C, &type metadata for MarketplaceKitError.NoSupportedVariantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2400);
  }
  return result;
}

unint64_t sub_2360B87CC()
{
  unint64_t result;

  result = qword_2563A2408;
  if (!qword_2563A2408)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D83C4, &type metadata for MarketplaceKitError.NoSupportedVariantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2408);
  }
  return result;
}

unint64_t sub_2360B8814()
{
  unint64_t result;

  result = qword_2563A2410;
  if (!qword_2563A2410)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D834C, &type metadata for MarketplaceKitError.AppNotInstalledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2410);
  }
  return result;
}

unint64_t sub_2360B885C()
{
  unint64_t result;

  result = qword_2563A2418;
  if (!qword_2563A2418)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8374, &type metadata for MarketplaceKitError.AppNotInstalledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2418);
  }
  return result;
}

unint64_t sub_2360B88A4()
{
  unint64_t result;

  result = qword_2563A2420;
  if (!qword_2563A2420)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D82FC, &type metadata for MarketplaceKitError.InvalidManifestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2420);
  }
  return result;
}

unint64_t sub_2360B88EC()
{
  unint64_t result;

  result = qword_2563A2428;
  if (!qword_2563A2428)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8324, &type metadata for MarketplaceKitError.InvalidManifestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2428);
  }
  return result;
}

unint64_t sub_2360B8934()
{
  unint64_t result;

  result = qword_2563A2430;
  if (!qword_2563A2430)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D82AC, &type metadata for MarketplaceKitError.NetworkErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2430);
  }
  return result;
}

unint64_t sub_2360B897C()
{
  unint64_t result;

  result = qword_2563A2438;
  if (!qword_2563A2438)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D82D4, &type metadata for MarketplaceKitError.NetworkErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2438);
  }
  return result;
}

unint64_t sub_2360B89C4()
{
  unint64_t result;

  result = qword_2563A2440;
  if (!qword_2563A2440)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D825C, &type metadata for MarketplaceKitError.InvalidAlternativeDistributionPackageURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2440);
  }
  return result;
}

unint64_t sub_2360B8A0C()
{
  unint64_t result;

  result = qword_2563A2448;
  if (!qword_2563A2448)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8284, &type metadata for MarketplaceKitError.InvalidAlternativeDistributionPackageURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2448);
  }
  return result;
}

unint64_t sub_2360B8A54()
{
  unint64_t result;

  result = qword_2563A2450;
  if (!qword_2563A2450)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D820C, &type metadata for MarketplaceKitError.InvalidAlternativeDistributionPackageSignatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2450);
  }
  return result;
}

unint64_t sub_2360B8A9C()
{
  unint64_t result;

  result = qword_2563A2458;
  if (!qword_2563A2458)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8234, &type metadata for MarketplaceKitError.InvalidAlternativeDistributionPackageSignatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2458);
  }
  return result;
}

unint64_t sub_2360B8AE4()
{
  unint64_t result;

  result = qword_2563A2460;
  if (!qword_2563A2460)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D81BC, &type metadata for MarketplaceKitError.FeatureUnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2460);
  }
  return result;
}

unint64_t sub_2360B8B2C()
{
  unint64_t result;

  result = qword_2563A2468;
  if (!qword_2563A2468)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D81E4, &type metadata for MarketplaceKitError.FeatureUnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2468);
  }
  return result;
}

unint64_t sub_2360B8B74()
{
  unint64_t result;

  result = qword_2563A2470;
  if (!qword_2563A2470)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D816C, &type metadata for MarketplaceKitError.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2470);
  }
  return result;
}

unint64_t sub_2360B8BBC()
{
  unint64_t result;

  result = qword_2563A2478;
  if (!qword_2563A2478)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8194, &type metadata for MarketplaceKitError.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2478);
  }
  return result;
}

unint64_t sub_2360B8C04()
{
  unint64_t result;

  result = qword_2563A2480;
  if (!qword_2563A2480)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D811C, &type metadata for MarketplaceKitError.MismatchedInstallTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2480);
  }
  return result;
}

unint64_t sub_2360B8C4C()
{
  unint64_t result;

  result = qword_2563A2488;
  if (!qword_2563A2488)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8144, &type metadata for MarketplaceKitError.MismatchedInstallTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2488);
  }
  return result;
}

unint64_t sub_2360B8C94()
{
  unint64_t result;

  result = qword_2563A2490;
  if (!qword_2563A2490)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D80CC, &type metadata for MarketplaceKitError.OauthTokenErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2490);
  }
  return result;
}

unint64_t sub_2360B8CDC()
{
  unint64_t result;

  result = qword_2563A2498;
  if (!qword_2563A2498)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D80F4, &type metadata for MarketplaceKitError.OauthTokenErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2498);
  }
  return result;
}

unint64_t sub_2360B8D24()
{
  unint64_t result;

  result = qword_2563A24A0;
  if (!qword_2563A24A0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D807C, &type metadata for MarketplaceKitError.InvalidLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A24A0);
  }
  return result;
}

unint64_t sub_2360B8D6C()
{
  unint64_t result;

  result = qword_2563A24A8;
  if (!qword_2563A24A8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D80A4, &type metadata for MarketplaceKitError.InvalidLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A24A8);
  }
  return result;
}

unint64_t sub_2360B8DB4()
{
  unint64_t result;

  result = qword_2563A24B0;
  if (!qword_2563A24B0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D802C, &type metadata for MarketplaceKitError.InvalidURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A24B0);
  }
  return result;
}

unint64_t sub_2360B8DFC()
{
  unint64_t result;

  result = qword_2563A24B8;
  if (!qword_2563A24B8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8054, &type metadata for MarketplaceKitError.InvalidURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A24B8);
  }
  return result;
}

unint64_t sub_2360B8E44()
{
  unint64_t result;

  result = qword_2563A24C0;
  if (!qword_2563A24C0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D7FDC, &type metadata for MarketplaceKitError.MissingInstallVerificationTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A24C0);
  }
  return result;
}

unint64_t sub_2360B8E8C()
{
  unint64_t result;

  result = qword_2563A24C8;
  if (!qword_2563A24C8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D8004, &type metadata for MarketplaceKitError.MissingInstallVerificationTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A24C8);
  }
  return result;
}

unint64_t sub_2360B8ED4()
{
  unint64_t result;

  result = qword_2563A24D0;
  if (!qword_2563A24D0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D87A4, &type metadata for MarketplaceKitError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A24D0);
  }
  return result;
}

unint64_t sub_2360B8F1C()
{
  unint64_t result;

  result = qword_2563A24D8;
  if (!qword_2563A24D8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D87CC, &type metadata for MarketplaceKitError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A24D8);
  }
  return result;
}

uint64_t sub_2360B8F60(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002360DE210 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002360DE230 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000002360DE250 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002360DE280 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000002360DE2A0 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002360DE2C0 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002360DE2E0 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002360DE300 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6E49746F4E707061 && a2 == 0xEF64656C6C617473 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x4D64696C61766E69 && a2 == 0xEF74736566696E61 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x456B726F7774656ELL && a2 == 0xEC000000726F7272 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000002360DE320 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000002ELL && a2 == 0x80000002360DE350 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002360DE380 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x656C6C65636E6163 && a2 == 0xE900000000000064 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002360DE3A0 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6B6F54687475616FLL && a2 == 0xEF726F7272456E65 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x4C64696C61766E69 && a2 == 0xEE0065736E656369 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x5564696C61766E69 && a2 == 0xEA00000000004C52 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000002360DE3C0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 20;
    else
      return 21;
  }
}

uint64_t InstallConfirmationRequest.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  char v21;

  v2 = *(_OWORD *)(v1 + 80);
  v3 = *(_OWORD *)(v1 + 112);
  v19 = *(_OWORD *)(v1 + 96);
  v20 = v3;
  v4 = *(_OWORD *)(v1 + 16);
  v5 = *(_OWORD *)(v1 + 48);
  v15 = *(_OWORD *)(v1 + 32);
  v6 = v15;
  v16 = v5;
  v7 = *(_OWORD *)(v1 + 48);
  v8 = *(_OWORD *)(v1 + 80);
  v17 = *(_OWORD *)(v1 + 64);
  v9 = v17;
  v18 = v8;
  v10 = *(_OWORD *)(v1 + 16);
  v14[0] = *(_OWORD *)v1;
  v11 = v14[0];
  v14[1] = v10;
  v12 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 96) = v19;
  *(_OWORD *)(a1 + 112) = v12;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 80) = v2;
  v21 = *(_BYTE *)(v1 + 128);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(v1 + 128);
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v4;
  return sub_2360B1CF0((uint64_t)v14);
}

__n128 InstallConfirmationRequest.init(context:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a2 + 112) = v2;
  *(_BYTE *)(a2 + 128) = *(_BYTE *)(a1 + 128);
  v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v3;
  v4 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 80) = v4;
  result = *(__n128 *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t InstallConfirmationRequest.run()()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  *(_QWORD *)(v1 + 168) = v0;
  type metadata accessor for LaunchAngelXPCRequest(0);
  *(_QWORD *)(v1 + 176) = swift_task_alloc();
  v2 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v1 + 112) = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v1 + 128) = v2;
  *(_BYTE *)(v1 + 144) = *(_BYTE *)(v0 + 128);
  v3 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 64) = v3;
  v4 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v1 + 96) = v4;
  v5 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 32) = v5;
  return swift_task_switch();
}

uint64_t sub_2360B98F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _QWORD *v9;

  v1 = v0[21];
  v2 = v0[22];
  v3 = *(_OWORD *)(v1 + 64);
  v5 = *(_OWORD *)(v1 + 16);
  v4 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v2 + 64) = v3;
  *(_OWORD *)(v2 + 16) = v5;
  *(_OWORD *)(v2 + 32) = v4;
  v7 = *(_OWORD *)(v1 + 96);
  v6 = *(_OWORD *)(v1 + 112);
  v8 = *(_OWORD *)(v1 + 80);
  *(_BYTE *)(v2 + 128) = *(_BYTE *)(v1 + 128);
  *(_OWORD *)(v2 + 96) = v7;
  *(_OWORD *)(v2 + 112) = v6;
  *(_OWORD *)(v2 + 80) = v8;
  *(_OWORD *)v2 = *(_OWORD *)v1;
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  swift_storeEnumTagMultiPayload();
  sub_2360B1CF0((uint64_t)(v0 + 2));
  v9 = (_QWORD *)swift_task_alloc();
  v0[23] = v9;
  *v9 = v0;
  v9[1] = sub_2360B99AC;
  return static LaunchAngelConnectionUtilities.handleLaunchAngelRequest(_:)((uint64_t)(v0 + 19), v0[22]);
}

uint64_t sub_2360B99AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2360B9A10()
{
  uint64_t v0;
  uint64_t v1;

  sub_23608E0F4(*(_QWORD *)(v0 + 176));
  if (*(_BYTE *)(v0 + 160))
  {
    sub_23608E130(*(_QWORD *)(v0 + 152), *(_BYTE *)(v0 + 160));
    v1 = 0;
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 152) & 1;
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_2360B9A6C()
{
  uint64_t v0;

  sub_23608E0F4(*(_QWORD *)(v0 + 176));
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

ValueMetadata *type metadata accessor for InstallConfirmationRequest()
{
  return &type metadata for InstallConfirmationRequest;
}

uint64_t static LaunchAngelConnectionUtilities.handleLaunchAngelRequest(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[15] = a1;
  v2[16] = a2;
  v3 = sub_2360D0B3C();
  v2[17] = v3;
  v2[18] = *(_QWORD *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = type metadata accessor for LaunchAngelXPCRequest(0);
  v2[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2360B9B44()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  _BYTE *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;

  v1 = MKBGetDeviceLockState();
  if (v1 != 3 && v1)
  {
    sub_2360BA154();
    swift_allocError();
    *v14 = 1;
LABEL_12:
    swift_willThrow();
    goto LABEL_19;
  }
  v2 = sub_2360BAF2C();
  *(_QWORD *)(v0 + 176) = v2;
  if (!v2)
  {
LABEL_9:
    sub_2360D0AF4();
    v15 = sub_2360D0B24();
    v16 = sub_2360D0D28();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_236065000, v15, v16, "Unexpected connection type", v17, 2u);
      MEMORY[0x23B7EBB1C](v17, -1, -1);
    }
    v19 = *(_QWORD *)(v0 + 144);
    v18 = *(_QWORD *)(v0 + 152);
    v20 = *(_QWORD *)(v0 + 136);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    sub_2360BA154();
    swift_allocError();
    *v21 = 0;
    goto LABEL_12;
  }
  v3 = (void *)v2;
  *(_QWORD *)(v0 + 80) = &unk_2563BBFC0;
  v4 = swift_dynamicCastObjCProtocolConditional();
  if (!v4)
  {

    goto LABEL_9;
  }
  v5 = (void *)v4;
  v6 = v3;
  v7 = (void *)sub_2360D0BA8();
  v8 = (void *)sub_2360D0BA8();
  v9 = objc_msgSend((id)objc_opt_self(), sel_attributeWithDomain_name_, v7, v8);
  *(_QWORD *)(v0 + 184) = v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2558);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2360D8F70;
  *(_QWORD *)(v10 + 32) = v9;
  sub_2360D0C20();
  sub_2360BB0B0();
  v11 = v9;
  v12 = (void *)sub_2360D0BFC();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v5, sel_remoteTargetWithLaunchingAssertionAttributes_, v12);

  if (v13)
  {
    sub_2360D0DA0();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
  }
  sub_2360BB0EC(v0 + 16, v0 + 48);
  if (*(_QWORD *)(v0 + 72))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2568);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v23 = *(_QWORD *)(v0 + 160);
      v22 = *(_QWORD *)(v0 + 168);
      v24 = *(_QWORD *)(v0 + 128);
      v25 = *(_QWORD *)(v0 + 88);
      *(_QWORD *)(v0 + 192) = v25;
      sub_2360BB174(v24, v22);
      *(_QWORD *)(v0 + 96) = v22;
      *(_QWORD *)(v0 + 104) = v23;
      *(_QWORD *)(v0 + 112) = sub_236077F30(&qword_2563A2570, type metadata accessor for LaunchAngelXPCRequest, (uint64_t)&protocol conformance descriptor for LaunchAngelXPCRequest);
      v26 = sub_2360D0A04();
      *(_QWORD *)(v0 + 200) = v26;
      *(_QWORD *)(v0 + 208) = v27;
      v29 = v26;
      v30 = v27;
      sub_23608E0F4(*(_QWORD *)(v0 + 168));
      v31 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 216) = v31;
      v31[2] = v25;
      v31[3] = v29;
      v31[4] = v30;
      v32 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 224) = v32;
      *v32 = v0;
      v32[1] = sub_2360B9FE0;
      return sub_2360D104C();
    }
  }
  else
  {
    sub_2360BB134(v0 + 48);
  }
  sub_2360BA154();
  swift_allocError();
  *v28 = 0;
  swift_willThrow();

  objc_msgSend(v6, sel_invalidate);
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2360B9FE0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2360BA04C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 176);
  sub_236077AC4(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
  swift_unknownObjectRelease();

  objc_msgSend(v2, sel_invalidate);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2360BA0D0()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 176);
  v2 = *(void **)(v0 + 184);
  sub_236077AC4(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
  swift_unknownObjectRelease();

  swift_task_dealloc();
  objc_msgSend(v1, sel_invalidate);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_2360BA154()
{
  unint64_t result;

  result = qword_2563A24F0;
  if (!qword_2563A24F0)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for LaunchAngelConnectionUtilities.Error, &type metadata for LaunchAngelConnectionUtilities.Error);
    atomic_store(result, (unint64_t *)&qword_2563A24F0);
  }
  return result;
}

BOOL static LaunchAngelConnectionUtilities.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t LaunchAngelConnectionUtilities.Error.hash(into:)()
{
  return sub_2360D10C4();
}

uint64_t LaunchAngelConnectionUtilities.Error.hashValue.getter()
{
  sub_2360D10B8();
  sub_2360D10C4();
  return sub_2360D10F4();
}

void sub_2360BA21C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2580);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (void *)sub_2360D08F0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_2360BB34C;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2360BABF4;
  aBlock[3] = &block_descriptor_13;
  v10 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_handleXPCRequest_reply_, v7, v10);
  _Block_release(v10);

}

uint64_t sub_2360BA36C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint8_t *v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t result;
  uint8_t *v35;
  char *v36;
  int v37;
  char v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  char *v61;
  uint64_t v62;

  v50 = a4;
  v62 = *MEMORY[0x24BDAC8D0];
  v7 = sub_2360D09C8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_2360D0B3C();
  v48 = *(_QWORD *)(v49 - 8);
  v11 = MEMORY[0x24BDAC7A8](v49);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v43 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2588);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  if (a3)
  {
    v22 = a3;
    sub_2360D0AF4();
    v23 = v22;
    v24 = sub_2360D0B24();
    v25 = sub_2360D0D28();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v47 = swift_slowAlloc();
      v52 = v47;
      *(_DWORD *)v26 = 136315138;
      v46 = v26 + 4;
      v27 = v23;
      v28 = objc_msgSend(v27, sel_description);
      v29 = sub_2360D0BC0();
      v31 = v30;

      v51 = sub_23609FE8C(v29, v31, &v52);
      sub_2360D0D88();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_236065000, v24, v25, "Error in reply: %s", v26, 0xCu);
      v32 = v47;
      swift_arrayDestroy();
      MEMORY[0x23B7EBB1C](v32, -1, -1);
      MEMORY[0x23B7EBB1C](v26, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v15, v49);
    v52 = (uint64_t)v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2580);
    return sub_2360D0C50();
  }
  else
  {
    v46 = v21;
    v44 = v10;
    v45 = v8;
    v47 = (uint64_t)v13;
    v58 = a1;
    v59 = a2;
    v60 = &v58;
    v61 = (char *)&v43 - v20;
    v33 = (char *)&v43 - v20;
    sub_236077B70(a1, a2);
    v56 = v16;
    v57 = MEMORY[0x24BDCDDE8];
    v55 = sub_236077BB4();
    v54 = sub_2360BB3A4();
    sub_2360D09F8();
    sub_236077AC4(v58, v59);
    v35 = v46;
    v36 = v33;
    (*((void (**)(char *, char *, uint64_t))v46 + 2))(v19, v33, v16);
    v37 = (*((uint64_t (**)(char *, uint64_t))v35 + 11))(v19, v16);
    if (v37 == *MEMORY[0x24BDDAD20])
    {
      (*((void (**)(char *, uint64_t))v35 + 12))(v19, v16);
      v38 = v19[8];
      v52 = *(_QWORD *)v19;
      v53 = v38;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2580);
      sub_2360D0C5C();
    }
    else
    {
      if (v37 != *MEMORY[0x24BDDAD18])
      {
        result = sub_2360D0EA8();
        __break(1u);
        return result;
      }
      v35 = v46;
      (*((void (**)(char *, uint64_t))v46 + 12))(v19, v16);
      v39 = v45;
      v40 = v44;
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v44, v19, v7);
      sub_236077F30(&qword_2563A1098, (uint64_t (*)(uint64_t))MEMORY[0x24BDDAD00], MEMORY[0x24BDDAD10]);
      v41 = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v39 + 16))(v42, v40, v7);
      v52 = v41;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2580);
      sub_2360D0C50();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v7);
    }
    return (*((uint64_t (**)(char *, uint64_t))v35 + 1))(v36, v16);
  }
}

uint64_t sub_2360BABF4(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(uint64_t, unint64_t, void *);
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;

  v5 = *(void (**)(uint64_t, unint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a2;
  v7 = sub_2360D08FC();
  v9 = v8;

  v10 = a3;
  v5(v7, v9, a3);

  sub_236077AC4(v7, v9);
  return swift_release();
}

void sub_2360BAC84(void *a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, void *);
  void *v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;

  v2 = objc_msgSend((id)objc_opt_self(), sel_userInteractive);
  objc_msgSend(a1, sel_setServiceQuality_, v2);

  v3 = (void *)sub_2360D0BA8();
  v4 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v3);

  v5 = objc_msgSend((id)objc_opt_self(), sel_protocolForProtocol_, &unk_2563BB9D8);
  objc_msgSend(v4, sel_setServer_, v5);

  objc_msgSend(a1, sel_setInterface_, v4);
  v13 = sub_2360BAE50;
  v14 = 0;
  v6 = MEMORY[0x24BDAC760];
  v9 = MEMORY[0x24BDAC760];
  v10 = 1107296256;
  v11 = sub_236074850;
  v12 = &block_descriptor_8;
  v7 = _Block_copy(&v9);
  objc_msgSend(a1, sel_setInterruptionHandler_, v7);
  _Block_release(v7);
  v13 = sub_2360BAE64;
  v14 = 0;
  v9 = v6;
  v10 = 1107296256;
  v11 = sub_236074850;
  v12 = &block_descriptor_11_0;
  v8 = _Block_copy(&v9);
  objc_msgSend(a1, sel_setInvalidationHandler_, v8);
  _Block_release(v8);

}

uint64_t sub_2360BAE50(uint64_t a1)
{
  return sub_2360BAE78(a1, 0x80000002360DE590);
}

uint64_t sub_2360BAE64(uint64_t a1)
{
  return sub_2360BAE78(a1, 0x80000002360DE570);
}

uint64_t sub_2360BAE78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2598);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2360D3A20;
  *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v3 + 32) = 0xD000000000000016;
  *(_QWORD *)(v3 + 40) = a2;
  sub_2360D10A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2360BAEF0(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

uint64_t sub_2360BAF2C()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t result;
  _QWORD v6[6];

  v0 = (void *)sub_2360D0BA8();
  v1 = (void *)sub_2360D0BA8();
  v2 = objc_msgSend((id)objc_opt_self(), sel_endpointForSystemMachName_service_instance_, v0, v1, 0);

  if (!v2)
    return 0;
  v3 = objc_msgSend((id)objc_opt_self(), sel_connectionWithEndpoint_, v2);
  if (!v3)
  {
LABEL_5:

    return (uint64_t)v3;
  }
  v6[4] = sub_2360BAEEC;
  v6[5] = 0;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = sub_2360BAEF0;
  v6[3] = &block_descriptor_5;
  v4 = _Block_copy(v6);
  swift_release();
  objc_msgSend(v3, sel_configureConnection_, v4);
  _Block_release(v4);
  result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) == 0)
  {
    objc_msgSend(v3, sel_activate);
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

unint64_t sub_2360BB0B0()
{
  unint64_t result;

  result = qword_2563A2560;
  if (!qword_2563A2560)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2563A2560);
  }
  return result;
}

uint64_t sub_2360BB0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A30D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2360BB134(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A30D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2360BB174(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LaunchAngelXPCRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2360BB1B8(uint64_t a1)
{
  uint64_t v1;

  sub_2360BA21C(a1, *(void **)(v1 + 16));
}

unint64_t sub_2360BB1C8()
{
  unint64_t result;

  result = qword_2563A2578;
  if (!qword_2563A2578)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for LaunchAngelConnectionUtilities.Error, &type metadata for LaunchAngelConnectionUtilities.Error);
    atomic_store(result, (unint64_t *)&qword_2563A2578);
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelConnectionUtilities()
{
  return &type metadata for LaunchAngelConnectionUtilities;
}

uint64_t storeEnumTagSinglePayload for LaunchAngelConnectionUtilities.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2360BB268 + 4 * byte_2360D8F85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2360BB29C + 4 * byte_2360D8F80[v4]))();
}

uint64_t sub_2360BB29C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360BB2A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360BB2ACLL);
  return result;
}

uint64_t sub_2360BB2B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360BB2C0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2360BB2C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360BB2CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelConnectionUtilities.Error()
{
  return &type metadata for LaunchAngelConnectionUtilities.Error;
}

uint64_t sub_2360BB2E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2580);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2360BB34C(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563A2580) - 8) + 80);
  return sub_2360BA36C(a1, a2, a3, v3 + ((v7 + 16) & ~v7));
}

unint64_t sub_2360BB3A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2563A2590;
  if (!qword_2563A2590)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563A2588);
    result = MEMORY[0x23B7EBA68](MEMORY[0x24BDDAD30], v1);
    atomic_store(result, (unint64_t *)&qword_2563A2590);
  }
  return result;
}

uint64_t sub_2360BB3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A30D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

__n128 PerformActionRequest.init(request:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unsigned __int8 v2;
  __n128 result;

  v2 = a1[1].n128_u8[0];
  result = *a1;
  *a2 = *a1;
  a2[1].n128_u8[0] = v2;
  return result;
}

uint64_t PerformActionRequest.run()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)v1;
  *(_BYTE *)(v2 + 33) = *(_BYTE *)(v1 + 16);
  return swift_task_switch();
}

uint64_t sub_2360BB48C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  if (qword_2563A01E0 != -1)
    swift_once();
  v1 = *(_BYTE *)(v0 + 33);
  v2 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 24) = v2;
  *(_BYTE *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = v0 + 16;
  sub_2360781A0();
  v5 = (char *)&dword_2563A0728 + dword_2563A0728;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v3;
  *v3 = v0;
  v3[1] = sub_2360BB554;
  return ((uint64_t (*)(_QWORD, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v5)(*(_QWORD *)(v0 + 48), v0 + 40, sub_2360BBDFC, 0);
}

uint64_t sub_2360BB554()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  sub_2360781AC();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2360BB5CC()
{
  uint64_t v0;

  sub_2360781AC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2360BB604()
{
  _BYTE *v0;

  if (*v0)
    return 0x63694C77656E6572;
  else
    return 0xD000000000000014;
}

uint64_t sub_2360BB650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360BD814(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2360BB674()
{
  sub_2360BBEBC();
  return sub_2360D1148();
}

uint64_t sub_2360BB69C()
{
  sub_2360BBEBC();
  return sub_2360D1154();
}

uint64_t sub_2360BB6C4()
{
  sub_2360BBF44();
  return sub_2360D1148();
}

uint64_t sub_2360BB6EC()
{
  sub_2360BBF44();
  return sub_2360D1154();
}

uint64_t sub_2360BB714()
{
  sub_2360BBF00();
  return sub_2360D1148();
}

uint64_t sub_2360BB73C()
{
  sub_2360BBF00();
  return sub_2360D1154();
}

uint64_t PerformActionRequest.Request.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A25A8);
  v18 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A25B0);
  v17 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A25B8);
  v21 = *(_QWORD *)(v9 - 8);
  v22 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *v1;
  v16[1] = v1[1];
  v12 = *((_BYTE *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360BBEBC();
  sub_2360D113C();
  if ((v12 & 1) != 0)
  {
    v25 = 1;
    sub_2360BBF00();
    v13 = v22;
    sub_2360D0F98();
    v23 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1018);
    sub_23608DC48(&qword_2563A1020, MEMORY[0x24BEE4570], MEMORY[0x24BEE12A0]);
    v14 = v19;
    sub_2360D0FEC();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v14);
  }
  else
  {
    v24 = 0;
    sub_2360BBF44();
    v13 = v22;
    sub_2360D0F98();
    sub_2360D0FD4();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v6);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v11, v13);
}

uint64_t PerformActionRequest.Request.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  char *v27;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;

  v32 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A25D8);
  v4 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  v34 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v35 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A25E0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A25E8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_2360BBEBC();
  v15 = v37;
  sub_2360D1124();
  if (!v15)
  {
    v16 = v7;
    v17 = v6;
    v18 = v35;
    v37 = v11;
    v19 = sub_2360D0F80();
    if (*(_QWORD *)(v19 + 16) == 1)
    {
      v20 = *(_BYTE *)(v19 + 32);
      v31 = v19;
      if ((v20 & 1) != 0)
      {
        v40 = 1;
        sub_2360BBF00();
        sub_2360D0EFC();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1018);
        sub_23608DC48(&qword_2563A1030, MEMORY[0x24BEE4598], MEMORY[0x24BEE12D0]);
        v21 = v33;
        sub_2360D0F5C();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v21);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v10);
        v22 = 0;
        v23 = v38;
      }
      else
      {
        v39 = 0;
        sub_2360BBF44();
        v27 = v9;
        sub_2360D0EFC();
        v35 = (char *)v10;
        v23 = sub_2360D0F44();
        v22 = v29;
        (*(void (**)(char *, uint64_t))(v16 + 8))(v27, v17);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *))(v37 + 8))(v13, v35);
      }
      v30 = v32;
      *v32 = v23;
      v30[1] = v22;
      *((_BYTE *)v30 + 16) = v20;
    }
    else
    {
      v24 = sub_2360D0E78();
      swift_allocError();
      v26 = v25;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0270);
      *v26 = &type metadata for PerformActionRequest.Request;
      sub_2360D0F08();
      sub_2360D0E6C();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v10);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
}

uint64_t sub_2360BBDC0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PerformActionRequest.Request.init(from:)(a1, a2);
}

uint64_t sub_2360BBDD4(_QWORD *a1)
{
  return PerformActionRequest.Request.encode(to:)(a1);
}

uint64_t PerformActionRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return sub_2360781A0();
}

void sub_2360BBDFC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  _QWORD v10[6];

  v8 = (void *)sub_2360D08F0();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23607D2C4;
  v10[3] = &block_descriptor_14;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_performActionRequest_reply_, v8, v9);
  _Block_release(v9);

}

unint64_t sub_2360BBEBC()
{
  unint64_t result;

  result = qword_2563A25C0;
  if (!qword_2563A25C0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D9988, &type metadata for PerformActionRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A25C0);
  }
  return result;
}

unint64_t sub_2360BBF00()
{
  unint64_t result;

  result = qword_2563A25C8;
  if (!qword_2563A25C8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D9938, &type metadata for PerformActionRequest.Request.RenewLicensesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A25C8);
  }
  return result;
}

unint64_t sub_2360BBF44()
{
  unint64_t result;

  result = qword_2563A25D0;
  if (!qword_2563A25D0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D98E8, &type metadata for PerformActionRequest.Request.HandleSuccessfulAuthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A25D0);
  }
  return result;
}

unint64_t PerformActionRequest.stringValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;

  v1 = *v0;
  if ((v0[2] & 1) != 0)
  {
    sub_2360D0E48();
    swift_bridgeObjectRelease();
    v12 = 0xD000000000000014;
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      v11 = MEMORY[0x24BEE4AF8];
      sub_236096460(0, v2, 0);
      v3 = v1 + 32;
      do
      {
        v3 += 8;
        v4 = sub_2360D101C();
        v6 = v5;
        v8 = *(_QWORD *)(v11 + 16);
        v7 = *(_QWORD *)(v11 + 24);
        if (v8 >= v7 >> 1)
          sub_236096460(v7 > 1, v8 + 1, 1);
        *(_QWORD *)(v11 + 16) = v8 + 1;
        v9 = v11 + 16 * v8;
        *(_QWORD *)(v9 + 32) = v4;
        *(_QWORD *)(v9 + 40) = v6;
        --v2;
      }
      while (v2);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_25429DBB0);
    sub_2360A51F0();
    sub_2360D0B9C();
    swift_bridgeObjectRelease();
    sub_2360D0BE4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2360D0E48();
    swift_bridgeObjectRelease();
    v12 = 0xD00000000000001BLL;
    sub_2360D0BE4();
  }
  return v12;
}

uint64_t sub_2360BC160()
{
  sub_2360BCC6C();
  return sub_2360D1148();
}

uint64_t sub_2360BC188()
{
  sub_2360BCC6C();
  return sub_2360D1154();
}

uint64_t PerformActionRequest.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD v10[3];
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A25F0);
  v10[0] = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v6 = v1[1];
  v8 = *((_BYTE *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360BCC6C();
  sub_2360D113C();
  v10[1] = v7;
  v10[2] = v6;
  v11 = v8;
  sub_2360BCCB0();
  sub_2360D0FEC();
  return (*(uint64_t (**)(char *, uint64_t))(v10[0] + 8))(v5, v3);
}

uint64_t PerformActionRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  __int128 v11;
  char v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2608);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360BCC6C();
  sub_2360D1124();
  if (!v2)
  {
    sub_2360BCCF4();
    sub_2360D0F5C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v12;
    *(_OWORD *)a2 = v11;
    *(_BYTE *)(a2 + 16) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2360BC3E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PerformActionRequest.init(from:)(a1, a2);
}

uint64_t sub_2360BC3FC(_QWORD *a1)
{
  return PerformActionRequest.encode(to:)(a1);
}

uint64_t static PerformActionResponse.Response.== infix(_:_:)()
{
  return 1;
}

uint64_t PerformActionResponse.Response.hash(into:)()
{
  return sub_2360D10C4();
}

uint64_t sub_2360BC43C()
{
  sub_2360BCD38();
  return sub_2360D1148();
}

uint64_t sub_2360BC464()
{
  sub_2360BCD38();
  return sub_2360D1154();
}

uint64_t sub_2360BC48C()
{
  sub_2360BCD7C();
  return sub_2360D1148();
}

uint64_t sub_2360BC4B4()
{
  sub_2360BCD7C();
  return sub_2360D1154();
}

uint64_t PerformActionResponse.Response.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2618);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2620);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360BCD38();
  sub_2360D113C();
  sub_2360BCD7C();
  sub_2360D0F98();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t PerformActionResponse.Response.hashValue.getter()
{
  sub_2360D10B8();
  sub_2360D10C4();
  return sub_2360D10F4();
}

uint64_t PerformActionResponse.Response.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2638);
  v2 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2640);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360BCD38();
  v8 = v23;
  sub_2360D1124();
  if (v8)
    goto LABEL_7;
  v20 = a1;
  v23 = v5;
  v10 = v21;
  v9 = v22;
  if (*(_QWORD *)(sub_2360D0F80() + 16) != 1)
  {
    v14 = sub_2360D0E78();
    swift_allocError();
    v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0270);
    *v16 = &type metadata for PerformActionResponse.Response;
    sub_2360D0F08();
    sub_2360D0E6C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x24BEE26D0], v14);
    swift_willThrow();
    v17 = v23;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v9);
    a1 = v20;
LABEL_7:
    v13 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v13);
  }
  sub_2360BCD7C();
  v11 = v4;
  sub_2360D0EFC();
  v12 = v23;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
  v13 = (uint64_t)v20;
  return __swift_destroy_boxed_opaque_existential_1(v13);
}

uint64_t sub_2360BC8B4(_QWORD *a1)
{
  return PerformActionResponse.Response.init(from:)(a1);
}

uint64_t sub_2360BC8C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2618);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2620);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360BCD38();
  sub_2360D113C();
  sub_2360BCD7C();
  sub_2360D0F98();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2360BCA0C()
{
  sub_2360BCDC0();
  return sub_2360D1148();
}

uint64_t sub_2360BCA34()
{
  sub_2360BCDC0();
  return sub_2360D1154();
}

uint64_t PerformActionResponse.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2648);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360BCDC0();
  sub_2360D113C();
  sub_2360BCE04();
  sub_2360D0FEC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t PerformActionResponse.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2660);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360BCDC0();
  sub_2360D1124();
  if (!v1)
  {
    sub_2360BCE48();
    sub_2360D0F5C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2360BCC44(_QWORD *a1)
{
  return PerformActionResponse.init(from:)(a1);
}

uint64_t sub_2360BCC58(_QWORD *a1)
{
  return PerformActionResponse.encode(to:)(a1);
}

unint64_t sub_2360BCC6C()
{
  unint64_t result;

  result = qword_2563A25F8;
  if (!qword_2563A25F8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D9898, &type metadata for PerformActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A25F8);
  }
  return result;
}

unint64_t sub_2360BCCB0()
{
  unint64_t result;

  result = qword_2563A2600;
  if (!qword_2563A2600)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for PerformActionRequest.Request, &type metadata for PerformActionRequest.Request);
    atomic_store(result, (unint64_t *)&qword_2563A2600);
  }
  return result;
}

unint64_t sub_2360BCCF4()
{
  unint64_t result;

  result = qword_2563A2610;
  if (!qword_2563A2610)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for PerformActionRequest.Request, &type metadata for PerformActionRequest.Request);
    atomic_store(result, (unint64_t *)&qword_2563A2610);
  }
  return result;
}

unint64_t sub_2360BCD38()
{
  unint64_t result;

  result = qword_2563A2628;
  if (!qword_2563A2628)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D9848, &type metadata for PerformActionResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2628);
  }
  return result;
}

unint64_t sub_2360BCD7C()
{
  unint64_t result;

  result = qword_2563A2630;
  if (!qword_2563A2630)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D97F8, &type metadata for PerformActionResponse.Response.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2630);
  }
  return result;
}

unint64_t sub_2360BCDC0()
{
  unint64_t result;

  result = qword_2563A2650;
  if (!qword_2563A2650)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D97A8, &type metadata for PerformActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2650);
  }
  return result;
}

unint64_t sub_2360BCE04()
{
  unint64_t result;

  result = qword_2563A2658;
  if (!qword_2563A2658)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for PerformActionResponse.Response, &type metadata for PerformActionResponse.Response);
    atomic_store(result, (unint64_t *)&qword_2563A2658);
  }
  return result;
}

unint64_t sub_2360BCE48()
{
  unint64_t result;

  result = qword_2563A2668;
  if (!qword_2563A2668)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for PerformActionResponse.Response, &type metadata for PerformActionResponse.Response);
    atomic_store(result, (unint64_t *)&qword_2563A2668);
  }
  return result;
}

unint64_t sub_2360BCE90()
{
  unint64_t result;

  result = qword_2563A2670;
  if (!qword_2563A2670)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for PerformActionResponse.Response, &type metadata for PerformActionResponse.Response);
    atomic_store(result, (unint64_t *)&qword_2563A2670);
  }
  return result;
}

ValueMetadata *type metadata accessor for PerformActionRequest()
{
  return &type metadata for PerformActionRequest;
}

uint64_t destroy for PerformActionRequest.Request()
{
  return sub_2360781AC();
}

uint64_t _s15AppDistribution20PerformActionRequestVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_2360781A0();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s15AppDistribution20PerformActionRequestVwca_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_2360781A0();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_2360781AC();
  return a1;
}

uint64_t _s15AppDistribution20PerformActionRequestVwta_0(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_2360781AC();
  return a1;
}

uint64_t _s15AppDistribution20PerformActionRequestVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s15AppDistribution20PerformActionRequestVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2360BD074(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_2360BD07C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PerformActionRequest.Request()
{
  return &type metadata for PerformActionRequest.Request;
}

ValueMetadata *type metadata accessor for PerformActionResponse()
{
  return &type metadata for PerformActionResponse;
}

ValueMetadata *type metadata accessor for PerformActionResponse.Response()
{
  return &type metadata for PerformActionResponse.Response;
}

ValueMetadata *type metadata accessor for PerformActionResponse.CodingKeys()
{
  return &type metadata for PerformActionResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for PerformActionResponse.Response.CodingKeys()
{
  return &type metadata for PerformActionResponse.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for PerformActionResponse.Response.IgnoredCodingKeys()
{
  return &type metadata for PerformActionResponse.Response.IgnoredCodingKeys;
}

ValueMetadata *type metadata accessor for PerformActionRequest.CodingKeys()
{
  return &type metadata for PerformActionRequest.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PerformActionRequest.Request.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2360BD148 + 4 * byte_2360D9085[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2360BD17C + 4 * byte_2360D9080[v4]))();
}

uint64_t sub_2360BD17C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360BD184(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360BD18CLL);
  return result;
}

uint64_t sub_2360BD198(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360BD1A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2360BD1A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360BD1AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PerformActionRequest.Request.CodingKeys()
{
  return &type metadata for PerformActionRequest.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for PerformActionRequest.Request.HandleSuccessfulAuthCodingKeys()
{
  return &type metadata for PerformActionRequest.Request.HandleSuccessfulAuthCodingKeys;
}

uint64_t _s15AppDistribution21PerformActionResponseV8ResponseOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2360BD218 + 4 * byte_2360D908A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2360BD238 + 4 * byte_2360D908F[v4]))();
}

_BYTE *sub_2360BD218(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2360BD238(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2360BD240(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2360BD248(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2360BD250(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2360BD258(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PerformActionRequest.Request.RenewLicensesCodingKeys()
{
  return &type metadata for PerformActionRequest.Request.RenewLicensesCodingKeys;
}

unint64_t sub_2360BD278()
{
  unint64_t result;

  result = qword_2563A2678;
  if (!qword_2563A2678)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D9398, &type metadata for PerformActionRequest.Request.RenewLicensesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2678);
  }
  return result;
}

unint64_t sub_2360BD2C0()
{
  unint64_t result;

  result = qword_2563A2680;
  if (!qword_2563A2680)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D9450, &type metadata for PerformActionRequest.Request.HandleSuccessfulAuthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2680);
  }
  return result;
}

unint64_t sub_2360BD308()
{
  unint64_t result;

  result = qword_2563A2688;
  if (!qword_2563A2688)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D9508, &type metadata for PerformActionRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2688);
  }
  return result;
}

unint64_t sub_2360BD350()
{
  unint64_t result;

  result = qword_2563A2690;
  if (!qword_2563A2690)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D95C0, &type metadata for PerformActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2690);
  }
  return result;
}

unint64_t sub_2360BD398()
{
  unint64_t result;

  result = qword_2563A2698;
  if (!qword_2563A2698)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D96C8, &type metadata for PerformActionResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2698);
  }
  return result;
}

unint64_t sub_2360BD3E0()
{
  unint64_t result;

  result = qword_2563A26A0;
  if (!qword_2563A26A0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D9780, &type metadata for PerformActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A26A0);
  }
  return result;
}

unint64_t sub_2360BD428()
{
  unint64_t result;

  result = qword_2563A26A8;
  if (!qword_2563A26A8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D96F0, &type metadata for PerformActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A26A8);
  }
  return result;
}

unint64_t sub_2360BD470()
{
  unint64_t result;

  result = qword_2563A26B0;
  if (!qword_2563A26B0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D9718, &type metadata for PerformActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A26B0);
  }
  return result;
}

unint64_t sub_2360BD4B8()
{
  unint64_t result;

  result = qword_2563A26B8;
  if (!qword_2563A26B8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D95E8, &type metadata for PerformActionResponse.Response.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A26B8);
  }
  return result;
}

unint64_t sub_2360BD500()
{
  unint64_t result;

  result = qword_2563A26C0;
  if (!qword_2563A26C0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D9610, &type metadata for PerformActionResponse.Response.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A26C0);
  }
  return result;
}

unint64_t sub_2360BD548()
{
  unint64_t result;

  result = qword_2563A26C8;
  if (!qword_2563A26C8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D9638, &type metadata for PerformActionResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A26C8);
  }
  return result;
}

unint64_t sub_2360BD590()
{
  unint64_t result;

  result = qword_2563A26D0;
  if (!qword_2563A26D0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D9660, &type metadata for PerformActionResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A26D0);
  }
  return result;
}

unint64_t sub_2360BD5D8()
{
  unint64_t result;

  result = qword_2563A26D8;
  if (!qword_2563A26D8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D9530, &type metadata for PerformActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A26D8);
  }
  return result;
}

unint64_t sub_2360BD620()
{
  unint64_t result;

  result = qword_2563A26E0;
  if (!qword_2563A26E0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D9558, &type metadata for PerformActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A26E0);
  }
  return result;
}

unint64_t sub_2360BD668()
{
  unint64_t result;

  result = qword_2563A26E8;
  if (!qword_2563A26E8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D93C0, &type metadata for PerformActionRequest.Request.HandleSuccessfulAuthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A26E8);
  }
  return result;
}

unint64_t sub_2360BD6B0()
{
  unint64_t result;

  result = qword_2563A26F0;
  if (!qword_2563A26F0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D93E8, &type metadata for PerformActionRequest.Request.HandleSuccessfulAuthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A26F0);
  }
  return result;
}

unint64_t sub_2360BD6F8()
{
  unint64_t result;

  result = qword_2563A26F8;
  if (!qword_2563A26F8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D9308, &type metadata for PerformActionRequest.Request.RenewLicensesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A26F8);
  }
  return result;
}

unint64_t sub_2360BD740()
{
  unint64_t result;

  result = qword_2563A2700;
  if (!qword_2563A2700)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D9330, &type metadata for PerformActionRequest.Request.RenewLicensesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2700);
  }
  return result;
}

unint64_t sub_2360BD788()
{
  unint64_t result;

  result = qword_2563A2708;
  if (!qword_2563A2708)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D9478, &type metadata for PerformActionRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2708);
  }
  return result;
}

unint64_t sub_2360BD7D0()
{
  unint64_t result;

  result = qword_2563A2710;
  if (!qword_2563A2710)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360D94A0, &type metadata for PerformActionRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2710);
  }
  return result;
}

uint64_t sub_2360BD814(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000002360DE5D0 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x63694C77656E6572 && a2 == 0xED00007365736E65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

ValueMetadata *type metadata accessor for MarketplaceSceneConnectionOptionDefinition()
{
  return &type metadata for MarketplaceSceneConnectionOptionDefinition;
}

__n128 FetchPrivateDataRequest.init(request:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  __int128 v3;
  __n128 result;

  v2 = *(_BYTE *)(a1 + 48);
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v3;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a2 + 32) = result;
  *(_BYTE *)(a2 + 48) = v2;
  return result;
}

uint64_t FetchPrivateDataRequest.run()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  *(_QWORD *)(v2 + 80) = a1;
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 88) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 104) = v3;
  *(_OWORD *)(v2 + 120) = *(_OWORD *)(v1 + 32);
  *(_BYTE *)(v2 + 65) = *(_BYTE *)(v1 + 48);
  return swift_task_switch();
}

uint64_t sub_2360BD988()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v10;

  if (qword_2563A01E0 != -1)
    swift_once();
  v1 = *(_BYTE *)(v0 + 65);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 16) = v6;
  *(_QWORD *)(v0 + 24) = v7;
  *(_QWORD *)(v0 + 32) = v4;
  *(_QWORD *)(v0 + 40) = v5;
  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)(v0 + 56) = v3;
  *(_BYTE *)(v0 + 64) = v1;
  *(_QWORD *)(v0 + 72) = v0 + 16;
  sub_236078628(v6, v7, v4, v5, v2, v3, v1);
  v10 = (char *)&dword_2563A07C0 + dword_2563A07C0;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v8;
  *v8 = v0;
  v8[1] = sub_2360BDA60;
  return ((uint64_t (*)(_QWORD, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v10)(*(_QWORD *)(v0 + 80), v0 + 72, sub_2360BFEF0, 0);
}

uint64_t sub_2360BDA60()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 144) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  sub_23607867C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2360BDAE0()
{
  uint64_t v0;

  sub_23607867C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t FetchPrivateDataRequest.runSynchronously()@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t *v18;

  v3 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 40);
  v9 = *(_BYTE *)(v1 + 48);
  if (qword_2563A01E0 != -1)
    swift_once();
  v11 = v3;
  v12 = v4;
  v13 = v5;
  v14 = v6;
  v15 = v7;
  v16 = v8;
  v17 = v9;
  v18 = &v11;
  sub_236078628(v3, v4, v5, v6, v7, v8, v9);
  sub_23608C860(&v18, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_2360BFF04, 0, a1);
  return sub_23607867C(v11, v12, v13, v14, v15, v16, v17);
}

uint64_t SetPrivateDataRequest.run()()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 96) = v2;
  *(_OWORD *)(v1 + 112) = *(_OWORD *)(v0 + 32);
  *(_BYTE *)(v1 + 65) = *(_BYTE *)(v0 + 48);
  return swift_task_switch();
}

uint64_t sub_2360BDC44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  if (qword_2563A01E0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v7 = *(_BYTE *)(v0 + 65);
  sub_236078498(v6, v5, v4, v3, v2, v1, v7);
  sub_236078410();
  sub_236078454();
  *(_QWORD *)(v0 + 16) = v6;
  *(_QWORD *)(v0 + 24) = v5;
  *(_QWORD *)(v0 + 32) = v4;
  *(_QWORD *)(v0 + 40) = v3;
  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)(v0 + 56) = v1;
  *(_BYTE *)(v0 + 64) = v7;
  *(_QWORD *)(v0 + 72) = v0 + 16;
  sub_236078498(v6, v5, v4, v3, v2, v1, v7);
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2563A07A8 + dword_2563A07A8);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v8;
  *v8 = v0;
  v8[1] = sub_2360BDD74;
  return v10(v0 + 72, (uint64_t)sub_2360C3DB8, 0);
}

uint64_t sub_2360BDD74()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_236078500(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_2360BDDEC()
{
  uint64_t v0;

  sub_236078500(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_BYTE *)(v0 + 65));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2360BDE2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v7 = *(_BYTE *)(v0 + 65);
  sub_236078500(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  sub_236078500(v6, v5, v4, v3, v1, v2, v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SetPrivateDataRequest.runSynchronously()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t *v15;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_BYTE *)(v0 + 48);
  if (qword_2563A01E0 != -1)
    swift_once();
  sub_236078410();
  sub_236078454();
  v8 = v1;
  v9 = v2;
  v10 = v3;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  v14 = v7;
  v15 = &v8;
  sub_236078498(v1, v2, v3, v4, v5, v6, v7);
  sub_236078498(v1, v2, v3, v4, v5, v6, v7);
  sub_23608CCF4(&v15, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_2360C3DCC, 0);
  sub_236078500(v8, v9, v10, v11, v12, v13, v14);
  sub_236078500(v1, v2, v3, v4, v5, v6, v7);
}

uint64_t FetchPublicDataRequest.run()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_2360BE008()
{
  uint64_t v0;
  _QWORD *v1;
  char *v3;

  if (qword_2563A01E0 != -1)
    swift_once();
  v3 = (char *)&dword_2563A06F0 + dword_2563A06F0;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_2360BE0B0;
  return ((uint64_t (*)(_QWORD, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v3)(*(_QWORD *)(v0 + 24), v0 + 16, sub_2360C2594, 0);
}

uint64_t sub_2360BE0B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2360BE11C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SetPublicDataRequest.init(request:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_236078854(a1, a2, type metadata accessor for SetPublicDataRequest.Request);
}

uint64_t SetPublicDataRequest.run()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[3] = v0;
  type metadata accessor for SetPublicDataRequest(0);
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2360BE1B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  if (qword_2563A01E0 != -1)
    swift_once();
  v1 = v0[4];
  v2 = v0[5];
  sub_236077F70(v0[3], v2, type metadata accessor for SetPublicDataRequest);
  sub_236077F30(&qword_2563A06E0, type metadata accessor for SetPublicDataRequest, (uint64_t)&protocol conformance descriptor for SetPublicDataRequest);
  sub_236077F30(&qword_2563A06E8, type metadata accessor for SetPublicDataRequest, (uint64_t)&protocol conformance descriptor for SetPublicDataRequest);
  sub_236077F70(v2, v1, type metadata accessor for SetPublicDataRequest);
  v0[2] = v1;
  v5 = (char *)&dword_2563A06D8 + dword_2563A06D8;
  v3 = (_QWORD *)swift_task_alloc();
  v0[6] = v3;
  *v3 = v0;
  v3[1] = sub_2360BE2B8;
  return ((uint64_t (*)(_QWORD *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v5)(v0 + 2, sub_2360C5AD0, 0);
}

uint64_t sub_2360BE2B8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_236078270(*(_QWORD *)(v2 + 32), type metadata accessor for SetPublicDataRequest);
  return swift_task_switch();
}

uint64_t sub_2360BE32C()
{
  uint64_t v0;

  sub_236078270(*(_QWORD *)(v0 + 40), type metadata accessor for SetPublicDataRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2360BE37C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_236078270(*(_QWORD *)(v0 + 32), type metadata accessor for SetPublicDataRequest);
  sub_236078270(v1, type metadata accessor for SetPublicDataRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2360BE3E4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2360BE424
                                                                     + 4 * asc_2360D9A10[a1]))(0xD000000000000015, 0x80000002360DE6B0);
}

uint64_t sub_2360BE424()
{
  uint64_t v0;

  return v0 + 1;
}

uint64_t sub_2360BE4C8()
{
  sub_2360C5D8C();
  return sub_2360D1148();
}

uint64_t sub_2360BE4F0()
{
  sub_2360C5D8C();
  return sub_2360D1154();
}

uint64_t sub_2360BE518()
{
  sub_2360C5D48();
  return sub_2360D1148();
}

uint64_t sub_2360BE540()
{
  sub_2360C5D48();
  return sub_2360D1154();
}

uint64_t sub_2360BE568()
{
  return 0x65706F6C65766564;
}

uint64_t sub_2360BE588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65706F6C65766564 && a2 == 0xEB00000000444972)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2360D1028();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2360BE634()
{
  sub_2360C5D04();
  return sub_2360D1148();
}

uint64_t sub_2360BE65C()
{
  sub_2360C5D04();
  return sub_2360D1154();
}

uint64_t sub_2360BE684()
{
  unsigned __int8 *v0;

  return sub_2360BE3E4(*v0);
}

uint64_t sub_2360BE68C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360CB228(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2360BE6B0()
{
  sub_2360C5AE4();
  return sub_2360D1148();
}

uint64_t sub_2360BE6D8()
{
  sub_2360C5AE4();
  return sub_2360D1154();
}

uint64_t sub_2360BE700()
{
  sub_2360C5CC0();
  return sub_2360D1148();
}

uint64_t sub_2360BE728()
{
  sub_2360C5CC0();
  return sub_2360D1154();
}

uint64_t sub_2360BE750()
{
  sub_2360C5B28();
  return sub_2360D1148();
}

uint64_t sub_2360BE778()
{
  sub_2360C5B28();
  return sub_2360D1154();
}

uint64_t sub_2360BE7A0()
{
  sub_2360C5C38();
  return sub_2360D1148();
}

uint64_t sub_2360BE7C8()
{
  sub_2360C5C38();
  return sub_2360D1154();
}

uint64_t sub_2360BE7F0()
{
  sub_2360C5B6C();
  return sub_2360D1148();
}

uint64_t sub_2360BE818()
{
  sub_2360C5B6C();
  return sub_2360D1154();
}

uint64_t sub_2360BE840()
{
  sub_2360C5BB0();
  return sub_2360D1148();
}

uint64_t sub_2360BE868()
{
  sub_2360C5BB0();
  return sub_2360D1154();
}

uint64_t sub_2360BE890()
{
  sub_2360C5BF4();
  return sub_2360D1148();
}

uint64_t sub_2360BE8B8()
{
  sub_2360C5BF4();
  return sub_2360D1154();
}

void FetchPrivateDataRequest.Request.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  _QWORD v18[3];
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2738);
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v40 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429DDF8);
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v34 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429DDB8);
  v21 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v20 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429DDD0);
  v32 = *(_QWORD *)(v7 - 8);
  v33 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v31 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429DDE0);
  v38 = *(_QWORD *)(v9 - 8);
  v39 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v36 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429DDF0);
  v18[2] = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v18[1] = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429DDC8);
  v29 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v28 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429DDD8);
  v26 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v25 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429DDE8);
  v23 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429DDC0);
  v45 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v46 = *v1;
  v14 = v1[1];
  v43 = v1[4];
  v44 = v14;
  v15 = v1[5];
  v16 = *((unsigned __int8 *)v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360C5AE4();
  sub_2360D113C();
  v48 = v16;
  if (v16)
    v17 = 4;
  else
    v17 = 0;
  __asm { BR              X10 }
}

uint64_t sub_2360BEC60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v1 - 120) = 1;
  sub_2360C5D48();
  v2 = *(_QWORD *)(v1 - 312);
  v3 = *(_QWORD *)(v1 - 128);
  sub_2360D0F98();
  v4 = *(_QWORD *)(v1 - 296);
  sub_2360D0FD4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 304) + 8))(v2, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 152) + 8))(v0, v3);
}

void sub_2360BEFC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(v5 - 168);
  v7 = v4 | *(_QWORD *)(v5 - 160);
  v8 = *(_QWORD *)(v5 - 136);
  if (v7 | v8 | v0 | v6 || v2 != 0x2000000000000000)
  {
    if (v2 == 0x2000000000000000 && v8 == 1 && !(v7 | v0 | v6))
    {
      *(_BYTE *)(v5 - 120) = 3;
      sub_2360C5CC0();
      v10 = *(_QWORD *)(v5 - 376);
      v9 = *(_QWORD *)(v5 - 128);
      sub_2360D0F98();
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 368) + 8))(v10, *(_QWORD *)(v5 - 360));
    }
    else
    {
      *(_BYTE *)(v5 - 120) = 6;
      sub_2360C5BB0();
      v11 = *(_QWORD *)(v5 - 352);
      v9 = *(_QWORD *)(v5 - 128);
      sub_2360D0F98();
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 344) + 8))(v11, *(_QWORD *)(v5 - 336));
    }
  }
  else
  {
    *(_BYTE *)(v5 - 120) = 0;
    sub_2360C5D8C();
    v9 = *(_QWORD *)(v5 - 128);
    sub_2360D0F98();
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 328) + 8))(v1, *(_QWORD *)(v5 - 320));
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 152) + 8))(v3, v9);
  JUMPOUT(0x2360BEFA4);
}

uint64_t FetchPrivateDataRequest.Request.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD v28[8];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  __int128 v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;

  v45 = a2;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2780);
  v41 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  *(_QWORD *)&v51 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2788);
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v50 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2790);
  v34 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v43 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2798);
  v35 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v44 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A27A0);
  v37 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v48 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A27A8);
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v42 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A27B0);
  v31 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v47 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A27B8);
  v28[7] = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A27C0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A27C8);
  v16 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v18 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  v53 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_2360C5AE4();
  v20 = v54;
  sub_2360D1124();
  if (!v20)
  {
    v28[3] = v15;
    v28[1] = v13;
    v28[2] = v12;
    v28[4] = v11;
    v28[6] = 0;
    v54 = v16;
    v21 = v18;
    v22 = sub_2360D0F80();
    if (*(_QWORD *)(v22 + 16) == 1)
    {
      v28[5] = v18;
      __asm { BR              X10 }
    }
    v23 = sub_2360D0E78();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0270);
    *v25 = &type metadata for FetchPrivateDataRequest.Request;
    v26 = v52;
    sub_2360D0F08();
    sub_2360D0E6C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v21, v26);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
}

void sub_2360BFA88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v1 - 120) = 8;
  sub_2360C5B28();
  v2 = *(_QWORD *)(v1 - 160);
  v3 = *(_QWORD *)(v1 - 368);
  sub_2360D0EFC();
  if (!v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A1508);
    sub_2360C61CC(&qword_2563A1528, &qword_2563A1508, (uint64_t (*)(void))sub_236095FA4, MEMORY[0x24BEE12D0]);
    v4 = *(_QWORD *)(v1 - 264);
    sub_2360D0F5C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 256) + 8))(v0, v4);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 144) + 8))(*(_QWORD *)(v1 - 376), v2);
    JUMPOUT(0x2360BFE3CLL);
  }
  JUMPOUT(0x2360BF69CLL);
}

uint64_t sub_2360BFEA4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FetchPrivateDataRequest.Request.init(from:)(a1, a2);
}

void sub_2360BFEB8(_QWORD *a1)
{
  FetchPrivateDataRequest.Request.encode(to:)(a1);
}

uint64_t FetchPrivateDataRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v8;
  return sub_236078628(v2, v3, v4, v5, v6, v7, v8);
}

void sub_2360BFEF0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_236079824(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_23_0, (SEL *)&selRef_fetchPrivateDataRequest_reply_);
}

void sub_2360BFF04(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_236079824(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_20_0, (SEL *)&selRef_fetchPrivateDataRequest_reply_);
}

uint64_t sub_2360BFF1C()
{
  sub_2360C5E14();
  return sub_2360D1148();
}

uint64_t sub_2360BFF44()
{
  sub_2360C5E14();
  return sub_2360D1154();
}

uint64_t FetchPrivateDataRequest.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25429DE00);
  v13 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v11 = v1[1];
  v12 = v6;
  v8 = *((_QWORD *)v1 + 4);
  v7 = *((_QWORD *)v1 + 5);
  v9 = *((_BYTE *)v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360C5E14();
  sub_2360D113C();
  v14 = v12;
  v15 = v11;
  v16 = v8;
  v17 = v7;
  v18 = v9;
  sub_2360C5E58();
  sub_2360D0FEC();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v5, v3);
}

uint64_t FetchPrivateDataRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[3];
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A27D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360C5E14();
  sub_2360D1124();
  if (!v2)
  {
    sub_2360C5E9C();
    sub_2360D0F5C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v14;
    v10 = v13[1];
    v11 = v13[2];
    *(_OWORD *)a2 = v13[0];
    *(_OWORD *)(a2 + 16) = v10;
    *(_OWORD *)(a2 + 32) = v11;
    *(_BYTE *)(a2 + 48) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2360C01C8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2360C0208 + 4 * byte_2360D9A3E[a1]))(0xD000000000000015, 0x80000002360DE6B0);
}

uint64_t sub_2360C0208()
{
  uint64_t v0;

  return v0 + 1;
}

uint64_t sub_2360C0280()
{
  return 0x6554686372616573;
}

uint64_t sub_2360C02C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FetchPrivateDataRequest.init(from:)(a1, a2);
}

uint64_t sub_2360C02D4(_QWORD *a1)
{
  return FetchPrivateDataRequest.encode(to:)(a1);
}

uint64_t sub_2360C02E8()
{
  sub_2360C6144();
  return sub_2360D1148();
}

uint64_t sub_2360C0310()
{
  sub_2360C6144();
  return sub_2360D1154();
}

uint64_t sub_2360C0338()
{
  sub_2360C6100();
  return sub_2360D1148();
}

uint64_t sub_2360C0360()
{
  sub_2360C6100();
  return sub_2360D1154();
}

uint64_t sub_2360C0388()
{
  sub_2360C60BC();
  return sub_2360D1148();
}

uint64_t sub_2360C03B0()
{
  sub_2360C60BC();
  return sub_2360D1154();
}

uint64_t sub_2360C03D8()
{
  unsigned __int8 *v0;

  return sub_2360C01C8(*v0);
}

uint64_t sub_2360C03E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360CB5A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2360C0404()
{
  sub_2360C5EE0();
  return sub_2360D1148();
}

uint64_t sub_2360C042C()
{
  sub_2360C5EE0();
  return sub_2360D1154();
}

uint64_t sub_2360C0454()
{
  sub_2360C6078();
  return sub_2360D1148();
}

uint64_t sub_2360C047C()
{
  sub_2360C6078();
  return sub_2360D1154();
}

uint64_t sub_2360C04A4()
{
  sub_2360C5F24();
  return sub_2360D1148();
}

uint64_t sub_2360C04CC()
{
  sub_2360C5F24();
  return sub_2360D1154();
}

uint64_t sub_2360C04F4()
{
  sub_2360C6034();
  return sub_2360D1148();
}

uint64_t sub_2360C051C()
{
  sub_2360C6034();
  return sub_2360D1154();
}

uint64_t sub_2360C0544()
{
  sub_2360C5F68();
  return sub_2360D1148();
}

uint64_t sub_2360C056C()
{
  sub_2360C5F68();
  return sub_2360D1154();
}

uint64_t sub_2360C0594()
{
  sub_2360C5FAC();
  return sub_2360D1148();
}

uint64_t sub_2360C05BC()
{
  sub_2360C5FAC();
  return sub_2360D1154();
}

uint64_t sub_2360C05E4()
{
  sub_2360C5FF0();
  return sub_2360D1148();
}

uint64_t sub_2360C060C()
{
  sub_2360C5FF0();
  return sub_2360D1154();
}

void FetchDataResponse.Response.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A27E8);
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v34 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A27F0);
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A27F8);
  v29 = *(_QWORD *)(v7 - 8);
  v30 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v28 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2800);
  v25 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v24 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2808);
  v23 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v22 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2810);
  v20 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v19 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2818);
  v17[3] = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v17[2] = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2820);
  v17[1] = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2828);
  v17[0] = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2830);
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v15 = *v1;
  v37 = v1[1];
  v38 = v15;
  v16 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360C5EE0();
  sub_2360D113C();
  __asm { BR              X9 }
}

uint64_t sub_2360C0970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 104) = 0;
  sub_2360C6144();
  v4 = *(_QWORD *)(v3 - 72);
  sub_2360D0F98();
  *(_QWORD *)(v3 - 104) = *(_QWORD *)(v3 - 128);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2870);
  sub_2360C61CC(&qword_2563A2878, &qword_2563A2870, (uint64_t (*)(void))sub_2360C6188, MEMORY[0x24BEE12A0]);
  sub_2360D0FEC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 320) + 8))(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 120) + 8))(v1, v4);
}

uint64_t FetchDataResponse.Response.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD v27[6];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;

  v53 = a2;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2888);
  v36 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v52 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429DD80);
  v35 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v51 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429DD68);
  v34 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v50 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429DD88);
  v33 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v49 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429DD98);
  v32 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v47 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429DDA8);
  v31 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v48 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429DD78);
  v30 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v46 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429DD90);
  v29 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v45 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429DDA0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429DD70);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  v54 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_2360C5EE0();
  v20 = v55;
  sub_2360D1124();
  if (!v20)
  {
    v27[4] = v14;
    v27[2] = v12;
    v27[3] = v11;
    v27[5] = 0;
    v28 = v16;
    v55 = v15;
    v21 = sub_2360D0F80();
    if (*(_QWORD *)(v21 + 16) == 1)
    {
      v27[1] = v18;
      v27[0] = v21;
      __asm { BR              X9 }
    }
    v22 = sub_2360D0E78();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0270);
    *v24 = &type metadata for FetchDataResponse.Response;
    v25 = v55;
    sub_2360D0F08();
    sub_2360D0E6C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v18, v25);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
}

void sub_2360C13C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v0 - 104) = 1;
  sub_2360C6100();
  v1 = *(_QWORD *)(v0 - 184);
  v2 = *(_QWORD *)(v0 - 72);
  v3 = *(_QWORD *)(v0 - 328);
  sub_2360D0EFC();
  if (!v3)
  {
    v4 = *(_QWORD *)(v0 - 248);
    sub_2360D0F50();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 312) + 8))(v1, v4);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 - 320) + 8))(*(_QWORD *)(v0 - 360), v2);
    JUMPOUT(0x2360C1BB4);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x2360C1390);
}

void sub_2360C17B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 - 144) = v0;
  *(_BYTE *)(v2 - 104) = 7;
  sub_2360C5F68();
  v3 = v1;
  v4 = *(_QWORD *)(v2 - 72);
  v5 = *(_QWORD *)(v2 - 328);
  sub_2360D0EFC();
  if (!v5)
  {
    v6 = *(_QWORD *)(v2 - 200);
    sub_2360D0F14();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 264) + 8))(v3, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v2 - 320) + 8))(*(_QWORD *)(v2 - 360), v4);
    JUMPOUT(0x2360C1BB0);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x2360C1A44);
}

void sub_2360C183C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 - 144) = v1;
  *(_BYTE *)(v2 - 104) = 8;
  sub_2360C5F24();
  v3 = *(_QWORD *)(v2 - 72);
  v4 = *(_QWORD *)(v2 - 328);
  sub_2360D0EFC();
  if (v4)
    JUMPOUT(0x2360C1888);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A11F8);
  sub_2360918B8(&qword_2563A1238, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
  v5 = *(_QWORD *)(v2 - 192);
  sub_2360D0F5C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 256) + 8))(v0, v5);
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v2 - 320) + 8))(*(_QWORD *)(v2 - 360), v3);
  JUMPOUT(0x2360C1BACLL);
}

uint64_t sub_2360C1BC0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FetchDataResponse.Response.init(from:)(a1, a2);
}

void sub_2360C1BD4(_QWORD *a1)
{
  FetchDataResponse.Response.encode(to:)(a1);
}

uint64_t FetchDataResponse.response.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23608DBC8(v2, v3, v4);
}

__n128 FetchDataResponse.init(response:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unsigned __int8 v2;
  __n128 result;

  v2 = a1[1].n128_u8[0];
  result = *a1;
  *a2 = *a1;
  a2[1].n128_u8[0] = v2;
  return result;
}

uint64_t sub_2360C1C10()
{
  sub_2360C6274();
  return sub_2360D1148();
}

uint64_t sub_2360C1C38()
{
  sub_2360C6274();
  return sub_2360D1154();
}

uint64_t FetchDataResponse.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD v10[3];
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A28A0);
  v10[0] = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v6 = v1[1];
  v8 = *((_BYTE *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360C6274();
  sub_2360D113C();
  v10[1] = v7;
  v10[2] = v6;
  v11 = v8;
  sub_2360C62B8();
  sub_2360D0FEC();
  return (*(uint64_t (**)(char *, uint64_t))(v10[0] + 8))(v5, v3);
}

uint64_t FetchDataResponse.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  __int128 v11;
  char v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25429DDB0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360C6274();
  sub_2360D1124();
  if (!v2)
  {
    sub_2360C62FC();
    sub_2360D0F5C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v12;
    *(_OWORD *)a2 = v11;
    *(_BYTE *)(a2 + 16) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2360C1E98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FetchDataResponse.init(from:)(a1, a2);
}

uint64_t sub_2360C1EAC(_QWORD *a1)
{
  return FetchDataResponse.encode(to:)(a1);
}

uint64_t static FetchPublicDataRequest.Request.== infix(_:_:)()
{
  return 1;
}

uint64_t FetchPublicDataRequest.Request.hash(into:)()
{
  return sub_2360D10C4();
}

uint64_t sub_2360C1EEC()
{
  return 0x6554686372616573;
}

uint64_t sub_2360C1F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6554686372616573 && a2 == 0xEF79726F74697272)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2360D1028();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2360C1FC8()
{
  sub_2360C6340();
  return sub_2360D1148();
}

uint64_t sub_2360C1FF0()
{
  sub_2360C6340();
  return sub_2360D1154();
}

uint64_t sub_2360C2018()
{
  sub_2360C6384();
  return sub_2360D1148();
}

uint64_t sub_2360C2040()
{
  sub_2360C6384();
  return sub_2360D1154();
}

uint64_t FetchPublicDataRequest.Request.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A28B0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A28B8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360C6340();
  sub_2360D113C();
  sub_2360C6384();
  sub_2360D0F98();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t FetchPublicDataRequest.Request.hashValue.getter()
{
  sub_2360D10B8();
  sub_2360D10C4();
  return sub_2360D10F4();
}

uint64_t FetchPublicDataRequest.Request.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A28D0);
  v2 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A28D8);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360C6340();
  v8 = v23;
  sub_2360D1124();
  if (v8)
    goto LABEL_7;
  v20 = a1;
  v23 = v5;
  v10 = v21;
  v9 = v22;
  if (*(_QWORD *)(sub_2360D0F80() + 16) != 1)
  {
    v14 = sub_2360D0E78();
    swift_allocError();
    v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0270);
    *v16 = &type metadata for FetchPublicDataRequest.Request;
    sub_2360D0F08();
    sub_2360D0E6C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x24BEE26D0], v14);
    swift_willThrow();
    v17 = v23;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v9);
    a1 = v20;
LABEL_7:
    v13 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v13);
  }
  sub_2360C6384();
  v11 = v4;
  sub_2360D0EFC();
  v12 = v23;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
  v13 = (uint64_t)v20;
  return __swift_destroy_boxed_opaque_existential_1(v13);
}

uint64_t sub_2360C2440(_QWORD *a1)
{
  return FetchPublicDataRequest.Request.init(from:)(a1);
}

uint64_t sub_2360C2454(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A28B0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A28B8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360C6340();
  sub_2360D113C();
  sub_2360C6384();
  sub_2360D0F98();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_2360C2594(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_236079824(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_11_1, (SEL *)&selRef_fetchPublicDataRequest_reply_);
}

uint64_t sub_2360C25A8()
{
  sub_2360C63C8();
  return sub_2360D1148();
}

uint64_t sub_2360C25D0()
{
  sub_2360C63C8();
  return sub_2360D1154();
}

uint64_t FetchPublicDataRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A28E0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360C63C8();
  sub_2360D113C();
  sub_2360C640C();
  sub_2360D0FEC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t FetchPublicDataRequest.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A28F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360C63C8();
  sub_2360D1124();
  if (!v1)
  {
    sub_2360C6450();
    sub_2360D0F5C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2360C27E0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2360C2818 + 4 * byte_2360D9A6C[a1]))(0xD000000000000010, 0x80000002360DE790);
}

uint64_t sub_2360C2818(uint64_t a1)
{
  return a1 + 7;
}

uint64_t sub_2360C285C(_QWORD *a1)
{
  return FetchPublicDataRequest.init(from:)(a1);
}

uint64_t sub_2360C2870(_QWORD *a1)
{
  return FetchPublicDataRequest.encode(to:)(a1);
}

uint64_t sub_2360C2884()
{
  sub_2360C65E8();
  return sub_2360D1148();
}

uint64_t sub_2360C28AC()
{
  sub_2360C65E8();
  return sub_2360D1154();
}

uint64_t sub_2360C28D4()
{
  unsigned __int8 *v0;

  return sub_2360C27E0(*v0);
}

uint64_t sub_2360C28DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360CB958(a1, a2);
  *a3 = result;
  return result;
}

void sub_2360C2900(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_2360C290C()
{
  sub_2360C6494();
  return sub_2360D1148();
}

uint64_t sub_2360C2934()
{
  sub_2360C6494();
  return sub_2360D1154();
}

uint64_t sub_2360C295C()
{
  sub_2360C65A4();
  return sub_2360D1148();
}

uint64_t sub_2360C2984()
{
  sub_2360C65A4();
  return sub_2360D1154();
}

uint64_t sub_2360C29AC()
{
  sub_2360C6560();
  return sub_2360D1148();
}

uint64_t sub_2360C29D4()
{
  sub_2360C6560();
  return sub_2360D1154();
}

uint64_t sub_2360C29FC()
{
  sub_2360C64D8();
  return sub_2360D1148();
}

uint64_t sub_2360C2A24()
{
  sub_2360C64D8();
  return sub_2360D1154();
}

uint64_t sub_2360C2A4C()
{
  sub_2360C651C();
  return sub_2360D1148();
}

uint64_t sub_2360C2A74()
{
  sub_2360C651C();
  return sub_2360D1154();
}

void SetPrivateDataRequest.Request.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[22];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2908);
  v15[13] = *(_QWORD *)(v3 - 8);
  v15[14] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v15[12] = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2910);
  v15[10] = *(_QWORD *)(v5 - 8);
  v15[11] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v15[9] = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2918);
  v15[7] = *(_QWORD *)(v7 - 8);
  v15[8] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v15[6] = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2920);
  v15[3] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2928);
  v15[4] = *(_QWORD *)(v10 - 8);
  v15[5] = v10;
  MEMORY[0x24BDAC7A8](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2930);
  v15[19] = *(_QWORD *)(v11 - 8);
  v15[20] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v12 = *v1;
  v15[16] = v1[1];
  v15[17] = v12;
  v15[15] = v1[2];
  v13 = v1[3];
  v15[1] = v1[4];
  v15[2] = v13;
  v15[0] = v1[5];
  v14 = *((unsigned __int8 *)v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360C6494();
  sub_2360D113C();
  __asm { BR              X9 }
}

uint64_t sub_2360C2CBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 - 72) = 0;
  sub_2360C65E8();
  v3 = *(_QWORD *)(v2 - 96);
  sub_2360D0F98();
  *(_BYTE *)(v2 - 72) = 0;
  v4 = *(_QWORD *)(v2 - 216);
  v5 = *(_QWORD *)(v2 - 112);
  sub_2360D0FD4();
  if (!v5)
  {
    *(_BYTE *)(v2 - 72) = 1;
    sub_2360D0FD4();
    *(_BYTE *)(v2 - 72) = 2;
    sub_2360D0FA4();
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 224) + 8))(v1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v3);
}

uint64_t SetPrivateDataRequest.Request.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  char *v23;
  _QWORD v25[7];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;

  v39 = a2;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2968);
  v29 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v37 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2970);
  v30 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2978);
  v28 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2980);
  v27 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2988);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2990);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_2360C6494();
  v16 = v41;
  sub_2360D1124();
  if (!v16)
  {
    v25[5] = v7;
    v25[6] = v10;
    v25[4] = v8;
    v26 = v12;
    v41 = v14;
    v17 = sub_2360D0F80();
    v18 = v11;
    if (*(_QWORD *)(v17 + 16) == 1)
    {
      v25[3] = v17;
      v19 = (char *)&loc_2360C32B0 + 4 * byte_2360D9A76[*(unsigned __int8 *)(v17 + 32)];
      v25[2] = *(unsigned __int8 *)(v17 + 32);
      __asm { BR              X9 }
    }
    v20 = sub_2360D0E78();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0270);
    *v22 = &type metadata for SetPrivateDataRequest.Request;
    v23 = v41;
    sub_2360D0F08();
    sub_2360D0E6C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
}

void sub_2360C33EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 72) = 1;
  sub_2360C65A4();
  v4 = *(_QWORD *)(v3 - 152);
  sub_2360D0EFC();
  if (v2)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x2360C33BCLL);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25429DBB0);
  sub_23607A564(&qword_25429DBD8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  v5 = *(_QWORD *)(v3 - 176);
  sub_2360D0F5C();
  *(_QWORD *)(v3 - 264) = 0;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 208) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v3 - 216) + 8))(*(_QWORD *)(v3 - 96), v0);
  *(_QWORD *)v1 = *(_QWORD *)(v3 - 72);
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  *(_BYTE *)(v1 + 48) = *(_QWORD *)(v3 - 256);
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v3 - 104));
  JUMPOUT(0x2360C33C8);
}

void sub_2360C344C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v2 - 72) = 2;
  sub_2360C6560();
  v3 = *(_QWORD *)(v2 - 144);
  sub_2360D0EFC();
  if (!v1)
  {
    *(_BYTE *)(v2 - 72) = 0;
    v4 = *(_QWORD *)(v2 - 168);
    v5 = sub_2360D0F44();
    v6 = *(_QWORD *)(v2 - 216);
    *(_QWORD *)(v2 - 152) = v5;
    *(_BYTE *)(v2 - 72) = 1;
    sub_2360D0F50();
    v7 = *(_QWORD *)(v2 - 200);
    *(_QWORD *)(v2 - 264) = 0;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v4);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t))(v6 + 8))(*(_QWORD *)(v2 - 96), v0);
    JUMPOUT(0x2360C398CLL);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x2360C33BCLL);
}

uint64_t sub_2360C39F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SetPrivateDataRequest.Request.init(from:)(a1, a2);
}

void sub_2360C3A08(_QWORD *a1)
{
  SetPrivateDataRequest.Request.encode(to:)(a1);
}

uint64_t SetPrivateDataRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 48) = v8;
  return sub_236078498(v2, v3, v4, v5, v6, v7, v8);
}

void SetPrivateDataRequest.stringValue.getter()
{
  __asm { BR              X10 }
}

unint64_t sub_2360C3A84()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2360D0E48();
  swift_bridgeObjectRelease();
  sub_2360D0BE4();
  swift_bridgeObjectRelease();
  sub_2360D0BE4();
  sub_2360D0BE4();
  swift_bridgeObjectRelease();
  sub_2360D0BE4();
  return 0xD000000000000012;
}

void sub_2360C3DB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_236079824(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_17_0, (SEL *)&selRef_setPrivateDataRequest_reply_);
}

void sub_2360C3DCC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_236079824(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_14_0, (SEL *)&selRef_setPrivateDataRequest_reply_);
}

uint64_t type metadata accessor for SetPublicDataRequest.Request(uint64_t a1)
{
  return sub_23608864C(a1, qword_2563A2BA8);
}

uint64_t type metadata accessor for SetPublicDataRequest(uint64_t a1)
{
  return sub_23608864C(a1, qword_2563A2B00);
}

uint64_t sub_2360C3E08()
{
  sub_2360C662C();
  return sub_2360D1148();
}

uint64_t sub_2360C3E30()
{
  sub_2360C662C();
  return sub_2360D1154();
}

uint64_t SetPrivateDataRequest.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2998);
  v13 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v11 = v1[1];
  v12 = v6;
  v8 = *((_QWORD *)v1 + 4);
  v7 = *((_QWORD *)v1 + 5);
  v9 = *((_BYTE *)v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360C662C();
  sub_2360D113C();
  v14 = v12;
  v15 = v11;
  v16 = v8;
  v17 = v7;
  v18 = v9;
  sub_2360C6670();
  sub_2360D0FEC();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v5, v3);
}

uint64_t SetPrivateDataRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[3];
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A29B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360C662C();
  sub_2360D1124();
  if (!v2)
  {
    sub_2360C66B4();
    sub_2360D0F5C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v14;
    v10 = v13[1];
    v11 = v13[2];
    *(_OWORD *)a2 = v13[0];
    *(_OWORD *)(a2 + 16) = v10;
    *(_OWORD *)(a2 + 32) = v11;
    *(_BYTE *)(a2 + 48) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2360C40B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2360C40F4 + 4 * byte_2360D9A8A[a1]))(0x6554686372616573, 0xEF79726F74697272);
}

unint64_t sub_2360C40F4()
{
  return 0xD000000000000014;
}

unint64_t sub_2360C4110()
{
  return 0xD000000000000015;
}

uint64_t sub_2360C4160@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SetPrivateDataRequest.init(from:)(a1, a2);
}

uint64_t sub_2360C4174(_QWORD *a1)
{
  return SetPrivateDataRequest.encode(to:)(a1);
}

uint64_t sub_2360C4188()
{
  return 0x44496863746162;
}

uint64_t sub_2360C41A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x44496863746162 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2360D1028();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2360C4234()
{
  sub_2360C67E4();
  return sub_2360D1148();
}

uint64_t sub_2360C425C()
{
  sub_2360C67E4();
  return sub_2360D1154();
}

uint64_t sub_2360C4284()
{
  return 0x496C6C6174736E69;
}

uint64_t sub_2360C42A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x496C6C6174736E69 && a2 == 0xE900000000000044)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2360D1028();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2360C4340()
{
  sub_2360C686C();
  return sub_2360D1148();
}

uint64_t sub_2360C4368()
{
  sub_2360C686C();
  return sub_2360D1154();
}

uint64_t sub_2360C4390()
{
  unsigned __int8 *v0;

  return sub_2360C40B4(*v0);
}

uint64_t sub_2360C4398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360CBB38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2360C43BC()
{
  sub_2360C66F8();
  return sub_2360D1148();
}

uint64_t sub_2360C43E4()
{
  sub_2360C66F8();
  return sub_2360D1154();
}

uint64_t sub_2360C440C()
{
  sub_2360C673C();
  return sub_2360D1148();
}

uint64_t sub_2360C4434()
{
  sub_2360C673C();
  return sub_2360D1154();
}

uint64_t sub_2360C445C()
{
  sub_2360C6828();
  return sub_2360D1148();
}

uint64_t sub_2360C4484()
{
  sub_2360C6828();
  return sub_2360D1154();
}

uint64_t sub_2360C44AC()
{
  sub_2360C68B0();
  return sub_2360D1148();
}

uint64_t sub_2360C44D4()
{
  sub_2360C68B0();
  return sub_2360D1154();
}

void SetPublicDataRequest.Request.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  _QWORD v22[7];
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;

  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A29C0);
  v22[3] = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v28 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A29C8);
  v22[1] = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v24 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A29D0);
  v22[2] = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v26 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A29D8);
  v22[0] = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v22[6] = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2360D0914();
  v7 = *(_QWORD *)(v6 - 8);
  v32 = v6;
  v33 = v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v31 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v22[5] = (char *)v22 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v30 = (char *)v22 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v22[4] = (char *)v22 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A29E0);
  MEMORY[0x24BDAC7A8](v15);
  v16 = type metadata accessor for SetPublicDataRequest.Request(0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A29E8);
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v20 = (char *)v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360C66F8();
  v35 = v20;
  sub_2360D113C();
  sub_236077F70(v37, (uint64_t)v18, type metadata accessor for SetPublicDataRequest.Request);
  v21 = (char *)sub_2360C4810 + 4 * byte_2360D9A8F[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2360C4810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 104) = 0;
  sub_2360C68B0();
  v5 = *(_QWORD *)(v3 - 128);
  v4 = *(_QWORD *)(v3 - 120);
  sub_2360D0F98();
  sub_2360D0FA4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 144) + 8))(v5, v4);
}

uint64_t SetPublicDataRequest.Request.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  _QWORD v34[9];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;

  v40 = a2;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2A40);
  v34[8] = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v51 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2A48);
  v34[7] = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v50 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2A50);
  v44 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2A58);
  v36 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v42 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2A60);
  v34[6] = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v41 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2A68);
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for SetPublicDataRequest.Request(0);
  v10 = MEMORY[0x24BDAC7A8](v45);
  v47 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v34 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v34 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)v34 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)v34 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v34 - v24;
  v26 = a1[3];
  v52 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_2360C66F8();
  v27 = v53;
  sub_2360D1124();
  if (!v27)
  {
    v34[1] = v23;
    v34[2] = v20;
    v34[3] = v14;
    v53 = 0;
    v34[5] = v17;
    v34[4] = v25;
    v28 = v48;
    v29 = sub_2360D0F80();
    if (*(_QWORD *)(v29 + 16) == 1)
      __asm { BR              X10 }
    v30 = sub_2360D0E78();
    swift_allocError();
    v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0270);
    *v32 = v45;
    sub_2360D0F08();
    sub_2360D0E6C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, *MEMORY[0x24BEE26D0], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v9, v28);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
}

uint64_t sub_2360C5A84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SetPublicDataRequest.Request.init(from:)(a1, a2);
}

void sub_2360C5A98(_QWORD *a1)
{
  SetPublicDataRequest.Request.encode(to:)(a1);
}

uint64_t SetPublicDataRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_236077F70(v1, a1, type metadata accessor for SetPublicDataRequest.Request);
}

void sub_2360C5AD0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_236079824(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_15, (SEL *)&selRef_setPublicDataRequest_reply_);
}

unint64_t sub_2360C5AE4()
{
  unint64_t result;

  result = qword_25429DCA8;
  if (!qword_25429DCA8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC8B4, &type metadata for FetchPrivateDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DCA8);
  }
  return result;
}

unint64_t sub_2360C5B28()
{
  unint64_t result;

  result = qword_2563A2740;
  if (!qword_2563A2740)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC864, &type metadata for FetchPrivateDataRequest.Request.LocalizedStringsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2740);
  }
  return result;
}

unint64_t sub_2360C5B6C()
{
  unint64_t result;

  result = qword_2563A2748;
  if (!qword_2563A2748)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC814, &type metadata for FetchPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2748);
  }
  return result;
}

unint64_t sub_2360C5BB0()
{
  unint64_t result;

  result = qword_25429DBC0;
  if (!qword_25429DBC0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC7C4, &type metadata for FetchPrivateDataRequest.Request.ShowAppInstallationSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DBC0);
  }
  return result;
}

unint64_t sub_2360C5BF4()
{
  unint64_t result;

  result = qword_2563A2750;
  if (!qword_2563A2750)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC774, &type metadata for FetchPrivateDataRequest.Request.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2750);
  }
  return result;
}

unint64_t sub_2360C5C38()
{
  unint64_t result;

  result = qword_2563A2758;
  if (!qword_2563A2758)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC724, &type metadata for FetchPrivateDataRequest.Request.PassbookProvisioningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2758);
  }
  return result;
}

unint64_t sub_2360C5C7C()
{
  unint64_t result;

  result = qword_2563A2760;
  if (!qword_2563A2760)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for CodableAuditToken, &type metadata for CodableAuditToken);
    atomic_store(result, (unint64_t *)&qword_2563A2760);
  }
  return result;
}

unint64_t sub_2360C5CC0()
{
  unint64_t result;

  result = qword_25429DBD0;
  if (!qword_25429DBD0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC6D4, &type metadata for FetchPrivateDataRequest.Request.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DBD0);
  }
  return result;
}

unint64_t sub_2360C5D04()
{
  unint64_t result;

  result = qword_2563A2768;
  if (!qword_2563A2768)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC684, &type metadata for FetchPrivateDataRequest.Request.AssociatedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2768);
  }
  return result;
}

unint64_t sub_2360C5D48()
{
  unint64_t result;

  result = qword_2563A2770;
  if (!qword_2563A2770)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC634, &type metadata for FetchPrivateDataRequest.Request.ApprovedDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2770);
  }
  return result;
}

unint64_t sub_2360C5D8C()
{
  unint64_t result;

  result = qword_2563A2778;
  if (!qword_2563A2778)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC5E4, &type metadata for FetchPrivateDataRequest.Request.AllApprovedDevelopersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2778);
  }
  return result;
}

unint64_t sub_2360C5DD0()
{
  unint64_t result;

  result = qword_2563A27D0;
  if (!qword_2563A27D0)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for CodableAuditToken, &type metadata for CodableAuditToken);
    atomic_store(result, (unint64_t *)&qword_2563A27D0);
  }
  return result;
}

unint64_t sub_2360C5E14()
{
  unint64_t result;

  result = qword_25429DD38;
  if (!qword_25429DD38)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC594, &type metadata for FetchPrivateDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DD38);
  }
  return result;
}

unint64_t sub_2360C5E58()
{
  unint64_t result;

  result = qword_25429DD30;
  if (!qword_25429DD30)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for FetchPrivateDataRequest.Request, &type metadata for FetchPrivateDataRequest.Request);
    atomic_store(result, (unint64_t *)&qword_25429DD30);
  }
  return result;
}

unint64_t sub_2360C5E9C()
{
  unint64_t result;

  result = qword_2563A27E0;
  if (!qword_2563A27E0)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for FetchPrivateDataRequest.Request, &type metadata for FetchPrivateDataRequest.Request);
    atomic_store(result, (unint64_t *)&qword_2563A27E0);
  }
  return result;
}

unint64_t sub_2360C5EE0()
{
  unint64_t result;

  result = qword_25429DBF8;
  if (!qword_25429DBF8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC544, &type metadata for FetchDataResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DBF8);
  }
  return result;
}

unint64_t sub_2360C5F24()
{
  unint64_t result;

  result = qword_2563A2838;
  if (!qword_2563A2838)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC4F4, &type metadata for FetchDataResponse.Response.LocalizedStringsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2838);
  }
  return result;
}

unint64_t sub_2360C5F68()
{
  unint64_t result;

  result = qword_2563A2840;
  if (!qword_2563A2840)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC4A4, &type metadata for FetchDataResponse.Response.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2840);
  }
  return result;
}

unint64_t sub_2360C5FAC()
{
  unint64_t result;

  result = qword_25429DBB8;
  if (!qword_25429DBB8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC454, &type metadata for FetchDataResponse.Response.ShowAppInstallationSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DBB8);
  }
  return result;
}

unint64_t sub_2360C5FF0()
{
  unint64_t result;

  result = qword_2563A2848;
  if (!qword_2563A2848)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC404, &type metadata for FetchDataResponse.Response.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2848);
  }
  return result;
}

unint64_t sub_2360C6034()
{
  unint64_t result;

  result = qword_2563A2850;
  if (!qword_2563A2850)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC3B4, &type metadata for FetchDataResponse.Response.PassbookProvisioningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2850);
  }
  return result;
}

unint64_t sub_2360C6078()
{
  unint64_t result;

  result = qword_25429DBC8;
  if (!qword_25429DBC8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC364, &type metadata for FetchDataResponse.Response.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DBC8);
  }
  return result;
}

unint64_t sub_2360C60BC()
{
  unint64_t result;

  result = qword_2563A2858;
  if (!qword_2563A2858)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC314, &type metadata for FetchDataResponse.Response.AssociatedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2858);
  }
  return result;
}

unint64_t sub_2360C6100()
{
  unint64_t result;

  result = qword_2563A2860;
  if (!qword_2563A2860)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC2C4, &type metadata for FetchDataResponse.Response.ApprovedDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2860);
  }
  return result;
}

unint64_t sub_2360C6144()
{
  unint64_t result;

  result = qword_2563A2868;
  if (!qword_2563A2868)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC274, &type metadata for FetchDataResponse.Response.AllApprovedDevelopersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2868);
  }
  return result;
}

unint64_t sub_2360C6188()
{
  unint64_t result;

  result = qword_2563A2880;
  if (!qword_2563A2880)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for ApprovedDeveloper, &type metadata for ApprovedDeveloper);
    atomic_store(result, (unint64_t *)&qword_2563A2880);
  }
  return result;
}

uint64_t sub_2360C61CC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x23B7EBA68](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2360C6230()
{
  unint64_t result;

  result = qword_2563A2898;
  if (!qword_2563A2898)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for ApprovedDeveloper, &type metadata for ApprovedDeveloper);
    atomic_store(result, (unint64_t *)&qword_2563A2898);
  }
  return result;
}

unint64_t sub_2360C6274()
{
  unint64_t result;

  result = qword_25429DC88;
  if (!qword_25429DC88)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC224, &type metadata for FetchDataResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DC88);
  }
  return result;
}

unint64_t sub_2360C62B8()
{
  unint64_t result;

  result = qword_2563A28A8;
  if (!qword_2563A28A8)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for FetchDataResponse.Response, &type metadata for FetchDataResponse.Response);
    atomic_store(result, (unint64_t *)&qword_2563A28A8);
  }
  return result;
}

unint64_t sub_2360C62FC()
{
  unint64_t result;

  result = qword_25429DC80;
  if (!qword_25429DC80)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for FetchDataResponse.Response, &type metadata for FetchDataResponse.Response);
    atomic_store(result, (unint64_t *)&qword_25429DC80);
  }
  return result;
}

unint64_t sub_2360C6340()
{
  unint64_t result;

  result = qword_2563A28C0;
  if (!qword_2563A28C0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC1D4, &type metadata for FetchPublicDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A28C0);
  }
  return result;
}

unint64_t sub_2360C6384()
{
  unint64_t result;

  result = qword_2563A28C8;
  if (!qword_2563A28C8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC184, &type metadata for FetchPublicDataRequest.Request.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A28C8);
  }
  return result;
}

unint64_t sub_2360C63C8()
{
  unint64_t result;

  result = qword_2563A28E8;
  if (!qword_2563A28E8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC134, &type metadata for FetchPublicDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A28E8);
  }
  return result;
}

unint64_t sub_2360C640C()
{
  unint64_t result;

  result = qword_2563A28F0;
  if (!qword_2563A28F0)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for FetchPublicDataRequest.Request, &type metadata for FetchPublicDataRequest.Request);
    atomic_store(result, (unint64_t *)&qword_2563A28F0);
  }
  return result;
}

unint64_t sub_2360C6450()
{
  unint64_t result;

  result = qword_2563A2900;
  if (!qword_2563A2900)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for FetchPublicDataRequest.Request, &type metadata for FetchPublicDataRequest.Request);
    atomic_store(result, (unint64_t *)&qword_2563A2900);
  }
  return result;
}

unint64_t sub_2360C6494()
{
  unint64_t result;

  result = qword_2563A2938;
  if (!qword_2563A2938)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC0E4, &type metadata for SetPrivateDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2938);
  }
  return result;
}

unint64_t sub_2360C64D8()
{
  unint64_t result;

  result = qword_2563A2940;
  if (!qword_2563A2940)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC094, &type metadata for SetPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2940);
  }
  return result;
}

unint64_t sub_2360C651C()
{
  unint64_t result;

  result = qword_2563A2948;
  if (!qword_2563A2948)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DC044, &type metadata for SetPrivateDataRequest.Request.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2948);
  }
  return result;
}

unint64_t sub_2360C6560()
{
  unint64_t result;

  result = qword_2563A2950;
  if (!qword_2563A2950)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBFF4, &type metadata for SetPrivateDataRequest.Request.RevokeDeveloperApprovalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2950);
  }
  return result;
}

unint64_t sub_2360C65A4()
{
  unint64_t result;

  result = qword_2563A2958;
  if (!qword_2563A2958)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBFA4, &type metadata for SetPrivateDataRequest.Request.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2958);
  }
  return result;
}

unint64_t sub_2360C65E8()
{
  unint64_t result;

  result = qword_2563A2960;
  if (!qword_2563A2960)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBF54, &type metadata for SetPrivateDataRequest.Request.ApproveDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2960);
  }
  return result;
}

unint64_t sub_2360C662C()
{
  unint64_t result;

  result = qword_2563A29A0;
  if (!qword_2563A29A0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBF04, &type metadata for SetPrivateDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A29A0);
  }
  return result;
}

unint64_t sub_2360C6670()
{
  unint64_t result;

  result = qword_2563A29A8;
  if (!qword_2563A29A8)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for SetPrivateDataRequest.Request, &type metadata for SetPrivateDataRequest.Request);
    atomic_store(result, (unint64_t *)&qword_2563A29A8);
  }
  return result;
}

unint64_t sub_2360C66B4()
{
  unint64_t result;

  result = qword_2563A29B8;
  if (!qword_2563A29B8)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for SetPrivateDataRequest.Request, &type metadata for SetPrivateDataRequest.Request);
    atomic_store(result, (unint64_t *)&qword_2563A29B8);
  }
  return result;
}

unint64_t sub_2360C66F8()
{
  unint64_t result;

  result = qword_2563A29F0;
  if (!qword_2563A29F0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBEB4, &type metadata for SetPublicDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A29F0);
  }
  return result;
}

unint64_t sub_2360C673C()
{
  unint64_t result;

  result = qword_2563A2A00;
  if (!qword_2563A2A00)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBE64, &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2A00);
  }
  return result;
}

uint64_t sub_2360C6780(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563A2A08);
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x23B7EBA68](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2360C67E4()
{
  unint64_t result;

  result = qword_2563A2A18;
  if (!qword_2563A2A18)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBE14, &type metadata for SetPublicDataRequest.Request.CancelPendingInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2A18);
  }
  return result;
}

unint64_t sub_2360C6828()
{
  unint64_t result;

  result = qword_2563A2A28;
  if (!qword_2563A2A28)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBDC4, &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2A28);
  }
  return result;
}

unint64_t sub_2360C686C()
{
  unint64_t result;

  result = qword_2563A2A30;
  if (!qword_2563A2A30)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBD74, &type metadata for SetPublicDataRequest.Request.CancelPendingInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2A30);
  }
  return result;
}

unint64_t sub_2360C68B0()
{
  unint64_t result;

  result = qword_2563A2A38;
  if (!qword_2563A2A38)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBD24, &type metadata for SetPublicDataRequest.Request.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2A38);
  }
  return result;
}

uint64_t sub_2360C68F4()
{
  sub_2360C6A54();
  return sub_2360D1148();
}

uint64_t sub_2360C691C()
{
  sub_2360C6A54();
  return sub_2360D1154();
}

uint64_t SetPublicDataRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2A78);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360C6A54();
  sub_2360D113C();
  type metadata accessor for SetPublicDataRequest.Request(0);
  sub_236077F30(&qword_2563A2A88, type metadata accessor for SetPublicDataRequest.Request, (uint64_t)&protocol conformance descriptor for SetPublicDataRequest.Request);
  sub_2360D0FEC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_2360C6A54()
{
  unint64_t result;

  result = qword_2563A2A80;
  if (!qword_2563A2A80)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBCD4, &type metadata for SetPublicDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2A80);
  }
  return result;
}

uint64_t SetPublicDataRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2;
  v4 = type metadata accessor for SetPublicDataRequest.Request(0);
  MEMORY[0x24BDAC7A8](v4);
  v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2A90);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SetPublicDataRequest(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360C6A54();
  sub_2360D1124();
  if (!v2)
  {
    sub_236077F30(&qword_2563A2A98, type metadata accessor for SetPublicDataRequest.Request, (uint64_t)&protocol conformance descriptor for SetPublicDataRequest.Request);
    sub_2360D0F5C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_236078854(v15, (uint64_t)v11, type metadata accessor for SetPublicDataRequest.Request);
    sub_236078854((uint64_t)v11, v13, type metadata accessor for SetPublicDataRequest);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_2360C6C68()
{
  unint64_t result;

  result = qword_2563A2AA0;
  if (!qword_2563A2AA0)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for FetchPublicDataRequest.Request, &type metadata for FetchPublicDataRequest.Request);
    atomic_store(result, (unint64_t *)&qword_2563A2AA0);
  }
  return result;
}

uint64_t sub_2360C6CAC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SetPublicDataRequest.init(from:)(a1, a2);
}

uint64_t sub_2360C6CC0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2A78);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360C6A54();
  sub_2360D113C();
  type metadata accessor for SetPublicDataRequest.Request(0);
  sub_236077F30(&qword_2563A2A88, type metadata accessor for SetPublicDataRequest.Request, (uint64_t)&protocol conformance descriptor for SetPublicDataRequest.Request);
  sub_2360D0FEC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest()
{
  return &type metadata for FetchPrivateDataRequest;
}

uint64_t _s15AppDistribution23FetchPrivateDataRequestVwxx_0(uint64_t a1)
{
  return sub_23607867C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t _s15AppDistribution23FetchPrivateDataRequestVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_236078628(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t _s15AppDistribution23FetchPrivateDataRequestVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_236078628(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  sub_23607867C(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t _s15AppDistribution23FetchPrivateDataRequestVwta_0(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  __int128 v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_BYTE *)(a1 + 48);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = v3;
  sub_23607867C(v4, v6, v5, v7, v8, v9, v10);
  return a1;
}

uint64_t _s15AppDistribution23FetchPrivateDataRequestVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FA && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 1018);
  v3 = ((*(_QWORD *)(a1 + 40) >> 60) & 3 | (4 * *(unsigned __int8 *)(a1 + 48))) ^ 0x3FF;
  if (v3 >= 0x3F9)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s15AppDistribution23FetchPrivateDataRequestVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3F9)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 1018;
    if (a3 >= 0x3FA)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x3FA)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 40) = (-a2 & 3) << 60;
      *(_BYTE *)(result + 48) = -a2 >> 2;
    }
  }
  return result;
}

uint64_t sub_2360C7024(uint64_t a1)
{
  int v1;
  unsigned int v2;

  if (*(_BYTE *)(a1 + 48))
    v1 = 4;
  else
    v1 = 0;
  v2 = (*(_QWORD *)(a1 + 40) >> 60) & 3 | v1;
  if (v2 <= 5)
    return v2;
  else
    return (*(_DWORD *)a1 + 6);
}

uint64_t sub_2360C7054(uint64_t result)
{
  *(_QWORD *)(result + 40) &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_2360C7064(uint64_t result, unsigned int a2)
{
  if (a2 < 6)
  {
    *(_QWORD *)(result + 40) = *(_QWORD *)(result + 40) & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 3) << 60);
    *(_BYTE *)(result + 48) = (a2 & 4) != 0;
  }
  else
  {
    *(_QWORD *)result = a2 - 6;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)(result + 40) = 0x2000000000000000;
    *(_BYTE *)(result + 48) = 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request()
{
  return &type metadata for FetchPrivateDataRequest.Request;
}

ValueMetadata *type metadata accessor for FetchDataResponse()
{
  return &type metadata for FetchDataResponse;
}

uint64_t destroy for FetchDataResponse.Response(uint64_t a1)
{
  return sub_23608DB8C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s15AppDistribution17FetchDataResponseVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23608DBC8(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s15AppDistribution17FetchDataResponseVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23608DBC8(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23608DB8C(v6, v7, v8);
  return a1;
}

uint64_t _s15AppDistribution17FetchDataResponseVwta_0(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23608DB8C(v4, v5, v6);
  return a1;
}

uint64_t _s15AppDistribution17FetchDataResponseVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF8 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 248);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 8)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s15AppDistribution17FetchDataResponseVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 248;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2360C725C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response()
{
  return &type metadata for FetchDataResponse.Response;
}

ValueMetadata *type metadata accessor for FetchPublicDataRequest()
{
  return &type metadata for FetchPublicDataRequest;
}

ValueMetadata *type metadata accessor for FetchPublicDataRequest.Request()
{
  return &type metadata for FetchPublicDataRequest.Request;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest()
{
  return &type metadata for SetPrivateDataRequest;
}

uint64_t _s15AppDistribution21SetPrivateDataRequestVwxx_0(uint64_t a1)
{
  return sub_236078500(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t _s15AppDistribution21SetPrivateDataRequestVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_236078498(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t _s15AppDistribution21SetPrivateDataRequestVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_236078498(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_236078500(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t _s15AppDistribution21SetPrivateDataRequestVwta_0(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_236078500(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t _s15AppDistribution21SetPrivateDataRequestVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s15AppDistribution21SetPrivateDataRequestVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_2360C74CC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

uint64_t sub_2360C74D4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request()
{
  return &type metadata for SetPrivateDataRequest.Request;
}

uint64_t initializeBufferWithCopyOfBuffer for SetPublicDataRequest(uint64_t *a1, uint64_t *a2)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(type metadata accessor for SetPublicDataRequest.Request(0) - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_2360C7548 + 4 * byte_2360D9A9B[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for SetPublicDataRequest(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;

  type metadata accessor for SetPublicDataRequest.Request(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      result = swift_bridgeObjectRelease();
      break;
    case 1:
    case 3:
      v3 = sub_2360D0914();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    case 2:
      v4 = sub_2360D0914();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2A20);
      goto LABEL_6;
    case 4:
      v6 = sub_2360D0914();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A29F8);
LABEL_6:
      result = swift_bridgeObjectRelease();
      v7 = (uint64_t *)(a1 + *(int *)(v5 + 64));
      v8 = v7[1];
      if (v8 >> 60 != 15)
        result = sub_236077AC4(*v7, v8);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for SetPublicDataRequest()
{
  char *v0;

  type metadata accessor for SetPublicDataRequest.Request(0);
  v0 = (char *)sub_2360C7890 + 4 * byte_2360D9AA5[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_2360C7890()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for SetPublicDataRequest(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_236078270(result, type metadata accessor for SetPublicDataRequest.Request);
    type metadata accessor for SetPublicDataRequest.Request(0);
    v2 = (char *)&loc_2360C7AAC + 4 * byte_2360D9AAA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

char *initializeWithTake for SetPublicDataRequest(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = type metadata accessor for SetPublicDataRequest.Request(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
      v5 = sub_2360D0914();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      goto LABEL_6;
    case 2u:
      v6 = sub_2360D0914();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2A20);
      *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
      *(_OWORD *)&a1[*(int *)(v7 + 64)] = *(_OWORD *)&a2[*(int *)(v7 + 64)];
      goto LABEL_6;
    case 4u:
      v8 = sub_2360D0914();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A29F8);
      *(_QWORD *)&a1[*(int *)(v9 + 48)] = *(_QWORD *)&a2[*(int *)(v9 + 48)];
      *(_OWORD *)&a1[*(int *)(v9 + 64)] = *(_OWORD *)&a2[*(int *)(v9 + 64)];
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for SetPublicDataRequest(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_236078270((uint64_t)a1, type metadata accessor for SetPublicDataRequest.Request);
    v4 = type metadata accessor for SetPublicDataRequest.Request(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        v5 = sub_2360D0914();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
        goto LABEL_7;
      case 2u:
        v6 = sub_2360D0914();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2A20);
        *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
        *(_OWORD *)&a1[*(int *)(v7 + 64)] = *(_OWORD *)&a2[*(int *)(v7 + 64)];
        goto LABEL_7;
      case 4u:
        v8 = sub_2360D0914();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A29F8);
        *(_QWORD *)&a1[*(int *)(v9 + 48)] = *(_QWORD *)&a2[*(int *)(v9 + 48)];
        *(_OWORD *)&a1[*(int *)(v9 + 64)] = *(_OWORD *)&a2[*(int *)(v9 + 64)];
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SetPublicDataRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2360C7FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SetPublicDataRequest.Request(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SetPublicDataRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2360C7FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SetPublicDataRequest.Request(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_2360C802C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SetPublicDataRequest.Request(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SetPublicDataRequest.Request(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_2360C80E8 + 4 * byte_2360D9AB7[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for SetPublicDataRequest.Request(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      result = swift_bridgeObjectRelease();
      break;
    case 1:
    case 3:
      v3 = sub_2360D0914();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    case 2:
      v4 = sub_2360D0914();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2A20);
      goto LABEL_6;
    case 4:
      v6 = sub_2360D0914();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A29F8);
LABEL_6:
      result = swift_bridgeObjectRelease();
      v7 = (uint64_t *)(a1 + *(int *)(v5 + 64));
      v8 = v7[1];
      if (v8 >> 60 != 15)
        result = sub_236077AC4(*v7, v8);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for SetPublicDataRequest.Request()
{
  char *v0;

  v0 = (char *)sub_2360C8418 + 4 * byte_2360D9AC1[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_2360C8418()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for SetPublicDataRequest.Request(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_236078270(result, type metadata accessor for SetPublicDataRequest.Request);
    v2 = (char *)&loc_2360C862C + 4 * byte_2360D9AC6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

char *initializeWithTake for SetPublicDataRequest.Request(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
      v6 = sub_2360D0914();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_6;
    case 2u:
      v7 = sub_2360D0914();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2A20);
      *(_OWORD *)&a1[*(int *)(v8 + 48)] = *(_OWORD *)&a2[*(int *)(v8 + 48)];
      *(_OWORD *)&a1[*(int *)(v8 + 64)] = *(_OWORD *)&a2[*(int *)(v8 + 64)];
      goto LABEL_6;
    case 4u:
      v9 = sub_2360D0914();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A29F8);
      *(_QWORD *)&a1[*(int *)(v10 + 48)] = *(_QWORD *)&a2[*(int *)(v10 + 48)];
      *(_OWORD *)&a1[*(int *)(v10 + 64)] = *(_OWORD *)&a2[*(int *)(v10 + 64)];
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for SetPublicDataRequest.Request(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_236078270((uint64_t)a1, type metadata accessor for SetPublicDataRequest.Request);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        v6 = sub_2360D0914();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_7;
      case 2u:
        v7 = sub_2360D0914();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2A20);
        *(_OWORD *)&a1[*(int *)(v8 + 48)] = *(_OWORD *)&a2[*(int *)(v8 + 48)];
        *(_OWORD *)&a1[*(int *)(v8 + 64)] = *(_OWORD *)&a2[*(int *)(v8 + 64)];
        goto LABEL_7;
      case 4u:
        v9 = sub_2360D0914();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A29F8);
        *(_QWORD *)&a1[*(int *)(v10 + 48)] = *(_QWORD *)&a2[*(int *)(v10 + 48)];
        *(_OWORD *)&a1[*(int *)(v10 + 64)] = *(_OWORD *)&a2[*(int *)(v10 + 64)];
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_2360C8B08()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  char v3;
  void *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;

  v4 = &unk_2360D9FA8;
  result = sub_2360D0914();
  if (v1 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout3();
    v6 = &v3;
    v7 = v5;
    swift_getTupleTypeLayout3();
    v8 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.CodingKeys()
{
  return &type metadata for SetPublicDataRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.Request.CodingKeys()
{
  return &type metadata for SetPublicDataRequest.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.Request.SearchTerritoryCodingKeys()
{
  return &type metadata for SetPublicDataRequest.Request.SearchTerritoryCodingKeys;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.Request.CancelPendingInstallCodingKeys()
{
  return &type metadata for SetPublicDataRequest.Request.CancelPendingInstallCodingKeys;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.Request.ConfirmPendingInstallCodingKeys()
{
  return &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallCodingKeys;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.Request.CancelPendingInstallBatchCodingKeys()
{
  return &type metadata for SetPublicDataRequest.Request.CancelPendingInstallBatchCodingKeys;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.Request.ConfirmPendingInstallBatchCodingKeys()
{
  return &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallBatchCodingKeys;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.CodingKeys()
{
  return &type metadata for SetPrivateDataRequest.CodingKeys;
}

uint64_t getEnumTagSinglePayload for AutomaticUpdate.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s15AppDistribution20SetPublicDataRequestV7RequestO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2360C8D34 + 4 * byte_2360D9AD8[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2360C8D68 + 4 * byte_2360D9AD3[v4]))();
}

uint64_t sub_2360C8D68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360C8D70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360C8D78);
  return result;
}

uint64_t sub_2360C8D84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360C8D8CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2360C8D90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360C8D98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request.CodingKeys()
{
  return &type metadata for SetPrivateDataRequest.Request.CodingKeys;
}

uint64_t _s15AppDistribution20SetPublicDataRequestV7RequestO31ConfirmPendingInstallCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2360C8E00 + 4 * byte_2360D9AE2[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2360C8E34 + 4 * byte_2360D9ADD[v4]))();
}

uint64_t sub_2360C8E34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360C8E3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360C8E44);
  return result;
}

uint64_t sub_2360C8E50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360C8E58);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2360C8E5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360C8E64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request.ApproveDeveloperCodingKeys()
{
  return &type metadata for SetPrivateDataRequest.Request.ApproveDeveloperCodingKeys;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request.DistributorPriorityListCodingKeys()
{
  return &type metadata for SetPrivateDataRequest.Request.DistributorPriorityListCodingKeys;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request.RevokeDeveloperApprovalCodingKeys()
{
  return &type metadata for SetPrivateDataRequest.Request.RevokeDeveloperApprovalCodingKeys;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request.ShowInstallSheetCodingKeys()
{
  return &type metadata for SetPrivateDataRequest.Request.ShowInstallSheetCodingKeys;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys()
{
  return &type metadata for SetPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPublicDataRequest.CodingKeys()
{
  return &type metadata for FetchPublicDataRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for FetchPublicDataRequest.Request.CodingKeys()
{
  return &type metadata for FetchPublicDataRequest.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for FetchPublicDataRequest.Request.SearchTerritoryCodingKeys()
{
  return &type metadata for FetchPublicDataRequest.Request.SearchTerritoryCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.CodingKeys()
{
  return &type metadata for FetchDataResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.CodingKeys()
{
  return &type metadata for FetchDataResponse.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.AllApprovedDevelopersCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.AllApprovedDevelopersCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.ApprovedDeveloperCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.ApprovedDeveloperCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.AssociatedAppsCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.AssociatedAppsCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.DistributorPriorityListCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.DistributorPriorityListCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.PassbookProvisioningCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.PassbookProvisioningCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.ShowInstallSheetCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.ShowInstallSheetCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.ShowAppInstallationSettingsCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.ShowAppInstallationSettingsCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.SearchTerritoryCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.SearchTerritoryCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.LocalizedStringsCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.LocalizedStringsCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.CodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.CodingKeys;
}

uint64_t _s15AppDistribution17FetchDataResponseV8ResponseO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_2360C9008 + 4 * byte_2360D9AEC[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_2360C903C + 4 * byte_2360D9AE7[v4]))();
}

uint64_t sub_2360C903C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360C9044(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360C904CLL);
  return result;
}

uint64_t sub_2360C9058(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360C9060);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_2360C9064(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360C906C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.CodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.AllApprovedDevelopersCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.AllApprovedDevelopersCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.ApprovedDeveloperCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.ApprovedDeveloperCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.AssociatedAppsCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.AssociatedAppsCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.DistributorPriorityListCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.DistributorPriorityListCodingKeys;
}

uint64_t _s15AppDistribution21SetPrivateDataRequestV7RequestO33RevokeDeveloperApprovalCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2360C9114 + 4 * byte_2360D9AF6[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2360C9148 + 4 * byte_2360D9AF1[v4]))();
}

uint64_t sub_2360C9148(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360C9150(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360C9158);
  return result;
}

uint64_t sub_2360C9164(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360C916CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2360C9170(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360C9178(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.PassbookProvisioningCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.PassbookProvisioningCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.ShowInstallSheetCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.ShowInstallSheetCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.ShowAppInstallationSettingsCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.ShowAppInstallationSettingsCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys;
}

uint64_t _s15AppDistribution22FetchPublicDataRequestV7RequestOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2360C9204 + 4 * byte_2360D9AFB[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2360C9224 + 4 * byte_2360D9B00[v4]))();
}

_BYTE *sub_2360C9204(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2360C9224(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2360C922C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2360C9234(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2360C923C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2360C9244(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.LocalizedStringsCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.LocalizedStringsCodingKeys;
}

unint64_t sub_2360C9264()
{
  unint64_t result;

  result = qword_2563A2BE0;
  if (!qword_2563A2BE0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA2FC, &type metadata for FetchPrivateDataRequest.Request.LocalizedStringsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2BE0);
  }
  return result;
}

unint64_t sub_2360C92AC()
{
  unint64_t result;

  result = qword_2563A2BE8;
  if (!qword_2563A2BE8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA3B4, &type metadata for FetchPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2BE8);
  }
  return result;
}

unint64_t sub_2360C92F4()
{
  unint64_t result;

  result = qword_2563A2BF0;
  if (!qword_2563A2BF0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA4BC, &type metadata for FetchPrivateDataRequest.Request.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2BF0);
  }
  return result;
}

unint64_t sub_2360C933C()
{
  unint64_t result;

  result = qword_2563A2BF8;
  if (!qword_2563A2BF8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA574, &type metadata for FetchPrivateDataRequest.Request.PassbookProvisioningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2BF8);
  }
  return result;
}

unint64_t sub_2360C9384()
{
  unint64_t result;

  result = qword_2563A2C00;
  if (!qword_2563A2C00)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA67C, &type metadata for FetchPrivateDataRequest.Request.AssociatedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2C00);
  }
  return result;
}

unint64_t sub_2360C93CC()
{
  unint64_t result;

  result = qword_2563A2C08;
  if (!qword_2563A2C08)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA734, &type metadata for FetchPrivateDataRequest.Request.ApprovedDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2C08);
  }
  return result;
}

unint64_t sub_2360C9414()
{
  unint64_t result;

  result = qword_2563A2C10;
  if (!qword_2563A2C10)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA83C, &type metadata for FetchPrivateDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2C10);
  }
  return result;
}

unint64_t sub_2360C945C()
{
  unint64_t result;

  result = qword_2563A2C18;
  if (!qword_2563A2C18)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA8F4, &type metadata for FetchPrivateDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2C18);
  }
  return result;
}

unint64_t sub_2360C94A4()
{
  unint64_t result;

  result = qword_2563A2C20;
  if (!qword_2563A2C20)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA9AC, &type metadata for FetchDataResponse.Response.LocalizedStringsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2C20);
  }
  return result;
}

unint64_t sub_2360C94EC()
{
  unint64_t result;

  result = qword_2563A2C28;
  if (!qword_2563A2C28)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DAA64, &type metadata for FetchDataResponse.Response.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2C28);
  }
  return result;
}

unint64_t sub_2360C9534()
{
  unint64_t result;

  result = qword_2563A2C30;
  if (!qword_2563A2C30)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DAB1C, &type metadata for FetchDataResponse.Response.ShowAppInstallationSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2C30);
  }
  return result;
}

unint64_t sub_2360C957C()
{
  unint64_t result;

  result = qword_2563A2C38;
  if (!qword_2563A2C38)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DABD4, &type metadata for FetchDataResponse.Response.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2C38);
  }
  return result;
}

unint64_t sub_2360C95C4()
{
  unint64_t result;

  result = qword_2563A2C40;
  if (!qword_2563A2C40)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DAC8C, &type metadata for FetchDataResponse.Response.PassbookProvisioningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2C40);
  }
  return result;
}

unint64_t sub_2360C960C()
{
  unint64_t result;

  result = qword_2563A2C48;
  if (!qword_2563A2C48)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DAD44, &type metadata for FetchDataResponse.Response.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2C48);
  }
  return result;
}

unint64_t sub_2360C9654()
{
  unint64_t result;

  result = qword_2563A2C50;
  if (!qword_2563A2C50)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DADFC, &type metadata for FetchDataResponse.Response.AssociatedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2C50);
  }
  return result;
}

unint64_t sub_2360C969C()
{
  unint64_t result;

  result = qword_2563A2C58;
  if (!qword_2563A2C58)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DAEB4, &type metadata for FetchDataResponse.Response.ApprovedDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2C58);
  }
  return result;
}

unint64_t sub_2360C96E4()
{
  unint64_t result;

  result = qword_2563A2C60;
  if (!qword_2563A2C60)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DAF6C, &type metadata for FetchDataResponse.Response.AllApprovedDevelopersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2C60);
  }
  return result;
}

unint64_t sub_2360C972C()
{
  unint64_t result;

  result = qword_2563A2C68;
  if (!qword_2563A2C68)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB024, &type metadata for FetchDataResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2C68);
  }
  return result;
}

unint64_t sub_2360C9774()
{
  unint64_t result;

  result = qword_2563A2C70;
  if (!qword_2563A2C70)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB0DC, &type metadata for FetchDataResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2C70);
  }
  return result;
}

unint64_t sub_2360C97BC()
{
  unint64_t result;

  result = qword_2563A2C78;
  if (!qword_2563A2C78)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB1E4, &type metadata for FetchPublicDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2C78);
  }
  return result;
}

unint64_t sub_2360C9804()
{
  unint64_t result;

  result = qword_2563A2C80;
  if (!qword_2563A2C80)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB29C, &type metadata for FetchPublicDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2C80);
  }
  return result;
}

unint64_t sub_2360C984C()
{
  unint64_t result;

  result = qword_2563A2C88;
  if (!qword_2563A2C88)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB354, &type metadata for SetPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2C88);
  }
  return result;
}

unint64_t sub_2360C9894()
{
  unint64_t result;

  result = qword_2563A2C90;
  if (!qword_2563A2C90)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB40C, &type metadata for SetPrivateDataRequest.Request.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2C90);
  }
  return result;
}

unint64_t sub_2360C98DC()
{
  unint64_t result;

  result = qword_2563A2C98;
  if (!qword_2563A2C98)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB4C4, &type metadata for SetPrivateDataRequest.Request.RevokeDeveloperApprovalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2C98);
  }
  return result;
}

unint64_t sub_2360C9924()
{
  unint64_t result;

  result = qword_2563A2CA0;
  if (!qword_2563A2CA0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB57C, &type metadata for SetPrivateDataRequest.Request.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2CA0);
  }
  return result;
}

unint64_t sub_2360C996C()
{
  unint64_t result;

  result = qword_2563A2CA8;
  if (!qword_2563A2CA8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB634, &type metadata for SetPrivateDataRequest.Request.ApproveDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2CA8);
  }
  return result;
}

unint64_t sub_2360C99B4()
{
  unint64_t result;

  result = qword_2563A2CB0;
  if (!qword_2563A2CB0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB6EC, &type metadata for SetPrivateDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2CB0);
  }
  return result;
}

unint64_t sub_2360C99FC()
{
  unint64_t result;

  result = qword_2563A2CB8;
  if (!qword_2563A2CB8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB7A4, &type metadata for SetPrivateDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2CB8);
  }
  return result;
}

unint64_t sub_2360C9A44()
{
  unint64_t result;

  result = qword_2563A2CC0;
  if (!qword_2563A2CC0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB85C, &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2CC0);
  }
  return result;
}

unint64_t sub_2360C9A8C()
{
  unint64_t result;

  result = qword_2563A2CC8;
  if (!qword_2563A2CC8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB914, &type metadata for SetPublicDataRequest.Request.CancelPendingInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2CC8);
  }
  return result;
}

unint64_t sub_2360C9AD4()
{
  unint64_t result;

  result = qword_2563A2CD0;
  if (!qword_2563A2CD0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB9CC, &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2CD0);
  }
  return result;
}

unint64_t sub_2360C9B1C()
{
  unint64_t result;

  result = qword_2563A2CD8;
  if (!qword_2563A2CD8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBA84, &type metadata for SetPublicDataRequest.Request.CancelPendingInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2CD8);
  }
  return result;
}

unint64_t sub_2360C9B64()
{
  unint64_t result;

  result = qword_2563A2CE0;
  if (!qword_2563A2CE0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBB3C, &type metadata for SetPublicDataRequest.Request.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2CE0);
  }
  return result;
}

unint64_t sub_2360C9BAC()
{
  unint64_t result;

  result = qword_2563A2CE8;
  if (!qword_2563A2CE8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBBF4, &type metadata for SetPublicDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2CE8);
  }
  return result;
}

unint64_t sub_2360C9BF4()
{
  unint64_t result;

  result = qword_2563A2CF0;
  if (!qword_2563A2CF0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBCAC, &type metadata for SetPublicDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2CF0);
  }
  return result;
}

unint64_t sub_2360C9C3C()
{
  unint64_t result;

  result = qword_2563A2CF8;
  if (!qword_2563A2CF8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBC1C, &type metadata for SetPublicDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2CF8);
  }
  return result;
}

unint64_t sub_2360C9C84()
{
  unint64_t result;

  result = qword_2563A2D00;
  if (!qword_2563A2D00)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBC44, &type metadata for SetPublicDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2D00);
  }
  return result;
}

unint64_t sub_2360C9CCC()
{
  unint64_t result;

  result = qword_2563A2D08;
  if (!qword_2563A2D08)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBAAC, &type metadata for SetPublicDataRequest.Request.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2D08);
  }
  return result;
}

unint64_t sub_2360C9D14()
{
  unint64_t result;

  result = qword_2563A2D10;
  if (!qword_2563A2D10)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBAD4, &type metadata for SetPublicDataRequest.Request.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2D10);
  }
  return result;
}

unint64_t sub_2360C9D5C()
{
  unint64_t result;

  result = qword_2563A2D18;
  if (!qword_2563A2D18)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB9F4, &type metadata for SetPublicDataRequest.Request.CancelPendingInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2D18);
  }
  return result;
}

unint64_t sub_2360C9DA4()
{
  unint64_t result;

  result = qword_2563A2D20;
  if (!qword_2563A2D20)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBA1C, &type metadata for SetPublicDataRequest.Request.CancelPendingInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2D20);
  }
  return result;
}

unint64_t sub_2360C9DEC()
{
  unint64_t result;

  result = qword_2563A2D28;
  if (!qword_2563A2D28)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB93C, &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2D28);
  }
  return result;
}

unint64_t sub_2360C9E34()
{
  unint64_t result;

  result = qword_2563A2D30;
  if (!qword_2563A2D30)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB964, &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2D30);
  }
  return result;
}

unint64_t sub_2360C9E7C()
{
  unint64_t result;

  result = qword_2563A2D38;
  if (!qword_2563A2D38)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB884, &type metadata for SetPublicDataRequest.Request.CancelPendingInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2D38);
  }
  return result;
}

unint64_t sub_2360C9EC4()
{
  unint64_t result;

  result = qword_2563A2D40;
  if (!qword_2563A2D40)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB8AC, &type metadata for SetPublicDataRequest.Request.CancelPendingInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2D40);
  }
  return result;
}

unint64_t sub_2360C9F0C()
{
  unint64_t result;

  result = qword_2563A2D48;
  if (!qword_2563A2D48)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB7CC, &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2D48);
  }
  return result;
}

unint64_t sub_2360C9F54()
{
  unint64_t result;

  result = qword_2563A2D50;
  if (!qword_2563A2D50)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB7F4, &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2D50);
  }
  return result;
}

unint64_t sub_2360C9F9C()
{
  unint64_t result;

  result = qword_2563A2D58;
  if (!qword_2563A2D58)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBB64, &type metadata for SetPublicDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2D58);
  }
  return result;
}

unint64_t sub_2360C9FE4()
{
  unint64_t result;

  result = qword_2563A2D60;
  if (!qword_2563A2D60)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DBB8C, &type metadata for SetPublicDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2D60);
  }
  return result;
}

unint64_t sub_2360CA02C()
{
  unint64_t result;

  result = qword_2563A2D68;
  if (!qword_2563A2D68)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB714, &type metadata for SetPrivateDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2D68);
  }
  return result;
}

unint64_t sub_2360CA074()
{
  unint64_t result;

  result = qword_2563A2D70;
  if (!qword_2563A2D70)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB73C, &type metadata for SetPrivateDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2D70);
  }
  return result;
}

unint64_t sub_2360CA0BC()
{
  unint64_t result;

  result = qword_2563A2D78;
  if (!qword_2563A2D78)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB5A4, &type metadata for SetPrivateDataRequest.Request.ApproveDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2D78);
  }
  return result;
}

unint64_t sub_2360CA104()
{
  unint64_t result;

  result = qword_2563A2D80;
  if (!qword_2563A2D80)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB5CC, &type metadata for SetPrivateDataRequest.Request.ApproveDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2D80);
  }
  return result;
}

unint64_t sub_2360CA14C()
{
  unint64_t result;

  result = qword_2563A2D88;
  if (!qword_2563A2D88)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB4EC, &type metadata for SetPrivateDataRequest.Request.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2D88);
  }
  return result;
}

unint64_t sub_2360CA194()
{
  unint64_t result;

  result = qword_2563A2D90;
  if (!qword_2563A2D90)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB514, &type metadata for SetPrivateDataRequest.Request.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2D90);
  }
  return result;
}

unint64_t sub_2360CA1DC()
{
  unint64_t result;

  result = qword_2563A2D98;
  if (!qword_2563A2D98)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB434, &type metadata for SetPrivateDataRequest.Request.RevokeDeveloperApprovalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2D98);
  }
  return result;
}

unint64_t sub_2360CA224()
{
  unint64_t result;

  result = qword_2563A2DA0;
  if (!qword_2563A2DA0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB45C, &type metadata for SetPrivateDataRequest.Request.RevokeDeveloperApprovalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2DA0);
  }
  return result;
}

unint64_t sub_2360CA26C()
{
  unint64_t result;

  result = qword_2563A2DA8;
  if (!qword_2563A2DA8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB37C, &type metadata for SetPrivateDataRequest.Request.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2DA8);
  }
  return result;
}

unint64_t sub_2360CA2B4()
{
  unint64_t result;

  result = qword_2563A2DB0;
  if (!qword_2563A2DB0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB3A4, &type metadata for SetPrivateDataRequest.Request.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2DB0);
  }
  return result;
}

unint64_t sub_2360CA2FC()
{
  unint64_t result;

  result = qword_2563A2DB8;
  if (!qword_2563A2DB8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB2C4, &type metadata for SetPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2DB8);
  }
  return result;
}

unint64_t sub_2360CA344()
{
  unint64_t result;

  result = qword_2563A2DC0;
  if (!qword_2563A2DC0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB2EC, &type metadata for SetPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2DC0);
  }
  return result;
}

unint64_t sub_2360CA38C()
{
  unint64_t result;

  result = qword_2563A2DC8;
  if (!qword_2563A2DC8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB65C, &type metadata for SetPrivateDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2DC8);
  }
  return result;
}

unint64_t sub_2360CA3D4()
{
  unint64_t result;

  result = qword_2563A2DD0;
  if (!qword_2563A2DD0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB684, &type metadata for SetPrivateDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2DD0);
  }
  return result;
}

unint64_t sub_2360CA41C()
{
  unint64_t result;

  result = qword_2563A2DD8;
  if (!qword_2563A2DD8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB20C, &type metadata for FetchPublicDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2DD8);
  }
  return result;
}

unint64_t sub_2360CA464()
{
  unint64_t result;

  result = qword_2563A2DE0;
  if (!qword_2563A2DE0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB234, &type metadata for FetchPublicDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2DE0);
  }
  return result;
}

unint64_t sub_2360CA4AC()
{
  unint64_t result;

  result = qword_2563A2DE8;
  if (!qword_2563A2DE8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB104, &type metadata for FetchPublicDataRequest.Request.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2DE8);
  }
  return result;
}

unint64_t sub_2360CA4F4()
{
  unint64_t result;

  result = qword_2563A2DF0;
  if (!qword_2563A2DF0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB12C, &type metadata for FetchPublicDataRequest.Request.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2DF0);
  }
  return result;
}

unint64_t sub_2360CA53C()
{
  unint64_t result;

  result = qword_2563A2DF8;
  if (!qword_2563A2DF8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB154, &type metadata for FetchPublicDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2DF8);
  }
  return result;
}

unint64_t sub_2360CA584()
{
  unint64_t result;

  result = qword_2563A2E00;
  if (!qword_2563A2E00)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB17C, &type metadata for FetchPublicDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2E00);
  }
  return result;
}

unint64_t sub_2360CA5CC()
{
  unint64_t result;

  result = qword_25429DBE0;
  if (!qword_25429DBE0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB04C, &type metadata for FetchDataResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DBE0);
  }
  return result;
}

unint64_t sub_2360CA614()
{
  unint64_t result;

  result = qword_25429DC90;
  if (!qword_25429DC90)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DB074, &type metadata for FetchDataResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DC90);
  }
  return result;
}

unint64_t sub_2360CA65C()
{
  unint64_t result;

  result = qword_25429DC68;
  if (!qword_25429DC68)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DAEDC, &type metadata for FetchDataResponse.Response.AllApprovedDevelopersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DC68);
  }
  return result;
}

unint64_t sub_2360CA6A4()
{
  unint64_t result;

  result = qword_25429DC60;
  if (!qword_25429DC60)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DAF04, &type metadata for FetchDataResponse.Response.AllApprovedDevelopersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DC60);
  }
  return result;
}

unint64_t sub_2360CA6EC()
{
  unint64_t result;

  result = qword_25429DC48;
  if (!qword_25429DC48)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DAE24, &type metadata for FetchDataResponse.Response.ApprovedDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DC48);
  }
  return result;
}

unint64_t sub_2360CA734()
{
  unint64_t result;

  result = qword_25429DC40;
  if (!qword_25429DC40)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DAE4C, &type metadata for FetchDataResponse.Response.ApprovedDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DC40);
  }
  return result;
}

unint64_t sub_2360CA77C()
{
  unint64_t result;

  result = qword_25429DC18;
  if (!qword_25429DC18)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DAD6C, &type metadata for FetchDataResponse.Response.AssociatedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DC18);
  }
  return result;
}

unint64_t sub_2360CA7C4()
{
  unint64_t result;

  result = qword_25429DC10;
  if (!qword_25429DC10)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DAD94, &type metadata for FetchDataResponse.Response.AssociatedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DC10);
  }
  return result;
}

unint64_t sub_2360CA80C()
{
  unint64_t result;

  result = qword_25429DC78;
  if (!qword_25429DC78)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DACB4, &type metadata for FetchDataResponse.Response.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DC78);
  }
  return result;
}

unint64_t sub_2360CA854()
{
  unint64_t result;

  result = qword_25429DC70;
  if (!qword_25429DC70)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DACDC, &type metadata for FetchDataResponse.Response.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DC70);
  }
  return result;
}

unint64_t sub_2360CA89C()
{
  unint64_t result;

  result = qword_25429DC58;
  if (!qword_25429DC58)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DABFC, &type metadata for FetchDataResponse.Response.PassbookProvisioningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DC58);
  }
  return result;
}

unint64_t sub_2360CA8E4()
{
  unint64_t result;

  result = qword_25429DC50;
  if (!qword_25429DC50)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DAC24, &type metadata for FetchDataResponse.Response.PassbookProvisioningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DC50);
  }
  return result;
}

unint64_t sub_2360CA92C()
{
  unint64_t result;

  result = qword_25429DC38;
  if (!qword_25429DC38)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DAB44, &type metadata for FetchDataResponse.Response.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DC38);
  }
  return result;
}

unint64_t sub_2360CA974()
{
  unint64_t result;

  result = qword_25429DC30;
  if (!qword_25429DC30)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DAB6C, &type metadata for FetchDataResponse.Response.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DC30);
  }
  return result;
}

unint64_t sub_2360CA9BC()
{
  unint64_t result;

  result = qword_25429DBF0;
  if (!qword_25429DBF0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DAA8C, &type metadata for FetchDataResponse.Response.ShowAppInstallationSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DBF0);
  }
  return result;
}

unint64_t sub_2360CAA04()
{
  unint64_t result;

  result = qword_25429DBE8;
  if (!qword_25429DBE8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DAAB4, &type metadata for FetchDataResponse.Response.ShowAppInstallationSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DBE8);
  }
  return result;
}

unint64_t sub_2360CAA4C()
{
  unint64_t result;

  result = qword_25429DC28;
  if (!qword_25429DC28)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA9D4, &type metadata for FetchDataResponse.Response.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DC28);
  }
  return result;
}

unint64_t sub_2360CAA94()
{
  unint64_t result;

  result = qword_25429DC20;
  if (!qword_25429DC20)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA9FC, &type metadata for FetchDataResponse.Response.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DC20);
  }
  return result;
}

unint64_t sub_2360CAADC()
{
  unint64_t result;

  result = qword_2563A2E08;
  if (!qword_2563A2E08)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA91C, &type metadata for FetchDataResponse.Response.LocalizedStringsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2E08);
  }
  return result;
}

unint64_t sub_2360CAB24()
{
  unint64_t result;

  result = qword_2563A2E10;
  if (!qword_2563A2E10)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA944, &type metadata for FetchDataResponse.Response.LocalizedStringsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2E10);
  }
  return result;
}

unint64_t sub_2360CAB6C()
{
  unint64_t result;

  result = qword_25429DC08;
  if (!qword_25429DC08)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DAF94, &type metadata for FetchDataResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DC08);
  }
  return result;
}

unint64_t sub_2360CABB4()
{
  unint64_t result;

  result = qword_25429DC00;
  if (!qword_25429DC00)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DAFBC, &type metadata for FetchDataResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DC00);
  }
  return result;
}

unint64_t sub_2360CABFC()
{
  unint64_t result;

  result = qword_25429DD48;
  if (!qword_25429DD48)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA864, &type metadata for FetchPrivateDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DD48);
  }
  return result;
}

unint64_t sub_2360CAC44()
{
  unint64_t result;

  result = qword_25429DD40;
  if (!qword_25429DD40)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA88C, &type metadata for FetchPrivateDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DD40);
  }
  return result;
}

unint64_t sub_2360CAC8C()
{
  unint64_t result;

  result = qword_25429DD08;
  if (!qword_25429DD08)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA75C, &type metadata for FetchPrivateDataRequest.Request.AllApprovedDevelopersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DD08);
  }
  return result;
}

unint64_t sub_2360CACD4()
{
  unint64_t result;

  result = qword_25429DD00;
  if (!qword_25429DD00)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA784, &type metadata for FetchPrivateDataRequest.Request.AllApprovedDevelopersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DD00);
  }
  return result;
}

unint64_t sub_2360CAD1C()
{
  unint64_t result;

  result = qword_25429DCE8;
  if (!qword_25429DCE8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA6A4, &type metadata for FetchPrivateDataRequest.Request.ApprovedDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DCE8);
  }
  return result;
}

unint64_t sub_2360CAD64()
{
  unint64_t result;

  result = qword_25429DCE0;
  if (!qword_25429DCE0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA6CC, &type metadata for FetchPrivateDataRequest.Request.ApprovedDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DCE0);
  }
  return result;
}

unint64_t sub_2360CADAC()
{
  unint64_t result;

  result = qword_25429DCC8;
  if (!qword_25429DCC8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA5EC, &type metadata for FetchPrivateDataRequest.Request.AssociatedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DCC8);
  }
  return result;
}

unint64_t sub_2360CADF4()
{
  unint64_t result;

  result = qword_25429DCC0;
  if (!qword_25429DCC0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA614, &type metadata for FetchPrivateDataRequest.Request.AssociatedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DCC0);
  }
  return result;
}

unint64_t sub_2360CAE3C()
{
  unint64_t result;

  result = qword_25429DD18;
  if (!qword_25429DD18)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA59C, &type metadata for FetchPrivateDataRequest.Request.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DD18);
  }
  return result;
}

unint64_t sub_2360CAE84()
{
  unint64_t result;

  result = qword_25429DD10;
  if (!qword_25429DD10)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA5C4, &type metadata for FetchPrivateDataRequest.Request.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DD10);
  }
  return result;
}

unint64_t sub_2360CAECC()
{
  unint64_t result;

  result = qword_25429DCF8;
  if (!qword_25429DCF8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA4E4, &type metadata for FetchPrivateDataRequest.Request.PassbookProvisioningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DCF8);
  }
  return result;
}

unint64_t sub_2360CAF14()
{
  unint64_t result;

  result = qword_25429DCF0;
  if (!qword_25429DCF0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA50C, &type metadata for FetchPrivateDataRequest.Request.PassbookProvisioningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DCF0);
  }
  return result;
}

unint64_t sub_2360CAF5C()
{
  unint64_t result;

  result = qword_25429DCD8;
  if (!qword_25429DCD8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA42C, &type metadata for FetchPrivateDataRequest.Request.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DCD8);
  }
  return result;
}

unint64_t sub_2360CAFA4()
{
  unint64_t result;

  result = qword_25429DCD0;
  if (!qword_25429DCD0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA454, &type metadata for FetchPrivateDataRequest.Request.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DCD0);
  }
  return result;
}

unint64_t sub_2360CAFEC()
{
  unint64_t result;

  result = qword_25429DCA0;
  if (!qword_25429DCA0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA3DC, &type metadata for FetchPrivateDataRequest.Request.ShowAppInstallationSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DCA0);
  }
  return result;
}

unint64_t sub_2360CB034()
{
  unint64_t result;

  result = qword_25429DC98;
  if (!qword_25429DC98)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA404, &type metadata for FetchPrivateDataRequest.Request.ShowAppInstallationSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DC98);
  }
  return result;
}

unint64_t sub_2360CB07C()
{
  unint64_t result;

  result = qword_25429DD28;
  if (!qword_25429DD28)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA324, &type metadata for FetchPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DD28);
  }
  return result;
}

unint64_t sub_2360CB0C4()
{
  unint64_t result;

  result = qword_25429DD20;
  if (!qword_25429DD20)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA34C, &type metadata for FetchPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DD20);
  }
  return result;
}

unint64_t sub_2360CB10C()
{
  unint64_t result;

  result = qword_2563A2E18;
  if (!qword_2563A2E18)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA26C, &type metadata for FetchPrivateDataRequest.Request.LocalizedStringsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2E18);
  }
  return result;
}

unint64_t sub_2360CB154()
{
  unint64_t result;

  result = qword_2563A2E20;
  if (!qword_2563A2E20)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA294, &type metadata for FetchPrivateDataRequest.Request.LocalizedStringsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2E20);
  }
  return result;
}

unint64_t sub_2360CB19C()
{
  unint64_t result;

  result = qword_25429DCB8;
  if (!qword_25429DCB8)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA7AC, &type metadata for FetchPrivateDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DCB8);
  }
  return result;
}

unint64_t sub_2360CB1E4()
{
  unint64_t result;

  result = qword_25429DCB0;
  if (!qword_25429DCB0)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DA7D4, &type metadata for FetchPrivateDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25429DCB0);
  }
  return result;
}

uint64_t sub_2360CB228(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x80000002360DE6B0 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002360DE6D0 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746169636F737361 && a2 == 0xEE00737070416465 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002360DE6F0 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002360DE710 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002360DE730 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002360DE750 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000002360DE770 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002360DD5E0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v5 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_2360CB5A8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x80000002360DE6B0 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002360DE6D0 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746169636F737361 && a2 == 0xEE00737070416465 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002360DE6F0 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002360DE710 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002360DE730 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002360DE750 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6554686372616573 && a2 == 0xEF79726F74697272 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002360DD5E0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v5 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_2360CB958(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000002360DE790 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002360DE6F0 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002360DE7B0 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002360DE730 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000002360DE770)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_2360CBB38(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6554686372616573 && a2 == 0xEF79726F74697272;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002360DE7D0 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002360DE7F0 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000002360DE810 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002360DE830)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t AppVersion.appleItemID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t AppVersion.appleVersionID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t AppVersion.init(appleItemID:appleVersionID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t AppVersion.description.getter()
{
  uint64_t v1;

  v1 = sub_2360D101C();
  sub_2360D0BE4();
  sub_2360D101C();
  sub_2360D0BE4();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2360CBE38()
{
  _BYTE *v0;

  if (*v0)
    return 0x726556656C707061;
  else
    return 0x657449656C707061;
}

uint64_t sub_2360CBE88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360CDA50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2360CBEAC()
{
  sub_2360CC020();
  return sub_2360D1148();
}

uint64_t sub_2360CBED4()
{
  sub_2360CC020();
  return sub_2360D1154();
}

uint64_t AppVersion.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2E28);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360CC020();
  sub_2360D113C();
  v11 = 0;
  sub_2360D1004();
  if (!v2)
  {
    v10 = 1;
    sub_2360D1004();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_2360CC020()
{
  unint64_t result;

  result = qword_2563A2E30;
  if (!qword_2563A2E30)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DCD40, &type metadata for AppVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2E30);
  }
  return result;
}

uint64_t AppVersion.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2E38);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360CC020();
  sub_2360D1124();
  if (!v2)
  {
    v14 = 0;
    v9 = sub_2360D0F74();
    v13 = 1;
    v10 = sub_2360D0F74();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2360CC1AC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AppVersion.init(from:)(a1, a2);
}

uint64_t sub_2360CC1C0(_QWORD *a1)
{
  return AppVersion.encode(to:)(a1);
}

uint64_t AutomaticUpdate.appleItemID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t AutomaticUpdate.alternativeDistributionPackage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AutomaticUpdate() + 20);
  v4 = sub_2360D08D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AutomaticUpdate()
{
  uint64_t result;

  result = qword_2563A2EB0;
  if (!qword_2563A2EB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AutomaticUpdate.account.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AutomaticUpdate() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AutomaticUpdate.installVerificationToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AutomaticUpdate() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AutomaticUpdate.appShareURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AutomaticUpdate();
  return sub_236078AC4(v1 + *(int *)(v3 + 32), a1, &qword_2563A0490);
}

uint64_t AutomaticUpdate.appShareURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AutomaticUpdate() + 32);
  return sub_23609E2AC(a1, v3);
}

uint64_t (*AutomaticUpdate.appShareURL.modify())()
{
  type metadata accessor for AutomaticUpdate();
  return nullsub_1;
}

uint64_t AutomaticUpdate.init(appleItemID:alternativeDistributionPackage:account:installVerificationToken:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (int *)type metadata accessor for AutomaticUpdate();
  v14 = (uint64_t)&a7[v13[8]];
  v15 = sub_2360D08D8();
  v16 = *(_QWORD *)(v15 - 8);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v21(v14, 1, 1, v15);
  *(_QWORD *)a7 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(&a7[v13[5]], a2, v15);
  v17 = &a7[v13[6]];
  *(_QWORD *)v17 = a3;
  *((_QWORD *)v17 + 1) = a4;
  v18 = &a7[v13[7]];
  *(_QWORD *)v18 = a5;
  *((_QWORD *)v18 + 1) = a6;
  sub_236078B4C(v14, &qword_2563A0490);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v21)(v14, 1, 1, v15);
}

uint64_t sub_2360CC468(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2360CC4A4 + 4 * byte_2360DC910[a1]))(0x657449656C707061, 0xEB0000000044496DLL);
}

unint64_t sub_2360CC4A4()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_2360CC4C4()
{
  return 0x746E756F636361;
}

unint64_t sub_2360CC4DC()
{
  return 0xD000000000000018;
}

uint64_t sub_2360CC4F8()
{
  return 0x6572616853707061;
}

uint64_t sub_2360CC518()
{
  unsigned __int8 *v0;

  return sub_2360CC468(*v0);
}

uint64_t sub_2360CC520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2360CDB7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2360CC544()
{
  sub_2360CC780();
  return sub_2360D1148();
}

uint64_t sub_2360CC56C()
{
  sub_2360CC780();
  return sub_2360D1154();
}

uint64_t AutomaticUpdate.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2E40);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2360CC780();
  sub_2360D113C();
  v13 = 0;
  sub_2360D1004();
  if (!v1)
  {
    type metadata accessor for AutomaticUpdate();
    v12 = 1;
    sub_2360D08D8();
    sub_236096E4C(&qword_2563A04D0, MEMORY[0x24BDCDAE0]);
    sub_2360D0FEC();
    v11 = 2;
    sub_2360D0FD4();
    v10 = 3;
    sub_2360D0FD4();
    v9 = 4;
    sub_2360D0FBC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2360CC780()
{
  unint64_t result;

  result = qword_2563A2E48;
  if (!qword_2563A2E48)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DCCF0, &type metadata for AutomaticUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A2E48);
  }
  return result;
}

uint64_t AutomaticUpdate.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  void (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;

  v31 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2360D08D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A2E50);
  v10 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for AutomaticUpdate();
  v37 = MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t *)((char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = (uint64_t)v15 + *(int *)(v37 + 32);
  v32 = v7;
  v33 = v6;
  v17 = *(void (**)(void))(v7 + 56);
  v36 = v16;
  v17();
  v18 = a1[3];
  v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_2360CC780();
  v19 = (uint64_t)v38;
  sub_2360D1124();
  if (v19)
  {
    v20 = v36;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    return sub_236078B4C(v20, &qword_2563A0490);
  }
  else
  {
    v38 = v5;
    v43 = 0;
    v21 = (uint64_t)v15;
    *v15 = sub_2360D0F74();
    v42 = 1;
    sub_236096E4C(&qword_2563A04F0, MEMORY[0x24BDCDB10]);
    v22 = v33;
    sub_2360D0F5C();
    v23 = v37;
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v21 + *(int *)(v37 + 20), v9, v22);
    v41 = 2;
    v24 = sub_2360D0F44();
    v25 = (uint64_t *)(v21 + *(int *)(v23 + 24));
    *v25 = v24;
    v25[1] = v26;
    v40 = 3;
    v27 = sub_2360D0F44();
    v28 = (uint64_t *)(v21 + *(int *)(v23 + 28));
    *v28 = v27;
    v28[1] = v29;
    v39 = 4;
    sub_2360D0F2C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v34);
    sub_23609E2AC((uint64_t)v38, v36);
    sub_2360CCBD8(v21, v31);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    return sub_2360CCC1C(v21);
  }
}

uint64_t sub_2360CCBD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AutomaticUpdate();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2360CCC1C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AutomaticUpdate();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2360CCC58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AutomaticUpdate.init(from:)(a1, a2);
}

uint64_t sub_2360CCC6C(_QWORD *a1)
{
  return AutomaticUpdate.encode(to:)(a1);
}

id MarketplaceExtension.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;

  v6 = type metadata accessor for _MarketplaceExtensionConfiguration.ExportedObject(0, a1, a2, a3);
  result = sub_2360CDE38(v4, v6, v7, v8);
  *a4 = result;
  return result;
}

uint64_t sub_2360CCCC0(void *a1, uint64_t a2)
{
  id v4;

  v4 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2563BBF10);
  objc_msgSend(a1, sel_setExportedInterface_, v4);

  objc_msgSend(a1, sel_setExportedObject_, a2);
  objc_msgSend(a1, sel_resume);
  return 1;
}

uint64_t sub_2360CCD58(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  _QWORD *v4;

  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58) + 16))(a1, a2, a3, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50));
  a4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2360CCDB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v17;

  v7 = sub_2360D07DC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _Block_copy(a5);
  sub_2360D07D0();
  v12 = sub_2360D0BC0();
  v14 = v13;
  *(_QWORD *)(swift_allocObject() + 16) = v11;
  v15 = a1;
  sub_2360CCD58((uint64_t)v10, v12, v14, (void (*)(void))sub_2360CEF48);

  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_2360CCEC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_2360D0B84();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

uint64_t sub_2360CCF20(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  _QWORD *v2;
  char v4;

  v4 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x58) + 32))(a1, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x50));
  return a2(v4 & 1);
}

uint64_t sub_2360CCF7C(void *a1, int a2, void *a3, void *aBlock)
{
  void *v6;
  id v7;
  id v8;

  v6 = _Block_copy(aBlock);
  *(_QWORD *)(swift_allocObject() + 16) = v6;
  v7 = a3;
  v8 = a1;
  sub_2360CCF20((uint64_t)v7, (uint64_t (*)(_QWORD))sub_2360CEF34);

  return swift_release();
}

uint64_t sub_2360CCFFC(uint64_t a1, void (*a2)(uint64_t, unint64_t))
{
  _QWORD *v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD v8[2];
  uint64_t v9;
  _QWORD v10[2];

  v10[0] = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x58) + 24))(a1, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x50));
  v10[1] = v10;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0780);
  v8[0] = sub_2360CEDF8();
  v8[1] = MEMORY[0x23B7EBA68](MEMORY[0x24BEE4AA8], v9, v8);
  v4 = sub_2360D0A04();
  v6 = v5;
  swift_bridgeObjectRelease();
  a2(v4, v6);
  return sub_236077AC4(v4, v6);
}

uint64_t sub_2360CD108(void *a1, int a2, int a3, void *aBlock)
{
  void *v5;
  uint64_t v6;
  id v7;

  v5 = _Block_copy(aBlock);
  v6 = sub_2360D0C08();
  *(_QWORD *)(swift_allocObject() + 16) = v5;
  v7 = a1;
  sub_2360CCFFC(v6, (void (*)(uint64_t, unint64_t))sub_2360CEECC);

  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2360CD198(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v16;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0BA8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2360D0C98();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a1;
  v13[5] = a2;
  v13[6] = v4;
  v13[7] = a3;
  v13[8] = a4;
  sub_236077B70(a1, a2);
  v14 = v4;
  swift_retain();
  sub_2360A27D0((uint64_t)v11, (uint64_t)&unk_2563A3038, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_2360CD290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[19] = a7;
  v8[20] = a8;
  v8[17] = a5;
  v8[18] = a6;
  v8[16] = a4;
  v9 = *MEMORY[0x24BEE4EA0];
  v8[21] = *a6;
  v8[22] = v9;
  v8[23] = type metadata accessor for MarketplaceKitError();
  v8[24] = swift_task_alloc();
  v8[25] = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A3040);
  v8[26] = swift_task_alloc();
  v8[27] = swift_task_alloc();
  v8[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2360CD34C()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v1 = v0[16];
  v2 = v0[17];
  v0[6] = v0 + 4;
  v0[2] = v1;
  v0[3] = v2;
  v0[5] = v0 + 2;
  sub_236077B70(v1, v2);
  v0[7] = MEMORY[0x24BDCDDE8];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A3048);
  v0[8] = v3;
  v0[9] = sub_236077BB4();
  v0[11] = sub_2360CED6C();
  v0[10] = MEMORY[0x23B7EBA68](MEMORY[0x24BEE12D0], v3, v0 + 11);
  sub_2360D09F8();
  v4 = v0[21] & v0[22];
  sub_236077AC4(v0[2], v0[3]);
  v5 = v0[4];
  v0[29] = v5;
  v8 = v4 + 80;
  v7 = *(_QWORD *)(v4 + 80);
  v6 = *(_QWORD *)(v8 + 8);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v6 + 40) + *(_QWORD *)(v6 + 40));
  v9 = (_QWORD *)swift_task_alloc();
  v0[30] = v9;
  *v9 = v0;
  v9[1] = sub_2360CD4E4;
  return v11(v5, v7, v6);
}

uint64_t sub_2360CD4E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 248) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1)
    *(_QWORD *)(v4 + 256) = a1;
  return swift_task_switch();
}

uint64_t sub_2360CD560()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, unint64_t);

  v1 = *(_QWORD **)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 224);
  *v1 = *(_QWORD *)(v0 + 256);
  swift_storeEnumTagMultiPayload();
  sub_2360CEDB0((uint64_t)v1, v2);
  v3 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 208);
  sub_236078AC4(*(_QWORD *)(v0 + 224), v5, &qword_2563A3040);
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 112) = v4;
  *(_QWORD *)(v0 + 120) = MEMORY[0x23B7EBA68](&protocol conformance descriptor for MarketplaceKitServiceResult<A>, v4);
  v6 = sub_2360D0A04();
  if (v3)
  {
    sub_236078B4C(*(_QWORD *)(v0 + 208), &qword_2563A3040);
    return swift_unexpectedError();
  }
  else
  {
    v9 = v6;
    v10 = v7;
    v11 = *(_QWORD *)(v0 + 224);
    v12 = *(void (**)(uint64_t, unint64_t))(v0 + 152);
    sub_236078B4C(*(_QWORD *)(v0 + 208), &qword_2563A3040);
    v12(v9, v10);
    sub_236077AC4(v9, v10);
    sub_236078B4C(v11, &qword_2563A3040);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2360CD6E0()
{
  uint64_t v0;
  void *v1;
  id v2;
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, unint64_t);

  v1 = *(void **)(v0 + 248);
  *(_QWORD *)(v0 + 96) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0610);
  v3 = swift_dynamicCast();
  v4 = *(void **)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 224);
  if ((v3 & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 192);

    sub_236067E34(v6, v5);
    swift_storeEnumTagMultiPayload();

  }
  else
  {

    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
  }
  v8 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 208);
  sub_236078AC4(*(_QWORD *)(v0 + 224), v7, &qword_2563A3040);
  *(_QWORD *)(v0 + 104) = v7;
  *(_QWORD *)(v0 + 112) = v8;
  *(_QWORD *)(v0 + 120) = MEMORY[0x23B7EBA68](&protocol conformance descriptor for MarketplaceKitServiceResult<A>, v8);
  v9 = sub_2360D0A04();
  v11 = v10;
  v12 = *(_QWORD *)(v0 + 224);
  v13 = *(void (**)(uint64_t, unint64_t))(v0 + 152);
  sub_236078B4C(*(_QWORD *)(v0 + 208), &qword_2563A3040);
  v13(v9, v11);
  sub_236077AC4(v9, v11);
  sub_236078B4C(v12, &qword_2563A3040);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2360CD8E8(void *a1, int a2, void *a3, void *aBlock)
{
  void *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;

  v6 = _Block_copy(aBlock);
  v7 = a3;
  v12 = a1;
  v8 = sub_2360D08FC();
  v10 = v9;

  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v6;
  sub_2360CD198(v8, v10, (uint64_t)sub_2360CEECC, v11);
  swift_release();
  sub_236077AC4(v8, v10);

}

void sub_2360CD9A0()
{
  sub_2360CEEA0();
}

id sub_2360CD9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for _MarketplaceExtensionConfiguration.ExportedObject(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_2360CDA08(char *a1)
{
  return (*(uint64_t (**)(char *))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)a1) + 0x50)
                                                       - 8)
                                           + 8))(&a1[*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)a1) + 0x60)]);
}

uint64_t sub_2360CDA34(void *a1)
{
  uint64_t *v1;

  sub_2360CCCC0(a1, *v1);
  return 1;
}

uint64_t sub_2360CDA50(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x657449656C707061 && a2 == 0xEB0000000044496DLL;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726556656C707061 && a2 == 0xEE0044496E6F6973)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2360CDB7C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x657449656C707061 && a2 == 0xEB0000000044496DLL;
  if (v2 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000002360DD220 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E756F636361 && a2 == 0xE700000000000000 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002360DD200 || (sub_2360D1028() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6572616853707061 && a2 == 0xEB000000004C5255)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_2360D1028();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

id sub_2360CDDB8(uint64_t a1)
{
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  objc_super v7;

  v2 = (_QWORD *)(*MEMORY[0x24BEE4EA0] & *(_QWORD *)v1);
  v3 = v2[10];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(&v1[v2[12]], a1, v3);
  v5 = (objc_class *)type metadata accessor for _MarketplaceExtensionConfiguration.ExportedObject(0, v3, v2[11], v4);
  v7.receiver = v1;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_2360CDE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v6;

  v6 = objc_allocWithZone((Class)type metadata accessor for _MarketplaceExtensionConfiguration.ExportedObject(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4));
  return sub_2360CDDB8(a1);
}

ValueMetadata *type metadata accessor for AppVersion()
{
  return &type metadata for AppVersion;
}

uint64_t *initializeBufferWithCopyOfBuffer for AutomaticUpdate(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2360D08D8();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v12(v8, v9, v10);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (uint64_t *)((char *)v4 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (uint64_t *)((char *)v4 + v14);
    v19 = (uint64_t *)((char *)a2 + v14);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = a3[8];
    v22 = (char *)v4 + v21;
    v23 = (char *)a2 + v21;
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v23, 1, v10))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v12(v22, v23, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v22, 0, 1, v10);
    }
  }
  return v4;
}

uint64_t destroy for AutomaticUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2360D08D8();
  v6 = *(_QWORD *)(v5 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = a1 + *(int *)(a2 + 32);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v5);
  return result;
}

_QWORD *initializeWithCopy for AutomaticUpdate(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2360D08D8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (_QWORD *)((char *)a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[8];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23(v22, 1, v9))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v11(v21, v22, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v21, 0, 1, v9);
  }
  return a1;
}

char *assignWithCopy for AutomaticUpdate(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  uint64_t v23;

  *(_QWORD *)a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_2360D08D8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = (_QWORD *)((char *)a2 + v12);
  *(_QWORD *)v13 = *v14;
  *((_QWORD *)v13 + 1) = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = (_QWORD *)((char *)a2 + v15);
  *(_QWORD *)v16 = *v17;
  *((_QWORD *)v16 + 1) = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = &a1[v18];
  v20 = (char *)a2 + v18;
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v7) = v21(&a1[v18], 1, v9);
  v22 = v21(v20, 1, v9);
  if (!(_DWORD)v7)
  {
    if (!v22)
    {
      v11(v19, v20, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  return a1;
}

_QWORD *initializeWithTake for AutomaticUpdate(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2360D08D8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  v13 = a3[8];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v11(v14, v15, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

char *assignWithTake for AutomaticUpdate(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  uint64_t v27;

  *(_QWORD *)a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_2360D08D8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = (_QWORD *)((char *)a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = (char *)a2 + v22;
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v7) = v25(&a1[v22], 1, v9);
  v26 = v25(v24, 1, v9);
  if (!(_DWORD)v7)
  {
    if (!v26)
    {
      v11(v23, v24, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for AutomaticUpdate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2360CE594(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v6 = sub_2360D08D8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for AutomaticUpdate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2360CE64C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_2360D08D8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[5];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[6] + 8) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A0490);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = a4[8];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_2360CE6F4()
{
  unint64_t v0;
  unint64_t v1;

  sub_2360D08D8();
  if (v0 <= 0x3F)
  {
    sub_236071084();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t dispatch thunk of MarketplaceExtension.additionalHeaders(for:account:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of MarketplaceExtension.availableAppVersions(forAppleItemIDs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of MarketplaceExtension.requestFailed(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of MarketplaceExtension.automaticUpdates(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 40) + *(_QWORD *)(a3 + 40));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2360CE824;
  return v9(a1, a2, a3);
}

uint64_t sub_2360CE824(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_2360CE878()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for _MarketplaceExtensionConfiguration.ExportedObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _MarketplaceExtensionConfiguration.ExportedObject);
}

void sub_2360CE8F4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for _MarketplaceExtensionConfiguration(255, *a1, a1[1], a4);
  JUMPOUT(0x23B7EBA68);
}

uint64_t type metadata accessor for _MarketplaceExtensionConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _MarketplaceExtensionConfiguration);
}

uint64_t storeEnumTagSinglePayload for AutomaticUpdate.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2360CE974 + 4 * byte_2360DC91A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2360CE9A8 + 4 * byte_2360DC915[v4]))();
}

uint64_t sub_2360CE9A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360CE9B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360CE9B8);
  return result;
}

uint64_t sub_2360CE9C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360CE9CCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2360CE9D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360CE9D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AutomaticUpdate.CodingKeys()
{
  return &type metadata for AutomaticUpdate.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for AppVersion.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2360CEA40 + 4 * byte_2360DC924[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2360CEA74 + 4 * byte_2360DC91F[v4]))();
}

uint64_t sub_2360CEA74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360CEA7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360CEA84);
  return result;
}

uint64_t sub_2360CEA90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360CEA98);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2360CEA9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360CEAA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppVersion.CodingKeys()
{
  return &type metadata for AppVersion.CodingKeys;
}

unint64_t sub_2360CEAC4()
{
  unint64_t result;

  result = qword_2563A3000;
  if (!qword_2563A3000)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DCBCC, &type metadata for AppVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A3000);
  }
  return result;
}

unint64_t sub_2360CEB0C()
{
  unint64_t result;

  result = qword_2563A3008;
  if (!qword_2563A3008)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DCC84, &type metadata for AutomaticUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A3008);
  }
  return result;
}

uint64_t sub_2360CEB50(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x23B7EBA68](&unk_2360DCCAC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2360CEB80()
{
  unint64_t result;

  result = qword_2563A3010;
  if (!qword_2563A3010)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DCBF4, &type metadata for AutomaticUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A3010);
  }
  return result;
}

unint64_t sub_2360CEBC8()
{
  unint64_t result;

  result = qword_2563A3018;
  if (!qword_2563A3018)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DCC1C, &type metadata for AutomaticUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A3018);
  }
  return result;
}

unint64_t sub_2360CEC10()
{
  unint64_t result;

  result = qword_2563A3020;
  if (!qword_2563A3020)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DCB3C, &type metadata for AppVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563A3020);
  }
  return result;
}

unint64_t sub_2360CEC58()
{
  unint64_t result;

  result = qword_2563A3028;
  if (!qword_2563A3028)
  {
    result = MEMORY[0x23B7EBA68](&unk_2360DCB64, &type metadata for AppVersion.CodingKeys);
    atomic_store(result, &qword_2563A3028);
  }
  return result;
}

uint64_t sub_2360CEC9C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_236077AC4(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2360CECD8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (_QWORD *)v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_2360842F8;
  return sub_2360CD290(a1, v4, v5, v6, v7, v8, v9, v10);
}

unint64_t sub_2360CED6C()
{
  unint64_t result;

  result = qword_2563A3050;
  if (!qword_2563A3050)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for AppVersion, &type metadata for AppVersion);
    atomic_store(result, (unint64_t *)&qword_2563A3050);
  }
  return result;
}

uint64_t sub_2360CEDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563A3040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2360CEDF8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2563A3058;
  if (!qword_2563A3058)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563A3048);
    v2 = sub_2360CEE5C();
    result = MEMORY[0x23B7EBA68](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2563A3058);
  }
  return result;
}

unint64_t sub_2360CEE5C()
{
  unint64_t result;

  result = qword_2563A3060;
  if (!qword_2563A3060)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for AppVersion, &type metadata for AppVersion);
    atomic_store(result, (unint64_t *)&qword_2563A3060);
  }
  return result;
}

void sub_2360CEEA0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_2360CEED0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (id)sub_2360D08F0();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);

}

uint64_t sub_2360CEF10()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_2360CEF34(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

void sub_2360CEF48(uint64_t a1)
{
  uint64_t v1;

  sub_2360CCEC0(a1, *(_QWORD *)(v1 + 16));
}

unint64_t SecureButtonTag.ButtonImagePlacement.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 4;
  if (result < 4)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t SecureButtonTag.ButtonImagePlacement.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_2360CEF78@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return SecureButtonTag.ButtonImagePlacement.init(rawValue:)(*a1, a2);
}

void sub_2360CEF80(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t static SecureButtonTag.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SecureButtonTag.label.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_label);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecureButtonTag.imageName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_imageName);
  swift_bridgeObjectRetain();
  return v1;
}

void SecureButtonTag.imagePlacement.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_imagePlacement);
}

id SecureButtonTag.backgroundColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_backgroundColor);
}

id SecureButtonTag.foregroundColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_foregroundColor);
}

double SecureButtonTag.cornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_cornerRadius);
}

double SecureButtonTag.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_size);
}

double SecureButtonTag.fontSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_fontSize);
}

double SecureButtonTag.borderWidth.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_borderWidth);
}

id SecureButtonTag.borderColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_borderColor);
}

id SecureButtonTag.__allocating_init(label:imageName:imagePlacement:backgroundColor:foregroundColor:cornerRadius:size:fontSize:borderWidth:borderColor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13)
{
  objc_class *v13;
  id v27;

  v27 = objc_allocWithZone(v13);
  return SecureButtonTag.init(label:imageName:imagePlacement:backgroundColor:foregroundColor:cornerRadius:size:fontSize:borderWidth:borderColor:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

id SecureButtonTag.init(label:imageName:imagePlacement:backgroundColor:foregroundColor:cornerRadius:size:fontSize:borderWidth:borderColor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13)
{
  _BYTE *v13;
  objc_class *ObjectType;
  int v28;
  _QWORD *v29;
  _QWORD *v30;
  double *v31;
  objc_super v33;

  ObjectType = (objc_class *)swift_getObjectType();
  v28 = *a5;
  v29 = &v13[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_label];
  *v29 = a1;
  v29[1] = a2;
  v30 = &v13[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_imageName];
  *v30 = a3;
  v30[1] = a4;
  if (v28 == 4)
    LOBYTE(v28) = 1;
  v13[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_imagePlacement] = v28;
  *(_QWORD *)&v13[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_backgroundColor] = a6;
  *(_QWORD *)&v13[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_foregroundColor] = a7;
  *(double *)&v13[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_cornerRadius] = a9;
  v31 = (double *)&v13[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_size];
  *v31 = a10;
  v31[1] = a11;
  *(double *)&v13[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_fontSize] = a12;
  *(double *)&v13[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_borderWidth] = a13;
  *(_QWORD *)&v13[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_borderColor] = a8;
  v33.receiver = v13;
  v33.super_class = ObjectType;
  return objc_msgSendSuper2(&v33, sel_init);
}

id SecureButtonTag.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_2360D0090(a1);

  return v4;
}

id SecureButtonTag.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_2360D0090(a1);

  return v2;
}

Swift::Void __swiftcall SecureButtonTag.encode(with:)(NSCoder with)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  objc_class *v10;
  char *v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  char *v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  char *v31;
  id v32;
  id v33;
  void *v34;
  objc_super v35;
  objc_super v36;
  objc_super v37;

  v3 = (void *)sub_2360D0BA8();
  v4 = (void *)sub_2360D0BA8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3, v4);

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_imageName + 8))
    v5 = sub_2360D0BA8();
  else
    v5 = 0;
  v6 = (void *)sub_2360D0BA8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v5, v6);
  swift_unknownObjectRelease();

  v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_imagePlacement);
  v8 = (void *)sub_2360D0BA8();
  -[objc_class encodeInteger:forKey:](with.super.isa, sel_encodeInteger_forKey_, v7, v8);

  v9 = *(void **)(v1 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_backgroundColor);
  v10 = (objc_class *)type metadata accessor for SerializableColor();
  v11 = (char *)objc_allocWithZone(v10);
  *(_QWORD *)&v11[OBJC_IVAR____TtC15AppDistribution17SerializableColor_underlyingColor] = v9;
  v37.receiver = v11;
  v37.super_class = v10;
  v12 = v9;
  v13 = objc_msgSendSuper2(&v37, sel_init);
  v14 = (void *)sub_2360D0BA8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v13, v14);

  v15 = *(void **)(v1 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_foregroundColor);
  v16 = (char *)objc_allocWithZone(v10);
  *(_QWORD *)&v16[OBJC_IVAR____TtC15AppDistribution17SerializableColor_underlyingColor] = v15;
  v36.receiver = v16;
  v36.super_class = v10;
  v17 = v15;
  v18 = objc_msgSendSuper2(&v36, sel_init);
  v19 = (void *)sub_2360D0BA8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v18, v19);

  v20 = (void *)sub_2360D0968();
  v21 = (void *)sub_2360D0BA8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v20, v21);

  v22 = (void *)sub_2360D0968();
  v23 = (void *)sub_2360D0BA8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v22, v23);

  v24 = (void *)sub_2360D0968();
  v25 = (void *)sub_2360D0BA8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v24, v25);

  v26 = (void *)sub_2360D0968();
  v27 = (void *)sub_2360D0BA8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v26, v27);

  v28 = (void *)sub_2360D0968();
  v29 = (void *)sub_2360D0BA8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v28, v29);

  v30 = *(void **)(v1 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_borderColor);
  v31 = (char *)objc_allocWithZone(v10);
  *(_QWORD *)&v31[OBJC_IVAR____TtC15AppDistribution17SerializableColor_underlyingColor] = v30;
  v35.receiver = v31;
  v35.super_class = v10;
  v32 = v30;
  v33 = objc_msgSendSuper2(&v35, sel_init);
  v34 = (void *)sub_2360D0BA8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v33, v34, v35.receiver, v35.super_class, v36.receiver, v36.super_class, v37.receiver, v37.super_class);

}

uint64_t SecureButtonTag.hash.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = v0;
  sub_2360D1100();
  swift_bridgeObjectRetain();
  sub_2360D0BD8();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_imageName + 8))
  {
    sub_2360D10D0();
    swift_bridgeObjectRetain();
    sub_2360D0BD8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2360D10D0();
  }
  sub_2360D10C4();
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_backgroundColor);
  type metadata accessor for CGColor(0);
  sub_2360D04D8();
  v3 = v2;
  sub_2360D098C();

  v4 = *(id *)(v1 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_foregroundColor);
  sub_2360D098C();

  sub_2360D10DC();
  sub_2360D10DC();
  sub_2360D10DC();
  sub_2360D10DC();
  sub_2360D10DC();
  v5 = *(id *)(v1 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_borderColor);
  sub_2360D098C();

  return sub_2360D10E8();
}

uint64_t SecureButtonTag.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  void *v7;
  id v8;
  char v9;
  id v10;
  char v11;
  id v12;
  char v13;
  char *v15;
  _BYTE v16[24];
  uint64_t v17;

  swift_getObjectType();
  sub_2360BB3F0(a1, (uint64_t)v16);
  if (!v17)
  {
    sub_2360BB134((uint64_t)v16);
    goto LABEL_28;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_28:
    v13 = 0;
    return v13 & 1;
  }
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_label) == *(_QWORD *)&v15[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_label]
    && *(_QWORD *)(v1 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_label + 8) == *(_QWORD *)&v15[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_label + 8];
  if (!v3 && (sub_2360D1028() & 1) == 0)
    goto LABEL_27;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_imageName + 8);
  v5 = *(_QWORD *)&v15[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_imageName + 8];
  if (v4)
  {
    if (!v5)
      goto LABEL_27;
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_imageName) == *(_QWORD *)&v15[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_imageName]
      && v4 == v5;
    if (!v6 && (sub_2360D1028() & 1) == 0)
      goto LABEL_27;
  }
  else if (v5)
  {
LABEL_27:

    goto LABEL_28;
  }
  if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_imagePlacement) != v15[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_imagePlacement])
    goto LABEL_27;
  type metadata accessor for CGColor(0);
  v7 = *(void **)&v15[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_backgroundColor];
  sub_2360D04D8();
  v8 = v7;
  v9 = sub_2360D0980();

  if ((v9 & 1) == 0)
    goto LABEL_27;
  v10 = *(id *)&v15[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_foregroundColor];
  v11 = sub_2360D0980();

  if ((v11 & 1) == 0
    || *(double *)(v1 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_cornerRadius) != *(double *)&v15[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_cornerRadius]
    || *(double *)(v1 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_size) != *(double *)&v15[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_size]
    || *(double *)(v1 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_size + 8) != *(double *)&v15[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_size + 8]
    || *(double *)(v1 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_fontSize) != *(double *)&v15[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_fontSize]
    || *(double *)(v1 + OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_borderWidth) != *(double *)&v15[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_borderWidth])
  {
    goto LABEL_27;
  }
  v12 = *(id *)&v15[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_borderColor];
  v13 = sub_2360D0980();

  return v13 & 1;
}

id SecureButtonTag.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SecureButtonTag.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SecureButtonTag.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_2360CFE04(void *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v2 = sub_2360D0C2C();
  *(_QWORD *)(v2 + 16) = 4;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  UISGetColorSRGBComponents();
  if (!*(_QWORD *)(v2 + 16))
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = (void *)sub_2360D0968();
  v4 = (void *)sub_2360D0BA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  if (*(_QWORD *)(v2 + 16) < 2uLL)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v5 = (void *)sub_2360D0968();
  v6 = (void *)sub_2360D0BA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  if (*(_QWORD *)(v2 + 16) < 3uLL)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v7 = (void *)sub_2360D0968();
  v8 = (void *)sub_2360D0BA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);

  if (*(_QWORD *)(v2 + 16) >= 4uLL)
  {
    v9 = (void *)sub_2360D0968();
    v10 = (id)sub_2360D0BA8();
    objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_9:
  __break(1u);
}

id sub_2360D0050()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SerializableColor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_2360D0090(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  _BYTE *v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  char v13;
  uint64_t v14;
  void *v15;
  void *v16;
  CGColorRef GenericRGB;
  uint64_t v18;
  void *v19;
  void *v20;
  CGColorRef v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  CGColorRef v41;
  objc_super v43;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_2360D0794();
  v5 = v2;
  v6 = sub_2360D0D70();
  if (v6)
  {
    v7 = (void *)v6;
    sub_2360D0BB4();

  }
  swift_bridgeObjectRelease();
  v8 = &v5[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_label];
  *v8 = 0;
  v8[1] = 0xE000000000000000;
  v9 = sub_2360D0D70();
  if (v9)
  {
    v10 = (void *)v9;
    sub_2360D0BB4();

  }
  *(_OWORD *)&v5[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_imageName] = 0uLL;
  v11 = (void *)sub_2360D0BA8();
  v12 = objc_msgSend(a1, sel_decodeIntegerForKey_, v11);

  if ((unint64_t)v12 >= 4)
    v13 = 1;
  else
    v13 = (char)v12;
  v5[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_imagePlacement] = v13;
  type metadata accessor for SerializableColor();
  v14 = sub_2360D0D70();
  if (!v14
    || (v15 = (void *)v14,
        v16 = *(void **)(v14 + OBJC_IVAR____TtC15AppDistribution17SerializableColor_underlyingColor),
        GenericRGB = v16,
        v15,
        !v16))
  {
    GenericRGB = CGColorCreateGenericRGB(0.0, 0.0, 0.0, 0.0);
  }
  *(_QWORD *)&v5[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_backgroundColor] = GenericRGB;
  v18 = sub_2360D0D70();
  if (!v18
    || (v19 = (void *)v18,
        v20 = *(void **)(v18 + OBJC_IVAR____TtC15AppDistribution17SerializableColor_underlyingColor),
        v21 = v20,
        v19,
        !v20))
  {
    v21 = CGColorCreateGenericRGB(1.0, 1.0, 1.0, 1.0);
  }
  *(_QWORD *)&v5[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_foregroundColor] = v21;
  v22 = (void *)sub_2360D0BA8();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v22);
  v24 = v23;

  *(_QWORD *)&v5[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_cornerRadius] = v24;
  v25 = (void *)sub_2360D0BA8();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v25);
  v27 = v26;

  v28 = (void *)sub_2360D0BA8();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v28);
  v30 = v29;

  v31 = &v5[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_size];
  *v31 = v27;
  v31[1] = v30;
  v32 = (void *)sub_2360D0BA8();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v32);
  v34 = v33;

  *(_QWORD *)&v5[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_fontSize] = v34;
  v35 = (void *)sub_2360D0BA8();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v35);
  v37 = v36;

  *(_QWORD *)&v5[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_borderWidth] = v37;
  v38 = sub_2360D0D70();
  if (!v38
    || (v39 = (void *)v38,
        v40 = *(void **)(v38 + OBJC_IVAR____TtC15AppDistribution17SerializableColor_underlyingColor),
        v41 = v40,
        v39,
        !v40))
  {
    v41 = CGColorCreateGenericRGB(1.0, 1.0, 1.0, 0.0);
  }
  *(_QWORD *)&v5[OBJC_IVAR____TtC15AppDistribution15SecureButtonTag_borderColor] = v41;

  v43.receiver = v5;
  v43.super_class = ObjectType;
  return objc_msgSendSuper2(&v43, sel_init);
}

uint64_t type metadata accessor for SerializableColor()
{
  return objc_opt_self();
}

unint64_t sub_2360D04D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2563A30C8;
  if (!qword_2563A30C8)
  {
    type metadata accessor for CGColor(255);
    result = MEMORY[0x23B7EBA68](&unk_2360D18D8, v1);
    atomic_store(result, (unint64_t *)&qword_2563A30C8);
  }
  return result;
}

unint64_t sub_2360D0524()
{
  unint64_t result;

  result = qword_2563A30D8;
  if (!qword_2563A30D8)
  {
    result = MEMORY[0x23B7EBA68](&protocol conformance descriptor for SecureButtonTag.ButtonImagePlacement, &type metadata for SecureButtonTag.ButtonImagePlacement);
    atomic_store(result, (unint64_t *)&qword_2563A30D8);
  }
  return result;
}

uint64_t type metadata accessor for SecureButtonTag()
{
  return objc_opt_self();
}

uint64_t method lookup function for SecureButtonTag()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SecureButtonTag.__allocating_init(label:imageName:imagePlacement:backgroundColor:foregroundColor:cornerRadius:size:fontSize:borderWidth:borderColor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of SecureButtonTag.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t storeEnumTagSinglePayload for SecureButtonTag.ButtonImagePlacement(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2360D05F0 + 4 * byte_2360DCD95[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2360D0624 + 4 * byte_2360DCD90[v4]))();
}

uint64_t sub_2360D0624(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360D062C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2360D0634);
  return result;
}

uint64_t sub_2360D0640(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2360D0648);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2360D064C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2360D0654(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonTag.ButtonImagePlacement()
{
  return &type metadata for SecureButtonTag.ButtonImagePlacement;
}

id sub_2360D0670(void *a1)
{
  void *v1;
  char *v3;
  void *v4;
  double v5;
  CGFloat v6;
  void *v7;
  double v8;
  CGFloat v9;
  void *v10;
  double v11;
  CGFloat v12;
  void *v13;
  double v14;
  CGFloat v15;
  objc_super v17;

  v3 = v1;
  v4 = (void *)sub_2360D0BA8();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v4);
  v6 = v5;

  v7 = (void *)sub_2360D0BA8();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v7);
  v9 = v8;

  v10 = (void *)sub_2360D0BA8();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v10);
  v12 = v11;

  v13 = (void *)sub_2360D0BA8();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v13);
  v15 = v14;

  *(_QWORD *)&v3[OBJC_IVAR____TtC15AppDistribution17SerializableColor_underlyingColor] = CGColorCreateSRGB(v6, v9, v12, v15);
  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for SerializableColor();
  return objc_msgSendSuper2(&v17, sel_init);
}

unint64_t sub_2360D0794()
{
  unint64_t result;

  result = qword_2563A31F0;
  if (!qword_2563A31F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2563A31F0);
  }
  return result;
}

uint64_t sub_2360D07D0()
{
  return MEMORY[0x24BDCB068]();
}

uint64_t sub_2360D07DC()
{
  return MEMORY[0x24BDCB0C0]();
}

uint64_t sub_2360D07E8()
{
  return MEMORY[0x24BDCB430]();
}

uint64_t sub_2360D07F4()
{
  return MEMORY[0x24BDCB588]();
}

uint64_t sub_2360D0800()
{
  return MEMORY[0x24BDCB960]();
}

uint64_t sub_2360D080C()
{
  return MEMORY[0x24BDCB980]();
}

uint64_t sub_2360D0818()
{
  return MEMORY[0x24BDCB988]();
}

uint64_t sub_2360D0824()
{
  return MEMORY[0x24BDCBA58]();
}

uint64_t sub_2360D0830()
{
  return MEMORY[0x24BDCBAB0]();
}

uint64_t sub_2360D083C()
{
  return MEMORY[0x24BDCBAC8]();
}

uint64_t sub_2360D0848()
{
  return MEMORY[0x24BDCBAE0]();
}

uint64_t sub_2360D0854()
{
  return MEMORY[0x24BDCBB78]();
}

uint64_t sub_2360D0860()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_2360D086C()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_2360D0878()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_2360D0884()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_2360D0890()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_2360D089C()
{
  return MEMORY[0x24BDCCA20]();
}

uint64_t sub_2360D08A8()
{
  return MEMORY[0x24BDCCA40]();
}

uint64_t sub_2360D08B4()
{
  return MEMORY[0x24BDCCA48]();
}

uint64_t sub_2360D08C0()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_2360D08CC()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_2360D08D8()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_2360D08E4()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_2360D08F0()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_2360D08FC()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_2360D0908()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_2360D0914()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_2360D0920()
{
  return MEMORY[0x24BEE5C38]();
}

uint64_t sub_2360D092C()
{
  return MEMORY[0x24BEE5C40]();
}

uint64_t sub_2360D0938()
{
  return MEMORY[0x24BEE5C48]();
}

uint64_t sub_2360D0944()
{
  return MEMORY[0x24BEE5C50]();
}

uint64_t sub_2360D0950()
{
  return MEMORY[0x24BEE5C58]();
}

uint64_t sub_2360D095C()
{
  return MEMORY[0x24BEE5C60]();
}

uint64_t sub_2360D0968()
{
  return MEMORY[0x24BDCF760]();
}

uint64_t sub_2360D0974()
{
  return MEMORY[0x24BE30BE0]();
}

uint64_t sub_2360D0980()
{
  return MEMORY[0x24BEE5118]();
}

uint64_t sub_2360D098C()
{
  return MEMORY[0x24BEE5120]();
}

uint64_t sub_2360D0998()
{
  return MEMORY[0x24BEE5130]();
}

uint64_t sub_2360D09A4()
{
  return MEMORY[0x24BDDABB0]();
}

uint64_t sub_2360D09B0()
{
  return MEMORY[0x24BDDABD0]();
}

uint64_t sub_2360D09BC()
{
  return MEMORY[0x24BDDAC28]();
}

uint64_t sub_2360D09C8()
{
  return MEMORY[0x24BDDAD00]();
}

uint64_t sub_2360D09D4()
{
  return MEMORY[0x24BDDAD38]();
}

uint64_t sub_2360D09E0()
{
  return MEMORY[0x24BDDAD40]();
}

uint64_t sub_2360D09EC()
{
  return MEMORY[0x24BDDAD48]();
}

uint64_t sub_2360D09F8()
{
  return MEMORY[0x24BDDAD58]();
}

uint64_t sub_2360D0A04()
{
  return MEMORY[0x24BDDAD60]();
}

uint64_t sub_2360D0A10()
{
  return MEMORY[0x24BDDAD68]();
}

uint64_t sub_2360D0A1C()
{
  return MEMORY[0x24BDDAD70]();
}

uint64_t sub_2360D0A28()
{
  return MEMORY[0x24BDDAD78]();
}

uint64_t sub_2360D0A34()
{
  return MEMORY[0x24BDDAD88]();
}

uint64_t sub_2360D0A40()
{
  return MEMORY[0x24BDDAD90]();
}

uint64_t sub_2360D0A4C()
{
  return MEMORY[0x24BDDAD98]();
}

uint64_t sub_2360D0A58()
{
  return MEMORY[0x24BDDADA0]();
}

uint64_t sub_2360D0A64()
{
  return MEMORY[0x24BDDADA8]();
}

uint64_t sub_2360D0A70()
{
  return MEMORY[0x24BDDADB0]();
}

uint64_t sub_2360D0A7C()
{
  return MEMORY[0x24BDDADB8]();
}

uint64_t sub_2360D0A88()
{
  return MEMORY[0x24BDDADC0]();
}

uint64_t sub_2360D0A94()
{
  return MEMORY[0x24BDDADC8]();
}

uint64_t sub_2360D0AA0()
{
  return MEMORY[0x24BDDADD0]();
}

uint64_t sub_2360D0AAC()
{
  return MEMORY[0x24BDDADE0]();
}

uint64_t sub_2360D0AB8()
{
  return MEMORY[0x24BDDADE8]();
}

uint64_t sub_2360D0AC4()
{
  return MEMORY[0x24BDDADF0]();
}

uint64_t sub_2360D0AD0()
{
  return MEMORY[0x24BDDADF8]();
}

uint64_t sub_2360D0ADC()
{
  return MEMORY[0x24BDDAE00]();
}

uint64_t sub_2360D0AE8()
{
  return MEMORY[0x24BDDAE08]();
}

uint64_t sub_2360D0AF4()
{
  return MEMORY[0x24BDDAE10]();
}

uint64_t sub_2360D0B00()
{
  return MEMORY[0x24BDDAE18]();
}

uint64_t sub_2360D0B0C()
{
  return MEMORY[0x24BDDAE28]();
}

uint64_t sub_2360D0B18()
{
  return MEMORY[0x24BDDAE30]();
}

uint64_t sub_2360D0B24()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_2360D0B30()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_2360D0B3C()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_2360D0B48()
{
  return MEMORY[0x24BEE5448]();
}

uint64_t sub_2360D0B54()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_2360D0B60()
{
  return MEMORY[0x24BEE54B0]();
}

uint64_t sub_2360D0B6C()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_2360D0B78()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_2360D0B84()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_2360D0B90()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_2360D0B9C()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_2360D0BA8()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_2360D0BB4()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_2360D0BC0()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_2360D0BCC()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_2360D0BD8()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_2360D0BE4()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_2360D0BF0()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_2360D0BFC()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_2360D0C08()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_2360D0C14()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_2360D0C20()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_2360D0C2C()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_2360D0C38()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_2360D0C44()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_2360D0C50()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_2360D0C5C()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_2360D0C68()
{
  return MEMORY[0x24BEE6920]();
}

uint64_t sub_2360D0C74()
{
  return MEMORY[0x24BEE6928]();
}

uint64_t sub_2360D0C80()
{
  return MEMORY[0x24BEE6940]();
}

uint64_t sub_2360D0C8C()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_2360D0C98()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_2360D0CA4()
{
  return MEMORY[0x24BEE69A8]();
}

uint64_t sub_2360D0CB0()
{
  return MEMORY[0x24BEE69F8]();
}

uint64_t sub_2360D0CBC()
{
  return MEMORY[0x24BEE6A50]();
}

uint64_t sub_2360D0CC8()
{
  return MEMORY[0x24BEE6A58]();
}

uint64_t sub_2360D0CD4()
{
  return MEMORY[0x24BEE6AD0]();
}

uint64_t sub_2360D0CE0()
{
  return MEMORY[0x24BEE6B00]();
}

uint64_t sub_2360D0CEC()
{
  return MEMORY[0x24BEE6B10]();
}

uint64_t sub_2360D0CF8()
{
  return MEMORY[0x24BEE1930]();
}

uint64_t sub_2360D0D04()
{
  return MEMORY[0x24BEE19B8]();
}

uint64_t sub_2360D0D10()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_2360D0D1C()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_2360D0D28()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_2360D0D34()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_2360D0D40()
{
  return MEMORY[0x24BDCFFB0]();
}

uint64_t sub_2360D0D4C()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_2360D0D58()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_2360D0D64()
{
  return MEMORY[0x24BEE57B0]();
}

uint64_t sub_2360D0D70()
{
  return MEMORY[0x24BDD0170]();
}

uint64_t sub_2360D0D7C()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_2360D0D88()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_2360D0D94()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_2360D0DA0()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_2360D0DAC()
{
  return MEMORY[0x24BEE2150]();
}

uint64_t sub_2360D0DB8()
{
  return MEMORY[0x24BEE2168]();
}

uint64_t sub_2360D0DC4()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_2360D0DD0()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_2360D0DDC()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_2360D0DE8()
{
  return MEMORY[0x24BEE2330]();
}

uint64_t sub_2360D0DF4()
{
  return MEMORY[0x24BEE2340]();
}

uint64_t sub_2360D0E00()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_2360D0E0C()
{
  return MEMORY[0x24BEE2360]();
}

uint64_t sub_2360D0E18()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_2360D0E24()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_2360D0E30()
{
  return MEMORY[0x24BEE24C8]();
}

uint64_t sub_2360D0E3C()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_2360D0E48()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_2360D0E54()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_2360D0E60()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_2360D0E6C()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_2360D0E78()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_2360D0E84()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_2360D0E90()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_2360D0E9C()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_2360D0EA8()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_2360D0EB4()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_2360D0EC0()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_2360D0ECC()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_2360D0ED8()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_2360D0EE4()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_2360D0EF0()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_2360D0EFC()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_2360D0F08()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_2360D0F14()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_2360D0F20()
{
  return MEMORY[0x24BEE32F8]();
}

uint64_t sub_2360D0F2C()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_2360D0F38()
{
  return MEMORY[0x24BEE3348]();
}

uint64_t sub_2360D0F44()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_2360D0F50()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_2360D0F5C()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_2360D0F68()
{
  return MEMORY[0x24BEE3398]();
}

uint64_t sub_2360D0F74()
{
  return MEMORY[0x24BEE33C0]();
}

uint64_t sub_2360D0F80()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_2360D0F8C()
{
  return MEMORY[0x24BEE33E0]();
}

uint64_t sub_2360D0F98()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_2360D0FA4()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_2360D0FB0()
{
  return MEMORY[0x24BEE3448]();
}

uint64_t sub_2360D0FBC()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_2360D0FC8()
{
  return MEMORY[0x24BEE3490]();
}

uint64_t sub_2360D0FD4()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_2360D0FE0()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_2360D0FEC()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_2360D0FF8()
{
  return MEMORY[0x24BEE34E8]();
}

uint64_t sub_2360D1004()
{
  return MEMORY[0x24BEE3510]();
}

uint64_t sub_2360D1010()
{
  return MEMORY[0x24BEE3520]();
}

uint64_t sub_2360D101C()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_2360D1028()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_2360D1034()
{
  return MEMORY[0x24BEE3A88]();
}

uint64_t sub_2360D1040()
{
  return MEMORY[0x24BEE3B20]();
}

uint64_t sub_2360D104C()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_2360D1058()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_2360D1064()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_2360D1070()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_2360D107C()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_2360D1088()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_2360D1094()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_2360D10A0()
{
  return MEMORY[0x24BEE42C0]();
}

uint64_t sub_2360D10AC()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_2360D10B8()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_2360D10C4()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_2360D10D0()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_2360D10DC()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_2360D10E8()
{
  return MEMORY[0x24BEE4320]();
}

uint64_t sub_2360D10F4()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_2360D1100()
{
  return MEMORY[0x24BEE4330]();
}

uint64_t sub_2360D110C()
{
  return MEMORY[0x24BEE4408]();
}

uint64_t sub_2360D1118()
{
  return MEMORY[0x24BEE45F8]();
}

uint64_t sub_2360D1124()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_2360D1130()
{
  return MEMORY[0x24BEE4628]();
}

uint64_t sub_2360D113C()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_2360D1148()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_2360D1154()
{
  return MEMORY[0x24BEE4A10]();
}

CGColorRef CGColorCreateGenericRGB(CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
  return (CGColorRef)MEMORY[0x24BDBDAA8](red, green, blue, alpha);
}

CGColorRef CGColorCreateSRGB(CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
  return (CGColorRef)MEMORY[0x24BDBDAB0](red, green, blue, alpha);
}

uint64_t MKBGetDeviceLockState()
{
  return MEMORY[0x24BE67168]();
}

uint64_t UISGetColorSRGBComponents()
{
  return MEMORY[0x24BEBEC68]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x24BDAF170](name, out_token, queue, handler);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x24BEE4C70]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x24BEE4DE8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x24BEE4ED0]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_isCurrentExecutor()
{
  return MEMORY[0x24BEE7250]();
}

uint64_t swift_task_reportUnexpectedExecutor()
{
  return MEMORY[0x24BEE7270]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

